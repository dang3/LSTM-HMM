movsb
dec
dec
adc
adcb
jo
mov
xorl
in
inc
push
push
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
sub
mov
mov
pusha
call
add
pop
lods
pop
std
in
jl
sub
adc
cmp
pandn
fs
jns
popf
das
jg
push
lds
xlat
push
mov
sub
push
push
lea
push
subl
lea
push
subl
lea
push
mov
push
subl
mov
add
call
pop
mov
xor
adc
sub
mov
popl
mov
lea
mov
mov
add
push
pop
xor
lea
push
popl
pushl
pop
dec
lea
and
pushl
lea
pop
repz
add
cmp
jne
mov
pop
ret
ja
icebp
stos
jae
push
stc
loopne
push
fbstp
out
xor
loope
sbb
cmpl
arpl
shl
and
cmpsl
nop
xor
es
loopne
pop
mov
and
sub
push
mov
sub
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
in
dec
mov
js
pushf
push
jle
mov
ret
cmp
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
sub
in
xor
fcompl
inc
fisubrl
push
sub
pop
sub
movsl
aam
mov
lods
and
xchg
inc
insl
outsl
cmp
pop
push
mov
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
stos
xchg
jp
xchg
out
mov
cwtl
test
xchg
inc
sbbb
in
sub
push
push
push
push
push
call
add
pop
lea
pop
mov
ret
add
in
sub
push
pushl
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
or
aam
in
mov
es
daa
inc
data16
mov
cmc
fwait
mov
cmp
cmp
mov
das
push
mov
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
js
jge
adc
push
add
pop
mov
inc
sub
sub
push
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
outsb
ret
leave
sub
adc
sbb
and
inc
push
pop
clc
sbb
sub
lods
mov
shl
pushl
pop
lea
mov
mov
add
stos
mov
push
pop
cmp
je
mov
add
mov
and
add
add
mov
add
inc
and
add
and
add
add
shlb
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
mov
add
add
add
dec
and
add
add
jp
add
jo
add
and
add
and
add
and
add
and
add
add
hlt
and
add
add
test
add
push
and
add
add
add
and
add
add
add
add
hlt
and
add
and
add
and
add
add
and
add
add
add
add
lock
add
add
add
add
jl
add
pusha
and
add
add
enter
jo
add
shlb
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
mov
add
add
add
dec
and
add
add
jp
add
jo
add
and
add
and
add
and
add
and
add
add
hlt
and
add
add
test
add
push
and
add
add
add
and
add
add
add
add
imul
je
imul
push
add
mov
push
insb
gs
inc
add
outsl
jae
dec
popa
outsb
fs
add
inc
outsl
jo
inc
imul
gs
fs
outsl
outsb
jae
insb
gs
add
dec
add
insb
outsb
push
add
add
fs
imul
add
rolb
dec
gs
jo
gs
jb
jns
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
inc
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
push
add
add
je
outsl
imul
jbe
jae
add
add
popa
jo
imul
inc
gs
gs
inc
je
insl
add
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
push
add
fs
je
insl
inc
add
aad
inc
gs
jb
jbe
push
jns
gs
add
add
je
imul
bound
gs
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
imul
jb
je
arpl
add
fwait
add
je
jbe
outsb
je
add
inc
outsl
insl
insl
popa
outsb
fs
imul
push
dec
inc
dec
xor
cs
insb
add
or
push
gs
jb
inc
jb
outsl
jb
push
add
outsb
fs
push
add
inc
push
inc
jae
jb
outsl
jb
or
push
gs
jb
inc
jb
outsl
jb
pop
add
addr16
outsl
js
add
add
addr16
outsl
js
add
add
addr16
outsl
js
add
inc
jb
dec
jae
add
push
add
outsb
fs
push
add
inc
push
inc
jae
jb
outsl
jb
add
inc
jb
dec
jae
add
add
inc
jb
dec
jae
add
push
add
outsb
fs
push
inc
push
push
push
dec
push
cs
insb
add
add
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
add
inc
insb
insb
push
imul
jb
gs
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
gs
je
inc
js
arpl
imul
outsw
jb
add
inc
dec
inc
dec
inc
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
push
add
test
add
cmp
add
add
add
add
add
xchg
add
add
add
add
add
add
inc
inc
add
lods
fadds
xor
add
add
int3
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
xchg
xchg
xchg
add
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
stos
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jle
jp
jp
lods
stos
lods
add
cmpsl
test
mov
mov
mov
ret
lret
lret
lret
int
rcl
in
rcl
shl
iret
rcl
hlt
into
into
into
hlt
enter
leave
out
in
mov
mov
stos
stos
lods
lea
cltd
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
lahf
add
mov
mov
leave
lret
rcl
sar
xlat
xlat
fdivr
xlat
fcom
fdivr
aam
aad
iret
iret
iret
dec
int
aad
rcl
sar
ret
vfmsub231pd
out
scas
scas
scas
iret
mov
xchg
and
add
push
add
add
add
add
add
add
add
add
stos
lods
lods
add
lods
scas
sbb
mov
jnp
mov
mov
dec
leave
lret
ror
aam
aam
fcom
fcom
fdivr
aad
dec
int
dec
int3
int
aam
aad
into
into
int
mov
mov
mov
std
cmpsb
test
ljmp
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
push
pop
pop
add
dec
add
pop
add
push
or
inc
or
sbb
push
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
leave
dec
int
call
rcl
fcom
xlat
call
xlat
xlat
call
aad
dec
into
int
lret
lret
int3
int
inc
mov
mov
mov
mov
cmpsl
test
jmp
fwait
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
bound
pop
fs
sbb
das
or
push
push
xor
cmp
aaa
cmp
cmp
adc
push
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
sarb
enter
ror
sar
aam
aam
aad
aam
rcl
sar
enter
mov
inc
ret
mov
mov
ljmp
mov
sahf
cwtl
xchg
xchg
lcall
addl
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jo
jge
jge
jle
jle
jb
jno
popa
popa
arpl
cmp
inc
inc
mov
outsl
jo
nop
popa
bound
inc
inc
inc
xor
add
add
add
add
movsl
movsl
movsl
add
mov
mov
mov
mov
mov
mov
mov
dec
leave
enter
leave
dec
lret
enter
ret
mov
mov
ljmp
movsb
movsb
lcall
xchg
xchg
xchg
xchg
xchg
cwtl
xchg
xchg
cltd
lcall
ds
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
outsl
jo
pop
pop
pop
or
pusha
xchg
mov
incb
jnp
idivb
jl
jo
jo
push
data16
jae
jle
jle
js
jp
gs
inc
inc
cmp
pop
pop
sbb
movups
stos
lods
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
test
lcall
incl
addl
xchg
xchg
xchg
sahf
lahf
mov
ficoms
nop
nop
jle
jp
pop
cs
cs
add
add
add
add
add
add
add
add
add
add
mov
pop
push
addl
in
mov
incl
mov
std
xchg
jg
jno
jb
jne
jne
jge
jg
test
jp
push
cmp
ss
jle
fwait
fwait
lcall
test
icebp
lods
lods
lods
sti
stos
stos
stos
lods
stos
stos
test
test
std
lcall
decl
jg
jp
jns
jnp
jnp
xchg
xchg
movsl
mov
mov
mov
mov
mov
mov
mov
scas
scas
stos
xchg
sbb
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
nop
xchg
incl
xchg
mov
std
cwtl
cwtl
cwtl
stc
xchg
xchg
xchg
in
mov
or
mov
mov
or
or
dec
insl
imul
xchg
leave
fwait
fwait
cltd
fistps
cltd
lcall
mov
xchg
mov
mov
fwait
jmp
scas
mov
mov
mov
mov
mov
std
mov
mov
movsb
mov
jl
scas
test
add
pop
adc
test
call
lcall
incl
mov
xchg
xchg
xchg
sahf
pushf
popf
std
movsl
movsl
movsl
stc
mov
xchg
xchg
in
nop
nop
in
test
push
jne
or
add
or
inc
es
push
dec
dec
dec
data16
jno
mov
xchg
rclb
xchg
xchg
std
lea
nop
call
mov
cmpsl
ljmp
test
pushl
mov
test
rolb
mov
mov
ljmp
mov
add
pop
pop
adc
mov
jmp
pushf
cltd
lcall
mov
nop
xchg
nop
decl
xchg
xchg
pushf
popf
pushf
movsb
mov
stos
movsl
movsl
movsb
negl
jnp
movsl
push
push
push
outsl
dec
dec
dec
pushaw
popa
popa
jne
jae
mov
jge
addl
int
xchg
xchg
in
nop
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
xor
js
mov
movsl
mov
mov
lods
stos
mov
movsl
mov
add
mov
add
pusha
adc
mov
ljmp
sahf
decl
nop
xchg
call
xchg
xchg
call
xchg
xchg
fwait
fwait
cltd
lcall
mov
mov
lcall
nop
xchg
les
cltd
in
xchg
xchg
out
lea
stc
xchg
xchg
std
xchg
je
fwait
push
test
movsb
dec
cmp
inc
jnp
mov
jnp
mov
jb
mov
outsl
ljmp
adc
lods
or
ljmp
aas
jle
mov
mov
lods
pushf
mov
movsb
movsb
add
mov
add
pop
adc
mov
ljmp
sahf
call
xchg
xchg
lcall
sahf
pushf
jmp
pushf
sahf
lcall
xchg
xchg
call
xchg
nop
call
fwait
cld
cwtl
xchg
sahf
stc
sahf
lcall
popf
mov
xchg
insb
xchg
xchg
pop
jge
xchg
dec
jp
cltd
jbe,pt
cltd
sub
sahf
pop
push
jmp
adc
test
ljmp
ljmp
adc
mov
imul
mov
fwait
scas
mov
scas
lods
scas
movsl
movsl
mov
add
add
add
add
add
pop
pop
adc
mov
mov
pushf
call
sahf
sahf
lcall
mov
mov
call
mov
decl
jg
xchg
ja
cltd
jno
lcall
call
sub
decl
or
call
add
fwait
add
lahf
add
ljmp
pushl
pop
jno
mov
outsb
mov
and
mov
and
mov
xchg
scas
mov
scas
lods
mov
sahf
sahf
sahf
add
add
add
add
add
pop
pop
adc
lods
mov
mov
cltd
pushf
lcall
movsl
mov
jmp
stos
test
cmpsl
cmpsb
test
fwait
lcall
mov
decl
cmp
mov
popa
decl
pop
incl
add
incl
add
lea
pop
decl
add
fwait
add
sahf
add
test
popa
pushl
daa
jbe
mov
sub
sub
inc
sub
inc
sub
leave
xor
dec
inc
mov
enter
sarb
movsl
movsb
mov
add
add
add
add
add
push
push
adc
test
ljmp
sahf
jmp
test
stos
ljmp
mov
ljmp
mov
mov
mov
popa
incl
or
incl
add
incl
push
incl
push
decl
push
call
add
sahf
add
mov
adc
mov
ss
leave
cmp
dec
cmp
call
cmp
call
cmp
xchg
dec
mov
std
mov
mov
movsb
movsl
movsl
push
mov
mov
add
add
add
mov
dec
dec
adc
movsb
cmpsl
ljmp
sahf
jmp
scas
lods
pushl
mov
pushl
mov
ljmp
decl
or
mov
pop
decl
or
xchg
push
incl
add
mov
push
call
add
popf
add
mov
add
lods
add
mov
jb
ret
cmp
int3
inc
mov
rolb
call
dec
call
dec
xchg
call
dec
xchg
fisttpl
fisttpll
ficoml
call
xchg
std
mov
mov
movsl
mov
mov
add
dec
inc
adc
jl
sahf
mov
lcall
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
insl
decl
sbb
call
push
pop
decl
or
add
add
xchg
add
popf
add
mov
add
test
pop
pushl
and
dec
inc
call
push
xchg
call
push
cltd
ficoml
fistl
ficomps
fistps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
jne
sahf
lahf
or
xchg
xchg
xchg
add
inc
adc
ja
sahf
fwait
lahf
jmp
mov
stos
lods
pushl
mov
mov
mov
mov
ljmp
inc
jbe
nop
and
xchg
and
call
and
xchg
sbb
xchg
or
xchg
add
xchg
add
fwait
add
mov
add
lods
add
mov
data16
mov
xor
call
pop
cltd
fisubs
jmp
bound
in
cmpsb
call
imul
fildl
mov
cmpsl
cmpsl
mov
lahf
mov
add
add
add
inc
inc
adc
je
cltd
xchg
cwtl
call
sahf
popf
popf
ljmp
mov
pushl
mov
mov
mov
mov
jg
xchg
sub
fwait
outsl
lcall
sub
cwtl
sbb
pop
call
pop
jmp
add
stos
add
mov
pushw
adc
roll
fldt
jmp
jo
jmp
outsl
stos
jmp
jb
jmp
jne
jmp
mov
in
je
in
jbe
out
jb
jmp
mov
mov
test
lcall
mov
add
add
add
add
imul
lea
lcall
mov
pushl
mov
mov
inc
rol
mov
cmpsl
scas
lcall
outsb
jmp
aaa
je
mov
sbb
call
pop
lcall
add
test
pusha
pushl
add
mov
sbb
fistl
jmp
jbe
call
jge
in
cmpl
push
xchg
push
cmpl
mov
mov
test
cmpsl
sahf
pushf
pushf
daa
lahf
sahf
lahf
add
add
add
add
cmp
pop
pop
push
jne
jge
out
xchg
xchg
xchg
xchg
pushl
mov
mov
mov
ret
ret
pushl
insb
mov
lcall
jmp
aaa
jbe
cltd
sbb
xchg
add
popf
add
add
test
pusha
ljmp
add
add
ret
call
es
movsb
jmp
mov
repnz
push
xchg
ret
push
xchg
sar
xchg
push
xchg
push
xchg
stc
pop
out
nop
sar
mov
inc
ret
lods
lods
stos
mov
pushf
sahf
xor
popf
add
add
add
inc
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
xchg
pushl
mov
mov
inc
inc
mov
jl
lcall
dec
jg
stos
dec
test
movsb
xor
pusha
lcall
add
cmpsl
add
lods
add
mov
mov
add
movl
mov
out
mov
out
xchg
ret
push
lcall
repnz
cmc
fwait
enter
int3
cld
lahf
int
cli
popf
into
sti
lcall
fistpll
cli
mov
mov
sahf
sahf
mov
add
add
add
ss
cmp
outsb
dec
dec
dec
jecxz
pusha
call
mov
mov
mov
sar
ret
mov
inc
leave
inc
mov
mov
ljmp
xchg
movsb
sub
lcall
jmp
add
mov
mov
add
enter
rorl
je
loopne
xchg
out
mov
push
cmpsb
int
mull
sti
test
sar
cld
test
sar
cld
stos
sar
cld
test
push
sahf
jmp
mov
dec
leave
int
mov
mov
lahf
mov
xchg
add
cltd
lcall
xor
sub
inc
inc
inc
bound
pop
xlat
jae
jb
mov
sarl
mov
inc
ret
inc
mov
leave
leave
enter
pushl
push
test
lods
push
mov
scas
dec
test
sahf
sbb
lcall
add
lods
add
mov
arpl
mov
add
int
outsl
call
add
adc
in
pop
cmpsl
push
sahf
leave
cli
lods
sar
cli
mov
cld
mov
cli
mov
std
mov
cld
mov
mov
std
mov
mov
cld
mov
push
cmpsb
mov
dec
leave
lret
mov
mov
sahf
mov
xchg
or
add
add
xor
sbb
dec
outsl
outsb
outsb
mov
fcom
jmp
fdiv
rcl
sar
lret
int3
int3
dec
lret
leave
leave
lret
dec
lret
lret
enter
scas
ljmp
push
mov
lods
cmp
arpl
mov
add
mov
arpl
mov
add
iret
add
xlat
add
loopne
je
call
jno
cli
lods
sar
mov
cld
mov
std
mov
mov
fdivr
std
mov
fcos
divl
call
leave
int3
mov
mov
xchg
or
add
add
xor
add
add
pop
or
leave
movl
call
out
jecxz
jecxz
fsub
fdivr
aad
xlat
std
into
iret
sar
mov
push
ljmp
sub
mov
add
mov
arpl
mov
add
leave
add
aam
jno
fldl
jne
jecxz
js
out
xor
sti
mov
loope
inc
inc
loop
std
inc
dec
fdivrp
dec
dec
loopne
inc
std
leave
loopne
sti
mov
enter
iret
mov
mov
xchg
adc
add
add
incl
incb
std
incl
repz
hlt
or
out
jmp
in
out
out
sub
in
out
dec
ljmp
xchg
out
out
jecxz
out
fucomi
ret
mov
xchg
cmpsb
cmp
movsl
adc
pop
ljmp
add
mov
add
int3
add
xlat
add
add
jmp
inc
pushf
cld
mov
loop
dec
jecxz
std
int
dec
jecxz
std
into
jecxz
std
int3
jecxz
dec
loopne
call
in
std
shl
shl
call
in
sti
ret
fcos
in
mov
inc
ret
out
cmpsl
cmpsb
cmpsb
mov
xchg
xchg
add
add
add
incb
std
std
add
clc
clc
add
repz
repnz
push
out
repnz
in
lock
out
in
pop
fsubp
loopne
lds
xchg
sti
mov
add
pop
ljmp
data16
mov
add
add
flds
jbe
jecxz
jnp
in
push
jl
negb
cli
mov
std
shl
std
shl
shl
std
shl
shl
std
aam
std
fsub
call
out
fucomi
fucomi
cld
shl
push
ret
jecxz
lret
lret
lret
rep
stos
test
and
xchg
cwtl
add
std
cli
add
cld
clc
add
cli
cli
add
cmc
cmc
or
aam
mov
jb
negb
add
cmpsb
add
scas
add
mov
add
lret
call
add
faddl
jbe
out
ja
out
sbb
clc
jbe
cld
std
xlat
jmp
fucomi
std
fucompp
fucomi
fucomi
std
fucomp
fsubr
std
fucomip
jmp
in
fucomip
std
shl
push
aad
out
fdivr
iret
ror
clc
lods
lods
lods
lods
xchg
xchg
xchg
jo,pn
jo
xchg
xchg
xchg
add
loope
add
leave
lds
stos
jge
repnz
and
mov
add
mov
arpl
mov
add
into
add
add
fiadds
je
jmp
sub
cld
aam
std
fucomip
fsubr
fucompp
fsubr
cld
aad
cld
shl
sti
shl
cli
shl
clc
int
clc
int3
fdivr
test
in
mov
jmp
rcr
call
xlat
xlat
sti
mov
mov
lcall
add
add
add
xlat
add
leave
lds
lods
xchg
lcall
add
mov
mov
add
roll
jo
add
loopne
js
jmp
ss
cli
xchg
enter
loope
sti
lret
cli
stc
mov
sar
hlt
mov
iret
push
mov
int3
call
mov
sar
call
shl
call
in
mov
mov
xchg
add
add
add
int
add
sarl
lahf
xor
pusha
ljmp
add
mov
add
int
jo
rorl
fistl
jns
loopne
cmp
inc
xchg
jmp
scas
lret
call
scas
leave
std
loop
cld
loopne
ret
cli
fdivrl
lock
into
in
enter
iret
aad
loope
fadd
call
out
test
out
out
popf
call
lret
lods
lods
lods
adc
cmpsl
cmpsb
cmpsb
add
ret
mov
ret
mov
lods
aam
dec
cmp
test
insb
scas
and
js
mov
inc
xchg
ret
push
mov
leave
fs
test
mov
sarl
rcl
ror
aam
int3
rcl
lret
mov
int
mov
rcl
jg
fcmovnu
jb
fnstsw
gs
jecxz
call
out
in
xor
div
cmc
and
icebp
lock
or
mov
int
mov
add
mov
mov
rolb
mov
test
fwait
cmc
mov
jbe
ljmp
mov
sarb
test
mov
pushf
leave
ret
mov
enter
int3
iret
addr16
ror
push
rcl
rorl
aad
rcl
aad
aad
xlat
daa
fcompl
fneni(8087
fstl
fsubp
jecxz
in
out
jmp
add
cli
cmc
add
std
add
std
add
incb
mov
mov
mov
mov
lods
mov
mov
mov
mov
mov
ret
push
ret
inc
ret
xor
int
daa
lret
rcl
and
aam
sbb
aad
adc
aam
or
fcom
push
rcr
fadds
fstp
add
add
in
add
jmp
add
aad
std
incl
mov
mov
add
ret
ret
mov
mov
mov
mov
push
rol
or
enter
enter
into
lret
add
rolb
rcr
add
aad
aad
add
aad
add
xlat
loope
xlat
aad
add
loope
add
fsubp
add
out
add
icebp
icebp
add
std
incb
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
les
ret
mov
mov
mov
ja
test
dec
cmpsl
test
and
add
add
add
add
add
add
add
add
mov
push
mov
enter
into
jmp
aam
cmc
aam
sar
iret
iret
sar
int
lret
stc
lret
hlt
mov
mov
stos
fwait
xchg
xchg
xchg
dec
aas
aas
and
add
sbb
add
adc
add
push
add
add
jg
addb
aas
inc
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
cld
iret
iret
into
xlat
call
xlat
aad
iret
rcl
dec
iret
int
lret
int3
lret
mov
mov
cld
stos
stos
stos
icebp
cltd
cltd
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
je
jne
jne
data16
dec
dec
inc
cmp
sub
sub
xor
dec
sub
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
ret
dec
int3
lret
rcl
call
rcl
dec
int3
int3
inc
rol
pushl
test
sahf
sahf
lahf
cwtl
xchg
cwtl
jmp
outsl
jno
pop
adc
add
add
add
add
add
jg
addl
test
jp
imul
movsb
push
push
push
stos
push
outsb
outsb
push
pop
pop
cmp
cmp
pop
outsl
jo
adc
mov
mov
sar
mov
mov
mov
jmp
pushf
pushf
call
xchg
lcall
xchg
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
cltd
cltd
cltd
add
fwait
xchg
cltd
fcoml
addb
jl
jl
jp
js
jns
jnp
jnp
jnp
je
jae
push
push
push
cmp
je
pushf
pushf
popf
mov
scas
lods
repz
scas
scas
sti
scas
scas
lods
std
test
cmpsl
std
popf
sahf
pushf
call
xchg
call
mov
lods
jmp
scas
lods
leave
movsb
movsl
movsl
cltd
jb
jae
adc
adc
add
add
add
add
outsl
insl
outsb
pop
xchg
mov
loop
lcall
mov
mov
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
jo
jo
mov
xchg
cltd
lcall
mov
call
popf
sahf
ljmp
test
std
mov
scas
mov
mov
mov
cmpsb
movsb
cmpsl
pop
addl
add
pop
pusha
pusha
or
scas
mov
cmpsl
mov
mov
mov
nop
call
lahf
lahf
sti
sahf
mov
lcall
push
push
jo
pop
pop
outsl
imul
jge
subl
nop
mov
lcall
mov
pushl
pop
mov
jnp
mov
scas
stos
insl
stos
test
add
add
add
pusha
pop
pusha
or
mov
in
movsb
test
call
cwtl
xchg
lcall
cwtl
lcall
lahf
pushf
cli
xchg
xchg
cwtl
jmp
xchg
mov
xchg
orb
xchg
insb
test
xchg
pop
jg
sahf
dec
jnp
mov
xor
jae
scas
sbb
insb
ljmp
pop
mov
mov
jle
movsb
movsb
push
popa
pusha
pop
or
mov
in
mov
cwtl
lcall
mov
lahf
call
mov
mov
mov
xchg
jno
cld
cwtl
pop
cmp
dec
jp
xchg
cmp
xchg
sub
xchg
sbb
cltd
adc
sahf
push
popa
ljmp
sbb
mov
outsb
pushl
pop
jb
mov
pop
nop
mov
scas
lods
xchg
sahf
popf
sahf
adc
add
add
popa
popa
pusha
or
mov
stos
mov
lahf
ljmp
stos
stos
ljmp
xchg
cltd
decl
cmp
mov
arpl
mov
pop
incl
add
decl
add
fwait
add
test
pushl
jnp,pn
shrl
inc
jle,pn
enter
lret
dec
pop
xchg
inc
stos
mov
scas
mov
movsb
test
add
add
add
add
pusha
or
movsb
test
cmpsl
mov
cmpsl
ljmp
mov
pushl
mov
decl
push
push
incl
push
push
decl
add
xchg
add
mov
add
mov
insb
inc
ss
inc
mov
rolb
call
inc
nop
call
inc
nop
fmuls
call
popa
sahf
inc
test
stc
mov
mov
movsb
mov
incl
add
add
popa
pusha
pop
or
lahf
mov
ljmp
mov
mov
mov
stos
call
pop
arpl
xchg
sbb
mov
pop
decl
push
call
add
cmpsl
add
lods
add
mov
dec
xchg
fcomps
fcompl
fistps
jmp
pop
mov
fildll
int3
cmpsb
mov
ret
cmpsl
xor
add
add
dec
pop
jle
jl
pushf
cwtl
cltd
jecxz
lahf
mov
pushl
mov
mov
jmp
sub
lcall
and
call
add
lahf
add
add
mov
pushl
xor
fsubl
jmp
insb
stos
jmp
outsl
stos
ljmp
out
jno
call
cmpsl
mov
shll
addb
dec
dec
dec
pop
outsl
outsb
imul
test
fwait
cltd
cwtl
pushl
mov
mov
mov
jne
lcall
jbe
pushf
sub
xchg
or
lcall
add
lods
add
mov
inc
or
xchg
jmp
jp
ljmp
out
test
push
xchg
fldt
mov
push
fwait
cltd
cltd
add
sub
push
push
push
dec
pop
gs
loopne
mov
mov
mov
ret
mov
sahf
jmp
inc
cmp
sub
lcall
ljmp
add
mov
adc
jmp
pusha
mov
push
xchg
push
cltd
push
cltd
enter
leave
cli
lcall
jecxz
inc
mov
lods
popa
mov
add
add
xor
add
pop
pop
pop
fisttpl
mov
mov
ret
ret
ret
xchg
cmpsl
jmp
dec
test
mov
add
cmpsl
add
mov
mov
add
fisubl
cmp
jp
push
mov
sar
stc
test
iret
sti
lods
sar
std
lods
sar
stc
cmpsb
int3
jmp
mov
dec
rol
stos
test
popf
or
add
add
dec
dec
dec
aaa
jb
je
test
int
out
iret
int
lret
sti
leave
lret
leave
std
enter
mov
pusha
ljmp
ljmp
add
ret
dec
add
fildl
push
xchg
mov
mov
xlat
std
mov
fdivr
std
mov
sar
jmp
enter
repz
lods
mov
add
add
add
add
pop
or
aam
dec
loope
fsubp
loope
fstp
ffree
fcmovnu
aam
fsubr
mov
mov
test
push
popa
ljmp
add
leave
add
xlat
add
or
icebp
dec
mov
cld
loopne
std
loopne
dec
loopne
dec
std
enter
lret
loope
sti
out
mov
lret
mov
xchg
pushf
pushf
popf
sbb
add
add
incl
std
std
add
jmp
or
in
in
sbb
in
in
xor
loope
in
mov
mov
mov
add
mov
arpl
rolb
dec
add
fildl
jbe
ljmp
std
ret
std
iret
out
call
out
shl
call
out
call
out
call
call
push
xlat
fmul
sar
mov
mov
add
std
incb
std
std
add
cld
cld
pop
aad
aam
mov
pop
mov
lahf
or
pop
pushl
add
rolb
jo
filds
ja
out
and
std
shl
fucompp
fld1
xlat
jmp
cld
fsubr
std
aad
push
xlat
xlat
sti
mov
popf
lahf
das
add
add
int
int
mov
fs
mov
add
mov
add
aad
jb
loopne
js
out
xor
cli
lret
loop
clc
leave
test
xlat
bnd
aad
out
aam
in
aam
in
aad
jmp
aam
jecxz
fucomp
leave
mov
test
std
incb
aam
push
mov
jae
or
imul
sbb
int3
and
xlat
sub
sti
loopne
pushf
clc
loop
mov
out
in
lret
jmp
fidivrs
leave
ffreep
iret
mov
jecxz
fistpl
in
out
jns
rcl
dec
mov
add
add
mov
scas
xchg
mov
ljmp
fidivrl
jle
rol
stos
mov
mov
ret
nop
aam
leave
jge
int3
insl
aad
int
rcl
iret
dec
fcomp
xlat
cmp
fnstsw
das
in
frstor
loop
repnz
jmp
or
std
incl
std
std
add
mov
jns
mov
mov
mov
mov
xor
enter
aam
pop
mov
rcl
or
or
int
add
incb
std
incl
fwait
fwait
fwait
add
or
into
int3
int
lods
stos
stos
add
std
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
fwait
fwait
add
rol
enter
leave
mov
rol
mov
mov
mov
stos
stos
lods
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
enter
sar
aam
aam
rcl
sar
int
iret
std
stc
mov
mov
cmpsl
cmpsl
test
gs
push
push
add
add
add
add
add
add
add
add
jae
jae
pushw
inc
inc
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
ret
int
call
aad
dec
into
into
dec
mov
ljmp
lahf
lahf
sti
mov
das
push
add
add
add
add
je
je
test
adc
arpl
mov
push
outsl
jb
popa
popa
cmp
pop
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
xchg
lcall
cwtl
cltd
lds
jae
and
add
pop
add
add
je
jb
pushf
xchg
lcall
test
xchg
or
addl
dec
dec
dec
inc
mov
pushf
into
mov
mov
xchg
decb
lea
ljmp
mov
mov
mov
xchg
xchg
xchg
aas
sub
push
add
add
xorl
cmpsl
test
test
mov
mov
xchg
xchg
xchg
cld
pushf
pushf
popf
cmc
lcall
mov
push
push
imul
jle
lea
xchg
testl
mov
pushl
jb
mov
scas
scas
push
lods
stos
stos
add
add
add
scas
test
xchg
xchg
xchg
lcall
fwait
cltd
lcall
lcall
xchg
mov
loope
jbe
out
xchg
arpl
std
lcall
ljmp
pop
jno
mov
insl
pushl
pushf
scas
lock
mov
imul
int3
add
xchg
pop
scas
movsb
lods
test
popf
sahf
popf
jmp
mov
xchg
decl
push
jbe
popl
decb
arpl
xchg
adc
xchg
or
mov
sbb
mov
and
inc
daa
jnp
les
test
rcrl
subl
jne
push
movsb
popf
mov
cld
test
cmpsb
ljmp
scas
mov
lahf
mov
decl
or
mov
push
decl
pop
jmp
adc
ret
dec
inc
mov
iret
inc
mov
inc
call
dec
xchg
dec
cwtl
mov
mov
mov
movsb
movsb
mov
add
imul
cmpsb
lahf
movsl
cld
lods
lods
scas
pushl
mov
movsb
call
pop
decl
pop
push
call
add
stos
add
mov
push
xchg
fcompl
loope
mov
jmp
movsw
call
fwait
mov
mov
test
pop
add
add
bound
adc
pushf
fwait
fwait
cld
mov
mov
mov
mov
scas
lcall
xor
cltd
and
xchg
pop
pop
lcall
add
mov
push
jmp
jo
call
jp
out
jge
out
jge
fistpl
mov
and
add
add
dec
adc
push
cmp
mov
mov
rol
mov
fs
movsl
inc
jge
lahf
and
pushf
add
ljmp
add
les
insl
fimull
in
mov
push
xchg
push
xchg
push
xchg
jmp
cmpsl
mov
cmpsb
cmpsb
sub
inc
inc
inc
adc
push
xchg
xchg
mov
inc
ret
ret
inc
mov
cwtl
ljmp
sbb
movsl
add
mov
gs
add
aam
jns
in
insb
scas
push
cmpsl
int
cli
stos
sar
cli
lods
sar
sti
scas
sar
std
lods
iret
in
scas
lret
mov
movsb
ds
std
add
jno
inc
scas
mov
mov
aad
mov
aam
fnop
rcl
out
lret
lret
mov
mov
jmp
add
add
add
out
test
testl
std
rcr
inc
cld
ret
lock
shl
test
dec
cmpl
add
jmp
or
jmp
in
outsb
fcomp
movsl
es
ljmp
add
lret
add
fiadds
out
cmp
dec
in
shl
shl
call
in
std
aam
push
fdivr
aad
int3
in
scas
lods
scas
popa
addb
add
incb
std
std
push
int
shrl
mov
add
mov
add
loop
jp
hlt
push
cmpsl
std
loopne
std
jmp
std
aam
sti
shl
cli
shl
push
leave
fsin
fmul
shl
mov
mov
xchg
xchg
xchg
pop
mov
mov
cld
lods
add
mov
or
cmp
out
mov
aam
jmp
rcl
jmp
leave
aad
ljmp
scas
vsqrtsd
add
add
sarl
movsl
pop
xchg
lods
dec
and
push
mov
shlb
int3
ja
mov
xlat
mov
lret
int
fmul
into
pop
xlat
dec
jecxz
loope
out
out
in
out
in
sbb
rol
add
mov
cmp
mov
scas
push
mov
mov
ret
mov
lds
lret
sbb
bswap
int
or
push
std
std
add
jg
std
incl
stos
incb
sarl
add
std
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
and
inc
repz
test
arpl
pop
mov
das
push
fsub
jnp
cmp
imul
imul
jge
mov
fisttpll
aad
xor
repz
test
pop
mov
push
movsl
xlat
jecxz
or
mov
stc
sub
cwtl
pop
sbb
mov
insl
lds
cmp
jp
and
adc
cltd
inc
jb
adc
cwtl
das
divl
mov
dec
or
cmp
insb
popf
pop
jnp
lea
cltd
xor
adc
test
xor
xchg
push
insl
xchg
hlt
mov
pop
insl
add
cli
adc
lea
jge
test
in
add
pop
xor
insb
add
push
out
xchg
and
add
fsts
and
sbb
inc
xlat
jle
in
outsl
lahf
pop
cmc
rclb
jl
and
and
ja
ds
cwtl
mov
repz
fidivrl
or
les
cs
mov
push
inc
fidivs
xor
test
lcall
out
and
aaa
dec
insl
add
dec
insb
add
mov
add
test
aas
and
lds
in
test
jecxz
les
add
xor
and
test
cmpsb
cmpsb
out
fcom
pop
hlt
or
add
add
mov
mov
adc
data16
xor
cmp
push
jmp
test
lret
mov
jecxz
das
adc
cwtl
andl
mov
mov
cmp
lahf
cmp
lret
sti
cwtl
cmp
leave
sbb
in
ljmp
mov
add
add
pop
mov
and
cmp
pop
stos
ss
mov
xor
add
sbb
pop
mov
cmp
aam
mov
rcl
fucomip
xor
rolb
jo
inc
popf
xor
jne
mov
adc
jo
sbb
dec
cmp
into
insb
imul
inc
aas
addr16
jo
add
xchg
push
pop
mov
int
loop
mov
push
dec
hlt
pop
repnz
inc
cmp
ja
call
out
leave
adc
jne
sbb
and
sub
inc
nop
mov
ret
stc
cmp
pop
adcb
ss
test
sahf
xor
mov
fldt
rorb
jb
sub
stc
nop
fidivrs
cld
mov
pop
scas
xor
sbbl
push
xor
cmp
push
ljmp
jno
sub
fnsave
es
cld
xchg
push
pushf
lods
inc
into
jb
mov
out
lret
bound
lds
iret
testb
je
push
out
dec
xchg
pop
sahf
imul
sbb
inc
fisubrl
mov
inc
mov
mov
fnstsw
movzwl
test
xor
movsb
cmp
sub
fnstenv
scas
dec
loopne
sub
mov
push
lods
lods
push
xchg
jmp
push
jmp
sub
pop
movsl
dec
loopne
jle
mov
rcrl
lods
inc
dec
repnz
and
bound
shr
repnz
pop
out
adc
lahf
inc
call
es
insl
mov
mov
rorb
cli
cmp
shlb
pop
sbbl
data16
ss
or
mov
fldcw
rorl
fdivl
sub
pop
stos
cli
xchg
fdivrl
std
scas
std
sbb
add
int
and
jmp
jbe
push
test
jb
es
add
jb
fdivl
xchg
stc
jno
mov
adc
testb
pop
scas
inc
inc
xchg
loopne
fadd
pop
push
mov
movsb
cmp
adc
mov
dec
loope
aad
pop
add
adc
push
or
jbe,pt
in
mov
ret
imull
jnp
inc
out
xchg
dec
leave
pusha
jnp
shrl
fwait
jg
roll
jo
xor
call
test
lock
lret
xchg
pop
bnd
repz
xchg
sub
jnp
push
dec
sbb
jbe
lock
mov
cmpsl
ds
std
arpl
sub
test
leave
xor
cli
xchg
popa
clc
push
mov
dec
loope
inc
pop
insl
push
movsl
lcall
sub
orl
data16
scas
inc
add
in
test
stos
or
lock
mov
xchg
pop
scas
imul
repnz
insl
add
sub
sahf
pusha
lods
xchg
sub
mov
mov
or
jecxz
in
std
xchg
jmp
xor
pop
imul
test
outsb
bound
std
xchg
jmp
aad
imul
mov
loop
sbb
imul
dec
fs
in
rcrb
cmp
data16
xor
in
mov
mov
lret
shrl
mov
scas
inc
jne
fnsave
test
push
out
dec
dec
loop
xor
popa
cmpsb
sbb
cmp
dec
out
jp
pop
lock
mov
push
out
aas
jnp
ret
pop
push
sbb
xor
dec
outsl
push
jl
iret
data16
dec
in
push
lea
cltd
outsl
push
int3
mov
mov
cmpl
outsb
sahf
mov
adc
push
lea
cmp
pop
push
int
iret
mov
inc
call
aaa
jnp
data16
pop
repnz
mov
movsl
cmp
ss
ss
cmpsl
sarl
stc
nop
jle
pop
imul
jecxz
jp
adc
pop
fnstenv
sti
xchg
je
sbb
fidivrs
fnstenv
ss
scas
push
in
fnstsw
testl
in
aad
out
ds
outsw
aaa
lods
inc
data16
hlt
call
xor
fs
jmp
aas
pop
hlt
insl
xor
fbstp
mov
outsb
in
test
xor
cmp
add
mov
cmp
aas
push
imul
out
cmp
cs
mov
jne
ljmp
ret
push
ljmp
adc
outsl
mov
sbb
inc
imul
push
ljmp
pop
jne
std
xchg
lock
mov
test
jl
lock
int
hlt
out
sub
sbb
fs
add
pop
call
or
repz
mov
xchg
mov
sbb
adc
sub
sub
push
ljmp
jmp
mov
fildll
dec
and
inc
or
jbe
addr16
mov
and
rcl
cs
lret
cmpsl
ds
xor
push
mov
mov
fisubrl
mov
sbb
pop
jae
pop
test
into
shlb
leave
sbbb
sbb
aam
imul
mov
lds
and
adc
push
sub
pushf
pop
insb
add
mov
fisttpl
das
cmp
sbb
mov
inc
subb
xlat
sti
dec
loop
stc
inc
icebp
stos
inc
and
in
andl
cmp
or
testl
lea
sub
adc
into
cld
and
es
push
ljmp
sti
xchg
leave
popf
mov
lret
in
insb
adc
pusha
negl
cmp
outsl
xor
mov
stc
nop
mov
xchg
or
sub
imul
push
mov
into
and
sbb
sub
cmp
testb
mov
cmpsb
call
or
and
sub
adcb
movsb
loopne
pop
sbb
lock
cmp
lock
cmp
addb
into
gs
ljmp
inc
lock
jmp
das
lret
mov
in
loop
sbb
jne,pt
jo
cmpsl
mov
fnstsw
push
psubsb
inc
sbb
fcomi
bound
insb
subl
mov
push
or
xor
sub
cmp
outsl
push
scas
cmpl
repz
or
cwtl
das
push
and
push
jge
dec
stos
jl
sub
enter
es
adc
push
dec
push
xchg
nop
pop
test
jmp
mov
or
dec
loopne
sub
shlb
adc
popa
clc
adc
adc
outsb
es
scas
push
mov
mov
loopne
clc
adc
dec
push
jne
test
mov
or
sbb
xchg
aaa
loop
test
aas
stos
subb
mov
inc
pop
mov
lcall
repnz
jmp
push
sti
test
cmpsl
dec
push
jae
les
push
mov
out
jbe
adc
xchg
sbb
sub
fxch
dec
clc
sub
push
sub
cmpsb
mov
mov
out
xchg
out
outsb
add
iret
fiadds
jno
stc
shlb
dec
es
cmp
mov
lahf
sub
sbb
pushf
add
leave
mov
jno
jle
js
mov
popf
loopne
pusha
add
loop
fnsave
xor
mov
push
stc
jge
push
test
mov
shll
sbb
movsl
sbb
dec
push
test
inc
lahf
sub
cmp
pop
shrb
imul
iret
jbe
out
je
out
dec
xchg
inc
cld
push
cmpsb
pop
xor
nop
inc
ret
icebp
sbb
movsl
fmul
jae
idiv
out
sub
cmpb
mov
in
scas
fadd
add
add
pop
pop
data16
pop
out
or
faddl
inc
sub
jmp
push
jbe
push
mov
cltd
cmpsl
test
out
xchg
mov
adc
inc
ret
push
lods
jnp
icebp
aam
push
push
xchg
out
xchg
sub
pop
incl
les
mov
dec
aad
and
inc
add
and
pop
xchg
sub
add
insb
dec
cli
or
ja
xchg
sub
cli
hlt
push
push
cmpsb
mov
push
daa
sbb
out
out
xchg
push
subl
jb
stc
aad
xor
push
sub
mov
sarl
pop
js
push
cmpsb
or
in
inc
lahf
inc
cmp
pop
dec
test
mov
mov
inc
pop
out
mov
and
movsl
xchg
mov
inc
fistl
aas
xchg
lock
scas
outsl
scas
mov
shrl
scas
testl
int3
decl
into
outsl
orl
jl
jns
cmc
xchg
fdivrl
std
jp
insl
inc
jp
xlat
mov
out
in
ficompl
xor
scas
scas
inc
loopne
mov
or
lret
cld
fidivs
shr
cwtl
je
dec
and
lret
push
push
jp
popf
lock
inc
jmp
pop
mov
mov
sub
lds
inc
and
add
imul
imul
sub
cmp
mov
lods
jp
fbstp
movsl
xor
fbld
shrl
xchg
push
or
nop
jecxz
or
sahf
hlt
mull
and
fistpl
fwait
push
sbb
push
out
imul
dec
mov
dec
sahf
pushf
rcr
nop
daa
fidivl
aam
mov
pop
repnz
fcoms
jp
adc
cs
lahf
clc
jmp
das
rorl
mov
cmp
jbe
fnstenv
xor
shlb
xchg
loop
push
out
cld
test
outsb
add
andl
push
movsl
push
mov
popa
std
pop
mov
lods
push
icebp
xchg
sub
mov
loope
add
cs
gs
lcall
bnd
pop
icebp
ljmp
adc
dec
and
jns
inc
fadds
rcrl
push
call
sbb
fidivs
xor
cltd
sbb
ja
cmp
xor
pop
pop
out
dec
jnp
mov
addr16
xchg
jmp
mov
or
mov
insl
ljmp
lock
insl
add
sbb
xchg
push
push
movsl
mov
mov
ret
add
fsubrs
sub
loope
lods
testb
stos
and
das
add
push
inc
dec
inc
imul
mov
shrb
dec
or
data16
sahf
xor
lods
push
mov
mov
hlt
sbb
rorl
dec
inc
pop
sahf
dec
hlt
data16
sbb
mov
xchg
inc
das
insb
mov
dec
in
fadd
push
std
stos
jge
clc
push
fbstp
adc
mov
aad
mov
ret
fsubrs
in
rcrb
mov
popf
rdmsr
push
out
push
sub
mov
fsubrl
fbld
in
loop
push
sbb
jae
dec
lcall
cmp
scas
sub
xlat
outsb
adc
ss
xor
pushf
lahf
pushf
push
jmp
mov
jb
into
jnp
int3
xor
nop
daa
subps
mov
fistpll
out
int3
arpl
adc
andl
push
or
push
arpl
mov
push
rolb
pop
sahf
mov
and
fistps
xlat
pushf
clc
xor
gs
cmc
ljmp
adc
aas
jge
lds
xor
ret
mov
push
xchg
outsb
or
cmc
mov
in
fisttps
out
xchg
fisttps
out
push
cmp
add
test
imul
jns
ds
stos
inc
dec
push
xchg
frstor
pop
xchg
sti
aad
fdivrl
repz
rcrl
mov
xor
aam
pop
sub
orb
loopne
cmp
int3
fsubs
or
xchg
cltd
and
cmp
mov
mov
xor
pop
dec
pop
shrl
loopnew
mov
add
shlb
sbb
sbb
xor
or
es
in
jp
out
movsb
out
insb
add
mov
and
xchg
sub
xchg
mov
dec
pop
sbb
loopne
nop
ja
pushf
xor
and
push
loop
leave
mov
rcll
lods
push
pop
out
xchg
outsb
add
daa
pushf
mov
test
xchg
sub
mov
dec
rcr
outsl
je
shlb
xchg
add
insl
xor
mov
xchg
ret
test
sub
imull
dec
loope
popa
push
call
xchg
lods
sbb
cmp
xchg
mov
mov
mov
xor
loopne
cmc
pop
shrl
push
call
repnz
movsl
jle
adc
bound
dec
loope
fmull
push
push
add
add
push
xchg
dec
mov
test
cmpsb
cmp
xor
pop
movsb
pop
fnsave
loop
pminub
test
sub
xchg
xor
or
jmp
push
mov
add
ret
cmp
adc
cmp
ja
outsb
cmpb
xchg
insl
cmc
ffreep
pop
ficompl
cmc
mov
in
outsl
jae
stos
lods
mov
mov
xor
adc
cmpsb
adc
ds
add
add
sbb
jp
xchg
outsl
stos
inc
mov
int3
enter
ret
or
jle
adc
js
popl
mov
rclb
cmpsl
lahf
sbb
flds
lds
pusha
notl
dec
jecxz
jnp
adc
mov
shrl
mov
jo
xor
mov
rcll
inc
repz
inc
or
and
es
decl
inc
fdivrl
xchg
arpl
lds
addb
sbb
jno
sahf
adc
ss
aaa
adc
add
push
sub
inc
int3
pop
not
scas
stc
nop
mov
rcll
scas
or
xor
push
shll
pop
in
jb
dec
push
out
pop
mov
mov
rcrl
adc
sub
std
xchg
cwtl
sbb
sbb
mov
aad
xor
mov
dec
and
popa
ljmp
xchg
movsb
xchg
mov
push
shrb
arpl
mov
jb
inc
faddl
popf
push
movsl
ret
cli
xlat
jmp
ret
fadds
sbbb
repz
loope
dec
nop
daa
dec
dec
push
inc
mulb
fidivs
fmull
xchg
stos
dec
lods
inc
jae
or
lock
mov
dec
testb
arpl
lahf
push
into
fs
pop
jl
mov
pop
lds
jb
daa
sbb
stc
test
ret
sub
sahf
xor
fldenv
and
adc
clc
movsl
bound
enter
stc
lock
add
adc
and
pop
adc
gs
enter
outsb
jne
dec
out
xchg
push
popf
and
insl
add
dec
and
adc
and
mov
popa
clc
push
inc
pop
jg
outsl
push
sahf
cwtl
in
mov
rolb
lcall
and
mov
inc
xlat
mov
aad
cmc
sub
and
out
inc
jl
jp
inc
fidivl
loope
clc
dec
daa
mov
mov
jb
insl
xchg
test
xchg
shll
in
cld
sbb
add
sbb
inc
cltd
xor
insb
pop
icebp
jle
mov
mov
aad
push
in
sub
xchg
pushl
push
inc
shrb
aaa
aas
aad
lock
repz
jecxz
out
push
movsl
or
push
cmp
sub
fs
xchg
cmp
mov
sbb
push
push
inc
xchg
sub
cmp
lods
ret
pop
ds
mov
push
adc
push
and
push
movsl
inc
inc
xchg
cs
jo
ret
xchg
or
shrl
push
imul
dec
xchg
xchg
iret
insl
pop
mov
call
cmp
pop
dec
addr16
fimuls
loope
mov
lock
call
cmpsl
or
mov
rclb
mov
lret
pop
icebp
mov
shlb
fistpll
push
lret
lret
daa
xchg
sub
pop
mov
mov
std
dec
inc
fdivrl
fstl
jns
mov
or
loope
cmp
rorl
xchg
sub
aam
inc
gs
or
sbb
or
sub
cld
xchg
out
mov
adc
ds
data16
ret
inc
pop
in
test
pop
hlt
cmp
jnp
push
push
sub
ds
cltd
xor
push
dec
fisttps
mov
std
xchg
dec
out
dec
mov
add
xchg
cmc
loop
clc
mov
cmpsb
cmc
adc
cwtl
push
push
lds
sbbb
shlb
bnd
cmp
adc
pop
repz
xchg
cmp
adc
mov
out
ja
das
mov
in
xchg
mov
clc
mov
cltd
pusha
adc
insb
mov
int
mov
xor
into
dec
adc
mov
das
mov
adcb
pop
mov
imul
mov
or
lret
xor
adcb
insb
movsb
jbe
mov
ret
mov
sub
lods
add
fwait
xor
cmp
cmp
and
int3
mov
inc
jge
jae
enter
imul
subl
add
jno
pop
mov
xchg
sub
lds
pop
rcll
push
out
jnp
dec
loop
lahf
jge
loopne
jge
mov
nop
daa
cmp
pop
les
and
cmp
jne
dec
cmpsl
dec
mov
jle
leave
pusha
add
icebp
mov
fdivl
jns
mov
or
lret
sbb
push
repz
and
jo
movsb
inc
push
in
jbe
mov
leave
sbb
sub
int3
arpl
mov
into
gs
mov
adc
ss
movsl
addr16
loopne
mov
add
fimull
or
and
sub
lcall
cmpsl
loop,pt
sbbb
add
pop
xor
push
out
mov
pop
push
stos
add
jmp
bndstx
in
push
inc
fmuls
stos
pop
neg
popa
pop
scas
xchg
cld
jge
cs
int3
in
pushf
xor
mov
jne
mov
shrl
lods
xchg
sub
jp
mov
xor
pusha
test
sub
fadds
jno
or
les
jl
jl
pop
sahf
push
in
iret
cmp
add
mov
pop
mov
je
xchg
test
leave
xor
xchg
arpl
mov
mov
cmp
cmp
or
pop
icebp
pop
in
stos
adc
ss
addr16
xchg
sub
mov
fldt
or
mov
pusha
leave
lock
subl
popa
push
outsl
sub
mov
rcll
jp
mov
frstor
data16
mov
shr
sti
andb
mov
fdivl
jmp
rorl
adcl
out
add
es
mov
and
addr16
fmull
gs
sahf
mov
pusha
mov
adc
mov
fildl
xchg
add
shrl
and
lahf
ss
cmp
mov
fcmove
arpl
cwtl
das
andb
and
jg
mov
lret
call
fwait
jb
insl
add
xchg
dec
jno
cld
stos
in
insb
add
int3
int
idivb
add
push
sbbb
mov
fdivl
push
int
mov
popa
pop
mov
ja
jb
cli
stos
fucomp
jg
int
mov
sub
jnp
jae
lods
arpl
into
adcb
mov
mov
aam
fs
xchg
sahf
push
mov
fsubr
lods
sbb
aad
mul
js
push
push
jmp
mov
popa
clc
clc
jb
and
int
and
jle
and
enter
jmp
sbb
dec
outsl
xor
lret
lock
jecxz
adc
aaa
mov
jno
xor
xchg
int3
jle
fwait
cmpsl
in
outsb
add
repz
and
ljmp
fisubrs
movb
xor
int
add
pop
repnz
pusha
fs
cltd
int3
xor
cmc
mov
js
push
add
std
xchg
stos
pusha
push
scas
cmc
mov
jb
push
add
jl
jno
dec
stos
pop
pusha
testl
pop
loopne
push
hlt
sub
sub
dec
popf
xor
into
cld
xchg
clc
cltd
or
inc
jecxz
mov
mov
push
mov
mov
sub
inc
aam
mov
lahf
fnstenv
rcrb
jns
or
les
std
fs
sahf
push
shrl
mov
sbb
xchg
or
movsl
xor
daa
mov
mov
mov
xor
cmpsb
cmp
and
scas
inc
jl
pop
xor
jge
push
je
xchg
out
test
mov
xchg
in
inc
std
xchg
jp
in
test
fwait
es
and
push
pop
movsl
lods
inc
fiadds
cmp
cmp
add
scas
inc
loopne
jge
outsl
add
cmp
pop
out
test
test
push
lods
insl
hlt
push
mov
mov
dec
mov
xchg
sub
xlat
and
pop
divl
xor
dec
test
lret
cmc
lods
jne
push
testl
lods
inc
cmc
mov
mov
sahf
adc
push
ljmp
lods
xor
jge
notb
mov
dec
adc
jl
lods
ss
jno
sti
xchg
stc
xchg
repnz
sbb
xchg
inc
in
cmc
mov
or
and
sti
mov
mov
fisubl
adc
mov
inc
in
add
mov
add
ljmp
movsb
std
xchg
filds
and
add
and
mov
and
fdivl
pop
push
ret
pop
mov
stos
inc
pusha
stos
jl
aam
jne
mov
fsubrp
orl
sub
mov
adc
scas
loop
push
sbb
aas
xchg
sub
lcall
ja
or
shll
push
or
jl
pop
jne,pn
pop
jp
mov
cld
xchg
add
cmc
mov
and
mov
adc
sbb
xchg
ret
divb
jne
inc
add
mov
xchg
push
push
in
xorl
mov
ss
sbbl
xchg
inc
out
je
sbb
les
adc
adc
inc
faddl
cmpsb
outsl
push
roll
mov
loope,pn
adc
push
out
mov
out
gs
in
aad
aam
shl
ss
sbb
push
mov
cmp
jp
mov
mov
fldl
scas
nop
sub
lret
in
xchg
sub
xlat
mov
add
insl
add
and
xchg
sub
jae
xchg
lret
add
insb
je
xor
push
xchg
lock
jbe
std
movsb
jecxz
test
addr16
hlt
cmp
leave
outsb
adc
dec
loopne
arpl
add
ljmp
bound
xchg
jnp
fcmovnbe
outsl
add
sub
or
test
les
xchg
ljmp
and
dec
add
cmp
push
negb
mov
and
stos
mov
flds
mov
cmp
push
out
xchg
inc
cli
lea
adc
jecxz
or
call
cmp
sahf
cmp
mov
ljmp
in
ss
fstpl
pop
push
test
pop
jmp
lods
jl
aam
insb
stc
mov
mov
daa
fstpt
pop
dec
mov
xor
jns
arpl
leave
hlt
xchg
stc
aaa
ss
push
daa
rolb
fnstsw
pop
in
or
test
out
imul
aaa
je
or
mov
mov
fcoms
lcall
bound
adc
mov
inc
lret
pop
popa
out
pop
sub
rcrl
mull
int
mov
pop
shlb
bound
in
pop
and
mov
arpl
ficompl
mov
mov
ds
xor
adc
add
adc
xor
mov
enter
jne
fsubs
fisttpl
repnz
out
mov
fstpl
lcall
or
push
jle
mov
outsl
scas
sub
out
mov
fnsave
std
lods
inc
adc
jmp
xor
xchg
pop
cmpl
arpl
mov
and
inc
icebp
add
push
scas
inc
je
aam
arpl
mov
or
dec
sbb
xor
xor
arpl
lret
push
nop
and
mul
xchg
sbb
shlb
mov
ljmp
shll
cli
jbe
sbb
filds
mov
bound
int3
push
mov
pop
jno
mov
aad
lods
xchg
xor
jl
push
test
xchg
xor
dec
hlt
xchg
jbe
lds
lcall
mov
shl
jnp
aas
lahf
and
or
jp
outsb
mov
jp
fstp
pusha
sti
repnz
js
adc
jg
sub
bnd
lahf
bnd
mov
jle
lret
adc
bnd
sub
nop
jno
hlt
jns
mov
js
stc
sub
pop
add
ja
sub
and
lret
add
int3
lahf
push
push
es
repnz
aas
lea
cwtl
jno
mov
mov
sbb
add
mov
pop
cmp
pop
push
bound
push
aad
xchg
loopne
jp
or
mov
jp
inc
out
xchg
adcl
lock
adc
or
and
popf
sbb
ret
sub
adc
mov
mov
dec
scas
dec
test
fidivs
aam
loope
adc
xchg
inc
es
pop
addr16
scas
cwtl
jns
and
int3
lods
inc
decb
push
in
cmp
shrl
pop
outsb
add
movsb
mov
sub
lds
mov
add
pop
xor
push
pop
mov
pop
fwait
test
mov
lret
popf
xor
dec
and
xchg
mov
jns
call
or
cmp
mov
mov
xchg
sub
jmp
mov
xor
push
shrl
lea
sbb
popf
xor
std
pop
scas
cs
dec
dec
adc
cwtl
mov
fnstcw
or
adc
pop
dec
das
jns
sti
xchg
mov
dec
in
rcrb
mov
jmp
add
mov
push
cltd
cmpsl
ds
fbstp
adc
xchg
sub
jnp
xor
add
jns
push
test
sbb
cmpsb
ja
mov
inc
or
and
xor
pusha
or
lock
imul
pop
mov
enter
lret
imulb
jl
je
pushw
mov
mov
xor
rcrl
inc
mov
inc
cltd
xchg
pop
lea
enter
or
movsb
pusha
lcall
andl
sub
mov
in
xor
jae
ret
test
enter
sbb
loopne
xchg
insl
jle
or
fadds
xchg
into
mov
dec
sbb
inc
divb
adc
xchg
out
subb
xor
fs
outsl
addr16
or
ret
bound
add
outsb
cmp
mov
mov
in
pop
lods
add
lods
sbb
add
pushf
adcb
mull
mov
cmp
ds
push
sbb
mov
shl
cs
cltd
or
lcall
push
test
lcall
test
lock
sub
mov
xlat
push
outsb
bound
aas
xor
out
andl
sub
es
mov
repz
sbb
es
scas
loope
dec
aam
clc
aas
sbb
andb
out
psubusw
add
repnz
mov
sahf
aas
call
jnp
cld
mov
fdivrl
repnz
and
mov
mov
dec
adc
mov
mov
and
jo
popf
mov
daa
fcoml
push
adc
and
mov
xchg
xchg
mov
in
add
jp
or
out
enter
dec
cmp
inc
jae
push
adc
or
mov
shll
pop
mov
mov
mov
nop
xorl
adc
sbb
setl
lds
out
fistpl
mov
lods
jmp
nop
and
outsb
lock
pop
imul
push
jo
pop
push
test
lock
pop
push
pop
mov
mov
fcoms
push
enter
push
rcll
scas
cs
loopne
cmp
jnp
das
stc
add
jp
ret
cmc
xchg
loope
or
cltd
sbbl
gs
xchg
daa
lods
call
out
mov
daa
add
les
adc
sbb
cli
cmovnp
inc
cmp
test
pop
std
loopne
dec
pop
stc
imul
loopne
int
stos
std
fildll
push
fistl
mov
cltd
cs
sub
mov
sub
dec
in
loope
fcomps
sub
outsb
mov
push
shrl
add
push
icebp
in
jo
xchg
cltd
lods
jne
neg
inc
mov
enter
lea
mov
aaa
lcall
movl
and
dec
mov
inc
lea
cmp
pop
sub
icebp
mov
mov
pop
pop
jns
lods
rcrl
xorl
pop
cs
orb
or
lahf
iret
jnp
out
daa
mov
mov
xchg
fisttpll
jb
xor
dec
pop
mov
xchg
sbb
cld
shl
sbb
insl
rcrb
aad
das
xchg
movq
cmpl
xor
cmpsl
into
test
mov
inc
inc
shlb
arpl
mov
pop
dec
xchg
push
push
xchg
leave
adc
or
cmp
xchg
push
arpl
cmp
pop
insb
or
add
push
pop
cmp
pop
mov
adc
shll
push
mov
sub
mov
in
dec
jmp
popf
js
dec
sub
push
or
rorl
into
sub
hlt
sub
mov
fs
sbb
testl
xor
jmp
sbb
repnz
xchg
sub
test
sbb
jb
xchg
jnp
mov
pop
ljmp
stos
mov
jp
pushf
jmp
jae
out
or
popa
shr
lds
jp
sbb
xchg
inc
hlt
xchg
xchg
dec
in
iret
xor
stc
add
sub
hlt
repnz
rcll
idivl
sqrtps
xchg
out
jbe
and
test
adc
push
loopne
cwtl
cmp
in
mov
dec
inc
dec
stos
leave
mov
mov
test
jae
jge
push
fs
fcomps
mov
xlat
ss
or
jne
inc
add
notl
xchg
loope
lea
mov
dec
pop
sub
es
jnp
pushf
or
mov
xlat
repz
in
jb
push
pusha
jb
dec
cmp
test
movb
mov
pop
cmp
push
fisubrs
data16
jne
cmp
inc
dec
ret
push
fidivrl
enter
cli
dec
push
cmp
outsl
fcompl
jo
shll
cs
sub
inc
inc
sar
lods
mov
ds
pop
jb
mov
cmpsl
icebp
jge
inc
pusha
add
cmc
scas
push
cld
xor
hlt
dec
filds
push
fdivrl
add
xchg
imul
jecxz
pop
mov
js
stos
iret
lods
cmpsl
lock
loopne
xor
fs
daa
adc
call
fstp
push
lods
sub
int3
test
xchg
xor
push
rcrl
mov
popf
jb
push
loopne
adc
inc
leave
and
jae
push
adc
adc
ficompl
jno
cmpb
into
or
xchg
jge
push
fwait
mov
cltd
pop
adc
jnp
pop
jg
pop
adc
movsl
into
dec
lea
fisubl
cmpsb
xor
fcompl
stos
or
cld
sub
and
mov
push
adc
mov
es
fisubl
add
dec
jo
and
lds
loopne
jecxz
call
mov
ljmp
aad
or
sahf
dec
test
loope
aas
dec
jge
arpl
mov
repz
xor
and
add
loop
inc
dec
jge
xorb
out
or
sbb
fwait
or
xchg
insb
stos
addr16
xor
adc
cwtl
in
stos
loope
sub
inc
mov
enter
pushf
sti
cmp
test
pushf
cwtl
jno
jo
je
cwtl
xor
mov
pop
loop
sub
aas
fdivrl
add
andl
add
out
xor
xor
mov
mov
std
add
pop
test
sbb
inc
adc
xchg
aaa
movl
repz
and
cmp
push
sarl
inc
adcl
pop
pavgw
xchg
sbb
mov
movq
call
in
mov
mov
push
xor
add
and
fmulp
mov
mov
inc
icebp
gs
cmp
xchg
mov
xchg
and
adc
lahf
sub
adc
or
ds
movsl
bound
push
popf
sub
nop
jo
sub
dec
push
sub
insl
pop
dec
xlat
insl
rorl
pop
mov
sub
adc
decb
add
xchg
mov
cmp
lods
aaa
in
ds
adc
fisubrl
mov
ljmp
mov
inc
repnz
mov
adc
sbb
sbb
sub
je
xlat
es
xchg
pop
pop
loopne
cld
out
repnz
jnp
or
xor
or
insb
rolb
data16
inc
aad
sub
lret
cmp
movl
lahf
sbb
jbe
and
adc
js
sub
fistl
rep
popf
aam
mov
shl
pop
ja
add
jae
and
mov
das
pushf
xor
or
mov
loopne
sahf
test
roll
les
mov
or
addr16
lock
nop
negb
xor
or
sub
sub
rcrl
jbe
js
orl
adc
clc
cmp
or
or
imul
outsl
push
rorb
fsubrs
test
cltd
xchg
mov
xor
or
adc
std
call
cmpsl
nop
jmp
mov
call
xchg
jg
fstpl
scas
jl
dec
sub
lds
xchg
jmp
push
mov
mov
push
cmpsl
jns
xchg
and
test
adc
pop
inc
in
inc
aas
fistpl
dec
push
or
sub
mov
xor
add
inc
cs
lahf
pop
cmpsb
test
sub
inc
mov
push
mov
adc
aas
cmpsb
mov
adc
je
inc
arpl
pop
bound
cmp
cmp
mov
dec
add
enter
cmp
imul
ja
dec
cmp
js
dec
or
icebp
mov
sbb
int
adc
mov
repz
rol
mov
repnz
xchg
add
pop
jnp
cmp
iret
rcrb
push
xchg
lret
pop
sbb
adc
icebp
jle
insb
pop
cmp
sbb
xchg
dec
sti
aam
jb
pop
sbb
pushf
test
pop
ret
shlb
mov
or
in
popf
loop
repnz
pop
xchg
fsubrl
xorl
adc
sbb
fldcw
xor
xchg
xchg
ljmp
cwtl
lock
add
loopne
cmpsb
in
mov
mov
test
fs
dec
adc
xor
and
mov
test
movsl
mov
xor
jnp
insb
xchg
test
inc
outsb
xor
jns
jl
mov
incb
mov
aam
mov
mov
inc
mov
scas
jb
into
mov
divl
mov
dec
insb
fsubrs
mov
lods
shll
das
pop
lods
xor
push
inc
jp
loop
sti
imul
les
mul
js
leave
push
adc
call
sysret
rcr
in
cmp
test
lds
mov
insl
pop
movl
rorb
insl
pop
inc
mov
sub
xor
insl
xor
mov
adc
leave
add
gs
pop
add
int3
add
repz
sarl
ja
pop
in
addr16
sbb
pop
sbbl
rcr
call
jb
divb
in
in
mov
les
and
filds
push
lds
jmp
cmp
sahf
sub
cmpsl
loope
lea
int3
adc
mov
mov
outsl
xchg
insl
jns
sbb
mov
hlt
rorb
dec
or
mov
mov
xor
insb
mov
mov
call
sub
cmp
stos
mov
call
bound
and
les
orl
js
mov
and
data16
test
lock
mov
cmp
xor
decb
fdivrl
cmp
inc
mov
mov
bound
iretw
pop
sub
pusha
or
mov
dec
les
mov
iret
gs
cmp
outsb
ja
mov
in
pop
mov
jp
insb
pop
scas
sub
dec
jbe
pushf
shll
pop
jg
adc
xlat
xor
mov
add
fs
jl
mov
nop
insl
ja
jmp
mov
icebp
mov
cmp
ds
fucom
in
xor
pop
adc
jle
cli
sub
lea
push
arpl
or
sbb
jo
jo
mov
pop
outsl
adc
xor
push
dec
xor
cwtl
push
mov
loope
pop
cs
mov
es
and
ljmp
nop
pop
mov
sarl
pop
stos
mov
xorb
add
inc
add
pop
cmp
dec
int
mov
incl
add
ret
jnp
push
jno
pop
call
or
mov
shll
inc
fbld
or
sahf
cmpsl
insl
mov
mov
js
fmuls
into
mov
in
cmp
jbe
scas
sub
cmp
dec
or
notl
adc
cld
jmp
and
roll
out
cmp
roll
stos
lret
pop
and
and
lods
lcall
push
das
addr16
pop
and
insl
nop
xchg
fisttps
push
ss
mov
stos
jecxz
cmp
cmp
ss
adc
decl
cmp
aad
int3
cmp
in
sbb
ljmp
insb
cmp
lds
movsb
fcmovu
rorb
dec
lret
cli
rcl
iret
imul
cwtl
mov
and
fstpl
sub
jecxz
rcr
add
cs
cs
pop
pop
add
roll
pop
xor
xchg
dec
rol
dec
xchg
les
repnz
cld
pop
rclb
outsl
sub
repnz
jl
or
ss
xchg
cwtl
cltd
sar
shl
fcmovu
das
je
sbb
jg,pt
data16
loop
mov
popa
jnp
xchg
out
sub
push
repnz
adc
pop
adc
sub
and
jg
out
inc
xor
int3
inc
dec
pushf
inc
ljmp
mov
lock
stos
and
fistpll
cmp
mov
daa
xor
insb
test
add
lret
mov
push
std
adc
aam
shl
sbb
pop
adc
cmp
pop
xor
add
xor
mov
andl
pop
and
call
dec
and
fiadds
push
ja
push
push
fwait
out
addr16
push
je
inc
jne
dec
xor
push
add
and
pop
mov
xchg
fiaddl
test
mov
les
jecxz
sbb
pop
mov
and
jp
cmp
imul
cmpl
mov
pop
je
pop
call
test
repnz
push
sarb
hlt
out
xchg
ret
ja
dec
dec
adc
and
leave
das
aad
inc
pop
xchg
popf
mov
ret
jle
and
ret
push
and
and
push
sbb
lret
les
fstpl
mov
scas
fcmovne
jg
or
xchg
lds
scas
push
les
fimull
shrb
adc
fucom
add
xchg
test
out
lock
add
push
cmp
fimull
xor
out
das
dec
and
pop
add
not
mov
stos
mov
jp
push
xor
xlat
cltd
jne
mov
sarb
sarl
jmp
in
aaa
adc
js
cmp
adc
das
sarb
add
out
test
rcrb
in
repnz
cwtl
mov
test
mov
mov
out
jne
jo
push
test
shlb
pop
dec
sub
cmpsb
pop
aas
mov
int3
add
in
out
add
add
das
pop
pop
test
xlat
pop
test
xlat
adc
and
pop
inc
sub
aaa
cmpsb
dec
loop
push
pop
sti
add
sbb
cltd
cmpsl
pop
into
cmp
xor
push
xchg
xor
nop/reserved
sbb
jbe
fisttpl
cmpb
sahf
andl
imul
and
rcpps
push
cmc
les
arpl
xor
sbb
movsl
adc
stc
lret
mov
inc
lods
xor
mov
pop
sub
sub
lret
mov
mov
adc
pusha
sbb
mov
xor
test
mov
jb
cwtl
or
mov
adc
cmc
movsb
outsb
or
lcall
ss
and
shl
clc
jmp
cmp
fsubrp
cmp
fstpl
jae
and
xchg
test
outsl
and
cmp
repnz
jnp
rcrb
jmp
cmp
aaa
arpl
dec
push
mov
and
rcrl
sbb
aam
xor
movsl
std
lds
mov
mov
js
int3
fbld
ds
test
mov
inc
out
repz
mov
mov
mov
int3
jne
outsl
push
pop
nop
enter
push
int3
out
mov
in
shrl
or
and
pop
push
mov
in
dec
mov
ret
cmp
es
sub
mov
mov
jbe
fstps
in
rorl
mov
mov
movsl
xchg
jle
out
leave
je
add
sbb
jg
xorb
inc
sbb
in
insb
pushf
lea
push
mov
es
and
shl
out
inc
cmp
and
sarb
daa
lahf
fs
push
inc
sar
loope
es
jl
std
mov
insl
or
pop
sar
sahf
arpl
jb
cmp
adc
xchg
sbb
inc
hlt
xchg
add
nop
inc
dec
jae
ret
mov
arpl
xor
sub
or
mov
mov
ljmp
push
fucom
pop
sub
pop
cmp
adc
dec
and
out
dec
sub
stos
jae
imul
arpl
mov
and
rorb
jnp
aad
lcall
xchg
mov
sub
es
outsb
aam
sub
adc
lock
ljmp
adc
and
sbb
ds
popf
je
xor
test
push
mov
or
dec
mov
jo
xchg
mov
jo
xlat
lods
aad
faddl
std
or
test
shll
add
sbb
dec
adc
ja
sub
repz
fstps
std
pop
rolb
mov
lret
fldt
add
popa
jle
idivl
xchg
inc
mov
fimuls
in
cs
aam
fldcw
fcomps
cmp
xchg
xchg
or
mov
inc
out
orl
or
jns
pop
xor
jnp
cwtl
jmp
mov
fdivrl
cmpl
adc
subl
add
cld
out
and
jle
enter
cmp
scas
fisubs
fisubl
aad
clc
push
icebp
lods
mov
imul
imul
sbb
cmp
mov
mov
mov
rclb
jo
xchg
pop
pop
jns
cmpl
rolb
adcl
xor
stos
adc
lcall
movsb
cmp
and
cmp
ja
mov
sbb
rclb
jecxz
das
sub
jo
ds
mov
ror
xor
sub
iret
es
cs
xchg
dec
pop
pop
ret
int
cmp
cwtl
ss
mov
mov
pop
xlat
ss
sti
jle
lret
xchg
lods
add
fistps
pop
insl
mov
and
popl
add
mov
popl
daa
pop
pop
sbb
mov
leave
sub
js
push
lea
scas
or
cld
enter
call
das
push
or
xchg
lea
int3
push
cmp
adc
mov
cmp
cmc
pop
mov
or
in
push
sub
push
gs
cmp
xchg
std
dec
mov
xchg
movsl
sbb
gs
aaa
loopne
dec
pop
xor
in
cmp
xchg
jge
movsl
push
cld
jnp
movsb
icebp
xlat
mov
xchg
orl
aam
nopl
dec
mov
pop
cli
test
and
jne
dec
fsts
shrd
lds
inc
test
mov
out
repnz
call
lret
mov
pop
add
and
inc
mov
ss
push
sub
mov
sub
cmp
adc
inc
pop
out
or
daa
insl
adc
pop
lahf
aaa
inc
test
out
push
fstpt
adc
push
loopne
push
inc
mov
cmp
xor
mov
pusha
or
xor
stc
mov
xor
or
test
ret
push
mov
and
int3
jns
xor
out
cmpsb
popf
flds
inc
push
push
or
and
cld
xchg
int
sbb
inc
mov
inc
out
out
and
fwait
cmp
push
jg
xchg
insl
mov
push
sbb
and
daa
cs
xchg
cld
stos
push
mov
mov
xchg
cmpsl
stos
cmpsl
xchg
orb
orb
std
and
mov
cli
pop
jb
sub
jne
mov
dec
cmpsl
inc
pushf
fisubrs
dec
pop
mov
je
pop
xchg
adc
jbe
daa
sub
ds
pop
sahf
fcomp
lods
ret
inc
fistpl
dec
popf
leave
cs
int3
call
push
outsl
leave
imul
dec
sbb
dec
pop
pop
loope
int3
cltd
data16
cmp
movsb
pop
jp
lods
push
inc
sbb
adc
out
xchg
sahf
or
sbb
push
or
das
gs
fstp
push
movsl
mov
aam
xor
cmpsl
inc
lods
lahf
ds
pop
pop
rol
jl
cmc
imul
or
dec
mov
push
leave
inc
imul
pop
sub
sub
push
add
pushf
jns
les
cwtl
nop
mov
jns
aad
dec
adc
push
jnp
sti
push
dec
test
and
and
sub
push
shll
aam
cld
push
adc
mov
dec
adc
and
jnp
loope
pop
dec
mov
push
ljmp
imul
scas
adc
std
mov
inc
mov
test
cltd
aas
sub
ja
cmp
cmc
sub
out
addr16
aaa
and
fsubrs
push
cmp
sub
les
negl
fidivs
aad
inc
jns
add
dec
sahf
aaa
fwait
adc
setl
dec
gs
xor
out
sti
pop
xchg
ret
cmpsl
inc
jns
out
fiaddl
cli
mov
push
push
shrb
outsb
push
jo
jmp
movsb
into
xchg
mov
push
jo
bound
in
xor
pop
sub
in
nop
cmp
lds
cmp
roll
adc
data16
aam
push
cmpsl
cmpsb
outsb
fisttps
adc
push
repz
inc
adc
cmp
scas
enter
push
sbb
jmp
hlt
mov
jg
addr16
shrl
rcrl
inc
cwtl
fsubrl
pusha
sub
lock
mov
xchg
push
mov
jbe
rcr
mov
pop
fs
jecxz
stc
repnz
rclb
lcall
js
shlb
pop
push
outsb
jnp
xchg
loop
imul
imul
dec
das
stc
sarb
out
mov
pop
adc
and
ljmp
gs
and
fucomip
mov
push
inc
pop
jae
mov
fimull
call
pushf
outsl
mov
cmpsl
mov
jae
mov
aas
mov
mov
inc
lcall
or
and
fs
incb
inc
sub
adc
cmpsb
lcall
xor
pop
lret
jmp
pop
inc
mov
arpl
imul
mov
outsl
push
sbb
inc
sbb
mov
dec
mul
jae
nop
imul
out
cwtl
nop
ret
es
add
mov
jae
xor
dec
lcall
xchg
stos
pop
sbb
pop
out
fisttpll
mov
dec
add
lods
xchg
mov
add
jl
test
cltd
adc
sub
cmp
out
inc
sub
je
out
mov
add
pop
fs
pop
call
xchg
cwtl
mov
aas
into
dec
leave
mov
pop
imul
in
jnp
push
insl
cltd
out
xchg
jp
jl
cld
imul
mov
dec
add
or
push
cs
pushf
lahf
imul
push
sbb
mov
idiv
add
jle
push
popa
sub
add
pop
ret
and
jg
xchg
and
je
bound
int3
ljmp
xchg
cld
outsb
ja
cmpb
pusha
pop
popf
push
pop
fs
push
and
jns
int3
sbb
xchg
int3
jns
out
cltd
push
fs
add
xor
mov
mov
mov
xchg
ss
cwtl
lcall
mov
fxch
imul
jmp
xor
jmp
movsb
xor
in
sbb
in
aam
and
data16
push
fsubrl
movsl
in
pop
call
jb
enter
inc
mov
es
icebp
cmpsb
test
fwait
mov
es
aam
or
dec
add
test
mov
inc
jb
out
movsl
or
popf
dec
inc
mov
aas
sbb
jle
or
aaa
shl
loop
popl
in
lds
mov
mov
adc
or
shrl
int
lcall
lods
call
xorl
push
in
mov
jnp
xor
shr
dec
mov
rolb
outsb
stc
pusha
repnz
dec
jp
cltd
pop
scas
mov
test
pop
hlt
fsubs
inc
das
sub
mov
cmp
xorb
jecxz
in
aad
jecxz
popa
push
xor
inc
ret
add
jo
imull
loopne
mov
roll
mov
xchg
adc
jmp
std
call
cmp
addr16
sub
inc
adc
jno
dec
aam
jp
dec
mov
inc
pop
mov
sbb
shr
fstps
pop
and
adcb
xchg
adc
inc
fisttpll
repnz
jnp
push
sub
call
or
mov
cmpb
jmp
xor
int
sbb
jns
or
cmp
test
sbb
in
cltd
int3
inc
lds
push
stos
insl
movsb
xchg
clc
add
add
lret
and
movsb
lods
add
dec
out
lock
fsin
xor
pcmpgtw
testl
call
adc
jle
imul
sbb
lret
jl
cld
mov
sbb
pop
dec
lock
sub
sbb
insb
adc
shlb
orl
add
jb
hlt
push
data16
subl
push
dec
test
enter
push
jnp
adc
or
mov
aaa
pop
sub
sub
das
cs
fstps
add
mov
arpl
sub
jle
jnp
and
or
and
testb
adc
rep
cld
cmp
xchg
orl
push
fldl
out
inc
fwait
push
mov
adc
mov
mov
ret
pop
push
cmpsl
testb
rorl
ret
pushf
lret
pushf
in
cmp
jo
jl
aad
cmp
jne
mov
test
cmc
ss
xchg
loope
loop
lcall
xchg
lea
inc
xor
xlat
push
je
fmull
rcll
dec
add
insl
in
push
addb
mov
mov
aad
sub
xor
push
jg
mov
leave
ljmp
xchg
cwtl
js
lret
mov
outsl
add
or
cmpsb
jnp
pusha
in
roll
cwtl
inc
jns
insb
dec
push
lcall
outsb
push
scas
mov
fcoml
sbb
jg
cwtl
jge,pt
jbe
or
push
fwait
lcall
mov
idivl
dec
dec
stc
lret
inc
out
bound
or
dec
mov
into
push
pushf
pop
or
fisubl
imul
fwait
lds
aas
xchg
inc
and
imul
adc
sub
cwtl
lods
or
push
cwtl
pushf
repnz
mov
test
mov
arpl
sti
rep
mov
add
adc
push
orb
xchg
sbb
jmp
jmp
aad
cltd
hlt
cmp
loope
jecxz
mov
ljmp
mov
stc
xorb
mov
add
jl
aam
movsb
call
fwait
movsb
or
sub
fidivrl
jbe
pop
xorb
out
adc
xchg
push
jae
test
sbb
sbb
mov
and
dec
jae
cmpsl
mov
xchg
sbb
rcrb
sbb
push
es
mov
cs
jne
dec
es
scas
shrl
rolb
cwtl
sub
lock
imul
fs
xchg
call
mov
xor
xor
mov
loop
jno
xchg
add
sub
pop
mov
inc
dec
movsl
mov
insb
stos
pop
lret
bound
xchg
adc
mov
sub
cmp
mov
lds
inc
xlat
add
and
and
mov
inc
fdivs
xchg
stc
fnstenv
mov
out
pop
sti
lds
testb
out
mov
roll
test
adc
in
cmp
mov
inc
fsubp
and
gs
add
aaa
jbe
test
les
push
test
adc
pop
mov
or
movsl
aad
rolb
dec
punpckhbw
add
xchg
sub
xchg
mov
mov
ret
pop
mov
imul
and
cltd
gs
shrl
xchg
stos
rcrl
sub
or
xchg
inc
xlat
xor
push
jmp
jns
xor
push
cmp
push
sbb
mov
sub
mov
out
nop
loope
xor
mov
dec
and
mov
bound
xor
lahf
mov
push
fnstcw
lea
cli
fdiv
stos
or
cld
adc
enter
sbb
dec
cmpsl
push
outsb
push
sub
jb
and
rorb
arpl
test
movsl
les
loope
bound
mov
clc
xchg
xchg
daa
rolb
loope
jo
stos
add
enter
sub
inc
xorb
repnz
in
push
lods
mov
lret
bndldx
add
lock
movsl
cmp
pop
and
data16
pop
div
dec
xchg
imul
js
cmp
or
add
aaa
cmp
dec
cmpsl
xchg
in
sbb
test
enter
and
mov
iret
and
jl
pop
jp
mov
push
and
insb
xchg
stos
jg
sbb
stos
outsl
push
sbb
enter
ja
adc
movsl
cmp
fwait
call
jmp
dec
jecxz
loopne
mov
pop
das
add
out
jl
scas
inc
xchg
push
jge
test
mov
pop
dec
out
pop
inc
clc
push
jg
dec
popa
jbe
or
rcrl
add
inc
ds
sbb
mov
nop
daa
push
xor
inc
ja
cmp
or
sbb
aam
das
rclb
popf
xchg
bound
xchg
mov
pop
push
hlt
cld
xchg
lret
aaa
mov
sbb
xchg
or
nop
bound
xchg
sbb
xchg
xchg
jno
ret
mov
mov
scas
out
xchg
mov
or
fidivl
xor
mov
lock
into
testl
imul
or
shlb
ss
daa
lret
bound
insb
sbbl
cli
inc
fucomp
scas
lods
inc
and
jb
adc
push
out
ljmp
or
sub
pop
jge
nop
jnp
lea
movsl
sub
inc
jnp
cmp
cmp
in
push
pushf
xor
data16
ds
xchg
out
lret
mov
cmp
inc
out
je
or
sbb
pop
or
sbb
and
sub
fbstp
dec
jmp
jg
push
out
lahf
mov
shrl
dec
loopne
repnz
and
jle
inc
stc
jne
inc
cwtl
add
push
ljmp
mov
fidivs
rcrl
xchg
outsb
int3
xchg
cmp
add
sbb
cmp
and
and
and
xchg
lods
repz
pop
dec
dec
xchg
shlb
addr16
mov
bound
fistpll
fnstsw
xor
sbb
cmp
xchg
daa
fadds
in
or
dec
test
sub
xor
jl
add
xchg
cli
fdivr
loop
inc
imul
jns
ss
and
ljmp
add
adc
jl
cwtl
mov
es
rorb
popf
popf
das
xchg
sub
xor
dec
sbb
inc
dec
inc
add
iret
subl
sub
ss
mov
lock
xchg
data16
repnz
stos
scas
ljmp
cwtl
out
push
enter
sbbl
adcl
jae
rcl
fsts
out
cld
bound
dec
idivl
fnstcw
or
into
gs
and
xchg
ret
or
jnp
and
xchg
pop
inc
fmull
in
add
imull
inc
fisttpll
fsubrs
xchg
add
lret
mov
xor
int
adc
int3
arpl
aam
xchg
dec
jecxz
or
jp
testb
pop
aad
popl
out
xlat
decb
xor
mov
mov
daa
and
mov
push
xchg
pop
cmp
jbe
or
jge
sbbl
repz
cld
repnz
pop
sbb
pusha
neg
inc
push
out
jno
imul
lcall
sub
mov
sub
jo
cmp
mov
ja
add
push
sbb
in
xor
inc
xor
pop
lock
or
or
sub
xor
daa
fbstp
xor
xor
aaa
cbtw
das
push
das
int
pusha
xchg
xchg
sub
jnp
push
lods
dec
es
mov
test
jb
and
repnz
xchg
mov
or
shrl
cmp
movsl
fisttpll
sub
adc
sub
int3
xchg
rolb
jns
mov
xchg
jb
xchg
leave
stc
nop
cli
popa
inc
fcoms
cmp
cwtl
jl
or
cmp
pop
aas
jbe
aas
sti
xchg
scas
push
sbbl
sbb
popa
js
push
pop
lds
les
push
out
pop
push
out
xchg
adcb
xchg
sub
cmc
insb
add
jecxz
les
mov
and
xor
insl
add
inc
inc
xlat
xor
in
inc
jne
cmp
lods
inc
push
dec
mov
movsl
dec
testb
dec
cmp
aas
pop
into
gs
dec
jns
aas
aad
les
push
mov
inc
pop
mov
data16
insl
add
gs
out
pop
out
cmpsb
pop
pushf
xor
dec
orl
cmp
inc
jbe
xor
cmp
lods
fiadds
inc
and
sbb
xchg
retw
pop
cltd
ljmp
add
call
outsl
inc
mov
adc
cmp
lahf
popf
fbstp
enter
push
rcrl
ja
adc
pushf
xor
dec
or
xor
dec
cwtl
xor
movsb
ret
hlt
cmpsl
sub
push
out
out
xchg
push
sbb
insl
mov
movsl
dec
out
mov
mov
sub
lea
xor
nop
addr16
nop
sarl
mov
dec
out
stos
cmp
fsubl
loopne
cmp
mov
push
lcall
mov
movsl
pop
inc
mov
lock
aaa
nop
daa
cmpsl
pushf
add
adc
pop
dec
out
xchg
inc
xlat
mov
jp
cld
dec
jecxz
mov
mov
cmpsb
pop
mov
and
xor
sub
adcb
test
popf
mov
clc
jo
cwtl
das
fidivs
push
arpl
sub
cmp
mov
aad
push
xchg
insb
add
dec
lock
cli
xchg
dec
aas
jae
scas
xchg
movsb
cmp
scas
in
test
adc
inc
pop
jo
push
fwait
loope
int3
xchg
lock
pop
jl
dec
dec
outsl
push
cmp
std
xchg
popf
push
mov
add
lods
clc
and
sbbl
or
cmc
mov
sub
pop
push
adcb
and
jg
lods
js
fdivrp
es
or
mov
and
jg
mov
inc
fcmovb
pop
fbstp
sbb
sub
sbbb
lahf
fidivs
adc
stc
inc
aas
es
lahf
rcrl
fbstp
or
pop
nop
daa
push
and
popf
test
cwtl
das
mov
mov
push
insb
inc
imul
pop
popf
addr16
mov
test
inc
xlat
inc
repz
outsl
push
dec
cmp
push
dec
xlat
fbstp
sahf
adc
sbb
lods
inc
dec
sbb
adc
repz
adc
out
xor
sub
xor
mov
xchg
sub
ret
add
push
aas
pop
shlb
ds
or
mov
inc
and
sub
fidivs
lcall
xchg
sub
xchg
cmpb
repz
test
push
pop
loop
push
mov
loop
out
dec
rclb
pop
sahf
xchg
stc
or
mov
mov
cmpsb
cmp
popf
pop
cmp
loopne
push
aam
lret
sbb
stos
mov
or
lret
push
movsl
sti
mov
mov
push
xor
imul
in
orl
bound
xchg
sub
clc
shrl
rolb
add
mov
ret
pop
rcl
insl
add
in
sbb
pop
dec
in
ljmp
pop
sbb
dec
out
aam
pop
enter
cld
or
jnp
mov
sbb
xlat
push
xor
cltd
imul
push
pusha
les
mull
sbb
adc
add
inc
jnp
ljmp
cmp
jg
scas
sbbl
out
adc
pop
xor
dec
inc
and
je
cli
xchg
add
push
mov
mov
jnp
stos
testb
sub
pushf
xor
add
mov
cmpsl
ds
lods
push
in
fimuls
mov
cmp
jp
push
repnz
shl
xor
sbb
stos
mov
fwait
xor
sarb
cwtl
cmpsb
cmp
es
rolb
mov
cltd
mov
xsha1
cmpsb
iret
or
cmp
ljmp
ret
lret
bound
mov
pop
hlt
loopne
mov
inc
cli
call
divl
mov
fsubp
jb
shlb
mov
sbbl
daa
iret
pop
repnz
mov
mov
popf
xor
mov
lds
mulb
out
xchg
shrl
cmp
arpl
inc
fxch
je
or
jnp
or
push
lcall
xor
pushf
mov
jne
push
or
fldl
and
in
sub
aaa
into
fimuls
pushf
xor
aam
push
enter
inc
or
jp
inc
jns
inc
insl
adc
jo
jo
mov
shll
adcl
mov
xchg
ljmp
dec
out
cmp
stc
mov
movsl
cld
xchg
lods
loopne
and
cmpsl
ds
and
mov
pushf
cmp
into
sbb
jnp
add
jle
les
jb
push
and
pop
mov
outsl
adc
or
inc
add
xor
sub
adc
mov
movsb
into
xlat
sbb
or
lret
lcall
mov
mov
xchg
sub
xor
lods
cmpsl
sbb
lds
out
push
xchg
shlb
push
adc
push
mov
jo
mov
movsb
jmp
in
fidivl
push
push
jmp
rcrb
out
test
push
movsl
mov
mov
aam
sub
sahf
pushf
sub
pop
fucomip
or
push
pop
sahf
jge
mov
fisttpll
adc
push
pop
xor
mov
movsl
rcrb
add
inc
fprem
inc
insb
add
popa
clc
dec
jge
xor
lods
test
fidivrs
mov
dec
adc
mov
mov
clc
mov
or
scas
cmp
ds
jbe
ss
nop
cwtl
pop
icebp
lret
out
in
jp
pop
pop
ja
cmp
xchg
sub
lea
scas
inc
fsubp
shrl
add
xor
repnz
in
test
movsb
pop
lcall
and
out
inc
inc
fidivs
push
rclb
sbb
out
jg
sbb
cmpsb
cmp
popf
xor
ret
pop
mov
jge
loopne
je
sub
xchg
pop
aaa
sti
xchg
imul
mov
sarb
rolb
fnsave
into
push
and
push
das
push
in
pusha
jne
push
cmpsl
xorl
cli
aam
sub
sbb
dec
dec
daa
scas
inc
pop
outsl
shrb
jp
lods
ret
cmc
scas
jmp
pop
out
xchg
sub
pop
or
imul
dec
loopne
mov
imul
clc
cli
xchg
sub
movsb
cmp
stos
inc
dec
jg
aad
jp
fs
loopne
mov
sbbl
mov
sbb
leave
inc
jns
push
stos
test
divl
or
std
sti
xchg
das
cmc
mov
imul
aaa
into
mov
mov
cli
xchg
test
ss
lods
pop
sahf
pop
xor
pop
fs
adc
mov
inc
xlat
add
dec
loope
push
lahf
cmp
inc
fcoms
mov
sbb
sub
test
movsb
shrb
add
scas
ss
testl
stc
jnp
jmp
cld
xor
out
mov
test
out
stc
nop
daa
das
or
aaa
xor
push
jae
arpl
mov
jmp
lahf
sub
mov
bound
inc
fldt
mov
sbb
es
sbb
in
inc
and
lea
popf
mov
out
xchg
xor
mov
loope
sub
mov
sub
jge
sbb
insb
xchg
xchg
mov
add
sbb
mov
or
add
pusha
int3
arpl
int
or
sahf
call
es
ja
pop
scas
subl
lahf
ret
mov
fidivs
mov
lods
daa
loop
pop
adc
pop
mov
dec
and
dec
in
clc
xor
jmp
out
xchg
jmp
sbb
lea
lods
inc
mov
sub
add
pop
aad
mov
decb
das
jge
lahf
push
stc
nop
xchg
mov
mov
int3
add
jnp
das
mov
rorb
lahf
rep
add
call
leave
pusha
mov
jne
stos
inc
sub
jne
pop
mov
push
mov
in
test
and
pop
aas
mov
lds
data16
lcall
imulb
add
mov
and
push
insl
xchg
stos
inc
or
gs
xchg
sub
fucomp
test
adc
shll
lods
inc
imul
push
in
mov
mov
imul
sub
fnstenv
xor
mov
loopne
mov
xor
mov
imul
mov
jg
repz
dec
ds
xor
xchg
imul
fwait
fwait
std
xchg
or
fsubrs
cmp
lock
and
cmp
sarb
stos
insl
loop
mov
jne
inc
cmpsl
loope
or
mov
fsubrs
ljmp
fiaddl
and
xchg
loopne,pn
ss
adc
insl
or
pop
std
mov
sub
out
icebp
sbb
data16
mov
sahf
xor
xchg
mov
xchg
adc
sahf
xor
cwtl
xor
js
sbb
jl
push
out
test
or
and
xchg
repnz
jle
cmp
xor
jbe
out
mov
jbe
shl
repnz
mov
and
jle
jne
dec
ss
mov
enter
iret
inc
mov
sahf
xor
sbb
dec
cmc
mov
rol
push
repz
pop
nop
ljmp
enter
pop
or
pop
jnp
in
test
jp
dec
push
mov
dec
pop
jns
add
ret
cmp
dec
dec
pop
call
push
fcoml
std
scas
inc
out
call
ret
xor
push
sbb
loopne
lret
aam
push
enter
inc
sbb
testb
xchg
fimull
mov
cmp
lahf
lea
ss
push
fistpll
into
mov
pusha
mov
cmpsb
jae
fld
jp
mov
mov
mov
pop
sub
jmp
shrl
pop
sahf
orl
fwait
xor
mov
shrl
sub
jns
cmpsl
insl
add
loopne
adc
add
cmpsl
xor
and
xchg
mov
popa
lds
jecxz
leave
dec
loopne
mov
out
clc
mov
shlb
pop
imulb
in
int
mov
fidivl
scas
outsl
push
loope
imul
cli
adc
dec
xor
inc
jno
push
in
scas
andl
ljmp
add
inc
insb
add
inc
adc
xor
inc
fwait
inc
mov
cmp
dec
out
dec
pop
repz
icebp
mov
dec
hlt
mov
cmp
xor
xor
mov
shlb
inc
in
sbb
sbb
inc
jecxz
js
es
bound
xchg
jns
mov
std
sahf
mov
push
out
cmp
inc
or
xor
cmp
jae
mov
ss
popf
xor
ja
idivl
or
push
cmp
xchg
push
jae
in
push
out
xchg
outsb
jl
pop
ljmp
fs
sub
ja
sti
xchg
push
jo
insb
mov
mov
js
mov
stc
nop
daa
mov
inc
mov
xchg
aad
push
leave
testl
shlb
mov
test
jne
fsubl
rcl
repnz
imul
mov
adc
push
arpl
pop
cmp
dec
out
cs
add
call
inc
fadd
inc
mov
jbe
out
xchg
int
mov
sub
or
fmuls
mov
out
jl
dec
scas
in
dec
fnstsw
mov
fsubp
jecxz
cmp
fldcw
add
add
dec
test
cmpsl
mov
mov
mov
rorl
movsl
cld
dec
repz
xor
int3
arpl
subl
icebp
fdivl
xchg
cmpsl
push
add
out
das
cmpsl
dec
popa
clc
test
in
jns
loopne
out
jbe
fbstp
fs
cld
lea
shll
or
mov
jg
push
push
imul
imul
lods
xor
aas
pusha
xor
mov
mov
add
push
scas
inc
dec
in
mov
ret
pop
cmpsl
hlt
ret
pop
daa
cmpsl
pop
sahf
push
inc
pop
hlt
jb
int3
arpl
call
inc
mov
push
out
loop
rclb
inc
dec
in
andl
ja
cli
xlat
inc
faddp
in
and
push
pop
jbe
xor
xorb
push
imul
pop
call
cmp
or
shll
push
cmp
inc
cmp
xor
push
mov
mov
mov
test
mov
stos
fimuls
pop
sub
mov
popf
js
scas
inc
shll
xchg
icebp
xor
in
push
call
xchg
jmp
sbb
xchg
sub
pop
scas
inc
dec
outsl
daa
mov
repz
stos
inc
jae
mov
shl
xor
arpl
stos
inc
ja
mov
shl
mov
aam
or
jbe
sahf
cmp
or
lods
inc
sahf
jle
repz
mov
fisubl
mov
stos
inc
inc
icebp
cwtl
das
and
cmp
shrl
pop
ja
imul
outsb
add
int3
sti
adc
xorl
dec
movsb
lods
inc
sbb
icebp
lods
cmp
popa
imul
adc
mov
and
in
nop
mov
call
in
dec
addb
push
repnz
adcb
das
xchg
ss
jno
sub
and
rcl
jg
adc
repnz
jecxz
scas
jg
push
repz
adc
push
scas
inc
mov
jb
jge
cmpsl
cmp
fists
movsl
xchg
or
fwait
mov
xchg
cs
pop
int
pusha
inc
sub
lahf
enter
inc
shrl
mov
mov
sti
mov
adc
jno
lods
inc
outsb
dec
out
lret
cmc
push
in
fnstenv
jb
test
andb
out
sahf
nop
sub
ja
sub
jmp
fnop
or
fildll
test
xchg
sub
orb
mov
mov
test
sub
fldenv
xlat
pusha
cli
fsubrs
add
inc
or
leave
pusha
adc
mov
sub
jl
mov
ficompl
cs
xor
add
pop
decb
out
cld
jb
adc
add
mov
mov
push
cmpsl
ja
adc
dec
dec
in
xchg
int
mov
xor
pop
cmc
pop
repnz
fs
jb
sbbl
add
les
pop
mov
push
sub
jmp
imul
dec
pop
mov
push
jmp
sbb
fs
add
test
jl
mov
cmpl
jle
lods
stos
fwait
xor
lock
test
scas
sbb
stos
shl
or
jecxz
aam
inc
cmc
movsb
cmp
popf
in
test
or
arpl
pop
xchg
fwait
out
or
cs
lock
icebp
sti
xchg
sub
int
xor
xchg
sub
xchg
add
fldcw
mov
cli
or
test
mov
jns
push
lahf
fdivl
clc
mov
and
cmpsl
movsl
ret
add
mov
mov
fimull
sbb
pop
repz
xor
adc
adc
or
ds
in
pop
sbb
xchg
sub
loop
cwtl
das
mov
fnstsw
mov
mov
inc
jle
jle
cld
xchg
je
jge
inc
xchg
mov
pop
jecxz
add
cmpsb
cmp
cld
mov
mov
xlat
dec
out
test
fnstenv
jp
or
outsl
aaa
jne
add
xchg
sub
mov
mov
jnp
sbb
mov
shrl
push
sbb
je
dec
fbstp
sbb
pop
inc
fimull
pusha
pop
fwait
repz
pop
fnsave
fsubrs
sbb
cmp
ret
pop
nop
loopne
lds
addr16
and
fs
add
iret
cmpsl
pop
cmc
out
push
xor
dec
mov
mov
enter
push
lods
mov
insl
sub
jo
push
ret
jl
xchg
xlat
fnsave
xor
and
pop
divb
mov
push
dec
push
adc
cmp
sbb
pop
jns
jge
arpl
clc
xor
xchg
cmp
leave
and
cwtl
mov
pop
sub
push
aas
dec
sbb
subps
rorl
jb
fldcw
pop
pusha
jge
scas
mov
mov
test
filds
cmpsb
inc
fistl
or
jle
out
add
int3
xor
mov
fisubs
iret
lea
loop
dec
loop
add
shll
push
adc
jno
loope
sub
sub
dec
pusha
idivl
lcall
pop
nop
daa
xchg
cld
arpl
ljmp
lcall
sub
jbe
mov
ds
stos
lock
cmp
lret
cmp
ds
sar
xchg
ret
xlat
jno
fidivl
sbb
jb
idivb
add
or
cmpb
into
pushf
cmpsl
ds
jb
nop
subl
fbstp
rcrl
stc
add
out
mov
mov
or
push
pop
nop
or
and
arpl
aam
xor
int3
arpl
lds
mov
rcl
cli
xchg
leave
jbe
xor
xor
iret
cmp
fnclex
jns
adc
lret
aam
aas
adc
ss
test
sub
mov
fsubr
or
lock
loop
cmp
sbb
and
dec
loopne
xchg
mov
cmpsb
int
leave
pusha
pushf
pop
hlt
lcall
lcall
mov
push
popa
lods
inc
push
cli
or
addr16
fnsave
and
lds
mov
lea
jns
scas
loope
and
stos
push
add
jbe
push
add
dec
out
ret
jns,pn
push
imul
test
std
xchg
push
jmp
push
jmp
mov
and
mov
xchg
xor
test
inc
push
test
in
push
in
sbb
ret
pop
mov
sub
jnp
sub
dec
loope
mov
pop
add
das
andb
lods
xchg
sub
xchg
and
inc
xchg
cmp
fidivl
pop
cwtl
das
dec
lahf
int3
arpl
pop
mov
popf
addb
arpl
repz
cmpsb
lea
fcomip
mov
mov
dec
jmp
test
xlat
shrl
lcall
cwtl
add
jbe
lock
xchg
int
or
push
popf
push
sub
jo
scas
and
sarl
cmp
lods
push
lret
inc
push
out
movsl
cmp
and
push
ja
shrl
in
and
arpl
add
scas
inc
fsub
scas
icebp
mov
mov
fiadds
mov
test
inc
xor
sbbb
add
shrl
jp
nop
insb
into
adc
lcall
pusha
lods
and
into
xchg
inc
fbstp
mov
mov
bound
xor
push
dec
jecxz
loop
xchg
sub
inc
pop
vcvtdq2ps
mov
lea
sahf
loopne
lock
mov
sahf
xchg
sub
inc
inc
fdivl
xchg
shrb
pop
iret
dec
jle
vmwrite
test
xor
dec
sbbb
icebp
call
or
shlb
hlt
stos
cmp
ljmp
ss
ficomps
iret
out
or
loop
dec
loope
add
je
adc
pop
pop
pop
icebp
xchg
push
lcall
ja
clc
mov
es
jle
inc
leave
inc
fisttpl
movsb
xchg
jbe
jbe
outsl
cltd
mov
mov
sbb
push
inc
lods
lods
inc
pop
ljmp
xor
add
pop
repnz
addr16
popa
dec
in
jp
adc
jno
jne
lcall
outsb
add
xchg
out
mov
mov
mov
or
mov
push
jmp
xchg
imul
pop
aas
push
out
jle
bound
mov
sbb
cmp
loop
clc
xchg
xchg
pop
cmc
les
jl
pop
or
xor
push
ljmp
jno
loopne
insl
adc
nop
daa
xor
hlt
outsb
arpl
scas
and
rcll
jg
sbb
jb
xchg
cmp
rorl
adc
jb
cs
mov
and
jne
push
push
insl
xchg
pop
gs
mov
and
pop
int
cmp
sub
push
adc
or
pop
movsl
xchg
pop
test
in
clc
jecxz
adc
sbb
dec
ss
xor
and
mov
outsb
push
adc
inc
das
cmc
mov
jge
xchg
adcb
mov
fwait
xor
aam
enter
push
cmp
dec
out
pop
fsubrs
js
add
mov
loop
mov
std
add
inc
push
push
xor
xchg
pop
mov
out
idiv
outsl
push
sub
add
and
push
mov
sarl
push
loop
xor
ds
repz
add
adc
adc
or
nop
es
movsl
cli
mulb
mov
mov
mov
xchg
andl
ss
loopne
or
icebp
fdivr
popf
pop
das
push
addb
jmp
adc
negl
and
fnstcw
test
leave
int
fwait
iret
xchg
fidivrs
in
call
or
cmp
sub
mov
dec
loop
xor
pop
add
addr16
push
out
test
test
mov
push
sti
sub
sub
stos
inc
cmpsb
dec
dec
fistpll
enter
data16
rcrb
out
dec
icebp
test
and
pushf
lahf
inc
mov
mov
leave
adc
inc
ljmp
xchg
cmp
jle
jmp
or
fimuls
dec
dec
dec
shrb
rolb
cmc
mov
aam
stos
add
jle
shrb
jb
ds
pop
int
push
cld
shlb
mov
rolb
fisttps
std
sub
pop
push
pop
je
xor
push
scas
shr
xor
fists
call
mov
iret
aam
das
enter
push
mov
test
imul
add
stc
add
inc
xor
push
movb
pop
sahf
add
out
lock
nop
daa
js
sbb
sarb
test
jbe
inc
dec
popa
clc
cmp
adc
add
sub
inc
add
movsl
cmp
enter
insl
xor
les
push
pusha
incl
out
fs
or
add
in
test
inc
ficompl
scas
nop
aaa
pop
js
incl
dec
xor
sahf
jbe
out
aam
pop
leave
rolb
inc
add
loope
movsb
lret
dec
fsubp
fsubs
lods
mov
test
pop
cwtl
and
jne
aam
daa
xor
jns
fadds
xchg
gs
mov
arpl
pop
jo
lret
cmc
cmp
inc
popf
or
lahf
mov
mov
sbb
mov
nop
push
ret
std
or
pop
clc
loop
adc
pop
lret
xor
push
and
sub
aaa
cli
xchg
inc
pop
sub
imul
test
push
sub
cs
sub
cmpl
or
xlat
pop
aam
inc
inc
mov
iret
scas
dec
scas
add
shr
cmp
in
mov
jp
outsb
xchg
test
xchg
sti
jl
into
dec
mov
cmpsl
push
aam
jnp
daa
inc
jmp
into
imul
mov
fwait
loop
cmpsl
outsb
jns
lahf
scas
ret
dec
fcoml
add
shrb
xor
sbb
call
push
repnz
std
out
cmpsb
mov
xor
je
mov
int
cld
mov
cli
and
xor
out
out
sub
outsl
sbb
hlt
xor
rorl
pop
outsb
ja
addb
add
or
out
xor
add
inc
mov
ss
fiadds
jecxz
mov
and
sub
scas
rcll
dec
inc
fdivrl
int3
inc
movsl
into
sbb
mov
cmp
cmp
or
inc
sti
cmp
sets
aad
stc
adc
inc
jmp
mov
stos
or
mov
fsubrl
mov
addl
jae
std
ljmp
cs
jmp
movsb
sub
out
jl
or
jbe
bound
inc
data16
and
mov
add
enter
cs
pop
fidivrl
mov
mov
dec
pop
push
dec
das
mov
push
push
decl
add
daa
xor
xlat
in
imul
call
dec
or
add
cli
or
xchg
sbb
sbb
fsub
jge
push
lods
adc
cmp
jge
stos
and
bound
mov
jne
inc
cmp
movsl
in
lock
add
rcr
cmpsl
xchg
xor
repnz
js
in
inc
ret
rcrb
add
mov
mov
xlat
jle
cwtl
or
push
std
dec
cmp
aaa
sub
lds
sbb
out
mov
adc
or
fistl
pop
scas
add
outsb
mov
sub
sub
add
adc
imul
insl
inc
mov
cmp
jp
mov
movsl
lods
inc
inc
adc
lea
jns
adc
dec
fs
in
mov
sub
ds
into
pop
movsl
cmp
outsl
jns
mov
push
jbe
cltd
or
enter
mov
sub
xor
insl
ret
stos
sahf
jnp
add
arpl
ror
mov
push
dec
push
ret
movsb
xor
xor
pop
dec
inc
mov
xchg
push
mov
sbb
sbb
inc
inc
cli
adc
stos
pop
aaa
fidivrl
inc
adc
loopne
and
and
ds
pop
cmp
dec
inc
add
in
leave
enter
dec
xchg
pushf
mov
lret
jb
pusha
iret
pop
add
notb
jl
out
jmp
hlt
popa
jo
and
jo
dec
push
repz
mov
mov
loop
cmp
punpckhdq
jp
in
rolb
test
sub
cmp
aaa
repnz
icebp
scas
jge
pusha
cld
shlb
aas
sub
dec
scas
xchg
aas
test
pop
aaa
jmp
mov
sub
push
mov
adc
pop
mov
adc
test
aas
pop
xor
aam
or
pop
add
aad
movsb
dec
dec
mov
out
mul
pop
inc
lcall
jo
popf
shr
dec
mov
mov
mov
jno
call
pushf
inc
pop
test
ret
adc
sahf
js
hlt
inc
jb
pusha
ss
mov
out
xor
fst
push
je
cmp
int3
repnz
std
and
mov
sub
test
mov
in
pop
pushf
fidivrs
scas
sbb
pop
add
push
int3
adc
scas
add
mov
stos
sub
jno
dec
inc
les
push
pushl
dec
bnd
out
xor
in
cld
cmp
ror
shl
push
jae
lret
clc
fiadds
mov
stos
push
sti
cwtl
cmpsb
jb
stos
int
sbb
rorb
jl
mov
mov
lods
push
mov
lods
push
pop
inc
lock
mov
and
xor
gs
or
fisttpl
in
mov
pop
dec
dec
sbb
sbb
lret
shrl
out
out
bnd
std
xchg
test
imul
and
loope
mov
shll
mov
ljmp
cmp
out
push
pop
mov
imulb
pop
add
repz
push
jmp
jp
repnz
out
cmp
outsb
test
pop
shlb
je
insb
adc
imul
nop
in
xchg
dec
jno
mov
lahf
pop
pop
sahf
mov
jns
hlt
test
popf
sub
xor
inc
or
mov
stc
jno
adc
fmull
jne
sub
test
into
xchg
mov
mov
xchg
in
and
outsb
clc
xor
sub
or
cmp
push
xor
jbe
stc
inc
lahf
sbb
daa
dec
sbb
push
imul
dec
dec
add
dec
push
sub
push
xchg
sar
sub
out
pop
mov
dec
ss
adc
and
jmp
cwtl
sahf
in
cmp
addr16
sbb
jnp
fmuls
add
imul
ljmp
and
adc
add
mov
sub
add
add
icebp
or
xor
and
xchg
cmp
xchg
cmovle
xchg
dec
sbbb
shlb
pop
jb
call
mov
shll
xor
out
pop
pushf
stos
inc
mov
loop
push
mov
clc
enter
scas
add
pop
mov
lds
push
add
popf
insl
cs
jns
lea
rorl
test
dec
push
pop
popf
mov
sub
cmpsl
jmp
int
jnp
cltd
insl
mov
or
sub
ljmp
inc
push
or
dec
jbe
sbb
push
or
sarl
lahf
sub
sub
ja
xabort
repz
cmovge
inc
daa
push
inc
xchg
mov
pop
cmp
inc
xchg
into
push
daa
cmp
pop
jmp
ja
or
sbb
mov
cmp
lahf
lods
lock
outsb
push
js
ret
pop
je
int3
fcomps
sbbb
fcmove
std
popf
popa
inc
negl
out
mulb
mov
inc
dec
inc
fstpt
and
xchg
lcall
out
adcb
or
cmp
sahf
xor
pop
jg
mov
shrb
lods
out
xchg
lock
mov
sub
orl
lds
inc
dec
jecxz
imull
sub
xchg
push
popf
movsb
cmp
aas
cmpsb
cmp
inc
scas
dec
loope
jp
add
xor
xchg
xchg
and
fstps
aad
cli
ret
pop
aaa
xchg
mov
enter
mov
shlb
lods
add
outsb
push
mov
or
mov
jle
cli
scas
fs
mov
mov
lahf
ss
or
gs
int3
dec
inc
gs
and
aaa
mov
jl
mov
lcall
mov
and
jle
cli
scas
fs
mov
mov
lahf
ss
or
gs
dec
dec
std
pop
jmp
push
xlat
outsb
push
mov
dec
loop
cmc
mov
les
subl
mov
cmp
sub
ret
xor
fs
nop
push
xchg
aaa
xchg
cs
mov
mov
fst
push
jg
push
mov
icebp
mov
test
cmpsl
mov
jns
xlat
push
scas
inc
or
pop
mov
pop
sub
pop
popa
push
sub
cltd
stos
mov
loop
xchg
sbb
adc
sbb
dec
mov
mov
test
jno
mov
loop
shrl
jecxz
cmp
push
and
je
sbb
jbe
pushf
cmp
int
jge
sbb
pop
lock
xor
ja
jae
mov
sub
loop
outsb
adc
mov
sbb
cmc
mov
shrl
mov
stos
mov
enter
movsb
adc
dec
out
xor
ret
insl
add
xchg
mov
mov
add
daa
test
sbb
jp
pop
lods
jle
cmp
rol
pop
add
add
push
and
jbe
jae
mov
test
lret
sti
pop
pop
testb
rorb
jp
fwait
outsb
pop
lock
idivb
fcomi
dec
aad
jnp
gs
inc
das
jecxz
popa
adcb
xor
popf
xor
mov
cmpl
or
xchg
sub
fldcw
into
std
std
arpl
lret
xchg
push
mov
in
jne
ds
int3
ret
pop
add
xchg
scas
es
fldcw
mov
xor
pop
fs
push
mov
ja
jb
mulb
jle
cli
sbb
inc
xorl
inc
mov
ret
in
test
sti
xchg
or
cltd
xor
sub
ret
pop
dec
jg
fdivs
enter
jl
outsl
in
in
mov
lods
cli
repz
xchg
in
iret
data16
jns
sub
testb
push
sub
mov
dec
in
lret
or
push
lods
sbbl
inc
push
mov
insl
arpl
scas
inc
mov
pop
and
loope
inc
test
sahf
stos
subb
xorl
mov
popa
sahf
sbb
addb
gs
dec
cwtl
sahf
xor
add
in
cmp
lea
fisttpl
rclb
pop
imul
mov
adc
xchg
aam
jo
jge
ret
pop
add
xchg
inc
fadd
and
out
and
sbb
mov
loopne
xor
cmp
jae
hlt
mov
jmp
rclb
int3
and
scas
pushf
mov
test
ret
movsl
mov
repnz
dec
cmp
xchg
xchg
or
outsl
xor
arpl
dec
out
movl
sub
pop
push
fsubs
sub
rclb
sub
fdivrl
ja,pn
popf
sub
sbb
in
fsubrl
jmp
aas
add
fildl
in
mov
mov
cmp
cmp
ja
xchg
mov
inc
les
push
insl
mov
addr16
cwtl
jns
shrl
lret
dec
loopne
or
sbb
movsb
cmp
mov
pop
jecxz
stos
inc
cmc
add
jp
cmc
or
mov
leave
cld
xchg
mov
fistpl
mov
shlb
aam
fistl
into
ror
jnp
fchs
or
mov
adcl
cld
fidivs
cmp
jg
fwait
xor
aas
call
mov
adc
pop
imul
adc
and
mov
inc
jne
decl
arpl
insl
and
inc
jo
mov
addr16
test
adc
gs
cmp
pop
out
pop
pop
ja
addr16
sub
call
xchg
cmp
xchg
sub
adc
into
gs
jnp
push
popf
xor
dec
scas
inc
jge
into
gs
sahf
pushf
xor
push
xchg
sub
shrl
push
pushf
xor
xchg
sub
ljmp
inc
or
and
xor
pop
add
out
add
push
xchg
lea
cld
popf
pop
cmc
mov
sbbl
jae
mov
pop
push
inc
fldl
shrl
repnz
in
sbb
cmpsb
fs
icebp
movl
jne
andl
mov
shrl
cmpsl
mov
mov
mov
push
jmp
ljmp
jo
imul
pushf
pop
sbb
cmpsb
jp
adc
mov
roll
testl
pop
cmpsb
adcb
jnp
or
mov
xchg
movb
sbb
lock
cmp
adc
cmpsb
cmp
inc
push
rclb
outsb
out
mov
cmp
dec
mov
mov
pop
lret
lahf
ss
lret
xor
jmp
cmpsl
xor
cmp
cmp
sbb
jne
arpl
fwait
lahf
loope
lea
mov
mov
add
test
lods
pop
icebp
repz
xchg
push
inc
cmp
arpl
jge
pop
test
sbb
push
arpl
cld
test
push
sarb
mov
scas
inc
test
ss
cmpsb
icebp
mov
xlat
xor
or
dec
lods
sub
cmpsb
stos
into
lods
inc
pop
hlt
std
cmpsl
ds
std
mov
out
xchg
mov
pop
out
mov
fisubs
testl
lret
stos
loope
xchg
jp,pn
xlat
outsb
sarb
inc
insl
clc
jle
in
mov
cld
or
jns
in
test
mov
cmp
inc
and
negl
xlat
outsb
sbb
cmpsl
sub
adc
cmp
sub
ja
test
sbb
movsl
jmp
mov
rorl
call
mov
push
in
pop
je
push
gs
mov
mov
scas
push
pop
out
int3
imul
pop
sti
jg
sub
dec
fnstenv
xchg
mov
mov
les
or
movsl
cmp
sub
outsl
pop
std
ret
sbb
pop
scas
jge
clc
cld
and
mov
iret
dec
mov
std
mov
dec
or
in
mov
aas
or
les
sbb
lcall
outsb
clc
fdivl
sub
add
je
ss
inc
pushf
xor
loope
repz
gs
add
cld
repnz
fisubl
or
shrb
gs
xchg
cld
xchg
sub
mov
movsb
imul
shrl
pop
push
ljmp
and
jle
cld
pop
repnz
push
mov
dec
xchg
sub
add
test
jecxz
adc
adc
mov
pop
cmc
iret
scas
insl
xor
pop
repz
push
cmpsb
cmp
mov
ja
out
out
pop
add
fistps
cmpsl
ds
sub
mov
pushf
xor
pusha
mull
mov
fsin
fwait
mov
pop
and
stos
lahf
sub
xchg
inc
sarb
addr16
jp
subb
jp
push
sub
sahf
push
jns
mov
or
inc
sub
dec
out
dec
xor
jle
sbb
imul
es
in
inc
pop
repz
xor
out
jo
frstor
in
rcll
inc
jnp
decl
push
adc
ss
xchg
popa
clc
add
orb
mov
shlb
jo
stos
std
int
out
lcall
pop
test
stc
lahf
lret
bound
dec
aas
pushf
testb
xchg
and
mov
cmp
inc
pop
out
test
xchg
or
fistpll
cmpsl
mov
shrl
das
push
ljmp
std
xchg
xor
lcall
scas
inc
lret
xor
testl
inc
xlat
clc
out
sbb
inc
or
mov
xchg
scas
enter
and
mov
pop
pop
sahf
push
cmp
xchg
inc
pop
cmp
stos
inc
ret
loope
call
call
popa
jecxz
psrlq
ds
cmpsb
fs
adc
mov
lret
bound
lret
ljmp
jnp
imul
cltd
fstpt
adc
mov
add
hlt
cmp
xor
or
enter
push
lods
je
mov
in
sub
pop
sahf
jle
enter
sbbl
fwait
mov
xchg
jp
test
pop
fwait
push
and
out
xchg
testb
lea
xor
call
bound
popa
push
cmp
pop
xchg
mov
js
mov
ficompl
mov
ds
pop
mov
loopne
dec
ret
pop
cmpsb
jecxz
inc
rol
inc
loopne
lods
inc
adc
mov
xchg
xor
dec
mov
mov
add
cmpsl
jae,pt
scas
inc
jns
fnsave
mov
xor
pop
push
mov
cmpl
movsb
mov
stc
push
lods
inc
pop
outsl
mov
mov
mov
test
or
in
sub
mov
mov
push
jmp
jbe
or
mov
fcoms
test
inc
push
ljmp
and
cld
xor
test
and
push
out
sti
sbb
fsubl
push
call
cli
jns
mov
pop
outsl
adc
jnp
pusha
mul
pushf
jle
sub
mov
dec
call
notb
push
out
scas
dec
lock
or
popf
push
sahf
sahf
cmp
mov
icebp
outsb
mov
mov
ror
repz
pop
xchg
adc
lcall
push
xchg
cld
std
jb
add
and
add
ds
lds
xchg
mov
dec
pop
and
mov
jb
enter
cmp
inc
fmuls
or
clc
and
adc
dec
push
lods
fldt
lods
pop
int3
movsl
pop
mov
in
jnp
fidivs
scas
jecxz
push
lret
arpl
add
pop
repnz
outsb
inc
popf
pop
xor
rcl
xor
out
outsl
dec
loop
test
lods
popa
stos
inc
xchg
into
int
call
mov
repnz
lods
xchg
mov
fs
test
movsb
dec
sbb
xchg
mov
into
mov
mov
push
jmp
jmp
enter
clc
outsb
lods
sbb
adc
aad
jns
je
jmp
jle
jp
dec
jo
or
cmp
insl
cmp
inc
jmp
jnp
xor
aaa
gs
inc
outsb
sub
dec
push
mov
or
jae
inc
loopne
add
pop
pop
scas
shlb
sub
in
xlat
jecxz
dec
mov
ret
dec
mov
mov
or
repz
adc
aas
xchg
sbb
or
aas
push
scas
scas
cltd
cmpsl
pop
dec
arpl
cmpb
aas
pop
or
cmpsl
popa
push
xchg
enter
gs
hlt
out
cmpsl
insl
or
sbb
les
xchg
sub
loop
mov
les
push
adc
mov
aas
push
dec
in
aaa
in
test
jg
xchg
mov
jg
mov
and
outsb
mov
loopne
mov
orl
jo
sub
push
xor
push
dec
or
in
pop
adc
bound
mov
cmpl
outsb
in
adc
addps
fisubrs
hlt
add
xorl
xor
inc
movsl
dec
mov
pop
mov
enter
jno
hlt
xchg
jge
xchg
xor
rclb
jae
push
movsl
xor
push
loopne
push
push
xchg
dec
in
das
fildl
inc
push
ja
iret
mov
jnp
stos
jge
jns
sbb
mov
mov
and
cld
test
int
sbb
into
clc
sbb
fistpll
fstps
addr16
mov
andl
lret
xchg
mov
xchg
std
out
push
out
enter
xchg
inc
sti
hlt
ljmp
lea
pushf
lock
fisubrs
dec
stos
pop
jecxz
xlat
sub
loope
xchg
iret
rcrl
subl
mov
aaa
inc
icebp
cltd
mov
add
mov
rorl
sahf
or
cs
in
jecxz
pop
push
and
movsl
in
repz
adcb
loopne
or
jno
mov
mov
ds
pushf
mov
cmp
test
aam
dec
shr
stc
iret
xchg
mov
cltd
out
ret
sti
add
push
xchg
mov
ds
fdivrl
cmp
lret
stc
out
xchg
push
mov
shlb
fwait
cmp
fnstcw
aaa
std
xchg
ror
aam
rcrl
mov
jg
out
inc
fcmovu
mov
sbb
jae
push
aad
imulb
push
and
je
test
repnz
repz
pop
xor
in
gs
aam
sub
sbb
scas
and
dec
fistpl
loopne
loopne
dec
xchg
idiv
or
mov
aad
adc
jp
mov
xor
cs
adc
and
rcll
pop
sbb
adc
pop
stos
jl
movsl
ljmp
fbstp
adc
imul
popa
stc
cmp
push
jno
nop
adc
dec
fstpl
inc
in
ret
sbb
pop
jp
or
mov
popf
repz
jmp
and
out
fcoml
push
mov
cltd
imul
clc
dec
jo
mov
enter
jmp
jmp
xchg
flds
add
pop
mov
idiv
xchg
sub
stos
push
add
call
dec
fs
loopne
ret
enter
dec
pushf
dec
xchg
repz
roll
int
sbbl
pop
daa
scas
movsb
lret
dec
jecxz
iret
sbb
cld
sti
stos
leave
mov
push
mov
imul
gs
rolb
mov
inc
push
jmp
loop
sub
in
dec
sti
adc
xor
xchg
dec
jl
call
mov
icebp
push
sbbl
icebp
nop
iret
mov
rcl
sbb
aad
sahf
repz
and
and
ja
mov
mov
mov
sbb
addr16
sahf
adc
jnp
adc
sbb
mov
xchg
sarb
stos
push
mov
xor
mov
mov
pop
adc
in
pop
aam
sbb
clc
stc
xchg
in
or
lods
cmp
adc
mov
mov
out
pusha
jae
les
dec
mov
pop
mov
rcr
outsb
jg
adc
fcomps
sub
sub
inc
xor
int
pushf
adc
inc
mov
testb
lahf
lahf
ss
and
mov
jp
ja,pn
adc
and
sub
repnz
ds
lds
insl
nop
scas
movsb
pop
lock
pop
stos
clc
test
aaa
int
xchg
scas
inc
ret
shll
rcl
inc
push
iret
data16
xchg
icebp
pop
scas
and
or
xor
mov
add
sub
fildll
add
xor
or
ljmp
in
in
mov
push
pop
insb
add
xor
push
cltd
dec
sub
mov
mov
mov
push
mov
sti
insl
sub
mov
addl
sbb
outsl
mov
das
dec
jno
jno
adc
sbb
sbb
lock
popa
mov
arpl
xchg
das
xchg
mov
or
nop
bound
filds
cmpsl
adc
stos
add
in
sbb
pushf
sbb
jns
xchg
sbb
inc
jb
xor
stos
inc
inc
cmp
imul
daa
xor
or
lret
test
inc
fldenv
pop
lods
sbb
mov
ds
adc
push
test
xchg
push
cmp
subb
adc
lock
dec
stc
nop
test
xor
and
and
inc
adc
xor
je
mov
pop
adc
mov
rcrl
xlat
pop
jne,pt
jo
ss
adc
daa
mov
mov
mov
mov
pop
aam
sbb
jmp
and
popf
ja
std
xchg
sbb
mov
jnp
cmpsb
sbb
pop
or
les
into
iret
pop
mov
and
xchg
pusha
dec
stos
enter
movb
aam
std
sbb
ret
pop
dec
push
in
xor
jae
mov
bound
dec
mov
test
pop
jbe
mov
pusha
add
mov
cwtl
inc
add
enter
ljmp
ljmp
adc
cwtl
sub
cmp
loop
push
mov
and
hlt
lcall
lret
push
and
or
call
bound
mov
jbe
xor
cmovno
mov
push
push
mov
mov
cs
ljmp
andb
call
mov
addl
dec
out
sub
in
jle
add
cs
aad
mov
sub
fiadds
mov
or
shll
cld
mov
call
adc
scas
movl
sbb
addl
lea
and
ret
repz
xchg
jmp
add
aas
int
pop
push
lods
xchg
mov
das
mov
sub
inc
mov
mov
pop
iret
ret
inc
inc
xchg
hlt
out
test
fwait
and
mov
pop
jno
mov
add
adc
mov
std
shll
lea
jb
mov
fadds
dec
hlt
mov
shrb
mov
mov
mov
jns
sub
push
in
jo
and
mov
adc
int3
lock
insl
xchg
add
ds
fnstcw
pop
mov
popf
pop
adc
xchg
imul
test
das
adc
shl
xchg
mov
lret
push
mov
out
mov
int
cmp
mov
cld
mov
out
sti
ljmp
dec
sub
xor
xor
movsb
pusha
not
negl
cmp
xchg
sub
insb
mov
pop
mov
mov
sub
ret
xchg
out
jg
push
sub
dec
jnp
mov
dec
xchg
sub
xchg
rclb
in
subl
jecxz
fcmovnbe
pop
dec
fcmove
fstpt
jp
xchg
xchg
cs
cs
insb
lcall
test
jo
shlb
mov
sub
lds
sti
xchg
scas
insl
inc
push
shlb
nop
dec
icebp
sub
lcall
mov
mov
nop
pop
ja
jbe
aaa
ficomps
and
aaa
or
inc
push
add
in
mov
or
xchg
push
in
ret
inc
pop
add
dec
popa
rcrl
adcb
mov
dec
ljmp
push
or
jle
out
insl
adc
fiaddl
test
jge
movsb
cmp
sahf
pusha
jnp
sub
pop
lret
add
ret
lea
or
push
and
ret
fwait
xchg
xchg
dec
loope
xchg
sub
add
sbb
mov
repz
outsl
dec
and
pop
repz
scas
jae
out
jae
pop
gs
pop
pusha
jecxz
xorb
mov
arpl
aaa
loopne
or
jp
mov
loop
xchg
rcrb
scas
aaa
out
scas
inc
and
pop
lret
addr16
xor
insb
pop
inc
cmp
test
inc
sub
fidivs
shlb
in
out
push
into
lods
or
testl
add
jl
les
jbe
out
leave
push
mov
pop
push
xor
push
test
pop
or
push
mov
lahf
jns
ljmp
shlb
xor
pop
sti
dec
orl
push
and
sti
jl
xchg
mov
rcll
xchg
cmpsl
aam
test
mov
mov
aam
arpl
pop
pop
inc
mov
add
jb
adc
xor
stos
mov
popa
inc
mov
dec
sbb
stos
test
call
cmp
in
stc
faddl
mov
push
fildll
outsl
aad
cmp
je
push
clc
jne
inc
inc
push
gs
cld
arpl
js
loope
lcall
mov
outsb
repnz
out
sahf
and
mov
aad
cmc
and
outsb
out
nop
sub
cmpsl
ds
push
fwait
push
xor
lods
inc
push
push
movsl
mov
popf
jne
inc
jp
and
or
adc
je
jge
mov
dec
test
aaa
lods
inc
imul
adc
lcall
sub
xchg
or
xor
mov
out
xor
imul
lret
mov
push
and
add
rorl
jg
in
add
mov
ds
lods
repz
add
push
mov
push
loope
sbb
add
lds
jb
push
imul
in
push
sbb
repz
rcrb
nop
shll
jmp
mov
jnp
adcb
movsb
test
es
mov
mov
imul
pop
xchg
fs
jg
mov
mov
dec
mov
pop
mov
test
jne
mov
lock
fbstp
fistps
dec
inc
adc
addr16
jg
dec
pop
ss
aas
or
mov
insl
fdiv
push
and
mov
iret
or
fxtract
jecxz
decl
jne
inc
movsl
in
or
mov
ss
jne
rorl
jbe
testl
movsl
cmp
cmpsb
std
sbb
out
pop
pushf
add
sbb
ds
imul
mov
xor
dec
sub
pop
jne
jnp
pop
or
cmpsl
dec
pop
imul
xchg
pusha
mov
sub
popf
insb
sbb
cli
mov
sub
fdivrs
xor
and
mov
ret
cltd
inc
pop
inc
out
scas
ficoms
mov
sbb
xchg
lods
loope
push
out
pop
jmp
lcall
push
sti
push
xchg
cmpsl
scas
inc
frndint
xchg
sbb
inc
sti
mov
iret
iret
sti
push
ret
test
out
ficoml
jg
leave
mov
je
mov
pop
in
push
inc
aam
mov
lods
or
push
shrl
loopne
lock
addr16
lods
shll
cmpsl
add
jae
and
or
pop
dec
je
push
dec
popa
cmp
sbb
dec
mov
push
sub
mov
mov
or
cmp
push
jae
cmp
je
cli
adc
cmp
pop
into
pop
jge
push
scas
jnp
outsb
es
mov
mov
and
mov
jns
fstpl
dec
pop
cmpsb
cmp
add
jnp
in
test
push
sub
in
les
or
mov
lahf
pop
js
cmp
test
mov
inc
out
int3
cltd
cmp
shll
add
lahf
mov
cmp
sub
mov
mov
mov
jmp
sbb
and
js
cmovb
or
loop
in
xor
sti
xor
hlt
lea
push
in
adc
mov
mov
mov
outsl
mov
sbb
mov
jge
scas
adc
out
cmpsb
repnz
rcl
or
lods
repnz
test
sub
mov
aas
or
jno
int3
and
push
je
xchg
sti
push
mov
fcmovu
je
popa
mov
push
push
inc
dec
popf
inc
addr16
xor
mov
ret
jnp
jmp
inc
mov
cmpsl
imull
std
in
or
ds
cmp
adcb
popa
push
mov
scas
inc
stos
dec
lds
sbb
lcall
push
out
jnp
push
imul
cltd
insl
inc
or
movsb
je
shlb
mov
stos
xchg
mov
pop
scas
lods
rcrb
add
cmp
mov
les
into
mov
fs
popa
clc
rolb
xchg
inc
mov
pop
hlt
mov
add
xor
iret
pop
ja
sbb
sub
pop
mov
imulb
out
lret
lea
out
push
mov
out
xchg
and
in
inc
insb
fsubs
sti
and
rclb
adc
pop
inc
sub
sbb
push
bound
int
dec
rcrb
fildll
in
sahf
cmp
sbb
in
test
lcall
adc
push
movsb
xchg
inc
lret
sub
mov
int3
aas
loope
dec
pusha
imul
sbb
pop
pop
adcb
loopne
aad
xchg
xor
jg
dec
ds
lods
jae
mov
add
or
out
xchg
movsl
or
add
sub
out
scas
inc
sbb
cmpsl
add
add
fisttpll
lahf
int
or
xor
and
fstpl
std
xchg
xor
jmp
pop
push
or
pop
or
lods
dec
testb
push
push
cltd
push
in
or
or
add
push
mov
clc
std
xchg
enter
add
pop
rcr
xchg
out
push
add
mov
xor
mov
add
and
lods
pop
imul
pop
subb
dec
testl
inc
enter
push
into
test
out
lcall
pop
decb
out
xor
test
negl
mov
loopne
imul
dec
cltd
popa
pop
mov
pushf
xor
mov
ffreep
jge
loopne
cmp
mov
bound
mov
dec
pop
cmp
jp
or
es
cmp
leave
pusha
mov
ret
loopne
sbbb
add
sub
cli
xchg
lret
inc
mov
dec
xlat
dec
lret
bound
pop
sahf
jmp
and
mov
pop
mov
jecxz
imul
imul
cmp
lods
pusha
pop
fnsave
es
add
pop
out
imul
or
insb
cmpsb
cmp
in
scas
addr16
pop
fwait
aad
or
sbb
lcall
push
lock
cmp
push
push
xchg
xchg
imul
jl
stc
push
js
dec
sti
cmpsl
ds
loopne
sbb
mov
cmp
rcr
jae
out
ret
sahf
xor
fldl2e
in
or
inc
fadd
out
jno
mov
fdiv
mov
cmp
lock
frstor
mov
sbb
or
test
rorb
in
or
scas
or
xchg
shrl
divb
pop
mov
aam
push
leave
fimull
lret
js
ret
call
test
and
pusha
and
mov
stos
dec
or
or
mov
or
lea
and
lcall
outsb
sbb
jmp
pop
pop
pop
pop
push
sahf
gs
pushl
cmp
lahf
ss
insb
leave
inc
inc
push
decb
push
mov
sub
and
xchg
sub
lods
inc
stos
sub
lret
addb
mov
jmp
mov
movsb
and
ficoml
and
clc
cmpsl
pop
inc
fisttpl
jg
cli
imul
dec
mov
mov
jb
jge
jno
jno
inc
in
leave
int
nop
sahf
jne
mov
cld
pusha
ror
lods
inc
shr
xor
repnz
negb
fnsave
imull
ja
fistpl
jg
mov
icebp
xchg
out
dec
sbb
fcmovnb
fucomi
push
movaps
pop
jo
lock
dec
cmp
js
fistl
sbbb
in
aaa
nop
cwtl
or
mov
xchg
cmp
mov
call
cmc
stc
push
cmp
pusha
int
pusha
testl
mov
xchg
mov
mov
sub
dec
mov
mov
lods
in
dec
test
int3
out
dec
jae
scas
xchg
dec
xchg
iret
dec
lods
movsb
xchg
dec
xchg
call
add
or
loopne
push
add
xor
out
aad
orb
inc
adc
into
movsl
gs
das
jge
aad
sti
sahf
dec
in
addr16
sub
jno
add
lods
mov
fisttps
mov
in
add
and
jne
pop
rep
mov
in
mov
movsl
pop
fiadds
pop
lcall
inc
loopne
dec
sbb
adc
push
jo
cld
cmpsl
aaa
jl
pop
hlt
sbbl
pop
bound
adc
shll
and
sub
xchg
ss
push
push
pop
and
mov
xlat
mov
jne
push
sub
es
dec
loope
and
mov
inc
fcmovbe
outsl
imul
xchg
xor
mov
jne
inc
fsub
push
xchg
sbb
cli
sbb
mov
loope
mov
sbbl
stos
and
or
jae
insb
adc
insl
inc
dec
popl
out
cmc
lret
sti
push
rcl
out
test
ret
scas
and
add
sbb
bound
inc
jp
inc
cmp
out
pop
fimull
lock
in
mov
xor
mov
and
sub
add
test
or
stos
test
mov
scas
fsubrs
bound
push
rcrb
subb
mov
leave
lock
push
xor
jle
shrl
pop
push
xor
into
jmp
dec
xor
daa
or
decb
fstpt
or
mov
loope
dec
sbb
fdivl
testl
mov
mov
fdivrs
sahf
das
and
xchg
pop
call
jmp
push
pushf
scas
sub
cmp
push
in
mov
jb
std
ss
pop
insb
fldenv
adc
pop
mov
add
ds
repnz
jno
adc
or
xlat
and
test
movsl
lds
movsb
pop
mov
mov
int
andb
rcrb
out
dec
sbb
or
cmp
mov
pushf
adcb
std
lods
sahf
cmpsb
dec
shlb
adc
pop
mov
sbb
fidivrs
fsubrl
fldl
jnp
rcrl
pop
addr16
lret
adcl
sahf
push
dec
xor
insb
stos
and
jne
xchg
jl
fidivrl
filds
mov
shrl
dec
lods
adc
pop
push
jg
mov
xchg
in
popl
sub
dec
jecxz
je
xchg
jmp
mov
aaa
mov
lret
outsb
cmp
ret
dec
jp
jb
add
pop
xchg
aas
mov
jecxz
xchg
adc
cmp
jns
fists
dec
ret
jnp
mov
and
aaa
mov
lret
and
jb
pusha
pop
jecxz
clc
mov
ss
or
test
push
daa
fsubrp
jnp
imul
push
inc
add
sbb
orb
aaa
lods
mov
scas
out
pop
subb
lahf
imul
cmp
hlt
pop
jne
orl
mov
dec
xor
imul
repnz
imul
mull
mov
testb
pop
iret
mov
imul
sbb
jg
mov
mov
jns
data16
nop
xor
js
popa
push
outsl
xchg
repz
fs
jo
popf
in
iret
mov
arpl
inc
pop
cmp
adc
sahf
mov
cmp
mov
call
push
inc
dec
push
ficomps
movsb
dec
lods
add
lods
mov
cld
test
test
or
adc
ljmp
ds
mov
push
sbb
mov
push
xor
xchg
das
inc
icebp
fsubrs
or
sbb
cwtl
push
out
popl
jo
sub
cltd
dec
in
mov
pop
divb
dec
testl
cmp
pop
jns
sub
aam
aas
jmp
sbb
lods
xchg
xor
lcall
gs
jmp
gs
inc
and
jp
insl
sub
sbb
push
inc
sbb
inc
sbb
or
shlb
mov
scas
pop
sti
inc
sbb
cwtl
add
xor
vpmuludq
out
cmp
cmp
rolb
rorl
sbb
fidivs
movsl
outsb
jbe
jbe
scas
lods
insl
pop
mov
lock
mov
sar
xchg
sub
scas
mov
push
xor
es
pop
imulb
sbb
lea
lret
cmp
cli
push
xorl
int3
xchg
shll
jbe
in
fwait
sbb
xchg
and
lahf
jbe
je
mov
cs
ret
mov
cmpsb
lret
mov
repnz
jb
lods
sbb
nop
jg
and
adc
dec
scas
test
fwait
lods
pop
stos
fnstcw
leave
divb
rol
testl
mov
mulb
orb
imul
push
fiadds
inc
jbe
sub
xor
out
dec
das
les
xchg
xor
dec
dec
cmp
xor
nop
sub
pop
pop
mov
and
dec
pminsw
mov
shr
mov
enter
jge
mov
ficoml
mov
or
xor
popa
imul
pop
or
aam
nop
push
jge
cmp
jnp
mov
stos
or
and
insl
outsb
lock
incl
jb
lock
stos
dec
mov
fs
inc
xchg
imul
fdiv
mov
dec
cmp
xchg
or
cltd
pop
or
out
and
cwtl
scas
idivl
popa
jae
clc
adcl
xchg
jnp
sub
stos
andl
lret
ret
sbb
mov
gs
mov
xchg
out
mov
icebp
dec
lahf
push
mov
popa
ret
inc
fcomi
sbbb
fcmovnbe
in
or
mov
adc
adc
into
inc
xchg
sub
mov
outsb
ds
out
mov
test
mov
mov
xchg
inc
jno
bound
sarb
lcall
fwait
add
inc
sahf
sbbb
arpl
pushf
mov
mov
stc
fnsave
cmp
je
sti
xchg
mov
fcompl
sub
mov
dec
in
mov
into
daa
imul
xchg
push
ficomps
test
xor
push
fcompl
stos
sub
loopne
ret
pushf
sub
jmp
jmp
inc
xchg
inc
xchg
push
movsl
cmp
and
in
scas
fcmovnu
or
and
pop
bound
out
pop
movsl
sahf
repnz
mov
flds
mov
mov
js
pushf
adc
mov
mov
loope
loope
jecxz
shrb
push
mov
xor
mov
sahf
inc
int3
ficompl
pop
push
adc
add
insb
mov
dec
pop
pop
inc
fs
push
mov
jbe
ss
pop
outsb
mov
data16
je
cmp
call
or
fidivrl
xchg
dec
loop
adc
inc
subb
xchg
mov
adc
mov
out
sarl
jbe
mov
in
pop
push
je
aaa
cmp
fists
out
xor
mov
push
push
negl
mov
iret
shll
jg
test
push
jns
in
or
xor
icebp
mov
push
lods
in
in
sbb
push
sbb
fcoml
jbe
inc
xchg
stos
xchg
pop
jge
mov
icebp
lea
insb
cmc
lcall
mov
sbb
mov
add
int
rcr
sbb
jge
andb
rcrl
jp
pop
icebp
shl
cs
pusha
pop
inc
bound
addr16
cmp
out
out
in
cmp
call
out
test
pop
lahf
negb
ja
push
jmp
push
dec
aaa
mov
jne
push
add
adc
mov
dec
adc
fldenv
aas
aas
gs
repnz
shll
push
and
in
lret
cmp
xlat
sahf
pop
pop
dec
mov
push
mov
stc
aaa
mov
inc
popf
cmpsb
xchg
ss
cli
push
hlt
jge
adc
add
pextrw
dec
add
xchg
and
std
pop
mov
push
aad
enter
popa
pop
xchg
testb
xor
out
fucom
cwtl
outsl
cmpsb
jle
jae
out
mulb
nop
xor
sub
push
jle
inc
jo
cmp
bound
js
xchg
inc
cmpsl
mov
movsl
test
and
mov
mov
dec
mov
xchg
daa
out
rol
sbb
movsb
mov
lret
jno
adc
test
xor
jmp
orl
or
ss
xor
cli
gs
ret
adc
or
pop
test
cs
movsb
mov
fildll
add
mov
stos
xlat
jmp
sti
pop
mov
mov
scas
jp
in
mov
dec
xor
pop
repz
inc
inc
pop
and
xchg
sub
xchg
outsb
jecxz
cs
dec
jb
xchg
test
jno
xor
mov
push
sub
es
fsub
lds
sarl
out
fwait
test
sbb
mov
xchg
mov
bound
xor
stos
mov
std
xchg
sub
shrl
test
stos
rolb
mov
and
cltd
sti
icebp
mov
dec
sub
push
movsb
xchg
movsl
inc
pushf
lds
mov
imul
adc
mov
movl
mov
xchg
pop
jns
sub
push
pop
adc
dec
addr16
test
aad
stos
jbe
subb
push
mov
pop
ret
inc
testb
pop
lret
mov
and
cltd
inc
cmpsb
jo
fsubrs
rorl
out
dec
add
out
inc
inc
pusha
in
test
cmp
inc
or
in
pop
movsl
dec
popa
dec
xchg
push
lock
mov
imul
mov
push
movsl
mov
sbb
decb
inc
sahf
pop
pop
fcoms
jp
outsl
les
pop
fisttpll
pop
pop
inc
sub
out
cltd
iret
loope
lock
push
aas
dec
repz
sbb
ss
cmp
jg
xchg
jl
ljmp
aad
sub
mov
mov
fistps
push
ret
movzbl
addl
popa
clc
jle
lds
jg
call
pop
jno
fisubrs
insb
mov
loopne
inc
arpl
ret
into
insl
daa
inc
push
pop
aaa
cld
or
sti
dec
xor
fmull
cmp
insb
sub
test
test
mov
push
or
adc
xor
xor
int3
fists
shlb
push
lret
call
rol
push
xchg
jno
shrl
enter
popl
jg
xchg
sbb
sub
mov
cmpsb
lock
pop
sub
ds
or
adc
adc
cs
xchg
sbb
out
mov
push
out
hlt
mov
dec
popf
in
sub
popa
sub
jb
scas
inc
xchg
jns,pn
pop
xchg
rclb
mov
inc
mov
mov
xor
movsb
mov
mov
jb
sub
cmpl
test
fimuls
rcrl
dec
aam
adcb
mov
sti
call
add
xor
leave
into
loope
or
int
test
rorb
and
enter
adc
in
sbb
jge
and
pop
dec
push
sub
cmp
adc
icebp
inc
add
ss
rcl
int3
and
sahf
or
cmpsb
mov
ficoms
fisubl
scas
das
les
push
push
push
jmp
test
out
lcall
lret
xor
sub
in
dec
pop
and
pop
pop
lods
ljmp
pushf
subb
push
xor
mov
movsl
sbb
test
stos
sbb
gs
jno
imul
push
sub
mov
adc
insl
aas
and
pop
or
movsl
cmp
shlb
imul
jne
icebp
xchg
fisubrs
aad
andl
mov
dec
fcmove
fisttpl
outsl
inc
lods
adcb
loope
mov
fs
sub
mov
sub
pop
mov
in
pusha
iret
mov
outsb
pushf
scas
icebp
mov
in
xlat
mov
mov
test
les
pop
clc
jae
jg
jns
test
rcr
div
mov
push
insl
loopne
sub
add
or
ds
out
push
shlb
mov
sub
outsl
stos
mov
fbstp
int3
out
lea
mov
lret
xchg
out
sbb
fisttps
or
or
jl
insl
loopne
pop
out
adc
scas
addl
push
out
cmp
adc
pop
mov
fsubrs
rcll
repnz
and
shr
and
pop
or
ss
dec
add
into
mov
mov
xchg
jl
aad
data16
dec
xchg
mov
sbb
push
dec
hlt
mov
push
and
mov
fimuls
fbstp
xor
lods
push
jne
and
cld
stos
sub
push
arpl
out
ss
popa
out
psllw
ja
push
ret
pushf
xor
sti
fmul
aas
or
inc
imul
jmp
xlat
push
shrl
jg
int3
jge
mov
xor
inc
stos
push
push
data16
insl
and
sub
hlt
sti
push
xor
fdivs
push
fcompl
lret
jg
or
xchg
jmp
xchg
sarb
imul
sbb
adc
test
jge
fsubs
imul
or
loope
ds
and
xchg
dec
cltd
stos
jnp
ss
movl
fsubl
inc
xchg
adc
je
call
sbbb
stos
jmp
cmp
adc
mov
mov
mov
push
pmulhw
xchg
cmp
push
cmp
test
inc
fdiv
stc
call
pop
stc
inc
fs
movsb
repz
sub
es
lret
and
xor
fiadds
sub
ljmp
movsl
lret
test
mov
sub
arpl
testl
pop
sti
fs
sbb
push
dec
inc
into
xorb
mov
dec
jo
roll
pop
mov
insb
gs
shl
test
test
jp
and
pusha
out
mov
or
sbb
pop
lret
mov
stos
out
imul
rolb
scas
jecxz
call
fld
mov
aam
mov
xor
stos
rclb
xor
fcomp
xor
pop
into
mov
or
roll
inc
in
sub
xor
jge
and
and
loopne
sub
dec
push
xor
cltd
push
loop
cs
push
hlt
out
and
stos
mov
and
push
js
sahf
xor
and
lret
mov
cmp
inc
push
aaa
ror
and
push
cltd
lods
sub
dec
lock
mov
xchg
dec
mov
push
test
pusha
mov
inc
cmp
mov
xchg
int
or
lret
cmp
or
les
ret
lcall
add
jbe
int3
push
mov
dec
sti
jbe
jo
sahf
mov
dec
and
sbb
sbb
movsl
mov
adc
jl
lods
es
test
mov
dec
mov
rol
inc
cmpsl
dec
add
in
ret
aas
mov
mov
sbb
pop
jmp
mov
and
mov
test
pop
sbb
mov
or
sub
outsl
fwait
pusha
or
fwait
sti
dec
adc
xchg
cltd
test
xor
inc
jp
faddl
or
cltd
js
loop
subb
add
je
rcrl
insb
jle
lcall
sub
sub
cwtl
push
divl
mov
jg
movsb
pop
inc
adc
adc
int
jg
je
inc
std
outsb
push
push
add
sbb
cmp
mov
call
loop
or
and
cmp
les
cmp
cwtl
pop
dec
ljmp
add
pop
in
cmp
test
xor
sub
clc
sahf
orl
mov
insb
pop
or
xor
push
sbb
mov
sarb
xchg
xor
in
jp
adcb
ss
test
test
call
out
fcomp
pusha
cs
rorb
push
and
dec
inc
fstpt
packsswb
sub
adc
sbbl
inc
not
or
push
xchg
dec
ficoml
in
mov
ljmp
push
aaa
add
xchg
and
mov
jb
pop
mov
mov
xchg
inc
jno
xchg
dec
sub
out
ja
shl
ja
cmp
inc
fnstcw
aad
jecxz
jne
lock
sub
mov
test
inc
mov
pop
scas
inc
nop
imull
out
mov
insl
jge
iret
sbb
lret
mov
jns
fidivs
pop
cmpxchg
pop
hlt
imul
lock
and
push
call
idivb
cmp
cmpsl
cmp
fisubrl
or
xchg
andl
das
cmp
dec
xchg
mov
push
std
rcrl
jns
int
sbb
shr
pushf
xor
inc
nop
ds
lret
mov
rcll
leave
mov
scas
mov
ret
sbb
in
lds
sbb
jnp
sub
mov
outsb
xchg
in
ret
repnz
cmp
xor
adc
push
and
sahf
int
mov
out
insb
into
mov
mov
test
push
int3
nopl
lods
shlb
mov
jo
dec
dec
rorb
mov
mov
bound
test
leave
cmc
psubq
mov
bound
cltd
ficoms
clc
adc
sub
pop
pop
lods
add
out
shl
dec
dec
iret
scas
cmpsl
cmp
bound
dec
and
aaa
repz
jo
adc
jno
orb
push
in
jno
arpl
loopne
mov
jne
push
push
hlt
sub
js
out
in
cmp
out
push
dec
ret
dec
inc
push
push
out
loope
dec
icebp
cs
mov
cmpl
cmp
dec
mov
inc
aaa
dec
jbe
orb
adc
in
and
ja
pop
clc
insb
sub
mov
pop
leave
push
lock
sub
insb
mov
repz
adcl
and
sub
cmpsl
xor
in
pop
cld
push
sbbb
scas
or
or
insl
mov
mov
sub
cmp
push
cltd
cltd
or
in
xchg
push
mov
in
xchg
fstl
fwait
inc
into
xor
bound
sahf
nop
jge
xchg
mov
sbb
jge
mov
mov
loope
in
subl
insl
lods
icebp
dec
aad
or
mov
lea
pop
xchg
gs
xchg
jns
mov
fistl
clc
rolb
popf
ret
dec
cmpsl
sub
or
dec
rorb
enter
cmp
inc
cmp
jno
sub
ds
std
outsl
stos
ret
fwait
mov
inc
pop
scas
ret
and
in
mov
ss
add
out
leave
shl
dec
lahf
aaa
mov
enter
lret
cmp
adc
push
lds
dec
inc
sbb
add
inc
lods
loope
enter
mov
mov
cmc
repz
daa
leave
sbb
popa
clc
pop
das
add
lret
mov
push
inc
cwtl
les
into
mov
mov
sahf
push
shlb
ror
jl
nop
fs
hlt
add
pop
ljmp
push
push
sahf
ljmp
lds
daa
fdivl
mov
fisubs
mov
sarb
jmp
pushf
hlt
sub
and
cld
lret
orb
mov
mov
inc
insb
cmc
int3
dec
sub
int
lods
sbb
std
into
dec
mov
aam
cmpsb
fmulp
xlat
sbbl
outsl
stos
stc
dec
dec
orl
enter
mov
sbb
lret
loope
jmp
dec
shl
jmp
cmp
dec
adc
xlat
push
enter
fucomp
jo
in
stc
data16
mov
enter
lock
pop
mov
clc
and
sub
ja
fs
push
mov
mov
and
pop
aad
jnp
push
sub
stos
xor
data16
sbb
mov
adc
ss
mov
mov
scas
sti
fwait
das
add
mov
out
ret
push
enter
jns
mov
pop
les
andb
bound
jmp
aad
xor
out
pop
dec
fldenv
adc
sbb
sbb
cmp
sbb
and
xor
hlt
mov
enter
inc
sbb
inc
test
in
mull
sarl
adc
sbb
fisubrs
cltd
xor
mov
call
std
lret
in
sub
and
xchg
and
jb
mov
scas
mov
mov
mov
arpl
jecxz
popf
push
mov
testl
test
jae
sbb
pop
ljmp
push
test
mov
xlat
addb
stos
jno
xchg
mov
push
lcall
in
add
call
inc
lret
mov
out
adc
jns
divb
movsb
lret
cld
out
cli
xchg
or
mov
stos
popf
lock
ja
adc
mov
enter
pop
aas
les
out
xchg
fbstp
pop
xor
mov
add
rcll
mov
jno
shlb
pop
clc
sub
aam
dec
loope
cs
cmp
push
fsts
xor
mulb
and
shrl
pop
int3
aad
cmpsl
push
pop
sahf
xchg
cmp
pop
lods
sub
test
stc
imul
pushf
cmp
mov
xor
xor
xor
pop
stos
loopne
repnz
dec
insb
adc
mov
pusha
stos
dec
or
inc
std
sahf
xor
xor
sbb
push
sbb
dec
je
scas
push
cmp
xor
inc
sahf
pusha
hlt
lea
xor
and
xchg
insb
mov
adc
jb
sub
std
sbb
ljmp
mov
add
push
dec
adc
inc
push
and
dec
insl
shl
sbbl
movsl
iret
xchg
js
imul
push
jb
push
out
cld
cmp
sub
movl
sub
or
jmp
adc
inc
pop
je
lods
jb,pn
divl
loope
sbb
mov
jns
mov
sbb
adc
push
adc
or
or
add
mov
push
xor
cmpsb
xor
mov
jae
sahf
and
lods
xor
dec
and
daa
scas
mov
scas
loope
lods
cmp
das
inc
and
sahf
inc
fbld
cltd
sbb
ret
inc
and
jno
push
push
jne
pop
test
inc
inc
rolb
leave
xlat
mov
mov
aas
loop
mov
jbe
add
inc
push
subb
pushf
dec
scas
inc
repz
jae
mov
jge
add
icebp
xchg
stos
fcmovb
adc
jp
jg
push
mov
jp
xchg
pop
fdivl
mov
cli
daa
dec
xchg
ficompl
aad
fisttpll
jge
call
int
jecxz
ss
inc
iret
out
xchg
fs
sbb
or
push
push
jb
or
mov
aam
roll
cwtl
push
or
loop
and
test
sub
add
mov
lods
and
pop
sub
xchg
add
xchg
pop
sbb
pop
push
test
add
xchg
pop
test
ret
cmc
pop
loop
repz
filds
mov
jmp
sbb
mov
dec
cmp
jge
pmulhuw
loopne
or
iret
data16
ja
cwtl
push
lret
in
insl
mov
sub
loop
ret
add
xchg
jp
ds
mov
xorl
mov
std
jb
push
mov
das
inc
pop
push
repz
sub
mov
push
jae
mov
adc
test
inc
test
jne
sbb
imulb
xchg
in
push
xor
dec
loop
sub
lods
push
push
add
repz
rcl
cli
mov
xchg
adc
lds
mov
xchg
mov
stos
or
cltd
sub
and
imul
sbb
jmp
jns
stc
je
adc
mov
mov
gs
inc
and
ljmp
iret
cmp
fsubrl
fldenv
fcompl
sti
idiv
or
sbb
sbb
dec
xchg
sahf
mov
in
push
rclb
or
ja
popa
mov
std
pop
lock
xorl
leave
aad
sub
mov
inc
xlat
pop
rcl
out
fiaddl
repnz
jmp
push
clc
inc
jnp
andb
arpl
loop
into
into
out
inc
dec
pop
out
xor
push
or
mov
xchg
and
shl
jae
ss
jecxz
test
cli
ds
fisubrs
testl
lods
inc
or
xor
mov
jl
jnp
cmp
dec
sub
add
add
sbb
in
in
into
jbe
push
int3
outsb
sbb
jg
cs
dec
jnp
lcall
push
in
inc
sti
mov
push
bound
mov
pop
push
mov
fisttps
hlt
outsb
pop
sub
xor
fbld
sub
jp
adc
fwait
cmp
test
scas
pop
cmpl
jb
cmp
sub
mov
sbb
adc
add
dec
push
int3
out
std
std
cmp
inc
shll
sbb
mov
jns
jg
dec
and
cmc
mov
lahf
pop
int
lock
clc
mov
stc
imul
or
outsl
lret
inc
test
cmc
pop
addr16
stos
dec
stos
cli
push
push
xchg
add
jg
sbb
repnz
xchg
rolb
into
or
and
test
scas
pop
lods
sbb
daa
ss
and
dec
xor
or
cmpsb
les
sbb
push
test
mov
je
data16
adc
cmc
jno
loop
es
in
nop
cs
mov
movsl
inc
test
insb
adc
xlat
add
cmc
mov
popa
insl
add
movsb
test
and
rorb
test
lods
mov
xor
stos
xchg
jne
lret
stc
fwait
push
fnstenv
and
jns
ljmp
pusha
push
addl
xor
cmp
sub
adc
push
xchg
ss
movb
std
cltd
cmpb
cmp
mov
push
outsb
test
mov
mov
and
sbbl
or
jle
push
cltd
cmc
dec
sar
adc
iret
addb
lods
int
insb
jnp
out
arpl
xchg
gs
fisubl
and
fwait
mov
adc
out
push
xchg
xchg
mov
xor
in
pop
imul
rcrb
or
pop
std
ret
clc
sub
sub
fs
test
test
jbe
sti
mov
out
inc
popf
sub
jae
loope
mov
in
dec
rorl
fwait
jp
sub
or
pop
jns
pop
jle
inc
aas
out
pop
call
adc
mov
pusha
mov
dec
adc
push
ret
ret
in
andl
repnz
es
xchg
mov
and
or
pop
enter
or
adc
in
mov
ret
imul
jl
fimuls
mov
xchg
add
aam
mov
push
xchg
clc
mov
xchg
mov
mov
adc
lret
cld
mov
pop
xlat
iret
out
add
ss
sub
jbe
sahf
out
imul
jge
mov
hlt
inc
mov
or
cmpb
jle
mov
add
xchg
pop
repnz
cmp
loopne
cmpl
and
sbb
pop
test
out
jg
cmp
stos
xchg
and
std
push
dec
das
pop
lds
loop
xor
arpl
and
or
fdivrl
leave
pop
mov
fisttpll
movsl
cmpsl
xchg
push
xor
pushf
mov
cmpsl
adc
jle
xchg
mov
jno
aam
mov
testl
je
or
jne
daa
arpl
jae
xor
out
dec
arpl
popa
ds
mov
imul
mov
mov
push
movsb
pop
push
mov
rorb
add
ss
mov
sbb
outsb
je
dec
mov
scas
cmc
adc
pusha
sbb
jb
fisubrs
enter
data16
xchg
cmpsb
mov
pop
cmp
aam
lds
fidivl
ds
stos
cltd
or
out
or
pop
ss
inc
test
int3
mov
out
dec
lock
sub
xor
cmpsl
push
cwtl
mov
inc
and
cltd
xchg
and
dec
shrb
cs
jmp
into
loope
andb
fdivrs
rclb
popa
or
jecxz
jp
mov
js
out
or
add
add
add
jmp
inc
scas
cs
sub
fisttps
rolb
cltd
movl
les
sarb
pop
pop
adc
mov
movsb
sti
adc
dec
and
aas
mov
sbb
insb
jo
adc
jge
shrb
insb
rcr
repnz
mov
fidivrl
mov
stos
xor
inc
call
popa
faddl
adc
pushl
or
push
stos
popf
in
jge
add
fistps
jge
rcrb
cltd
push
repnz
mov
clc
inc
add
pop
iret
push
sbb
adc
dec
push
std
and
test
add
inc
lret
bound
push
jmp
xchg
jbe
pop
sahf
scas
dec
fisubs
aam
insl
xchg
dec
clc
cmp
cmp
data16
pop
push
mov
mov
and
addr16
lods
fcomps
adc
ret
pop
sub
je
loopne
cmp
mov
cmp
inc
jnp
mov
dec
js
add
add
jae
ja
fiadds
js
or
ljmp
xchg
xlat
cmp
or
mov
cwtl
push
push
call
ss
mov
in
cmpsb
lahf
jns
fs
jecxz
sub
cmp
xchg
ret
xlat
mov
sbb
sti
lds
sbb
xchg
add
xchg
inc
adc
loop
test
jne
inc
ror
pop
mov
xchg
out
xchg
bound
and
sti
mov
jge
jbe
dec
test
jle
jg
pop
ss
mov
cmpsb
and
sbb
rorl
add
notb
lds
pop
jmp
mov
aam
cmp
push
sti
mov
jno
cmpl
cmp
call
and
push
cmp
jns
jg
scas
sub
sbb
or
xlat
es
popa
testl
sbbl
mov
push
movsl
xchg
dec
pop
mov
fisubs
jns
pusha
ret
pushf
add
jg
ret
test
stos
lea
sahf
xor
or
xchg
jns
xor
stos
jae
movsl
pop
gs
lock
sub
xchg
adc
inc
inc
lret
sub
xor
std
adc
or
andb
rol
jge
in
arpl
fs
aaa
or
mov
xor
and
repz
test
mov
mov
punpckhwd
cwtl
pause
jne
stc
push
sti
push
aas
push
mov
jle
pop
fcmovne
pop
jl
imulb
jnp
test
cli
popl
ss
or
xchg
jg
dec
push
pushf
addr16
insl
insl
aad
lret
cmc
int
mov
sbb
sbb
loope
sub
stos
popa
shll
adc
fimuls
stos
pop
insl
sub
lahf
jmp
dec
push
ret
sbb
fs
mov
push
aad
mov
or
mov
fidivl
add
pop
push
sub
inc
leave
pop
cli
sti
mov
or
loopne
jno
shl
jnp
dec
lds
jle
fdiv
cmp
out
cmp
int3
and
outsl
arpl
xchg
rep
outsl
repnz
lcall
hlt
mov
andl
subb
adc
imul
adc
lret
mov
pop
imul
stos
mov
jmp
sti
mov
ret
insb
or
lock
add
repnz
or
cmp
sub
xor
mov
pushf
cmp
mov
sti
out
and
jmp
jecxz
push
sub
inc
jp
mov
cwtl
inc
and
movsl
xor
push
leave
call
cli
xchg
push
push
lret
jae,pn
dec
test
push
ret
mov
repz
mov
mov
into
rcrl
addr16
in
jmp
pop
inc
fisttpll
js
nop
daa
out
ret
jecxz
xchg
jl
or
mov
cmp
out
bound
xor
int
cmp
andb
pop
cmp
xorl
rorb
mov
jl
addr16
cltd
aaa
subl
or
scas
inc
cmp
adc
outsb
cwtl
jle
leave
mov
je
in
and
imul
cmpsl
dec
fldt
pop
cmp
push
sub
sub
mov
fsubr
cli
or
inc
or
cmp
xchg
movsb
cmp
scas
insl
xchg
lods
sbb
ret
jmp
push
push
xchg
mov
mov
mov
push
cmc
push
roll
cmp
in
push
pop
shll
xorb
pop
jmp
jno
jg
and
inc
jl
or
ljmp
inc
adc
cmp
xchg
gs
das
mov
fildll
push
xor
shll
fs
int3
xchg
int3
arpl
fbld
sbb
mov
sahf
insb
and
imul
pop
ljmp
shll
pop
out
push
xchg
mov
mov
mov
pop
pusha
ds
gs
lds
adc
in
mov
das
je
mov
jb
pop
and
ret
and
jae
fs
clc
xchg
or
push
fwait
xor
bound
jmp
sbb
and
mov
adc
jmp
sbb
cwtl
pop
and
lret
lea
and
jmp
adc
popa
enter
adc
dec
nop
daa
jp
jle
push
push
push
and
popf
cwtl
pop
fprem
adc
adcl
decl
in
mov
in
mov
loop
jae
mov
pop
jl
icebp
icebp
clc
fdivrs
and
xchg
cmpsl
addr16
outsb
shlb
sbbb
faddp
rclb
xchg
cmp
fnstsw
fmulp
outsl
movsb
out
aas
pushf
popa
cmc
ret
mov
lea
sub
daa
aad
lahf
mov
out
jnp
cmp
pop
cwtl
out
cmp
lea
and
sarl
push
outsl
jg
push
push
mov
add
fmuls
lea
mov
jmp
dec
popf
xor
in
and
push
inc
fldl
sub
mov
loop
out
xchg
mov
pop
mov
les
mov
dec
pop
adc
clc
or
push
pushf
mov
mov
push
lds
icebp
mov
out
movsl
inc
pop
fcomp
jne
insb
cmp
push
xor
cmc
loop
pusha
clc
nop
xchg
push
cmp
fnstenv
jae
arpl
fiaddl
nop
call
pop
test
cmpsb
push
jbe
cmp
pop
sbb
and
add
push
dec
and
lahf
shl
rorb
test
imul
fadd
and
sahf
int
or
xchg
addr16
mov
mov
add
das
test
or
mov
dec
sub
fildll
call
add
js
in
fidivrs
jmp
or
popf
cmpsl
xchg
xor
push
inc
push
pop
push
in
ret
sbb
cli
push
mov
enter
cmp
in
cmpsb
sbb
mul
sbb
dec
lea
jp
frstor
rolb
in
sbb
and
push
or
jns
xchg
mov
sub
and
fidivl
cmp
and
add
inc
and
and
cmp
xor
cmp
mov
les
sarl
adc
xchg
inc
js
hlt
xlat
stos
jge
int
push
aad
sbb
push
sub
sub
jp
xchg
sub
jmp
orb
insb
mov
rorl
dec
xor
push
mov
xchg
push
jnp
popf
movb
movsb
int
lret
std
or
in
hlt
arpl
loop
sbb
cld
das
aaa
xchg
jle
stos
inc
mov
xchg
pop
lcall
jecxz
cs
xchg
mov
adc
cmp
fidivs
jns
pop
icebp
aad
ja
xchg
cmp
repnz
pop
cltd
sbb
inc
and
xor
mov
jns
push
or
aaa
scas
int
pop
push
clc
sub
sahf
sarl
add
and
mov
cmp
pop
out
add
insb
mov
popf
push
lcall
flds
or
lahf
mov
adc
and
popa
psadbw
sbb
mov
cmp
mov
popf
adc
loop
xchg
push
call
rorl
sub
mov
test
loope
repz
push
pusha
gs
xor
aas
cmp
ret
pop
adc
repnz
mov
pushf
dec
dec
xchg
jge
int3
jg
adc
stos
das
xchg
add
adc
sub
aad
and
adc
inc
mov
notl
dec
in
ja
in
sub
inc
pop
movsl
stos
rorb
lds
mov
icebp
in
loop
jns
mov
jp
pop
lret
bound
std
jmp
push
rcrl
push
add
out
test
je
fucom
rclb
push
or
cmp
inc
inc
mov
mov
jmp
clc
sbb
mov
loopne
pop
test
mov
aaa
adc
jmp
fildl
mov
inc
push
ss
mov
cld
xchg
bound
and
vpshaq
test
add
ret
cmp
sarb
mov
mov
mov
adcl
ret
iret
jg
push
inc
sub
xlat
jmp
mov
jl
fistpll
sbb
cltd
loop
cmpsl
insl
sub
lahf
enter
ljmp
inc
adc
cmp
push
dec
jmp
or
mov
mov
xor
pop
sbb
xor
sub
in
xorl
ss
push
cmp
insl
scas
std
push
inc
loopne
mov
fs
imul
adc
xor
jbe
and
xor
xchg
test
movb
cmp
or
mov
orl
xor
xlat
sti
sub
clc
sahf
adc
outsb
adc
fists
adc
cmp
movsb
inc
push
es
movsb
sbb
outsb
aaa
push
jo
dec
in
jne
cmp
insb
ret
adc
dec
add
adc
cwtl
jne
mov
stos
mov
or
cmpl
lea
sbb
adc
add
int3
xor
dec
push
push
push
rcrl
call
lods
dec
add
out
ret
jp
fadd
insl
sarb
jl
jg
rorb
in
out
inc
jge
jns
or
xchg
xchg
sub
mov
std
imul
cmpsl
mov
pusha
das
cli
sbb
daa
test
sub
das
jb
jle
push
xorl
sub
adc
sbb
xor
sbb
inc
mov
adcb
or
loopne
cmp
xor
sub
arpl
mov
dec
sbb
lret
fadd
out
test
sbb
push
jnp
or
jle
and
lahf
fs
and
lret
or
add
sahf
mov
stos
push
stc
push
aad
jb
enter
pop
xlat
sbb
xchg
dec
clc
movsb
cmp
xor
push
nop
jp
pop
sub
add
xor
cmp
xor
mov
fs
sub
or
mov
mov
rep
mov
cmp
out
adc
fwait
xor
loope
sub
cmp
rorb
insl
in
rorl
icebp
jae
lret
or
adc
inc
mov
js
or
pop
sbb
or
jecxz
push
sub
xlat
lods
js
dec
stos
int
xor
jge
mov
test
addb
out
adc
add
cli
fsts
xchg
arpl
pop
mov
pop
pop
jnp
imul
or
divl
xor
out
xor
in
mov
pop
adc
insb
push
fwait
aaa
stos
dec
stc
repz
insb
mov
pop
dec
aas
fmull
sub
pop
sub
dec
or
popf
ja
icebp
adc
inc
sbbb
in
in
sub
mov
jbe,pt
hlt
arpl
pop
gs
in
fnstenv
xchg
mov
not
xor
adc
mov
arpl
sub
mov
mov
pushf
or
pop
je
push
xor
pop
xor
ljmp
out
popf
shr
jge
icebp
mov
bnd
fisubrl
xchg
mov
mov
lahf
xchg
subb
jnp
out
or
jnp
rorl
mov
jno
cmp
popf
inc
shl
cli
push
ljmp
jno
mov
adc
cmpsb
shrb
test
out
ja
push
xchg
stos
adc
xchg
mov
adc
mov
push
mov
pop
stos
mov
xlat
adc
cmp
or
int3
xor
scas
xchg
sbb
negb
mov
je
inc
ljmp
xchg
push
pop
out
fcmovnbe
pop
imul
xchg
cs
jo
sub
or
push
imul
push
add
fnstenvs
imul
out
into
xchg
loopne
outsl
mov
sbb
pop
aad
pop
icebp
pusha
push
inc
jecxz
cld
ja
sub
adc
push
mov
xor
rcrl
add
inc
insb
or
addr16
cwtl
call
test
mov
mov
dec
pusha
add
sub
sub
repnz
lds
jge
popf
dec
jecxz
push
inc
jmp
mov
fidivs
in
test
insb
xor
cmp
pusha
dec
mov
fidivs
mov
test
fs
stos
mov
loop
add
jmp
out
daa
inc
lock
cmp
daa
testb
pop
cmc
jne
cmpb
adc
test
mov
xchg
or
mov
xchg
add
mov
addr16
ret
cs
mov
enter
dec
push
push
mov
insb
inc
in
les
into
pop
mul
jle
xlat
jno
movb
pop
adc
xchg
cmpsb
mov
mov
mov
aad
nop
add
cmc
cmp
dec
in
aas
aas
loopne
jp
aam
xchg
popa
test
jo
or
xor
fs
xor
insb
ja
leave
icebp
and
std
mov
dec
mov
popl
sub
xor
scas
movsl
add
sub
pop
aam
enter
pop
ljmp
sbbl
add
dec
stc
mov
xchg
call
sub
cmc
cmpb
jae
cltd
test
cmpl
call
pop
xchg
mov
inc
out
decl
inc
inc
out
and
shrl
fwait
imull
pop
mov
mov
loope
mov
fnsave
mov
add
ja
or
sbb
insb
aam
dec
es
dec
dec
outsb
jp
inc
xor
fildll
sub
jp
cwtl
cs
xor
pop
pop
xor
js
xor
push
cli
dec
push
out
pop
and
xchg
push
mov
je
push
movsb
aaa
pop
mov
mov
sbb
push
fucompp
pusha
mov
cmpsb
pushf
mov
cmp
fisttps
shrl
inc
jecxz
lahf
mov
push
jo
mov
movsl
xchg
faddp
in
mov
inc
sbb
test
dec
pop
out
pop
cmc
dec
dec
std
push
jns
out
or
mov
sahf
lea
add
popa
je
lods
ljmp
xchg
test
xchg
or
mov
pop
sub
mov
xor
andl
fldt
jl
dec
push
sub
lea
repz
pusha
inc
shl
mov
fadd
cs
incb
mov
add
hlt
xchg
mov
lret
shl
iret
push
call
repnz
outsl
add
clc
dec
movsl
dec
mov
mov
gs
xor
sbb
cmp
ss
icebp
jg
xor
es
inc
rcll
dec
pop
jb
push
lock
sbb
ret
cld
outsl
loope
dec
loopne
add
addr16
xor
xchg
cmp
inc
inc
rcrl
cmc
pop
sub
arpl
pop
dec
adc
jle
fadds
mov
add
enter
mov
add
add
orb
mov
cmc
push
fstpl
cmc
mov
cld
rsqrtps
imul
cmp
xchg
dec
aad
movb
rcrl
subb
rcrl
lock
inc
stc
lods
lods
test
fisttpl
sub
or
sub
push
sub
dec
mov
lret
push
fdecstp
stos
mov
push
jp
push
popa
test
imul
cld
test
sub
into
mov
popf
xchg
inc
fcmovb
xchg
test
mov
out
in
cmpsl
lea
sbb
or
cmp
ret
sahf
xor
sbb
mov
imul
push
jg
movsb
pusha
xchg
xor
lds
mov
pop
fiadds
jne
pop
mov
push
int3
lods
jae
mov
jmp
out
js
ljmp
xor
xor
mov
les
pushf
sti
dec
outsb
add
push
cs
mov
and
sahf
push
fisubrs
lock
push
aas
adc
int
cli
repz
in
add
lea
enter
jnp
push
xchg
sbb
sbb
push
or
mov
lcall
xchg
jle
push
fs
and
lret
pop
xchg
sub
xchg
jge
stos
mov
subl
mov
xchg
arpl
xchg
xor
adc
jns
dec
xchg
jmp
ljmp
lods
mov
lahf
and
pushf
gs
lds
leave
arpl
jae
ss
inc
cli
int3
ljmp
js
push
sbb
mov
lret
fstpt
mov
mov
into
je
ds
xchg
inc
fmull
fisubrs
aas
lret
fidivl
adc
sbb
das
cmpsl
mov
aad
aad
add
pop
sub
jns
cltd
sub
sbb
cs
sub
gs
add
jmp
push
sbbl
pop
fisttpl
or
adc
pop
jnp
mov
je
es
push
xchg
mov
hlt
inc
fisubl
aaa
popa
jl
jmp
inc
sbb
pop
push
cmpsl
lret
dec
mov
loop
test
imul
inc
out
sbbl
std
gs
push
scas
xchg
stos
icebp
daa
dec
mov
sub
sarb
mov
jle
rolb
mov
jmp
or
pushf
jg
in
out
leave
xor
stc
movsb
and
xor
lea
loopne
mov
ds
andb
jb
lds
and
inc
mov
adc
adcb
ret
decb
mov
stc
daa
cmp
pushf
push
mov
xchg
sti
sub
inc
insl
jo
or
or
insl
bound
ljmp
ret
lret
push
adc
stos
data16
fnstcw
test
dec
pop
inc
jg
popf
push
fwait
or
cmpl
das
pop
or
inc
pop
decl
cmp
xchg
mov
sbb
fisttpll
jl
and
sbb
incl
movl
dec
inc
dec
leave
std
inc
cmp
mov
xor
push
arpl
dec
push
imul
cli
push
xor
xor
or
dec
jbe
sbbb
mov
and
pop
mov
scas
rcrl
mov
adc
sarb
addr16
mov
xchg
sbb
std
dec
mov
and
dec
xchg
dec
mov
cmp
imul
or
or
cwtl
das
aad
push
arpl
xor
adc
ds
push
jmp
push
std
xchg
js
sarl
div
sub
xlat
nop
jg
es
inc
cmpsl
incb
cmp
cmpsl
add
daa
mov
mov
jp
sub
xchg
idivb
sbbb
pop
jp
cmp
xor
mov
sbb
xchg
pop
nop
shufps
add
loopne
jl
ja
sub
adc
xor
fs
enter
xrelease
adc
cld
fistl
hlt
stc
inc
xor
sbb
xorl
sub
xor
stos
inc
js
jbe
loop
lret
adcb
adc
fwait
xchg
ss
call
std
aam
mov
jl
daa
jb
adc
jge
clc
orb
lahf
mov
int3
cli
ja
push
dec
and
or
mov
mov
imul
rorb
test
mov
mov
inc
ja
fistpl
cwtl
inc
cltd
push
dec
xor
jns
shl
cwtl
mov
popa
out
and
or
xchg
push
or
mov
cwtl
jae
inc
pop
pop
movsb
ficomps
xlat
xchg
call
sub
imul
shll
mov
dec
test
and
scas
inc
add
pushf
ja
and
fidivl
sti
mov
and
int3
jnp
sub
xor
rcll
add
stc
nop
pop
int3
in
xor
scas
mov
shrb
adc
jmp
and
mov
bound
stos
les
iret
push
cld
lcall
xor
ja
inc
and
or
fs
xlat
sarb
lcall
int3
rorl
aad
mov
xchg
fisttpl
jmp
loopne
aam
mov
ret
push
mov
inc
fcomp
jae
cmpsb
in
pop
std
fnstcw
fs
dec
loope
xchg
jno
sbbb
hlt
sub
int3
dec
test
pop
mov
lcall
loop
sub
ds
push
jle
std
mov
mov
push
push
cli
jns
orl
push
inc
jp
pop
push
push
shlb
popa
push
cltd
lcall
bound
aam
jle
mov
out
adcb
loopne
mov
repnz
ret
stos
pop
les
add
leave
jbe
das
gs
ss
xor
fldenv
pop
inc
add
data16
es
movsb
xor
aas
in
mov
outsb
jle
mov
mov
lods
arpl
outsl
push
add
mov
push
sti
sbb
shlb
movsb
mov
ror
pop
pop
jmp
sha1msg1
out
mov
test
ret
js
xor
mov
and
push
or
xor
ds
dec
xor
adc
ljmp
adc
xchg
int
cld
xor
test
aas
fstpl
cld
rcll
dec
roll
cmp
scas
pop
pop
jbe
mov
push
pop
pop
dec
repnz
push
push
mov
or
mov
cmpsb
ds
dec
and
or
mov
xchg
dec
inc
ljmp
push
add
adc
popa
dec
lds
pop
adc
sub
mov
cltd
ljmp
add
shrb
cmc
pop
sub
dec
inc
cwtl
xchg
pop
rolb
pop
lock
lahf
pop
ljmp
imulb
into
xchg
dec
mov
pop
sti
psrlq
pop
outsb
mov
std
push
cs
adc
sbbl
xlat
outsl
xorl
ss
add
push
xor
lods
or
aad
push
push
gs
dec
push
cmovae
popf
fs
shrb
aam
xchg
icebp
movl
das
in
outsl
xor
xlat
push
mov
je
dec
cld
cwtl
into
inc
mov
int
lret
push
inc
inc
cmp
enter
out
popa
or
loopne
loope
add
mov
sbbl
mov
repz
iret
pop
hlt
fisubs
std
or
push
inc
data16
daa
sbb
cs
inc
and
xor
dec
mov
call
or
push
ret
mull
arpl
pop
negl
sbb
decl
push
dec
cwtl
add
mov
xchg
adc
inc
stos
popa
mov
leave
cmpsb
std
jle
cmp
cmp
sbb
mov
pop
cmpsb
push
inc
fwait
icebp
inc
rorl
mov
fmulp
inc
popf
xor
sarb
jo
mov
pop
lock
movsb
loope
sbbl
out
mov
jno
jnp
loopne
out
inc
mov
xor
mov
xor
sbb
test
or
leave
mov
iret
int3
pusha
shll
xor
repnz
ss
xchg
clc
xchg
cmp
sbb
dec
mov
fcomps
mov
aas
sbb
insb
xchg
mov
jmp
loope
es
mov
cmp
push
jb
movsb
out
negb
and
nop
inc
mov
out
xchg
lods
into
inc
push
mov
add
xchg
cmp
mov
push
pop
xorb
inc
pop
jne
cmp
and
mov
jns
inc
out
sub
fdivs
pusha
lods
cmp
jg
ret
xchg
xor
jne
aad
cmp
aaa
adc
push
aas
dec
sbbb
test
xchg
add
hlt
pop
movsb
adc
push
inc
scas
inc
cli
into
sahf
vshufpd
jle
dec
loop
frstor
pop
nop
cmp
cmp
mov
out
mov
and
mov
jmp
adc
and
into
outsb
fsubrl
fistps
test
mov
int3
fisubs
fstpt
int
int
into
sub
call
fidivl
or
movsl
and
adc
push
incb
jb
add
js
jp
dec
pop
jp
jle
inc
dec
xor
jmp
dec
sbb
int3
out
adc
xor
js
add
jns
pushf
cltd
mov
pop
repnz
push
popf
and
dec
add
cmp
pop
lcall
inc
mov
test
cld
gs
scas
daa
jno
enter
scas
adc
push
sbb
push
sub
xlat
aam
inc
loopne
jle
test
inc
stos
jge
cld
lds
sub
pop
sbb
ret
lahf
jo
pop
loop
dec
dec
es
xor
cs
popa
pop
movsl
inc
dec
or
popf
lods
mov
clc
mov
sbb
jmp
lret
jb
hlt
mov
and
and
dec
cld
push
jns
iret
popf
inc
xchg
iret
inc
test
pop
data16
daa
sub
mov
xchg
in
mov
outsl
out
sbb
aad
push
cwtl
mov
in
jno
fbstp
push
mov
sbbb
pop
movsb
xchg
pop
shll
ret
ficompl
out
xchg
cmp
in
mov
cmpsb
cmp
popa
add
addr16
jne
jle
jns
call
xchg
push
outsb
sbb
ds
sub
bound
popa
fildll
sub
ror
les
bound
loope
cmp
cmp
icebp
mov
shll
mov
ds
mov
stos
insl
and
popf
mov
cwtl
jl
clc
scas
push
inc
xchg
mov
pop
cmp
push
jp
jo
movsl
test
loop
outsb
clc
ja
orb
add
push
insl
xchg
outsb
xchg
push
ljmp
pushf
arpl
dec
andl
lea
sahf
lahf
push
cmpsl
push
shrb
adc
pop
jmp
aaa
xchg
scas
push
test
mov
xlat
imul
outsb
loope
add
lret
js
and
push
ljmp
mov
pop
push
mov
push
les
add
push
lcall
test
sub
in
out
xor
jo
clc
iret
sbb
rcrl
jnp
push
shlb
dec
js
mov
inc
mov
add
or
or
dec
ds
xchg
adc
pop
lret
bound
in
inc
repz
add
lret
negb
jg
dec
cwtl
popa
faddl
scas
outsl
mov
or
inc
fsub
lods
loope
pop
add
mov
pop
mov
movsb
xchg
jmp
mov
bound
roll
sbb
xchg
add
mov
leave
cld
xchg
jnp
mov
pushf
sbb
sbb
sti
push
icebp
xchg
rep
and
rorl
dec
xchg
pop
dec
movsl
nop
and
out
aad
out
movsb
sub
sbb
in
cs
jp
int3
cmp
or
and
push
mov
mov
test
rolb
pop
fisubl
cmpsb
test
cmp
mov
and
adc
bound
mov
dec
dec
push
sahf
mov
std
sahf
jns
rol
jnp
in
dec
inc
jmp
or
cmp
and
mov
imul
sbb
pop
jge
inc
int3
jecxz
pop
in
clc
inc
ljmp
push
rcrl
mov
dec
mov
das
ljmp
iret
xchg
xor
adc
mov
mov
call
or
add
jnp
mov
fsub
sbb
push
out
nop
jae
push
ficomps
out
add
lret
shlb
xlat
mov
and
mov
adc
pop
or
ds
or
jno
daa
dec
xchg
pushf
aam
jmp
mov
inc
pop
sahf
dec
dec
loop
mov
je
ret
inc
aas
shlb
cmpsb
jns
xchg
pop
lahf
repz
pop
mov
push
in
rcl
fistl
mov
add
adc
push
das
int
xchg
cmc
std
out
dec
cwtl
xchg
dec
push
data16
incl
and
lcall
fisubrl
cmpb
inc
sbb
and
call
adc
sub
iret
call
dec
scas
mov
or
push
jns
sahf
pop
sarl
add
jne
shrb
pop
imul
sbb
push
add
and
mov
test
pop
call
and
and
mov
xorl
cwtl
call
stc
cmpsb
arpl
js
cld
or
mov
dec
out
ljmp
test
add
sbb
or
fwait
bnd
adc
movsb
nop
int
cltd
add
outsb
push
sub
ret
es
movsb
sbbl
stc
bound
mov
fidivrs
pushf
push
in
pusha
pop
icebp
add
pushf
push
and
adc
sbb
inc
mov
movsb
ja
pop
mov
or
xor
les
pusha
mov
xchg
es
mov
clc
jb
lock
pop
xor
out
and
pop
pop
inc
jbe
xchg
cltd
mov
mov
pop
adc
pop
push
xor
daa
fists
iret
jp
add
pop
push
je
call
and
jnp
in
pop
icebp
cmc
stos
sti
fwait
inc
push
jns
dec
fs
xchg
inc
pop
jg
nop
nop
sub
xchg
and
pusha
xchg
push
push
adc
inc
clc
mov
and
outsb
dec
mov
scas
ret
roll
daa
mov
sub
cld
inc
jne
aad
out
ljmp
int
push
xor
mov
test
outsl
js
lods
inc
dec
fists
mov
lret
mov
pop
leave
das
mov
sub
pop
fldt
enter
jmp
aas
mov
xorl
enter
repz
orl
mov
lret
push
mov
cmpsb
xlat
sbb
xchg
test
cmp
rclb
cmpsl
sub
xchg
dec
fildll
mov
aad
sbb
out
jge
lods
stc
ss
jbe
jmp
lds
icebp
mov
cmp
sbbl
test
inc
jecxz
or
in
mov
mov
in
sbb
cmpsb
jmp
cmp
test
loop
loopne
xor
or
ds
mov
mov
cmpsl
pop
and
fmuls
in
nop
in
orl
mov
ds
clc
pushf
xchg
dec
std
dec
mov
mov
or
std
in
ljmp
inc
rcr
jno
repz
dec
inc
pop
jb
xchg
inc
jae
and
rclb
fs
bound
imul
pop
fildll
jg
push
add
dec
rolb
inc
int
mov
sbbb
add
adc
cmp
fildll
movsb
scas
jl
loope
imul
ret
push
jo
mov
stos
mov
loopne
or
into
fdivl
xchg
das
or
add
fs
popa
iret
inc
outsb
jge
in
push
rcrl
inc
and
inc
fsubrs
rcrb
adc
pop
push
inc
scas
fwait
fwait
mov
imul
out
rclb
add
add
fisubs
xchg
scas
inc
add
int
and
dec
jecxz
out
mov
xchg
shrl
xor
mov
dec
pop
mov
mov
icebp
addr16
add
xchg
test
pop
mull
sub
inc
icebp
in
cld
shll
jb
in
push
clc
or
or
punpcklwd
stos
pop
xrelease
shlb
mov
xor
add
mov
ret
mov
mov
jmp
push
pop
mov
ret
lahf
pop
sbb
mov
pop
or
test
adc
push
mov
mov
inc
aam
jbe
jle
addr16
std
adc
gs
addb
inc
pop
icebp
in
imul
add
xchg
inc
adc
inc
pushf
loopne
mov
insb
icebp
aas
pop
xor
fiaddl
fs
mov
das
in
cld
pop
jmp
mov
jl
rorl
xor
pushf
cmpps
xchg
xor
popa
clc
xorl
xchg
or
lret
xor
lods
add
cmpps
fisubl
mov
sar
sbb
aaa
dec
pusha
fidivrl
xor
popf
stos
cs
adcb
or
fnstenv
push
fnsave
mov
pop
insb
shlb
cmp
clc
test
mov
imul
test
push
add
pop
movsl
enter
add
mov
push
into
mov
sub
rcrb
nop
jge
movsb
mov
jmp
push
sub
iret
in
addl
lret
out
jb
mov
adc
sub
test
fcomps
sbb
lret
dec
mov
ret
push
jbe
aad
popa
xchg
sbbl
decl
jmp
shr
sub
insb
add
fwait
sbb
cld
pop
ficoml
mov
sub
cmp
test
jp
mov
mov
das
enter
dec
add
mov
cmpsb
jle
loop
jle
loopne
sbb
mov
jbe
setbe
int3
adc
sbb
jo
enter
cmp
stos
push
add
dec
pushf
hlt
lcall
jecxz
cmp
popf
mov
mov
and
aam
xchg
daa
loopne
mov
push
push
mov
nop
loope
jge
icebp
repz
adc
xlat
sbb
push
aam
mov
je
xchg
xor
inc
pop
arpl
cmp
idivb
loop
push
lods
jno
fildll
loopne
stos
aaa
ret
mov
imul
xor
imul
repz
xlat
stos
xor
popa
loopne
sbb
icebp
mov
add
push
pop
clc
cmpsl
mov
push
inc
push
mov
mov
lods
lock
daa
stos
mov
push
mulb
repnz
int3
mov
push
ljmp
dec
loopne
aaa
mov
add
push
out
popa
xchg
mov
mov
sub
pop
mov
aad
push
jbe
hlt
mov
movsb
xlat
jo
push
adcb
dec
sahf
xor
dec
jl
mov
and
mov
jns
lock
icebp
sbb
xor
std
out
mov
popa
ss
adc
jp
xor
xchg
cs
fstpt
std
sub
pop
ss
js
in
jl
sub
shl
iret
inc
dec
xchg
lea
cltd
cmp
leave
cmp
leave
cmpsb
arpl
call
lret
push
shl
outsb
daa
inc
add
cmc
fsubs
jne
xchg
or
mov
loope
ljmp
shlb
and
js
ja
loopne
sub
andl
jo
adc
lods
jo
sub
dec
dec
fcmovne
int3
out
or
jns
mov
adc
shrb
xor
std
mov
movsb
repz
ret
sti
push
xchg
dec
cmp
neg
jmp
xlat
leave
lods
cli
jae
xor
sarb
das
mov
loope
imul
push
imul
popa
adc
or
inc
ss
or
lahf
inc
and
fstpt
or
ss
andb
and
mov
or
call
loop
add
add
pop
stc
sbb
adc
nop
daa
mov
jp
inc
jno
scas
bound
lods
pusha
lret
mov
loopne
dec
mov
mov
aas
adc
ficomps
jne
jg
sub
dec
fmuls
insb
xchg
sbb
cli
mov
lods
cmp
cwtl
insb
into
dec
mov
pop
push
in
cmpsb
ret
pop
sarb
loopne
int3
les
call
pop
or
sbb
lahf
pop
jg
jne
std
es
push
jecxz
aaa
xchg
jno
andl
insb
shlb
dec
or
idivl
lods
cltd
scas
daa
add
jbe
xor
push
icebp
adc
clc
ja
mov
xchg
jo
sbbl
inc
add
lds
inc
push
xor
imul
sbb
xor
lods
xchg
jge
int
jmp
popf
xchg
jo
loop
mov
rolb
icebp
mov
pop
or
inc
xchg
into
push
pop
test
push
mov
sbb
mov
inc
lret
dec
jae
sub
das
lret
int3
mov
out
popa
pop
pop
push
inc
jge
fpatan
cmp
incl
xor
aaa
movsb
xlat
mov
sub
lods
inc
ror
xchg
jl
cld
mov
cli
cmp
sbb
inc
inc
stos
ja
repnz
push
scas
and
fwait
push
push
mov
xor
xchg
imul
int3
push
mov
xchg
pop
adc
vcvtps2dq
xor
fwait
cli
jne
fcmovnb
pop
push
mov
adcl
rcr
jnp
shrl
and
adc
ds
mov
sarl
mov
int3
out
arpl
call
mov
shll
pop
mov
pop
div
jnp
hlt
das
std
pushf
js
inc
cli
xchg
add
incl
jne
add
jecxz
lcall
add
gs
mov
inc
je
out
dec
dec
cmp
scas
xor
fisttpll
xchg
dec
popa
mov
das
mov
test
xor
into
fcoml
jnp,pn
fs
pop
lods
int3
or
fadds
mov
adc
in
dec
call
xchg
dec
ljmp
mov
in
call
jg
mov
and
and
stos
jmp
popa
mov
cmpsb
xor
and
clc
in
or
lods
mov
push
enter
test
dec
mov
and
push
inc
push
jne
add
lods
ss
xlat
hlt
adc
leave
jge
or
cmp
push
icebp
or
ss
outsl
jb
ficomps
cwtl
sbb
jle
popf
imul
push
or
loope
pop
mov
sarb
add
rcrl
sbb
sti
mov
or
xchg
jo
jns
push
dec
sub
push
mov
cmp
shlb
lock
in
dec
push
cltd
mov
pop
cmp
in
mov
les
inc
dec
fisubs
mov
push
test
push
daa
ret
in
daa
adc
mov
imul
imul
push
inc
shll
rcrl
cmp
inc
into
push
pop
shr
rolb
push
mov
sbbl
bnd
fs
push
mov
dec
xor
enter
jno
xchg
sub
mov
rcr
mov
fwait
pop
out
dec
jl
xchg
or
and
cmp
jbe
pop
adc
insb
push
or
out
divl
sub
add
mov
or
cli
and
jne
les
lret
push
lods
push
lods
call
addr16
sbbl
sub
fbld
jbe
cltd
orl
xor
jb
inc
and
lods
scas
fstp
dec
imul
mov
rcrb
xor
inc
add
out
sahf
xor
inc
cli
jns
repz
insl
add
adc
outsl
push
test
cmp
mov
ja
arpl
sub
in
sti
pop
xor
jmp
fstpt
and
std
mov
push
mov
adcb
hlt
xchg
in
fldt
and
cld
jo
cmp
loop
xor
outsb
dec
xor
add
in
cmc
adc
aam
dec
loopne
int
test
repnz
pusha
xchg
sbbl
xor
scas
push
fadd
xchg
pop
xor
test
loopne
cmp
push
inc
es
and
rcl
popf
enter
pop
mov
out
inc
fdivs
xlat
cmp
or
lock
mov
cmpsb
dec
cmc
fdivrl
push
push
sbb
xchg
enter
cmp
cmp
mov
add
add
cld
cmp
clc
and
and
ljmp
push
xor
cld
test
sarl
jg
mov
inc
mov
xchg
push
jbe
cmp
loop
fs
cld
jbe
lea
cmp
pop
notl
mov
test
sbbb
pop
or
push
add
cmp
addl
sti
movsl
sbb
mov
mov
or
sbb
add
or
jnp
insb
push
loopne
sahf
mov
jnp
jae
add
add
add
and
lcall
mov
dec
and
sbb
jle
out
jbe
pop
and
dec
add
jg
sbb
fsubrs
stc
pop
ret
sbb
adc
xchg
jne
lcall
cld
xchg
pop
mov
sub
in
je
push
xor
sbb
ljmp
xor
aad
jmp
movsl
push
ljmp
call
or
lcall
js
add
call
int3
outsb
dec
pop
movsb
or
mov
sbb
xor
jmp
sbb
addr16
xorps
and
cmp
cmp
daa
jmp
aas
aam
cli
popa
clc
sub
fwait
mov
pop
add
push
shll
mov
mov
subl
inc
lock
negl
dec
add
xchg
movsb
push
jne
push
add
dec
aam
scas
inc
imul
fs
mov
loop
xor
xchg
inc
sti
call
insl
mov
push
sbb
mov
fistpl
mov
push
gs
adc
sub
add
cmp
mov
mov
out
adc
cmp
mov
and
cld
pusha
shr
out
mov
cmp
movsb
aad
sub
imul
add
scas
cli
push
mov
dec
stos
lds
out
daa
pinsrw
ljmp
mov
shlb
or
cmp
stc
xchg
les
cmp
mov
add
mov
inc
gs
pop
mov
jns
imul
les
sbb
imul
subb
cmp
xor
ss
test
dec
pop
cmp
shrb
mov
mov
ret
cmp
inc
sbb
cwtl
or
cld
sbb
or
cs
ds
mov
mov
mov
mov
ja
lods
push
push
jbe
andl
mov
icebp
outsl
icebp
int3
pop
arpl
jge
cmp
fadds
rcrl
mov
inc
loop
pop
cmp
popa
sbb
or
xor
cli
test
enter
mov
push
and
adc
scas
cmp
mov
pop
adc
mov
inc
in
and
ds
shl
imul
mov
das
push
sbb
inc
mov
fwait
in
cmp
cmp
adcl
add
cwtl
sub
fcomp
mov
andl
aas
insl
jge
xor
cmp
pop
push
xor
loopne
inc
out
pop
add
add
xchg
mov
scas
in
push
mov
clc
push
xor
xchg
iret
cmp
popf
sub
in
ja
add
hlt
into
shr
call
mov
pop
cltd
sbb
dec
jne
fsubl
cld
jecxz
in
mov
int3
orb
das
push
xchg
lods
aas
adc
pop
dec
pop
xchg
lret
cmp
adc
cmovbe
xchg
pop
sub
xchg
scas
mull
in
pop
movsb
fcomps
xchg
jp
ret
xor
ret
outsb
push
mov
pop
sub
add
push
and
cmp
fcomps
jo
pushf
jns
xchg
out
jp
mov
jp
add
iret
xchg
mov
pop
icebp
cmpsb
add
lock
push
insb
jle
sbb
roll
test
movsb
in
in
es
repnz
inc
stos
imul
inc
fwait
adc
push
push
fcomip
add
fistps
enter
cltd
mov
dec
jno
jle
stc
scas
xchg
fcompl
add
stos
jmp
xor
and
push
addb
out
jp
inc
xchg
mov
fimull
jp
lret
inc
fdivrp
push
pop
out
inc
in
jnp
sbb
xchg
dec
add
in
and
mov
pop
mov
aad
inc
test
dec
jne
into
pop
fsts
arpl
jno
mov
xchg
cmpsl
or
data16
imul
out
je
and
mov
dec
in
aad
sbb
jne
and
repz
dec
jle
mov
dec
jns
dec
mov
push
mov
test
iret
mov
jmp
shlb
cltd
and
push
xor
push
loopne
push
iret
ficomps
pusha
cmp
repz
cmp
or
jnp
mov
xor
fistpl
cmp
daa
cmp
push
jns
sub
lcall
mov
mov
popa
sbb
aaa
xchg
cmp
jle
scas
push
pop
ror
orb
das
or
mov
fbstp
sub
lret
ficompl
imul
jle
jmp
ret
in
bound
jae
shll
or
jbe
lods
cmpsl
imul
add
and
es
mov
mov
lcall
jne
xor
adc
xchg
inc
inc
cmp
mov
sbbl
call
cwtl
sahf
sbb
adc
xchg
jl
ret
inc
mov
in
mov
les
adc
test
mov
aam
dec
push
jg
cmp
ret
mov
sbb
cmp
pop
sbb
add
mov
dec
cmp
pop
dec
iret
xor
addr16
int
xchg
add
cmpsl
ss
sub
call
in
xor
or
mov
loope
xchg
adc
shlb
or
in
push
out
nop
lods
or
mov
pop
in
stc
nop
add
mov
int3
fwait
cmp
pop
in
imulb
ja
stc
sub
enter
pop
les
cmc
cltd
xchg
lods
das
fnsave
pop
cmc
sub
pop
sahf
cmpsl
scas
push
or
movsl
inc
in
jl
addr16
cmp
add
dec
dec
dec
jne
xlat
insl
and
hlt
mov
jecxz
lret
mov
jns
in
jecxz
std
lds
mov
lahf
add
add
js
sub
aas
ljmp
mov
ss
in
shll
jl
pop
rcll
aas
addr16
movsb
loope
in
push
lds
xchg
lea
fwait
sbb
add
adcl
mov
push
adc
mov
xor
push
out
aam
jns
jo
je
test
mov
sti
xchg
inc
or
xchg
shr
sbb
stos
inc
lret
es
fisttps
and
lahf
ficompl
imul
fidivl
cmp
push
stos
inc
jbe
aas
push
enter
add
loopne
mov
adc
ret
cmpsb
nop
outsb
pop
mov
dec
imul
mov
jbe
sbbl
dec
lahf
out
loope
pop
jge
cmp
mov
add
or
inc
inc
pop
int3
jg
ljmp
dec
push
je
mov
cmp
mov
imul
xchg
inc
fadd
ljmp
gs
pop
mov
mov
test
mov
add
mov
in
arpl
cmp
and
jge
aaa
imul
xor
pop
lahf
pop
cmp
js
xchg
xor
cltd
pop
sub
test
ret
push
fcomps
mov
das
insb
fs
fldt
jle
int3
scas
xlat
cmpsl
cmc
test
orl
scas
in
inc
dec
das
loopne
pusha
sub
mov
rorl
outsl
add
mov
ja
sub
cmp
sub
insw
or
out
test
scas
cmp
cmp
xor
inc
cwtl
push
nop
pop
sahf
jl
pop
jbe
xchg
inc
faddp
mov
out
dec
in
jle
add
mov
adc
out
xchg
les
or
sbb
xchg
sub
jns
mov
in
add
stc
inc
lret
lahf
adcb
cmp
mov
mov
fistl
jne
xorl
insl
cmc
add
nop
or
mov
adc
daa
cmp
and
jp
cmp
loop
push
js
mov
fimuls
popf
daa
jmp
pop
jne
data16
cli
or
pop
ret
mov
out
aam
adc
adc
shr
das
xor
mov
popf
ja
mov
ds
jle
mov
adc
and
sbb
mov
aam
mov
mov
popf
pop
sub
pop
cmp
dec
mov
and
mov
scas
lds
push
out
mov
jnp
jge
xor
jmp
push
mov
mov
add
cltd
push
jle
enter
xchg
jmp
or
clc
pop
add
adc
push
lock
xor
mov
les
jecxz
mov
dec
inc
sub
fisttps
jl
hlt
cmp
ja
sbb
dec
aaa
jns
imul
push
jnp
movsb
mov
lea
xor
sub
cmp
icebp
xlat
outsb
and
cmc
mov
in
lods
icebp
add
ja
xchg
mov
xchg
rorb
cmpsb
ljmp
fisttpl
popa
clc
pop
sbb
jge
mov
mov
push
xchg
mov
mov
enter
ss
pushf
popa
xchg
daa
iret
pusha
sbb
iret
pusha
lea
cmpsb
test
jl
adc
ljmp
aad
ja
cmp
fwait
testb
add
int3
jg
imul
xchg
jbe
adcl
or
xchg
jmp
and
adc
outsl
sbb
das
push
shll
outsb
jl
js
mov
orl
out
fisttps
lods
sbb
pushf
mov
int
push
std
pop
loopne
jae
shll
xchg
cwtl
lock
stos
xchg
pop
shrl
sbb
mov
leave
cmp
cmp
ficompl
jnp
xchg
loopne
iret
cmp
ret
loop
and
mov
fistpl
xchg
call
add
sbb
sti
pop
sarb
jno
push
push
out
mov
int
insl
sbb
scas
pushf
pop
scas
cs
sbb
clc
shlb
push
xchg
mov
xchg
mov
inc
cmp
mov
mov
xor
and
daa
mov
sbb
fwait
jl
pop
jle
xchg
push
adc
test
and
hlt
fsubrl
data16
or
out
or
sahf
std
lea
mov
test
sti
lods
jae
add
out
out
repz
incb
sub
scas
jp
mov
xchg
mov
test
push
movsl
mov
shll
out
daa
mov
sbb
mov
test
fcompl
xchg
mov
and
sahf
mov
jge
movsb
pop
fdivl
mov
clc
sub
or
xchg
push
jae
sub
jmp
mov
ret
jmp
or
mov
aam
xor
lea
cmp
popa
sbbl
loope
fs
out
in
popa
clc
arpl
jg
mov
iret
sbb
leave
add
in
ret
std
das
inc
fwait
pusha
push
dec
loop
push
sbb
mov
jle
cmp
mov
push
mov
aas
push
lcall
andb
or
mov
gs
jl
pop
scas
test
mov
xor
cmp
push
mov
dec
shrl
aad
shlb
jae
pop
and
fdivrs
jle
add
mov
lock
xor
ds
bound
dec
cltd
loopne
mov
clc
pop
mov
ja
sti
mov
icebp
cld
cltd
push
adc
jns
mov
jmp
adc
scas
jmp
dec
pop
inc
mov
lahf
arpl
out
adc
push
push
jmp
xchg
les
popa
sbb
jno
pop
adc
sarl
cmp
cli
xchg
ss
inc
int
shll
shl
clc
pop
xlat
test
mov
mov
or
push
js
inc
pop
inc
lods
fwait
pushf
mov
mov
fs
cwtl
cmp
test
and
dec
push
pop
fdivrs
scas
push
sbb
scas
inc
shl
adc
loopne
in
mov
imul
xchg
out
roll
cltd
or
push
fcomi
adc
icebp
mov
adc
lcall
or
test
inc
inc
fmull
arpl
mov
in
incl
mov
icebp
cwtl
mov
pop
cmp
jecxz
mov
dec
sub
in
hlt
jmp
adc
pop
dec
mov
dec
bound
lock
or
xchg
jb
jg
and
dec
dec
mov
mov
pop
push
adc
push
int3
cmpsb
jg
mov
aas
loope
adc
sti
adc
fwait
outsb
xchg
sarb
insb
and
outsl
lea
shll
push
push
cld
xchg
and
mov
lock
push
movl
sarb
mov
fbstp
lahf
inc
fidivs
sub
ds
mov
xor
xor
xchg
aaa
div
ret
mov
push
push
jge
or
jnp
cmpsb
lods
dec
xchg
inc
xor
or
mov
push
mov
xor
cmp
orb
lcall
sub
cmc
cmp
adc
mov
push
mov
dec
lods
repnz
push
jmp
adc
mov
add
sahf
push
lods
iret
sub
add
test
std
xchg
inc
icebp
gs
ljmp
fstl
xor
ja
or
cwtl
or
pop
lcall
pop
add
mov
sub
push
lods
lret
push
lea
jns
push
mov
adc
addr16
loop
mov
loopne
jbe
jbe
sbb
push
test
push
insl
lds
dec
sbb
imul
aam
sub
xor
lock
mov
daa
cmp
ret
repz
inc
pop
pusha
mov
movsb
loop
dec
pop
inc
mov
adc
and
xchg
popa
add
lahf
cmpsb
leave
mov
hlt
movsl
sub
iret
cmpsb
xchg
pop
mov
push
jmp
xlat
sbb
cli
call
sub
jge
xlat
repz
push
inc
outsb
adc
leave
mov
cs
sub
sbbb
sub
aas
nop
test
pushf
and
xor
fwait
mov
push
jae
jp
aas
jo
pop
shlb
mov
js
jns
das
cltd
push
es
loopne
test
shrb
inc
pusha
clc
push
sub
pop
scas
jg
loopne
ljmp
data16
mov
repz
pop
xlat
stc
xor
ja
in
idivl
adc
or
int
cmp
out
pop
int3
sti
arpl
mov
pop
xchg
lret
pop
neg
add
fisubrl
jbe
and
mov
xor
mov
pop
popf
pushf
sub
lahf
ret
add
jae
lods
int3
sub
pusha
clc
push
sahf
jno
mov
popf
or
mov
test
cwtl
xor
sbbb
fimull
and
sub
cmp
mov
ret
xor
cmc
dec
in
lds
outsl
sbb
adcl
fldcw
int3
add
pop
xchg
fs
xchg
mov
ds
cmp
stos
jle
lds
sub
call
dec
mov
cmp
pop
in
or
rcrl
push
mov
mov
adc
insb
pop
dec
mov
inc
daa
dec
pop
sbb
iret
test
lds
sub
inc
cltd
mov
push
and
bound
add
sub
mov
test
sbb
sarl
fldcw
add
push
or
sti
xor
leave
inc
loopne
and
in
and
lock
sarb
loopne
sub
mov
pop
mov
sti
jbe
adc
adc
in
test
xchg
jp
rclb
jmp
inc
jg
jns
or
lret
mov
adc
push
cli
imul
ret
cmp
hlt
shlb
cltd
cwtl
mov
clc
jne
scas
xlat
hlt
or
mov
fdiv
and
fstps
pusha
push
or
mov
movsb
dec
sub
push
sbb
into
sahf
xor
xchg
xor
pushf
out
or
mov
sti
sahf
dec
mov
insb
mov
inc
andl
mov
movsb
dec
mov
daa
mov
stc
sahf
xchg
mov
xchg
mov
sub
xchg
pop
sbb
iret
add
adc
xor
scas
push
cltd
and
mov
adc
sub
sub
icebp
adc
int
xchg
pavgw
stos
or
mov
jne
into
fmull
ret
outsl
sbb
imul
outsl
jnp
add
sbb
loopne
pop
mov
jecxz
movsl
das
mov
inc
xor
inc
mov
out
or
popf
pop
push
jae
subl
jge
xchg
popa
adc
add
mov
cmpsb
mov
sub
sub
xchg
mov
aaa
cli
jns
mov
xorl
dec
adc
sub
sbb
ds
pop
repz
xor
mov
popf
aam
add
dec
push
imul
incb
es
popf
sub
testl
pop
aad
cmp
aad
push
mov
pop
lret
loope
inc
mov
cmpsl
jmp
fldenv
or
xchg
push
mov
into
jecxz
pusha
es
or
call
test
push
gs
jae
ds
cmp
popf
jg
iret
sub
pcmpgtb
out
mov
mov
pop
ds
sub
shrl
mov
mov
ja
sbb
out
loope
into
data16
shlb
inc
imul
lods
cmpsb
and
jmp
jns
aas
inc
xor
inc
fldcw
mov
inc
notb
add
into
mov
fstl
imul
sarl
cmp
jecxz
xlat
pop
mov
scas
jl
push
scas
iret
dec
in
filds
popf
out
push
iret
dec
push
loope
movsb
stc
xchg
xor
cmpb
dec
mov
inc
inc
push
mov
ficoml
nop
fs
mov
lahf
test
adc
xor
stc
inc
pop
and
bound
ds
aaa
and
imul
or
mov
dec
in
sub
inc
mov
pop
call
or
cli
and
rorl
jmp
stos
hlt
add
cmp
js
jb
xchg
fwait
or
dec
stc
nop
jl
sub
adcl
jae
mov
pop
loope
and
icebp
adc
scas
mov
fsubl
mov
fabs
xchg
xor
movsl
js
pop
lea
out
scas
inc
aas
mov
mov
loopne
xchg
loop
dec
push
aam
mov
add
popa
in
fdivrp
jae
aaa
jp
fs
enter
sbb
and
pop
lcall
pop
lods
add
mov
mov
dec
outsl
fstpt
or
sub
push
and
dec
or
dec
and
iret
fildl
dec
decb
mov
push
lods
dec
fwait
rcrl
cmp
mov
mov
inc
test
repz
and
fildl
dec
dec
movsl
testb
add
andl
mov
sbb
int
pusha
sbb
push
mov
jge
out
mov
mov
call
push
jb
pop
outsb
clc
xchg
inc
vpsubsw
add
mov
mov
jno
mov
cld
mov
loop
insb
mov
rcl
inc
scas
shl
mov
out
mov
pop
adc
aad
out
push
jno
jnp
sbb
xor
adc
xor
arpl
mov
popa
dec
sub
jne
xor
notb
sahf
ss
fidivrl
movsb
sbb
pop
dec
lds
and
mov
sub
outsb
pushf
adc
mov
pushf
push
fucomp
sub
std
popa
mov
ret
xchg
int
mov
jo
add
jg
inc
insb
mov
popf
fs
inc
into
mov
int
cmp
lret
dec
lods
int
mov
and
xchg
push
lds
jne
je
scas
cmpsb
lcall
cmpsl
sbb
cli
in
inc
fs
incl
inc
pinsrw
and
iret
decl
pop
divb
ret
jle
pop
push
mov
mov
hlt
push
test
xor
dec
inc
dec
loope
dec
mov
repz
mov
pop
out
test
inc
xchg
mov
scas
inc
sti
adc
inc
inc
xlat
shrb
mov
or
mov
vshufps
xor
xlat
adc
out
ret
stc
mov
and
dec
pusha
in
jbe
dec
mov
xchg
dec
lock
shrb
cmpsb
cmp
push
cmp
add
dec
fisttpl
cmpsl
roll
imul
push
xchg
push
push
push
push
mov
mov
pop
sub
or
mov
into
sub
pushf
sete
cmp
add
cmpsb
in
and
push
cli
mov
adc
lret
jo
xlat
fsubrs
nop
in
mov
mov
xchg
in
xchg
hlt
or
cmp
mov
insb
mov
adc
adc
or
sub
adc
xchg
icebp
jb
aad
popl
stc
xchg
push
jmp
inc
xchg
fiaddl
lods
out
sbb
or
bound
imul
ss
push
inc
sbb
stc
xchg
cli
push
rorl
clc
outsl
pop
insb
iret
jno
mov
sbbl
int
pop
cmp
xor
jns
lcall
sub
xchg
aas
xchg
dec
jge
inc
cli
test
add
sar
jg
aad
and
movl
ret
sbbb
add
aaa
cmp
push
rep
push
inc
adcb
out
iret
pop
jae
mov
jecxz
jl
addr16
mov
cmp
rcrb
out
lods
inc
jnp
aas
sub
dec
or
mov
mov
loop
lods
push
aad
mov
aaa
xor
movsl
mov
in
cld
xor
xor
cmp
mov
outsb
pop
clc
push
inc
sub
mov
mov
add
cmpsl
ja
jle
roll
jo
sahf
push
mov
xor
mov
repnz
add
lcall
adc
sti
jbe
mov
lds
shll
jmp
push
xchg
dec
mov
cwtl
mov
inc
lds
pop
adc
mov
or
in
mov
pop
fadd
leave
sbb
cmc
pop
cmpsl
lods
pusha
mov
leave
xchg
aas
mov
lcall
fwait
and
inc
mov
gs
mov
cmp
mov
dec
mov
push
sub
icebp
jae
and
push
shlb
or
sbb
cltd
insb
sbb
fwait
mov
ds
test
jge
cmpsl
xor
aam
das
subb
fnsave
sbb
or
fbstp
jo
xchg
adcl
mov
jae
std
dec
and
test
inc
in
inc
adc
pop
rep
jo
aad
jle
mov
xchg
mov
adc
mov
bound
outsb
mov
test
mov
pop
call
sub
mov
jl
and
stos
xor
negl
sub
sub
mov
jbe
push
sbbl
pop
fnsave
jl
lret
mov
inc
fdivr
xchg
fs
leave
lahf
pop
and
popf
je
sub
div
iret
js
xlat
ret
pop
mov
mov
bound
sti
xchg
ljmp
mov
loopne
sar
pop
adc
add
test
inc
jne
xchg
push
subl
sub
inc
arpl
fwait
push
mov
mov
xchg
cmp
and
popf
inc
mov
cld
push
and
or
pop
adc
mov
ret
jg
cmc
pop
icebp
andb
std
pop
push
pop
mov
xchg
pusha
mov
dec
je
rcrb
jecxz
sub
scas
outsl
ret
add
inc
add
push
int3
in
push
sbb
pop
inc
add
sbb
imul
jp
or
push
in
cmc
push
inc
sub
push
jne
dec
adc
and
out
add
pop
aam
sbb
cwtl
inc
mov
add
add
inc
xor
push
adc
add
xor
or
jbe
addr16
lret
and
outsb
push
push
divb
ret
rep
sbb
mov
sub
cmp
pushf
dec
shlb
jmp
jne
in
jns
fidivl
jg
jbe
and
add
ja
xchg
lods
sbb
pop
out
add
xor
pushf
imul
shlb
dec
mov
insl
outsb
outsb
cltd
jae
cmpsl
int3
sbb
stc
push
xor
push
fnstcw
ljmp
int
push
pop
insl
inc
xor
icebp
mov
les
insb
pop
sub
or
sub
xchg
push
inc
or
cmp
hlt
push
dec
cwtl
in
dec
cmp
or
add
xor
out
testl
mulb
sbb
xchg
scas
cltd
insb
or
out
sub
shrb
add
adc
nop
jo
pop
lcall
sub
mov
jge
mov
sbb
shl
mov
push
je
insb
add
nop
add
lcall
inc
mull
sub
xchg
repnz
dec
mov
repz
add
cmp
push
pushf
repz
leave
andl
pop
pop
xchg
cmp
cmp
and
sub
or
das
pusha
stc
xchg
adcb
lock
hlt
dec
sbbb
cli
push
mov
push
mov
mov
lea
cld
inc
scas
adc
jnp
imulb
add
fimull
sbb
fdivl
out
sbbl
xor
pop
insl
mov
xchg
sbb
repz
cmp
int
negl
xor
out
xchg
jecxz
mov
push
out
add
pop
or
aaa
insl
dec
loopne
xor
addr16
adc
test
in
push
daa
cmp
stos
pop
push
test
dec
sub
cmp
mov
fnstenv
xor
shrb
mov
out
in
lock
and
push
sub
mull
mov
dec
hlt
push
scas
stos
in
jae
dec
lret
xor
in
cs
pop
repz
dec
out
xchg
mov
adc
test
lcall
into
pop
mov
enterw
testb
sti
pop
xor
dec
aaa
mov
scas
jns
inc
data16
cmp
and
mov
jl
inc
out
cwtl
int
adc
jge
bnd
push
test
mov
adc
arpl
pop
jns
dec
rcrl
mov
push
cmp
es
pop
push
lahf
in
xchg
mov
push
mov
mov
mov
test
xchg
dec
push
lret
pop
add
or
sbb
int
push
js
sbb
xchg
repz
cmp
aad
btc
mov
iret
and
mov
add
inc
gs
lret
mov
xchg
mov
ret
rclb
push
addr16
jbe
jae
push
das
mov
fmull
or
stos
imul
mov
add
mov
add
lahf
adc
sar
xchg
pop
cli
jne
push
in
or
jae
adc
mov
mov
imull
jecxz
sub
dec
dec
xchg
aas
aad
cmp
test
cwtl
mov
cmpsl
mov
inc
stos
pop
push
popa
addb
cmp
aad
push
cld
jae
test
lret
xor
jne
sub
add
sbb
add
jl
stos
jmp
add
mov
mov
cs
xchg
lods
into
addr16
inc
dec
add
xchg
das
pop
int
or
les
imulb
jl
jg
lods
cmp
push
movsl
inc
repz
into
data16
pusha
loop
lahf
sub
inc
sub
test
mov
fwait
jns
jb
push
test
nop
ss
ret
enter
aas
mov
cwtl
out
pop
clc
imul
scas
and
fiadds
xor
pop
or
in
mov
adc
vmwrite
stc
ret
pop
jmp
imul
sbb
pop
mov
bound
mov
pop
stos
xchg
pop
cli
xchg
add
sub
dec
addr16
into
xchg
inc
loopne
jle
push
push
call
pop
lock
jp
mov
lea
pusha
daa
mov
mov
and
dec
aam
shl
mov
sarl
lret
popa
divl
sarl
mov
push
popf
sub
fcomps
ret
xchg
testl
movsb
pusha
xchg
push
daa
aad
push
int3
rcrb
es
in
xor
sar
cmp
jmp
mov
sub
icebp
jecxz
xchg
pop
or
fisttpl
xchg
adc
enter
mov
mov
js
test
mov
aas
shlb
rcrb
inc
data16
jbe
cmpsl
js
xchg
montmul
cmpsb
ret
mov
sub
incb
mov
aad
dec
or
inc
mov
mov
adc
mov
dec
jl
sbb
cmp
xchg
lds
ficoml
lret
int
ret
stc
mov
mov
lock
sti
pop
int3
xor
xchg
inc
push
xor
scas
or
inc
xor
mov
push
lcall
xchg
push
movsb
lods
adc
pop
inc
into
sub
push
dec
mov
int
mov
ret
leave
jmp
jge
into
int3
jne
mov
outsw
in
mov
cmp
lcall
call
pop
xor
testb
loopne
xchg
dec
mov
cli
push
mov
xlat
imul
jmp
std
xchg
stc
adc
sub
sub
mov
mov
mov
filds
and
sti
mov
jno
jbe
shrb
rorb
in
cld
aam
repz
stos
aad
out
movsl
mov
push
sbb
xchg
cmp
xchg
mov
imul
daa
add
push
mov
or
mov
jns
xchg
push
add
cltd
les
mov
test
or
aad
jmp
push
loopne
mov
cltd
stc
xchg
addr16
pop
icebp
mov
pop
inc
hlt
lret
pushf
jbe
add
scas
xlat
mov
cs
xor
hlt
repz
mov
pop
lock
lds
xchg
jb
outsb
sub
mul
gs
xchg
pop
xchg
ss
and
inc
rcrl
jmp
mov
pop
lods
mov
sahf
or
in
pop
gs
cwtl
jne
sahf
cmpsb
xor
out
jge
mov
icebp
insb
inc
lcall
xor
and
arpl
movsb
adc
xchg
rcr
ljmp
inc
fimuls
mov
jge
in
mov
dec
xchg
mov
out
push
adc
in
sub
sub
adc
pop
mov
or
xor
aaa
add
cmpsb
add
mov
jo
jge
lods
imul
hlt
cmp
jl
clc
sub
cmc
mov
inc
xchg
cmp
or
out
inc
sbbl
bound
arpl
cmp
sbb
adc
leave
adc
aam
bnd
xorl
scas
xor
aaa
scas
notb
gs
jae
out
sti
stos
cs
push
inc
mov
xor
leave
dec
movsl
jno
mov
pop
lahf
aaa
and
aas
xor
cwtl
xor
jmp
je
push
push
rep
dec
mov
fdivrs
outsb
jle,pn
daa
in
add
cwtl
inc
lahf
data16
jbe
imul
shll
xchg
gs
pusha
clc
push
shlb
mov
lret
cwtl
or
and
pushf
mov
dec
pop
jo
pop
pop
jo
add
cli
xchg
popa
push
repz
sbbb
add
ss
push
mov
xchg
bound
cmpsl
ds
pop
ja
xchg
mov
sbb
jp
mov
in
fdivl
pop
aas
cmp
jo
cmp
ret
mov
popa
cmp
scas
mov
stos
jle
lods
push
mov
imul
add
cld
jl
lods
fidivrl
mov
push
or
ja
stc
das
mov
pushf
mov
push
pusha
or
xchg
fstps
mov
popf
push
sti
out
dec
int3
dec
iret
mov
jge
gs
inc
pop
jg
mov
sub
jnp
adc
push
push
rcrl
pop
sti
mov
aaa
fldcw
inc
or
hlt
repz
lahf
mov
movsb
mov
fcom
push
in
jl
test
aad
dec
dec
mov
lret
dec
mov
stos
and
icebp
mov
je
sarl
iret
fs
lds
mov
push
push
adc
aam
sub
aaa
adc
add
jnp
insb
xor
push
jne
aad
je
fldenv
sbb
ja
mov
mov
jge
adc
pusha
pop
into
and
icebp
test
scas
mov
or
and
mov
pop
mov
mov
cmpsl
mov
jg
repnz
mov
jb
cld
xor
xor
scas
sbb
ja
lret
stos
rclb
jbe
inc
pushf
add
pop
fadds
in
ffree
pop
xchg
sbb
mov
jmp
in
out
add
dec
shll
lods
imul
shrl
mov
sbb
out
daa
fbld
aam
popa
std
stos
outsl
and
lock
xchg
jmp
jp
cmpsl
cmp
fwait
in
les
xchg
outsl
pop
bound
gs
inc
adc
xor
fwait
cmpsl
notl
adc
scas
lret
or
bound
in
sub
push
ret
cmpsb
daa
xor
or
sahf
adc
sub
push
mov
iret
add
push
cmpsl
xchg
add
outsb
jb
xor
or
loopne
jg
xor
stos
fnstsw
gs
sbb
cmp
push
ret
jb
xor
jle
jle
sbb
sbb
stc
adc
sub
gs
pop
loope
testb
dec
xor
pushl
fcmovbe
xchg
sbb
inc
pop
lea
andl
push
or
std
lea
aad
and
jle
and
fsubrl
inc
sbb
mov
and
nop
hlt
addr16
clc
adc
cli
sbb
outsl
pop
insl
ja
cmpsb
add
xchg
mov
mov
es
xor
jmp
nop
sub
test
outsb
out
pop
dec
data16
rolb
adc
movsl
sub
sbb
sahf
xor
mov
stos
inc
mov
movsl
out
lods
lret
mov
subb
jb
cmp
insl
pop
sahf
and
ljmp
outsl
sub
inc
pop
mov
jne
add
fsts
push
cmpsb
lds
pusha
in
sbb
imul
pop
xor
or
call
xor
repz
inc
lods
js
jbe
pop
xor
xchg
arpl
mull
int
cmpsb
xchg
test
jl
dec
cmp
inc
xchg
lahf
movups
mov
mov
sbb
jmp
fsts
fiaddl
sbb
xor
stc
push
add
scas
pop
ja
dec
adc
fsubrp
jno
adc
dec
pop
mov
int3
arpl
push
jae
cwtl
push
and
push
push
push
stc
cmpsl
shll
push
jno
lds
push
sub
addb
add
pop
xchg
or
mov
xchg
imul
cmp
jns
or
mov
add
movsl
aas
xor
enter
shr
imul
xlat
add
push
inc
fs
lods
enter
in
das
mov
ret
aad
mov
in
cmp
in
push
xchg
stc
inc
add
mov
xor
lahf
popf
les
mov
out
adc
sbb
sub
jle
out
jg
andb
ja
push
or
push
in
jle
mov
imul
mov
popa
stos
scas
scas
les
movl
cwtl
ljmp
cli
pusha
cwtl
das
push
adc
into
lahf
sub
in
push
fcmovnbe
mov
add
pop
xor
sbbb
pop
xor
repnz
xlat
mov
hlt
mov
fdivs
loop
loope
xchg
idivl
mov
insb
add
negb
cmp
jp
cld
sub
mov
fsubrs
or
push
pusha
fisubrl
mov
jmp
jp
and
imul
sbbl
test
in
fstpt
mov
inc
lods
cmp
inc
cmp
inc
loop
out
push
out
hlt
repnz
aaa
mov
sti
dec
cmpsb
pop
xlat
mov
sar
cmpsb
dec
in
mov
loop
xlat
xor
sahf
test
imul
lods
mov
repz
imul
mov
hlt
cmp
test
enter
sub
xchg
pop
and
clc
and
ret
pop
mov
mov
jge
add
les
push
pop
repz
or
push
lods
xor
fmul
pop
imul
pushf
dec
sub
jp
push
leave
cmp
dec
movsl
sbb
sti
mov
push
inc
out
sbbb
ficoms
test
mov
xor
cwtl
test
mov
jbe
es
es
xchg
xorb
int3
cmp
testl
pop
xlat
or
mov
jb
cmp
es
cmp
dec
test
in
lock
jle
inc
arpl
outsb
adc
xchg
inc
sbb
adc
cwtl
and
icebp
orb
xor
xlat
pop
cwtl
stos
mov
je
inc
and
fnstsw
out
xchg
cmp
test
ret
inc
and
cmp
imul
inc
popf
mov
mov
mov
jg
les
adc
xchg
or
dec
cmp
push
arpl
jns
or
popa
sub
cmpsl
fadds
test
movsl
sahf
fldcw
mov
repnz
sbb
mov
or
daa
pop
jb
cmc
and
cmpb
sbb
rorl
xchg
aas
xchg
sbb
xchg
push
and
adc
aam
inc
test
in
stos
pop
nop
repnz
insb
and
fucom
adc
sbb
cmp
pop
dec
iret
sarb
test
dec
cmp
mov
mov
ljmp
mov
adc
push
mov
mov
inc
dec
push
ljmp
inc
stos
insl
jp
addr16
inc
lods
push
cwtl
in
in
repnz
stc
push
movsl
mov
imul
dec
lret
mov
fs
in
sbb
sbb
imul
repnz
lods
add
pop
dec
arpl
jb
cmpsb
aaa
pop
adc
mov
push
push
call
cs
xchg
xor
sarl
andb
xor
or
loop
std
sub
pushf
xor
fistpll
or
push
fldcw
sub
and
notb
jno
xchg
xchg
popa
aad
mov
push
rolb
add
fsubrs
ror
xlat
cmp
mov
hlt
mov
add
mov
push
mov
mov
outsl
out
stc
dec
xchg
pop
out
test
lahf
ds
dec
inc
das
lds
push
inc
adc
xchg
sub
xor
pusha
jnp
mov
stc
sub
testl
test
cmpsl
jno
out
js
sti
mov
sahf
mov
adc
shrb
int3
xor
das
sbb
cmp
push
or
data16
nop
bound
or
faddl
call
lock
outsb
jo
cs
push
pop
in
push
cmp
repz
sbb
inc
fwait
popf
orb
and
add
and
and
mov
push
or
xchg
popf
push
icebp
call
sbb
pushf
mov
jg
mov
xor
adc
push
mov
push
ficomps
xchg
inc
sub
add
adc
bound
call
in
and
xor
inc
mov
nop
test
add
sbb
pop
adc
pop
insb
popa
mov
sub
pmuludq
xor
sbb
jge
cmp
adc
push
or
lahf
dec
pop
jl
movsb
imulb
pause
jl
xchg
pop
repnz
ljmp
decb
sbb
and
addl
leave
sub
push
pop
adc
add
fsubl
xor
testl
leave
pusha
jp
cmp
mov
leave
sbbl
test
mov
jno
shll
mov
inc
testl
jbe
sbb
xchg
inc
jno
stos
inc
or
outsb
mov
lods
aad
inc
pop
sbb
repz
push
mov
mov
jbe
pop
mov
iret
sti
adc
shlb
loopne
xor
jnp
jb
gs
xchg
jnp
dec
ficoml
adc
fsubl
sbbb
js
mov
stc
inc
add
mov
test
dec
cli
sbb
test
fdiv
cmp
gs
pop
aaa
jl
jp
les
adc
inc
popf
xor
mov
cmpb
adc
cwtl
sub
popf
in
mov
inc
add
xchg
in
and
loope
sbb
add
lea
mov
mov
pop
aam
daa
add
scas
rclb
pop
xor
dec
adc
sub
scas
mov
int3
lret
adc
out
jge
loop
stos
mov
push
idivl
jne
pop
add
mov
arpl
sbb
cmp
rcll
lret
add
mov
stos
fs
addl
je
dec
mov
xor
sbb
sub
dec
sti
adcb
ss
pop
addr16
xchg
mov
jmp
lea
mov
jle
sti
leave
insb
and
int3
mov
test
or
shlb
lret
cld
pop
pop
dec
cmpsl
stc
pop
sub
clc
imul
and
sub
sub
inc
je
lret
xor
xchg
add
js
popa
lods
loop
and
fidivrl
imul
cli
lret
popa
inc
cmp
call
je
imul
stc
out
incl
jno
cmpb
scas
stos
inc
loope
jbe
loopne
push
popf
mov
fistps
xchg
icebp
fs
mov
push
cmp
and
push
sbb
jb
lea
xchg
mov
jbe
cmp
and
imul
ret
mov
pop
dec
pop
jnp
subb
mov
fmul
test
maxps
mov
out
fdiv
lea
sub
repnz
adc
cld
data16
pop
xchg
push
or
aad
insl
rolb
nop
dec
rep
cmp
jge
sub
stc
je
enter
sub
insb
inc
fadd
inc
or
ret
das
int
and
icebp
ret
es
mov
cld
xchg
push
pop
xor
sar
rol
fiadds
pop
pop
mov
cmpsb
les
xchg
mov
dec
hlt
in
outsb
cmp
pop
jp
mov
xor
cli
sbb
adc
insb
push
and
push
mov
bound
sub
pop
andb
jae
cmovnp
jae
aad
cld
push
or
insb
dec
xchg
ret
pop
lds
and
mov
das
cmp
adc
sub
inc
repz
lret
scas
mov
repz
out
test
mov
cli
pusha
xchg
push
or
adc
fs
into
sub
pop
jge
jns
aaa
loop
lcall
rcrl
out
fsubs
jae
mov
push
clc
cmp
fbld
fwait
push
cmp
out
mov
scas
divb
adc
jmp
sbb
andb
sub
cmpsl
xor
sbb
xor
arpl
hlt
sub
aas
stc
sahf
hlt
sub
dec
inc
mov
or
scas
nop
cmp
dec
imul
stos
pop
in
lea
gs
scas
dec
in
arpl
dec
inc
out
jp
fs
cmp
jmp
sbbb
test
int3
pop
repnz
and
mov
mov
push
mov
cmp
jae
aaa
dec
sub
jle
sbb
sub
sbb
inc
inc
test
aad
lock
xor
or
stc
push
sub
and
pop
imull
movsb
sar
adc
sub
add
cmp
cmp
mov
jbe
in
adc
mov
ljmp
rcl
mov
fmull
insb
xor
jmp
mov
jp
je
sub
push
nop
mov
test
popa
sbbl
ja
dec
shrw
cs
pop
jl
jo
push
bound
sbb
test
movsl
push
repnz
sub
mov
mov
ds
and
pop
popf
jg
cmp
loop
and
cmp
stos
inc
icebp
push
sbb
test
cmp
add
xchg
and
push
jbe
or
xchg
add
pop
loope
fnstenv
add
outsb
mov
addr16
adc
jae
dec
push
cs
data16
aas
in
clc
sub
icebp
jnp
ret
pop
xchg
bound
sbb
jg
pmulhuw
cmpsl
aad
aam
sbb
dec
je
repz
push
in
add
mov
push
xchg
sub
sub
daa
push
sbb
lcall
xor
pop
add
mov
push
jae
adc
mov
push
out
pop
push
push
inc
sbb
icebp
insb
scas
mov
cld
dec
lret
xchg
xchg
jne
add
sbb
mov
cmp
dec
xor
out
jns
add
loopne
cs
xchg
xchg
in
test
mov
shlb
sbb
scas
jp
cmp
jle
mul
clc
daa
sub
cwtl
in
dec
mov
loope
aas
mov
sahf
aaa
push
aas
pushf
jg
cmp
in
dec
icebp
mov
loop
xchg
sub
mov
xor
mov
mov
jno
mov
fmull
lahf
add
or
loopne
push
shlb
lcall
scas
jmp
loopne
add
add
add
and
pop
das
out
xchg
xchg
scas
test
mov
jp
dec
pusha
into
jnp
mov
mov
sub
dec
fcom
pop
pop
loopne
mov
xchg
mov
cmp
mov
pop
clc
bnd
cmc
mov
idivb
ret
adc
pop
xchg
loop
mov
and
pop
cmp
xchg
pop
mov
scas
mov
ficompl
sahf
iret
xchg
pop
gs
psadbw
xor
nop
addr16
je
push
out
out
test
mov
sub
sbb
cmpb
test
enter
rolb
imul
cmp
pop
cmpsl
ds
mov
lds
ret
sarl
xchg
jl
xchg
xor
adc
push
mov
test
dec
pop
into
js
add
cld
icebp
ja
out
pop
jecxz
fisubs
sbb
or
lahf
jb
in
lcall
in
cmc
stos
mov
cmp
cmp
lods
repz
ficoms
je
jne
adc
loopne
rol
inc
add
inc
mov
sbb
push
jmp
outsb
ret
mov
and
cmp
in
fs
pop
cmp
push
xchg
repnz
cwtl
jae
pop
mov
xchg
in
add
fidivrl
fwait
cmpsl
mov
aam
push
push
jle
repnz
or
jmp
add
jne
sbb
adc
jecxz
out
shlb
insl
loopne,pn
dec
jle
icebp
inc
jnp
xor
fisubrs
sub
call
sbb
fldl
xchg
out
movsb
les
fmull
add
cmp
imul
or
push
test
push
or
adc
mov
push
js
jmp
mov
out
dec
std
jg
negl
call
dec
mov
dec
jge
or
pop
inc
xchg
popa
mov
jp
push
aaa
sub
stc
js
aaa
push
cmp
dec
inc
test
loope
subl
iret
aad
push
cld
add
addr16
adc
int3
sbb
and
inc
hlt
and
jecxz
jnp
lcall
sub
fdivrs
mov
pop
out
sbb
or
xchg
movsb
inc
adc
cmp
push
push
lea
fildll
mov
adc
cmp
mov
in
jae
lea
dec
in
adc
lods
push
adc
jmp
cmp
jnp
inc
jbe
div
add
cmpsb
sbb
lods
ret
adc
popf
lret
in
icebp
fwait
lods
repnz
push
popa
cmpsb
call
test
xor
out
popa
ficompl
xchg
adc
dec
pushf
push
lods
into
xchg
cmp
and
jmp
sub
scas
inc
push
add
sahf
push
cmc
inc
fisubs
je
add
iret
inc
cmp
jp
xor
inc
dec
test
lret
push
lret
adc
mov
lods
sub
or
ja
pop
dec
inc
pop
lret
fstpl
lods
jg
ja
loope
loop
or
lods
pop
stos
enter
fdivl
adc
push
jle
inc
push
cltd
jp
push
lods
or
in
sub
sbb
or
cmp
sbb
adc
in
push
cmp
lcall
xor
mov
xor
mov
mov
and
add
movsb
lods
ds
xor
or
sbb
icebp
insb
ret
cmp
sti
mov
and
pop
cltd
das
lds
push
mov
push
adc
rcll
adcb
adc
add
xchg
adc
adc
push
xorl
push
lods
adc
in
das
cmp
mull
dec
mov
test
push
fsubrl
push
mov
lret
je
in
sub
push
jmp
sbb
dec
jbe
cmp
stc
nop
sbb
addr16
dec
cmp
xchg
notb
jg
jg
and
test
pop
addb
std
mov
xchg
sti
mov
mov
sbb
imulb
pop
ss
jge
fdivrs
xchg
mov
subl
pop
push
test
aas
mov
repnz
test
adc
add
cmpsl
inc
pop
or
pop
fwait
addb
or
outsb
sub
jae
loop
push
push
pop
cmp
adc
mov
femms
leave
adcb
in
xchg
pop
daa
inc
sbb
sti
lcall
cmpsl
add
sbb
and
cmp
ss
mov
cmp
push
inc
in
repnz
popfw
inc
addr16
mov
jne
cwtl
dec
out
addr16
in
ficompl
pop
mov
dec
adc
iret
sbb
and
rorb
mov
lcall
and
icebp
pop
icebp
adc
push
jmp
jb
popa
add
push
mov
pop
shl
or
arpl
xor
jecxz
and
and
and
fwait
xchg
cmpl
push
mov
shr
push
cltd
xorb
outsl
cmp
sbb
lcall
lods
mov
mov
pop
les
xor
mov
in
xor
icebp
lret
out
das
mov
lea
dec
repnz
ljmp
xor
inc
jecxz
jg
pop
test
inc
cld
stos
mov
push
mov
pop
sbb
outsl
cmp
pop
stos
xchg
pop
int3
in
sbb
lea
andl
dec
xchg
cmp
push
mov
fucomip
aaa
push
dec
cmpsl
push
sbb
or
negb
cmp
cmp
inc
jmp
imul
lahf
lock
xchg
lret
mov
sarl
pop
jne
shrb
and
mov
sahf
jmp
pop
and
cmp
jb
inc
dec
popf
and
xchg
les
imul
add
out
push
jnp
test
sbb
fdivl
push
add
mov
stc
clc
xor
nop
cmp
add
inc
outsl
daa
inc
test
jnp
xchg
data16
or
imulb
and
popf
mov
inc
fidivl
insb
mov
insb
sbb
movsl
jbe
cwtl
lret
sub
add
xor
fidivs
dec
cmp
dec
lcall
pop
inc
add
in
sub
mov
add
lcall
dec
nop
loop
inc
jl
insl
sbb
push
dec
sti
jo
inc
arpl
data16
ret
jb
and
push
loope
and
xchg
mov
lcall
dec
add
adc
mov
je
insl
and
jmp
dec
pop
clc
into
pushl
stc
fs
stc
mov
sub
push
outsl
call
loope
cmp
pop
pop
xchg
dec
cmp
addl
add
mov
lds
pop
adc
lock
ljmp
mov
into
subb
sbb
sahf
out
fstl
arpl
lods
mov
jo
out
int3
jmp
cli
or
out
test
lods
cltd
mov
lods
or
adc
fs
push
mov
hlt
cli
cli
xchg
sub
out
jge
or
flds
mov
test
outsl
addr16
rcl
pop
icebp
xor
daa
mov
pusha
xchg
inc
insl
mov
addl
xlat
mov
or
add
movsb
movsb
xlat
add
int3
mov
jl
scas
jno
inc
rcr
mov
adcl
jbe
dec
push
add
notb
dec
pop
xchg
fwait
xor
adc
in
adc
js
testb
push
insl
mov
shrb
fdiv
mov
jno
adc
lret
ja
cmp
repz
hlt
cs
clc
push
pop
out
dec
xchg
in
xorb
pusha
ljmp
xor
bndstx
shl
mov
add
sub
mov
insl
mov
bound
out
and
cmp
test
insb
add
jecxz
push
loop
testl
mov
mov
test
movsl
or
push
add
test
add
sbb
jne
cs
movsl
sbb
stos
mov
xchg
jg
jle
push
ret
xchg
dec
xchg
jle
leave
inc
lret
push
dec
and
sbb
xchg
fcompl
dec
mov
pop
cwtl
das
lea
mov
jle
sub
fmull
outsl
in
add
jge
inc
sub
jno
jl
jecxz
iret
test
pop
mov
into
mov
cli
fxch
mov
stc
cli
xlat
out
pusha
adc
mov
imul
adc
bndstx
rcll
loop
bnd
int
pop
mov
out
nop
inc
shll
scas
cmp
mov
fucompp
jb
mov
cld
out
sub
subl
inc
xchg
fs
push
push
jnp
or
mov
aam
pop
repnz
js
inc
lods
inc
stc
sbb
mov
mov
test
iret
xchg
ret
pop
enter
stos
fs
fidivrs
xchg
jo
or
dec
add
movsb
icebp
adc
xor
push
cmpsl
jne
mov
int3
sbb
xor
mov
mov
or
and
lea
sarl
mov
add
popa
jl
and
outsb
xchg
cltd
sub
sbb
xchg
jle
mov
add
add
jecxz
xchg
test
mov
imul
icebp
sub
dec
inc
inc
xlat
push
lock
hlt
fldt
scas
xchg
mov
js
mov
jnp
sti
or
inc
mov
lret
push
out
xor
sub
inc
aam
sahf
and
mov
lds
jae
in
jmp
dec
ret
lahf
stos
insb
dec
rorb
imul
cmpsb
mov
hlt
xlat
in
stos
add
test
inc
mov
xchg
sub
stos
daa
push
jle
inc
in
bnd
or
add
jbe
js
inc
inc
call
adc
and
andl
and
mov
dec
cmpsl
lret
mov
out
mov
cld
xchg
push
sbb
or
pop
fistpll
or
xchg
sbb
add
or
xor
mov
fnstcw
pop
stos
jecxz
sub
and
out
xorb
jl
xchg
adc
mov
jbe
xorb
push
cmp
xor
pop
inc
and
sub
fnstsw
xlat
adc
mov
push
clc
push
aas
data16
fldcw
test
cwtl
mov
adc
fbstp
pop
lods
inc
push
xor
test
push
stos
mov
fisttps
jecxz
xchg
mov
inc
les
aam
je
in
push
ss
imul
fildl
mov
movsb
dec
ss
repz
add
ljmp
imul
fwait
dec
mov
pop
loopne
js
inc
mov
adc
push
cwtl
xor
call
lods
push
xor
int
cmp
mov
aas
push
add
jp
jle
lock
jmp
sub
xlat
mov
repz
dec
pop
push
imul
sbb
mov
sbb
shll
jmp
loopne
mov
jbe
or
dec
das
daa
dec
or
shr
nop
xchg
pop
les
pop
adc
scas
out
dec
and
pop
mov
add
scas
cwtl
dec
jg
aam
daa
ljmp
push
jne
mov
in
imul
pushf
xchg
push
sub
mov
inc
loope
inc
or
xor
bound
mov
jge
jecxz
add
and
bound
aas
dec
rol
repnz
pusha
lret
cwtl
add
out
jb
and
in
sub
rcrl
clc
sbb
enter
inc
add
xchg
jnp
and
inc
jg
push
cmp
das
test
enter
in
dec
arpl
and
cmp
xchg
jae
push
int
mov
cs
pcmpeqb
lods
movsl
cli
jecxz
iret
and
hlt
sub
cli
into
xor
jmp
jge
dec
scas
dec
sahf
jns
and
repz
pmulhw
bnd
loop
test
aam
xchg
sub
add
cs
push
jne
in
inc
cmp
cmpps
fldcw
dec
jns
jnp
out
test
mov
clc
mov
or
out
rorl
loope
pop
dec
rcrb
outsl
scas
es
inc
inc
or
or
push
cmpsl
mov
bound
out
or
in
outsb
sub
scas
and
add
sub
mov
ret
int
in
jg
fdivl
aaa
jo
out
ds
int3
arpl
movsl
insl
mov
pushf
jne
loop
push
lock
inc
mov
mov
idiv
addr16
pusha
or
fwait
xchg
dec
adc
push
fnstsw
xor
sbb
pop
ret
sbb
scas
xor
pop
in
clc
repnz
int3
dec
out
cli
sub
mov
or
ljmp
xchg
ss
js
int3
or
xor
inc
sbbb
xchg
add
adc
mov
repnz
fdivs
outsb
push
mov
ds
or
pop
mov
adc
leave
cmpsb
push
pop
xor
movsb
xchg
imul
mov
jmp
test
cwtl
jge
xlat
xchg
fisubrl
out
inc
inc
xlat
mov
fistpl
push
inc
pop
ret
sbb
xchg
mov
data16
pop
outsb
cmp
sub
mov
aad
addr16
in
popa
sbb
mov
sub
or
or
in
pusha
and
xchg
jnp
aas
iret
addb
sub
pop
xchg
sbb
test
cmp
addr16
out
fs
decl
repnz
xchg
adc
mov
int3
mov
in
fs
daa
jb
pop
cmp
insl
lea
test
xchg
outsb
outsl
add
mov
mov
inc
subb
xchg
xchg
lret
cmp
sbb
sbb
xchg
int
mov
fiadds
ss
xchg
mov
dec
es
aam
ret
adc
rorl
adc
ss
and
cwtl
cmpsb
or
push
aas
ja
jl
fidivs
sahf
cmc
pop
in
bound
rclb
ret
pop
xchg
leave
mov
add
push
scas
ficomps
test
out
popa
pop
popa
jbe
iret
js
ds
cld
bound
xlat
mov
adc
sti
fadds
sbb
out
adc
push
jae
arpl
inc
mov
jnp
lret
pop
enter
xchg
dec
add
adc
out
data16
push
je
icebp
mov
adc
outsb
psubsb
cmp
or
jns
daa
jo
daa
mov
xlat
push
or
scas
jp
jp
push
les
repnz
mov
cmpsb
cmp
icebp
mov
loopne
call
or
sub
adc
mov
inc
fidivs
jno
push
cs
gs
mov
xchg
daa
outsb
adcl
pop
test
rcrl
sbb
rorl
dec
xchg
push
mov
scas
out
xor
rcrl
mov
aam
mov
ret
call
and
inc
pusha
mov
jecxz
sub
std
push
loopne
xor
je
stos
int
loopne
fucomip
cmp
enter
mov
and
inc
jmp
stc
jmp
lahf
lods
test
ja
gs
cwtl
jg
dec
push
aas
push
cmp
movsb
mov
mov
lret
xlat
xchg
out
inc
xlat
rcr
lea
pushf
xchg
sub
inc
cmp
dec
pop
sti
and
mov
add
mov
dec
adc
shr
sub
orb
push
inc
out
stos
hlt
xchg
push
or
rcr
jl
daa
push
xchg
in
dec
xchg
inc
sbb
cmp
pop
scas
add
push
push
sbb
nop
ret
outsl
vpshab
xchg
test
in
adc
jmp
jl
sahf
adc
idivl
xchg
imul
outsb
jmp
insb
add
mov
xor
push
adc
mov
or
mov
mov
pop
mov
or
or
pop
icebp
scas
jnp
push
pop
sbb
dec
jge
inc
jbe
and
mov
mov
subb
mov
pusha
in
lret
adc
or
cmp
jp
addr16
cmp
pop
movsl
adc
out
data16
je
xor
xchg
pop
gs
into
shrb
in
sub
data16
fsubr
and
mov
aad
jno
lret
pop
out
int
dec
xchg
mov
cmp
mov
mov
test
out
in
je
repnz
xchg
push
push
movb
mov
push
ja
and
in
lods
push
out
mov
jbe
cmp
adc
jae
mov
dec
and
jae
pop
push
xlat
shlb
mov
cld
and
or
imul
mov
xchg
mov
divb
cmpsl
xchg
testb
adc
mov
enter
lock
dec
test
loop
outsb
repz
ret
pop
icebp
test
pop
daa
subb
xor
test
or
xchg
pop
addr16
inc
fidivrl
add
jne
pusha
pop
loope
mov
mov
mov
cmpsb
cmp
add
cmc
cmp
add
insl
sub
sarl
popf
inc
fmul
pop
mov
pop
ljmp
dec
test
push
mov
sub
mov
adc
outsb
mov
sbb
lea
cmc
mov
data16
aaa
pop
or
pop
pushl
in
add
jnp
data16
hlt
addr16
xchg
mov
lcall
fiadds
xor
lods
pop
jle
test
inc
sbb
jns
jmp
and
push
out
lahf
pop
lods
fstps
mov
mov
jl
cmp
or
test
ret
jg
aas
mov
jle
in
pop
pop
leave
inc
xor
rcrl
push
xor
mov
xor
popf
ljmp
out
jno
loopne
bound
jg
cwtl
fstpt
xchg
sub
sbb
add
imul
call
je
mov
push
in
mov
lods
jp
sbb
enter
jp
add
andl
test
pushf
pop
icebp
vpsrld
pusha
into
lds
rclb
repnz
mov
cmp
insb
icebp
lret
call
imul
into
xchg
cmp
ret
test
jg
mov
jl
movsb
inc
cmc
das
sahf
adc
jns
or
adc
inc
push
in
int3
call
mov
and
jge
in
test
pop
add
loope
test
daa
add
scas
cmpl
jnp
bound
mov
gs
inc
sbb
fdivl
loope
sub
out
test
scas
pop
and
cmp
out
into
pop
arpl
push
in
rcll
in
xor
push
popa
or
dec
stos
inc
cmp
or
sbb
sub
sbb
inc
dec
adc
fs
cwtl
xor
xchg
or
out
divl
mov
daa
jae
aaa
sub
aam
jnp
sbb
mov
dec
mov
fsubrs
and
push
test
mov
mov
shlb
aad
pop
push
stc
mov
movsb
sti
stos
andl
mov
lods
in
daa
outsb
add
adc
pop
mov
dec
push
sbb
adc
push
sub
out
pop
popf
jle
inc
add
inc
push
in
lds
jecxz
xor
mov
dec
movsl
dec
in
xor
push
xchg
mov
mov
push
sub
fdivrl
in
stos
incl
lods
jge
mov
fcmovb
pop
or
lods
test
pop
jno
lods
pusha
cs
sarb
jae
jecxz
mov
mov
inc
idivb
lock
cli
bswap
or
movl
and
sbb
mov
pop
repnz
mov
icebp
stos
xor
xlat
cmpsb
push
shll
psrlq
ret
into
lret
jb
xchg
mov
cmpsb
mov
lret
dec
push
stos
nop
pop
pop
in
lods
and
insl
jp
mov
lret
adc
push
outsb
jns
insb
add
add
push
fisttpl
fiaddl
test
in
xchg
mov
fs
lahf
stos
inc
popl
in
jl
inc
stos
ret
adc
sbb
jb
xor
jnp
in
repz
in
or
daa
aad
jmp
and
adc
push
test
fsubs
push
cld
fbstp
inc
mov
fs
bound
cmpsl
jge
cmpsl
mov
out
stos
je
insl
ret
mov
pushaw
mov
shrb
rol
aad
imul
icebp
jno
jmp
push
je
nop
data16
lods
dec
or
insb
popf
repnz
pop
insl
cmp
mov
mov
jnp
stos
insb
mov
jne
sarb
mov
push
je
mov
stc
xchg
pop
mov
sbb
filds
mov
xchg
jge
cmp
movsb
jmp
adc
or
fwait
sbb
dec
mov
ret
insb
mov
gs
and
inc
mov
pop
lret
popa
mov
cwtl
cs
out
cmp
lahf
ror
or
aas
push
mov
cmp
lahf
push
repnz
xor
stos
shlb
scas
call
jp
test
dec
adc
sbb
dec
es
xchg
pushf
jo
jp
into
jo
or
xorl
xchg
hlt
mov
mov
cwtl
pop
dec
jnp
mov
fcoml
xor
cmc
and
es
test
jecxz
das
pop
cmp
repnz
fmul
iret
fidivs
pop
fimull
jp
and
add
insb
jnp
insl
pop
mov
cmp
lret
sub
dec
push
jb
jl
mov
cmpb
test
scas
test
lret
cld
test
lds
mov
movl
sub
dec
inc
push
cmp
jb
popf
inc
int3
mov
push
es
icebp
sub
sbb
dec
vmaxsd
outsl
js
jne
dec
cmpsl
test
clc
sahf
jl
mov
out
es
ja
mov
iret
pop
or
cmp
pop
push
movsl
mov
sub
aas
inc
fnsave
repz
jle
outsl
in
call
mov
shl
cmp
xor
sub
gs
out
sub
dec
inc
mov
cmpsb
test
cli
aaa
mov
push
test
inc
hlt
test
add
sbb
loop
aam
xchg
push
push
and
mov
outsl
pusha
add
jp
xchg
sub
cmp
ds
mov
aad
push
repnz
jo
push
je
dec
insl
and
push
xor
and
xor
mov
fimull
mov
add
mov
adc
or
xor
push
xchg
iret
inc
in
mov
std
shlb
cmpsb
inc
outsl
mov
inc
xchg
dec
pop
sub
lcall
dec
push
stc
popa
mov
xor
xor
sti
jbe
cmp
jo
adc
pop
lret
cmp
xchg
and
subb
sbbb
bound
cwtl
jmp
dec
mov
pop
xchg
scas
inc
mov
dec
in
jae
cwtl
outsb
and
daa
cmpsl
pop
in
test
mov
test
das
xchg
ss
enter
mov
mov
cmp
push
xchg
xor
out
imul
push
mov
stc
xor
loopne
mov
xor
imul
aaa
call
hlt
lahf
ljmp
push
pop
insb
lcall
pusha
and
jb
notl
jge
inc
sbb
fisubs
jnp
aaa
sub
movsb
addr16
pushf
ret
and
and
adc
sbb
adc
aam
lea
or
mov
xchg
dec
dec
hlt
or
movl
jmp
or
xchg
pop
mov
or
push
mull
ret
jl
lds
ja
cmp
sti
scas
adc
cmc
sbb
jl
insl
inc
inc
mov
lea
cld
fsubrl
adc
out
inc
popa
xchg
mov
stos
leave
mov
xchg
mov
lds
or
rcrb
add
adc
arpl
daa
outsl
or
inc
mov
leave
dec
jecxz
fsub
call
push
mov
lret
out
test
cmp
inc
sbb
fcomps
pusha
mov
add
jne
rcl
fiaddl
dec
loop
fisubl
inc
pop
lock
addl
inc
mov
push
pusha
popf
fsts
negl
jg
push
mov
cltd
jge
fwait
push
js
and
push
pop
repnz
push
jae
mov
rolb
lahf
lods
out
fidivrs
jle
add
mov
inc
test
adc
insb
sub
push
pop
mov
push
pushf
fwait
add
addr16
arpl
cltd
xor
sbb
mov
daa
lods
dec
xor
push
test
mov
sub
and
cmp
int3
testb
lds
push
into
in
out
pop
sbb
jno
in
sub
inc
xsha256
cmpsb
xchg
movsl
inc
pushf
pop
mov
call
jmp
push
outsl
cmovge
sti
fdivrp
sub
dec
lock
gs
push
jmp
sbb
jno
loop
adc
outsl
ret
insb
sub
push
outsb
lds
lahf
dec
jmp
ret
mov
hlt
repnz
out
push
sbb
or
sub
std
push
leave
and
adc
cltd
inc
incl
mov
das
and
pop
mov
sub
cmp
test
lahf
mov
jne
xstore-rng
cmpsl
adcl
mov
xchg
pop
add
clc
sbb
sub
ljmp
xchg
leave
jl
fmull
stos
arpl
fcom
std
xor
loope
push
ffreep
or
jg
mov
cmc
push
inc
push
cmp
shrb
cmp
dec
ret
fnsave
jno
cmc
aad
mov
mov
or
or
cwtl
daa
fdivrs
mov
sbb
sbb
jle
pop
sbbb
jp
inc
inc
nop
daa
pop
xor
dec
cmp
mov
or
push
push
popf
mov
je
and
xlat
mov
dec
push
lods
lahf
inc
and
mov
ljmp
push
leave
ret
or
jp
fisttps
mov
xor
and
dec
rol
shll
jg
xchg
and
sbb
out
fcomps
rorb
sub
sub
mov
adc
pop
test
push
inc
mov
loope
xchg
mov
add
cmp
dec
cmp
test
cmpsl
enter
sbb
shrl
push
push
loop
push
xor
popa
clc
jae
rcll
lret
scas
pop
testl
in
cmc
mov
adc
stos
push
pop
xor
test
aad
cmpsl
push
pop
stc
inc
popf
mov
fmuls
or
adc
xchg
lahf
xor
shlb
shrb
ret
pop
nop
lock
ret
ficoml
popa
js
sbb
xor
add
inc
fidivs
mov
popf
lods
fistl
stc
pop
outsb
mov
mov
addr16
lret
sbb
pop
mov
fwait
xlat
sbb
call
or
mov
hlt
sti
insb
cmpps
aas
out
or
sbb
mov
mov
outsl
adc
push
sub
mov
je
jo
pop
popf
push
rorl
stc
shlb
jnp
mov
inc
jge
or
jns
pop
pushl
xor
gs
das
cmp
cmpsb
jle
adc
sti
outsl
fstl
popf
add
out
mov
in
dec
mov
mov
lods
cmp
lods
inc
add
mov
add
dec
cmp
mov
enter
jmp
decl
stos
js
xorl
das
movsl
jmp
xlat
repz
mov
xor
into
push
sub
test
bound
jnp
cmp
mov
lock
adc
sbb
inc
or
mov
test
lods
cld
pusha
or
mov
in
fwait
mov
xchg
sbb
pop
lret
repz
mov
loope
scas
fwait
xchg
dec
ljmp
pop
or
orb
jecxz
push
sbb
add
mov
and
xchg
shl
add
xchg
scas
sub
scas
adc
lret
lock
add
inc
ss
ret
xchg
xor
push
and
out
cmpsb
in
push
test
test
cwtl
push
fs
mov
cs
pop
lods
add
push
cmp
cmp
adcl
xchg
xor
shl
mov
cmpsb
push
fmuls
mov
out
ds
sub
cmp
aam
xchg
aam
jecxz
mov
dec
loop
cmpsb
icebp
or
or
mov
lahf
in
sarl
or
and
adc
dec
mov
jmp
xchg
mov
cmp
scas
sbb
jmp
or
lret
push
in
mov
push
frstor
je
add
cmp
imulb
pop
lock
jns
xchg
xor
push
clc
repnz
pop
arpl
or
fxch
push
jo
dec
cmp
sarb
or
sbb
aaa
mov
jecxz
add
mov
jle
mov
icebp
jo
or
add
hlt
and
or
sub
xchg
fs
movsl
jns
movsl
out
dec
sub
mov
adc
movsl
or
pop
dec
jo
fwait
xor
push
in
mov
cmp
mov
xchg
insl
std
mov
cmpsb
dec
cmp
clc
add
or
mov
mov
sub
inc
fs
sub
lds
mov
in
jg
mov
mov
push
out
test
hlt
shl
icebp
fbld
repz
and
pop
cmpl
xor
lret
test
int
sbb
out
lea
push
mov
xchg
not
insb
push
sub
push
sub
dec
movsl
cmp
mov
push
or
xor
push
in
dec
sbb
in
push
xchg
rol
pop
xchg
sar
dec
mov
repnz
out
in
test
lldt
cmp
xchg
mov
cmpsl
xor
adc
xchg
lcall
sbb
mov
mov
xchg
xchg
test
shl
lgs
fidivl
sarl
mov
xchg
movsb
rclb
mov
lds
pop
call
hlt
add
and
imul
pop
xor
jge
jns
pop
xchg
jl
cmp
adc
mov
imul
cmpl
push
ds
sbb
enter
pop
aad
xchg
mov
mov
dec
mov
and
push
sub
xchg
jmp
jno
and
fnsave
cmp
call
lahf
cmp
aam
stos
mov
pop
xchg
cld
xchg
and
sbb
mov
or
fildll
call
jne
cmc
sahf
mov
push
or
adc
lret
pop
mov
mov
pop
fstpt
sbbl
pop
mov
sbb
cmpsb
mov
adc
popl
mov
in
les
cmp
test
scas
mov
lret
aam
mov
mov
mov
sbb
les
pop
sbb
jno
sahf
gs
add
ret
aam
xchg
imulb
cld
es
jbe
pop
ret
pop
xchg
lea
lds
adc
into
aad
cs
lods
pusha
jae
jle
ljmpw
pop
push
push
jbe
xor
cs
shl
dec
mov
aaa
lea
rorb
add
sbb
jbe
push
fidivs
adcb
mov
rcll
lret
subb
popa
pop
ja
add
cmpsb
cmpl
sub
mov
cmpsl
sti
xchg
fdivrs
cmpsb
ds
sub
and
pop
out
and
mov
add
and
cmp
jbe
cmpsb
cmp
and
outsl
jns
ret
test
mov
outsb
mov
mov
insb
sub
mov
add
dec
xor
scas
add
prefetchwt1
lcall
cmpl
xor
cmp
push
test
movsb
cmp
pushf
inc
push
lret
jmp
movsb
outsb
arpl
or
scas
mov
dec
popa
jae
pop
cltd
ret
push
and
fwait
pop
mov
sbb
popa
stos
and
addb
adc
rorl
jp
jb
pop
and
add
je
sub
or
popf
lret
pop
sub
data16
mov
gs
andb
pop
fwait
xchg
shl
test
dec
jecxz
dec
adc
aas
inc
xor
addr16
pop
push
cmp
es
push
xchg
cmpsb
push
ljmp
call
mov
push
shrb
popf
fbld
jmp
push
sarb
out
js
jae
xchg
aas
lcall
mov
xchg
push
lcall
dec
xor
repnz
dec
in
sbb
lock
jns
dec
xlat
cmpsl
dec
aad
sbb
adc
push
sub
lcall
in
jnp
lods
insb
and
popf
inc
sarb
loope
fwait
mov
ja
pusha
pop
mov
mov
in
stos
pop
adc
clc
in
xor
sbb
or
fwait
out
rcrl
pop
adc
inc
pop
stos
inc
rcrl
sub
or
mov
lcall
insl
add
push
nop
xchg
sbb
push
dec
or
lock
mov
pop
push
hlt
lahf
scas
int3
pop
mov
sbb
sub
ds
pop
mov
pop
addr16
ja
jle
sbbl
mov
add
nop
lods
add
sahf
outsl
xor
mov
dec
pop
mov
inc
xor
sbb
mov
and
cmp
or
dec
cmp
sbb
ficoml
mov
pop
push
stos
subb
xchg
aam
push
push
cmc
insb
mov
popa
movsl
inc
fstl
bound
nop
aad
fucomp
insl
pop
and
fsubrl
ljmp
jne
mov
addr16
lcall
cwtl
dec
test
push
in
push
incl
pushf
inc
xor
mov
pop
int
pusha
js
lret
pop
sub
xlat
ud2
mov
dec
xor
jnp
sub
popa
mov
sbb
jbe
push
xchg
imul
mov
and
in
imul
and
aad
popa
arpl
testl
sbb
and
movsb
out
loop
adc
sbb
push
lret
cmp
inc
push
sbb
fcmovb
push
xor
jns
mov
sub
jb
movsl
push
subb
or
or
push
push
jp
lock
orl
dec
je
popf
leave
jmp
dec
ljmp
jmp
rcr
lods
or
popf
mov
jo
inc
cwtl
movsl
xorl
rolb
inc
movsl
and
sahf
jg
call
int3
mov
push
mov
jb
test
jle
jbe
jno
mov
pop
and
ss
xchg
push
dec
pop
hlt
push
mov
mov
adc
ret
call
sbb
lret
mov
xor
xor
push
subl
cmpsb
cmp
imul
jbe
es
cmc
cld
outsl
mov
push
jae
jns
out
mov
pushf
mov
scas
ret
or
out
out
ret
inc
cmp
ja
mov
sub
mov
loop
add
imul
xor
adc
repnz
popf
scas
push
bound
cwtl
pushf
sti
stos
in
cmp
das
cmp
icebp
or
mov
pusha
inc
js
out
cmpsl
pusha
stc
das
xchg
and
cwtl
sub
subl
add
es
pop
mov
pop
cmc
test
sbb
scas
cltd
xor
push
lods
inc
addl
inc
dec
jecxz
outsb
mov
jno
pop
jl
sti
add
aaa
push
push
cli
push
icebp
loopne
scas
xchg
xchg
add
sbb
mov
out
sub
cld
pop
adc
xor
inc
or
icebp
inc
and
test
in
mov
inc
in
repnz
cwtl
mov
loopne
sub
imul
sbbl
cmp
in
xchg
rcrl
xor
push
mov
mov
std
adc
mov
pop
sbbl
cmp
lahf
lcall
dec
sub
cltd
popa
test
cmpsb
out
push
je
cmp
gs
pop
xchg
xor
and
or
lcall
mov
out
aam
fcoms
push
add
shll
inc
in
and
repnz
cmp
xor
or
add
add
pop
sbb
shll
pop
cmp
ss
sub
jno
shrb
out
push
inc
out
lock
cmp
mov
in
lock
inc
sti
xchg
xor
idivl
fsubs
cmc
jp
push
mov
dec
jl
inc
and
cmp
cmp
adc
sbb
test
mov
jae
ret
pop
push
jmp
mov
mov
aaa
into
mov
fwait
pop
jg
xor
mov
adc
repz
jp
or
push
shl
out
pop
lock
mov
pop
aam
dec
lcall
push
ret
sub
or
xchg
mov
adc
in
adc
xor
sub
aad
popf
xor
or
es
cs
jmp
aam
push
jmp
aaa
repnz
out
jo
bound
inc
stos
push
push
je
shr
int3
lods
push
aam
cmpsb
lock
fcomps
cmc
std
or
mov
push
shrl
dec
adc
jb
push
mov
loopne
dec
lahf
sahf
xor
int
dec
std
sbb
push
pop
fwait
cmpsl
nop
xchg
insb
sub
fnsave
lods
imul
lds
push
insb
fwait
pop
mov
and
xlat
add
hlt
lret
xlat
aam
inc
cltd
rclb
xchg
out
and
fs
sub
in
mov
scas
das
cmp
mov
add
xchg
js
xchg
fstpl
pop
mov
mov
leave
xchg
xor
xchg
push
pop
add
push
jbe
lock
xor
int
pushf
and
push
lods
movlps
dec
xchg
sub
xchg
out
jg
lock
mov
push
lods
push
adc
mov
push
or
mov
daa
inc
mov
cmpsl
fisttpll
addl
adc
fistps
push
popf
lahf
inc
jb
addr16
stos
jae
add
inc
lret
mov
sub
out
jmp
dec
sub
aad
stos
xchg
into
cmp
xor
les
inc
adc
jne
stos
push
iret
subl
dec
bound
aad
push
out
jno
mov
aaa
arpl
ret
push
dec
test
lret
lcall
adc
test
das
pop
xor
test
xchg
cmp
mov
and
mov
stc
cmp
and
xchg
insb
inc
ja
dec
int
push
fnstenv
xchg
push
mov
sub
and
sti
inc
jae
stc
nop
push
xor
mov
insb
rcl
mov
bound
mov
jl
pop
and
push
lahf
mov
movsl
cltd
call
arpl
popa
clc
fsubrs
ss
sub
dec
aam
int
fs
xchg
rorl
jecxz
aad
xchg
or
call
fwait
dec
push
jge
fsubrl
mov
jns
or
jb
in
jae
sub
xor
rcll
xchg
inc
sbb
inc
fisubrs
into
and
inc
xor
sbb
xor
push
jmp
push
adc
subl
dec
movsl
js
xchg
jmp
aas
leave
and
cld
dec
xchg
fdivs
xor
mov
jle
inc
fcom
lahf
lcall
xor
addr16
add
cs
adc
xor
xor
push
xchg
test
mov
jge
call
dec
imul
pop
pop
dec
kaddb
push
pop
sub
inc
fsubs
xchg
pop
jmp
adc
mov
pop
fbstp
movsl
in
sahf
hlt
lret
add
push
sub
in
orl
or
imul
mov
xchg
jae
pop
add
sub
pop
xchg
popw
popf
sbb
dec
xor
mov
inc
aam
inc
jb
ljmp
xchg
les
pushf
mov
push
jo
jae
xchg
lret
cmp
sbb
test
div
loop
movsb
das
repnz
jl
jg
add
out
stc
push
mov
jns
cmp
jecxz
sbb
test
xchg
lods
dec
testb
cmp
pop
xchg
add
xor
fwait
push
jg
mov
adc
fwait
daa
lcall
adc
fmulp
lds
loop
ficomps
mov
mov
dec
inc
mov
ss
lds
sbb
stc
adc
idivb
add
add
push
mov
mov
jae
push
dec
push
mov
das
sbb
add
test
enter
pop
rorl
sub
ficomps
adc
pmulhw
mov
sub
mov
xchg
jno
popa
cmpl
dec
dec
lods
dec
mov
ljmp
ja
aad
es
jle
in
jmp
cmpb
pushf
icebp
push
push
cwtl
sub
lock
int3
mov
and
loope
imul
arpl
in
lea
ljmp
sbb
popl
sbb
hlt
jmp
cmp
enter
dec
add
jecxz
push
in
aaa
sbb
popf
sbb
scas
or
das
repz
add
jle
enter
push
fsubp
ljmp
jb
or
jp
mov
mov
stc
mov
ja
cwtl
xchg
xchg
mov
xchg
sarb
addr16
sarl
test
inc
cmpl
outsl
push
inc
outsb
je
jge
or
nop
dec
cmp
out
xor
jo
out
dec
sbb
shlb
fnstcw
mov
gs
pop
sub
dec
mov
mov
insb
sti
inc
mov
fadds
int
insl
mov
gs
gs
cli
xchg
sub
repnz
testb
and
xor
sti
pushf
icebp
mov
lret
imul
jge
cmpsl
subl
jae
in
or
mov
fstpl
fsubrl
inc
jl
ljmp
cld
cmp
sbb
mov
ret
pop
xlat
jnp
in
test
fistl
bound
fistpl
loope
shrl
lock
inc
pop
shrl
jg
jbe
mov
jg
dec
loope
mov
sbbl
push
sub
dec
stos
inc
cmp
add
and
insb
add
mov
fistpl
in
movsl
and
mov
dec
imul
rcl
jae
mov
inc
ss
icebp
inc
pop
loope
fwait
xchg
in
icebp
push
inc
pop
adc
aas
adc
aaa
mov
cmpsb
cmp
xchg
ds
test
loopne
orl
jo
jns
lcall
jmp
test
mov
int3
std
inc
into
out
sbb
xor
jb
mov
adc
sbb
out
push
jnp
dec
sbb
cli
jns
pop
and
lcall
sarb
inc
push
popf
gs
push
xchg
xor
fcomps
xchg
pop
push
pop
imul
xchg
imull
mov
xchg
call
xchg
js
out
jo
mov
sti
push
repz
movsb
gs
ret
dec
cmc
in
jmp
cmp
xchg
jb
pushf
cmp
dec
push
xlat
insb
in
dec
repz
loope
jle
dec
data16
es
cvtps2pi
mov
lea
mov
and
mov
or
das
jbe
sbb
gs
shll
insl
pop
sbb
js
ja
clc
out
lds
xchg
insb
push
aaa
adc
mov
xor
mov
push
lahf
mov
sti
in
xor
xchg
ret
lcall
aas
loopne
hlt
adc
jbe
xor
and
jg
jo
mov
stos
add
idivb
ss
std
jg
call
sbb
inc
lds
mov
arpl
xchg
xchg
int3
inc
fwait
adc
and
push
repz
xchg
mov
inc
testb
jle
inc
pushf
pop
lods
lcall
mov
fsts
xchg
push
addr16
mov
out
dec
adc
adc
test
pusha
fs
or
or
push
jl
hlt
lcall
sub
xor
pop
repz
pop
cmp
nop
mov
jno
adc
imul
into
jb
in
adc
dec
pop
leave
jnp
push
adc
dec
pop
push
jae
mov
jge
lret
push
jecxz
pop
and
testb
sub
jmp
fnstsw
and
cmovnp
jl
lock
add
in
test
stos
xchg
xchg
ret
ret
mov
add
sub
mov
cs
iret
dec
ja
int3
inc
jo
imulb
pop
dec
push
stos
cmp
divb
fucomp
lock
lret
bound
push
sbbb
or
lods
push
push
sti
xor
je
pop
cmpsb
sub
shl
loopne
pop
dec
filds
mov
dec
cld
jnp
jle
popf
test
lahf
xchg
sarl
mov
or
jae
outsl
scas
and
sbb
add
sbb
xchg
sbb
insl
sarb
ret
mov
mov
xorb
dec
inc
call
xchg
or
in
inc
shll
adc
pop
jb
fidivs
xchg
xchg
leave
scas
or
mov
push
jle
test
daa
sub
int3
arpl
and
and
dec
mov
repnz
or
adc
adc
testb
pop
jnp
iret
cmp
fs
dec
sbb
sub
pop
out
or
or
cmp
iret
out
push
adc
stc
leave
and
scas
sub
xor
mov
outsb
popf
or
ljmp
jno
outsl
pop
adc
jg
inc
fnsetpm(287
dec
pop
push
mov
pop
les
loopne
sbb
or
pop
leave
hlt
hlt
fcomip
stos
enter
mov
movsl
int3
insl
pcmpgtw
xchg
sbb
loop
jl
cmp
xor
dec
sbb
adc
sbb
mov
lock
stos
lds
ja
pop
enter
inc
sbb
inc
pop
popf
dec
sbbb
pop
mov
addr16
push
outsl
sbb
mov
cmp
dec
fwait
mov
push
xchg
or
test
out
rcll
addr16
xchg
xchg
cld
xor
hlt
adc
push
daa
jnp
jns
test
lds
mov
dec
fldpi
idivl
adc
scas
clc
rcrl
sbb
mov
bound
jle
adc
lret
in
lret
mov
adc
xor
in
xchg
sbb
mov
aas
adc
jb
xor
inc
sbb
mov
sub
sub
and
inc
test
cld
pop
shl
ret
sbb
or
adc
push
repz
js
pushf
scas
scas
xchg
decb
das
mov
aad
lret
mov
jne
mov
mov
pop
notb
in
jg
js
jmp
xchg
sbbb
shlb
out
xor
add
orb
sbb
mov
mov
xor
cmp
mov
mov
mov
or
jp
cmp
mov
out
addr16
inc
add
addr16
inc
dec
jecxz
pop
dec
adc
loopne
dec
sbb
push
pop
add
outsl
test
mov
adc
loope
mov
call
pusha
bound
mov
adcb
adc
insb
jae
mov
pslld
daa
cmp
jle
pop
push
mov
jo
sub
push
push
dec
data16
jns
dec
push
stos
std
mov
test
and
nop
push
rolb
mov
in
fmull
push
jbe
pop
pushf
idivl
cmp
inc
testl
fldt
sub
mov
xchg
subb
or
mov
orb
lock
gs
mov
stos
ret
pop
adc
dec
jb
js
aad
gs
cmp
sub
aas
xchg
mov
lahf
jecxz
adc
dec
sbb
pop
setbe
out
mov
push
xchg
push
pop
mov
mov
add
pop
subb
dec
add
popf
mov
ret
cs
stos
xchg
repz
pop
stc
enter
mov
add
jns
lods
add
imul
adc
sub
push
out
rolb
or
imul
mov
inc
clc
dec
repnz
rclb
pop
or
push
outsb
add
jo
xor
mov
leave
cmpb
xlat
and
sub
sub
icebp
sbb
dec
or
mov
mov
add
xchg
cmp
dec
pushf
arpl
mov
lock
xchg
mov
push
popf
xor
lock
fidivl
das
pusha
xchg
add
pop
lahf
mov
jnp
dec
mov
icebp
adc
jnp
or
arpl
in
add
lcall
or
cmp
jns
mov
pop
pusha
ss
bound
int
adc
es
movsb
mov
mov
pop
scas
popf
cmpsl
mov
sbb
push
aas
in
xor
cmp
aaa
test
repz
scas
loop
mov
ret
jns
push
and
mov
int3
ljmp
dec
xchg
or
jo
scas
leave
mov
shl
ljmp
scas
push
out
test
ss
xor
fbld
lcall
ss
fisubs
adc
rcll
add
sbb
gs
mov
xor
adc
sbb
jo
test
or
adc
dec
das
cwtl
pop
push
out
jne
hlt
pusha
mull
popf
jmp
hlt
pop
dec
lods
rcrb
push
xor
push
cld
test
sub
sarl
xor
or
lret
adc
jns
mov
push
sbb
jle
push
add
or
bound
sbb
imul
loopne
sub
add
fwait
jg
in
clc
mov
inc
push
sbb
or
fwait
icebp
cmpb
cmp
and
lret
dec
insl
cmp
or
dec
xchg
shr
gs
or
push
daa
dec
xchg
or
ret
pop
xor
icebp
shrb
imul
nop
bswap
dec
mov
xor
iret
mov
repnz
or
mov
push
cmp
add
or
movsl
jb
adc
inc
out
xchg
movsl
or
xor
hlt
sub
push
aas
rcl
sbb
popf
popa
lods
inc
dec
negl
repz
loop
rol
sub
aad
mov
sub
adc
and
jae
out
int3
pop
xchg
out
cli
call
in
cmp
mov
or
push
test
jne
test
jb
lret
mov
fcomps
or
pop
jp
lahf
stc
movsb
jl
das
out
jno
sbbb
insl
leave
loope
dec
in
imul
int3
inc
lods
dec
add
mov
ret
mov
add
daa
push
testl
fwait
jge
pop
hlt
pop
les
add
call
adc
fldt
aaa
adc
js
sti
sbb
movsb
add
xchg
jne
jl
mov
ss
pop
les
dec
mov
or
dec
ds
sbb
outsb
sbb
mov
sahf
push
xchg
out
aad
sub
cmp
test
in
in
inc
xlat
iret
inc
and
mov
sub
cmp
dec
lods
jo
scas
leave
outsl
jmp
lods
mov
jg
js
jns
test
push
test
lret
insl
int
push
loopne
mov
xchg
pop
andl
dec
xor
dec
xchg
lods
mov
sahf
sub
leave
push
jno
cmp
ret
jns
push
dec
mov
rolb
cmp
mov
fldenv
dec
pop
inc
jecxz
and
ds
lahf
in
xchg
adc
sbb
or
mov
inc
inc
imul
ljmp
push
aaa
and
repnz
inc
clc
outsl
jb
push
mov
jge
add
lret
sahf
pcmpgtd
jmp
out
cltd
outsl
sbb
mov
packsswb
mov
mov
inc
mov
mov
xchg
xchg
sar
jnp
pop
fmuls
sti
fidivl
fst
cwtl
jb
push
fisubs
div
mov
daa
sbb
sahf
stc
ret
scas
lods
mov
xor
imul
std
ja
xchg
push
fnstenvs
ds
icebp
out
push
out
das
lret
insb
jle
or
pop
dec
jmp
mov
ss
in
addr16
arpl
dec
mov
outsb
scas
sbb
ret
rol
sbb
jne
test
push
push
data16
nop
cwtl
fnsave
addb
ret
mov
inc
add
popa
mov
add
or
sbb
stos
push
fnstcw
cmpb
mov
mov
out
ror
cltd
insb
xlat
cmp
or
daa
or
jnp
sub
sub
xchg
fwait
enter
out
dec
dec
xchg
fwait
dec
mov
sti
dec
dec
inc
cmp
test
in
rclb
rcrb
bextr
mov
push
inc
movsb
or
imul
and
pop
sub
cmp
mov
xor
addr16
or
cmc
ret
pop
out
movsb
les
pop
stos
jb
sbb
and
int
mov
clc
jbe
lret
bound
pop
adc
add
jl
jge
push
scas
xor
and
je
adc
xchg
hlt
pop
imul
or
push
loope
inc
or
lret
mov
inc
icebp
into
cli
aad
adc
push
add
dec
dec
test
or
decb
add
jae
inc
sub
xchg
jno
js
pop
xchg
add
and
dec
adc
out
int
dec
xlat
mov
mov
sbb
scas
xchg
enter
std
push
mov
sub
call
and
pusha
and
popf
or
hlt
push
mov
sbb
adc
pop
jecxz
pop
and
mov
inc
dec
and
loope
sub
jno
in
std
xchg
sub
sbb
xchg
mov
dec
push
jmp
sti
loope
out
jb
ret
shrl
and
js
inc
mov
aas
test
jp
shl
loop
mov
sbb
xor
pop
mov
je
mov
xchg
fsts
push
adc
stos
inc
scas
push
inc
cwtl
into
enter
jns
dec
lret
mov
cltd
notl
mov
nop
jnp
add
mov
cmp
xlat
and
sbb
xchg
sub
ds
aad
mov
xchg
ret
outsb
mov
sti
mov
out
out
fdivrp
dec
clc
pop
insb
sbb
xchg
add
lret
push
mov
ret
sahf
push
jb
cmc
mov
jge
mov
xor
jb
in
jne
fisubrl
jl
fstpt
jg
scas
push
in
pop
ret
xor
dec
shrb
cmp
jnp
cs
outsb
pusha
into
add
iret
and
mov
call
push
mov
pop
jmp
xchg
push
sub
out
xchg
dec
pop
jae
push
xchg
mov
out
lods
add
int3
jge
in
mov
sub
outsb
mov
mov
popa
jge
iret
popa
cmp
push
incl
pushf
std
jecxz
inc
mov
in
or
iret
and
xchg
mov
cld
mov
mov
mov
js
sbbb
imul
lock
inc
out
sti
js
orl
stos
or
dec
push
sbb
push
lret
sub
cmp
call
pop
daa
cmp
stos
fnstenv
pop
push
movsl
mov
cwtl
xor
push
loope
add
das
jne
iret
neg
icebp
mov
mov
cwtl
je
data16
aas
lret
mov
cmp
jmp
xchg
and
ret
mov
xor
sbb
stc
jg
in
daa
xchg
adc
sarb
rolb
inc
fbstp
aaa
shl
dec
adc
icebp
es
in
lcall
push
sub
lcall
pop
imul
jmp
mov
das
mov
mov
mov
push
ss
push
push
ret
aas
jg
mov
enter
push
test
mov
pop
push
fwait
xor
and
fdivrs
ja
mov
sbb
xchg
add
enter
adc
and
and
xchg
lods
jnp
jp
xchg
pop
sub
jp
cltd
popf
fsubs
or
mov
divl
shrl
sbb
mov
push
jnp
mov
popf
pop
hlt
into
std
aam
fadd
sub
pop
xor
fs
mov
out
pushf
push
xchg
aad
enter
addr16
push
mov
out
xor
test
rorl
and
popf
daa
jae
lahf
aaa
sub
xchg
xchg
popa
push
push
sub
push
out
jo
leave
test
sbb
dec
lcall
jnp
dec
mov
sti
insb
add
sbb
dec
aaa
scas
xchg
push
jmp
jmp
lods
cs
mov
add
jmp
out
xlat
sub
adc
jb
ljmp
xlat
inc
arpl
ds
inc
dec
cli
scas
push
aaa
jge
push
outsl
inc
std
push
xchg
sti
push
or
and
dec
cld
std
or
pop
and
icebp
call
push
inc
adc
hlt
ljmp
or
push
rcll
std
stc
daa
jo
xor
mov
or
jg
mov
loope
popa
movl
push
push
pop
lock
stos
lock
lahf
push
in
adc
gs
push
jp
push
leave
add
adc
cmp
xchg
xor
sbb
or
ss
sbb
pop
aaa
mov
addr16
int3
push
in
add
xchg
fistps
pop
mov
into
push
mov
int3
xor
xchg
ds
faddp
pop
lock
push
shr
in
xor
sub
cli
shlb
mov
shrl
cmp
and
shlb
push
pop
dec
xchg
mov
loop
outsl
repz
out
movsb
out
mov
shll
sub
or
aas
mov
pop
repz
mov
in
mov
cmpb
fwait
sbb
mov
cmp
sbb
inc
rolb
jmp
dec
sbb
into
mov
cmpsl
in
add
ljmp
or
jae
fidivrs
xor
leave
gs
adc
stos
aam
outsb
das
mov
or
fdivrl
push
adcb
outsl
test
jns
adc
mov
mov
push
inc
cmp
xchg
cmp
hlt
test
or
jp
mul
shrb
scas
and
out
call
movsb
mov
ret
dec
pop
sarl
push
xchg
cmpsb
mov
add
dec
ficomps
sub
imul
jne
hlt
cmp
cmp
fadd
loopne
lock
push
les
insl
xchg
es
jg
xor
jne
or
lcall
int3
jge
popa
int
outsl
psadbw
fstl
sub
lcall
xchg
jnp
jmp
add
incl
sbbl
adc
mov
adcl
or
clc
lahf
out
push
add
js
pop
xor
inc
lds
dec
jle
stc
add
or
shrb
mov
dec
pop
mov
mov
xchg
or
mov
leave
adc
mov
cmp
out
lock
or
push
mov
inc
cmpsb
add
add
sub
and
dec
cmp
push
and
je
pop
xor
lret
bound
lds
cmpsb
mov
fsubr
sbb
push
sbb
cwtl
es
insb
insb
fucomp
lds
mov
ret
jp
mov
fstl
mov
add
and
cmpsl
pop
test
inc
mov
push
mov
leave
outsl
mov
inc
sti
loop
std
mov
xor
jo
push
es
pop
arpl
lret
dec
pop
bswap
mov
sub
gs
inc
shlb
sahf
adc
in
sbb
jl
and
jge
dec
int3
jg
jmp
ljmp
jge
es
inc
in
and
push
mov
ljmp
mulb
pushf
movsb
out
inc
dec
leave
jo
cmp
mov
and
je
mov
push
inc
xor
je
out
popf
xor
jecxz
movb
xor
call
adc
out
fcom
arpl
cli
jbe
inc
add
pop
mov
pop
pop
and
out
mov
loope
pop
fwait
pop
mov
sbb
imul
jns
in
imul
and
jg
add
or
mov
and
inc
pop
adc
inc
pop
or
fisubrl
lods
xor
inc
mov
jns
in
stos
lret
xor
sub
lock
pop
aas
jnp
idivb
and
pop
cli
adc
sahf
cmp
xchg
mov
out
inc
fdivrl
fbld
out
add
cmp
push
insb
sub
insl
sbb
notl
cmpsl
daa
stos
test
stos
inc
xor
add
mov
popa
into
imul
inc
aaa
pusha
mov
jl
daa
jbe
popf
ret
int
rcll
cmc
cvtps2pi
out
test
inc
push
or
or
shlb
and
xchg
adc
ret
or
and
js
into
ret
sbb
rcl
or
out
rcll
xchg
jne
jecxz
and
je
cli
jno
dec
push
test
xor
xchg
iret
push
ror
nop
dec
sub
push
imul
rorl
movsb
sbb
cmpsl
divb
jge
int
xlat
sbb
or
xor
bound
push
push
add
scas
popf
xor
jnp
xchg
daa
or
fwait
or
push
xchg
cld
cli
test
hlt
jmp
adc
rorl
lcall
xor
ja
pop
fmuls
mov
rol
stos
xor
or
push
movsl
jo
pop
xchg
push
shll
fdivl
popa
jo
bound
inc
dec
lret
lods
lock
jle
push
pusha
lock
mov
test
leave
pusha
test
loopne
pop
sti
push
add
addr16
or
stc
or
or
data16
inc
out
ficompl
or
adc
sub
pop
jnp
fwait
mov
pushf
ljmp
mov
pop
int
jbe
mov
inc
or
pop
fwait
xchg
jns
imul
cmp
dec
push
imul
daa
jle
sbb
aad
icebp
rcrl
mov
pop
imul
insl
lret
cmp
outsb
rcll
and
addr16
inc
enter
push
js
or
inc
jle
aaa
mov
or
divb
popf
and
aad
push
cld
sub
sub
mov
orl
pop
pushf
jne
lods
dec
dec
push
lcall
aaa
pop
dec
and
xchg
mov
push
divl
jge
jnp
jnp
pushf
dec
sbb
push
sub
lret
mov
sbb
adc
hlt
xor
les
lods
fnstcw
aam
popf
lahf
adc
jb
pop
jnp
mov
lahf
icebp
cmpsb
mov
xchg
fidivl
add
gs
pushf
lea
and
mov
xchg
pop
aad
cmp
loop
mov
inc
test
cmpsb
add
rcr
fisubrl
xchg
pop
into
push
jp
lds
or
cmp
cmp
pop
and
addb
xlat
in
aas
push
in
sti
vpsubb
stos
in
push
sub
hlt
inc
pop
pop
cli
inc
je
dec
lds
jae
jbe
mov
inc
stos
mov
xor
add
xchg
sbb
int
sub
test
and
daa
lcall
inc
test
test
test
ljmp
add
add
mov
sub
enter
mov
jecxz
rolb
add
mov
jbe
idivl
arpl
pop
outsb
xchg
mov
cmpsb
add
add
xor
sub
mov
adc
aas
repz
add
data16
lea
add
mov
aas
add
xor
push
adc
out
lahf
add
or
mov
adc
xor
sbb
ds
inc
and
lock
push
cmp
adc
stos
add
push
ficoms
jbe
jno
cmp
into
mov
dec
xor
scas
lods
and
mov
lret
sti
sub
jne
cltd
dec
adc
movsb
hlt
sbb
popa
mov
pop
bound
scas
xchg
xchg
jl
das
inc
movl
inc
push
into
aam
in
out
jle
stos
js
lcall
ja
push
lea
xor
sbb
inc
and
ljmp
out
dec
mulb
in
jge
cld
movb
pop
mov
mov
mov
mov
fcmove
popf
loop
test
mov
out
jns
ficompl
mov
shrl
pop
dec
gs
mov
test
ficoml
icebp
in
add
jge
std
popa
orb
push
and
push
aas
rorl
adc
les
std
sub
push
dec
hlt
lods
jbe
popa
lods
cli
xchg
jns
lds
cmpsb
mov
cwtl
push
scas
cmp
or
adc
mov
insb
pop
push
stos
pop
mov
and
jne
inc
fs
sti
daa
cld
push
adc
or
inc
subl
lods
ds
in
jmp
sub
arpl
and
xchg
mov
jo
push
dec
into
imull
gs
outsl
xchg
dec
in
pop
pop
aas
inc
pushf
icebp
fnstenv
rcrl
pop
and
inc
dec
mov
cmp
call
or
mov
push
test
add
addb
xchg
sub
pop
es
inc
fdivp
sbb
stos
hlt
jmp
xchg
sti
out
movsl
lahf
aam
xor
mov
into
dec
sar
sbb
or
mov
int3
and
add
shl
pop
fs
inc
lahf
cmp
push
cmpsl
subl
call
xor
call
test
lods
fucomi
dec
adc
cmp
nop
dec
push
jl
mov
cli
mov
stos
jno
call
movsl
adc
pop
into
out
push
pop
data16
ja
xchg
sub
add
ss
loop
xor
add
mov
mov
xlat
mov
dec
mov
cwtl
orl
frstor
ret
mov
roll
mov
test
jno
add
loop
xor
fisttpll
mov
iret
mov
mov
jns
cmp
dec
xchg
jmp
lahf
inc
test
or
fidivl
or
mov
jge
jae
icebp
dec
mov
mov
shrw
xchg
dec
insl
jl
dec
fcomps
test
clc
adc
sub
xchg
out
xchg
mov
or
andl
popf
sti
xor
jge
sbb
ds
push
in
add
outsb
xchg
mov
es
mov
add
data16
aaa
push
jb
out
rcl
fwait
mov
fsts
das
repnz
add
sarl
xor
lret
xlat
or
out
and
inc
adc
sar
sbb
les
pop
icebp
das
bound
sbb
movsl
mov
in
sbb
push
adc
movsl
mov
movsb
or
je
add
sub
xchg
xchg
push
faddl
jmp
sarl
iret
imul
dec
int
imul
cmpsl
push
sub
mov
xor
into
mov
lret
aas
out
mov
cmp
xchg
add
mov
imul
or
push
xchg
or
push
push
pop
cld
mov
rcl
scas
adc
dec
sub
int
add
jns
enter
popf
enter
xchg
inc
dec
xchg
cmp
mov
aaa
cwtl
insb
out
and
jnp
daa
call
xchg
mov
fsubr
xchg
jb
fpatan
mov
sbb
daa
mov
jno
jbe
xchg
sbb
sub
insb
cli
add
xor
mov
cli
int
rep
cmpsl
arpl
xchg
jo
xor
cs
cmpsl
pop
lret
pop
fsubr
lea
dec
mov
jae
jle
or
call
cmp
daa
mov
nop
sub
xchg
sbb
sub
outsb
sub
inc
mov
ret
inc
dec
pop
add
push
negl
xor
dec
sar
pushf
dec
out
jle
arpl
fidivrl
dec
and
scas
inc
stc
fnstsw
sub
mov
es
imul
pop
and
pusha
imul
jmp
and
inc
es
cmpsb
mov
dec
jle
ret
sbb
jmp
or
ljmp
ret
mov
loop
pop
xchg
scas
cmp
jne
lret
fmul
push
ret
sub
pop
in
je
pop
in
lea
xlat
or
jp
adc
roll
mov
or
adcb
fs
out
lret
push
hlt
sub
ja
test
js
mov
test
push
mov
in
stos
or
pop
mov
cmpsb
rcll
and
int3
testb
and
and
xchg
sub
pop
push
inc
sub
xchg
mov
ja
cmpsl
mov
es
in
and
jle
test
leave
ja
push
mov
outsb
sbbb
cltd
or
add
mov
stos
cwtl
pop
shll
aaa
adc
ss
scas
gs
lahf
jmp
jae
lock
xchg
inc
enter
add
lahf
push
sbb
and
sub
cmc
mov
push
xor
in
fsts
push
inc
cli
push
pop
mov
test
ret
jmp
in
fnstenv
adc
cmc
cmpsl
ds
xor
or
call
jnp
loopne
js
test
pop
ljmp
dec
dec
test
subl
jl
aas
push
sbb
ficompl
outsl
cmp
jecxz
test
insl
leave
test
xor
pusha
andb
push
rcll
xchg
faddl
pavgw
pop
fistl
cld
inc
adc
jns
jl
das
adc
jns
nop
mov
je
aam
mov
jno
mov
adc
xchg
xor
add
movsb
dec
movsb
and
adc
jae
xchg
mov
jno
js
pusha
mov
add
stc
sbb
sub
xlat
dec
les
push
out
jp
sti
arpl
subb
in
xchg
scas
xor
pmulhw
gs
push
mov
and
jb
and
in
movsl
cmpb
mov
xchg
push
inc
clc
xor
adc
sub
jbe
sub
ret
fimuls
dec
call
loopne
shl
jmp
fldcw
je
cli
rorl
mov
notl
jecxz
xchg
pop
and
xor
imul
lcall
loope
inc
ds
dec
repnz
roll
add
popf
cmc
xchg
and
ret
jp
dec
dec
out
sarb
loopne
ljmp
out
mov
popa
cmpl
cmp
dec
mov
sub
sub
or
scas
cmp
mov
inc
sbb
dec
push
mov
mov
mov
fdivrs
bound
in
adc
rcl
xor
pop
movsl
test
jg
lods
add
mov
repz
lods
clc
cmpsl
xchg
insl
mov
sahf
and
dec
mov
pop
jne
pop
fldcw
faddp
ja
loope
jg
out
sarb
movsl
adc
mov
jmp
test
jg
add
pop
push
push
or
mov
add
sub
mov
mov
jb
or
jp
cli
aas
ds
add
jno,pn
outsl
xor
outsl
add
lcall
jno
imul
hlt
mov
arpl
mov
repz
push
push
push
jno
xchg
or
mov
xchg
dec
into
mov
jecxz
outsl
setns
outsb
outsb
dec
mov
and
lcall
dec
in
jmp
push
or
lea
sub
shll
pusha
xlat
mov
mov
sub
out
inc
push
jecxz
or
lret
in
stos
add
jge
mov
fcom
insl
ficomps
enter
popa
or
in
sarb
adc
leave
inc
adc
lods
xor
pop
fcompl
iret
pop
inc
fidivrs
mov
into
fadd
fdiv
sbb
mov
jg
test
sbb
xor
mov
jg
cmp
jno
jo
dec
pop
adc
mov
add
out
int
nop
aas
ret
aaa
sub
in
and
leave
ret
fsubs
cmp
inc
test
jbe
sbbb
sarb
popf
lahf
pop
mov
add
push
leave
inc
mov
dec
xor
or
xor
fs
pop
fnstenv
add
stos
insl
jae
cmc
add
mov
sarb
js
clc
inc
pop
mov
mov
inc
lret
lahf
or
inc
arpl
in
pushf
xorb
aaa
insb
movl
daa
test
mov
stos
sbb
aad
dec
dec
xor
call
aas
fiadds
fwait
test
call
and
out
ss
sbb
xchg
jne
mov
push
jmp
ja
add
xchg
push
in
popa
cld
cmc
mov
fldl
mov
mov
subb
ret
jle
leave
inc
inc
ret
dec
mov
dec
mov
icebp
dec
pop
push
ljmp
lods
and
mov
push
jmp
inc
and
mov
cmpsl
or
pop
jno
and
movsb
sarl
loop
dec
sbb
sahf
add
leave
jp
es
dec
shrb
int
inc
hlt
sbb
sub
shll
push
lret
stos
push
fucomp
out
push
in
dec
ret
pop
ss
popf
into
enter
in
scas
pop
mov
lcall
add
xchg
pop
mov
out
push
mov
jg
mov
mov
sbb
imul
bound
subb
dec
inc
in
cmc
mov
mov
rorl
mov
cmp
ret
mov
mov
and
sub
xor
push
rcl
pop
or
shrl
push
pop
in
enter
fdivrs
aad
loope
pop
adc
pusha
into
test
sub
cmp
sahf
clc
cltd
push
inc
in
or
shll
pushf
jno
insl
sahf
cmc
sub
fcompl
xor
leave
jb
ljmp
ja
jl
sarl
sub
mov
pusha
inc
scas
lock
cmpsl
jb
push
and
jp
jno
mov
cltd
aas
mov
xchg
int3
pop
in
popf
fildll
push
int
es
jg
push
inc
js
ja
popf
lods
add
jle
push
jns
sub
jl
clc
idivl
scas
mov
aad
iret
pop
add
stos
scas
loope
notl
shrb
push
and
leave
lret
pop
mov
scas
fistl
mov
outsb
insb
enter
push
pop
dec
sbb
pop
mov
gs
out
add
mov
and
push
lret
and
push
fcoml
push
nop
cmp
jne
out
mov
dec
aaa
es
xor
push
popf
out
mov
movsl
repnz
mov
scas
fbstp
dec
jb
or
xor
push
push
xchg
xlat
ret
sub
jecxz
das
cmp
in
mov
push
mov
mov
mov
push
mov
stos
fimull
xchg
imul
xor
or
pop
std
adc
js
pop
pop
sbb
inc
insl
mov
fs
or
or
pop
sbb
adc
fnstcw
push
movsl
jmp
dec
cmpsl
shll
ljmp
or
jg
loopne
std
pushf
sahf
push
fldt
sti
mov
mov
jne
sahf
dec
sarb
sub
add
mov
pop
fiadds
xor
cmp
mov
out
pushf
popa
mov
push
lods
lods
inc
jne
sub
cmp
in
mov
sbbl
push
cltd
insl
cmp
loope
jge
int3
jg
mov
inc
test
ja
wrmsr
jecxz
bound
or
sub
jp
in
stos
cld
push
adc
inc
push
jne
xchg
popf
xchg
lret
cld
les
and
jmp
mov
xor
jp
add
xor
jb
push
adc
mov
jb
push
push
outsl
gs
mov
addl
jno
addb
inc
hlt
in
and
sti
xchg
pop
test
mov
push
imul
aas
xchg
in
pop
fs
xchg
or
das
mov
mov
xor
xchg
daa
xchg
fsubrs
testb
cmp
in
pop
test
out
repnz
xor
xchg
jle
xchg
mov
data16
loop
fcmovne
adc
hlt
mov
arpl
fs
dec
clc
shl
leave
adc
out
xchg
xchg
push
pop
cltd
sbb
arpl
jecxz
xchg
out
outsl
pop
or
out
and
push
and
push
int3
add
aam
stos
jno
popa
push
mov
or
ret
sbb
inc
outsb
insb
mull
cmpb
enter
or
inc
and
and
adcb
ret
pop
or
pop
inc
jne
mov
mov
dec
cmp
out
into
enter
or
lods
inc
into
repnz
push
fsub
push
leave
ret
xchg
mov
leave
push
mov
les
mov
mov
mov
sub
mov
xor
andl
cli
insb
adcb
mov
mov
cmpl
pop
cmpl
pop
cmpsl
out
cmp
jnp
dec
xchg
push
or
push
jb
filds
jge
dec
pop
mov
movsl
mov
sbb
dec
mov
inc
cs
push
jae
push
in
mov
jecxz
pushf
scas
pop
and
fistpl
sti
pop
jle
es
sbb
inc
sti
xor
aam
fsubrl
push
fidivs
and
mov
iret
mov
cld
scas
fstp
mov
push
cmpsb
rcll
adc
loop
rorb
sbbb
jle
pop
cmp
and
sub
pop
add
jb
push
repz
mov
stos
lahf
adc
mov
mov
dec
repnz
popf
jno
into
stc
pop
lods
ja
fwait
xchg
cwtl
xor
js
icebp
leave
mov
icebp
in
pop
dec
dec
mov
insb
jge
pop
enter
add
xchg
lods
in
rolb
cld
mov
add
enter
jmp
loopne
out
add
dec
add
push
xor
mov
fstpt
lahf
cld
jno
pop
pop
sbb
pop
ds
mov
rclb
push
loop
ds
push
jl
cmp
dec
or
cmp
sbb
das
mov
push
or
adcl
ret
xlat
xchg
cmpsb
lret
mov
invd
hlt
or
cmpl
mov
xchg
mov
cmp
into
push
movsb
dec
out
test
pop
jne
outsb
sbb
xchg
push
adc
lock
bound
pop
ja
and
out
cmpl
dec
repz
outsl
stos
insl
pushf
xor
fisubs
cmp
outsl
add
adc
xor
sbb
je
setl
jg
adc
andl
je
mov
mov
add
dec
in
shlb
pop
enter
inc
jmp
ss
fmul
pop
cli
inc
mov
nop
adc
lahf
lds
sub
arpl
mov
iret
movsb
rcll
imul
inc
jne
cmp
pop
jb
sahf
inc
mov
es
inc
xor
push
addr16
lret
inc
mov
cwtl
test
hlt
and
xchg
je
lret
test
xchg
pop
xor
cmp
mov
jmp
fnstsw
negl
xor
dec
notb
idivb
mov
xchg
or
gs
push
test
or
popf
nop
jmp
cmp
jns
inc
out
pop
in
insl
lcall
or
mov
inc
fistpl
inc
lret
mov
mov
mov
shrb
out
inc
pop
or
js
fs
push
xchg
lods
shlb
xchg
cmp
nop
xor
mov
outsl
rcrl
leave
cmp
adc
leave
or
xchg
sub
jno
jle
dec
jbe
inc
out
pop
jge
dec
jns
cmp
dec
ja
push
or
adc
rcr
push
fsubr
dec
and
mov
mov
or
lcall
nop
cmc
repz
sbb
dec
daa
mov
and
jae
adc
aaa
js
popf
lret
sbb
insl
rcrb
hlt
movsl
test
loopne
sbb
lods
and
mov
mov
cmp
fs
leave
pop
test
sub
cmp
add
push
and
pop
or
pop
loop
data16
ljmp
fwait
mov
xor
bound
lahf
mov
ljmp
movsl
sbbb
or
dec
repz
mov
aaa
rcrb
mov
sarl
xchg
lods
repnz
add
add
idivb
mov
cmpsb
cmpsl
fsts
cmc
mov
lahf
daa
sbb
mov
insb
sti
sbb
mov
pop
sub
cltd
cmp
insb
cs
pusha
xchg
ljmp
jne
lock
neg
mov
mov
rolb
das
divl
popa
es
cs
cmpl
test
jnp
movsb
sub
jo
dec
or
outsl
shrl
scas
test
int
loopne
push
lods
adcl
dec
push
add
xchg
pop
pop
pop
std
push
add
mov
je
inc
mov
lods
hlt
mov
push
adc
sbb
xlat
pop
or
cld
sbb
sub
and
iret
arpl
pop
pushf
in
das
push
push
adc
loop
dec
adc
std
stos
sbb
das
mov
leave
loope
je
js
and
mov
mov
lahf
pop
sub
test
jl
mov
mov
cld
ret
jmp
test
cmpl
sub
fucomp
and
mov
pop
push
aas
into
dec
lods
loope
rcrb
dec
in
repz
fisubs
in
frstor
push
aaa
lret
xor
arpl
lods
xchg
mov
pop
mov
ret
jnp
data16
mov
aad
leave
push
cmc
jo
std
scas
or
scas
out
ror
int
mov
iret
aas
mov
cmpb
insb
aas
jnp
dec
and
out
pop
xor
and
lcall
sbb
lret
in
mov
mov
add
push
pusha
inc
or
pop
xor
and
push
mov
jge
jmp
mov
cld
push
outsl
loop
and
and
leave
jge
cld
mov
pop
enter
dec
ljmp
jo
cmp
jns
scas
pop
sti
rcrl
test
call
xchg
push
xchg
push
mov
and
sbb
jae
dec
call
sbb
test
push
mov
push
mov
cmpsb
push
inc
repz
jns
sub
jns
jl
add
xchg
mov
sbb
adc
orl
mov
data16
imul
fsubl
xchg
ss
lcall
mov
loopne
jne
insl
in
rorl
aam
xor
mov
sti
mov
shlb
xchg
pop
in
fnstsw
pushf
fs
mov
into
jnp
enter
xchg
pop
test
adc
jge
cmpsl
jecxz
shl
mov
pop
or
dec
fdivs
pop
and
hlt
lret
testb
jle
pop
std
lahf
push
xor
leave
test
push
in
mov
loopne
dec
cwtl
ret
sub
pop
lods
mov
clc
mov
add
out
dec
mov
add
push
idivb
or
test
lea
xor
cld
pop
shrb
outsb
mov
or
push
jmp
ljmp
or
arpl
lcall
test
push
cltd
add
add
insl
inc
enter
fstpt
leave
icebp
mov
sub
push
mov
pop
xor
sub
lea
aam
push
or
adc
adc
hlt
push
xchg
das
outsb
adc
push
out
mov
pop
mov
pop
loopne
popf
sar
xchg
add
es
fists
adc
clc
or
imul
cmp
jmp
cmc
push
xchg
xor
pop
cmp
sub
daa
test
xor
push
lret
std
jge
sub
sub
data16
lahf
xor
push
neg
push
mov
sbb
les
mov
mov
sahf
mov
mov
shlb
imul
sub
xlat
xchg
ret
rorb
jl
cmp
push
dec
cmpsl
fcomip
aad
stos
adc
dec
pop
xchg
andb
sub
xor
pushf
cmp
aad
cs
dec
xlat
lock
xor
loope
sahf
fiadds
push
dec
fists
mov
add
icebp
mov
movsb
cmp
and
imul
jge
int3
popa
fwait
je
movsb
mov
loope
jl
mov
adc
or
mov
sti
push
aad
aaa
add
and
mov
je
xor
xchg
jecxz
cmp
mov
inc
and
scas
mov
and
test
jno
adc
stc
js
mov
pop
jne
rcll
repnz
xor
jno
pop
jg
jge
or
push
ret
cmpsb
xor
xchg
cmp
sbb
bound
mov
dec
xlat
mov
xchg
enter
inc
daa
sbb
pop
addr16
mov
cmpl
fbld
cmpsb
push
arpl
and
jne
cmp
cwtl
lcall
pop
repnz
pop
add
sub
neg
rclb
xor
shll
loop
sti
xchg
inc
lods
xchg
adc
je
xor
adc
aam
fidivl
or
dec
sbb
imul
cmpsl
outsb
jl
pop
sub
nop
outsb
dec
push
mov
push
pop
fldl
clc
adc
out
jne
mov
mov
push
out
push
push
aas
pop
add
inc
or
popa
out
xor
push
or
xor
pusha
sbb
icebp
sbb
mov
lahf
xor
inc
pop
xchg
fbstp
cltd
popf
cmp
dec
cltd
dec
fcmove
jg
shll
sbbb
pop
aad
mov
add
sbb
xor
outsl
jb
push
imul
inc
sub
das
cs
inc
loop
fcomps
icebp
push
lea
das
cmc
mov
faddl
daa
mov
es
pushf
pop
adc
aas
rorl
and
sbb
ret
push
test
stos
ss
icebp
or
iret
mulb
push
mov
push
fnsave
jnp
pop
xor
xchg
cltd
cmp
pop
lods
adc
rorb
push
push
pop
cmp
lds
es
and
cld
or
lods
daa
mov
inc
jle
pop
mov
subb
sbb
inc
pusha
sub
and
push
sbb
or
std
lret
hlt
imul
rcrl
mov
adc
inc
cmc
cmp
call
cmp
jmp
push
sub
xchg
xor
mov
test
xchg
pop
in
cmp
in
and
xchg
lods
mov
rcrb
in
fwait
call
mov
orl
sbb
mov
imul
mov
lds
mov
pop
les
cmpsb
loope
arpl
adc
cs
mov
shll
push
mov
orb
pop
mov
test
movsb
jp
cmpsb
scas
adc
or
jp
xchg
mov
pushf
sbb
cmp
xlat
pushf
das
outsb
into
test
ret
dec
mov
cmp
mov
sub
sub
push
sub
fnsave
inc
loopne
mov
mov
and
scas
dec
in
test
push
arpl
xchg
inc
mov
mov
push
fdivrl
imul
in
jg
movsb
jmp
lds
mov
push
add
jl
enter
inc
and
xchg
xlat
xor
cwtl
pop
sub
lcall
fxch
mull
movsb
adc
mov
push
lret
sub
outsb
push
mov
ret
push
call
lods
fwait
inc
sti
mov
and
mov
push
push
mov
mov
incb
cmp
add
mov
adc
inc
add
xlat
mov
xchg
xchg
inc
sub
xchg
loope
pop
lret
xor
push
ljmp
test
loopne
adc
outsb
xchg
gs
sub
fs
pop
xor
push
ljmp
jno
push
mov
sbb
aas
rcrb
mov
in
jbe
div
ret
xlat
lret
jecxz
adc
push
outsb
mov
jecxz
or
sbb
xor
idivb
fucomip
pop
sub
inc
fbstp
jno
sub
test
fisttpll
dec
add
adc
dec
stos
mov
pop
icebp
adc
imul
pop
mov
adc
mov
xchg
das
call
push
mov
dec
rcl
xor
jl
jg
xorb
mov
sbb
jmp
cmp
or
lds
mov
icebp
sbb
negl
jns
adc
pop
adc
mov
shlb
ficoml
inc
mov
daa
sbb
pop
mov
mov
movsl
sbb
rcrl
adc
or
add
xor
dec
inc
into
enter
xchg
mov
xchg
xor
adc
and
push
addr16
pop
dec
pop
insb
add
aad
rorb
sbbb
inc
les
arpl
int
xlat
scas
clc
jns
or
xlat
mov
adc
pop
call
fmuls
adc
xor
rclb
arpl
loope
lock
pop
lods
call
rcrl
pop
xchg
xor
mov
mov
repz
sbb
xor
lods
divb
push
sbb
xchg
pusha
lods
imul
and
jo
ds
mov
inc
dec
aad
xor
add
hlt
divl
mov
xorb
int3
mov
pop
stc
or
fistpl
xchg
adc
sub
out
js
sub
mov
inc
fcompl
pop
js
pop
jecxz
dec
add
jp
mov
rclb
push
mov
das
add
sbb
push
cmp
xchg
mov
add
cwtl
stos
sbb
je
lahf
mov
xor
dec
sahf
cld
fcompl
inc
imul
mov
dec
adc
and
jo
das
inc
int3
arpl
fucomi
decb
inc
push
adc
stos
dec
pushf
in
and
cmp
pop
add
loope
pop
push
inc
aas
push
adc
stos
fnstcw
bound
roll
dec
insb
mov
sub
mov
outsl
cmp
shrl
pop
repz
dec
sub
cwtl
pop
push
sbb
not
ret
shr
xor
icebp
jne
adc
data16
push
loop
push
dec
scas
nop
fisubrl
pop
lret
push
int3
xor
ds
jo
cld
cli
ret
movsb
mov
adc
xchg
call
inc
js
out
jno
fsub
push
pushf
push
adc
dec
cmp
jp
mov
hlt
push
sub
push
pop
insl
mov
inc
xchg
mov
scas
in
jg
leave
xchg
sti
jae
push
mov
or
inc
movsl
mov
mov
lods
mov
push
fsts
scas
enter
icebp
mov
ret
shll
sub
or
lods
stc
das
sub
pusha
loop
dec
cmp
jnp
and
nop
mov
shlb
insb
dec
fistps
xor
out
sti
cmp
int
lcall
add
jo
shlb
cmc
cmpsl
daa
push
pop
adc
test
or
fwait
es
mov
stos
movsb
xor
aam
sub
jne
test
pop
adc
xchg
iret
fwait
lret
sbb
add
lret
xor
ret
ror
notl
shr
dec
pop
sbb
andb
lret
add
clc
jae
mov
push
xchg
inc
adc
cmp
sub
dec
sahf
sub
fstpl
negb
lcall
cmp
xlat
ljmp
push
or
std
mov
fistpl
push
test
cld
aam
cmpsl
rclb
jp
ret
faddp
inc
pop
lock
cmpl
xchg
add
fdivs
pushf
jg
adc
dec
xchg
sbb
pop
int3
cmpsl
lock
in
push
push
jae
push
sub
fwait
jno
inc
out
and
push
and
pop
loopne
fidivrs
mov
fldcw
pop
rcr
decl
cmp
push
rcll
pop
out
shll
int
ja
subl
pop
push
jo
mov
stos
popf
jg
inc
jecxz
dec
push
lea
cmp
xchg
xchg
sub
mov
xor
pop
xor
dec
and
xchg
mov
test
or
hlt
lock
aam
cmpsb
lcall
mov
jle
jmp
jo
add
dec
sub
pop
push
icebp
or
mov
xchg
call
in
popf
mov
stc
mov
sub
dec
pop
cli
out
pop
push
call
mov
jl
and
pop
adc
daa
mov
mov
mov
cmp
or
out
test
stos
or
popa
je
montmul
cmpsb
xor
sub
jge
mov
pop
push
cmp
dec
add
scas
mov
sub
rcrb
movsb
cmp
inc
leave
xchg
inc
add
add
rcrb
add
mov
lret
cmpps
call
jnp
sahf
or
xchg
lods
cmpsb
xor
jg
shrb
jl
gs
ja
ja
xlat
mov
fstps
stos
inc
sbb
xor
xchg
cmp
mov
and
loopne
icebp
pop
push
in
inc
fidivl
ficoms
mov
mov
and
xchg
pop
les
int3
lods
movsb
pop
adc
cmpsl
lcall
add
mov
mov
jns
pop
mov
mov
popf
push
addr16
adc
fstpt
sbb
sub
xchg
jle
ds
ljmp
das
loopne
cwtl
popa
lds
lcall
pushf
lcall
push
mov
cmpsb
leave
jecxz
js
jb
data16
cmp
lds
xchg
movsl
push
leave
pop
pop
stc
nop
jl
out
mov
jno
hlt
push
pushf
jg
push
outsl
pop
loop,pt
push
into
mov
push
sub
adc
jmp
aas
imulb
cmpsl
rorl
std
sub
adc
cltd
and
xchg
xor
and
jp
cli
xchg
inc
fadds
jge
mov
sbb
daa
sub
pop
mov
xchg
mov
ret
repz
push
out
inc
xor
jmp
push
mov
lret
and
xor
dec
sub
addb
lcall
xor
mov
add
repnz
sahf
test
lret
mov
call
ret
and
pop
repnz
lods
add
enter
jmp
push
sbb
xchg
cmpsl
orl
lret
hlt
aas
push
leave
test
xor
fcoml
pop
push
dec
loop
aas
push
fsubrs
incl
bound
add
jmp
push
add
inc
cltd
mov
lods
mov
lods
xor
mov
and
jb
insl
pop
out
sub
jmp
out
cwtl
jo
mov
push
and
jmp
aas
sahf
xlat
repz
dec
fidivrl
inc
xchg
rep
mov
pop
insl
and
jno
mov
dec
xor
cmpb
and
push
lods
lcall
icebp
jno
jne
in
je
cmp
sub
mov
sub
data16
shl
enter
or
in
push
gs
pop
incb
rorb
push
test
out
inc
adc
rorl
inc
cmp
lods
scas
and
push
pop
xchg
cld
mov
dec
outsb
adc
scas
push
scas
push
xchg
repnz
outsb
inc
outsb
mov
insb
add
push
testl
mov
inc
push
adc
cld
xchg
divl
xchg
bound
mov
jg
add
jle
pop
outsb
dec
lahf
mov
dec
jns
loopne
test
loopne
loope
xor
xor
lea
push
dec
clc
inc
cmp
dec
out
push
xor
cs
and
xlat
cmp
fnstsw
fstps
fnsave
mov
in
es
cmc
adc
rcll
rol
dec
or
in
jp
inc
add
push
pop
mov
enter
sub
nop
push
xchg
pop
loop
lods
clc
pop
inc
popa
addl
cwtl
or
or
scas
pop
out
mov
fnsave
dec
fildll
mov
or
clc
cmpsl
orl
loopne
adcl
cmp
pop
lret
add
push
inc
rclb
mov
jns
lahf
adc
rcll
and
mov
jo
mov
movsb
xor
loopne
jl
cmpsl
jle
rolb
push
and
mov
pop
sbb
ljmp
and
leave
mov
and
sbb
scas
inc
jbe
dec
out
push
test
outsb
jmp
mov
sti
ja
in
aaa
rorb
pop
or
xchg
mov
fbld
xor
mov
push
or
aaa
adc
mov
adc
aaa
stos
arpl
imul
sub
dec
rorl
pushf
mov
adc
dec
cmp
jnp
pushf
cli
fstpl
stc
push
sbb
pop
dec
imul
loop
cmc
push
shr
sbb
push
sbbb
sarl
into
mov
fcos
mov
lods
out
push
cld
dec
mov
sub
mov
xchg
jle
sahf
inc
mov
fndisi(8087
test
cmpsl
std
fisubrl
or
fwait
xchg
dec
and
std
push
imul
fmul
iret
cld
movsl
jg
loope
daa
mov
fcompl
pop
in
mov
adc
jle
stos
adc
fidivrs
in
xor
fwait
sub
pop
dec
and
dec
lods
iret
cmp
pop
ljmp
imul
push
push
movsl
lahf
jb
jae
lods
daa
jo
je
lds
std
jg
sti
push
adc
and
add
popf
stos
mov
jne
sbb
pop
fwait
xor
jmp
sti
mov
ret
sbb
xor
jge
xchg
scas
adc
sbb
mov
inc
js
add
scas
push
ja
xor
xchg
or
clc
sti
mov
mov
and
popf
ret
loop
mov
push
xor
ficomps
scas
out
aaa
mov
call
clc
jne
mov
lods
mov
pop
stos
mov
into
out
add
mov
fsubrs
sbb
stos
stos
xor
jns
xlat
leave
mov
aam
ss
push
cmc
loope
daa
jno
insl
test
jns
fisttpll
scas
arpl
mov
add
mov
lea
jno
push
repnz
jle
repnz
inc
xchg
insl
sub
addr16
popa
insl
add
inc
xchg
adc
cmp
mov
add
pop
cmc
pop
xor
sbb
mov
ss
inc
in
xchg
aas
sbb
loop
sub
mov
cmp
les
jecxz
jno
mov
js
mov
ret
imul
outsb
add
pop
aas
rcr
je
sbb
xor
icebp
xor
xchg
mov
rorb
outsl
push
fcmovnu
daa
ds
jno
call
insb
idivl
aad
inc
orl
pop
out
aaa
iret
insl
in
insl
dec
push
sbb
idivl
mov
out
shrl
cvtpi2ps
repz
frstor
inc
fnsave
sub
cmp
fbstp
pop
mov
cmp
imul
mov
data16
adc
ret
enter
mov
das
sarb
in
nop
pushf
scas
rol
mov
nop
dec
sahf
cmpsl
shlb
inc
loop
rcl
stos
add
fldt
fistpll
jb
lods
int
cmpb
push
pop
mov
or
cwtl
pop
dec
icebp
or
pop
or
lods
inc
dec
xchg
int3
xlat
fwait
xor
out
in
dec
std
ficoms
pop
shrl
sub
sahf
mov
mull
mov
les
div
ret
aad
repnz
push
add
jns
scas
jbe
stc
mov
sbb
mov
or
cmp
push
fs
mov
sub
aad
push
pop
clc
mov
cmp
and
inc
stos
lea
mov
jp,pt
mov
popf
inc
mov
inc
mov
xor
mov
fdivrl
cs
loopne
adc
jle
decl
sub
outsb
outsl
push
fwait
out
cmpsb
mov
xor
gs
test
ja
shll
mov
sub
fistl
fmull
fnsave
jno
js
fimuls
into
fldenv
ja
mov
in
stos
lds
stc
or
jmp
scas
mov
bound
cld
or
insl
xlat
mov
and
push
or
rcrb
mov
pop
punpckhdq
inc
xorb
add
leave
pop
or
mov
sahf
popf
or
out
call
cmpsb
cmp
xor
flds
or
jno
cs
push
sahf
enter
jge
jae
sbb
and
int
push
js
add
sub
dec
jge
add
lock
fnsave
stos
inc
mov
jno
int3
xor
pop
jae
dec
add
xor
dec
es
and
cmp
pop
jg
mov
arpl
sarl
xor
test
out
test
dec
xchg
add
repz
pop
cmc
mul
ret
into
inc
aas
jl
in
mov
dec
sti
jecxz
mov
adc
mov
imul
add
dec
nop
mov
int3
imul
mov
pop
lods
push
mov
lock
ds
xor
push
movsl
arpl
subb
jp
lock
xor
ret
outsl
add
adc
push
mov
adc
lcall
leave
push
push
sti
fs
xor
divl
xlat
outsb
pop
mov
fsubrp
insb
sbbb
push
xchg
mov
fldl2t
arpl
adc
cltd
push
add
mov
addl
lret
je
divb
ss
icebp
add
adc
mov
mov
clc
sbb
iret
sbb
dec
lock
fsubrs
pop
icebp
call
dec
sti
xchg
jl
dec
mov
insl
add
mov
adc
add
arpl
add
imul
rorb
and
dec
out
imul
jne
cmpsl
cmpsb
call
cmp
mov
lea
data16
les
in
sbb
pushf
cmpsl
ret
stc
nop
push
daa
insl
xor
fsts
lods
mov
fdivl
int
mov
pop
fnstenv
adc
inc
sub
bound
xor
xor
movsl
dec
cmp
data16
mov
rolb
mov
jl
ret
xchg
inc
pusha
dec
jbe
xchg
shrl
sub
dec
repnz
fsubs
push
and
mov
fiadds
pop
jmp
fcomi
mov
pop
xor
scas
repz
xchg
xchg
hlt
je
sbb
cmpsb
in
mov
or
sbb
lods
ja
int3
mov
dec
cmp
xor
mov
fldt
clc
cmp
add
out
sub
jae
fwait
cmp
mov
xchg
dec
adc
aad
in
jle
push
fldl
test
cmp
add
cmp
test
inc
fdivrs
fnsave
pop
repnz
out
popf
sbb
sti
sub
mov
rcrb
out
xchg
lret
outsb
push
push
push
fdivrs
dec
mov
mov
scas
loope
sbb
pop
std
xor
jmp
or
cmp
call
add
clc
inc
fmuls
inc
or
cmp
push
or
mov
xchg
inc
pop
imul
or
loopne
aad
stos
mov
outsl
jo
xor
insl
xchg
add
lret
hlt
ret
repz
test
fcomps
mov
out
sub
mov
mov
testw
xchg
imul
cs
xchg
mov
sbb
ds
xchg
push
std
int
ljmp
pushf
outsl
cmp
pslld
add
mov
bound
adc
push
lret
jl
ljmp
dec
xor
idivl
fcomi
push
nop
arpl
lods
xchg
mov
popf
imul
pop
jecxz
gs
jmp
lahf
ja
xor
xchg
sub
cmp
lods
in
inc
xor
cmp
xor
ficoml
push
jg
adc
push
push
das
stos
jnp
dec
pop
mov
mov
sub
jb
mov
es
cmp
mov
lock
push
sbbl
push
dec
adc
pop
and
cmpsl
fdivrl
adc
fstps
push
push
jnp
jbe
popf
or
inc
pop
sbb
mov
iret
gs
cli
mov
les
test
xor
mov
push
call
adc
jge
pop
orb
adc
xchg
push
sbb
mov
pop
stos
jb
mov
mov
sbb
xor
xchg
add
in
mov
push
inc
push
push
rcl
jb
push
dec
jno
push
xor
mov
cmc
sti
adcb
mov
popa
push
fcoml
out
mov
into
in
decl
pushf
jg
divl
movsb
cwtl
nop
daa
sbb
pop
scas
sub
pop
bound
mov
les
xchg
test
pushf
dec
in
push
in
cmp
mov
test
dec
popf
or
aas
push
fucomp
jge
mov
test
mov
das
test
add
mov
dec
fldcw
in
cltd
inc
aaa
sarb
inc
fists
push
cltd
xor
loop
andb
cltd
mov
add
inc
fdiv
or
sbb
xchg
test
xchg
mov
in
ljmp
cmp
mov
add
adc
lcall
sub
mov
sbb
mov
lods
fnstsw
ret
pushf
rcl
sub
jle
cmp
clc
out
iret
insl
movsl
inc
lahf
lock
cmp
and
cli
push
jns
adc
ja
pop
push
bound
mov
mov
repz
aad
mov
mov
jge
das
addr16
cmpsl
int3
arpl
xlat
ljmp
mov
mov
sub
in
jp
cli
jecxz
cmpsl
xlat
push
je
shlb
jl
addr16
mov
daa
fisubl
mov
mov
int
aam
repnz
push
or
stos
cmc
mov
mov
test
inc
mov
js
lods
sub
popa
add
call
add
mull
push
clc
popl
es
orb
int
xchg
cli
cmp
aaa
mov
adc
push
mov
js
flds
mov
shrb
mov
dec
cmp
pop
dec
pop
jbe
lea
je
push
outsb
push
dec
icebp
pusha
fucomp
mov
add
pusha
jo
sbb
cmpsl
push
xor
mov
jle
addr16
inc
sbb
push
dec
iret
xchg
xlat
adc
mov
mov
xlat
mov
fwait
xor
stc
xchg
test
out
dec
add
leave
sub
xor
xchg
je
sub
lds
scas
jmp
push
data16
mov
dec
dec
mov
cmp
les
dec
cli
mov
and
shll
inc
lcall
mov
xlat
outsl
jecxz
fcoml
pop
out
mov
shlb
mov
xor
fisubs
loopne
orb
aas
mov
cmc
enter
adc
push
pushf
aaa
mov
hlt
push
push
pop
push
loopne
adc
sub
push
cmp
fsubr
sub
mov
and
mov
mull
mov
popf
bound
xor
mov
ret
jnp
and
sub
test
mov
inc
or
jb
sti
xchg
lret
ja
cs
in
sbb
mov
ja
mov
rcll
sbb
adc
push
lods
and
pop
nop
loop
movsb
das
pop
stc
adc
inc
imul
loopne
cs
in
sti
xchg
outsl
xor
sub
hlt
mov
push
inc
jb
jecxz
sub
add
and
mov
mov
mov
push
push
je
mov
fs
cmpsl
push
push
xor
mov
call
xchg
inc
loope
mov
mov
icebp
push
sbb
inc
cmp
leave
xchg
addr16
push
insl
insb
dec
mov
sbb
sub
inc
test
xor
out
xchg
mov
cs
inc
sub
out
inc
pop
xor
test
iret
jnp
ret
out
inc
pop
push
jle
mov
jb
cld
outsl
add
imul
mov
mov
jle
pop
aad
and
mov
dec
pop
mov
push
hlt
mov
pop
addr16
scas
adc
cmp
iret
push
pop
loop
insl
gs
xor
add
jecxz
mov
fists
cmpsb
jge
movsb
lret
sti
lds
fiaddl
xchg
inc
sub
je
fnstcw
cld
pop
mov
mov
sub
pop
pop
xor
or
fisttpl
xchg
loope
cmc
xchg
mov
jbe
out
cmp
jg
int
subl
addr16
push
repz
push
addb
shl
cmp
jb
and
iret
movsl
jbe
popf
fs
jecxz
cmpsl
jecxz
cwtl
jg
xor
or
mov
scas
ja
lods
dec
sbb
repz
push
or
sti
test
rcll
icebp
lcall
das
push
pop
aad
pop
or
add
shll
arpl
add
fnstsw
mov
mov
fs
es
xchg
xor
cwtl
pop
adc
jb
rolb
and
enter
stos
mov
jg
outsb
faddl
mov
push
outsl
mov
in
push
jle
jl
fdiv
xchg
out
into
gs
add
fstpt
out
push
mov
push
add
mov
jmp
adcb
scas
lods
cmp
dec
fbld
jp
push
nop
sbb
stos
xor
in
out
push
xor
sbbl
mov
clc
mov
xchg
sub
xchg
lahf
sub
shll
push
pop
adc
stos
adc
ja
xchg
push
scas
orl
dec
sub
jl
loop
mov
mov
imul
mov
push
dec
dec
xor
or
in
jmp
sub
mov
xchg
pop
gs
and
xchg
jnp
lahf
dec
pop
add
add
or
xor
movsb
jbe
jp
into
xchg
xor
or
pop
mov
scas
add
mov
sarl
shll
xor
dec
inc
je
stos
in
bound
push
mov
cmp
incl
mov
icebp
into
push
fdivrs
dec
and
pop
adc
push
rolb
pop
test
cld
ja
sahf
jno
push
xchg
inc
mov
pop
ret
cmp
int
sub
add
xor
jge
jmp
mov
cli
test
repnz
data16
jge
int3
add
push
mov
pop
ljmp
jecxz
jg
lret
cwtl
xchg
pop
loope
lahf
imul
dec
call
mov
jbe
xor
fdivr
rcr
es
mov
pop
or
lods
hlt
les
es
jno
sbb
stos
mov
dec
xor
inc
std
mov
out
and
adc
xchg
insl
add
outsb
mov
pop
mov
or
in
push
dec
push
pop
or
sub
imul
popa
dec
mov
dec
jnp
push
lea
testl
jbe
inc
movl
enter
ficoms
daa
push
scas
lret
out
fucomi
jne
inc
aam
js
lahf
sub
cltd
pop
mov
shll
enter
mov
push
call
mov
mov
cltd
and
dec
or
and
es
insb
xchg
pushl
faddl
lds
dec
sbb
sahf
jae
add
cmp
cs
dec
andb
shlb
sbb
inc
push
push
jge
adc
fcomps
fdivs
repnz
imul
mov
mov
pop
xor
lods
add
shlb
inc
lret
dec
pop
loopne
push
testb
inc
fisubrl
inc
sub
fsts
ljmp
dec
subl
pusha
and
setnp
shr
stc
movsb
and
xchg
dec
xchg
inc
clc
mov
pop
arpl
mov
mov
mov
xchg
and
push
fimull
mov
mov
popf
stos
dec
lods
shl
out
mov
jmp
cmp
add
fs
cli
fidivs
addr16
or
cld
jg
jg
xchg
lods
leave
testl
insl
shlb
push
push
movsl
aaa
mov
xor
call
orb
repz
xchg
stc
pop
repnz
jns
jne
out
ja
jae
inc
cmp
sbb
ss
icebp
dec
fsubl
or
add
scas
lret
or
adc
inc
jne
cmpsl
stos
dec
sub
or
int3
add
repz
aaa
push
scas
lcall
lds
jmp
popl
jne
outsl
out
dec
pop
xchg
xlat
mov
or
add
in
movsb
iret
orb
cs
shrl
xor
pop
mov
mov
in
xor
pusha
rcll
aaa
pop
add
insl
jecxz
ret
xor
jb
rclb
or
js
add
inc
xor
dec
ss
sarl
inc
fisttps
cld
mov
and
mov
jnp
orb
stc
je
push
sti
sbb
jmp
jo
lret
bound
sub
pop
addr16
lock
mov
test
xchg
inc
dec
add
cmp
sbb
lret
imul
lahf
jae
mov
mov
inc
aas
aaa
into
fs
mov
mov
cli
fdivs
lea
mov
inc
scas
cs
ror
adc
xor
cmp
in
mov
lcall
and
mov
popf
mov
cs
xchg
mov
inc
and
sbbb
pop
mov
mov
push
sbb
adc
push
dec
add
sub
sbb
shrl
push
lock
or
loopne
mov
pop
push
shll
cmc
or
nopl
sub
dec
fiaddl
repz
test
pop
push
rcrl
sub
pop
cmp
xchg
sub
jns
cmp
mov
mov
cmp
xlat
push
call
pop
lods
ja
and
stos
dec
sbb
pop
imul
lods
inc
test
lret
in
jbe
iret
addr16
pop
mov
pop
movups
push
push
push
mov
xor
in
std
cltd
inc
xor
aaa
xchg
push
push
mov
inc
mov
pop
jns
and
and
xor
mov
popf
xor
rol
pop
enter
ja
and
lcall
push
movsb
xchg
or
sub
adc
inc
and
mov
dec
movsl
mov
negl
lock
mov
inc
pop
test
cmpb
lods
pop
dec
jns
cmp
fiaddl
and
jbe
fists
xor
and
in
loopne
xchg
insb
gs
lea
mov
into
pop
mov
mov
inc
inc
aas
xor
rcrb
mov
aad
mov
jne
pushf
sahf
push
or
shlb
xchg
lret
dec
jg
mov
addr16
fiaddl
and
movsl
or
in
sti
inc
sub
cmp
in
daa
stc
mov
rcll
cmpsb
fsubs
sbb
sbb
mov
lods
mov
jmp
call
call
pop
push
ja
sub
stos
hlt
fs
and
int3
and
push
insl
push
pushf
lods
push
ljmp
out
add
lods
push
xlat
and
inc
xor
mov
lret
push
xchg
or
nop
inc
xor
movsl
adcb
pop
cmp
mov
fs
pushf
xlat
sbb
ds
sbb
push
cmp
push
xor
sbbb
adc
scas
push
fcomip
xchg
adc
xchg
ja
daa
gs
pusha
xor
fs
pop
in
in
inc
cmp
adc
and
fidivrs
lret
sbbl
out
clc
mov
subb
lock
mov
adc
sbb
stc
scas
cmp
sbb
out
sub
ljmp
stos
add
inc
push
or
enter
movsl
cmp
int3
pop
int3
les
dec
xchg
cwtl
adc
pop
sub
aad
in
rcrb
icebp
nop
xchg
pop
mov
sarb
push
push
fadds
inc
cmpsb
out
add
imul
lcall
es
or
mov
inc
mov
xchg
xor
cwtl
std
shrb
mov
add
testl
sbb
dec
dec
pop
insl
cmp
cltd
aas
mov
and
ret
pop
cmp
in
xor
icebp
popa
cmp
xor
push
cmp
push
or
dec
and
mov
pop
lock
call
pop
or
test
jg
out
lods
mov
sbb
outsb
shl
mov
mov
adc
sub
je
nop
sbbl
lock
imul
iret
sub
andb
mov
xchg
fsubrl
mov
loop
ds
ret
pop
xchg
dec
xor
sub
push
movsl
or
aas
xchg
sub
xor
push
mov
aaa
or
mov
gs
call
mov
outsl
ret
dec
and
outsb
push
pop
scas
in
loope
movsl
js
ret
sub
in
std
enter
pop
add
jb
adc
adc
rorb
cmp
sbb
popa
jp
mov
ret
emms
pop
mov
push
push
or
xor
sbb
in
sti
mov
push
xchg
loop
popf
adc
xor
jne
imulb
pushf
pop
cmp
ret
mov
orb
xchg
mov
leave
cmp
mov
mov
hlt
shrb
jle
movsb
iret
stos
mov
sbb
sahf
lods
inc
int
push
rclb
pusha
cltd
test
inc
mov
jnp
xchg
sub
mov
add
adc
dec
mov
call
push
mov
push
bound
pop
out
mov
faddl
or
fistps
sub
out
int
push
push
push
out
jbe
add
fwait
sbb
sbb
jecxz
cmp
imul
sbb
or
out
es
out
sarl
jbe
mov
mov
aaa
or
mov
push
sarl
xor
xchg
pop
icebp
mov
sti
cmpb
push
mov
inc
lock
int
xor
dec
outsl
insb
in
pusha
mov
push
negb
arpl
aam
pusha
lret
mov
lret
call
test
xchg
mov
push
jae
adc
lods
push
in
std
mov
dec
in
sbb
cmp
dec
jo
jbe
ret
dec
xor
xchg
sub
addps
mov
adc
daa
shlb
pop
lahf
jmp
sub
test
push
mov
add
fidivs
test
clc
mov
add
lret
or
sbb
mov
pop
push
add
iret
and
fs
sub
push
mov
call
pop
mov
iret
addb
sub
or
out
sahf
rol
push
mov
push
or
pop
mov
outsl
mul
or
pop
roll
and
xchg
xor
stc
stc
cmp
dec
mov
jge
enter
cmp
fisttps
mov
dec
pusha
add
sub
mov
inc
call
adc
sub
aaa
adc
mov
enter
push
jmp
addr16
movsl
andb
mov
sub
shlb
arpl
or
cmp
scas
sbb
das
cmpsb
xchg
loope
js
adc
xchg
test
popf
pop
mov
lahf
rorb
cmpsl
outsb
adc
xchg
and
imul
xchg
das
push
dec
popa
push
mov
adc
or
out
stc
lea
dec
dec
repz
pop
mov
sub
cmpsl
jle
jl
jns
mov
fisttps
mov
jb
lods
clc
cmp
push
jb
aad
scas
call
or
cmp
sahf
xor
pop
call
adc
and
push
aas
enter
push
test
stos
mov
jo
fidivrs
lds
scas
jbe
jmp
add
pandn
outsl
cmp
pushf
sbb
into
mov
stos
jl
imul
push
dec
dec
lds
stc
popf
jbe
out
jnp
lcall
sbb
cmp
adc
call
in
sbb
pop
mov
ret
dec
mov
les
mov
mov
dec
in
cmovl
loope
mov
out
xchg
dec
cmpsb
shll
xor
ja
les
and
movsb
pop
cmpsl
jbe
cmpsb
mov
and
xor
mov
jb
clc
and
mov
sbb
and
bound
cwtl
pop
sub
inc
mov
inc
push
fadds
repnz
push
xor
jecxz
aaa
mov
sub
popl
mov
into
lret
loope
std
sbb
lds
fdivl
sub
aad
icebp
dec
push
inc
out
leave
fs
jb
push
inc
repnz
int
aam
cltd
aas
adc
pop
jmp
rcrl
lock
adc
cmp
clc
jno
out
sbb
ffreep
pop
adc
pop
dec
clc
or
mov
sbb
into
scas
loope
inc
adc
push
or
mov
adcb
popa
pop
popf
jbe
outsl
aam
xchg
and
dec
ljmp
and
hlt
test
je
fnsave
jb
jnp
push
cli
push
test
ja
and
data16
pushf
xor
jne
iret
sti
mov
mov
lea
inc
mov
andl
rcll
xor
push
jae
insb
ja
mov
jo
mov
jp
jno
rcll
movsl
lds
mov
js
push
sub
dec
mov
or
loope
cmpsl
mov
icebp
jae
clc
sub
push
test
pusha
arpl
xchg
adc
dec
js
pop
clc
jp
xchg
daa
pushf
aas
into
pushf
je
jp
pop
cwtl
sti
out
int3
fisubs
sbb
popf
xor
cld
inc
mov
test
push
fisubrl
cmp
cmpsb
cmp
mov
sbb
push
push
testb
pop
jmp
bound
mov
lret
cltd
imul
icebp
nop
push
cmp
and
xchg
pop
and
xchg
mov
mov
stc
rorl
call
test
or
subb
insl
cmp
das
test
cmc
xor
sub
xchg
or
dec
dec
aad
mov
jmp
neg
sbb
mov
movsb
xor
and
mov
push
sbb
inc
dec
je
andl
pop
jb
bound
jg
xor
and
mov
enter
or
push
dec
xlat
int
out
addr16
ficoml
outsl
fs
and
fwait
mov
inc
sbbb
out
sbb
sbb
bound
mov
mov
sahf
std
mov
rorl
push
jbe
push
ds
aas
sti
ds
mov
and
inc
mov
aaa
inc
bound
sub
jmp
jecxz
repnz
lds
repnz
add
sbb
mov
cltd
xor
push
fisubl
in
sti
cmc
arpl
pop
scas
inc
subl
arpl
jmp
mov
movsl
outsl
loop
and
and
and
popa
addr16
loop
add
lret
bnd
adc
mov
adcb
rep
ljmp
in
push
mov
mov
repz
adc
rorb
into
pushfw
dec
sti
sti
mov
test
or
rolb
pop
stc
test
loopne
xor
inc
lods
sbb
xor
push
and
xor
adc
push
imul
ljmp
cmp
lods
lahf
aas
xlat
inc
popa
fdivl
xor
cmpsl
bound
cmpsb
shrl
pop
repz
dec
jl
jno
jp
mov
push
sub
out
dec
add
or
sub
hlt
mov
enter
mov
mov
pop
orb
shrl
ja
imul
icebp
xchg
addr16
int3
orb
gs
fwait
xor
push
push
inc
test
xchg
sub
ret
pop
sti
mov
xor
pop
xchg
push
lods
jno
mov
rcrb
movsb
inc
les
lret
out
loop
mov
insb
cli
mov
xchg
xchg
pushl
iret
push
in
add
fucom
sbb
in
mov
jnp
push
jae
inc
sbbl
clc
cltd
dec
xor
dec
or
inc
inc
flds
comiss
mov
sub
mov
fdivrs
mov
jge
dec
decb
push
repz
shlb
sar
jo
shr
dec
mov
out
mov
aaa
push
pop
ficoml
clc
mov
inc
adc
dec
cmp
fstps
cmpsb
jp
xchg
repz
lods
jmp
cltd
xchg
popf
testl
push
nop
out
pop
jp
test
sbb
inc
dec
mov
dec
scas
fisubs
add
fs
pop
add
push
out
mov
add
imul
add
jg
clc
cmp
push
fldl
dec
shl
bound
shl
arpl
out
mov
int3
jmp
cmp
dec
cmp
js
fcmove
out
mov
dec
movsb
cmpsl
mov
loop
mov
bnd
cmc
jecxz
cmc
mov
lcall
mov
pop
test
pop
cmc
addr16
lcall
dec
dec
sub
ds
pop
xchg
sub
fs
aaa
dec
or
mov
cli
mov
ret
pop
or
mov
arpl
push
mov
xor
sub
mov
cwtl
ss
pop
loopne
cwtl
dec
mov
gs
mov
or
sub
xor
test
pusha
pop
int3
daa
scas
add
lods
dec
sbb
outsl
xchg
sub
dec
xor
xchg
jbe
cmc
or
inc
fmull
imull
fsubs
or
mov
sldt
xchg
xor
mov
pop
fucom
pop
mov
xchg
addr16
sqrtps
xchg
jl
cld
push
iret
fnstsw
sub
stc
mov
mov
rcl
xchg
sub
or
pop
or
jle
shrb
adc
dec
xchg
and
inc
cwtl
mov
enter
jbe
jb
daa
popaw
xchg
inc
dec
sahf
xlat
addr16
aad
push
inc
mov
add
xor
cmp
pop
mov
push
mov
in
pop
in
notb
rolb
push
in
sti
sbb
dec
mov
jae
cwtl
cmpsb
lock
mov
push
mov
dec
lahf
pop
lret
add
push
in
pop
pop
out
cmpsl
mov
mov
xchg
dec
jp
inc
fucomp
pushf
cltd
pop
ljmp
jnp
lods
loopne
jbe
add
xchg
data16
mov
pop
lods
mov
rorl
sbb
or
mov
scas
lret
lods
ret
mov
test
arpl
adc
cmp
push
cmp
sub
sbb
mov
test
push
jp
cmc
and
xchg
rorl
dec
cmpsl
mov
cmp
out
sahf
ss
jne
mov
fs
sbbb
aaa
arpl
sub
jmp
xor
pop
dec
loopne
popf
xchg
sbb
repnz
ja
cmp
ror
pop
cmp
fdivrl
sub
int3
push
pushf
rorb
test
test
mov
inc
lret
xor
insb
add
aam
cld
or
push
movsl
xor
xorb
adc
shlb
mov
ljmp
popf
aad
into
fisubrs
loopne
sub
or
test
dec
pop
xor
mov
mov
and
shrb
jge
fistps
mov
cs
jmp
or
movsl
xor
jmp
sub
testl
ss
push
popf
pop
fwait
or
mov
fcompl
pop
inc
es
leave
jp
xor
mov
fiadds
sbb
or
sarl
gs
mov
fiaddl
push
dec
cmpsl
jns
pop
pop
add
sub
cli
adc
fcomi
mov
repnz
or
mov
fs
xchg
xchg
fs
jns
movsl
ret
push
test
jae
iret
test
cmc
mov
sbb
in
or
and
add
lcall
and
xchg
lcall
and
cmp
pop
inc
mulb
and
mov
cmove
or
sbb
nop
mov
sti
inc
out
or
data16
pusha
cmpsb
xchg
fs
shrl
sbb
adc
pop
call
aad
mov
out
mov
sub
cmp
clc
mov
dec
mov
xchg
and
idivl
std
mov
add
jno
sbb
mov
and
push
aaa
rclb
arpl
cmpsl
fisubs
loop
add
inc
aaa
addr16
push
cld
or
scas
ret
arpl
repz
in
scas
mov
decl
mov
int
push
shlb
outsb
mov
out
adcb
scas
inc
xchg
int
mov
std
or
xchg
or
cmp
xchg
test
cmp
push
gs
xchg
rcrb
adc
stc
adc
cmp
out
jmp
in
int
insb
iret
jne
stos
test
sub
test
mov
leave
adc
push
lret
out
xor
xor
or
fsubrl
pop
popf
jne
pop
xor
mov
xor
xchg
mov
dec
push
hlt
mov
and
mov
addr16
adc
mov
mov
popf
sti
in
add
sbb
int
pop
hlt
or
lods
push
push
rcll
es
xchg
xchg
inc
rorb
mov
arpl
fcoml
or
inc
sti
stc
popf
cmp
aad
xchg
push
movsl
pop
cmp
cmp
pop
mov
outsb
notl
stc
cmp
aam
mov
fwait
les
cmpsb
rorb
idivl
aam
scas
and
into
gs
add
loopne
jae
adc
add
idivb
push
push
adc
lods
std
das
mov
mov
sbb
mov
or
push
scas
sub
nop
nop
pop
ja
icebp
mov
aas
psllq
push
ret
jecxz
cmpsb
popl
rol
stc
bound
leave
das
or
push
inc
loope
mov
stos
mov
sbb
lds
sbb
dec
popf
pop
pushf
xchg
jno
mov
dec
xchg
call
cmp
xor
mov
imul
adc
cmp
pop
mov
mov
xchg
cli
jmp
loop
fidivl
cli
xchg
js
fistpl
jno
mov
sbb
mov
add
arpl
iret
sub
and
pop
inc
mov
mov
fldenv
insb
push
sub
xor
sbb
popa
mov
je
nop
fstpl
jmp
xor
jmp
rolb
insb
add
gs
jb
seta
sbb
and
pop
pop
scas
mov
call
scas
xor
mov
xchg
jle
push
cmpsl
stos
frstor
pop
xchg
mov
jecxz
into
dec
lods
inc
jg
ficoms
shrb
imul
leave
mov
jmp
inc
mov
clc
sbb
push
cmp
dec
movsl
push
sbbl
push
mov
insl
dec
push
push
inc
dec
sub
jle
rol
jl
pusha
pushf
xor
dec
push
cltd
jns
sbb
or
adc
enter
mov
out
fmul
inc
or
js
ljmp
lcall
or
sub
push
fldenv
ret
xor
outsl
jb
push
pop
sahf
test
and
cmpsl
and
std
rcl
push
xchg
pusha
mov
xchg
mov
adc
negb
negl
mov
loope
push
ljmp
push
in
add
je
cmp
or
jo
adc
test
pop
add
push
cmp
mulb
sarl
sbb
inc
fcomps
pop
es
add
add
push
xchg
pop
sbb
add
push
push
xchg
mov
jbe
call
adc
cmp
push
sub
mov
daa
push
scas
in
dec
mov
fst
push
sahf
aaa
int
dec
stc
out
adc
lods
xchg
in
pusha
xchg
lea
lret
ret
rcll
popf
push
call
test
jo
push
mov
xchg
jo
popf
rorb
mov
or
shr
ret
clc
cli
jecxz
arpl
pushf
pop
mov
ljmp
push
lret
xor
das
ficoms
add
loope
stos
push
pop
mov
mov
sub
pop
push
mov
pop
sbb
iret
mov
jbe
add
js
mov
sbb
inc
cmp
cmp
inc
sbb
rcrl
jae
js
cmp
fildll
mul
push
xor
mov
leave
jb
jbe
cltd
sbb
jecxz
hlt
mov
jecxz
dec
adc
push
push
iret
or
inc
cs
jb
pop
jo
jge
mov
fldl
nop
movsb
ds
stos
add
sbb
xchg
imul
fists
xor
mov
imul
push
mov
sbb
sub
bound
daa
and
pop
inc
xchg
dec
daa
leave
repnz
inc
xchg
mov
adc
xorl
lret
pop
ja
sbb
sbb
add
xor
push
call
sbb
pop
push
add
push
shll
push
push
sbb
mov
jle
mov
push
and
lods
jl
aad
in
mov
bound
pop
jne
adc
pop
xchg
adcl
out
movsb
mov
dec
sub
cmp
addr16
pop
cmpsl
out
sbb
sbb
fmuls
dec
pop
push
hlt
sbb
inc
arpl
push
inc
jns
dec
stos
repnz
adc
inc
aam
jns
pop
jbe
rcl
mov
scas
insb
scas
mov
andl
pop
mov
cmpb
movl
push
xor
shll
inc
in
mov
mov
cli
fwait
push
inc
pop
or
mov
in
bound
out
pop
sbb
or
pusha
jb
or
or
insb
xchg
fistpll
pop
fs
nop
cwtl
mov
lods
aad
stos
pusha
mov
xchg
sbb
and
push
pop
cmp
pop
mov
xlat
les
sbb
add
repnz
fwait
adc
repz
mov
cmp
icebp
mov
mov
testl
imul
add
mov
repz
int3
in
jge
mov
inc
sbb
jge
mov
test
lcall
cmp
push
pusha
and
test
and
stc
sti
and
and
inc
inc
jae
loope
adc
in
mov
add
daa
dec
lret
fisubrs
int3
es
jnp
lret
fldcw
popf
mov
ljmp
out
or
jno
cmp
shlb
enter
sub
xchg
push
add
jge
push
ds
lahf
mov
lds
push
inc
or
mov
xchg
in
jno
mov
mov
es
push
mov
push
cld
in
xchg
pop
arpl
imul
popf
xchg
es
mov
push
test
fcoms
xchg
mov
movsl
ds
mov
mov
movsl
xchg
adc
inc
orl
mov
sarl
jo
adc
and
insb
xor
push
adcb
xorl
add
bswap
add
mov
subb
int3
add
push
dec
insl
dec
sub
jmp
add
daa
or
push
and
adc
jae
stc
jne
repnz
aas
aaa
test
and
push
cmpsb
std
lock
fdivl
push
and
daa
stc
hlt
jmp
fisttpll
push
and
push
sbb
repz
adc
or
sub
fiaddl
aam
mov
fcmovbe
or
or
xlat
stos
jae
adc
int
inc
js
fmuls
es
mov
fstp
or
mov
xadd
aad
arpl
push
xchg
inc
test
or
arpl
pop
pmullw
mov
ret
aad
cmc
dec
out
inc
popf
xchg
outsb
jl
mov
jo
mov
in
add
sbb
rclb
push
je
addb
shlb
mov
nop
jne
sahf
sub
mov
test
sti
sbb
pop
cs
data16
subl
lahf
ret
scas
out
sbb
fadds
movsl
push
insl
sub
sub
pop
mov
fistps
xchg
mov
jg
std
scas
loop
shrl
iret
cmp
mov
or
test
in
inc
pop
mov
dec
xor
pop
mov
sub
add
xchg
xor
inc
add
mov
mov
add
push
scas
jg
cs
pop
test
or
mov
ficoml
test
xor
mov
push
mov
fsts
mov
stos
dec
xchg
nop
repnz
and
or
push
cwtl
xor
inc
clc
push
add
sub
mov
lahf
cmc
mov
jge
mov
mov
inc
or
push
dec
out
sahf
dec
xchg
ret
xor
sbb
sti
pop
testb
aas
adc
push
mov
lds
fnsave
lea
nop
stos
jae
mov
mov
push
aad
xchg
and
push
mov
movsl
or
cs
cmp
in
cwtl
pop
mov
jb
into
gs
ja
cmp
shr
pop
adc
mov
and
push
xchg
mov
int
adc
inc
out
out
and
cmp
add
int
fsubr
pop
mov
inc
in
inc
hlt
cmpsb
int3
fbld
pop
testb
flds
jge
sti
and
shll
mov
pop
jmp
out
dec
push
call
jnp
jo
addr16
lods
enter
pop
or
adc
and
testl
jg
gs
sbb
push
shlb
fwait
push
jno
es
out
push
idivl
lods
add
xor
mov
sbb
jb
cli
bswap
pusha
sbb
ds
jo
or
or
push
push
or
fstl
out
stos
xor
sub
es
out
adc
mov
fwait
lret
in
sahf
xorb
jmp
rep
popa
cmp
daa
aaa
jae
dec
or
les
repnz
add
pop
movsb
jmp
add
xchg
bound
shlb
test
and
mov
lds
inc
mov
mov
fbstp
mov
mov
outsl
xor
sbb
and
jns
jbe
jae
jle
data16
scas
aas
sbb
cmc
push
lahf
sub
adc
stos
mov
pop
pushf
inc
iret
in
mov
mov
push
or
insl
xchg
scas
jno
inc
mov
jbe
mov
lods
leave
aas
sub
and
sub
mov
jmp
sub
cmp
mov
out
xor
jmp
cltd
xchg
sbb
cltd
ds
mov
shll
in
cmp
push
xchg
mov
pop
mov
push
xchg
sub
adc
aam
mov
es
loopne
cltd
pushf
pop
rcrl
inc
clc
mov
push
xor
test
jne
xlat
popf
jge
iret
js
imulb
fwait
xor
add
mov
ret
adc
jnp
add
dec
push
jmp
movsl
adc
mov
icebp
in
pop
push
bound
gs
dec
mov
pop
inc
fwait
repnz
leave
pusha
popa
mov
mov
push
jns
ficomps
pop
ret
xchg
inc
add
ss
stos
scas
and
jmp
cmp
fdivr
loope
push
mov
xor
or
cltd
mov
cmpsl
push
mov
xchg
es
add
inc
in
test
push
pop
xor
bound
inc
pop
jns
mov
pop
push
mov
jo
bound
push
hlt
mov
call
je
dec
pop
cmc
adc
or
mov
xlat
dec
mov
sti
call
or
pusha
into
sub
jmp
out
andps
mov
pop
not
xchg
fdiv
popf
jge
sub
add
fnstcw
and
and
inc
test
mov
inc
push
jbe
mov
mov
lock
test
ficompl
cmp
data16
or
xchg
mov
mov
push
sbb
jb
arpl
mov
jbe
jle
sbb
arpl
add
cltd
je
data16
push
fbstp
gs
scas
pop
sbb
cwtl
stos
mov
dec
jecxz
dec
xor
fisubrs
pop
lahf
std
dec
inc
jl
fsubrs
je
jg,pt
daa
stos
cs
mov
scas
sub
lods
and
test
addr16
pop
mov
mov
xor
jmp
int
out
sub
call
or
dec
cltd
dec
inc
inc
lcall
arpl
insl
adc
ljmp
lret
or
mov
lcall
icebp
xchg
mov
cltd
daa
inc
std
test
pusha
imul
xchg
stc
loopne
hlt
fs
movsl
imul
xor
sub
xchg
push
in
inc
mov
pop
imul
jae
mov
jb
sbb
bound
sub
test
jg
ror
mov
mov
out
lret
add
fcoms
jecxz
jge
xor
lods
in
rcl
test
popa
jno
fsubs
xchg
fs
out
sbb
enter
bound
stc
loope
jb
stc
adc
xchg
addr16
adc
out
lods
xchg
mov
cli
mov
scas
sub
dec
test
pushf
or
int3
dec
daa
push
cmpsl
aas
idivl
inc
sub
testl
outsl
lods
jnp
xchg
jne
test
push
mov
rcll
aaa
fcmove
hlt
imul
pop
rcl
outsl
xchg
xchg
or
popf
cmp
jmp
sub
push
shll
enter
inc
mov
movsl
add
cmp
xor
xchg
adc
clc
sub
sbb
or
arpl
adc
dec
ljmp
leave
mov
pop
xor
mov
out
xchg
pop
mov
push
pop
aaa
ss
sub
ljmp
jmp
out
pop
mov
loopne
mov
loope
mov
ret
jo
cmp
jno
add
push
std
clc
jae
fld1
jg
movsl
push
call
aaa
nop
in
and
icebp
movsl
inc
shll
mov
pop
and
loope
orb
out
xor
out
add
js
pop
stc
nop
fs
pop
scas
pop
add
scas
xor
mov
push
loopne
test
das
movsb
jg
or
cmp
test
out
gs
fstpt
sbbb
sub
in
xchg
lods
adc
xchg
sub
add
inc
or
inc
cmp
or
scas
mov
cltd
add
push
scas
xor
fldcw
ret
addr16
add
xor
imul
and
jp
stos
shll
xor
out
mov
jae
jge
fldenv
pushf
xchg
dec
rorb
lret
lret
es
inc
mov
mov
movsb
mov
mov
adc
shll
inc
or
inc
testl
xchg
es
movl
movsb
sub
xchg
mov
cmpsb
fwait
scas
push
test
loope
mov
cmp
push
pusha
jecxz
dec
adc
push
outsb
lret
ret
cmp
ret
add
iret
imul
mov
sbb
mov
int
pop
int
stos
dec
dec
popa
pop
ror
mov
lods
outsb
imul
adc
push
stos
inc
xchg
and
cmpsl
leave
xor
xlat
mov
mov
cmp
aad
dec
jo
mov
or
sbb
fbstp
push
sub
movsl
hlt
dec
in
aas
push
shl
das
imul
add
adc
dec
je
and
in
inc
pop
dec
es
in
mov
aas
testl
in
mov
daa
cmovg
pop
test
adc
andl
test
push
jle
push
push
and
xor
shll
jl
mov
or
movb
adc
shl
push
xchg
ja
je
jnp,pt
mov
in
fldenv
imull
inc
stc
cmpsl
pop
mov
loope
lahf
mov
mov
lock
ljmp
aad
push
ret
call
shl
lcall
pop
adc
xchg
sarl
cli
dec
sbb
xchg
xchg
stos
push
mov
xor
xor
mov
xchg
mov
or
decb
adc
or
stos
cmp
cmp
sahf
and
xor
push
jne
mov
sbb
inc
lds
jle
pop
adc
into
js
es
mov
mov
jb
or
jno
out
push
call
cmp
adc
hlt
inc
xchg
push
movsl
sub
pop
int3
popf
jp
pop
movsl
mov
dec
xor
xchg
pop
aaa
into
dec
mov
push
mov
movsl
inc
pop
mov
adc
sbb
push
jmp
pcmpeqd
fidivrs
lahf
pop
popf
stos
inc
mov
orb
leave
and
mov
sub
stos
test
xchg
daa
add
in
cmp
cmp
jns
pop
pop
pop
mov
addl
xor
push
jp
jmp
adc
jnp
std
adc
dec
in
sub
xchg
mov
jle
pop
add
xchg
cmp
jmp
iret
jb
add
sarb
mov
mov
cli
cmp
lods
testb
xor
pop
int
imul
out
mov
cmp
dec
and
cmp
imul
mov
add
jmp
lods
ljmp
pushf
and
add
cmp
jmp
fsubrs
repz
sbbl
jo
mov
sub
inc
lcall
outsl
cmpsl
std
lret
xchg
and
lcall
cs
movd
out
lods
mov
ljmp
adc
push
mov
add
push
in
lea
lds
pop
arpl
sbb
pop
cmp
movsl
sub
dec
mov
cmc
fisttps
adc
xchg
add
jae
sub
sbb
pop
jecxz
daa
fwait
repnz
sub
loope
jnp
jmp
loop
inc
lock
xchg
push
adc
mov
out
mov
repnz
hlt
mov
adc
imul
fsts
jecxz
push
add
cs
mov
cmpsb
insb
outsl
pusha
addr16
lds
xchg
aad
lds
xor
and
aaa
test
and
outsl
popf
add
jle
pop
adc
cli
cmpsl
inc
shlb
vpsubb
scas
out
scas
rcrl
lods
int3
stos
test
lret
jns
or
mov
push
pop
sbb
mov
fldcw
dec
xlat
shlb
fldpi
xor
ds
testb
dec
mov
push
mov
inc
std
or
jmp
fdivrp
inc
push
or
pop
cmp
xor
and
out
add
stos
inc
dec
into
adcl
out
leave
jb
inc
jae
cli
jno
shlb
push
jns
xchg
pusha
adc
mov
dec
cmp
mov
cwtl
fsubs
std
xchg
xchg
jmp
sahf
inc
sahf
ss
and
fwait
int3
sub
js
mov
and
push
mov
sub
pop
add
add
lret
loop
mov
cltd
pop
mov
xor
push
mov
pop
aaa
xor
inc
add
nop
fs
mul
push
and
sbb
cmp
lds
imul
popf
jl
jp
xchg
adcb
and
pop
sti
out
xor
sbb
fwait
or
mov
cmp
int
pushf
or
and
popf
jnp
dec
lods
sbb
jae
adc
mov
scas
sbb
je
push
lods
arpl
mov
repz
lods
and
xor
xor
dec
xorb
in
scas
add
lds
into
das
nop
and
add
ret
cmpsb
out
jp
in
leave
shrl
pop
je
mov
cmp
in
mov
xlat
lahf
out
popf
test
andl
addr16
fsubl
cmc
pop
mov
mov
aad
pushf
mov
cmpsl
dec
mov
je
mov
mov
enter
mov
xor
stos
xchg
push
push
int3
cmp
push
sti
or
stc
jns
sbb
scas
fidivs
je
xchg
jmp
dec
pop
pop
xor
lods
mov
bound
andl
es
push
hlt
add
adc
incl
mov
cltd
pop
sahf
insl
mov
mov
or
xor
add
jmp
xor
cmp
push
bound
out
cmp
sub
leave
pop
movsl
cmc
dec
out
arpl
xor
rcrl
inc
push
in
je
les
sub
popf
inc
mov
in
test
into
ljmp
inc
sbb
jmp
push
mov
add
sub
add
sub
nop
xor
cwtl
rcr
mov
jecxz
xchg
push
mov
mov
icebp
mov
popf
push
aas
xchg
test
into
pop
push
insb
adc
std
addl
lods
je
or
in
pop
jmp
jo
scas
scas
pop
sub
jbe
fsubrs
andb
movsl
mov
cli
mov
insl
dec
mull
sub
sbb
lcall
mov
imul
pushf
imul
push
mov
xorl
xchg
daa
mov
mov
lds
rorl
inc
mov
js
mov
ljmp
cmp
sub
jmp
and
sub
jno
cmc
jle
jl
scas
nop
xchg
popf
ret
push
daa
mov
addr16
sti
lea
scas
inc
in
mov
mov
mov
andl
fistl
pop
flds
cmpsl
mov
push
or
jno
jne
sbb
popa
outsb
ss
addr16
mov
in
sub
roll
into
push
int3
mov
push
scas
in
xchg
scas
and
adc
cmp
push
pushf
imul
or
xchg
dec
pop
add
jmp
aaa
stc
or
push
inc
clc
or
fstpl
mov
jge
mov
lock
mov
dec
loopne
xchg
scas
mov
or
cmp
jb
mov
xchg
inc
push
inc
movsb
std
inc
fldt
ja
jl
inc
dec
and
jmp
mov
out
cmpsl
pop
cmpsl
push
pop
jae
cmp
stos
out
dec
mov
mov
push
add
cmp
xor
rclb
sbb
test
sub
arpl
sbb
mov
jg
or
repz
hlt
or
cmp
insl
frstor
jle
test
shlb
cmpsl
lea
lods
mov
sar
adc
dec
shr
cwtl
pusha
es
add
pop
stos
jbe
arpl
mov
enter
vpunpckhwd
out
pop
inc
iret
adc
bound
pop
adc
cmp
roll
xchg
ljmp
and
cmp
mov
pop
les
jg
lcall
adc
xor
pop
jnp
xchg
push
xchg
imul
xor
out
test
or
in
aaa
mov
shrb
jne
adc
daa
jae
mov
les
call
push
and
movsb
mov
xor
aad
sti
das
or
adc
push
sbbb
push
mov
pop
aas
in
cld
ljmp
inc
lea
pusha
push
subl
pop
mov
xor
pop
lods
arpl
lret
xor
mov
ss
dec
test
jg
pop
lcall
sub
out
mov
sub
cmp
pop
add
aas
add
loop
push
and
sub
mov
jmp
adc
xchg
jecxz
or
push
xlat
dec
jecxz
xor
mov
ljmp
ljmp
lahf
mov
fistpl
mov
mov
gs
push
hlt
sarl
xor
xor
pop
xor
popa
lods
popa
in
call
orb
mov
dec
pop
je
add
mov
push
arpl
mov
loop
ret
insb
mov
ljmp
into
cwtl
testb
push
dec
ret
sub
push
mov
dec
loope
rclb
in
jmp
ss
fsubr
jge
cmp
inc
cmpsl
jae,pt
sbb
popa
mov
jg
xchg
hlt
cmp
cmpsb
adc
mov
sbb
cmc
inc
iret
test
lods
outsl
lidtl
icebp
ljmp
xchg
fcmovne
sti
pusha
call
mov
mov
push
in
inc
js
fnstenv
push
fisttpl
sbb
insl
mov
adc
cs
insb
clc
jmp
lahf
sbb
stos
sub
out
es
popa
xor
loop
cmpsl
out
rcll
lcall
pop
mulb
popa
bound
out
into
ret
xchg
xchg
push
cltd
pop
test
fstp
xor
stc
subb
fcmovnb
cmc
lret
pop
mov
push
je
fbstp
jo
pusha
fidivs
cmp
icebp
pop
xchg
sub
bound
jecxz
bt
mov
ja
push
dec
lahf
shll
cmp
mov
dec
dec
movups
pop
jnp
fstpt
movsl
cs
inc
pop
push
jp
fcomps
aaa
int3
bound
enter
into
cpuid
fistpll
sbb
push
sahf
ret
sti
jns
call
or
add
repnz
out
fcomip
dec
cli
hlt
pop
xchg
shrl
lods
loope
ljmp
cwtl
hlt
add
repnz
out
add
xchg
mov
adc
inc
int3
out
inc
ret
shrb
inc
mov
js
dec
loopne
jp
scas
push
out
dec
aaa
sti
sbbl
inc
sbb
inc
out
pop
adc
ljmp
add
xchg
push
push
sbb
or
add
cmp
loope
scas
jge
push
adc
sbb
shll
fbld
mov
dec
adc
mov
cmp
mov
mov
pop
inc
popf
loopne
iret
push
sub
jae
outsl
pop
pushf
stos
pop
loope
testb
lret
lret
mov
hlt
inc
in
xchg
test
shll
inc
gs
sub
stc
cmp
imul
leave
cmp
inc
xlat
enter
push
jmp
xchg
sub
pop
mov
movsl
fwait
sub
add
fistl
or
std
mov
cs
fstpt
sbb
popf
in
push
loopne
roll
fimuls
push
test
rcl
sub
sub
mov
ficoml
mov
mov
push
imul
dec
jecxz
mov
xchg
adc
cmp
push
mov
pusha
pop
push
fdivl
popf
xadd
cwtl
cli
xchg
mov
fdivs
insl
imulb
sti
test
add
es
sbb
stos
sbb
pop
adc
and
clc
mov
push
mov
jg
in
popa
pop
lods
cmp
stos
push
cmp
leave
repnz
cwtl
sub
xchg
incl
out
or
push
inc
and
out
ret
dec
dec
push
push
dec
out
insl
dec
inc
mov
aaa
stos
push
in
lds
push
push
imul
lock
jle
cmp
mov
mov
int
mov
lret
inc
cld
lret
inc
cmp
fdivs
testl
inc
mov
mov
test
or
jb
sar
mov
adc
daa
sub
mov
and
nop
fnstsw
insl
jo
jecxz
adc
sbb
cmpsl
rcr
xchg
js
push
jge
jmp
xchg
inc
cmovs
inc
ja
js
mov
pop
cld
iret
popf
stc
add
in
inc
lods
push
inc
fisubs
das
mov
sub
mov
adcl
bound
jae
cs
sub
mov
dec
mov
lcall
cmp
sub
adc
pop
testl
mov
les
dec
lea
cmc
jle
ljmp
enter
int
out
das
cld
xchg
push
mov
fisubrs
xchg
mov
movaps
pusha
fcomps
rolb
cli
cmpsl
jp
cmp
jecxz
in
jmp
dec
mov
mov
cmpsb
xor
popa
jne
pop
out
sbb
sti
jbe
shlb
mov
addb
sub
mov
pop
mov
js
push
scas
jo
js
push
add
test
je
cmp
mov
mov
lods
adc
lock
cmp
add
xor
lcall
inc
push
iret
dec
data16
int3
cmp
fidivl
sub
sti
push
mov
in
imul
jl
fsubrs
cmp
lret
lret
sbb
loopne
repz
out
negl
adc
imul
sti
mov
int
nop
sbb
jne
pop
movsl
addr16
xchg
jle
not
in
sahf
outsb
mov
dec
lret
int
loope
ljmp
out
dec
out
pop
push
jne
add
nop
xor
aam
push
add
sbbb
cltd
mov
inc
xchg
aad
enter
add
fisubrl
xor
into
push
pushf
imul
jb
sbb
jge
packssdw
ret
je
jmp
negl
loop
inc
iret
stc
inc
je
cltd
insb
in
jne
or
shl
inc
lock
push
cmp
mov
aam
nop
sarl
cwtl
daa
jle
pop
add
or
pop
int
sbb
mov
mov
decb
loopne
lds
sub
adc
hlt
icebp
mov
and
add
push
add
mov
inc
push
mov
insb
bound
or
sub
mov
mov
push
pusha
lcall
sub
shl
mov
test
fxam
mov
xchg
dec
in
add
sub
es
dec
or
push
fsubrl
jbe
fstpt
fs
cld
lods
jg
test
daa
lock
sbb
decb
outsl
gs
push
dec
stc
jp
xor
mov
mov
cld
movsb
dec
adc
inc
enter
jnp,pt
outsl
hlt
addl
sub
xor
xchg
xchg
mov
cltd
sahf
sub
or
xchg
mov
dec
fiadds
movsb
cmp
jmp
movb
or
xchg
and
sbb
pop
sub
lea
push
or
inc
or
mov
cwtl
and
gs
aaa
int
jg
seto
jmp
adc
jo
pushf
or
inc
push
fstl
std
loope
cmpsl
loope
je
adc
sbb
bound
mov
xchg
sub
sbb
xor
es
xchg
cmpsb
mov
sbb
xor
and
mov
pop
pop
cli
push
dec
dec
mov
cmp
testb
rep
ja
cmp
mov
push
iret
aas
push
or
jnp
ljmp
shll
mov
andl
jnp
enter
js
popf
xor
mov
aad
les
push
mov
pop
data16
outsb
loop
outsl
in
stos
pop
fadds
pop
lods
sbbl
and
xchg
daa
sahf
dec
loopne
jp
mov
adc
push
pop
jle
ljmp
sub
sub
std
roll
mov
in
pop
jp
sbb
fs
or
add
ds
subl
shl
mov
push
push
sub
xor
jae
xchg
mov
push
into
jle
ret
mov
inc
fcom
test
pop
in
pushf
cld
adc
jmp
imul
inc
fdivrs
in
add
movsl
clc
mov
dec
lea
nop
xorl
jp
movsb
xor
pop
ret
jmp
or
pop
lret
es
adc
stc
jne
mov
lods
test
into
daa
cwtl
add
ss
and
push
adc
addb
adc
add
dec
aam
nop
pop
mov
mov
inc
pop
sti
and
shufps
xor
jbe
leave
int
outsb
jmp
push
mov
les
dec
sbb
fdivrl
dec
or
out
lds
sub
pop
nop
cld
iret
xor
pusha
ljmp
mov
xchg
dec
and
xchg
adc
or
test
push
mov
inc
in
clc
or
add
insl
jnp
xlat
inc
cs
ret
loope
cli
aas
pop
add
add
sub
mov
sbb
push
addr16
jne
xor
dec
sahf
push
mov
push
insl
push
ret
xchg
ljmp
jae
testl
cltd
test
sub
loopne
xchg
pushf
pop
mov
mov
popa
fldl
mov
shlb
push
inc
les
jbe
sbb
cmp
pop
dec
popa
dec
sti
je
mov
mov
push
push
xchg
scas
jbe
and
and
jb
or
pop
rcl
int
xchg
jge
imul
xchg
push
js
jb
fisttpll
addr16
ss
mov
add
or
mov
addr16
push
fdivrs
mov
xchg
les
lds
data16
sbb
mov
imul
jns
mov
incl
sbb
push
rclb
shr
and
and
jb
stos
stos
jne
xchg
fildll
dec
mov
pop
inc
cltd
orl
cmpsb
or
jmp
clc
mov
cmpsl
scas
rclb
insb
lea
movsb
mov
out
outsl
adc
mov
shl
lret
jbe
xchg
mov
and
jns
test
mov
shlb
xlat
cmp
push
es
xor
xchg
add
mov
add
popf
fucomi
sbb
jmp
pop
lret
dec
sarb
push
add
outsl
push
lock
mov
pushf
fidivl
inc
push
addr16
xchg
scas
inc
mov
jne
das
xorl
pop
scas
add
ds
push
in
mov
cltd
push
push
add
outsl
jnp
jp
fdivs
mov
adc
rorl
mov
movsl
enter
jp
adc
cmp
mov
adc
sbb
dec
imul
imul
jge
add
pushf
cli
cmova
or
cli
push
cld
pop
push
push
popf
movsb
je
aaa
jmp
push
stc
dec
test
mov
aaa
lret
and
and
in
pushf
fidivl
push
cmp
push
dec
clc
pcmpeqb
or
mov
inc
mov
arpl
dec
adc
xor
jo
pop
jo
xchg
cmpsb
sti
stos
fadds
in
jae
jns
popa
aas
push
xchg
add
mov
inc
push
jge
cmpsl
dec
fsubs
popa
add
incl
cltd
repz
ss
stc
popf
loopne
fcmovnb
mov
popf
popa
mov
fucomp
clc
dec
xlat
shl
mov
mov
mov
dec
dec
add
cmp
push
push
aad
sub
jne
fwait
outsb
rol
sar
pop
loop
icebp
adc
sub
divb
add
popf
push
add
into
xor
sti
mov
pop
push
loope
loopne
pop
add
dec
xchg
sbb
test
adc
aam
add
neg
mov
fldcw
add
stos
inc
cmp
outsl
lret
sub
leave
loope
xchg
sbb
mov
lods
pop
shlb
cltd
insb
sahf
push
pop
xor
enter
xchg
and
cmp
push
xchg
into
jne
les
loope
lods
ljmp
pushf
or
xchg
sbb
lods
out
lock
shr
iret
lds
int
loopne
lcall
cwtl
mov
inc
rcrb
lds
sar
inc
movsb
mov
loop
stos
test
xchg
push
mov
fsubl
push
mov
jle
ds
int3
push
pusha
lret
fbld
ret
fdivl
lea
push
jno
int
aaa
sbb
and
lods
inc
sbb
xchg
inc
push
or
jns
pop
push
int
movsl
push
sahf
dec
mov
jnp
sti
sbb
in
negl
cld
mov
enter
sbb
test
ja
roll
push
std
xor
mov
inc
sub
jmp
mov
int3
loopne
mov
adc
movsb
pop
push
sub
xchg
fucom
ja
lods
das
inc
jne
kxnorw
mov
dec
aad
xchg
decl
jg
pushf
jo
test
es
jae
ret
push
adc
adc
xor
divl
pop
pop
adc
movsb
cmp
test
jne
neg
int3
rcrb
rclb
movsb
pop
sbb
sbb
xchg
dec
lock
ret
aam
push
das
mov
loop
xor
push
lods
jg
sub
es
cwtl
sub
dec
insb
cmpsl
aas
sahf
outsb
movsl
cld
ss
pop
insb
push
pop
addr16
movsb
stc
mov
lock
sub
mov
and
lock
mov
adc
stc
das
add
cmp
insb
loopne
push
push
cmp
imul
ss
inc
inc
pop
test
xchg
insl
std
adc
mov
mov
fdivl
arpl
into
popf
cmp
addr16
and
sub
xor
adc
fmul
js
pop
out
dec
sbb
outsl
cs
push
mov
test
or
lds
jp
test
ret
add
clc
sub
loopne
in
pop
mov
dec
xor
repnz
xchg
sub
cs
daa
mov
loope
mov
xchg
xor
test
xchg
mov
and
sub
sbb
and
shl
inc
inc
test
sarl
inc
fisubl
inc
aas
les
leave
xor
rcl
xchg
sub
sti
mov
or
cmp
adc
cltd
out
mov
push
fistl
push
bnd
sbb
push
add
aad
cmpsl
push
and
fwait
scas
inc
int
lods
nop
add
int3
jg
lods
pop
fimull
lods
inc
call
int
adc
dec
int3
ficomps
cmp
mov
ret
push
stos
jae
xchg
mov
ret
test
flds
cs
adc
enter
mov
sub
xlat
gs
dec
stos
orb
inc
std
call
test
shll
jecxz
or
cmp
repnz
dec
in
test
mov
inc
insb
pop
push
sub
pop
mov
lret
cli
dec
popf
mov
lcall
xchg
sbb
out
sbb
adc
jns
add
dec
mov
jle
pop
jo
fwait
inc
movsl
lcall
shrl
jo
add
xor
pop
cmp
cltd
dec
fisttps
cmpsw
scas
lret
dec
add
mov
lea
xchg
fdivp
cmp
iret
push
outsl
jne
or
mov
or
pushf
and
jmp
iret
andl
push
and
lods
cmp
cltd
mov
adcb
imul
shlb
lods
pop
gs
pushf
jnp
jbe
cwtl
jns
int
cmp
in
fwait
stos
jle
push
jmp
jmp
dec
xchg
jl
in
pop
pushf
and
jmp
gs
inc
pop
push
mov
mov
xchg
gs
cs
daa
inc
xor
mov
mov
push
inc
fst
mov
loopne
fstl
and
cmp
shrl
xor
ja
mov
xor
nop
xor
inc
mov
pop
mov
sbb
mov
shll
mov
mov
movsb
add
inc
push
testb
iret
repnz
in
push
xchg
inc
out
cltd
out
mov
push
add
jecxz
add
pop
inc
je
divl
jmp
mov
ss
cli
adc
call
mov
inc
adcl
repnz
mov
pop
sbb
dec
pusha
std
push
rorl
rcll
adc
jno
ljmp
push
shrb
sbbl
jl
xchg
push
xorb
cmpsb
mov
pop
in
rol
fs
sub
add
push
test
adc
xchg
inc
out
lock
int
sbb
xor
fwait
test
fnstenv
or
popa
sbb
mov
in
mov
mov
adc
sub
dec
cmp
popa
bound
mov
int
ja
cmp
lret
xchg
xchg
push
int
and
pop
scas
clc
add
fnsave
xchg
pusha
cs
sti
inc
je
sub
push
test
lcall
lods
stos
loope
orl
xchg
adc
add
xchg
cli
inc
cmc
dec
arpl
arpl
iret
ret
dec
stos
jns
push
or
sar
loopne
nop
fs
or
push
les
jae
cmpsb
jns
jl
mov
inc
in
mov
jmp
repz
test
out
enter
dec
pop
dec
cmp
pop
repnz
push
lds
and
inc
cmp
int
scas
pop
daa
test
jp
adc
test
cld
pop
dec
and
addr16
mov
pop
addr16
inc
sbb
jnp
add
ss
mov
sub
sahf
andl
ja
testb
dec
adc
lods
fscale
addr16
xor
les
and
aas
pop
es
push
lret
push
mov
adc
sbb
aam
sbbb
mov
cltd
mov
repz
add
aaa
mov
push
vmovntpd
jecxz
push
xchg
sub
in
daa
sahf
stc
mov
adcl
xchg
pusha
sahf
push
dec
cmp
rcl
pusha
mov
pop
jo
sbb
xchg
sub
rorl
lock
pop
iret
notb
ds
ret
pop
push
inc
dec
fcomps
add
sar
push
add
lcall
sbb
aad
ljmp
popl
int3
sub
out
dec
sub
ret
jmp
std
jle
leave
mov
sbb
inc
fdivs
push
mov
jno
les
aaa
pop
push
aam
aam
jl
dec
push
jg
into
mov
loopne
das
dec
jecxz
in
pop
rcl
push
mov
cmpsb
mov
or
cmc
adc
xchg
insl
hlt
into
sub
lcall
arpl
xor
mov
clc
stos
cs
sub
mov
fnstsw
jmp
or
sub
xor
test
addl
inc
stc
popf
cmp
add
jecxz
cmp
rolb
ret
outsl
rclb
mov
or
test
xchg
je
jns
mov
dec
dec
or
jbe
sub
iret
push
jmp
movsl
je
mov
jb
or
jg
and
andb
add
inc
cli
cmp
les
dec
push
psubusb
xlat
hlt
inc
stc
out
jp
leave
mov
stos
push
mov
je
fidivs
or
int
mov
pop
pop
ja
pop
repnz
loopne
lds
dec
imul
push
ret
lods
xchg
scas
sbbb
icebp
leave
das
mov
test
shl
xor
and
cmp
sub
adc
les
sbb
mov
push
daa
sbb
inc
stc
mov
ror
bound
pop
xlat
test
push
jmp
mov
subl
loopne
sbb
and
loop
stos
push
call
pop
push
imul
push
push
mov
adc
or
xor
pop
mov
imul
xchg
xchg
jbe
or
or
cs
fbstp
shlb
mov
scas
and
jae
test
sti
sbb
into
dec
push
jmp
insb
mov
insl
es
cmpsb
pop
inc
ds
jp
mov
adc
orl
xchg
push
cmpsl
mov
mov
fdivp
pop
mov
mov
jb
shll
arpl
into
out
mov
inc
mov
nop
cmp
dec
jne
andl
sbb
mov
lods
clc
pop
inc
sub
pop
fisubs
jle
push
fdivs
jae
in
push
and
nop
add
inc
pop
or
pushf
in
mov
mov
pop
ror
pop
cltd
dec
icebp
push
push
push
or
cmp
push
xlat
out
clc
add
pop
not
mov
mov
push
dec
ss
ret
test
arpl
and
mov
dec
fs
out
and
cmp
cmp
adc
aam
pop
call
add
inc
lcall
cwtl
sub
sbbb
loop
xchg
enter
dec
cmpsl
fidivrl
xor
aam
iret
pop
js
jle
jb
aaa
fiadds
adc
push
negb
pop
int
dec
arpl
in
adc
in
xchg
push
in
xor
in
aam
sbb
aad
xchg
jne
aam
xchg
outsl
xchg
xchg
cmp
sbb
sbb
cmp
dec
jbe
inc
add
cmp
movsb
xchg
xor
jbe
pop
cltd
dec
loope
sbb
scas
fcoms
in
clc
mov
lods
dec
mov
pusha
lea
jge
add
push
imul
or
fsubrs
fs
cmp
xlat
xor
pusha
xchg
addr16
repz
mov
testb
mov
dec
jbe
sbb
jecxz
pop
inc
gs
jns
out
cwtl
aam
mov
addr16
jecxz
xor
clc
enter
or
in
push
dec
mov
pop
sbb
sahf
insl
inc
or
adc
cltd
std
lock
sub
or
and
xor
cld
sub
lods
mov
cmp
ficoml
pop
out
shlb
jno
mov
xor
sub
roll
jnp
pop
push
insb
or
or
enter
cmc
sub
fnstenv
lahf
inc
shl
push
mov
xchg
mov
jge
lret
push
ficomps
lods
xchg
mov
es
and
mov
nop
or
sub
jns
adc
repz
mov
mov
pop
movsl
sub
aam
dec
push
or
or
or
mov
xor
jno
pop
rclb
iret
push
inc
leave
int
inc
lds
mov
dec
scas
out
fwait
scas
and
in
xchg
add
inc
xor
jp
dec
in
test
xchg
js
mov
jecxz
in
or
add
pushf
test
lret
test
jg
jg
shlb
loope
notl
dec
out
test
mov
mov
call
frstor
add
popa
mov
sahf
dec
fisubrl
lret
bound
jns
loop
cmp
add
jl
jge
pop
movsb
sahf
xchg
pop
sti
pop
xchg
inc
sub
pop
in
xor
cli
or
out
lret
cmp
pop
push
adc
es
filds
jb
cs
cmp
sbb
popa
out
cmpl
or
cmp
lea
sub
and
or
or
stos
ret
inc
shrl
jbe
xchg
add
cmpsl
cmpsb
cmp
jle
pop
sahf
or
push
xchg
jno
loope
mov
stos
popl
jbe
xor
inc
dec
popa
loop
das
mov
cmp
inc
fsubl
ss
lds
sti
fbld
sbbl
decl
popa
incl
sub
popf
test
outsl
daa
or
daa
cmpsl
andb
xorl
mov
push
aas
add
dec
nop
push
cmp
adc
sahf
std
enter
inc
jmp
xchg
out
pop
sbb
push
mov
sbbl
add
ss
cmp
subb
pop
test
stos
mov
sti
add
scas
int3
add
ja
and
dec
xchg
outsb
sbb
dec
out
add
dec
loope
xchg
rorb
inc
les
jge
out
mov
mov
sbb
jmp
push
or
std
xchg
outsb
out
cltd
sub
in
test
or
out
sbb
fnstsw
scas
adc
jmp
cmpsl
sub
dec
subb
push
hlt
cmp
inc
stos
pop
push
cli
gs
int
mov
dec
mov
out
sub
dec
jbe
pushf
inc
rcrl
jne
lds
adc
jns
adc
test
pop
xor
inc
or
ja
jmp
jmp
fbstp
and
lods
loopne
sub
arpl
insb
add
icebp
jne
dec
loop
movsb
dec
aad
xor
pop
jmp
mov
inc
cmc
mov
les
insl
shll
decb
mov
lds
loop
ficoml
mov
outsl
int3
aad
ljmp
imul
loop
sub
outsb
jo
pop
mov
shlb
adc
inc
inc
dec
mov
insb
cmp
call
enter
fnstsw
enter
push
dec
mov
aad
lcall
bound
aad
and
add
insb
cmp
xor
cmp
push
jo
adc
pop
iret
add
mov
cmp
mov
flds
loope
or
mov
mov
jp
lods
test
push
hlt
shld
cmpsl
ds
orl
sub
roll
mov
pop
lahf
popa
sub
movsl
cmp
or
push
in
int
movsb
mov
push
outsb
inc
mov
das
gs
add
xchg
jl
repz
sarl
jl
and
ret
in
out
dec
push
popf
cmp
lods
lods
xchg
xchg
stc
inc
lret
pop
mov
xchg
rclb
fsts
movsl
xchg
push
fiaddl
pop
pop
aaa
mov
test
sbb
and
mov
cld
lcall
or
xor
mov
sub
out
mov
sarl
and
or
or
fs
mov
mov
and
push
leave
dec
xchg
addr16
insl
push
push
sarl
pop
xchg
xor
ljmp
pusha
ss
push
ljmp
cmp
out
js
cmp
std
jl
sub
inc
mov
pop
negb
in
jge
cltd
pop
pop
out
nop
push
int3
int3
into
call
int3
jnp
ret
out
sbb
jb
jae
cld
dec
das
push
out
cmpsl
xchg
dec
or
sbb
int3
cltd
xor
dec
dec
in
cli
xor
mov
in
jmp
cmp
ss
or
dec
cmp
sub
movsb
pop
in
sub
mov
das
shrl
sbb
imul
or
xchg
cmp
mov
cmpb
popf
rcrb
jmp
mov
sahf
clc
mov
add
xchg
cmp
inc
enter
mov
push
movsb
xlat
fists
xor
xchg
notl
push
fstpt
cmpxchg
hlt
aam
dec
hlt
test
lds
fbld
sub
aad
mov
icebp
xchg
repz
lcall
and
sahf
daa
mov
push
fsubr
ljmp
in
mov
jmp
stos
add
mov
jle
sbb
mov
in
mov
out
push
push
inc
inc
jae
xchg
dec
lahf
in
xor
andb
loopne
pushf
mov
data16
sbb
push
add
shll
stc
dec
fmulp
xchg
bound
lock
jl
enter
jbe
iret
pop
adc
data16
hlt
fisttps
rcrl
nop
stos
or
and
adc
or
outsb
and
loop
pop
int3
fucomp
sub
test
or
mov
push
loop
cmp
lds
bound
scas
jnp
pushf
sub
aad
inc
int
imul
movsb
inc
std
stc
jp
shr
insb
jne
mov
xchg
hlt
fidivl
dec
lods
cwtl
lods
and
and
cld
sbb
testb
jno
mov
push
mov
mov
js
lcall
xchg
xor
mov
movsb
inc
xchg
pop
cmpsb
sbb
and
popf
fincstp
rorb
mov
or
fwait
cld
push
xor
xchg
movsl
orb
sub
insb
inc
push
sbb
push
and
cmp
xor
ljmp
mov
push
pop
xor
dec
pop
imul
and
cwtl
hlt
es
out
mov
daa
sub
add
mov
and
inc
xchg
push
xor
push
sub
shlb
pop
mov
pop
push
jmp
add
aad
subl
repnz
cmp
adc
jle
and
jb
jl
out
std
mov
mov
add
jnp
pop
mov
jp
or
insb
xchg
dec
push
ret
ficompl
frstor
fstps
push
mov
sub
shlb
mov
mov
adc
pop
leave
imul
test
js
inc
bound
lcall
pop
aas
enter
into
push
je
pop
jbe
or
lcall
lahf
out
daa
inc
pop
aad
daa
sub
pop
jmp
xor
xchg
dec
rclb
or
aas
jmp
aaa
xchg
je
sub
addr16
jmp
sub
sar
xchg
mov
cmp
or
rcl
call
fdivrs
push
mov
insb
cmpb
push
lahf
sub
xchg
mov
mov
rorb
adc
in
fwait
outsl
push
pushf
cli
fidivl
clc
imul
addr16
pop
jle
std
imul
cmp
add
js
stos
mov
jle
test
mov
or
fistpl
mov
cmp
mov
repz
jbe
cmp
int3
adc
data16
rol
inc
repnz
add
xor
mov
push
orb
xchg
sub
stos
mov
sub
int
ss
mov
xor
pushf
xor
xchg
or
jbe
iret
js
in
shll
stc
and
cltd
cs
mov
adc
or
nop
aaa
insl
sub
cmp
ret
jle
or
inc
ret
nop
push
insb
in
mov
mov
pop
test
arpl
repnz
jo
int
pop
fldcw
xor
aam
cld
xchg
xchg
inc
dec
mov
stos
mov
push
cld
lret
adc
push
pop
and
fxch
jns
add
jle
fsubrs
push
inc
pop
repnz
nop
and
cld
pop
sub
nop
jae
sarb
in
adc
cmp
pop
or
mov
pop
lods
pop
clc
and
dec
jbe
out
adc
push
fwait
cs
in
cmp
ja
subb
inc
ficoms
int
adc
jnp
popa
fdivrs
inc
xchg
js
cmc
jnp
dec
add
cmpsb
xor
mov
or
das
in
sbb
int
mov
scas
sbb
xor
cmpl
sub
xchg
xchg
popf
inc
pusha
iret
mov
rol
ss
jecxz
fucomip
inc
mov
std
mov
stos
push
cmp
mov
xor
mov
dec
inc
sub
mov
sub
add
lea
aaa
inc
fsubrs
lea
jmp
fidivl
push
jle
or
pop
outsb
int
int3
dec
push
ss
add
loopne
sbb
adc
push
je
imul
imul
sub
into
lahf
jnp
mov
pushaw
popf
or
dec
push
out
sbb
lahf
popa
ljmp
fbld
mov
push
test
jne
cmpsb
and
pushl
add
pop
jb
xchg
jecxz
cs
jecxz
mov
ficoms
repz
jle
fcom
push
mov
ret
jle
out
andl
fistps
push
sub
outsb
subb
mov
sub
lahf
fwait
cld
jbe
dec
aad
adc
fistpl
loope
loope
fsubs
mov
or
scas
out
fwait
in
cmpsl
sbb
xchg
add
push
adc
movsb
and
push
faddp
dec
aad
in
std
adc
add
imul
je
and
pop
jl
loop
mov
mov
div
js
and
aas
dec
shl
test
or
sti
sahf
or
adc
xchg
and
loop
cmc
fsubr
xchg
rcr
xchg
inc
lods
cmp
dec
jmp
mov
jmp
pop
addl
fcoml
sub
cmp
int
les
int3
pop
sub
cmp
mov
push
andl
dec
iret
sbb
or
in
xchg
sub
outsl
outsl
push
popa
inc
lret
xlat
jb
adc
jae
out
push
int3
mov
xor
push
adc
adc
jbe
arpl
imul
fstps
xchg
scas
push
mov
jae
pop
dec
pusha
jl
pop
addr16
inc
seto
mov
push
test
enter
es
push
int
lret
mov
jmp
orb
dec
mov
add
hlt
push
ret
repz
xor
inc
sti
mov
mov
lret
jge
aam
jno
movsb
adc
ret
add
adc
jno
lods
sub
divb
out
add
inc
icebp
mov
jg
add
enter
push
clc
jmp
rcrl
sar
es
fwait
xchg
add
stos
cld
outsl
adc
icebp
rcrb
sbb
into
roll
push
mov
shlb
lahf
pop
imul
ret
fnsave
pop
xor
lea
pop
jmp
in
mov
pushf
mov
mov
loope
imul
adc
sbb
inc
sbb
dec
xlat
aad
notl
xchg
adc
sahf
xchg
subl
or
mov
push
cmp
cmp
inc
addr16
xlat
rorl
mov
inc
insb
sub
fwait
lret
xor
sti
sub
les
sbb
adc
lcall
inc
cwtl
stos
loope
fs
fadds
leave
arpl
daa
shr
sub
testb
dec
inc
popa
pop
add
xor
jp
sti
gs
sbb
cwtl
dec
out
adc
fs
loope
cmp
add
pushf
mov
rcrb
mov
std
jge
jge
in
jno
pop
es
dec
pop
xchg
inc
mov
cli
hlt
jnp
mov
ret
jnp
add
jno
jae
dec
jecxz
fwait
clc
and
ret
mov
mov
loop
lret
and
sbb
cmp
and
in
iret
data16
aad
in
shl
cli
pop
inc
adc
dec
lahf
xor
insb
inc
hlt
dec
cmp
ret
clc
lret
mov
movsl
cmp
pop
cld
cmp
pop
shlb
punpckhwd
outsb
or
cmp
xchg
push
and
mov
into
cwtl
inc
test
mov
mov
out
loop
cmp
mov
ljmp
jge
pop
rcr
aas
icebp
fwait
daa
sbb
mov
mov
pop
pushf
jg
inc
xor
cmpsl
or
stos
mov
adc
push
jno
lods
jg
xchg
push
cmp
xor
outsb
dec
inc
jmp
es
xor
mov
cltd
rcr
and
arpl
push
xchg
mov
dec
xor
dec
in
aam
add
das
out
cmp
rorl
clc
hlt
fistps
imul
pop
outsb
clc
insl
sbb
test
mov
jne
xchg
pop
fidivrs
out
loopne
xlat
decb
jle
out
sbb
leave
fwait
push
pop
push
dec
adc
mov
and
jmp
push
sti
jmp
loopne
sub
fnstcw
xor
jmp
push
fsubl
sbb
mov
ss
jne
cltd
jo
jle
xchg
jmp
xor
int3
xchg
outsb
jae
cmpsl
dec
aam
or
or
adc
push
fdivr
dec
aaa
xlat
add
xor
pushf
inc
in
jmp
or
stos
xchg
or
mov
sbb
jno
loop
pusha
xorb
dec
inc
fsts
jbe
loope
jo
mov
sbb
mov
or
arpl
mov
push
roll
and
pop
dec
inc
sub
pop
xchg
les
adc
popf
add
jecxz
icebp
loop
push
xchg
cmpsl
ds
sub
je
stos
push
sbb
cmp
adc
dec
minps
addr16
iret
cmp
mov
mov
loop
or
cmp
xchg
cs
mov
out
cwtl
mov
mov
mov
je
lcall
jbe
enter
push
test
ss
aas
dec
frstor
jg
js
pushf
lods
movl
cmp
cmc
xchg
in
insb
test
mov
negb
mov
adc
dec
mov
push
adc
xor
imul
jmp
repnz
mov
push
leave
int
sub
jg
scas
inc
shr
aad
push
or
jecxz
int
or
inc
xor
inc
gs
mov
dec
out
call
jmp
mov
out
insl
outsl
cmp
inc
xor
fcoms
mov
add
test
lods
cmp
xchg
mov
pusha
pop
out
pop
imul
inc
mov
push
lret
bound
gs
dec
loop
jne
mov
aam
outsl
or
mov
or
das
and
jle
int
sbb
xchg
andl
cmp
or
cmovno
xlat
ja
push
aam
scas
pop
repz
dec
sub
mov
out
fistpll
leave
cmp
adc
and
gs
std
dec
pusha
das
add
movsb
cmp
pop
cmp
mov
outsl
push
sbb
xchg
cmp
sbb
sub
push
lock
fldl
divb
mov
enter
adc
popf
and
roll
dec
ret
stos
sub
loop
pop
add
es
pop
rolb
rolb
ja
mov
push
leave
lret
pop
cmpsb
fdivs
jne
xlat
sbb
dec
insb
sbb
aaa
jno
jecxz
popf
mov
add
imul
mov
or
xsha1
cmpsb
dec
arpl
sbb
aaa
insb
adc
sbb
imul
push
xchg
mov
cli
movsl
mov
or
jns
orb
rorb
fcomp
cmpsl
test
sahf
xor
mov
sti
or
add
xchg
orl
pop
add
xchg
mov
lods
sahf
stos
cmp
lods
dec
jbe
jge
sbb
adcl
lret
inc
mov
int
push
fisubrl
mov
jnp
lcall
add
fistl
or
mov
mov
fiadds
push
inc
stc
jnp
rcl
mov
jno
and
inc
sub
in
rcll
ret
loop
std
hlt
mov
push
mov
test
test
push
jmp
cwtl
hlt
inc
mov
push
jno
sbb
push
jp
mov
fidivl
es
add
loop
xor
inc
jle
lahf
mov
push
iret
fisttpl
lcall
outsl
and
lahf
stc
in
das
addl
xchg
and
mov
sbb
aad
lretw
cltd
xchg
subb
lahf
sub
push
push
je
js
lds
adc
lods
sbb
mov
out
push
mov
inc
imul
icebp
inc
pop
jne
cmp
enter
adc
xor
pushf
fs
sbb
fadd
jle
fidivs
xchg
pop
sahf
out
jo
pop
out
inc
aam
xchg
xor
iret
xchg
pusha
aas
jmp
cmpsb
push
inc
mov
and
or
repnz
xchg
movsl
mov
inc
hlt
sbbb
fs
push
push
dec
jb
lods
shlb
out
cmpsl
imul
push
pop
sahf
fisttpl
pop
cmp
push
iret
push
push
repz
cld
cmc
adc
push
into
outsl
addr16
mov
dec
pusha
sti
outsl
or
idivl
sti
jbe
call
sbb
pop
out
lods
mov
cwtl
lret
mov
shll
lcall
inc
subb
adc
cs
inc
fisubl
pusha
call
cmp
jbe
pop
adc
int
add
xchg
cmp
or
sub
add
mov
jg
push
clc
sub
mov
mov
aad
and
or
daa
mov
inc
inc
pop
add
loopne
fcom
xor
das
pop
mov
insb
adc
jbe
sub
xor
mov
dec
lods
popf
adc
loop
mov
pop
mov
ror
fsubl
sub
xchg
leave
adcb
das
stos
hlt
dec
and
rcrb
inc
and
push
std
loop
scas
sub
insb
insl
mov
jmp
pop
rol
dec
push
push
jns
push
in
or
in
orb
icebp
clc
stos
cmp
dec
push
inc
mov
je
sub
test
in
cmp
adc
test
xlat
rcll
fldenv
int
or
push
outsl
rcrl
leave
inc
and
bound
push
jmp
cmc
fwait
test
jge
mov
and
sub
imulb
in
mov
push
mov
xchg
xor
dec
sti
icebp
inc
inc
call
sub
sarl
shll
xchg
cmp
jmp
call
dec
imul
outsb
lods
adcb
add
cwtl
repz
test
mov
mov
push
dec
push
mov
and
cmc
sbb
rol
push
mov
xor
mov
arpl
js
mov
cmp
cmp
test
inc
sub
clc
in
sub
sbb
lods
fimuls
int3
nop
mov
mov
test
insb
icebp
insb
pop
ret
and
out
jo
hlt
sahf
inc
mov
and
fwait
jle
std
mov
push
repnz
and
cmpsl
popf
in
lods
mov
cs
ret
cmc
inc
cmp
dec
dec
adc
nop
movsb
sbb
sbb
dec
cmpsb
mov
fsubrs
xchg
mov
xor
pop
aaa
inc
cwtl
out
popf
sub
fcomps
dec
fs
popf
mov
out
sti
int3
sub
add
repz
insl
and
shl
sub
and
ret
cmpsl
jnp
xlat
dec
mov
or
xor
scas
sub
sbb
mov
movsl
or
xlat
mov
aam
jne
jp
ja
cmpb
adc
lea
loop
call
push
stc
mov
lret
sub
pop
mov
popa
enter
add
push
push
adc
cmc
pop
dec
daa
xor
bound
inc
adc
mov
mov
repnz
push
dec
stos
inc
jnp
out
mov
push
das
push
shlb
scas
cmp
mov
ret
jns
mov
push
push
cmp
mov
stc
jl
popf
jno
arpl
mov
loop
or
add
push
mov
jb
aam
mov
test
gs
int3
test
xchg
fbstp
lea
into
in
inc
adc
gs
movsb
jmp
test
pop
adc
jno
cs
mov
out
cwtl
jp
push
and
fstpt
push
jne
cwtl
cld
hlt
or
and
jno
pop
inc
dec
fxam
in
das
pop
scas
jecxz
mov
stc
xchg
fsubrs
aad
dec
dec
pushf
pop
cmp
cmpsb
jo
push
mov
cmp
pop
repz
inc
push
jmp
cmp
sti
xchg
fstps
and
in
or
icebp
popf
pop
adcl
push
cltd
mov
ds
pop
repnz
xchg
movntps
sbb
add
xor
mov
aaa
in
lret
and
imul
pop
cmp
mov
pop
sahf
stos
cmp
int3
arpl
ljmp
pop
aam
jp
jnp
cltd
pop
dec
adc
push
lods
mov
or
and
and
mov
add
ficomps
pop
jo
jne
lock
icebp
mov
in
xor
push
mov
shll
jp
and
xchg
fadds
faddl
sti
jg
test
xor
mov
sbb
push
ficomps
movsl
add
push
bswap
fwait
mov
popf
pop
hlt
push
mov
add
addr16
mov
sqrtps
sub
cltd
enter
sets
je
xlat
icebp
aam
adc
ficoml
cmp
negb
test
cs
jo
outsb
rcrl
into
daa
push
scas
sbb
sbb
add
and
scas
dec
adc
loopne
ja
js
stos
xchg
nop
and
inc
fsubrp
inc
popa
ljmp
dec
lret
aaa
sub
pop
add
cmpsl
mov
inc
push
jno
inc
arpl
cmp
sub
cld
sbb
ret
sbb
leave
movsl
aad
mov
and
push
jnp
inc
pusha
divl
out
mov
aam
dec
mov
aaa
into
push
in
xchg
jae
mov
lret
add
cmp
adc
into
sbb
mov
andl
data16
jle
sahf
mov
sbb
mov
inc
call
outsb
lods
sbbl
jo
adc
shll
push
jecxz
xchg
mov
add
cli
push
or
pop
repz
add
sbb
adc
sbb
inc
popf
lret
fadd
insb
shr
mov
mov
mov
lock
sbb
lcall
cmc
sbb
aam
mov
xchg
push
mov
cli
addr16
lret
sub
stos
in
xchg
pop
xor
xlat
and
push
lods
outsl
jnp
mov
jg
leave
push
iret
call
mov
jecxz
xchg
ss
xor
das
pop
push
pushf
mov
pop
test
xlat
inc
arpl
add
mov
lahf
fstps
pushf
push
faddl
in
xchg
jae
mov
int
in
dec
and
xor
jge
pop
mov
mov
pop
sets
sbb
pop
mov
icebp
xor
into
xchg
adc
xor
arpl
les
mov
pop
frstor
mov
out
test
int
mov
aas
adc
xchg
adc
mov
frstor
inc
fcompl
out
push
mov
out
fsts
aam
pushf
inc
sti
test
mov
std
and
jmp
cmp
ljmp
push
scas
xor
jnp
pop
nop
pop
sub
lahf
nop
das
daa
dec
push
je
stc
int3
jae
ficoml
imul
mov
dec
push
pop
iret
cmp
mov
add
pop
xchg
mov
fnstenv
push
push
in
cmp
pusha
pop
ret
fisubrl
sub
sti
xchg
jnp
aas
jo
sub
mov
mov
and
push
mov
push
incb
cmc
sub
out
mov
scas
add
bound
mov
mov
fstps
data16
xor
hlt
mov
add
je
sbb
sbbl
pushf
lods
mov
pop
idivb
xchg
in
cmp
sub
fwait
inc
cld
adc
inc
int
ja
and
loopne
pop
and
add
mov
shl
jg
pop
xor
mov
and
mov
push
aas
leave
pusha
mov
inc
popf
stos
out
pusha
jmp
daa
out
test
mov
push
add
shl
test
faddp
iret
cs
sbb
test
and
inc
fwait
sti
test
mov
push
in
add
inc
push
sub
jne
bound
lods
pop
cmpsb
or
cmp
push
xchg
xchg
iret
xor
cwtl
mov
popf
and
jle
cmp
lds
jne
popa
add
lods
inc
inc
and
cmc
jge
aas
fcom
sbb
sahf
dec
dec
dec
out
es
imul
dec
ds
xchg
stos
je
fdivrl
jmp
sub
movsb
iret
mov
popa
jnp
sti
or
or
shr
movsl
pop
mov
ds
mov
xor
fdivr
xchg
lret
lret
dec
push
dec
add
cmp
loop
xor
mov
push
in
jmp
out
testl
dec
cs
repnz
add
xor
ret
pop
adc
push
xor
aas
push
xor
sub
xchg
addr16
xorb
dec
dec
inc
pop
cmc
xchg
stos
xlat
jno
mov
adc
clc
adc
lcall
mov
jl
add
ficoms
xchg
sub
adcl
xlat
pop
mov
shlb
sbb
aam
xchg
jne
sahf
mov
dec
enter
daa
ljmp
inc
popf
cmp
fldenv
sub
test
adc
xchg
mov
xor
in
and
jl
fidivrs
mov
pop
mov
mov
jmp
addr16
mov
ds
push
push
xor
and
pop
fnstenv
repz
mov
xor
jae
push
xchg
sub
xlat
mov
mov
dec
sbb
jl
xor
sbbl
adc
test
inc
xchg
mov
sarb
jb
pop
mov
or
nop
sub
push
pop
loop
push
fildll
xor
xor
mov
gs
out
inc
add
xchg
fwait
scas
int
addl
bound
test
dec
mov
push
sub
jmp
xor
xchg
mov
mov
mov
xchg
xlat
adc
nop
inc
mov
xchg
hlt
mov
pop
adcl
cs
stos
nop
fidivrs
sahf
fdivs
dec
cmp
sbb
pushl
loopne
addl
lret
insl
adc
sahf
dec
cs
mov
bound
mov
dec
sub
gs
insb
xchg
pop
lds
push
out
add
xchg
inc
pusha
out
xor
aas
pop
sahf
jo
mov
mov
lods
inc
cmp
push
aaa
stos
or
outsl
mov
scas
out
push
mov
xor
or
sbb
imull
cwtl
cmp
cli
dec
sub
nop
adc
or
cltd
js
lret
in
jmp
stos
inc
je
repz
imul
data16
or
icebp
mov
and
imul
lds
fldl
mov
xlat
sbb
pushf
jnp
inc
adc
mov
xor
loop
popf
jg
push
shll
cwtl
dec
jo
mov
mov
addr16
out
xor
mov
inc
or
sub
adc
mov
push
sbb
data16
loope
orl
inc
out
xchg
sti
or
mov
lret
push
add
push
and
scas
pop
xor
mov
je
outsl
imul
pushf
pop
into
pushf
hlt
jbe
pushf
scas
pop
mov
leave
int
add
lea
out
stc
popf
inc
and
mov
gs
push
jecxz
xchg
cmp
pop
pop
jl,pt
fisubrs
mov
fstps
fdivrs
movsb
or
inc
int3
pop
scas
fldenv
pop
cmpsb
ds
add
cmp
xor
sub
jns
ret
and
xor
lods
dec
xchg
ficoml
push
mov
and
xor
mov
add
ret
dec
inc
cmp
mov
push
jno
in
les
aaa
cltd
into
popa
jmp
call
outsb
pop
into
cmpsb
add
mov
stos
or
mov
fiadds
aam
das
jae
jo
xchg
push
sub
or
ja
inc
xchg
or
mov
lret
push
mov
call
and
ljmp
pop
sub
xchg
push
std
and
jmp
mov
mov
lahf
test
aas
dec
outsl
push
aaa
aad
sbbb
rclb
cmp
cwtl
jnp
inc
xor
or
fistps
dec
sbb
cmp
cltd
mov
clc
fimull
clc
test
outsl
sbb
push
repz
push
bound
push
xor
sbb
adc
pop
jg
lock
mov
or
int
js
hlt
in
sbb
push
cmp
pop
les
or
enter
cmpsb
mov
enter
gs
push
pop
pop
dec
movsb
mov
push
insl
sub
pusha
mov
jge
inc
mov
jne
add
add
fisubl
or
int
shr
in
adc
mov
cwtl
icebp
adc
lea
xor
mov
fs
shrl
es
jl
dec
mov
pop
adc
rcr
jno
mov
int3
test
inc
xor
outsl
inc
push
xchg
push
jb
xor
add
cmp
cli
mov
out
pop
leave
test
push
frstor
xsha1
cmpsb
mov
sub
pop
inc
jo
mov
mov
jg
pop
out
fcompl
movsl
sbb
dec
ljmp
jb
inc
push
push
or
out
cmp
xor
xchg
adc
ds
xor
arpl
movsl
sbb
test
dec
push
adc
dec
mov
nop
sub
mov
cmc
and
mov
fcoml
cld
dec
dec
stos
sbb
pop
sbb
mov
icebp
adc
pop
shlb
jo
xor
imul
jne
inc
cmpsl
adc
movsb
jns
jg
int
cmp
clc
dec
mov
dec
mov
dec
hlt
mov
xor
mov
jns
cmp
sub
add
outsb
adc
stos
xor
pushf
push
mov
sub
cmpsl
sbb
adc
xor
mov
jnp
movsb
jns
adc
subl
stos
shlb
xchg
push
push
xchg
cld
ret
cmp
in
orl
mov
and
xlat
adcl
mov
mov
adc
dec
xchg
sub
add
icebp
fists
jbe
leave
je
mov
es
clc
mov
aaa
enter
test
fcmove
arpl
mov
adc
outsb
gs
loopne
sbb
inc
in
ret
add
out
add
fnstsw
cmp
inc
jge
cmc
sahf
shl
sub
ficoms
in
stos
call
out
cld
test
xor
and
js
pop
adc
xchg
pop
lcall
sbb
outsb
fmul
adc
jae
cwtl
lock
leave
es
mov
shll
push
xlat
jbe
shrl
lock
sarb
out
cmp
das
mov
cltd
enterw
cmpsl
cmp
jle
stos
cmp
icebp
arpl
fisubrl
rol
jno
mov
iret
leave
pop
mov
rcrl
inc
dec
cmp
adc
inc
push
sarb
addl
aaa
pop
mov
pop
rcr
xor
mov
jle
or
push
mov
or
cmp
movl
out
and
fisubrs
lds
fdivrs
dec
push
push
pop
pop
testb
call
mov
jle
out
out
adc
push
jge
jnp
subb
xchg
or
and
stos
jbe
lret
mov
addr16
fcompl
mov
insb
xor
repz
and
and
mov
add
add
or
jo
aaa
jae
out
out
inc
ret
inc
push
ja
and
push
push
cld
xchg
xchg
or
into
adc
or
ljmp
mov
ss
negb
mov
inc
cltd
das
jns
and
pop
lcall
push
clc
inc
ficompl
fistpl
imul
jge
out
sbb
fdivrl
push
nop
mov
mov
lret
aad
mov
xchg
mov
mov
mov
insl
test
lcall
jp
xchg
jo
mov
mov
cmp
pop
es
popf
lods
out
xlat
fnstenv
test
and
or
out
mov
mov
pop
int3
jl
adc
in
and
inc
ss
pop
mov
fldcw
inc
or
fisttps
in
or
sbb
push
icebp
mov
sti
mov
push
xor
cmp
add
mov
pop
or
iret
popf
fbstp
mov
or
push
es
mov
mov
sub
movsl
fadds
imul
push
fdivp
mov
lock
fwait
mov
int3
pop
pop
dec
mov
loopne
cmp
add
or
jle
fadds
sub
dec
push
out
mov
aam
push
psadbw
sbb
adc
jge
xor
add
fdivrl
inc
xchg
hlt
in
sub
sub
aas
leave
fistl
adc
jb
push
in
adc
out
or
test
xchg
pop
jae
je
test
out
or
into
jno
sbb
sub
push
test
aaa
mov
jl
inc
shll
mov
pop
cmpsl
inc
xchg
mov
movsb
fidivrl
mov
aaa
push
add
test
mov
mov
mov
xor
and
push
or
cltd
mov
xchg
mov
insb
icebp
mov
push
adcl
dec
or
insl
sub
fdiv
sub
sbb
popa
mull
ret
mov
pop
loop
add
jb
mov
adc
jae
rol
mov
jge
push
xor
xor
inc
call
xchg
push
cmc
sub
mov
pop
or
mov
push
and
add
bound
xchg
xchg
inc
in
xchg
pop
cwtl
cmp
jb
sub
ds
outsb
rcll
sbb
arpl
sti
fwait
ds
cmp
rcl
mov
pop
sbb
and
push
leave
xor
in
test
mov
cmpsb
jbe
or
adc
xchg
add
adc
pop
inc
xor
cmp
je
imull
repnz
pop
cmp
imul
mov
and
xchg
sub
test
decb
mov
outsb
cmpsb
mov
int
xor
stos
fs
scas
cltd
sbb
sbbl
and
mov
pop
aas
jp
sarl
push
push
bnd
or
lea
cmp
arpl
inc
es
jge
add
push
mov
mov
cmp
sbb
leave
jg
or
inc
mov
out
xor
cmp
and
inc
inc
and
testl
fsubp
clc
adc
jle
mov
cmpsl
loop
add
mov
inc
imul
arpl
mov
rcll
jnp
adc
dec
rcrl
adc
lahf
out
mov
push
mov
cmp
mov
sub
sub
push
gs
clc
es
ret
add
jno
mov
dec
sbb
mov
push
mov
outsb
or
xchg
jge
xchg
ficoms
jne
cld
cltd
jne
xchg
aad
notl
outsb
inc
mov
xchg
cld
pop
aam
mov
xorb
into
sahf
inc
scas
xchg
int3
dec
mov
loopne
or
cmp
xchg
jmp
mov
popf
lea
lock
add
jns
mov
inc
add
jae
push
and
fcomip
dec
inc
stc
xlat
xchg
mov
add
push
xchg
and
nop
cmp
mov
and
inc
cmp
sub
lahf
testl
push
nop
out
into
outsl
jnp
jl
in
test
and
in
add
mov
xlat
cmpb
xchg
andb
mov
fdivl
popf
insl
push
ss
and
and
leave
jecxz
and
addb
out
dec
aam
or
cmpsl
jne
nop
xor
push
in
adcl
lea
ds
jge
xor
jge
xor
pop
cmp
orb
fwait
mov
out
xor
push
jmp
push
aaa
test
xchg
std
leave
test
aas
xchg
add
sub
mov
push
cmpl
mov
pop
movsb
pop
adc
dec
jg
push
jne
lret
imul
frstor
sbb
push
arpl
or
push
je
xchg
imull
in
test
lret
xor
int
fsubrs
ss
or
jp
enter
rol
mov
mov
xchg
enter
sbb
add
mov
xor
push
cmpl
fstl
inc
das
jge
pop
sub
inc
fsubl
les
adc
lods
and
jne
jne
outsl
pop
repz
imul
pop
sub
pusha
sbbb
out
mov
cmp
test
xchg
and
fsubrl
inc
fnstcw
pusha
cmp
xchg
add
in
in
and
or
lods
outsl
rcr
sub
jl
in
jecxz
jnp
cwtl
fs
dec
std
inc
cmp
loope
mov
out
adc
dec
xchg
jge
std
scas
test
pop
outsb
sbb
subb
xchg
inc
insl
mov
mull
or
adcb
dec
es
repz
ds
inc
cmc
ret
jle
lcall
lahf
push
adc
cld
mov
push
movsl
push
or
push
push
and
hlt
and
gs
xchg
xlat
jns
mov
sbb
cs
pusha
inc
dec
pop
jns
adc
mov
jecxz
les
sbb
jp
mov
jbe
shl
dec
cmc
adc
rol
dec
outsl
movsb
xchg
fsubp
ret
movsb
push
repnz
and
xchg
int3
sti
inc
dec
out
adc
lcall
scas
addr16
loop
dec
cld
xchg
jg
in
imul
ss
aaa
in
cmp
sbb
daa
or
mov
xchg
ja
xchg
push
cmpsb
lock
not
jbe
dec
xor
jne
ds
mov
test
xchg
sub
shll
ja
dec
xchg
fdiv
leave
shlb
icebp
ljmp
lea
test
xchg
stc
xor
stos
pop
leave
jg
sub
jecxz
adc
mov
push
and
cmp
mov
lds
sbb
mov
push
lds
jg
inc
and
jl
or
or
inc
cwtl
cmp
ret
int
cld
in
sbb
popa
or
fidivs
pop
jns
pop
mov
iret
dec
jmp
or
insb
orl
repnz
idivb
cmpsl
push
lret
add
push
in
xlat
mov
add
add
fistpll
mov
iret
lcall
push
fnsave
ljmp
repnz
pop
aaa
xor
adc
jae
pop
mov
bnd
lahf
test
fistl
sti
mov
ljmp
jo
and
aad
in
sub
scas
mov
inc
aad
into
mov
jnp
mov
xchg
jnp
adc
xor
xorl
enter
test
movnti
hlt
xor
mov
popf
mov
xchg
clc
and
cmpsb
sub
jecxz
aad
hlt
test
mov
stos
and
insb
pop
int
xchg
mov
test
sti
pop
outsl
sub
inc
xor
ljmp
or
loope
xor
fwait
dec
mov
lods
in
add
inc
mov
pusha
cmc
cmp
dec
aam
mov
pop
pop
and
dec
jae
addb
mov
xchg
cmc
xor
scas
mov
pop
and
xlat
pop
or
imull
push
pop
xchg
sub
inc
dec
test
jge
icebp
cmp
bnd
aam
insl
addr16
mov
pop
addr16
imul
pop
jge
dec
andb
mov
cltd
sahf
ds
xchg
pusha
cli
mov
xchg
mov
sub
aam
sub
lods
ds
clc
out
loope
lcall
xchg
int3
les
popf
inc
mov
fimull
rcrl
rolb
popf
scas
add
mov
mov
fistps
or
in
mov
jecxz
xor
mov
push
inc
pop
xor
test
dec
scas
out
test
mov
mov
xchg
mov
xchg
mov
fcoml
sbb
movsb
xor
push
push
subb
pop
lock
rol
les
sbb
and
push
filds
cmp
nop
daa
xor
and
ljmp
test
mov
pop
aam
jmp
cmp
movsb
filds
cmp
jecxz
lods
xchg
adc
fwait
push
xchg
dec
and
data16
es
jl
pop
push
dec
out
dec
daa
sbb
xchg
cmp
cltd
jbe
push
pushf
popa
mov
loopne
and
cmp
xchg
xchg
dec
sub
ret
xor
sti
daa
push
push
jno
mov
push
or
movb
pop
pop
lahf
pop
lock
pop
sbb
loop
fisttpl
adc
inc
sub
jne
arpl
mov
lods
loop
rolb
adc
idivb
pop
push
mov
jecxz
repnz
sarl
mov
leave
orl
mov
insl
cmpb
xor
nop
push
mov
xor
inc
mov
ficompl
add
testb
sbb
dec
pop
cmp
mov
lods
add
push
jg
mov
pop
sub
js
fwait
insb
les
xchg
jle
in
push
sbb
lds
xchg
or
std
nop
insl
sbb
fwait
pushf
inc
rclw
scas
out
mov
mov
cmc
sbb
push
jb
and
out
add
ljmp
jne
cmp
mov
lods
int3
enter
stos
mov
sub
cli
push
inc
fstl
cli
out
repnz
pop
dec
fmull
jge
jb
out
dec
sbb
scas
dec
lahf
push
inc
rorl
xchg
xor
inc
mov
jno
jno
roll
int
lods
iret
push
fisttps
out
pusha
pop
mov
ret
add
mov
jecxz
bound
in
stos
add
pop
outsb
dec
push
sti
lahf
mov
lds
pop
outsl
lea
rol
int
hlt
mov
mov
pusha
lahf
dec
lods
jp
fisubrs
cltd
or
jle
mov
xorb
dec
mov
push
lock
jae
mov
mov
sbb
push
nop
xchg
adc
cmp
add
jmp
push
pop
ds
xchg
jle
cmc
mov
mov
cli
xorb
dec
aam
xchg
jbe
xor
cmp
test
outsl
jns
scas
cmovne
jp
push
out
jl
inc
add
lahf
or
mov
sbb
sbb
imul
or
cmp
add
mov
sbb
rcll
cmp
hlt
inc
shrl
mov
adc
add
lea
nop
outsl
icebp
dec
lock
inc
out
cmp
ds
sbb
pop
or
xor
daa
push
sahf
cs
mov
xchg
cs
xchg
and
mov
ret
jl
aas
insl
test
dec
and
inc
enter
inc
repz
loope
es
out
mov
and
add
arpl
testb
stc
jmp
xor
xchg
sub
adc
stos
dec
push
xor
ja
cmp
jns
push
lea
mov
pushf
push
in
int
jecxz
enter
jl
mov
jg
xor
mov
mov
sub
xor
stos
mov
out
adc
jne
lods
in
fdivs
jbe
jno
add
scas
fisubl
cs
mov
or
pusha
iret
xor
push
add
sbb
add
mov
push
jp
xchg
sub
das
addr16
push
cltd
fwait
mov
xor
jmp
pop
sbb
dec
sub
call
or
inc
sbb
pop
aas
push
sub
cmp
and
push
pop
adc
in
call
int
fdivr
js
aaa
stos
fimuls
xor
inc
jmp
pop
cmp
sub
mov
repnz
stos
sub
imulb
and
lea
cmp
and
shll
add
cmpsb
cmp
xchg
push
mov
sbb
mov
jae
or
jmp
jge
nop
std
mov
xor
jmp
push
push
insl
xchg
sbb
inc
push
ds
cmp
pop
sbb
cmp
out
std
jmp
popf
xor
mov
sbb
mov
dec
sarl
adc
cmpsb
imul
int3
mov
jp
mov
cli
cs
aas
add
fucom
loopne
inc
int3
dec
mov
sub
xchg
pop
movb
sahf
add
adc
or
mov
xchg
int3
scas
xchg
jp
in
push
xor
mov
push
repnz
lods
jae
mov
mov
cmp
xchg
jns
or
push
cmp
sar
xchg
leavew
mov
movsb
xchg
mov
xchg
push
andb
or
pop
mov
adc
jo
pusha
xor
imul
enter
int3
rcrl
bound
sar
hlt
lret
cld
adc
or
or
or
roll
xchg
shr
test
inc
fiaddl
call
lea
mov
movsb
dec
movsl
cmc
sbb
xor
pop
icebp
int
arpl
adc
cmp
jg
negl
invd
insb
cs
in
pop
int3
xchg
lods
std
cmp
sub
stos
push
sbb
lods
sub
int3
movsl
ret
mov
cwtl
in
mov
adc
dec
leave
sub
mov
mov
push
in
mov
inc
fs
dec
push
ss
xchg
je
popf
jb
or
push
or
std
leave
and
cmpsl
xchg
movsb
loope
clc
cltd
fnstcw
cli
or
test
add
add
outsl
push
jne
lock
data16
test
sbb
cld
in
gs
stc
add
sbb
sub
dec
das
nop
pop
aam
outsb
sub
aad
cwtl
and
icebp
xchg
repnz
daa
mov
movsb
pop
test
ficoml
popa
jg
fs
jge
jae
dec
jecxz
jne
test
test
mov
cmpsb
cmp
inc
stos
push
sub
sarb
xor
lods
outsl
jp
add
mov
jno
push
clc
cmpsl
cmpsb
shrb
icebp
cmp
icebp
and
shll
lds
nop
jae
je
pop
das
sub
cltd
repz
add
stos
inc
pop
aaa
imul
push
xchg
mov
inc
std
push
fisttps
and
mov
inc
mov
test
or
fistpl
mov
jo
sub
addr16
xchg
mov
ret
jne
xor
stos
mov
aad
scas
pushf
fcompl
xor
inc
jmp
xchg
sub
sub
push
loope
add
movsl
xor
adc
inc
add
cltd
gs
lea
inc
push
lock
ret
test
ja
mov
into
clc
jmp
scas
lods
das
add
mov
sbb
jns
shrl
imul
adc
sub
sarl
int
sub
pop
clc
shlb
in
insl
ja
sbb
cli
mov
mov
fsubp
mov
movsl
negl
jle
pop
inc
adc
xchg
ret
mov
enter
xor
pop
decb
inc
and
subb
iret
sub
addr16
and
or
call
xchg
sub
outsl
das
adcl
dec
repnz
add
mov
jae
dec
jae
mov
jne
sub
sarl
mov
dec
test
repnz
ficoml
jno
jl
shl
and
mov
mov
adc
fildll
fs
insl
icebp
sbb
stc
insl
xchg
or
scas
outsl
jo
and
scas
out
dec
sub
pop
and
cltd
repnz
push
or
mov
bound
jp
fildl
push
rol
vsqrtss
dec
stos
sub
mov
fcomps
inc
jl
scas
sub
divb
sbb
lock
or
inc
and
mov
push
mov
mov
and
jns
xchg
mov
out
jmp
lock
int
add
in
cwtl
and
cs
sbb
lods
cltd
push
xchg
jl
ret
jb
gs
adc
stc
aam
pushf
cwtl
stos
or
in
xor
out
add
in
leave
loope
jae
inc
dec
out
rcrl
push
mov
les
mov
sbb
dec
leave
mov
hlt
cmp
adcl
call
int
ret
jp
into
adc
not
mov
fs
leave
out
inc
movsb
mov
xchg
push
add
in
push
mov
jecxz
push
xchg
das
inc
fisubs
gs
xor
push
sbbl
sbb
ret
mov
xchg
jbe
mov
jle
cmp
addb
fisttpl
add
mov
sub
cmp
jp
iret
ret
jle
ds
mov
push
push
mov
loopne
andb
in
xchg
add
push
fs
mov
das
dec
mov
iret
dec
fucomip
std
adc
cmp
pushl
adc
mov
inc
push
sbbb
addr16
cwtl
enter
xchg
dec
and
pop
lock
sti
mov
ret
ret
cmp
loop
imul
ret
cmpsb
push
or
mov
incl
les
xor
dec
inc
or
cwtl
mov
mov
adc
es
js
insl
push
lods
inc
push
pop
dec
sub
scas
push
jmp
push
stos
test
jbe
scas
push
sub
ret
mov
fnstenv
out
fcomps
out
xor
inc
lahf
hlt
xchg
sbb
mulb
sub
mov
lock
pop
mov
mov
mov
out
iret
rorl
or
or
scas
mov
mov
mov
cmp
movsb
add
and
cmp
push
sub
test
je
jge
cwtl
dec
mov
mov
js
ljmp
fsubs
jo
sarb
mov
hlt
and
fcoml
and
inc
fcoml
inc
pop
cwtl
and
icebp
mull
jo
mov
cmp
shll
jns
sahf
push
out
into
jl
push
cli
push
jne
test
lret
jbe
push
jp
adcl
xor
sbb
push
pop
adc
roll
lret
jbe
adc
in
mov
mov
or
inc
jne
pop
cmp
xchg
ss
or
and
pop
fsts
fidivl
cmc
mov
popf
xor
fistps
add
push
jg
and
pop
mov
pop
jae
sub
mov
mov
popf
mov
sub
lcall
outsb
jb
xchg
add
jp
and
daa
push
aaa
in
pop
push
xchg
cli
leave
pop
jnp
cmpsb
hlt
pop
dec
cltd
outsl
lods
sbbb
aaa
mov
and
push
bound
aad
mov
in
mov
mov
xlat
outsb
mov
ja
xor
xor
push
push
jo
ljmp
push
inc
pop
fldl
push
xchg
popa
sub
adc
lret
cld
push
fiadds
xchg
sbb
inc
dec
subb
mov
adc
cmpsl
testl
pop
mov
cmp
cmp
inc
cli
adc
mov
aas
xchg
cwtl
dec
in
cmp
hlt
aaa
into
in
cli
test
xor
stos
or
mov
loopne
mov
mov
fcmovu
mov
inc
test
mov
sub
mov
sub
popa
idiv
imul
pop
push
push
repnz
test
testb
aam
sbb
shll
jmp
imul
fsubrl
not
test
stos
out
xchg
into
sub
mov
mov
mov
pop
jne
xchg
cmpsb
cmp
add
mov
xlat
repz
fisubs
das
and
sti
lcall
jno
pop
mov
xchg
iret
cmpsb
inc
ficomps
ja
xor
cwtl
cmp
lahf
mov
aaa
push
jecxz
pop
repnz
call
jp
push
testb
jne
add
pop
out
ret
push
dec
jecxz
cli
dec
mov
cwtl
xor
add
movsb
pop
sbb
push
stos
sti
arpl
rclb
jnp
repnz
sbb
add
adc
mov
nop
mov
or
aas
cmpl
xchg
lods
inc
dec
or
push
add
or
lret
lods
cmpb
xchg
sub
sahf
lcall
and
gs
or
movsb
shlb
add
mov
es
ljmp
cmp
xchg
xor
adc
and
shrb
loopne
idivl
inc
fadds
out
insb
movsl
popl
pop
or
push
sahf
clc
fxtract
insb
shll
shl
push
arpl
call
lret
out
sahf
xor
enter
stos
add
xor
jnp
or
dec
cmp
xlat
mov
xchg
mov
mov
sub
jne
mov
stos
pop
rcrb
pop
loopne
adc
ror
arpl
sub
adc
sbb
arpl
rol
cmp
mov
mov
cmpsl
sub
and
ret
fistps
push
ret
add
pushf
mov
and
sahf
jge
push
repz
pop
lods
sbb
sub
mov
and
mov
pop
out
mull
movsb
adc
pop
ja
movsb
xor
pop
ret
cmp
dec
in
mov
xchg
mov
hlt
jno
hlt
cmpsl
add
jbe
gs
adc
inc
jbe
mov
mov
jne
cmp
xchg
in
rcll
jo
sbb
lds
and
add
inc
lret
pop
bound
repnz
test
in
xchg
arpl
movl
test
mov
pop
xor
int
mov
mov
movsb
scas
adc
lods
xchg
bound
shll
mov
popf
arpl
ret
test
mov
push
test
test
jl
mov
inc
aad
mov
test
cmp
cmc
and
fnop
pop
sub
xor
das
addr16
aaa
jl
ss
mov
xchg
divb
sbbl
pushf
movsl
sbb
mov
loopne
test
xchg
test
push
and
imul
and
mov
repnz
fistps
push
push
or
loope
decl
les
imul
js
cmp
push
inc
lds
adc
shlb
or
and
mov
dec
std
xor
or
adc
mov
jecxz
inc
ja
sub
sbbb
loop
jne
pop
adc
mov
jb
in
mov
call
in
cmp
mov
dec
mov
mov
jbe
cmpsb
add
pop
or
ret
jno
je
jb
dec
loopne
dec
add
imul
scas
jae
dec
add
mov
adc
push
aas
sbb
inc
fisubrl
mov
fdivrs
adc
cwtl
bound
sahf
pop
lods
mov
shl
xor
mov
inc
xlat
stos
xchg
dec
xchg
aad
dec
cmp
push
and
cld
jl
mov
mov
lock
fadd
les
push
call
cmp
ljmp
outsb
mov
push
or
jg
mov
rol
mov
ret
or
out
inc
repz
lret
xchg
add
out
test
add
cmc
jp
out
repz
scas
xchg
outsb
add
sub
mov
or
pop
enter
into
jmp
daa
jbe
lods
in
movsb
or
push
mov
lret
sub
fwait
pop
and
pop
popf
jbe
popa
sub
dec
add
insl
add
loope
aad
xor
sub
sahf
sbb
ljmp
or
push
inc
push
movl
jp
sbb
clc
fwait
es
adc
or
ret
push
outsl
stos
int3
fsubr
es
fs
sbb
pop
and
sbb
or
inc
std
and
sbb
pop
inc
dec
push
es
sub
dec
and
inc
jle
add
inc
xlat
push
lock
inc
movsl
aad
addb
ret
cwtl
jecxz
adc
cltd
std
xchg
xchg
xor
xchg
jbe
rol
cmpsl
adc
repz
rcrl
inc
insl
cld
jo
lahf
stos
dec
daa
test
je
movsl
sub
pop
not
lret
xor
pop
mov
loope
movsl
xchg
inc
jg
movsl
in
mov
jne
loope
call
adc
pushf
add
lahf
sub
xchg
cs
jns
jo
loope
fistps
mov
popf
call
mov
mov
mov
xchg
in
scas
out
sub
sarl
push
cltd
push
enter
dec
jge
dec
jmp
lahf
sar
shrb
jnp
pop
xor
pop
mov
pop
xchg
adc
mov
mov
jo
daa
mov
arpl
pop
into
fmuls
leave
std
inc
add
scas
lods
inc
loope
mov
mov
popa
lock
cld
wbinvd
cld
xchg
or
lds
cmpsb
dec
sahf
pop
ljmp
jle
sahf
xor
push
or
xchg
test
ja
daa
test
dec
xchg
test
cmp
mov
adc
aaa
into
dec
add
cltd
mov
aad
inc
mov
jmp
push
jbe
dec
test
popf
hlt
in
leave
xchg
outsb
jbe
or
mov
inc
scas
and
jno
movsb
add
mov
sub
fcoms
cmpb
fisubrl
ljmp
pop
cs
and
xor
lahf
ja
push
cltd
inc
push
cld
jb
pop
mov
stos
xchg
bswap
mov
addr16
loop
cwtl
adcb
xchg
sbb
data16
dec
out
fwait
dec
std
es
xor
in
jp
push
xlat
sub
xchg
mov
sub
int3
aaa
push
cmc
xor
inc
xchg
pop
loop
cmpsl
inc
push
sub
test
xchg
repz
add
fucomip
xor
and
xor
cs
sub
dec
out
test
lahf
sbb
cmpb
daa
mov
xchg
repnz
imull
push
cmp
cld
pop
loop
movsl
sbb
mov
fists
push
movsl
jns
push
sbb
fwait
adc
jge
ret
pop
aam
cld
or
cmp
insl
repz
arpl
adc
lods
nop
xorb
mov
push
pushf
stc
inc
pop
jne
lret
sti
xchg
lcall
stos
cmc
mov
imul
inc
dec
mov
mov
call
or
and
in
lret
movsl
mov
add
std
data16
or
inc
mov
rcrl
lea
mov
jp
into
mov
enter
add
xchg
cs
adc
push
mov
xor
jne
int
add
add
loope
and
lahf
div
pushf
dec
fmuls
das
addr16
push
sub
mov
add
sbb
jno
add
sbb
mov
or
mov
subl
cmp
bound
in
inc
clc
into
add
mov
mov
adc
and
sbb
pop
push
das
jge
shlb
movsb
movsl
push
and
repnz
sbb
xchg
push
ret
sbb
imul
mov
adc
inc
mov
xchg
jp
popa
mov
push
dec
push
push
push
lods
fcoms
popa
and
fsubrs
sub
jae
fdivr
inc
nop
sub
shll
mov
add
loope
jo
push
jb
test
imul
rolb
cwtl
test
adc
mov
movsb
fiaddl
cmp
enter
lods
icebp
ja
mov
fwait
test
xchg
stc
mov
movsb
xchg
cmp
jo
shrl
in
or
in
push
rcll
dec
jo
mov
sahf
enter
jg
or
and
adc
jnp
in
inc
and
in
lret
insl
shlb
leave
or
je
imull
jno
push
or
lcall
insl
aam
lahf
mov
leave
xchg
loopne
ljmp
dec
dec
mov
add
iret
lods
lock
rclb
cmpsl
lods
push
mov
dec
xlat
testl
pusha
repnz
mov
imul
push
lcall
mov
leave
and
xor
mov
cmp
gs
inc
frstor
mov
into
fs
data16
and
mov
jg
shll
add
int3
lods
addr16
jbe
loop
dec
mov
push
enter
jnp
pop
inc
mov
jmp
sub
sahf
rol
lcall
insl
in
cmp
jnp
push
popf
test
inc
fsubr
mov
out
mov
cmpsb
jle
dec
add
sbbb
pop
pop
ret
in
scas
mov
fisttpl
xlat
dec
dec
or
iret
cli
repnz
add
or
xchg
test
and
adc
cld
jg
mov
cmc
pushf
lds
repnz
imul
out
push
dec
std
jge
adc
cld
push
inc
xor
test
fsubrs
add
xchg
inc
push
mov
mov
jmp
les
push
mov
push
jecxz
mov
xchg
jl
lds
testl
cmp
adc
and
mov
clc
jg
sbb
pop
adc
int3
jno
cmc
mov
pop
cltd
das
pop
enter
dec
and
aaa
inc
push
aas
aaa
add
mov
jmp
das
lock
ljmp
jno
pushf
dec
dec
clc
push
stos
ret
push
inc
mov
loop
xor
sbb
ja
sub
mov
aas
in
imul
gs
sbb
test
enter
mulb
or
sarb
and
sub
shr
add
push
and
pop
movsb
and
ret
shl
jg
enter
sbb
mov
aad
or
into
shlb
outsb
inc
sbb
aam
call
into
sbb
sbb
mov
pop
and
sahf
xchg
nop
inc
inc
sbb
xchg
mov
pop
mov
minss
sub
push
xchg
testl
sahf
dec
adc
lods
or
push
adc
mov
data16
les
and
jmp
add
xchg
jae
and
lahf
and
pushf
icebp
dec
pop
fcoml
xchg
iret
stos
stc
xor
add
jg
mov
fidivl
lret
inc
push
jns
push
test
stos
lret
into
and
aam
fcompl
and
cltd
push
mov
dec
sub
pop
push
xor
shlb
imul
sbb
in
or
pop
mov
fisubl
aas
add
leave
push
lock
push
addr16
clc
popl
aaa
mov
xchg
jno
sbb
inc
mov
fstpl
andl
push
stos
and
iret
pop
mulb
sarl
fcomps
and
out
push
and
movsb
xor
dec
jnp
das
fsubrl
jbe
fiaddl
popf
adc
push
fxch
pop
fbstp
xchg
clc
mov
out
outsb
sbb
xchg
add
sbb
mov
outsl
mov
enter
jg
xchg
mov
pop
ficompl
mov
sahf
adc
jp
shlb
iret
mov
inc
fdivrl
push
stos
inc
mov
orb
int
jmp
or
repnz
jae
xchg
mov
test
push
stos
inc
lret
cmpsb
inc
pop
fwait
dec
out
xchg
push
inc
fadds
out
out
mov
rcrl
outsl
mov
jbe
mov
mov
xchg
int3
mov
jecxz
push
dec
push
xchg
adc
scas
pop
test
les
sub
dec
std
bound
cltd
cmp
xlat
push
dec
je
push
lret
dec
rclb
pop
xor
es
mov
sbb
pop
iret
push
imul
pop
mov
dec
movl
popa
lahf
and
pop
shll
loop
pushl
int
jb
stc
mov
or
das
ret
pop
cmc
adc
shlb
cld
add
pop
arpl
testl
inc
push
push
push
mov
ss
enter
adc
shrl
ficompl
pop
testb
int3
mov
out
sbb
fwait
push
shlb
or
cld
mov
cs
or
adc
lret
jnp
call
jg
cwtl
andl
sub
jg
dec
sbb
adcb
loop
inc
sbb
push
mov
xor
or
shll
leave
pusha
aaa
push
out
mov
pop
xlat
sub
aam
arpl
lock
fisubs
sub
jge
lret
xchg
outsl
and
aad
push
dec
push
test
jno
das
push
int3
push
or
fbstp
test
pop
fxch
mov
pop
cwtl
fpatan
popa
lret
and
loope
shr
pop
jmp
or
mov
jmp
insl
mov
outsb
xchg
mov
leave
nop
loopne
testl
or
movsb
adcb
mov
add
pop
sbb
xor
cmc
std
adc
xchg
jmp
and
xchg
jg
pop
sub
mov
fwait
test
mov
aad
addl
xor
push
add
clc
push
jg
mov
int3
movsl
cs
imul
cmpsl
adc
sub
mov
fstpl
testb
jns
movsl
mov
sbb
scas
adcb
adc
lret
out
mov
js
xor
mov
dec
pop
xchg
gs
lods
mov
lcall
add
push
add
mov
sbb
or
rcrl
lahf
aaa
out
out
cmp
mov
inc
imul
add
pop
fistpl
lcall
test
cmc
shll
movsb
insb
pop
jl
add
cmp
mov
popa
xlat
add
fsub
dec
mov
into
cmp
shll
xchg
mov
push
scas
inc
jmp
cmp
lcall
test
inc
ret
jbe
push
inc
sbb
mov
rep
call
jp
ret
lret
xor
dec
mov
movsb
mov
cpuid
inc
lcall
and
sbb
jnp
dec
xchg
out
popa
sbb
jae
pop
xchg
fsubs
pop
out
mov
mov
jp
inc
int3
inc
iret
shll
mov
test
push
sub
mov
ficomps
gs
dec
jp
push
pop
jg
jns
jns
scas
push
mov
or
lods
mov
mov
adc
pop
mov
ret
ds
test
push
xchg
fnsave
lcall
pop
loopne
jg
das
inc
repnz
es
fistps
mov
ja
sub
jae
fsubl
ret
push
sti
xorl
dec
and
movsb
and
and
movsl
mov
sbb
je
std
dec
inc
xchg
fsubs
leave
pusha
test
sbb
pop
dec
mov
ret
mov
mov
mov
faddp
mov
lock
in
pushf
or
sar
in
repnz
mov
jmp
aas
push
pop
push
pop
repnz
fwait
mov
daa
mov
adc
sar
inc
rep
aaa
pop
pop
cmpsl
out
mov
mov
cmpsb
and
mov
inc
decb
sub
test
mov
xchg
jmp
test
xchg
leave
cmp
mov
adc
lock
in
cmp
lods
lock
adc
ret
push
push
movsb
les
dec
aas
mov
push
cwtl
jl
loope
add
mov
push
mov
mov
xor
sub
pop
adc
xchg
dec
dec
lahf
stos
add
mov
loope
addl
cmc
stc
fsubl
ret
js
push
jb
cltd
cmc
into
jecxz
cmp
out
inc
mov
mov
dec
loopne
outsb
mov
mov
ret
adc
outsl
insl
daa
jnp
xchg
cmpsl
cmc
mov
jp
push
jecxz
lcall
jmp
sbb
and
fnstenv
rorb
retw
arpl
ffreep
aam
add
data16
leave
arpl
xchg
and
or
push
jmp
or
push
imul
sahf
push
pushf
scas
xor
ret
cli
in
ret
mov
fldcw
cmp
inc
dec
sbb
mov
in
aam
mov
test
rolb
pusha
push
add
fcmovnb
mov
movsl
xchg
dec
xchg
je
sub
pusha
ret
jecxz
jp
jp
decl
sub
sbb
ljmp
xor
xchg
push
bound
push
insb
xor
xorb
scas
fwait
and
cltd
mov
adc
repz
add
cli
lock
in
int
stc
sbb
cmpsl
pop
aad
add
push
xchg
sub
sbb
shlb
add
adc
andl
cs
sub
bound
and
mov
inc
xchg
test
gs
out
jmp
lock
and
pushf
push
cmp
lahf
cmp
xchg
mov
clc
jb
jns
xchg
nop
adc
test
lahf
cmp
inc
pop
sarb
mov
add
or
cltd
push
jae
fwait
jl
sbbl
leave
xlat
roll
imul
and
adc
fcoms
sti
sub
push
mov
bndstx
push
jno
pop
loop
push
clc
dec
test
adc
add
push
push
icebp
inc
js
cwtl
and
and
sar
inc
xor
cmp
lret
data16
pop
hlt
xor
lea
fisubrs
sbb
cmpsb
xchg
bound
jp
adc
aas
push
jmp
dec
dec
jo
incl
out
das
cmp
xor
icebp
mov
imul
imul
jg
lea
lock
pop
stc
sub
dec
aaa
pop
imul
cmp
mov
xor
inc
lods
inc
pop
sub
adc
push
xchg
push
xchg
ret
stos
push
sbb
pushf
out
ljmp
xchg
jecxz
sbb
lods
aad
cmpsb
inc
mov
or
pop
int3
add
pop
mov
popa
mov
xor
test
ds
inc
or
lds
out
or
iret
pop
cmp
in
pop
inc
pop
mov
xchg
add
test
sbb
cmp
mov
dec
in
push
sbb
sub
shrl
outsb
sub
mov
cmp
loope
push
and
push
ret
jmp
out
pop
mov
loope
lods
fsub
cmp
xchg
dec
popf
xor
or
in
push
adc
xchg
in
xchg
mov
cwtl
add
lret
cmp
sbb
shll
push
lods
sbb
aas
jp
into
cmpsl
push
cmpsb
mov
aam
jp
mov
push
jne
stos
mov
fs
or
mov
arpl
popa
test
sbb
fstpl
pop
sub
addr16
push
sbb
pop
outsb
aas
dec
pusha
and
iret
lods
mov
xor
popf
jle
or
ss
lahf
out
pusha
xchg
into
adc
xchg
push
jne
or
imul
jno
pop
icebp
dec
push
or
enter
xor
cs
xor
add
pop
fdivs
les
rcrb
or
psllw
test
sbb
inc
push
cmpsl
xchg
cmp
xchg
ret
test
pop
jb
mov
cs
es
and
out
cmp
std
cli
test
out
push
mov
iret
jno
mov
adc
jno
lea
jle,pn
add
push
insl
arpl
and
add
in
loope
inc
adc
loope
mov
idiv
pop
or
cmpsb
cmp
mov
scas
aas
mov
call
sbb
pop
repz
cwtl
mov
fcompl
add
outsb
mov
push
ljmp
mov
pop
loop
inc
aas
leave
mov
leave
sbb
pop
outsb
pop
cmpsb
test
loopne
imul
inc
mov
cmp
xor
call
sbb
mov
leave
testl
lcall
inc
fmulp
test
arpl
cltd
call
leave
aad
xor
cmc
jae
or
dec
loop
sub
cmc
fcoms
out
pop
adc
into
push
insb
test
mov
pop
in
mov
lretw
jae
out
pop
and
cmp
xorb
es
call
inc
fildl
and
mov
aam
mov
pop
inc
adc
loop
lods
sahf
pop
ljmp
dec
push
cli
pushf
add
stos
jmp
mov
jns
mov
lea
mov
in
call
adc
or
cmp
rorl
cwtl
ret
fs
or
mov
dec
dec
inc
fldl
add
popf
or
pop
call
pslld
add
sbb
ds
sbb
pop
setbe
pushf
mov
clc
pop
cli
sbb
sbb
std
movsb
cmp
test
ret
and
je
outsl
xchg
stos
sbb
cwtl
dec
or
or
mov
pop
inc
mov
mov
cmp
icebp
cmp
rcl
pusha
daa
fdivrl
aaa
jno
or
sarl
pop
pop
lock
xor
push
sub
adc
lret
js
dec
aas
push
mov
ud1
jg
adc
xlat
or
lret
js
in
xchg
sbb
das
add
jno
imul
pop
inc
es
push
insl
daa
pop
sbb
cmpsl
push
mov
xor
pop
pushf
stos
jmp
sub
and
enter
leave
sarb
je
inc
imul
mov
sbb
pop
cmpsl
mov
cmp
xchg
ret
jp
mov
ficoml
lahf
xchg
das
sbb
push
jmp
loope
jo
mov
adc
jns
add
xor
cmp
les
lock
lods
xchg
pop
mov
popa
loope
fs
cmp
es
xchg
mov
psubusw
xchg
sub
mov
ss
jl
cmp
jo
push
sarl
sbb
mov
pop
jl
push
arpl
and
mov
inc
enter
jg
sbb
mov
mov
or
xchg
jge
xor
orb
xchg
scas
adc
or
mov
and
jo
fnsetpm(287
daa
dec
jle
sbbl
push
aas
and
test
stos
rolb
imul
mov
pop
outsl
add
es
pop
repz
mov
mov
fdivr
push
out
in
mov
in
push
mov
popa
pop
jg
inc
mov
jmp
ret
iret
divb
jno
sub
inc
mov
dec
dec
pop
pushf
in
fimull
or
outsl
stc
lret
jo
jmp
pop
push
sarb
cmpsb
ret
scas
out
adc
outsb
inc
enter
sub
pop
mov
pop
mov
jmp
xchg
push
icebp
lods
sti
movsl
int
imul
lfs
pushl
sub
inc
mov
mov
popa
mov
jb
xorb
add
mov
mov
mov
scas
pop
push
sti
shll
outsl
ja
mov
jbe
jno
jg
and
decl
repnz
or
push
jns
mov
mov
ja
es
and
jmp
fdivr
stos
add
pop
addb
mov
sub
push
xor
pop
lds
inc
or
adc
ss
aam
pop
rcl
dec
add
jmp
push
stos
lock
addr16
int3
push
stos
and
data16
hlt
in
lock
cwtl
xor
fldl
mov
addl
mov
in
jns
adc
inc
gs
test
add
pusha
inc
mov
xor
jg
add
pushf
lahf
jecxz
in
adc
xrelease
shll
loope
mov
fdivr
mov
or
hlt
daa
sti
nop
gs
sub
mov
into
mov
mov
and
sub
fs
stos
int3
in
pop
jmp
xchg
adc
into
pop
repnz
imulb
fildll
fstps
aam
lret
test
xor
fnstenv
and
and
and
pop
xchg
ja
cmp
mov
xchg
mov
inc
dec
loope
icebp
jle
push
mov
mov
fdivl
js
and
sarl
dec
push
sbbb
rcrb
fbld
bnd
add
add
cmpsl
out
es
mov
clc
mov
push
ss
pop
inc
ja
jne
aad
insl
xchg
ljmp
repz
adc
scas
ja
je
xchg
adc
and
insb
inc
mov
jo
cli
aam
and
lods
push
lret
mov
mov
scas
push
sbb
fmul
int
mov
push
int
sbb
cwtl
jnp
mov
jbe
sub
sbb
nop
pop
adc
aaa
push
fmuls
cmp
imul
jno
sbb
adc
inc
cmp
das
cwtl
xor
push
sub
mov
dec
mov
out
jmp
js
mov
jecxz
pushf
jbe
jge
data16
lahf
xor
sbb
push
mov
leave
into
imul
out
sub
pushf
aas
lret
repnz
dec
fwait
jne
test
lret
aad
mov
shlb
icebp
push
movsb
orl
mov
in
sti
pop
dec
sbb
fmull
mov
lds
adc
movsb
cmp
push
outsl
xor
les
insl
inc
lods
into
cmc
pop
cmp
sbb
push
or
fdivp
shll
not
imul
sub
insb
inc
gs
pop
div
mov
cmp
lcall
and
sar
enter
jle
mov
insl
jge
inc
aas
inc
push
sbb
js
cmp
inc
adc
add
adc
test
inc
inc
leave
subb
jnp
jno
jecxz
loope
fs
js
inc
ficompl
lcall
das
xchg
bnd
fdivs
scas
xchg
add
mov
mov
inc
ja
inc
sar
cmc
mov
push
call
or
jne
pusha
mov
aam
cld
inc
fsub
stos
dec
repz
inc
sbb
lahf
or
push
test
cmp
pop
or
scas
xor
loopne
cli
and
in
mov
lock
lret
jnp
push
in
adc
cmc
add
xchg
adc
adcb
subl
push
push
jno
pop
out
jae
push
mov
jae
pop
sub
je
loope
push
aas
test
inc
pop
pop
je
dec
ret
dec
ss
cmpsl
cmp
pop
insl
lods
xor
mov
out
cwtl
sahf
dec
dec
add
jecxz
aaa
test
jmp
or
pop
cmp
sbb
lret
or
sub
and
jg
adc
addr16
jecxz
pop
into
fcos
inc
dec
dec
notb
mov
divb
sbb
cld
std
mov
test
shrl
outsb
push
and
sbb
scas
mov
loope
pop
repz
out
movsl
aam
jp
shll
mov
push
es
cmp
and
icebp
int3
pop
lods
stos
jle
fld
sbb
sub
scas
loope
sub
jno
and
out
jno
aas
jmp
mov
sub
pop
in
jae
outsb
gs
aas
loope
aas
fisubs
lcall
push
mov
mov
pop
cs
nop
lea
cli
push
insb
mov
or
orb
mov
insl
xor
xchg
inc
push
cmp
mov
fs
bound
xor
loope
push
inc
mov
jns
adc
mov
sbb
fstpt
xor
mov
sbbb
bound
sub
cmp
xor
push
pusha
xorb
out
rcl
jl
insl
int
inc
jle
test
aad
stos
cmpsb
fsubrp
and
shrb
rcrb
mov
rorb
push
hlt
xchg
ficoml
jb
mov
aaa
test
cmp
lret
jb
lahf
pop
movsl
and
test
icebp
jmp
or
inc
sbb
aaa
mov
dec
lahf
mov
sub
pop
jns
cmp
ljmp
roll
push
ljmp
xor
dec
in
pop
and
push
and
test
push
sub
shrb
ret
xor
dec
inc
sbb
fdiv
xchg
outsb
pop
lock
lock
sub
add
sbb
imul
adc
insl
movnti
lea
fiadds
lret
inc
push
inc
mov
into
fcmovnbe
mov
mov
adc
inc
xor
push
ss
push
or
scas
or
xchg
xchg
jnp
pop
pop
jne
mov
sbb
imul
dec
mov
xor
clc
push
push
add
mov
pop
mov
add
repz
in
xor
xor
inc
jnp
xchg
je
adc
enter
push
push
jnp
mov
sbb
movsb
and
pop
xchg
dec
dec
mov
mov
sbb
mov
leave
dec
pop
jbe
push
dec
jae
push
popa
jle
adcl
arpl
gs
cmpl
or
cmp
pop
out
mov
pop
sbbl
xor
xchg
sub
mov
fildl
add
arpl
add
xchg
fwait
loopne
inc
pop
mov
fnstcw
add
icebp
popf
lods
and
popf
jmp
pop
push
add
mov
ja
mov
lcall
pushl
daa
bound
mov
ret
mov
popf
lahf
fwait
sbb
mov
jecxz
xchg
inc
fldl
inc
mov
xchg
iret
mov
push
jnp
call
sub
xchg
mov
add
aad
iret
mov
in
inc
je
sarl
xchg
pop
shr
pop
jns
push
sub
jae
xorb
mov
sbb
dec
cli
inc
sub
decl
insb
sahf
adc
sub
repz
xchg
scas
sub
and
adc
ret
add
dec
lds
repnz
sbb
lretw
fmull
bound
sbb
mov
pop
dec
test
add
out
test
sbb
xor
mov
pushf
jmp
shlb
out
aam
popa
clc
daa
lcall
jge
stc
mov
out
js
jmp
jge
std
xchg
hlt
mov
adc
shll
inc
mov
fidivrs
popf
xor
add
mov
mov
hlt
mov
aam
into
rcrl
adc
sub
pop
mov
pop
js
cli
sarl
pop
sbb
pop
dec
lds
cmp
mov
pop
mov
lahf
jecxz
in
inc
push
xor
inc
test
xchg
out
jae
lahf
scas
or
xchg
jge
ficompl
sbb
call
inc
inc
mov
cmp
dec
adc
inc
aas
xor
cmp
sbb
daa
and
mov
add
inc
mov
xlat
and
push
cmp
outsb
mov
lods
lock
mov
adc
stc
adc
cmpsb
xchg
mov
push
mov
xor
out
and
xorb
push
sahf
dec
data16
les
ret
repz
jge
pusha
pop
mov
push
or
clc
mov
cld
push
dec
out
lret
pop
mov
xor
lock
sub
insl
aas
pop
bnd
jno
in
add
loop
xchg
adc
dec
loope
push
movsb
adc
roll
pop
imull
push
mov
jge
ror
mov
ud0
jno
add
adcl
mov
popa
mov
outsl
nop
or
mov
xor
adc
aaa
mov
mov
pusha
push
mov
mov
sub
gs
std
push
scas
sbb
jae
mov
scas
test
test
xlat
clc
mov
in
push
inc
pop
pop
repnz
jbe
adc
in
adc
cwtl
aas
sarb
pusha
pop
mov
inc
popa
clc
add
adc
mov
aas
bound
dec
jbe
inc
mov
jmp
ds
cmpsl
push
hlt
mov
dec
and
cmp
sbb
sub
in
pusha
sarb
mov
or
in
sbb
pop
aaa
mov
in
pop
cli
jle
std
testb
or
dec
jl
hlt
cmp
mov
shrl
insb
pop
inc
ficoms
xorb
mov
mov
inc
inc
jg
es
fstl
inc
dec
popa
in
rcrl
jmp
pushf
or
into
cmp
jb
pop
sub
ret
stos
dec
jecxz
push
and
or
iret
cmp
mov
fsubrs
andb
repnz
xor
cli
xchg
shlb
scas
and
sub
jecxz
sub
cmp
stos
mov
dec
addb
and
scas
pushf
rolb
clc
out
add
and
add
mov
mov
movsb
cmp
aad
bound
and
pop
inc
pop
push
mov
xchg
inc
xchg
mov
and
jle
sub
cmc
popa
mov
rcll
cmp
loopne
jno
pop
shll
xor
jg
popf
dec
mov
mov
push
mov
fwait
in
dec
enter
push
mov
adc
std
xchg
pop
mov
cmpsb
push
jp
mov
sub
pop
xor
cmp
int3
cld
pop
daa
cld
shll
sub
ret
lea
in
or
inc
out
lods
loop
sub
cs
xchg
adc
push
jecxz
repz
dec
aad
es
push
sbb
insl
add
pusha
lret
xchg
sub
xor
stos
xchg
sbb
loope
out
mov
lock
aas
aaa
into
lods
pop
mov
jne
push
in
sub
icebp
je
cmp
pop
insl
jo
mov
xchg
adc
pop
test
xchg
xor
adc
mov
xor
cmpsb
fnstsw
enter
call
add
or
sub
hlt
mov
or
icebp
pop
add
cmp
loop
and
bound
inc
mov
jecxz
mov
pop
cld
insl
xor
arpl
xchg
dec
push
mov
push
iret
loope
jb
mov
xchg
jmp
mov
sub
jbe
or
pop
imul
sar
push
bnd
ds
out
adc
pop
or
scas
jns
fidivl
outsl
les
push
xor
jo
fsubrs
push
push
clc
in
pushf
sarl
into
repz
inc
in
repz
filds
adc
imul
repnz
and
xor
ja
test
sbbb
inc
fnstsw
mov
inc
lahf
fistpl
mov
data16
and
sbb
xor
mov
xchg
push
lea
arpl
push
jge
or
adc
jge
pushw
lahf
subb
add
xchg
jmp
pushf
out
popa
or
xor
add
xchg
pop
mov
scas
push
dec
lock
stos
cmp
fwait
dec
adc
mov
pop
lahf
popf
or
or
call
divl
std
jns
sbb
xor
jns
fsubr
subb
and
loopne
inc
in
mov
rcrb
ja
pop
mov
jl
loopne
cltd
cmp
push
out
inc
sbb
jne
clc
sbb
bound
push
stos
xchg
jp
or
addl
fnstenv
jb
dec
inc
into
add
mov
lcall
sub
mov
inc
lods
fidivs
mov
add
stos
sbb
outsl
loop
into
lret
xchg
sbb
cmp
push
call
or
fistpll
aas
sub
shl
xchg
push
hlt
dec
popf
jmp
aad
sbb
xchg
or
lcall
dec
pop
fwait
pop
jmp
dec
aaa
fldenv
add
movsl
and
sbb
push
lock
cmp
mov
pop
dec
or
inc
sub
js
mov
es
mov
pop
adc
jge
clc
mov
lret
push
mov
jp
bound
mov
jno
xchg
stc
pop
mov
lret
jg
rclb
cmp
inc
incl
fldenv
sti
xchg
xor
les
push
repnz
or
ljmp
shlb
push
ficomps
xor
outsb
add
mov
stc
fnstcw
cmpsl
lea
xor
jae
mov
push
stc
and
add
mov
test
les
jecxz
std
dec
or
out
mov
sub
mov
decl
jo
call
adc
and
jno
adc
cmp
inc
cmc
aas
repnz
push
xor
mov
sbb
aam
sbb
sbb
and
scas
std
add
mov
fsubr
ljmp
dec
and
push
mov
insb
sbb
sbb
jp
mov
xchg
mov
mov
out
imul
jmp
sbbl
jle
sub
add
jmp
js
lea
inc
xor
fs
and
mov
jmp
nop
mov
clc
xor
xor
hlt
add
dec
div
pushf
hlt
movsb
aad
rcl
or
mov
mov
hlt
cmp
adc
add
cltd
ror
inc
test
jge
aam
push
add
clc
pop
clc
std
sbb
mov
mov
push
dec
nop
cmpsl
xchg
cmc
filds
js
shrl
mov
arpl
sub
out
aam
pop
xchg
fisttps
mov
fadds
stc
clc
push
cmpsb
js
xor
sbb
pushf
sbb
arpl
scas
cwtl
ds
mov
rorl
mov
sahf
fisubs
jecxz
pop
mov
test
mov
inc
and
int
pop
cmp
jbe
lret
adc
jge
outsb
gs
jb
or
push
push
push
mov
jo
sub
xorb
or
dec
ss
rcrl
in
leave
xchg
inc
dec
sub
add
mov
fbstp
jns
adc
adc
fwait
push
fwait
dec
fwait
mov
out
sub
rcl
jecxz
mov
data16
dec
xlat
dec
int3
dec
in
mov
jle
jmp
mov
inc
mov
lock
clc
rcl
xchg
imulb
in
push
pop
xlat
push
test
pushf
sub
cs
or
fcomi
aaa
mov
mov
test
sub
cmc
mov
inc
sbb
test
stc
lea
push
pop
adc
push
insb
adc
push
inc
dec
popf
jo
imul
or
idivb
pop
jmp
fs
jmp
call
or
adc
mov
sub
out
ds
fs
lahf
hlt
out
jg,pn
lock
subb
and
jle
aaa
stos
mov
xor
jp
sub
clc
mov
cwtl
cmp
scas
fiadds
push
inc
pop
ffreep
pop
fadd
dec
sti
pop
cmp
notl
inc
fisubrl
cmp
jo
mov
push
mov
sti
mov
and
sbb
insl
add
loop
les
mov
inc
clc
xchg
sub
stos
lcall
fwait
mov
mov
sbb
cwtl
push
in
loop
movsb
adc
adc
imul
sbb
cmp
inc
clc
pop
push
jbe
push
cmp
dec
add
jbe
out
sub
mov
and
push
push
repz
test
stc
je
into
and
or
ss
jg
mov
ret
les
outsl
pushf
dec
pop
lock
test
push
cmp
outsb
sbb
mov
fstps
jno
outsb
or
cwtl
jg
cltd
mov
lcall
cwtl
xor
jno
mov
scas
mov
sbb
cmc
int3
push
imul
ficoms
and
cmpsb
xor
push
or
iret
inc
cwtl
test
outsl
or
sub
scas
xor
fwait
popl
mov
popf
dec
xor
in
dec
out
inc
call
in
xchg
add
stc
fsub
xchg
xchg
cmp
das
ret
adc
cmp
mov
jmp
and
scas
fdivrl
mov
inc
gs
test
mov
sub
lds
xor
adc
popf
pop
xchg
lea
mov
jmp
mov
and
movl
sub
arpl
fbstp
add
or
mov
sub
addb
jne
jle
out
mov
inc
adc
xor
inc
mov
cli
adc
shlb
lods
js
inc
cs
dec
jecxz
cmp
clc
pop
nop
cs
lret
insb
sub
int
mov
mov
sub
lret
xor
loope
bound
iret
stc
mov
sbb
popf
cmp
ds
in
enter
ljmp
cmpsb
rorl
mov
add
and
xchg
out
add
icebp
test
std
dec
add
jmp
mov
add
movsl
cmp
lods
inc
test
xor
jno
sbb
xchg
outsl
push
sbb
in
mov
popa
or
xchg
jb
mov
test
adc
adc
sub
iret
jb
sarb
les
mov
push
sub
in
outsl
sbb
or
cmp
cwtl
cmp
int
stos
mov
andb
sub
mov
rorb
fistl
xchg
xchg
pop
fwait
rorl
fyl2x
vaddsubps
xchg
and
leave
jb
inc
mov
cmp
or
or
dec
ficompl
add
addr16
lret
out
sub
adc
imul
or
cli
scas
cmc
mov
pop
scas
popl
pop
mov
cmp
jo
divl
pop
mov
pop
nopl
pushf
out
cmp
sbb
pop
mov
xchg
clc
popa
ret
lahf
data16
dec
out
inc
fldt
dec
pop
insl
sarb
add
push
pop
sbb
iret
stc
mov
popa
mov
scas
add
mov
add
mov
dec
mov
add
xor
sti
or
xchg
enter
mov
rep
pop
dec
jecxz
testb
shl
xchg
jl
loop
inc
xlat
pop
shr
pop
adc
loope
mov
pop
inc
sbb
idivl
into
cmpsb
jns
fldcw
mov
aas
cmp
outsl
push
outsl
dec
mov
jge
xor
popa
lods
lock
xchg
popf
lock
fadd
jle
jmp
sbb
das
idivl
and
shl
or
in
insb
add
sub
and
sub
push
daa
fdivrs
lods
shll
add
mov
or
iret
sbb
push
lods
pop
xchg
adc
arpl
outsb
faddl
add
jg
popl
inc
lahf
jns
mov
add
xor
mov
cmp
stos
stc
hlt
stos
xchg
daa
in
into
cwtl
pop
lods
dec
mov
sbb
fdivrs
stc
stos
jbe
cmp
test
call
mov
lock
mov
into
aam
add
sbb
cmpb
je
ss
cmpsl
xchg
rorb
ja
pop
jns
dec
pop
ljmp
das
mov
cs
xor
jg
insl
mov
test
js
test
aaa
hlt
xchg
lret
into
cmp
and
call
xlat
dec
testb
ja
cmp
mov
push
cmp
or
testb
xor
push
add
adc
mov
xor
mov
pop
fistpll
jecxz
mov
cmpsl
ds
sbb
pop
sahf
setnp
mov
mov
push
cwtl
testl
inc
sbb
ret
adc
repnz
adc
addb
int
stc
dec
test
pop
cmp
movsl
mov
pop
adcb
cltd
ret
lret
popa
jmp
sahf
and
inc
test
fiaddl
inc
jg
lock
data16
loope
cmpsb
fisubrs
push
ret
movsb
cmpsb
jns
mov
ja
cmpsl
mov
and
lock
andl
push
dec
dec
cmp
in
push
fdivrs
push
or
lcall
and
cmp
dec
sti
dec
shll
rcll
lods
xchg
push
push
lds
iret
dec
mov
cmp
stos
lret
lret
fcomps
mov
add
loopne
push
sbb
add
sbb
xchg
mov
lcall
arpl
pop
sub
les
jb
lea
dec
add
jge
jg
ficoml
fwait
maxps
lahf
stos
out
das
test
int
shrl
repz
cwtl
dec
lret
push
movsl
call
enter
loopne
adc
or
imul
xlat
push
jb
mov
xor
push
jns
sbb
jne
mov
repz
mov
cmc
mov
pop
sarb
in
mov
jmp
popa
stos
pop
and
fisubl
mov
and
pop
test
aad
cs
loop
gs
cmc
dec
call
sahf
bound
popf
jo
std
cwtl
rcrb
pop
ljmp
and
in
jl
fs
shlb
call
add
imul
sbb
push
cli
and
add
add
out
jmp
mov
cwtl
lock
push
insl
inc
xchg
out
mov
in
sub
xor
out
cmp
aas
push
inc
repnz
jnp
loopne
dec
rcll
negb
nop
sbb
push
jnp
lret
push
pop
aaa
ficompl
iret
or
out
jmp
and
xchg
fidivl
dec
ljmp
gs
mov
insl
cmp
ja
mov
inc
out
xchg
ret
cld
hlt
mov
cmp
push
inc
inc
inc
outsb
dec
in
data16
je
out
bound
leave
hlt
or
outsl
insb
sub
lods
and
mul
out
add
jbe
jo
ja
and
xchg
outsl
sbb
mov
adc
mov
pop
cmp
popf
jb
push
mov
pop
cmpsl
ffreep
rcrl
stos
cmp
xor
jmp
ret
xchg
mov
ret
add
or
xchg
stos
sbb
fdivrl
pop
in
lcall
mov
add
mov
ret
add
test
and
jge
mov
sbb
add
imulb
sub
enter
lods
and
or
fadds
adc
dec
dec
mov
dec
mov
xchg
sub
pop
aad
pop
jmp
sahf
sub
xor
lcall
sahf
cmpsl
xor
add
in
sar
xchg
pop
xor
pop
pop
lock
pop
mov
bound
int3
adc
into
sbb
loopne
sub
push
jp
and
inc
xor
dec
jle
orb
push
jg
and
cmpsl
mov
cmpb
mov
jno
cmc
push
sbb
in
xchg
pop
je
sbb
and
enter
dec
xor
push
jmp
xor
ds
and
pop
or
push
mov
mov
xor
and
test
rcr
mov
pop
pop
imul
pushf
incl
sub
mov
mov
jae
cmp
pop
nop
fldcw
mov
punpckhwd
stos
outsl
pusha
negl
mov
sahf
lods
loopne
jge
inc
mov
out
push
lret
lods
xor
push
push
dec
push
movsb
ja
mov
mov
push
inc
lret
adc
jns
xor
ja
test
testb
jns
and
in
pop
sbb
cmpsl
aas
pop
aaa
jno
idiv
add
xchg
cmpsb
int3
dec
loopne
lret
popa
jnp
int3
push
pop
xor
mov
sbb
push
bndstx
sti
cmpb
jle
rorl
jg
outsb
mov
pusha
xchg
ret
ret
ret
xchg
ftst
jle
and
rcrl
add
fs
push
xchg
mov
enter
xchg
mov
sub
inc
lods
add
sbb
pushf
cmc
fs
sbb
jl
mov
jbe
leave
imul
jmp
bndldx
cmp
mov
sub
hlt
mov
mov
inc
mov
sahf
nop
jns
dec
mov
and
xor
lcall
xchg
fcomps
jae
mov
adc
int3
movsb
pop
loope
adc
nop
negl
sub
xor
clc
adc
loopne
xor
imul
scas
push
inc
fisttpl
jo
or
xor
push
and
push
lea
inc
adcb
xchg
pop
fistps
xchg
lods
jbe
add
pushf
test
mov
imul
and
imull
insl
ret
sub
lret
cmp
push
in
loopne
mov
dec
ljmp
and
mov
mov
sbb
mov
fistpll
push
mov
popa
xor
aaa
inc
aas
pop
mov
mov
loop
stc
xchg
mov
daa
stc
in
ja
or
xchg
insl
lahf
lret
fstps
sbb
scas
mov
jmp
xchg
xchg
pop
add
test
inc
mov
mov
pop
fists
fwait
push
inc
out
xchg
and
pop
mov
ficompl
mov
rcll
cmp
mov
inc
fcomps
insb
push
into
rcl
movsl
leave
sbb
sti
pop
cmp
sub
pop
int3
dec
dec
jmp
pop
lock
dec
dec
in
ja
aad
push
insb
jle
fcmovnb
enter
loope
mov
lods
scas
loope,pt
ret
shll
adc
fldenv
ds
imul
push
cmp
mov
push
push
test
outsb
sub
sub
ficompl
or
dec
dec
test
cmp
inc
int
jl
pop
mov
pop
mov
mov
mov
push
xchg
out
stos
rorb
sbb
dec
inc
sbb
xchg
gs
pop
mov
or
test
bound
fnstcw
mov
mov
mov
cmpsl
insb
sub
jno
stc
sub
sub
sbb
jno
add
xor
sbb
or
int
pop
xlat
push
push
and
inc
and
shlb
mov
jno
out
mov
iret
and
stos
mov
outsb
lock
pop
jle
aam
les
ss
dec
ret
jge
push
les
and
ficoms
int
sub
scas
mov
mov
mov
out
sub
fnstcw
push
pop
sbb
or
add
and
outsl
dec
pop
dec
loop
shl
mov
xchg
test
mov
aam
ret
fsubs
imul
aaa
jae
sub
leave
in
cli
lods
leave
scas
cmpsb
stos
mov
cli
adc
adc
push
xchg
jg
int3
adc
cmpsb
xchg
jne
mov
xor
xchg
fmull
jle
sbb
jle
add
stos
add
movsl
mov
jb
mov
fdivp
sub
mov
mov
push
sbb
pop
rol
jecxz
jnp
mov
ret
into
test
mov
sbb
mov
and
outsb
push
push
pushf
mov
fdivrl
mov
inc
and
mov
out
notb
push
add
sarb
fs
loop
mov
inc
insb
pushf
inc
fcmove
iret
movsb
mov
adc
loope
int
xor
push
dec
lods
aad
add
divb
cmc
cmp
adc
jl
fst
mov
jle
xchg
add
pop
lods
push
cmpsb
mov
adcb
mov
cwtl
fisttpll
testb
add
xchg
mov
pop
leave
inc
fdivr
mov
sub
cltd
pop
and
xchg
outsl
cmp
jmp
stos
sbb
sbb
sub
cmp
cmp
mov
xchg
lcall
cwtl
or
stc
into
idiv
cs
ret
and
cmp
imul
lcall
lret
std
dec
stc
push
fs
hlt
push
daa
mov
enter
call
lahf
test
sbb
jle
dec
andl
mov
xchg
inc
dec
nop
fs
rolb
jnp
add
inc
out
scas
adc
xchg
inc
fidivs
xchg
call
sub
loope
cld
pop
and
lret
push
ret
loope
ljmp
jno
enter
pop
pop
push
repnz
ret
rorl
adc
jecxz
sbb
loope
cltd
push
mov
sbb
scas
ret
ud1
mov
dec
mov
mov
mov
out
std
cwtl
cs
xor
add
push
das
mov
push
cmp
jmp
or
cmp
xchg
cmpb
sub
test
xor
test
cmp
outsb
inc
fmull
cli
xlat
push
rcl
es
push
sbb
ret
ret
je
sub
pop
hlt
xchg
fistpl
inc
cmp
pop
leave
fstpt
ror
xlat
jl
js
and
pop
xchg
sbbl
sbbb
in
ss
jl
cs
mov
iret
pop
push
or
sbbb
or
inc
and
insl
push
popa
push
sbb
pop
hlt
and
js
lods
inc
ja
push
rcrb
enter
sbb
push
dec
cmp
mov
mov
mov
and
xor
sbb
clc
repz
cmc
inc
pop
daa
jbe
and
dec
pop
xor
jbe
xchg
aad
adc
lods
outsb
inc
cmp
push
and
sti
fwait
push
std
mov
jecxz
jmp
stos
nop
push
xchg
adc
jge
and
sahf
push
call
mov
frstor
ret
mov
mov
xchg
call
je
hlt
sub
test
les
adc
add
rcrl
mov
icebp
mov
inc
and
adc
add
scas
leave
int
fwait
int3
lea
jnp
cld
push
rcr
xor
mov
stc
lcall
inc
push
cmpsb
cmp
out
or
decl
loop
push
inc
push
inc
int
adc
ja
scas
jp
addr16
loope
push
mov
mov
jle
ffree
jecxz
push
fnstcw
scas
pop
dec
popa
mov
mov
gs
sub
xor
dec
cmp
push
push
inc
ficoms
xor
push
inc
repz
inc
sbb
ror
fidivl
push
mov
iret
sbb
add
inc
sub
repnz
lods
mov
push
push
jne
addr16
int3
fcmove
fidivl
insl
cmpl
mov
hlt
adc
out
sub
jecxz
movsl
xchg
ficoml
aad
jg
int
and
pop
ss
mov
dec
into
shl
inc
jecxz
outsl
cmp
jecxz
gs
pop
sub
clc
mov
fstl
xor
adc
popa
clc
cmpsl
jmp
mov
addb
fs
in
dec
xor
insl
jns
nop
push
rcrl
push
std
cli
test
or
sbb
lock
fwait
cmp
test
xchg
jbe
xchg
gs
sub
cld
das
mov
xchg
mov
inc
mov
ffree
push
pop
cwtl
stos
aam
shll
movsl
loop
nop
imul
jp
add
adc
jae
cmp
adc
adc
and
or
lcall
jle
xchg
mov
sbb
xchg
cmpsb
outsb
jp
insl
sbb
sub
enter
sbb
jmp
nop
insb
dec
pushf
pop
mov
stos
mov
cmpsb
icebp
stos
call
cmp
ret
xchg
fcompl
xor
lea
mov
sub
sub
add
and
dec
imul
add
sub
or
sbb
dec
into
fistpll
icebp
ror
cmp
fmulp
push
popa
cmpsl
out
test
jbe
shrl
fstpt
and
imul
pop
out
into
and
stos
aad
lds
mov
loopne
sub
mov
pop
mov
lahf
das
mov
adc
rcll
in
imul
jmp
and
pop
xchg
xchg
test
js
or
cli
mov
shl
cmp
mov
dec
icebp
mov
stc
pop
jne
addr16
sarl
jae
mov
add
sbb
inc
std
cli
bound
pop
or
sti
sbb
adc
test
push
xor
and
je
stos
mov
dec
leave
test
cmp
inc
jno
mov
inc
repz
cmpsl
lods
out
pop
add
lret
lcall
stos
loop
into
mov
jecxz
out
sub
dec
xchg
mov
pop
call
aas
adc
out
int3
pop
cmpsb
cwtl
lcall
and
mov
cmc
push
mov
lods
lret
iret
dec
or
andb
xchg
inc
and
push
movsb
add
loope
and
push
adc
adc
out
in
inc
in
push
dec
pop
outsl
rcr
jecxz
ss
in
mov
adc
aaa
imul
sub
push
mov
insl
pop
mov
adc
push
and
adc
shrl
lret
pop
sbb
imul
imul
cmovs
movsl
imul
inc
movsl
mov
test
inc
xor
or
cs
cs
call
adcl
mov
mov
test
mov
rol
add
out
test
sahf
xor
adc
push
rol
mov
sbb
leave
mov
mov
jle
cmp
xchg
addl
scas
dec
mov
rcll
adc
sbb
dec
and
nop
jge
sbb
lods
loop
sbb
jecxz
xor
fs
pop
pop
mov
and
inc
push
arpl
into
dec
jnp
jae
hlt
mov
aad
pop
jg
out
movsl
dec
adc
sbb
dec
and
into
jne
add
adc
pop
icebp
mov
fnstsw
sbb
sbb
inc
imul
push
inc
in
mov
pop
jecxz
out
test
daa
mov
mov
mov
cmpsl
lahf
js
dec
js
fwait
and
fsubs
dec
outsl
sbb
ret
fcoml
hlt
push
add
lcall
into
add
loope
and
push
or
xchg
daa
pop
subb
dec
stos
add
in
pop
pop
and
xor
and
xor
xchg
pop
negb
inc
xchg
arpl
cmp
outsl
enter
inc
je
lret
and
clc
or
dec
sub
jns
scas
pusha
adc
imul
fdivp
gs
je
cld
in
push
pop
shl
push
in
in
jnp
pop
hlt
xchg
iret
bound
mov
sahf
sbb
jecxz
inc
shl
insb
mov
mov
jmp
bound
xchg
or
sub
jmp
sub
lds
jno
in
retw
mov
outsb
push
lahf
repnz
and
jnp
cmovns
ret
std
and
push
push
dec
and
aaa
inc
ficoml
mov
sbb
popa
stc
sub
dec
les
inc
rcr
incl
xor
repz
inc
sub
ja
adc
cmp
adc
inc
lahf
outsb
or
inc
xchg
stc
rolb
mov
dec
or
fsubs
jp
loope
mov
dec
xchg
pop
rcrb
es
cmc
push
insl
rorb
push
lds
das
aas
jnp
dec
test
shlb
movsl
mov
call
dec
xor
lea
add
push
push
lcall
cwtl
stos
mov
imul
and
into
sbb
rol
fwait
pop
aaa
sub
inc
cmp
pop
lcall
fucomi
sub
sub
icebp
cmp
xchg
hlt
dec
dec
add
cmpsb
cs
push
adc
mov
push
and
push
call
jp
fidivs
xor
xor
loope
xor
iret
cld
or
sbb
add
gs
das
push
dec
sbb
mov
dec
repz
cmpsl
sub
mov
jp
inc
inc
push
jg
imul
jecxz
aas
jle
xor
jne
sbbl
jnp
lahf
mov
pusha
adcb
incl
fsub
jle
or
ds
cmp
mov
into
mov
fsubrl
jb
movsl
cmp
clc
sub
stos
fidivrl
lea
mov
xchg
movsl
mov
rcll
negb
stos
jo
adc
pop
aad
outsb
sbb
divb
roll
mov
into
fimull
pop
xor
push
test
testl
xor
in
mov
mov
mov
lea
ss
outsb
andb
fwait
push
imul
arpl
lock
into
bound
xor
push
or
pop
xchg
jge
jno
loopne
fidivs
pop
xchg
jne
mov
loope
scas
out
loopne
inc
dec
call
inc
dec
sbb
stc
push
mov
out
out
jae
icebp
js
jmp
dec
mov
cli
ja
arpl
adc
xchg
test
sub
sbb
adc
call
xchg
inc
sub
ret
shll
or
sub
loop
or
daa
inc
sahf
popl
xchg
jns
jg
je
shll
in
popw
ss
push
pop
jmp
sti
xchg
icebp
push
popf
enter
jp
and
stos
inc
cltd
or
pop
aas
mov
mov
in
sbb
addr16
popl
std
xor
cli
test
iret
loopne
pop
faddl
push
mov
push
int3
dec
push
jns
xor
or
pop
hlt
jo
stos
mov
jl
adc
push
adc
push
push
push
lea
mov
sub
push
adc
arpl
shr
and
add
dec
js
fsubs
int3
xor
aaa
pop
inc
push
ljmp
jmp
pop
jecxz
xlat
sub
xor
inc
push
js
andb
cwtl
pop
or
in
lods
mov
imul
xadd
cmp
dec
stos
mov
sub
xor
sub
pop
cmpsb
inc
pop
cwtl
in
inc
and
cwtl
and
inc
xor
and
jg
and
mov
icebp
jge
lods
pop
adc
mov
test
rorl
xchg
gs
fcmovnbe
scas
out
push
dec
stos
inc
jp
jo
jbe
pushf
xor
mov
jmp
sub
loope
dec
sbb
sub
jge
mov
mov
push
outsl
mov
jno
jo
scas
das
add
xor
ljmp
push
mov
fisttps
push
lods
inc
jmp
cmp
mov
ljmp
fadds
loop
inc
test
mov
or
vfrczss
sbb
cmp
movsl
lds
invd
xlat
repz
cmp
jge
fwait
pop
icebp
fisttpll
js
fistps
push
or
sub
sub
ja
sahf
hlt
lahf
idivl
test
push
cmp
jns
xchg
in
add
movsb
push
mov
lahf
sti
movsl
out
xchg
sbb
add
mov
test
daa
jg
pop
push
nop
inc
mov
notb
pop
xchg
sbb
aam
xorb
and
mov
or
jo
setns
mov
andl
sbb
call
dec
inc
or
push
fisttpll
adc
sub
push
out
push
pop
inc
fisttpl
inc
fucomp
inc
pop
aas
jne
cmpsl
ds
lret
mov
fidivl
xor
xchg
pop
ret
and
xor
insl
aad
out
pop
repnz
add
adc
jl
push
mov
cwtl
lods
and
leave
adc
mov
mov
inc
lahf
push
xchg
cmp
adc
push
cld
lcall
jne
pop
stos
or
sahf
testb
shll
outsl
push
dec
jbe
test
xor
or
cmpb
adc
jmp
cmp
sub
daa
sub
test
rorl
jbe
repnz
mov
arpl
pop
out
mov
cmp
stos
inc
lret
je
pop
jecxz
lods
dec
in
inc
mov
fnstsw
and
insl
adc
andb
data16
out
arpl
lret
lods
dec
push
mov
je
jnp
dec
lods
addr16
les
lret
mov
nop
mov
loopne
stos
and
iret
addl
sub
aam
mov
jecxz
pop
rol
and
mov
sbb
sbb
ss
and
mov
call
xchg
xchg
addl
cli
jmp
paddb
pop
jae
imul
icebp
jge
mov
call
dec
in
imul
dec
int
nop
jmp
lret
adc
sti
sub
fs
insb
mov
lret
ret
addr16
sbb
lods
out
jle
cmp
push
cmp
imul
xchg
dec
dec
lea
and
mov
imul
add
xchg
inc
sbb
mov
sub
mov
lcall
les
fstpt
repz
std
push
test
adc
int
into
cmp
ljmp
xor
fdivr
sub
lock
jns
sub
popa
cltd
dec
loope
rclb
lods
inc
imul
mov
sarb
mov
cld
jnp
outsb
sub
lahf
mov
jp
or
jmp
fisttpl
xor
es
imul
mov
mov
imull
cmp
aas
cmc
jb
mov
adc
sbb
cmp
lcall
push
push
inc
iret
pop
jnp
mov
mov
push
insl
bound
xor
lcall
dec
arpl
dec
mov
in
cmc
shlb
mov
mov
movsl
decl
or
stos
cmp
xchg
pop
or
mov
es
xchg
cwtl
aas
pop
ss
dec
lods
fwait
mov
sbb
pop
repz
dec
and
adc
cld
into
and
push
pop
out
jg
adc
xorb
pop
sbb
repz
xor
push
insl
push
loopne
mov
aas
mov
xchg
loopne
icebp
adc
sub
push
pop
pusha
mov
fnstsw
ret
fists
sub
inc
ret
inc
lahf
int
dec
rclb
cmp
out
orb
imul
popa
jne
mov
mov
in
fcoms
sub
adcw
pop
shrb
and
and
sub
or
int3
sbbb
push
mov
mov
pop
fisubl
and
jb
mov
mov
aaa
xchg
dec
fsubrp
jp
negl
cmp
jno
jno
fiaddl
stos
in
dec
mov
inc
xor
icebp
pop
jge
xchg
push
fadd
ret
and
xchg
jb
add
push
dec
xor
cs
ficomps
cmp
cli
fcompl
ret
xchg
daa
mov
lea
pusha
les
cmpb
mov
popf
call
mov
ficoml
jno
sarb
aas
pusha
gs
fwait
cmc
dec
pop
push
mov
and
mov
jge
fnsave
negl
mov
jnp
lock
jle
cmp
pusha
xchg
in
shll
popa
shl
jae
push
aam
rcll
out
jo
pop
cmpsb
outsb
das
movl
movsl
mov
fwait
xchg
outsl
push
iret
gs
mov
mov
mov
push
jge
pop
aam
xor
idivb
gs
sbb
decb
sbb
or
jge
repnz
out
xchg
add
cmp
fbstp
dec
int3
repz
mov
and
addr16
cmp
movsb
pop
dec
pushf
cwtl
xchg
sub
pop
lcall
shr
cli
or
mov
sub
aam
sub
out
adc
push
addr16
shrb
xor
fisubrl
aad
fiadds
xchg
mov
mov
cld
mov
shlb
mov
mov
jbe
jae
cmp
adcb
cltd
jo
das
mov
and
fisttpl
out
rcl
push
sti
lret
sub
sbb
dec
xchg
ja
ja
aad
mov
rorl
add
jb
push
jl
movsl
mov
dec
in
in
push
rcrb
xchg
xlat
mov
sbb
shrb
addr16
roll
sbb
fisttps
pop
mov
cmp
mov
insb
dec
mov
pop
test
pop
lret
stos
xchg
movsl
lock
inc
sarb
xchg
ds
xchg
cs
aad
pop
mov
jo
inc
jecxz
xchg
add
stos
cwtl
out
ret
or
push
ss
cmp
inc
jle
movsl
mov
and
fucomp
addr16
lahf
push
mov
add
inc
pop
mov
mov
jge
add
mov
pop
xchg
or
movsl
push
mov
fadds
shr
lret
cld
fstp
call
popa
mov
inc
stos
add
int
sub
aas
adc
enter
fldln2
pop
fidivl
push
das
test
clc
stos
ljmp
inc
mov
push
push
in
shrb
adc
xor
ds
jo
into
leave
sbb
test
jns
std
push
into
xor
jmp
xlat
jle
ljmp
jae
jge
mov
ja
in
or
mov
je
and
aas
scas
ret
jb
sbb
sbbb
xchg
sbb
mov
fistpll
adc
or
sahf
in
sub
das
dec
jo
int3
aaa
roll
stos
add
mov
pop
inc
xchg
movsl
push
sbb
rol
and
sarb
mov
sar
fsubrs
movsb
in
pusha
imul
movsb
cmpsb
arpl
into
sub
call
or
pop
jle
sub
int3
add
xchg
fwait
mov
add
push
enter
mov
inc
push
lcall
ret
xchg
lods
dec
jecxz
jns
xchg
dec
add
cmp
pop
xor
inc
adc
pop
out
dec
and
stos
or
push
pop
push
stc
clc
lods
xor
inc
cmp
and
jl
xchg
jle
adc
pushf
inc
out
insb
push
sbb
test
pop
cmp
cltd
mov
cmp
inc
mov
mov
add
out
inc
adc
inc
mov
hlt
dec
pusha
lahf
dec
dec
cld
push
iret
scas
jmp
cmp
cmp
cwtl
xor
dec
xchg
inc
pusha
adc
fstpt
xor
stos
fs
jb
adcb
fstpl
ds
cltd
mov
mov
in
aaa
sti
in
cmp
leave
and
scas
mov
cmpsb
dec
inc
fucomp
jo
hlt
je
gs
movsl
push
popf
push
jecxz
in
cmpsl
and
jle
sbb
lret
sbb
ds
insl
jnp
push
pop
sbb
xchg
loope
jmp
orl
xchg
leave
dec
out
fldcw
mov
imul
sub
add
fmull
cld
push
test
fdivp
pusha
sub
cmpsb
mov
in
or
test
fsubl
jmp
call
xlat
std
stos
jno
push
sbb
adc
adcl
push
iret
outsb
insb
bound
xor
mov
add
je
sbb
bound
jae
fdivrs
enter
inc
mov
cld
psrad
jmp
cmp
adc
sbb
push
xchg
lahf
insb
mov
pop
xor
out
sub
fdivp
fadds
sub
pop
inc
sahf
scas
addb
xchg
jmp
or
divb
in
and
hlt
jae
jbe
or
inc
loope
sub
mov
in
push
daa
loope
test
xlat
in
sub
push
inc
or
inc
xchg
les
pop
mov
stos
fucomp
sub
icebp
mov
shl
jg
cmpsb
scas
xchg
bswap
inc
mov
in
cltd
pop
mov
sarb
je
mov
fdivl
mov
je
xchg
rorb
add
dec
xchg
insl
sahf
dec
cmpsl
clc
pop
aaa
and
xor
rcrl
mov
jnp
loopne
shlb
bound
push
icebp
fnsave
cmp
jnp
sti
adc
and
sub
jbe
and
imul
push
das
and
inc
mov
fwait
int
out
cmp
pop
aas
loopne
add
cmp
pop
xor
jmp
or
cmc
mov
sti
sbbb
xchg
scas
jp
dec
loopne
pushf
jns
sbb
in
mov
lods
add
sub
movsb
xchg
clc
inc
stos
repz
gs
jmp
bound
lds
idivl
and
or
lcall
stos
fsubrs
stc
lea
mov
add
jle
and
inc
jg
cmc
lcall
loop
xor
lock
add
adc
adc
lret
xchg
fimull
cmpsb
jo
and
aad
inc
xor
dec
inc
cmp
mov
rcl
adc
mov
dec
scas
sar
popa
sbb
dec
mull
push
push
adc
out
xor
test
popf
lahf
pushl
cmp
sahf
jge
out
ret
mov
call
inc
mov
out
test
sbb
mov
orb
es
inc
stos
inc
cs
insl
mov
sahf
xorb
ret
pop
mov
dec
mov
xchg
movsl
icebp
pushf
test
lahf
cwtl
cmp
mov
jo
daa
shrl
into
fwait
hlt
ss
seta
sub
imul
mov
adc
cmp
test
mov
in
and
test
lahf
mov
flds
xchg
pop
hlt
movl
or
scas
lea
or
arpl
sub
shrb
sbbl
dec
mov
int
imul
call
xchg
rcll
jecxz
cmc
cwtl
mov
or
jne
dec
iret
gs
xchg
lock
loope
in
or
ret
cmc
cmp
add
cltd
scas
inc
lret
sub
mov
push
mov
pushf
shlb
and
cmp
push
xchg
pop
cmc
jle
mov
lds
push
jmp
repz
jl
push
mov
pop
out
adc
jle
scas
ljmp
xor
icebp
rorb
dec
in
dec
testb
into
sub
dec
stos
pop
fdivl
pop
jmp
or
js
xchg
pop
ss
fdivr
dec
fidivrs
dec
pusha
sub
dec
dec
xor
cli
out
pop
xchg
in
or
pop
and
push
fsts
mov
add
ljmp
xor
adc
mov
ss
adc
push
flds
dec
stos
jl
pop
push
frstor
mov
dec
push
push
mov
repz
cmp
loope
je
ljmp
lock
mov
push
rclb
daa
or
movsl
fdivp
dec
xchg
inc
jge
push
out
lahf
inc
lock
daa
adc
mov
test
jb
adc
mov
pop
mov
sub
mov
int3
mov
decb
push
inc
arpl
inc
pop
mov
mov
inc
adc
mov
iret
cwtl
sub
jle
cmp
testl
mov
clc
mov
js
cmp
dec
mov
mov
push
push
ret
aaa
lea
dec
in
andl
iret
icebp
insb
aam
fs
lods
mov
gs
push
fsubrl
jmp
xor
xchg
jno
negl
xchg
movsl
jecxz
into
in
pop
leave
dec
idivl
ds
shrl
jmp
shl
fnstenv
stc
jp
iret
aad
jg
das
adc
xchg
add
popa
mov
stos
lods
pop
cmc
fisubrs
jl
pushf
shl
cmp
std
jmp
jnp
sbb
add
popf
sub
fs
call
aas
xchg
pop
insl
lods
adc
sub
mov
xchg
sub
enter
std
bound
xchg
push
push
in
push
jmp
je
bnd
ss
inc
mov
in
or
xchg
mov
pop
lods
inc
nop
loop
sub
jecxz
sub
pop
popf
jb
inc
jg
fidivs
push
ficomps
dec
cmp
and
scas
mov
push
lcall
in
test
int
xor
pop
xor
mov
cmp
mov
loope
enter
sub
xchg
cltd
inc
out
xchg
repz
sub
mov
lock
and
int3
adc
jbe
loop
adc
fsubrs
cmp
mov
in
jge
das
push
adc
mov
fimull
addl
mov
sbb
mov
xchg
subl
mov
inc
out
inc
fs
cmp
push
fcomps
dec
insl
ja
xchg
rorl
leave
push
enter
add
std
call
enter
jne
ret
mov
icebp
mov
or
xchg
xchg
and
cmc
xor
insl
fsub
dec
push
jle
add
fiaddl
inc
mov
or
out
cld
cmpsl
ds
shrb
add
mov
push
jne
mov
cmp
push
pop
pop
cs
sub
dec
jge
mov
mov
arpl
daa
push
in
test
out
out
out
or
hlt
fnstcw
imul
arpl
mov
test
out
xchg
mov
les
cmc
cmpsl
int3
roll
dec
pusha
jno
mov
inc
mov
sub
inc
out
cld
ja
jb
sbb
lret
sbb
mov
push
jecxz
repnz
call
hlt
mov
adc
ret
scas
ficomps
dec
in
sti
adc
hlt
aad
gs
fimuls
sbb
cmpsl
mov
fstl
add
xor
pop
shrl
out
inc
cmp
push
cltd
sbb
aaa
data16
pop
dec
out
mov
stos
sbb
hlt
mov
cmp
leave
mov
xchg
data16
adc
xor
fmul
subb
cmp
das
fidivrs
sbb
xor
jbe
arpl
cmpsl
adc
push
push
gs
push
push
dec
stc
popf
into
mov
popf
hlt
sahf
mov
jle
mov
cmp
push
xchg
add
jge
cmp
sub
out
dec
xchg
sub
jge
add
mov
xchg
pop
add
add
int3
push
add
cmpsb
fldpi
ss
mov
movsb
xor
lods
sub
leave
inc
fwait
stos
and
mov
ss
mov
mov
mov
pop
or
andb
mov
xchg
dec
xor
out
dec
ret
call
pop
clc
or
and
dec
cmpsb
lcall
fs
stos
inc
mov
push
fwait
cmpsl
xor
out
fiadds
out
std
cmp
sahf
jo
loop
pusha
add
ljmp
lret
jbe
sub
cmp
adc
adc
add
fldt
subl
cltd
movsb
sbb
adc
je
jp
out
and
mov
mov
insl
sub
pop
in
mov
add
adc
cs
das
dec
popa
sti
outsl
push
dec
cmp
cmp
push
not
lcall
mov
add
mov
dec
mov
or
jmp
cmpsb
movsl
jmp
or
cmp
add
lahf
sahf
cmc
dec
jbe
xorl
out
bound
es
add
mov
jp
fs
or
push
xchg
mov
lea
cmp
or
push
pushf
jbe
dec
insb
fstps
mov
outsl
inc
push
push
cld
hlt
data16
and
add
or
fiadds
mov
mov
jb
xchg
jecxz
mov
add
sbb
pop
sub
pushl
adc
jp
adcb
fwait
adc
mov
imul
xor
xchg
xchg
in
pop
das
or
push
insl
rol
ret
rorb
add
in
lds
lret
jg
scas
insl
adc
ljmp
jno
mov
js
push
and
inc
cwtl
jecxz
cwtl
jg
inc
cs
rcrl
imul
mov
sbb
jg
daa
popa
jo
rclb
inc
sahf
xor
jae
push
shr
mov
lea
xchg
or
sub
outsl
add
scas
pop
lods
js
inc
arpl
test
sahf
xor
mov
jns
imul
push
cld
inc
cwtl
mov
filds
or
movsb
adc
jno
mov
xchg
pop
test
jbe
sub
sti
idivl
mov
pushf
or
add
xor
mov
addl
shrb
fistpll
in
mov
test
fwait
xor
xchg
mov
out
mov
xor
out
lahf
fwait
push
dec
insb
out
in
push
xor
inc
sbb
imul
or
inc
subl
add
inc
pop
xchg
xchg
test
cmp
sbb
out
jg
xor
mov
mov
push
icebp
mov
adc
mov
les
or
sbb
bound
xchg
xlat
arpl
cmc
adc
jae
pop
shr
pop
pusha
jg
mov
mov
loopne
movsb
adc
jecxz
ss
ret
sub
push
rclb
cs
incb
inc
rcrb
lea
and
or
fidivrl
mov
cmp
mov
repnz
or
stos
cmp
into
xchg
jns
xor
dec
cmpsl
lock
stos
addl
addb
bound
sub
mov
jo
pop
fsubr
lods
cmp
and
cltd
lcall
fisubrs
out
mov
hlt
sub
repz
pop
mov
shr
je
leave
dec
mov
mov
xchg
imulb
arpl
lds
mov
leave
out
xor
into
sbb
pop
mov
mov
pop
xor
jecxz
enter
sub
sub
mov
pop
outsb
adc
jnp
push
dec
pop
xchg
xor
jno
mov
fisttps
push
lods
les
lahf
ss
fimull
or
icebp
dec
cmp
or
or
iret
adc
xlat
mov
fstpl
mov
push
mov
sbb
mov
mov
push
mov
fucomp
jo
insb
xchg
enter
and
pop
fbstp
cmpsl
mov
nop
stos
xchg
es
mov
push
mov
cld
adc
jl
xor
repz
dec
mov
add
mov
jecxz
sub
push
or
or
sbb
sub
nop
daa
push
dec
jecxz
and
or
add
test
call
rol
sub
pop
popa
ficoml
test
cmp
hlt
cmp
cmp
cmp
dec
fldt
inc
ror
inc
push
lret
push
addr16
lock
pusha
negl
and
ss
je
fwait
mov
pop
jae
fscale
lods
mov
mov
mov
mov
jo
adc
pop
dec
aas
jns
addr16
add
inc
sbb
and
clc
xor
jg
pop
pop
imul
and
fildll
cs
sahf
dec
xchg
mov
movb
in
test
push
es
push
adc
scas
jno
in
jecxz
jnp
cwtl
lods
scas
bound
push
out
sbb
dec
in
nop
sbb
subl
pop
daa
mov
fdivrl
or
arpl
add
or
cltd
loopne
sub
outsb
hlt
or
sub
push
jle
jle
mov
les
fstpl
cltd
insb
mov
iret
mov
push
fs
xlat
add
and
jne
lret
test
mov
dec
loope
lods
mov
inc
fldt
adc
ds
xor
rorl
and
jb
jbe
popf
in
iret
add
aad
xor
fdivp
push
mov
je
fcmovu
mov
add
push
in
or
stc
cld
mov
xor
jnp
add
xor
jmp
pop
sbb
outsl
loop
ss
jnp
fcmovu
add
dec
mov
cmpsb
mov
inc
sub
ret
dec
gs
out
fs
jg
mov
jbe
jno
or
pop
mov
ret
loop
mov
fiadds
loop
and
push
push
inc
pop
cmp
mov
aam
and
fldcw
scas
jno
clc
scas
dec
lock
add
push
dec
adc
mov
dec
aaa
mov
subb
pop
mov
loopne
jp
or
dec
stos
jmp
out
addr16
sbbb
popf
push
dec
loopne
mov
jbe
imul
pushf
and
lock
mov
mov
xor
jmp
out
or
sahf
es
pop
push
mov
lahf
push
movsb
push
xchg
sub
test
cmpsl
xchg
dec
add
incb
jg
or
xchg
fcmovnu
push
fbstp
jl
dec
add
iret
sub
and
push
aas
inc
in
and
and
addl
pop
push
leave
loopne
imulb
leave
addr16
cli
mov
mov
shl
inc
aad
daa
inc
enter
hlt
pushf
enter
test
mov
xchg
jb
clc
dec
cmp
repz
jp
adc
ljmp
jb
mov
sahf
add
shrl
add
aam
sbb
jp
mov
ret
fdivrl
aam
int3
sub
xor
cmc
shll
add
jno
push
adc
bound
movsb
popf
lods
mov
mov
repz
dec
adc
negl
push
xchg
jge
scas
and
and
mov
das
loopne
stc
test
mov
push
in
sbb
dec
dec
or
mov
fstpt
xor
cmc
and
xor
in
add
dec
test
nop
jnp
sbb
ss
mov
movsb
xchg
scas
xchg
push
xchg
sub
mov
repnz
xchg
jb
pop
cmpb
jae
arpl
inc
fmull
call
ss
pop
test
mov
repz
sbbl
rorb
cmp
mov
je
fidivrl
gs
testl
sub
cmp
add
xlat
in
fstpt
in
rorb
and
jns
insl
sarb
xchg
aam
call
cmp
imulb
or
cmc
or
mov
jb
mov
cmove
jne
dec
lods
push
and
push
cmp
jns
ret
repz
movsl
jns
and
sbb
fimuls
sub
lods
popf
xor
push
aas
xor
lcall
or
ficoml
rorl
int
jmp
and
inc
xlat
in
cmpsl
push
pop
xor
mov
loopne
xchg
jmp
js
fs
cmp
gs
rol
fidivl
std
mov
xor
scas
xchg
jnp
lea
int
popl
pop
aas
aad
vmread
lahf
adc
cld
sbb
mov
push
je
ret
push
sbb
adc
add
mov
js
fnstcw
fnsave
subb
add
push
inc
daa
lcall
push
xor
cwtl
push
dec
dec
fwait
sub
iret
xchg
inc
fisubrl
test
cmp
lahf
fcoms
fst
movsl
mov
push
dec
adc
data16
into
xchg
mov
scas
mov
add
pop
ss
or
and
or
movsl
mov
call
aaa
insl
ficoml
adc
paddb
mov
ret
icebp
inc
inc
mov
das
in
pushf
lods
dec
les
dec
lock
popa
test
mov
scas
hlt
pop
sub
jne
fsubrs
ds
les
jb
mov
pop
push
push
cmp
jmp
cmp
sbb
mov
pop
repnz
push
aam
sbb
push
in
in
decb
test
mov
fsubrs
push
cmc
daa
push
test
ja
mov
rclb
and
push
enter
mov
rcrl
pop
push
xlat
lret
fs
dec
ret
mov
mov
mov
repnz
ds
sbb
test
sub
repz
jmp
xchg
mov
jb
jne
daa
ja
stos
add
jl
cmp
inc
ljmpw
fbld
aad
inc
or
xchg
adc
jp
aaa
sbb
arpl
call
pusha
ja
jbe
pop
lret
jge
sbbb
pop
or
pop
ss
test
stos
mov
xor
int3
dec
divb
mov
das
xchg
sub
shlb
pop
mov
int3
sbb
lods
xchg
mov
test
mov
push
jecxz
test
int
add
aad
add
or
xor
shrl
fcmovnb
dec
dec
in
cmp
or
outsl
sbb
stos
mov
imul
in
outsl
gs
loopne
push
bndldx
je
test
inc
outsl
cs
iret
mov
push
stc
jmp
cmp
roll
xchg
notb
aad
idivl
je
je
xchg
pop
xchg
inc
jg
daa
icebp
icebp
and
sbb
sti
std
xchg
jge
xchg
pop
sub
xchg
sbbl
shll
inc
and
mov
xor
xor
sub
mov
fisttpl
cmp
subb
leave
pop
ret
push
jp
imul
xchg
adc
leave
and
stos
dec
aaa
aad
jecxz
cmpsl
and
push
imul
pusha
mull
ret
and
fwait
add
mov
mov
sbb
hlt
inc
jp
mov
ficoms
pop
add
or
int
dec
and
mov
adc
std
and
out
movsb
mov
ret
insl
adc
scas
ret
dec
fisubrl
lret
rorb
xorl
cmpl
sbb
andl
jno
cmp
pop
xor
mov
daa
jb
pop
movsb
dec
mov
mov
pop
mov
lea
xchg
sub
add
aas
mov
adc
cmp
bound
inc
mov
js
or
dec
jp
xor
sub
loopne
test
ja
outsb
add
std
ss
inc
aaa
sbb
ror
test
test
or
mov
pop
stos
in
xchg
cmp
cmp
repnz
push
out
leave
jns
push
jecxz
xor
aaa
cli
xchg
test
ja
pop
pop
outsb
xchg
pop
je
lahf
push
mov
pop
loopne
les
fists
cli
pand
sbbb
fdivrs
mov
inc
ss
jnp
xor
jecxz
xchg
sub
pop
add
shlb
or
aam
sub
rcll
mov
mov
pop
pop
pop
cmp
xor
sub
pop
sti
jbe
imul
xor
stc
popf
fistps
cmpsb
push
sbb
call
mov
les
pop
jae
fdivrl
lds
jg
imul
repnz
fisubrs
lods
les
insl
sub
loope
int3
dec
dec
into
dec
dec
mov
mov
sub
fisttpll
mov
and
push
stos
gs
push
mov
sbb
sub
gs
decl
push
adc
add
into
test
loop
mov
fdivrl
scas
in
push
out
xchg
ret
lds
mov
sbb
jp
fs
mov
push
inc
jecxz
adc
pop
xor
or
mov
adc
and
mov
xor
mov
and
jecxz
in
inc
pop
cmp
sbb
aas
dec
mov
mov
ss
fldenv
push
xchg
scas
add
pop
decl
scas
sarb
mov
fstl
ret
fsubl
mov
sbb
out
std
mov
mov
adc
sbb
inc
mov
jns
shrb
adc
insl
orl
mov
jbe
add
leave
xor
cmp
ret
add
cmp
sarl
les
sti
ret
sbb
push
mov
movl
jecxz
jo
mov
pop
inc
aad
jae
outsl
mov
lods
push
out
sbb
cmc
mov
xchg
push
dec
and
std
xchg
jns
fsubs
mov
outsl
jge
stc
out
xchg
lcall
in
xor
mov
push
xlat
sbb
mov
insl
mov
cs
or
cs
pushf
pop
jo
inc
mov
mov
sahf
mov
push
stos
lret
jb
in
cli
jo
imul
adc
lahf
out
into
mov
neg
mov
pop
aas
arpl
ret
addl
jae
xor
cmp
lahf
orl
lock
je,pn
mov
jmp
jp
mov
jg
mov
push
pop
xchg
mov
enter
push
push
out
mov
push
add
adc
and
jae
daa
loop
int
stc
js
fdivs
xchg
sub
adc
add
out
xor
gs
ret
cwtl
insb
sbb
xor
sub
jp
call
fisttpll
fdivrs
addl
sbb
xchg
shlb
sub
stc
in
cs
xchg
push
scas
mov
loop
lock
call
mov
ds
jmp
mov
jge
sub
dec
mov
dec
xchg
lods
sbb
dec
fmul
jge
sbb
loop
or
addl
nop
xchg
scas
dec
adc
mov
mov
in
sub
pop
or
dec
adc
enter
push
fistpll
add
adc
xchg
mov
sub
shll
ds
push
lock
cmp
sub
mov
test
mov
in
lock
cli
fistps
test
nop
jle
mov
and
andb
or
add
push
call
mov
inc
pop
aad
sarb
lcall
scas
dec
cmp
add
loop
pop
add
cmpsl
rolb
or
std
or
mov
sahf
push
out
mov
xchg
and
and
sub
je
aam
inc
jb
clc
jne
xchg
xor
jnp
enter
mov
pop
add
sbb
inc
sbb
inc
jns
std
mov
and
xchg
pop
test
lods
jnp
cmpsb
das
scas
mov
jae
andb
nop
clc
adc
ja
enter
sbb
add
shll
cmp
xor
cmp
push
pop
mov
int3
out
pop
call
mov
mov
pop
and
aaa
stc
int3
arpl
inc
mov
xor
clc
and
cmpb
in
outsl
sub
mov
pop
add
add
xchg
add
test
adcb
mov
call
or
cltd
adc
int3
outsb
mov
push
in
push
outsl
outsb
dec
iret
and
test
aam
stos
inc
adc
mov
push
mov
jecxz
adc
in
in
pop
imul
add
xchg
mov
and
dec
inc
mov
xchg
mov
popf
jns
cmpsb
int
mov
popa
les
and
pop
popa
mov
test
aas
xchg
jnp
out
pop
add
imul
std
dec
sbb
mov
loopne
fistl
stos
in
mov
shll
inc
cmovne
nop
xor
cmpsl
pushf
inc
dec
fidivs
and
cmp
sarb
or
pop
or
test
jmp
das
test
sub
mov
xchg
push
in
push
mov
fistpll
xchg
mov
push
mov
ljmp
icebp
and
inc
rorb
sub
popa
xor
out
xchg
push
les
cmp
xchg
sub
daa
data16
ret
pop
push
cmc
insb
mov
gs
pop
outsb
jle
out
cli
mov
inc
test
adc
pop
fmul
push
cs
cmpsb
jg
inc
loop
and
repnz
loop
sbb
fnstcw
sub
outsl
stc
cmp
cmp
mov
push
jle
das
adcl
arpl
pop
xchg
or
lea
add
test
and
clc
shl
jecxz
imul
in
cmp
dec
lahf
pusha
push
jo
fldcw
insl
pop
push
fdivrs
mov
jecxz
lods
jge
test
das
cmp
adc
pop
adc
dec
fsubl
add
lods
rcrl
jo
mov
ret
pop
ret
outsl
les
pusha
or
mov
xchg
add
sahf
sub
xor
mov
push
pop
cmp
push
push
jae
cmp
jmp
ficompl
mov
jg
outsl
es
xor
jmp
mov
xchg
push
mov
mov
inc
xchg
movsl
andb
jnp
cmpsb
repz
mov
inc
aad
aas
in
loopne
jge
inc
roll
repz
adc
jo
mov
pop
ja
or
pop
jl
notb
test
movsb
push
cmpsb
cmc
inc
pop
jg
test
shlb
stc
xchg
pop
sbb
stos
cmp
scas
subl
jns
pop
jb
data16
sub
addl
sub
aas
mov
insb
lds
lcall
sti
bnd
mov
neg
sbb
int
aam
pop
push
mov
test
xchg
in
mov
fidivrs
lds
into
sub
jmp
sbb
xor
out
mov
xchg
cmpsb
in
mov
je
insl
sbb
stos
dec
mov
in
jecxz
xchg
or
fwait
mov
ljmp
xchg
mov
inc
push
cli
jmp
mov
repz
in
mov
sbb
loop
jle
faddp
cwtl
pop
pop
out
pop
dec
ret
push
pop
cmpsb
lock
aam
adcb
out
dec
bound
jbe
adc
ds
pusha
ss
gs
stos
addr16
clc
adc
in
sbb
xor
pop
cmpsb
cmpsl
pop
xchg
nop
mov
push
jge
pop
jbe
ficomps
adc
push
lahf
shlb
jno
andb
out
scas
inc
mov
adcl
pop
repnz
aad
out
sub
lcall
jge
lds
les
lahf
sub
iret
ss
add
mov
cltd
lret
cmp
mov
stc
or
cmpsl
xor
popf
cmp
dec
stos
popf
adc
orb
mov
rcll
add
mov
data16
inc
pushf
cld
scas
mov
rol
out
clc
hlt
mov
out
mov
cmp
push
mov
push
cmp
mov
rol
in
outsb
lcall
cmp
and
es
xchg
or
cmpb
jmp
mov
pop
in
testl
inc
rcll
nop
dec
filds
inc
inc
out
push
cmpsl
or
movntps
lods
cmp
call
and
and
fsts
jl
popf
jmp
or
jg
ret
lcall
jbe
mov
popa
pushf
mov
dec
ja
fwait
mov
into
jo
daa
clc
lds
push
mov
push
pushf
jbe
jecxz
test
movsl
ret
xchg
adc
push
inc
xchg
lret
mov
inc
ffree
sub
fistpll
hlt
ja
jbe
and
xor
rcr
pop
mov
mov
fld
mov
push
sub
scas
stc
sub
fidivs
imul
xor
int
pop
test
andb
mov
jnp
ljmp
xor
sbb
xchg
push
push
mov
aam
stos
jmp
adc
shl
cmp
xor
jmp
lea
ss
mov
push
cmpb
sarl
and
mov
jmp
pop
mov
sbb
push
mov
in
nop
dec
push
sahf
cmp
push
jnp
movsb
lods
jne
in
sbb
mov
push
arpl
or
inc
cmpsb
lock
inc
jp
xchg
insb
mov
negb
adc
sbb
pusha
jne
rcl
add
or
idiv
mov
data16
add
or
out
pop
scas
mov
ss
sbb
ljmp
inc
inc
sbb
insl
lret
popf
xor
cmp
iret
decb
xor
insl
test
cmp
cmp
ret
pop
pop
jle
dec
cld
out
mov
lret
les
in
jns
lock
jle
in
adc
dec
adc
jl
icebp
mov
sbb
sbb
les
sub
jo
je
rcll
lahf
xchg
xchg
cmp
sahf
lods
jae
pop
lods
imul
mov
dec
outsb
ret
sub
fucomip
cmp
mov
cmp
scas
inc
fsubs
outsb
mov
sub
loopne
pop
adc
or
outsl
into
aad
push
and
xchg
sub
mov
inc
mov
rorb
into
test
adc
sahf
jns
fisubl
pop
lods
sub
jae
mov
setbe
xchg
int
je
mov
jecxz
ficompl
stos
dec
aad
add
jbe
sbb
dec
das
dec
je
mov
xor
inc
mov
jbe
mov
je
sub
jbe
int3
lds
dec
pop
repz
cs
leave
mov
je
mov
aas
aam
jmp
pop
mov
push
loope
pop
jno
movsb
mov
std
adcb
and
enter
test
sbb
ror
pop
ficomps
xor
call
mov
or
mov
lods
lea
ss
inc
inc
push
or
shl
inc
pop
pop
jbe
xchg
mov
mov
int3
mov
test
sub
xchg
push
imul
add
cmp
dec
je
rcrl
inc
shrb
add
inc
add
mov
pop
fdivl
xlat
mov
adc
push
fbstp
dec
sub
or
xor
and
cmp
stos
sub
xchg
push
mov
inc
hlt
cmp
fldt
pop
or
push
xchg
jl
mov
mov
outsl
imul
pusha
sub
sub
fldenv
jge
or
cmp
push
lea
or
fbstp
dec
cmp
sub
lods
jne
popf
mov
mov
sbb
add
test
cmpb
jl
or
inc
in
jne
or
fwait
jbe
xchg
add
cmc
sbb
ds
aas
lahf
dec
lret
sub
mov
incb
test
fwait
cmpsl
adc
adc
sub
lahf
mov
fisubl
ret
fistps
push
out
data16
addr16
push
dec
mov
mov
mov
imul
dec
fisttpll
std
or
sub
enter
enter
daa
aad
jo
loop
pop
in
add
montmul
cmpsb
inc
jo
mov
stc
out
pop
lock
mov
mov
into
cltd
in
xor
mov
out
scas
xchg
lret
dec
dec
stos
out
jb
pop
cmp
call
roll
jbe
daa
ljmp
or
test
or
movsl
sub
in
mov
jo
int
or
ss
pusha
mov
aad
in
sub
xor
daa
push
lcall
in
mov
imul
ljmp
xchg
cmp
jns
lock
pop
sti
stos
lcall
pop
cmp
and
loope
mov
ret
push
xchg
aas
jb
or
ljmp
and
push
dec
add
xchg
mov
mov
or
mov
jp
jae
adc
adc
mov
push
bound
fisubrl
jo
shll
popa
pop
dec
fidivl
pop
out
fs
ljmp
mov
mov
shl
outsl
cmpsl
or
xchg
push
jb
aaa
in
aaa
and
push
stos
or
xor
mov
jmp
push
out
sub
sbb
inc
jl
stc
mov
cmp
imull
jae
xchg
mov
cmp
hlt
test
cs
inc
sbb
dec
xchg
jmp
mov
jo
dec
aad
pop
or
mov
neg
iret
sub
stc
xchg
in
cmp
aam
fs
push
cmp
push
loope
es
or
add
mov
push
dec
ret
lcall
dec
and
insb
pop
test
mov
mov
push
xor
addl
sub
fiaddl
ja
call
lea
aam
mov
pop
cmp
push
mov
dec
ja
ds
popf
add
imul
mov
stc
js
xor
in
jns
jmp
or
mov
dec
outsb
jo
mov
inc
jmp
inc
es
pop
insb
mov
ljmp
mov
xlat
mov
xor
es
and
inc
in
pop
xor
xchg
inc
hlt
xchg
int
les
add
clc
aam
shl
sbb
cld
cmp
xchg
cmpsl
pop
push
negb
inc
cld
xor
jb
test
jp
popa
fwait
jbe
sbb
xchg
sub
xchg
jg
icebp
shrb
xor
sub
sbb
imul
and
pop
sbb
dec
cmc
sbb
add
cmp
imul
adc
xchg
lahf
pop
jne
rclb
lods
repnz
fidivs
dec
adc
lcall
popf
sti
jmp
and
mov
orb
mov
andb
test
lods
dec
sbb
gs
jg
ljmp
pusha
mov
cld
mov
mov
imul
outsb
mov
add
imul
loope
mov
je
and
testl
fwait
and
pop
out
movsb
dec
dec
int
jmp
inc
push
into
popf
adc
xchg
das
cs
roll
mov
sbb
add
mov
sti
sahf
stos
and
popf
push
jne
push
xor
fbstp
int3
stos
fisubrs
test
xor
fsubrs
xchg
dec
and
jae
insl
stos
mov
xor
enter
mov
ja
xor
inc
daa
jb
loope
clc
mov
das
in
xor
int
lods
push
jns
cld
xor
adc
xor
daa
idivl
test
loope
pop
lcall
ficoml
adc
push
fwait
jp
sub
in
lahf
insb
js
hlt
movsb
push
and
sti
cmpsl
daa
or
push
mov
mov
mov
jae
in
xchg
enter
fs
pop
xor
in
inc
addb
mov
jnp
jmp
mov
or
lods
scas
sbb
mov
dec
in
fidivs
jecxz
filds
sbb
lods
and
push
insb
jmp
mov
inc
int
push
lds
inc
out
mov
insl
cld
mov
add
roll
or
pop
mov
push
push
pop
mov
xchg
sub
mov
loopne
xor
jmp
push
sbb
mov
andb
cli
pop
ret
arpl
fsubs
pop
cltd
test
fdivrs
out
pop
adc
sbb
scas
adc
fmull
dec
xor
movsl
enter
inc
loope
call
inc
bound
int3
outsl
pop
push
xor
mov
inc
mov
add
in
xchg
pusha
dec
dec
sbb
cmp
sub
pop
inc
pop
adc
sti
pop
or
rolb
movsb
gs
mov
dec
inc
pop
insl
out
aad
pop
sti
jmp
sub
pop
mov
subl
xchg
int
decl
xor
and
negl
xchg
dec
mov
dec
scas
jecxz
fldl
mov
shll
pop
sub
xor
cltd
xor
out
adcb
inc
jns
and
hlt
imul
fiaddl
les
push
cmp
jae
cltd
xor
out
mov
mov
call
lret
fldl
popf
dec
adc
sub
dec
enter
cwtl
adc
adc
int3
cmp
pop
sub
jnp
xor
xchg
lret
lock
push
sbb
mov
std
sbb
mov
cmp
pop
aam
ret
cmp
fisubl
mov
xchg
mov
ret
push
call
xchg
jno
pop
mov
sbb
shl
add
mov
ret
or
xchg
jle
mov
jne
adc
aas
repz
hlt
mov
cmp
or
cmp
xchg
mov
jp
addr16
dec
sbb
int3
call
sbb
ljmp
je
xchg
xchg
sbb
outsb
cli
or
mov
xor
adcl
fs
fcompl
cmp
cmpsl
lea
in
sbbb
imul
es
push
imul
jp
lods
inc
mov
notb
mov
pop
in
push
insb
stc
nop
sahf
out
sti
dec
ss
lret
stos
jo
popa
jne
outsb
dec
cmp
sub
dec
sti
adc
fwait
cmp
lods
and
enter
lret
mov
outsl
pop
jbe
cmp
clc
cmp
adc
mov
dec
cwtl
adc
pop
inc
inc
or
ret
enter
movsb
cmp
xchg
stos
push
sbb
add
add
fs
xchg
enter
mov
xchg
outsb
ret
adc
in
push
sti
xor
mov
xchg
out
xchg
jno
xchg
dec
insb
jle
lcall
repnz
fwait
les
xchg
daa
insb
xchg
insb
cmpb
xor
push
jae
mov
push
jge
cmp
mov
pop
outsl
or
add
pop
mov
rol
arpl
mov
adc
clc
cmpsb
jmp
jo
jb
sarb
sbb
xor
testl
insb
aam
inc
les
repz
mov
imul
xchg
xchg
and
pop
jl
shlb
inc
mov
insb
sbb
pop
push
cmc
dec
or
aaa
in
imul
jns
mov
lcall
ja
push
clc
std
int
sub
lods
and
ljmp
test
movsb
add
fcoms
icebp
or
notb
ret
xchg
and
clc
imulb
jno
jae
sbbl
cmp
scas
lock
test
xlat
lea
testl
ds
inc
pop
imul
xchg
push
les
cmp
je
cmp
xor
pop
xor
insb
mov
fs
sbb
jne
jecxz
mov
push
sub
jne
dec
xor
push
jmp
and
gs
pop
mov
arpl
lea
fsubrs
pop
xorb
stos
cli
mov
sti
shlb
daa
les
pop
pop
mov
sub
es
pop
jge
adc
add
fmuls
in
int
aam
xchg
fisubrl
repnz
aad
sbbb
lods
pop
ficompl
cmpsb
les
movsb
das
inc
rorl
aam
pop
dec
adc
sbb
insb
pop
or
mov
mov
cmp
or
mov
insl
jnp
aam
pop
pop
inc
mov
pop
add
dec
imul
hlt
dec
pop
loope
sbb
mov
push
addr16
mov
sbb
cmp
jne
mov
jecxz
inc
test
jg
lcall
fwait
shlb
shrb
inc
nop
add
dec
hlt
cmpsb
fwait
testb
sub
dec
cmpsb
arpl
stc
xchg
push
pushf
test
pop
mulb
mov
adc
pop
and
mov
repnz
test
adc
les
push
pop
sbb
xchg
imul
mulb
sahf
and
mov
stc
or
pop
cwtl
pop
mov
lea
out
sbbb
out
add
jg
sub
add
je
adc
cmp
repz
outsl
inc
scas
pop
faddp
sbb
outsb
inc
daa
jnp
push
or
adc
addb
pop
mov
sub
scas
ss
in
int3
mov
movups
or
push
or
mov
or
push
outsb
sbb
ds
cmp
aad
ret
sti
aaa
pop
into
push
pop
ljmp
stc
loopne
in
push
ret
dec
inc
cmp
dec
insb
es
or
cmp
cmpsl
imul
in
add
pop
pop
fsub
out
sub
out
stos
jmp
bound
sbb
dec
adc
repz
lods
fistpl
test
mov
push
out
sbb
out
cmp
jnp
arpl
and
inc
or
inc
aas
xor
xchg
mov
xchg
ret
hlt
sbb
rcl
inc
xor
cmc
mov
daa
out
mov
std
jl
pop
sub
jg
pop
bnd
fwait
es
insb
ss
lahf
in
test
in
loop
xchg
add
adc
xchg
orb
std
jbe
adc
mov
add
push
cmp
aam
aam
xchg
daa
or
cmpsb
imul
lret
call
sbb
cmpsb
and
sbb
or
mov
mov
jmp
mov
push
add
add
lret
aaa
push
cld
stc
out
call
sbb
xor
fldt
addb
xchg
sbb
lret
stos
and
xchg
addl
data16
sbb
jne
adc
sti
add
push
daa
jg
mov
dec
cltd
xor
and
cmp
or
xor
test
cmpl
enter
inc
stc
inc
add
mov
and
incb
sti
fdivrl
cmp
xchg
dec
pushf
inc
out
jnp
cmp
ret
cs
jnp
movsl
nop
push
shlb
lret
pushl
in
test
dec
ja
hlt
test
pop
test
call
stos
jmp
test
cmpsb
repz
fwait
xor
loope
jno
into
lds
mov
mov
cld
notl
sub
mov
pop
cmp
cmp
leave
fmuls
insb
div
jle
sbb
mov
lret
cltd
jle
or
loop
mov
ret
mov
aaa
testl
mov
rol
ss
je
adc
out
cld
sub
dec
inc
mov
ja
scas
mov
inc
inc
mov
xor
repz
jle
pop
cmp
in
fcomi
adc
mov
repz
pop
call
adc
sbbl
test
push
push
repnz
fcmovnu
nop
xor
mov
jecxz
mov
or
cmpsb
push
mov
inc
jge
ja
sbb
leave
pop
inc
lret
adc
jp
dec
adc
pop
xor
das
paddusb
addr16
inc
or
and
mov
in
sarb
cmpsl
adc
push
mov
jbe
ficomps
divb
xchg
das
mov
sub
call
aam
repnz
pop
push
or
mov
popa
mov
jb
cmp
imul
loop
push
in
jns
jae
or
ss
fs
ljmp
inc
ret
mov
jmp
adc
push
adc
inc
xchg
sti
push
push
outsb
xchg
cmp
enter
push
negb
popa
lods
inc
sbb
xchg
mov
nop
testb
shll
icebp
adc
xchg
adc
jnp
daa
pop
dec
or
mov
imulb
popf
jae
sbb
orl
daa
arpl
jl
xchg
std
xor
sti
int3
cmp
scas
add
and
mov
xchg
mov
sbb
adc
jge
icebp
xor
mov
ror
pop
mov
fbld
rcrl
mov
inc
test
xchg
cmp
push
repz
repz
add
in
sbb
lods
out
imul
xor
pop
cmp
fs
and
cli
dec
jmp
ja
jg
js
mov
mov
mov
lahf
xor
xor
adcl
aad
es
repnz
mov
inc
push
cmp
test
xchg
cmp
rorb
in
push
out
pop
jge
gs
jge
jmp
mov
in
arpl
mov
xor
inc
mov
pop
ss
push
in
icebp
into
fwait
fs
mov
imul
dec
pusha
push
and
loopne
cs
cld
in
jecxz
push
scas
or
ja
jnp
in
les
in
iret
sub
or
imul
outsl
rcrl
mov
sub
mov
push
xchg
and
bound
dec
xchg
enter
out
icebp
sub
lds
xchg
and
or
and
out
mov
sbb
inc
nop
cmp
call
jmp
dec
and
add
dec
push
lock
mov
clc
fsubl
sti
outsb
pop
pop
cltd
sbb
leave
dec
sub
pop
mov
xchg
mov
movsl
icebp
imul
jns
cltd
iret
cmp
ror
mov
ret
push
and
das
adc
shlb
fsubrl
in
shrl
xchg
add
aaa
shlb
push
inc
aam
jge
out
arpl
add
addr16
je
jmp
ss
cld
sahf
fidivrl
dec
in
fistpl
cmp
popa
sub
dec
push
aas
pop
int3
arpl
cmp
ljmp
imull
push
scas
add
mov
jb
mov
sub
aas
pusha
clc
testl
inc
lret
inc
mov
fs
int3
test
adc
fs
xor
mov
les
xchg
jae
pop
repz
stc
loopne
push
out
stos
xchg
mul
add
lcall
jle
je
adcl
mov
fldenv
or
pop
xchg
sub
push
lahf
mov
lock
cmpb
fwait
xor
adc
pusha
and
jp
gs
mov
push
out
mov
inc
mov
enter
or
stc
sub
js
pop
mov
xchg
adc
mov
cmp
adc
add
mov
adc
ljmp
pop
call
dec
inc
jmp
les
add
push
iret
jne
clc
xor
icebp
jb
pop
mov
pop
add
popf
sbb
aam
mov
lea
add
mov
mov
sub
jne
dec
cmp
pop
leave
int
popf
mov
sub
test
shrb
sbb
pusha
cmpsb
inc
dec
les
leave
out
pop
hlt
sub
jnp
jne
fwait
xor
clc
adc
push
lock
dec
dec
cmp
xor
dec
ds
out
mov
mov
fnstsw
jmp
push
xor
pop
shl
push
ret
mov
mov
aam
shlb
xor
les
pop
adc
sub
fs
xchg
aaa
ja
push
cwtl
incl
sbb
xchg
xchg
enter
insl
mov
mov
outsb
cmpsb
std
ja
mov
test
or
cmp
nop
sarb
add
inc
or
pushf
sub
ret
shl
pop
pop
imul
mov
pop
mov
push
xchg
test
int3
pop
jmp
scas
mov
sbbl
test
call
gs
popf
sbb
xor
mov
push
or
pop
clc
dec
in
inc
loop
gs
lock
aad
dec
cmpsl
jg
pop
gs
les
fisttps
mov
pop
outsl
and
lret
out
aaa
fbld
fstpt
or
ret
mov
loop
icebp
enter
xor
jp
sbb
pusha
sub
int3
pop
mov
or
mov
xchg
add
movsl
xchg
push
mov
inc
jb
push
push
adc
jmp
sub
in
stos
sub
sub
aam
sub
aad
call
in
test
mulb
cmp
pop
push
jp
rcrb
xor
inc
sahf
clc
ljmp
cmp
jne
ljmp
adc
out
sbb
test
push
pop
pop
hlt
mov
jl
int
push
addr16
insb
jle
sbb
mov
pop
data16
fdivs
mov
jbe
mov
push
push
pop
mov
aaa
mov
xorb
aad
pop
add
bound
and
call
xor
sahf
cmp
add
stos
in
fisttpl
mov
mov
fisttps
lret
dec
mov
jge
add
sbb
mov
das
stc
scas
shll
mov
mov
inc
pop
pop
lods
sbb
xchg
and
int
jmp
sbb
mov
push
xchg
add
push
add
pop
outsl
mov
fldl
or
shll
cmp
add
test
xchg
xor
das
push
and
inc
loope,pt
in
lock
ret
les
arpl
sahf
cmp
push
in
mov
mov
shrb
ret
sahf
push
int
dec
test
enter
and
cltd
xchg
adc
pop
push
repnz
jbe
add
push
lret
add
scas
arpl
inc
pop
mov
das
adc
jae
xchg
xchg
xor
push
push
mov
xchg
lods
orl
lds
les
sahf
or
lea
adc
lea
movsb
mov
fldcw
push
ss
subl
push
in
xchg
bound
std
jns
faddl
dec
jp
xchg
call
mov
add
pop
add
push
fcoml
fadds
dec
in
pop
into
sub
dec
cmc
xor
jmp
sub
clc
out
jno
dec
jl
outsb
lahf
sub
cpuid
sarb
data16
xchg
fimull
pop
pop
and
popf
or
mov
add
mov
or
aas
aaa
pop
addr16
sbb
inc
fdivl
pop
inc
or
or
fwait
dec
xchg
sbb
push
mov
ja
daa
lret
dec
xchg
in
xor
aas
adc
fcoms
jo
cmp
and
pop
shl
inc
icebp
inc
aad
popf
subb
or
push
dec
adc
xchg
cmp
shl
xchg
push
mov
mov
ja
pop
pop
lcall
cmp
push
lods
int
out
in
scas
xor
sti
flds
je
xchg
adc
dec
pusha
push
add
test
inc
lods
xchg
ja
lds
jecxz
and
mov
out
adc
mov
stos
push
mov
imul
cmp
jnp
repnz
andl
mov
in
ds
cmp
xor
aad
mov
xlat
and
push
out
push
into
add
or
std
pop
cmp
adc
xor
dec
pop
sub
lret
in
sub
into
push
sub
cwtl
push
sub
mov
lret
or
mov
jmp
lret
sub
ret
insl
shll
pop
insl
adc
pop
mov
xchg
adc
repz
xchg
mov
push
int3
insl
push
cltd
fcompl
mov
int3
xchg
divb
sti
cmp
aam
inc
ss
jl
adcb
lock
xor
loop
xor
push
mov
xchg
cmp
sbb
sbb
jb
mov
jle
lcall
xor
inc
and
imul
xor
cmp
shrb
mov
loopne
jno
dec
mov
adc
xor
mov
rolb
aaa
lahf
inc
and
loopne
cmp
cltd
inc
lret
cltd
repz
je
mov
enter
pop
add
and
out
fidivs
inc
inc
inc
jbe
in
mov
inc
fdivrs
mov
ret
mov
loope
jmp
xor
decb
sbb
daa
filds
add
and
sbbl
lods
dec
jmp
imul
dec
ret
daa
xchg
stos
adc
add
es
inc
cld
data16
push
outsl
loope
pop
and
sarl
or
inc
jl
inc
mov
cmp
jne
in
mov
mov
mov
jo
and
xlat
mov
adc
pop
jmp
fdivrl
movsb
cmc
js
jb
scas
loop
loopne
xchg
lods
mov
mov
cld
mov
dec
pop
scas
call
pop
movl
addl
mov
scas
std
and
mov
fldl
fnstenv
out
gs
adc
hlt
stos
xor
in
adc
mov
test
mov
cmpsl
mov
packsswb
iret
mov
sbb
xor
sub
ds
jge
pop
aam
ja
sbb
lds
popf
mov
adc
jae
push
push
test
lods
test
mov
mov
pop
or
hlt
cmp
cmpsb
iret
jecxz
jbe
ss
push
lcall
sar
jbe
loop
adc
lret
mov
cltd
dec
pop
es
inc
pop
and
xchg
popf
out
mov
rclb
mov
cltd
scas
out
test
mov
pusha
idivl
mov
cmp
ret
fbstp
cmova
xchg
lret
ret
scas
cmp
es
push
or
nop
or
cmpl
xor
and
pop
mov
andl
xchg
stos
xorb
or
dec
addr16
punpckhwd
nop
push
fs
mov
int3
lds
jecxz
in
loopne
dec
lcall
xchg
mov
das
mov
clc
cmpsb
mov
popf
or
cltd
and
mov
jg
pop
popf
shl
jae
jge
das
mov
ja
popl
inc
cwtl
fidivl
mov
idivb
and
adc
sbb
cmp
mov
ds
jl
adc
out
lea
jp
xchg
scas
cmpsl
jne,pt
ljmp
movsb
dec
in
arpl
sub
lods
pop
bndstx
cmpsb
mov
aaa
cmc
mov
fwait
shl
sarb
jecxz
mov
cltd
call
sbb
cmp
int
div
mov
fnstcw
scas
adc
cltd
pop
mov
sbb
enter
mov
pop
cmc
fildll
pop
ret
cmpb
or
enter
mov
rorl
pop
pop
pop
mov
out
test
cmpsl
mov
stc
loope
popa
adc
sub
mov
rcrl
mov
add
outsb
fbld
mov
or
mov
pop
es
fidivrs
jno
aam
push
fwait
aas
nop
inc
jae
push
movsb
jmp
roll
xlat
insl
outsl
in
pop
rcll
scas
ljmp
dec
clc
imul
sub
inc
loope
xchg
loope
leave
es
pop
packssdw
fwait
sbb
mov
pop
mov
inc
push
sbb
inc
ja
movsl
imul
mov
jecxz
gs
cmpsb
out
push
test
and
jge
mov
mov
cmp
inc
dec
outsl
and
dec
test
aam
add
push
jne
andb
ds
fnstenv
xor
mov
push
stos
xchg
in
mov
push
addr16
sti
int
stc
cltd
cmpsb
call
sub
mov
pop
jmp
popf
push
repz
sbb
movsb
sbb
xor
pop
inc
addr16
ret
mov
mov
ljmp
mov
daa
mov
push
dec
rcl
fstpt
in
sub
mov
jle
mov
jmp
push
es
xor
mov
sub
xchg
stos
int
jae
test
jp
push
inc
fisubl
sub
add
sbb
inc
iret
bnd
in
ret
add
xchg
sub
and
xchg
jne
jge
in
shll
mov
call
into
lods
pop
shrl
sub
push
test
pop
movsb
cmpsb
cltd
std
mov
mov
xchg
add
sahf
sub
mov
pop
mov
mov
pop
or
xchg
push
in
jmp
mov
push
pushf
push
sbb
ljmp
lret
test
mov
pop
mov
subb
fs
mov
pop
jb
xchg
movsl
stos
leave
xchg
repz
pop
and
aam
stc
or
push
or
lret
mov
pop
clc
popf
cmp
dec
ss
aas
pushf
ret
mov
adc
jge
and
cmp
push
inc
jbe
mov
out
insl
pop
sarb
rorl
pop
cmpsl
cmpb
sub
js
add
dec
repz
sbb
dec
lds
imulb
lahf
rcr
jg
fnstsw
sub
push
notb
mov
sub
fadds
cmp
loopne
cltd
cmp
push
loop
inc
repnz
decb
inc
mov
icebp
int3
test
sub
in
mov
xchg
xor
push
mov
xchg
data16
xchg
mov
jbe
sbb
push
jl,pt
popa
movsb
testl
das
xchg
cmp
iret
cmc
cmp
sub
jae
leave
push
jmp
in
add
aas
inc
loope
daa
je
push
dec
movsl
mov
outsb
xchg
mov
das
mov
push
push
dec
inc
mov
inc
popf
sub
xchg
sub
jns
aad
sbb
dec
fsts
mov
inc
adc
push
fucompp
adcb
loop
out
pop
fwait
out
xor
xor
and
lea
inc
cmp
je
sbb
cmp
lods
cld
addps
ja
pushf
scas
lcallw
mov
or
xor
or
xchg
push
ret
mov
hlt
xchg
fwait
push
hlt
mov
leave
nop
mov
les
xor
mov
xor
xchg
mov
mov
imul
fisttpl
mov
push
mov
ja
push
aas
adc
aad
test
ja
in
repnz
inc
rclb
push
decb
in
jo
aad
aaa
movsl
mov
push
or
xor
inc
subl
test
scas
and
xor
mov
mov
stos
xchg
test
lods
jno
cmp
and
les
mov
inc
xor
cmpsl
cs
pop
sbb
mov
sub
cwtl
mov
in
repz
push
push
jno
out
cltd
test
fsubrs
test
jne
shlb
push
sahf
in
inc
imul
sbb
clc
mov
mov
enter
mov
jmp
sbb
cs
out
sub
sub
xchg
mov
dec
adc
lret
xor
mov
outsl
jg
rcrl
mov
in
sti
sahf
nop
mov
fdivrs
or
movsl
int3
fldenv
or
or
fucomip
clc
adc
mov
jle
clc
xchg
aad
inc
sbb
add
pop
cmp
push
xlat
ljmp
out
mov
sti
fmul
hlt
dec
je
mov
mov
jp
fdivl
int3
hlt
push
gs
add
add
xchg
out
cwtl
loop
inc
mov
pop
xor
fists
mov
and
pop
xor
movsb
inc
sub
dec
in
clc
dec
add
fsubrs
mov
fldenv
int
cltd
mov
add
pop
and
movsb
popf
scas
mov
jmp
aam
fdivs
into
inc
popa
or
fwait
mov
dec
mov
xchg
popa
add
mov
imul
leave
int
movsl
loope
xchg
xlat
movsl
dec
ret
lods
inc
fs
hlt
cltd
cmpsl
inc
push
repnz
shll
adc
jb
mov
imulb
dec
xor
arpl
mov
mov
addb
outsl
add
cwtl
jo
out
lret
bswap
loop
test
popf
fwait
lods
add
incb
insl
stc
pop
sub
dec
sahf
jmp
xor
mov
ja
rol
jp
mov
imul
pop
xchg
pop
out
or
xchg
jl
adc
imul
outsl
pop
out
sahf
dec
mov
call
dec
jnp
mov
popa
push
mov
sbb
lcall
loop
cmp
movsb
mov
or
stc
sarl
dec
fists
in
ds
das
push
mov
xchg
inc
std
bnd
das
jbe
aaa
pop
inc
rcll
mov
data16
inc
lahf
in
xchg
fisubrs
sub
mov
scas
pop
xchg
xorl
cmp
sti
and
push
data16
sahf
scas
mov
dec
aam
addl
add
pushf
cmp
sub
loope
jnp
mov
mov
and
mov
hlt
iret
fsubrl
sub
jg
sti
loope
sub
mov
shll
test
sbb
repz
push
xor
add
int
rol
lock
inc
in
sbb
cld
fdivr
push
outsb
loop
sbb
out
push
push
xor
push
stos
les
nop
xchg
out
dec
out
mov
decb
test
fcomps
xchg
adcb
inc
dec
fisubrs
jne
js
adc
sub
push
aas
fcomps
js
mov
sbb
ret
icebp
add
aam
inc
int
or
enter
outsl
test
push
insl
daa
jle
xchg
scas
mov
dec
add
mov
xor
xchg
fiadds
in
inc
mov
je
adc
and
sti
xchg
jp
push
testb
adcb
frstor
arpl
das
outsl
inc
fcompl
shlb
ficoml
rol
jg
adc
and
frstor
lahf
pop
add
cmp
outsl
dec
pop
xchg
and
push
nop
adc
mov
aad
fs
mov
insb
fisttps
dec
pop
jmp
and
icebp
pop
inc
ret
ja
in
mov
lret
xor
add
sbb
frstor
nop
iret
repnz
cs
movsb
dec
repz
pop
popf
mov
cwtl
cli
fwait
daa
jbe
pop
fsubrs
cwtl
scas
xchg
jge
sbb
aas
rolb
repz
mov
jecxz
das
pop
stos
test
push
push
out
testl
push
pop
idivb
mov
sub
mov
stos
cmp
sub
lods
add
test
xchg
cs
xor
inc
lcall
dec
out
inc
or
sub
jp
es
sub
inc
push
inc
mov
fnstenv
push
or
adc
inc
and
nop
dec
fnsave
jg
shlb
test
pop
lea
shl
lods
data16
mov
filds
adc
cmp
movsl
sub
mov
lods
adc
inc
cmpsb
mov
movsb
xchg
aam
pop
int3
imul
push
out
cmpsb
ret
insl
test
sub
pusha
mov
mov
inc
das
shlb
push
dec
sbb
cmp
cltd
je
rorb
xlat
jae
and
ss
cs
jno
mov
cmp
pushl
in
sbb
jg
mov
push
aam
jmp
ret
mov
jae
mov
adc
and
sbb
mov
bound
fwait
arpl
push
aas
dec
pop
mov
insb
pop
rcrb
inc
cmp
fdivrs
aaa
inc
fsubrl
stos
push
xlat
add
sti
or
lea
iret
mov
xor
jecxz
dec
cmc
and
rcll
fwait
gs
xchg
pop
mov
add
lods
cmp
mov
inc
fdivp
insl
mull
adc
cmpsb
ret
out
dec
jecxz
push
cld
jo
xchg
push
sahf
sti
mov
addr16
adc
imul
je
arpl
sbb
cmp
push
les
fistl
inc
sahf
xchg
or
mov
int
jnp
xchg
stc
in
xor
jae
mov
jno
xor
fisubs
and
dec
dec
std
ss
lods
mov
cmp
cmp
dec
mov
dec
rol
mov
push
xchg
addr16
xlat
pusha
mov
fisubl
inc
lret
cmp
lock
push
movsb
loop
xlat
rcr
arpl
xor
mov
jmp
and
fldenv
lret
xlat
mov
add
inc
sub
xchg
xchg
push
add
std
ds
xchg
out
jle
add
daa
xchg
and
dec
test
fldcw
push
mov
pop
loop
out
rcrb
jns
sub
or
and
pushf
sub
leave
gs
icebp
sub
lahf
mov
push
sub
sbb
or
cwtl
int3
daa
sub
mov
je
shr
or
repnz
sub
jg
cs
sbb
cmp
mov
xchg
push
push
cli
cmp
jnp
dec
cmp
pusha
mov
shr
pop
shlb
add
and
inc
jp
enter
js
movsl
inc
push
push
mov
out
arpl
sahf
aaa
mov
pop
mov
cli
jge
lods
adc
push
gs
popf
sub
inc
xor
or
imul
add
jp
hlt
lahf
and
rclb
hlt
lret
hlt
imul
push
push
or
sbb
mov
mov
lret
bound
mov
mov
sar
pop
cmpsl
sbb
mov
mov
test
movsl
dec
sbb
mov
ljmp
dec
sub
and
pushf
sub
dec
fidivs
xor
dec
sti
cltd
stc
dec
mov
test
inc
leave
xorl
and
adc
push
jbe
lods
xor
pop
out
xchg
repnz
inc
fists
sahf
lods
js
aad
inc
xlat
in
inc
fidivs
lea
cld
loopne
or
js
sti
jne
add
jg
je
push
rcll
push
and
mov
sarb
call
jg
lods
or
fidivrs
push
cmp
pop
dec
movsb
add
dec
fmuls
sub
jb
mov
sbb
mov
mov
push
mov
insl
stos
sarl
rcl
lods
sarb
bound
jge
dec
adc
jnp
adc
or
rcrb
jp
pop
pop
pushf
sub
roll
add
out
repz
mov
push
cmpps
insl
cmp
jbe
mov
enter
popf
popa
inc
pop
test
shlb
sub
cwtl
das
adc
xchg
lcall
add
mov
test
lods
sbb
cwtl
das
aaa
arpl
xchg
jo
xchg
sbb
std
leave
mov
dec
cmpsb
ljmp
mov
or
push
popf
xor
xor
test
xchg
inc
cs
xor
adcb
dec
jp
or
push
aas
push
notl
repz
push
fldcw
je
and
mov
adc
jle
fnstcw
adc
mov
scas
fwait
mov
fstpt
addr16
repnz
iret
xor
fs
or
jge
jecxz
jno
pop
adc
sub
repz
add
pop
dec
dec
sbb
cmp
mov
arpl
inc
into
cmp
push
dec
mov
data16
mov
and
xchg
outsb
adc
rorb
mov
mov
stos
or
mov
rorl
xchg
jl
sbb
ds
xchg
stc
xchg
dec
lea
rorl
daa
sbb
nop
pushf
inc
cwtl
fadds
mov
test
ljmp
fimuls
pop
sti
repnz
cwtl
adc
lret
bound
test
stos
das
js
lahf
mov
fdivl
pop
and
test
out
dec
mov
and
ds
inc
pop
cmp
stc
andl
jb
dec
pop
sti
xchg
or
lahf
lret
lods
xor
pusha
xor
lods
gs
adc
ja
cmp
mov
pop
jecxz
repz
mov
jecxz
repnz
pop
loopne
adc
fidivl
loop
jne
push
sub
sbb
jne
jl
jae
out
into
addr16
jecxz
push
cwtl
sub
inc
push
int3
dec
inc
std
ss
into
xlat
jne
and
ffreep
pop
ret
xor
pusha
push
inc
rol
mov
jnp
mov
xor
outsb
in
mov
test
mov
test
popf
scas
inc
pushf
xlat
out
rolb
mov
dec
ja
in
jo
sub
pusha
bound
push
addr16
push
and
addl
arpl
mov
fiaddl
pop
fs
in
inc
and
jge
dec
arpl
in
cmp
lahf
mov
fisubl
push
loop
out
mov
shrl
aad
shll
incl
and
insb
dec
sub
iret
lods
stos
into
loop
jae
cltd
stos
ljmp
mov
sub
cwtl
and
inc
mov
xchg
mov
mov
mov
stos
xchg
mov
dec
push
sub
iret
cltd
rcll
mov
fxch
scas
aas
out
cmc
mov
adc
jb
xchg
lahf
stos
lds
outsl
sbbl
iret
fstpt
rorb
mov
mov
lds
sbb
xchg
xchg
and
sti
call
or
push
add
sbb
push
out
cld
sarl
jns
xchg
lock
lods
sub
fbld
push
stc
mov
push
dec
sti
lds
cltd
test
das
push
out
jnp
adc
test
gs
mov
adc
mov
or
enter
test
jno
adc
pusha
mov
mov
lock
push
push
mov
mov
insl
in
je
xchg
scas
mov
arpl
mov
push
mov
xor
arpl
fildll
xchg
push
sub
lea
addr16
add
cli
mov
jle
test
jne
dec
lods
popa
shrl
iret
adc
cmp
lds
xchg
insb
dec
mov
and
push
xor
cmpsb
mov
or
aaa
int3
xorl
add
movsb
andb
jne
addr16
andl
mov
stc
jns
push
fisubrl
sbb
dec
mov
jle
jp
daa
mov
sbb
fldt
mov
out
pop
push
jnp
push
mov
loope
xlat
les
push
mov
add
lcall
sub
and
add
lods
add
cs
pop
mov
jo
lret
inc
push
mov
jnp
imul
add
dec
out
in
inc
sub
hlt
inc
popa
adc
aaa
mov
add
jbe
adc
rcr
cmp
in
ret
std
jl
into
sbb
mov
lock
test
cmpsb
xor
add
fidivrl
or
out
pop
dec
jbe
jnp
sbb
andb
xchg
out
daa
jle
or
jle
xchg
dec
inc
xor
iret
lret
jnp
xchg
jmp
das
dec
cmp
xor
dec
fsubrp
sti
dec
and
dec
jl
add
fisubl
jg
jnp
repnz
xchg
push
xchg
inc
pop
ss
sahf
push
mov
negl
sahf
negl
cmp
dec
movsb
fadd
xchg
subb
in
ljmp
insb
cld
sub
test
mov
cmp
fadds
lods
jns
cmc
push
mov
sar
sahf
push
dec
fildll
cmc
call
add
nop
or
inc
push
mov
cmp
mov
and
jl
loope
clc
pop
lret
shlb
aas
sbb
js
pop
sub
sub
xchg
pop
jb
xor
mov
movsb
push
mov
movsb
inc
out
adc
lea
aaa
xor
xor
divl
pushf
jno
inc
pop
inc
lods
add
ja
out
sub
inc
inc
ret
mov
repz
mov
and
loopne
xor
clc
mov
jp
jno
push
pop
xor
cmp
dec
mov
pusha
movsl
mov
int3
fcmovnu
outsb
loope
imul
loope
xor
xlat
fsubs
bound
jl
push
int3
mov
pushf
outsl
daa
xchg
imul
sbb
mov
outsl
adc
cmpsb
iret
mov
inc
insl
or
shr
movsl
aad
popa
or
jmp
les
inc
test
pop
jecxz
movsl
xchg
aad
cmp
out
aas
stos
mov
lcall
adc
xorb
movb
push
jo
lcall
arpl
jl
stos
xlat
jo
mov
inc
cmpsb
cwtl
jne
inc
mov
stc
repz
pop
pop
cmp
in
call
mov
test
jns
inc
stc
or
stos
aad
popf
and
push
jl
into
push
adc
js
aaa
jo
inc
loopne
sbb
cmpsb
xor
pop
sar
xchg
mov
rcrb
pop
nop
imul
sub
or
add
ficompl
mov
inc
in
sub
inc
fmull
push
sub
cmovl
add
js
pop
add
jecxz
cmp
int
leave
and
sbb
dec
lods
xchg
adc
out
gs
push
mov
popa
mov
into
clc
inc
lcall
and
out
xor
jle
sbb
in
scas
jns
pop
hlt
xchg
or
sahf
jae
cmpsb
xchg
addr16
jge
dec
clc
out
inc
scas
xor
sub
out
lret
fnsave
jnp
push
push
jecxz
xchg
add
pusha
push
imul
test
mov
xor
mov
test
xchg
insb
shlb
jg
iret
test
test
adc
lds
jne
push
pop
fadd
dec
cld
push
sub
mov
aas
adc
in
mov
jo
sbbl
lock
jle
shrl
sbbl
mov
ss
test
jae
loopne
jae
jbe
addr16
test
insb
lret
fnsave
cmpsl
ret
lods
mov
and
ret
sbb
xchg
imul
bnd
mov
clc
stos
inc
sub
cmc
sbb
xor
inc
addb
frstor
sub
jno
movsl
lds
pusha
pop
stc
mov
mov
int
xchg
insl
dec
pop
out
pop
jo
aad
daa
push
dec
mov
pop
jns
das
out
mov
sub
or
mov
mov
testl
fists
mov
fsts
lds
mov
xor
mov
aam
mov
mov
dec
out
mov
out
pop
sbb
mov
push
jne
sub
cltd
mov
out
mov
dec
imul
push
pop
ja
test
xchg
sub
jle
pushf
cmp
inc
int3
cmc
loop
sbb
xchg
pop
cmp
out
push
xchg
pop
mov
fiaddl
cmpsb
push
push
movsl
adc
leave
stos
mov
insl
bound
mov
aas
pop
inc
xchg
inc
ja
in
and
pop
nop
loopne
mov
mov
lods
pop
xchg
pop
ret
sbb
rorl
shrl
sbb
stos
ret
pop
repnz
stc
outsb
xor
push
sbb
mov
shlb
or
or
loop
adc
cmp
push
mov
lods
mov
enter
fwait
ljmp
xchg
push
or
inc
xor
add
sub
fs
ficompl
inc
sahf
or
daa
and
jl
pop
test
sub
fcomps
mov
inc
sbb
cmp
jno
scas
pop
xchg
mov
enter
insb
inc
in
jnp
mov
fdivrl
test
sbb
fcompl
xchg
and
pop
bnd
and
pushf
jns
into
inc
push
push
mov
mov
inc
lret
sbb
pop
mov
fwait
scas
jle
jb
fsts
std
mov
inc
jecxz
mov
inc
jecxz
aas
pop
cmp
cmp
test
jne
push
jg
out
imul
mov
dec
push
push
jae
stos
push
sub
fwait
mov
pop
pusha
jo
cld
push
add
in
nop
test
mov
in
jne
ret
and
dec
mov
adc
stos
gs
es
pop
hlt
mov
jnp
mov
or
in
inc
cmp
push
pop
mov
mov
in
mov
fidivrs
push
add
lods
mov
test
scas
push
aas
jnp
out
dec
adc
mov
mov
jge
push
rcrb
cmp
addr16
fbstp
mov
sti
lahf
jae
inc
and
in
lcall
shl
add
dec
sub
repnz
jmp
ret
mov
jp
adc
push
call
mov
mov
xor
cld
dec
sbb
pop
pop
ds
lds
out
rcrb
rorl
sub
adc
rorl
loope
lcall
and
subl
lds
or
paddq
xchg
mov
or
int3
mov
push
pop
imul
test
insl
mov
cs
add
xchg
xchg
or
test
jge
mov
enter
bound
add
rcl
xchg
fdiv
xchg
dec
mov
pushf
push
jp
mov
xor
out
mov
mov
lods
sbb
je
inc
cwtl
jge
xor
ds
pusha
jo
cmp
xchg
inc
xor
push
fwait
add
push
loopne
jp
imul
fs
test
je
sub
pop
enter
sahf
std
and
inc
adc
jne
stc
and
mov
cmp
loope
push
push
daa
outsl
sub
or
jae
pop
xor
in
rorb
testb
pop
in
pop
pop
rol
out
jmp
testl
and
test
mov
scas
into
xchg
sbb
idivl
into
sbb
dec
fstpt
cs
cmpsb
mov
icebp
mov
shlb
int
bswap
ss
pushf
cmc
test
dec
popa
jl
push
fwait
ret
aam
cmpsl
lret
movsl
and
bound
push
loop
jmp
xchg
sub
push
mov
das
xor
cmp
dec
rclb
pop
aaa
lcall
stos
std
push
jne
adc
out
stc
add
cmp
and
push
sarl
mov
repnz
inc
fnsave
xchg
jbe
sbb
mov
mov
aaa
mov
mov
sbb
or
mov
cmpsb
call
and
xor
nop
mov
or
scas
xchg
or
and
push
stos
insb
rorl
fidivl
hlt
cmpb
out
icebp
popa
mov
addl
scas
dec
adc
lea
fdivr
pop
fsubrs
jg
enter
push
cwtl
pop
inc
jbe
gs
mov
xchg
push
xor
in
xlat
jmp
lret
mov
jp
and
inc
fiaddl
jb
ljmp
neg
rcrb
popf
add
sub
ds
mov
mov
lret
bound
xorl
pop
jbe
mov
dec
sahf
inc
test
cltd
outsb
mov
push
std
pushf
mov
jae
cmc
pushf
lods
es
ja
or
jg
ss
popa
cld
insl
pop
push
xchg
mov
or
push
data16
adc
mov
sar
rorb
insb
xchg
sub
and
fdiv
fcmovnb
and
stos
ljmp
lock
loopne
rcll
fs
mov
or
add
test
mov
adc
mov
mov
push
imul
cmp
inc
jg
bound
cmp
std
std
aas
int3
mov
dec
repnz
lds
pop
movsl
xchg
lahf
mov
test
ja
cmp
stos
rcr
ret
adc
cs
sbb
call
add
jnp
jbe
shld
sub
pushf
pop
aas
fcmovnb
xor
fstpt
mov
mov
xchg
out
and
fimuls
push
or
cmp
out
fstp
nop
push
bound
fldl2e
imul
adc
dec
jnp
mov
mov
dec
pop
stos
movsb
inc
or
std
insl
sbb
mov
xchg
out
inc
cmp
jae
add
pusha
inc
lods
cmp
xorl
insb
aas
mov
mov
adc
es
test
and
sbb
lcall
addl
jbe
mov
fiadds
frstor
xor
or
loop
ret
mov
add
mov
mov
mov
or
pop
addr16
divl
aad
mov
inc
jle
adc
cmp
testl
nop
ret
push
push
sub
sbb
dec
stos
and
test
mov
mov
cmp
repnz
mov
popa
lods
add
mov
cwtl
jne
loopne
ds
xorl
or
inc
sub
and
insb
mov
inc
jns
mov
push
cs
xor
sbb
add
clc
jns
fidivrl
call
adc
or
adc
mov
pop
sbb
jmp
cs
adc
aad
jle
cmpsb
rcr
icebp
mov
sub
leave
mov
mov
jae
mov
or
inc
mov
loopne
or
lcall
add
loop
cmp
mov
mov
inc
out
stos
imul
push
jmp
xorb
fcomip
gs
cmp
sahf
inc
jnp
hlt
push
insl
pop
or
adc
test
push
shll
dec
pop
or
sub
mov
jbe
add
and
mov
sub
or
rol
arpl
cmp
loope
into
dec
lods
push
or
imulb
pop
xor
dec
mov
andl
xor
sarl
push
adc
daa
mov
test
jno
fidivl
das
roll
movsb
or
scas
push
sub
pop
cmc
sti
pop
push
ds
add
out
std
fnsave
or
addb
call
mov
sbb
stos
cmp
xor
jbe
scas
inc
sahf
rolb
dec
nop
pop
xchg
sub
popa
das
mov
add
cwtl
mov
sub
sbb
in
std
jb
popa
xchg
sbbl
lahf
push
test
lods
jge
pop
push
lcall
inc
and
jne
loope
push
and
pop
inc
cmp
divb
mov
testb
mov
push
bound
imul
inc
fdivrs
insl
add
lret
pop
int3
or
mov
jle
out
cmc
stos
add
imulb
jne
repz
cmc
cld
mov
in
dec
mov
sbb
mov
loopne
add
lods
mov
sbb
inc
pop
out
cmp
into
insl
mov
idivl
imul
xorl
aam
or
cmc
pop
fcompl
mov
insl
cmp
cmp
push
shll
sub
mov
les
cmc
push
or
addr16
mov
pop
arpl
mov
scas
mov
and
xor
test
xor
repnz
cmpsb
in
test
mov
cmp
pusha
loope
mov
iret
addb
sub
xchg
and
xor
xchg
and
sub
fsubr
mov
repz
rcr
push
jae
jbe
nop
mov
jae
loopne
ret
data16
cmpb
stos
mov
in
push
aas
mov
sbb
enter
je
cmp
mov
push
push
cld
mov
mov
adc
lods
pop
or
gs
in
or
jbe,pn
xchg
popa
aad
jnp
jge
pop
pushf
sahf
or
repz
gs
lods
in
pop
xchg
pop
int3
cmc
lock
push
clc
mov
lock
int
inc
cmp
lahf
jbe
xchg
das
roll
ss
daa
daa
xchg
mov
incb
add
sbb
pop
mov
sbb
aad
or
jle
out
xor
jne
sbb
shll
call
pushf
mov
je
cmp
ret
test
call
ja
dec
cmpsl
sbb
inc
mov
dec
cmpsl
inc
fwait
jb
dec
xor
andb
or
mov
subl
jns
bound
xor
jle
inc
xlat
outsb
cmp
sbb
imul
inc
jo
repz
push
jecxz
jl
stos
sahf
ficoml
out
mov
pop
xchg
repz
sbb
inc
xchg
imul
in
jle
ss
insb
add
ret
jns
adc
mov
shrb
adc
sub
ja
in
push
loopne
mov
cld
xchg
xchg
and
arpl
insb
fisubrl
mov
cmp
popl
push
outsb
ret
sbb
mov
enter
sbb
push
sub
lret
push
push
fistpl
adcb
lea
movsl
mov
stos
mov
cmp
fisttpll
dec
imulb
mov
cmp
addb
addr16
and
sbb
lds
or
mov
cmp
in
add
jbe
xchg
adc
pop
cmc
push
xchg
mov
mov
jl
nop
lods
shrl
mov
stos
in
nop
out
cmpsl
mov
ss
xchg
push
adc
inc
inc
xchg
dec
cwtl
lea
adc
cmp
add
divl
sbb
cmp
jnp
jns
loope
movsb
xchg
pop
hlt
add
out
data16
aad
clc
adc
cld
push
jno
push
mov
fldt
fcomps
mov
arpl
and
sub
comiss
xor
and
shr
or
lea
sub
stos
mov
mov
mov
inc
ds
mov
jmp
dec
mov
cli
jne
and
out
iret
inc
lret
cld
pop
or
pop
stos
sbb
mov
sbb
pop
pop
push
add
pop
cmc
cmp
jge
or
pop
add
sbb
xchg
jne
jp
inc
popa
fsts
ljmp
jno
loopne
dec
aad
sarl
mov
pop
out
pop
mov
mov
pop
ret
es
push
hlt
mov
icebp
clc
movlhps
popa
sbbl
flds
xor
decl
scas
push
aam
in
push
and
sbb
jge
xchg
mov
add
je
pop
fs
mov
sub
fs
ja
fsub
sahf
lods
and
xor
jmp
insl
jnp
xor
fwait
inc
addb
out
sahf
mov
cmpsb
xlat
xor
dec
data16
push
jge
mov
js
js
xchg
xchg
cmp
mov
mov
daa
or
mov
cld
lcall
in
dec
and
and
test
cmp
lcall
stos
sbb
mov
insb
push
shrl
in
add
xor
dec
lahf
xor
mov
jmp
loopne
imul
add
xor
dec
loopne
dec
pop
je
pop
in
test
enter
mov
sbb
inc
pop
movsl
inc
xchg
and
and
mov
jg
aas
addl
sbb
sub
nop
js
xor
adc
imul
push
jecxz
sub
fidivl
aas
stc
or
cmp
mov
nop
cmpsl
repnz
enter
adc
inc
stos
mov
clc
popl
sub
addb
nop
das
dec
out
sbb
popa
int3
arpl
outsl
loop
push
ds
or
push
out
and
sbb
adc
add
notl
jmp
xchg
mov
adc
mov
jne
not
insl
imul
mov
jge
lea
adc
fbstp
fs
popa
fcmovb
or
adc
jno
push
or
test
push
fmul
mov
sbbb
mov
fildl
mov
lret
push
popa
cmpl
jne
clc
lcall
jl
shrb
push
jmp
jl
add
stc
xor
pop
dec
fcmove
test
loope
dec
fs
fimuls
fsts
inc
adc
mov
or
jp
xlat
mov
mov
insb
fcoml
cmp
xor
push
pushf
sbb
xchg
nop
mov
xor
es
add
cmpsl
cs
xlat
out
daa
sahf
in
adc
mov
shrb
movsl
dec
fists
out
adc
aam
mov
jg
sub
hlt
xchg
jp
in
inc
loop
test
repz
push
inc
xchg
cmp
repnz
xchg
dec
pop
xchg
mov
clc
ljmp
clc
ret
pop
dec
and
int
shrb
fldcw
jb
mov
sub
hlt
or
out
js
jle
stos
adc
jmp
sub
cltd
psubusb
xlat
cmc
and
sar
adc
jecxz
jg
cli
ret
leave
xlat
icebp
xchg
pop
mov
jb
cmpsb
jecxz
cmp
fiadds
xchg
or
pushf
ret
lret
and
loop
mov
push
lea
pushf
lea
adc
in
sti
push
or
test
cli
and
out
adcl
rolb
mov
jb
or
roll
std
testl
push
pop
mov
cmp
sti
xorb
mov
test
pop
cmp
in
insl
lods
repz
and
and
lock
test
or
adc
bound
or
push
into
pop
pop
fwait
or
fs
jbe
mov
or
ja
or
sbbl
inc
adc
or
hlt
cltd
pop
ret
mov
test
jbe
loopne
fiaddl
mov
pop
fwait
scas
pop
jb
nop
loopne
add
pop
mov
add
in
ret
pop
imul
roll
mov
lret
push
popa
cli
mov
test
std
les
ret
sub
adc
hlt
add
rcrl
stos
cmp
das
jbe
out
ljmp
add
mov
ret
add
cld
fldl
mov
je
mov
cmp
imul
movsb
inc
outsb
dec
fimuls
imul
int
sbb
fsubrs
mov
add
aam
jl
adc
std
or
xor
xchg
aaa
push
gs
push
pop
rclb
gs
cmp
mov
rcrb
jno
out
mov
push
call
and
sti
rol
sbb
stos
jl
lods
mov
scas
test
addl
icebp
insb
mov
out
outsb
lock
mov
rcl
pop
dec
iret
fndisi(8087
lds
fs
sbb
outsb
daa
stos
mov
mov
loop
movsl
add
dec
aad
adc
mov
sbb
push
shrl
sub
ffreep
mov
cmp
dec
popf
rcrb
je
test
xchg
or
fiaddl
stos
cmpsb
sbb
or
xchg
and
leave
and
xor
jge
adc
lret
push
push
popf
jb
and
add
shl
cmp
inc
lds
daa
mov
rorb
mov
insl
mov
adc
or
sub
xchg
in
or
in
push
lea
mov
mov
out
cwtl
iret
adc
jne
je
das
aad
inc
nop
push
xchg
push
xor
jmp
pcmpgtb
inc
pop
and
add
cwtl
data16
mov
mov
scas
out
stos
sbb
mov
cmp
pop
iret
daa
test
adc
jne
xor
lcall
and
enter
test
pop
jo
sub
or
dec
ss
into
out
dec
push
jmp
cmp
imul
and
or
es
mov
ret
mov
cmp
loopne
lods
jl
fwait
mov
xor
mov
xor
inc
xchg
stos
loopne
int
fwait
sub
mov
mov
gs
xchg
sub
add
sub
add
sarb
xchg
ret
or
dec
int3
xchg
out
mov
cwtl
mov
outsb
cld
mov
outsl
mov
jne
les
jle
inc
movsl
ret
push
pusha
jle
pop
xchg
inc
arpl
fldt
jb
push
orl
sub
mov
and
push
sbb
movsb
bound
scas
add
mov
je
mov
add
or
js
sub
ss
mov
lret
jb
jp
js
push
pushf
enter
mov
mov
push
stc
pop
push
sub
popa
mov
in
popf
jb
popf
lock
pop
xchg
movsb
repnz
inc
js
popa
jg
addb
push
int
popa
xor
push
sbb
aad
aas
jne
pop
push
in
ss
icebp
mov
lea
mov
gs
xchg
enter
and
and
xorb
adc
pop
xchg
add
outsl
cmpb
xor
push
fmull
xor
test
loopne
and
into
dec
inc
fdivrl
test
and
xchg
aam
sti
cmp
lahf
add
cwtl
push
fdivrl
xlat
xor
xchg
lcall
lea
pusha
insb
sti
sub
mov
jb
inc
mov
cli
push
adc
jo
mov
arpl
push
cwtl
xor
int
jns
push
cmp
xor
xchg
jmp
pop
aaa
xchg
test
out
ja
aam
loopne
lcall
mov
xchg
xor
lret
lcall
jbe
push
test
pop
cmp
dec
cmp
out
stc
mov
push
inc
jge
fwait
rcrb
dec
test
mov
lret
xor
xchg
adc
cld
push
inc
xor
je
xchg
xchg
push
push
push
test
push
loopne
test
sbb
lea
jbe
xchg
ja
adc
mov
mov
fmuls
cmp
lcall
push
loope
je
xor
int
sub
adc
aam
cmp
pop
imul
loopne
add
aam
insl
or
xor
xorb
push
or
fidivs
add
int3
rolb
mov
mov
aad
add
aam
das
and
jo
ffreep
dec
push
rorb
add
test
outsb
js
mov
push
icebp
or
adc
cwtl
push
mov
pop
ret
ja
fisttps
hlt
das
jo
xchg
dec
push
and
aaa
aas
sahf
inc
loop
loop
cmp
xor
insl
add
stos
sbb
xor
ret
cmp
mov
mov
mov
mov
xchg
fsubr
enter
sbb
xor
aaa
add
subl
aam
pop
sbbl
es
mov
or
popa
pusha
inc
push
adc
jl
movsb
pusha
push
aam
ljmp
dec
pop
ret
paddq
dec
push
sub
xor
fs
out
xchg
fidivl
push
lea
lods
repz
fs
xor
jmp
xor
jmp
out
sub
jg
xorl
mov
int
xchg
add
inc
xor
or
sub
inc
mov
mov
mov
push
je
add
movsl
jae
mov
sbb
push
add
mov
gs
pushf
cli
xor
arpl
sbb
hlt
sbb
lods
arpl
hlt
cld
xchg
and
sbb
jge
push
mov
aaa
decb
mov
jmp
fstps
and
test
jp
in
test
js
in
mov
gs
fucomp
stos
dec
loop
fcmovne
loop
loope
cmpsl
int3
xor
inc
or
cmp
jle
add
xchg
xchg
dec
fistl
or
fwait
xor
das
push
movsl
js
fistps
int3
cltd
sub
lcall
lahf
sar
cs
cmp
push
sub
dec
mov
mov
push
out
pop
stos
xchg
jne
push
and
out
insl
fsubr
ret
xor
ss
inc
cmp
mov
in
push
aas
push
add
mov
movsl
xlat
pop
cmp
jl
lahf
hlt
adc
add
inc
std
jecxz
xor
dec
loop
push
mov
push
push
sub
xchg
jg
rcrb
ret
sub
and
cmp
mov
pop
loope
jmp
mov
and
jmp
push
xorl
jg
test
ret
shrl
aas
jl
fcomi
inc
fstp
jno
addr16
or
jg
cmp
movsl
enter
xchg
cmpsl
pusha
and
lock
and
movsl
xchg
add
iret
outsb
or
xchg
cmp
mov
dec
mov
push
fsubrs
std
fisubrl
mov
dec
test
mov
ficomps
jl
mov
dec
mov
nop
stos
inc
xchg
mov
push
bnd
leave
adc
aad
cwtl
lahf
jbe
lea
mov
aam
clc
insl
and
inc
push
mov
inc
arpl
xchg
call
mov
in
jb
das
ds
loop
dec
push
rorl
cmp
and
push
mov
xchg
pop
xor
aam
and
mov
push
sbb
xchg
jno
or
inc
scas
daa
jg
mov
sub
in
xor
aad
repz
subl
xchg
mov
ds
repnz
fnsave
testl
or
push
lock
imul
int3
ret
and
outsl
mov
xor
mov
and
jge
test
shll
or
movsl
lds
test
jbe
test
hlt
mov
sub
hlt
mov
add
fwait
push
adc
les
jb
adc
sahf
ja
or
dec
xchg
pop
in
add
xchg
xchg
pop
sub
fsubr
aam
int3
fdivs
mov
cmpsb
cmp
pop
aad
pop
mov
cltd
jo
and
div
pop
mov
xchg
sbb
movsb
fbld
bnd
in
cltd
xor
mov
and
fiadds
adc
popf
and
sbb
pop
push
mov
mov
sbb
pop
push
movsl
in
push
cs
jae
ficoms
stc
push
outsl
fldcw
lods
add
mov
call
sub
sbb
sub
sub
dec
dec
fs
fstl
mov
je
fs
nop
pop
iret
test
sub
add
int3
into
out
xlat
mov
dec
sub
lds
sbb
popa
or
mov
jae
test
fbstp
shll
pop
pushf
push
pop
in
stos
test
sub
imul
stos
fcoms
sub
jp
nop
stos
das
dec
cli
xchg
jg
push
lods
jbe
sbb
ret
push
fsubl
sarl
leave
nop
mov
dec
ljmp
xchg
cwtl
xchg
dec
addr16
test
inc
mov
jns
aam
leave
mov
cmp
push
ficoml
repz
mov
xor
fs
push
push
lods
add
outsl
add
sbb
jbe
mov
frstor
adcl
jo
std
cmp
test
sbb
jl
es
jns
cld
stos
enter
or
mov
sbb
jmp
cli
shll
inc
push
mov
ffreep
xchg
mov
call
mov
aaa
stos
imul
test
push
std
add
jp
inc
hlt
imul
icebp
xchg
sub
mov
cs
out
xor
add
into
and
lea
mov
nop
cmp
inc
mov
mov
sub
xchg
lds
sub
jb
pop
sarb
lock
mov
adc
pop
dec
pop
push
test
pop
imul
jecxz
mov
or
xchg
mov
loopne
inc
out
inc
mov
lods
fnstsw
push
xor
sbb
and
mov
clc
ret
in
and
sub
sub
dec
pop
sub
leave
mov
inc
inc
cmpsb
mov
insb
cmpb
xchg
gs
mov
dec
aaa
pop
mov
push
daa
loopne
aam
iret
mov
or
mov
sub
pop
fsts
sbb
jl
adc
inc
cmpsb
mov
push
inc
ss
call
push
aad
push
jg
dec
push
xchg
arpl
adcb
cmc
mov
dec
mov
loopne
shlb
pop
outsl
sbb
and
int
fidivs
adc
xchg
call
loop
mov
push
and
mov
addr16
sub
mov
int
xor
shlb
mov
lldt
fwait
or
imul
div
mov
dec
loop
push
lfs
movsl
movsb
sti
push
push
jnp
push
jp
jg
test
or
testl
push
xor
push
loope
cmp
stc
and
rcll
out
pop
repz
in
out
jp
fstpl
cmp
lea
sbb
lods
pushf
and
je
add
idivb
adc
aad
lock
loop
inc
pop
data16
imul
mov
bound
int3
mov
addr16
aas
cmpsl
jno
cmpsl
jecxz
scas
vpshab
pop
dec
and
cmpsl
fcoms
sti
out
icebp
dec
outsb
jmp
cmpsl
outsb
xchg
jmp
sub
outsb
add
cmp
sub
and
movntq
push
jb
lods
inc
mov
pop
mov
into
pop
adc
mulb
movsb
add
or
sbb
insl
aam
xchg
dec
or
cmp
ljmp
loope
adc
std
loopne
fs
and
sar
or
int3
add
lret
mov
bound
sub
insl
lcall
outsl
mov
mov
sarl
in
jecxz
rcll
add
insl
ss
cmpsl
insb
loopne
imul
fbstp
inc
jge
dec
mov
fisubl
and
cmp
pop
push
cmp
jl
xor
mov
dec
loopne
cmpsl
out
jo
xor
mov
lods
imul
das
xchg
and
jno
xchg
repz
sub
nop
scas
clc
dec
or
inc
adc
pop
imul
shrl
push
adc
sti
mov
mov
nop
mov
iret
add
jge
jnp
sahf
ja
push
outsl
xchg
dec
loop
or
sub
out
inc
jnp
aaa
inc
jno
xchg
xchg
rol
and
dec
or
cmp
rcrl
sbb
inc
test
pop
fnsave
mov
add
mov
lahf
or
in
mov
mov
movsl
movl
aam
xchg
jp
xchg
cli
daa
pop
sbbb
pusha
adc
les
sbb
mov
ret
jb
mov
cmp
cli
cs
jp,pt
cwtl
mov
shl
jbe
xor
push
sti
mov
in
xor
add
loope
loopne
jae
adc
aad
movsb
adc
mov
lods
push
push
call
xor
cmp
cwtd
ss
or
outsb
pop
xor
call
add
inc
out
out
arpl
fwait
dec
icebp
push
push
mov
sbb
xor
pop
adc
pop
rorl
cmp
mov
mov
push
or
xor
out
xchg
adc
add
cmp
push
xchg
jp
stos
inc
mov
loopne
test
movsb
adc
adc
pop
repz
push
push
pop
xchg
ljmp
es
lock
and
pop
les
or
mov
in
std
pop
sub
sbb
jno
adc
data16
xchg
cmp
out
push
addr16
mov
in
in
shlb
ds
and
jg
xchg
stos
push
adc
xor
mov
and
or
insl
xor
ja
stc
dec
add
or
pop
lea
aad
shlb
loope
lcall
addr16
mov
xor
mov
or
inc
mov
cmp
sbb
mov
cmc
lret
jne
sub
nop
sahf
dec
in
js
lcall
jne
sbb
repz
insl
jmp
xor
repnz
and
loope
push
loopne
aaa
sbbb
movsb
in
jle
sti
fwait
mov
mov
xchg
xchg
xor
lcall
inc
subl
xchg
fs
xchg
inc
mov
and
int3
push
movsb
add
scas
xchg
jle
inc
push
je
icebp
dec
outsl
push
dec
or
sarb
and
pusha
adc
pop
cltd
push
mov
ljmp
cmp
or
and
push
mov
orb
jne
inc
int3
nop
sahf
ret
xchg
push
aas
leave
mov
rcrl
push
xor
test
mov
stc
pop
adc
fcoms
popa
movsb
sbb
lret
sbb
pop
dec
sub
clc
sbb
xchg
lock
out
add
jns
jbe
in
dec
and
jae
fldt
xlat
mull
inc
xchg
lock
ficoml
negb
cli
cmp
lcall
xchg
lods
sbbb
and
lea
jp
jo
or
xchg
jne
xchg
mov
lret
icebp
pop
es
adc
into
adc
mov
shll
or
adc
scas
xor
jge
pop
push
jne
enter
loopne
fwait
xor
or
inc
std
or
mov
andl
addr16
sbb
cmpsb
adc
loope
jnp
pop
in
sbb
lds
cld
adc
jmp
sub
pop
iret
xor
jge
jmp
repnz
std
xchg
aas
mov
mov
xchg
push
jmp
jp
adc
adc
in
jns
and
fwait
inc
sbb
nop
add
ret
pushf
inc
mov
andb
xchg
cld
or
adc
iret
push
cmpl
and
lods
adc
sub
mov
adc
mov
arpl
into
sbb
push
das
jge
adc
dec
fs
inc
or
xchg
cmp
int3
aaa
sarl
in
push
push
inc
mov
icebp
sub
scas
add
dec
js
dec
std
lcall
sub
in
or
adc
mov
cwtl
pusha
ss
add
rcl
out
and
push
daa
cmp
out
call
jns
mov
incb
flds
dec
arpl
aaa
fidivrl
and
fwait
je
push
popf
je
dec
jbe
push
xchg
sar
and
mov
ret
addr16
in
sbb
mov
inc
and
sti
cltd
popa
sub
pop
and
inc
cmp
pop
or
pusha
or
xchg
scas
rclb
jb
stos
sbb
mov
pop
sub
lcall
fbstp
cld
xor
je
movsl
jecxz
lret
or
jle
inc
push
fnsave
pop
fxch
loopne
adc
xchg
mov
ljmp
jb
xchg
or
rorl
mov
adc
insl
sbb
jge
addr16
sbb
rcrb
insl
sti
mov
mov
mov
mov
loop
and
and
enter
sbb
mov
stos
test
pusha
das
out
push
sbb
and
sbb
xlat
push
jno
scas
xlat
pop
push
jae
dec
fsubr
jb
shrl
fldt
pop
in
mov
gs
insb
inc
push
xchg
jp
xor
jns
ja
jle
and
add
dec
or
call
cmp
and
imul
push
xchg
push
test
pop
sub
fmul
shll
or
cmp
nop
ss
stc
icebp
in
xchg
aad
es
ss
add
xchg
cmp
fwait
jbe
pushf
sub
inc
int3
out
bound
dec
xor
arpl
aam
fldcw
ret
mov
les
dec
push
mov
adc
pop
fsubl
fiaddl
push
filds
icebp
int3
adc
or
add
mov
push
divb
xor
cmp
mov
push
cli
xor
imul
rcrb
mov
xchg
into
xchg
push
push
lret
insb
add
lret
in
mov
mov
addr16
xlat
sbb
loope
cmpsl
or
icebp
lahf
ror
movsl
stos
fcoms
push
add
nop
mov
out
notb
mov
iret
movsb
cmp
push
aas
ret
jmp
repz
mov
dec
add
subl
mov
mov
cmp
mov
adcl
push
sbb
jnp
inc
mov
loop
lock
test
dec
jae
insb
xchg
ljmp
popa
cs
sarl
iret
sub
rolb
je
sahf
sub
out
scas
cmp
dec
jb
sti
mov
outsb
jno
lds
imul
mov
fsubl
arpl
push
in
cs
arpl
out
or
cmc
lds
or
out
cmp
mov
popf
stc
adc
std
jg
adc
mov
rol
pop
and
mov
xchg
pusha
jl
and
inc
std
movsl
bound
xchg
jecxz
aad
sbb
xor
nop
insb
cmp
jp
mov
or
add
push
ficomps
sar
ret
repz
and
fistpll
cld
mov
and
dec
push
dec
fisttps
mov
jae
adc
cltd
sahf
gs
outsb
pop
out
xor
fldl
outsb
adc
jge
clc
dec
jecxz
cs
pop
cltd
out
mov
push
and
add
mov
fisubrl
in
cmp
lds
add
pop
mov
dec
es
xchg
fmuls
dec
push
mov
push
and
push
xor
divb
add
push
sub
jge
fcomi
orb
je
outsl
push
dec
pushf
dec
inc
cli
shl
xor
and
mov
fists
xchg
daa
mov
jl
pop
insb
sub
les
cmc
or
test
repz
test
fidivrl
adc
sub
shl
pop
dec
nop
push
test
test
sbb
sbbb
jecxz
jge
sbb
call
leave
xor
out
sub
pop
insb
lock
xchg
cmp
addr16
adc
daa
push
mov
xor
jmp
lds
aaa
jns
xlat
pop
les
jmp
mov
sti
or
dec
mov
outsb
rclb
push
aam
adc
mov
aam
mov
idivb
fcoml
aas
add
inc
ret
adc
mov
aad
xor
push
jg
gs
sub
ret
sbb
gs
xlat
mov
inc
sub
cwtl
insb
shl
cli
dec
xchg
insb
stc
sbb
rorb
in
loope
in
mov
dec
dec
cmc
negl
in
cmp
mov
mov
mov
pop
loop
jle
out
add
pop
jo
cmpsl
ret
jmp
xorl
testb
stc
jg
vmovaps
mov
xor
mov
or
mov
cmp
test
cmp
sbb
adc
cli
subb
fsubp
test
pusha
xor
sub
lcall
icebp
jo
or
and
inc
in
cld
push
push
insb
scas
dec
aas
pop
loop
out
cmp
je
jmp
nop
push
mov
mov
data16
mov
shl
push
mov
cmp
xor
scas
std
scas
aas
xchg
sub
enter
xor
sbb
mov
cmpsl
mov
fsubrl
icebp
xchg
pop
outsb
push
xchg
mov
mull
mov
inc
sbbl
or
sbb
test
movsl
int
enter
mov
hlt
sbbb
lahf
and
lods
mov
and
shrb
sub
or
jns
and
fwait
sub
pop
mov
in
icebp
sbb
call
jp
decb
push
or
jle
xor
push
or
xchg
push
cmp
add
ss
imul
rolb
outsl
jg
mov
push
mov
dec
shl
mov
stos
push
adc
and
arpl
fucomp
pop
aaa
sub
fisubrl
mov
sub
dec
mov
out
push
pop
ss
fists
int3
mov
push
aaa
fsubl
push
pop
push
sub
inc
inc
xchg
jno
sbb
addl
hlt
mov
ffree
jae
jbe
mov
dec
mov
imulb
sbb
dec
and
movsb
scas
jns
call
in
outsl
cmp
push
xchg
inc
insb
xchg
stos
sub
cmp
xor
loop
jo
xor
inc
popa
adc
mov
add
xor
or
mov
push
out
out
stc
sbb
add
add
shr
mov
jg
mov
stos
inc
push
mov
or
popa
cmp
pop
call
cs
stc
arpl
cmp
dec
add
arpl
jne
sub
mov
mov
jmp
insb
pop
test
imul
les
mov
fisubl
dec
xchg
sti
cmp
xor
xchg
out
jno
jp
pop
mov
notb
xor
bound
cld
adc
inc
popa
inc
xchg
addr16
aas
mov
pop
push
je
xchg
adc
insb
inc
arpl
and
pop
repnz
enter
iret
jmp
ficoml
add
orb
fldenv
jne
rolb
mul
mov
je
mov
roll
lret
test
enter
mov
and
adc
xlat
outsb
ss
stc
xor
jbe
loopne
orb
mov
incb
mov
and
push
ljmp
pushf
or
sbb
sub
pop
rcl
add
or
call
aam
add
push
push
out
rcr
xor
mov
in
addr16
adc
ss
imul
pop
cmpsb
lret
inc
inc
and
jp
mov
sbb
add
xor
mov
add
push
hlt
inc
ret
hlt
mov
mov
jl
jl
ja
lret
jae
mov
sub
xchg
jmp
in
cs
in
out
xchg
cmp
les
fdivl
or
dec
lea
out
inc
cmp
xchg
lods
ja
jge
lret
lock
insl
call
or
imul
sahf
mov
push
jo
mov
cli
push
cmp
jne
sbb
leave
pusha
jo
and
xchg
out
mov
cmpsb
decb
add
jbe
and
sbb
imul
sub
data16
sub
mov
lahf
push
outsl
shlb
sbb
popa
cld
pop
pop
sahf
and
test
push
lods
inc
arpl
daa
es
push
mov
out
fs
int3
arpl
xchg
test
lret
jne
rcll
sahf
enter
or
xchg
jbe
mov
sbb
xor
int
out
push
push
fwait
ret
mov
jmp
xor
cwtl
das
mov
adc
mov
mov
dec
inc
les
sub
inc
pusha
jecxz
loope
incl
rclb
or
mov
subb
add
sbb
jne
fmuls
gs
ljmp
das
fwait
cmpsl
test
in
mov
mov
inc
lcall
sbb
add
sti
add
sub
cltd
sub
sti
mov
pop
xchg
stc
sti
pop
fcomps
dec
pop
and
jg
je
cmp
mov
mov
scas
ret
out
mov
test
xchg
and
test
test
out
mov
fcomps
mov
ss
push
int
xor
int
sub
and
icebp
nop
int
cld
xorb
aad
xchg
inc
ffree
arpl
sti
xlat
xor
dec
add
sbb
ja
fucomp
lods
test
das
push
and
and
xchg
aaa
push
add
jp
int3
faddl
loopne
aam
push
jno
mov
push
cs
mov
fbstp
lret
mov
out
push
aad
inc
jecxz
jg
outsb
lea
icebp
js
ljmp
inc
mov
pop
das
out
clc
jae
je
lods
jle
and
sub
xchg
out
frstor
loope
jecxz
jne
dec
jmp
jbe
adc
fnclex
adc
pushf
mov
shlb
aaa
sub
lcall
bound
add
inc
lock
pop
xchg
in
cmp
ret
push
sbb
pop
jl
sub
push
push
out
add
icebp
movsl
into
and
push
in
fnstcw
mov
mov
call
mov
inc
cmp
mov
or
aam
push
lods
dec
stc
pop
outsb
push
add
mov
fadds
cli
inc
leave
mov
inc
outsl
or
sti
jb
lahf
lret
int
add
in
adcb
sbb
incb
and
dec
outsb
or
adc
cmp
jle
and
and
xchg
mov
inc
mov
xlat
push
shlb
pop
push
xchg
cmp
fcompl
dec
out
movb
cmpsb
dec
jne
cmp
inc
addb
shll
ficomps
sets
leave
dec
push
test
sub
adc
es
xlat
outsb
fadd
sub
xor
cmc
mov
dec
test
outsl
je
inc
gs
pop
imul
mov
cltd
pusha
into
out
jns
pusha
stos
cmp
inc
xor
adc
jecxz
inc
xor
sbb
cmp
pop
push
pop
lea
cwtl
rcrl
xchg
fucomip
popa
lds
push
xchg
stos
jmp
push
dec
data16
ficoms
es
or
fisttps
shl
add
insl
xchg
mov
jnp
aad
call
or
gs
cltd
mov
inc
cmp
jb
sbb
sbb
loope
fnstcw
cmp
dec
pop
mov
in
mov
dec
sub
stos
aas
mov
pop
add
rcr
aas
inc
out
push
les
aad
lret
mov
mull
mov
add
sub
and
inc
sarl
imul
push
lret
mov
divl
jns
or
or
outsl
mov
jp,pt
pop
outsl
xchg
lcall
jns
int3
andb
pusha
mov
fnstcw
daa
inc
pop
cmc
xor
hlt
jl
inc
xchg
dec
add
xor
jecxz
cs
push
out
adc
shl
sub
jno
out
ljmp
popf
pop
dec
and
fstps
mov
sbb
inc
push
inc
into
shll
jnp
inc
gs
pop
mov
scas
test
movsl
loopne
fstps
xor
pop
lods
jmp
xlat
pop
daa
jne
xchg
leave
push
cltd
or
add
in
mulb
lahf
sbb
cmp
ss
lods
int
push
aas
push
movsb
mov
xorl
into
adc
lea
loop
jl
mov
or
cltd
push
push
scas
inc
and
mov
xor
dec
and
mov
inc
or
pop
cld
cmp
and
inc
daa
outsl
aas
cwtl
aaa
add
mov
mov
jnp
daa
outsl
xor
mov
xchg
mov
gs
fsubrs
pmaxub
jo
mov
out
and
dec
test
cmp
test
repnz
insl
xlat
and
hlt
addr16
and
jp
insl
stc
out
and
mov
push
repz
ret
enter
les
aas
loop
ret
xor
es
fldenv
sbb
gs
and
and
jae
ret
das
mov
or
add
jne
or
jle
sub
repnz
sub
adc
pop
stos
es
cmp
mov
and
adc
jecxz
push
xchg
sub
dec
jp
insl
cmp
xor
mov
inc
jmp
jge
xor
fiaddl
xchg
sti
test
push
fdivl
push
sub
ret
rclb
fiaddl
lods
xchg
add
mov
les
mov
mov
mov
shrb
lahf
push
nop
mov
fdivrl
fwait
test
int3
loopne
js
sub
into
notb
jae
push
das
mov
xor
loopne
fcompl
mov
cmpsl
jb
fadd
daa
or
nop
dec
mov
cmp
add
shlb
mov
icebp
pop
sub
pushf
fsubrl
cmc
std
adc
fs
cmp
push
dec
sub
scas
js
cltd
mov
bound
push
xchg
mov
cs
sbb
push
mov
mov
es
insl
jnp
iret
insl
adc
ss
sbb
arpl
dec
xchg
rorl
or
mov
push
mov
insb
pop
pop
push
mov
stos
cmp
xor
push
sti
testl
cmpsl
ds
and
and
nop
mov
ret
lds
cmp
push
cltd
ss
in
stos
mov
push
movsl
cmp
mov
cmp
ret
out
dec
shl
aad
aaa
ficompl
xchg
pop
add
test
imul
daa
shrb
and
dec
sub
scas
xor
jns
clc
sahf
ss
add
cmc
dec
mov
jl
adc
fildll
sahf
jp
jmp
decb
cmovnp
push
cli
test
dec
lret
xchg
xor
or
ret
fs
mov
aad
inc
nop
aam
lret
xor
mov
jp
aam
push
cs
mov
mov
ret
subb
fnsave
daa
addr16
cwtl
movsl
pop
sarb
adc
jae
and
imul
inc
fstp
fwait
clc
jnp
inc
adc
jae
lock
pop
push
mov
push
mov
sbb
outsl
dec
shrl
int
mov
adc
sub
fstpt
and
popa
mov
xor
mov
nop
daa
add
and
movsb
cmpsl
jne
shlb
add
sub
das
mov
imul
in
mov
testl
fucomp
add
das
cmp
loope
call
shlb
fstps
clc
or
ror
and
mov
movsb
fldl
add
sub
icebp
enter
sub
push
adc
inc
iret
aas
aaa
pop
fwait
mov
popl
data16
adc
pop
mov
mov
data16
int
add
xor
mov
xor
adc
xchg
sbbl
stos
mov
bound
cmc
ljmp
rcrl
mov
fiaddl
sbb
inc
cwtl
lods
mov
rorb
cwtl
repz
sti
and
pop
loopne
xchg
sbbl
jb
pop
mov
data16
add
imul
xchg
shrb
mov
push
pop
jb
and
call
sbb
cmp
push
in
adc
loopne
lea
scas
arpl
pushf
mov
dec
push
jmp
xchg
daa
add
mov
dec
lea
call
mov
mov
and
xchg
mov
mov
or
mov
dec
cmp
mov
imul
sub
mov
pop
ss
aad
fstpl
incl
push
xlat
les
xor
sbb
loop
popf
cmp
inc
sahf
in
jae
and
test
push
sub
movsl
mov
dec
xchg
sub
stos
insl
popf
lock
mov
mov
imul
jle
sbb
pop
cmp
lea
iret
add
fxch
dec
cmpl
scas
aam
jnp
xor
jns
and
test
lock
cmp
inc
fisubl
mov
ljmp
and
mov
lret
shr
jo
push
or
mov
dec
notb
push
push
sub
mov
fstl
imul
mov
jo
sub
jmp
outsl
mov
mov
nop
divb
adc
sub
loop
cmp
jecxz
cmp
ljmp
jae
in
mov
aad
fs
mov
jns
pop
sbb
lea
xor
mov
push
lock
test
xchg
pop
aaa
pop
iret
mov
jnp
inc
fimull
pop
cmpsb
mov
or
out
adc
inc
jbe
andb
push
fsubrs
ss
push
pop
pop
cmp
jge
icebp
shl
repz
dec
mov
loopne
sbb
ret
pop
dec
pushf
cli
sbb
dec
mov
arpl
inc
ret
sub
notl
sub
cmp
cmp
popf
je
cmpsb
andl
mov
and
outsl
orb
jbe
mov
test
out
dec
inc
call
adc
jne
mov
dec
mov
jp
arpl
stos
push
or
aaa
xor
sbb
inc
jmp
pop
jne
mov
mov
es
and
stos
lods
fcompl
movsl
fdivrl
dec
mov
movsb
test
mov
push
call
es
mov
and
sbb
inc
cs
ficomps
lea
dec
adc
jecxz
pop
jge
pop
dec
jae
mov
test
aas
je
mov
ss
jge
sbb
inc
mov
call
and
ret
pop
aad
call
sub
inc
lds
loop
sub
or
push
in
jmp
inc
pushf
lcall
or
xchg
jo,pt
xchg
mov
lret
shlb
cmp
mov
int3
ds
dec
xor
movsb
push
repnz
adcb
pusha
sbb
mov
lcall
out
jnp
fisubs
and
dec
popfw
cmp
cs
and
xchg
add
out
fwait
addb
and
rorb
xor
std
mov
sbb
les
jecxz
pop
add
fbstp
cli
sar
inc
add
inc
adc
push
popf
sub
loop
mov
cs
jg
test
dec
jge
jne
jo
ss
dec
aad
jnp
cmp
inc
adc
push
lret
xchg
lret
push
ret
adc
in
out
xchg
xor
jo
xchg
xor
xchg
sbb
ljmp
iret
enter
stos
testb
jns
lock
mov
jmp
dec
push
or
insl
lret
push
jg
mov
movsb
arpl
push
pop
or
dec
push
cmp
jo
stc
popa
stos
push
or
cmp
mov
inc
mov
lahf
and
movl
fidivl
xchg
cwtl
inc
fdivl
or
scas
ret
aam
inc
jp
inc
adc
pop
push
aas
mov
out
lods
divb
scas
jae
sbb
les
in
shl
mov
and
adc
add
push
dec
push
xor
stos
inc
mulb
cwtl
pop
bound
cmpsb
loopne
aam
aas
lods
cmp
popa
lods
inc
xchg
mov
lret
bound
sbb
mov
fidivrl
mov
mov
ret
test
ret
bound
cmp
or
cmpsl
fwait
ljmp
jecxz
mov
jne
push
inc
xchg
xor
mov
mov
mov
xor
incl
xor
jl
lret
xorb
jmp
test
inc
pop
loope
jnp
fildll
inc
data16
outsb
outsb
push
ja
push
lods
sbb
xor
add
push
push
in
sbb
push
dec
sarl
push
adc
int3
push
or
mov
lret
inc
mov
lods
mov
pop
or
mov
dec
iret
ret
sub
sub
or
imul
out
pushf
add
mov
pop
nop
iret
loop
rolb
ja
lahf
or
cwtl
movsb
sub
jg
data16
sbb
jge
les
mov
push
divb
inc
fldt
leave
mov
jae
and
sub
or
adc
movsl
repz
cmp
push
jge
push
stos
dec
inc
cmp
mov
jno
jge
jecxz
ljmp
cmp
bound
lret
mov
push
mov
aaa
shll
lcall
mov
cmp
mov
cld
jg
aad
jg
add
add
pop
push
inc
mov
sub
stos
pop
repnz
push
adc
xchg
jns
incl
jmp
dec
scas
out
repnz
clc
lahf
jb
out
shrl
dec
stc
nop
cmp
mov
jb
or
nop
leave
lea
lret
jae
repnz
sbb
lahf
mov
xchg
xchg
in
out
xor
adc
dec
xchg
mov
cmp
adc
dec
mov
inc
popf
mov
sbb
xchg
fsubrl
or
mov
or
in
jl
rorb
fdiv
test
aam
sbb
adc
xor
hlt
insb
xchg
jo
dec
clc
clc
jb
sti
fwait
and
mov
lock
add
xchg
sti
hlt
or
push
sub
mov
fmull
pop
mov
dec
jp
fwait
mov
cmp
mov
in
aas
fs
stc
aas
adc
outsb
insb
fwait
lods
jne
sbb
pusha
jb
jmp
sarb
inc
jmp
sbb
mov
mov
outsl
xchg
sahf
clc
clc
mov
adc
std
adc
pop
dec
imul
mov
sbb
mov
ret
inc
in
push
leave
ret
jne
cmp
mov
push
dec
jo
orb
inc
cltd
ja
pop
test
inc
cmpsl
int3
pop
dec
jae
jecxz
adc
xlat
cmp
push
dec
and
cmp
int3
scas
je
ret
adc
jbe
outsl
loope
andl
andb
cmc
pop
jl
rorb
stos
daa
inc
add
mov
inc
mov
fprem
jnp
mov
sub
sahf
cmp
sbb
addr16
ficompl
out
cli
test
xor
fwait
dec
xchg
fcoms
ja
xchg
xlat
scas
inc
loop
filds
sub
ds
insl
leave
dec
sub
xchg
dec
aad
push
jecxz
addr16
xor
sbb
adc
lret
push
icebp
movsl
fbld
xlat
and
lds
cwtl
das
push
cmp
call
gs
pop
aas
testb
pop
adc
lea
popa
leave
cmp
or
shll
aam
jbe
int
rcl
stos
cmp
mov
dec
int
cmp
loop
sbb
jo
andl
dec
adc
hlt
aas
sbb
pop
repnz
cmp
add
fisubrs
mov
mov
insl
loopne
icebp
jno
out
pop
adc
sbb
jns
aas
jno
dec
sub
fstpt
jbe
in
jne
fnstsw
xor
xchg
ds
add
out
jecxz
adc
shlb
xor
xchg
pop
pop
popl
aas
inc
pop
out
cmp
pop
div
or
xchg
jle
or
aam
mov
xchg
or
cs
pop
lret
std
mov
dec
ja
xorl
sub
repz
sbb
jae
xchg
test
dec
inc
lea
das
or
mov
je
xor
dec
xorb
mov
push
movsl
sbb
lods
inc
or
movsl
or
lret
sub
dec
and
lcall
out
loop
sub
imul
push
fcom
mov
pushf
add
xor
ds
nop
or
movsb
stc
nop
push
jb
mov
push
sbb
adc
mov
stos
adc
xor
inc
add
jae
cmc
mov
fucom
pop
icebp
push
mov
xchg
aaa
js
cli
mov
jle
daa
add
push
jb
xor
bound
repnz
sahf
sbb
enter
jb
arpl
and
lret
mov
add
mov
push
daa
mov
and
call
xchg
and
nop
ds
xchg
sbb
sbb
les
sarl
js
mov
gs
mov
xchg
out
addr16
add
add
mov
xchg
test
std
mov
pushf
sbb
add
pop
icebp
push
mov
pusha
and
xchg
cmp
inc
fsubrs
out
pop
xchg
mov
pushf
mov
lret
outsl
push
std
cmpsl
stos
xchg
es
lea
sbb
aas
idivb
jb
fbld
pop
daa
sbb
fucomi
popa
add
dec
jo
outsb
adc
mov
int
xchg
fbstp
pop
in
and
add
outsb
mov
xchg
pop
xchg
adc
fsubs
outsl
or
lret
scas
mov
and
cmp
loopne
sarl
mov
andl
push
pop
mov
add
in
add
loop
dec
loope
add
or
mov
push
bound
in
inc
mov
jmp
outsb
popa
iret
push
lea
arpl
movsl
and
pop
adc
in
mov
fbld
outsl
inc
inc
std
mov
clc
jmp
xchg
sub
or
cmp
lea
cmp
call
dec
sbb
mov
xor
ds
sub
out
repz
in
mov
inc
aad
inc
push
push
test
in
pusha
icebp
lret
movsl
ja
add
xchg
dec
dec
adc
sub
rclb
add
jb
fsubr
add
mov
jnp
lret
mov
popf
xor
add
sbb
inc
sbb
cli
daa
notb
push
jbe
arpl
cltd
cmp
pop
loope
loope
cltd
es
push
loop
ljmp
inc
sub
sbb
cs
mov
push
rcr
daa
push
pop
decl
in
cmc
fsubs
xchg
sub
decl
aaa
push
lods
sub
rcll
pop
dec
jo
push
mov
mov
add
or
movsb
dec
xchg
bound
pop
adc
mov
insb
fildll
add
xor
arpl
xchg
sbb
addr16
push
scas
movsb
jnp
xor
push
pop
mov
mov
xor
cwtl
mov
pushf
idivb
jbe
mov
add
cmp
ret
movsb
sub
jl
mov
jmp
stc
push
or
movsl
sbb
fisubrs
inc
popa
cld
ss
out
xor
xor
xchg
jecxz
add
push
xor
outsl
loope
adc
mov
ss
ficomps
int
mov
sub
in
jo
inc
cs
and
bound
mov
push
out
or
adc
repz
pushf
and
cs
out
fisubs
call
int3
rcl
mov
imul
pop
sub
jge
lahf
xlat
ljmp
mov
push
xchg
daa
out
pop
xchg
dec
mov
push
jmp
lret
into
into
jno
inc
lret
jl
dec
fnstenv
pop
pop
adc
dec
xchg
out
xor
and
daa
mov
in
mov
cmp
rolb
repnz
xor
cmpsb
int3
popa
scas
stc
or
cli
in
xor
ficoms
mov
aam
push
pop
xlat
repz
negb
hlt
mov
ficomps
sbb
or
cwtl
mov
sahf
sub
int
add
call
inc
mov
xor
out
xor
ljmp
jns
jo
adcl
clc
cmp
add
pop
les
addr16
ds
into
gs
or
mov
pop
mov
mov
mov
lds
test
aad
mov
xchg
daa
xlat
cmpsl
mov
pusha
rolb
mov
jns
cmp
cmpsb
inc
inc
into
xor
test
cmp
imul
lock
test
fcmovne
mov
insl
add
ljmp
call
aas
jl
in
and
mov
mov
dec
imul
imul
icebp
jnp
movsl
lds
push
cmc
sbb
arpl
int3
movsl
xlat
pop
or
ds
cmp
sub
scas
push
jb
out
js
fdivrl
xchg
out
jmp
fdivrl
lea
mov
inc
stc
rolb
or
mov
cmp
sbb
xor
inc
xchg
dec
stos
test
les
lods
aam
push
bound
xchg
sub
int
jno
jmp
mov
pop
or
inc
push
cmp
push
in
push
aam
in
clc
cmc
fucomp
sub
mov
cmpsb
mov
ljmp
fldl
add
out
loop
jecxz
aas
pop
sar
lcall
sub
es
adc
fwait
lret
inc
test
flds
mov
push
push
pop
ds
fs
out
int3
adc
inc
adc
mov
fisttps
pop
mov
xchg
popa
push
ficoml
cmp
push
xchg
jl
jl
movsl
loop
enter
and
rol
outsl
jl
sti
xchg
fldt
jnp
jbe
test
insl
shrl
adc
mov
or
into
dec
pop
xchg
dec
int
mov
in
xchg
cmp
rorl
in
and
fbld
loop
mov
mov
inc
push
jmp
aaa
jo
pop
xor
fsubrp
mov
mov
test
fwait
or
sbb
shrb
mov
mov
std
push
fimull
test
mov
push
stc
xchg
fiadds
test
xchg
rcll
aam
xor
inc
outsb
fnstcw
jmp
data16
push
xchg
jno
sub
pop
imul
and
aas
stos
test
ret
fcomi
andb
iret
jecxz
and
shll
jno
aam
sbb
xlat
mov
divb
or
call
faddp
paddsw
out
test
out
daa
andl
cld
sbb
mov
pop
push
pop
loope
sub
mov
insl
decb
cmp
ja
mov
sub
dec
ljmp
int
movsl
mov
mov
push
xor
mov
arpl
pop
xor
xchg
and
fwait
sbbb
std
negb
rorb
stc
gs
shlb
aam
mov
inc
jno
aad
aad
dec
push
adc
xor
popa
jmp
mov
ficoml
cltd
jae
dec
mov
lds
inc
mov
pcmpgtd
je
mov
ret
outsb
jl
movl
pop
mov
outsl
mov
jno
addr16
push
mov
call
pop
xor
es
or
iret
mov
inc
mov
add
push
jne
and
and
push
mov
push
shr
test
loop
pushf
xchg
xor
lcall
jne
sar
aas
push
outsb
lret
dec
int
vmread
mov
stos
ljmp
or
ljmp
dec
inc
int3
je
clc
jp
xor
gs
cmp
xchg
xor
cmp
adc
loop
cmpsb
leave
lods
pop
enter
pop
leave
xor
addr16
cli
adc
into
sti
xchg
add
mov
sbb
stc
aam
std
jne
mov
pop
hlt
mov
or
in
and
iret
pop
inc
pop
cmc
jae
insl
add
sbb
mov
mov
bound
lret
push
jmp
test
cmp
lds
addr16
cltd
adc
inc
sub
mov
mul
mov
cmp
inc
lahf
insl
pop
inc
ljmp
sub
pop
mov
cmp
scas
into
outsl
loop
inc
pop
icebp
je
inc
test
adc
jno
and
je
xchg
je
out
pop
adc
inc
jae
dec
imul
sti
dec
mov
mov
sbb
bound
push
leave
bound
lods
inc
sbbl
cwtl
mov
andl
repnz
and
cmp
pop
insl
scas
mov
xor
out
jecxz
lret
hlt
push
stos
test
fwait
dec
add
fists
das
cwtl
xor
mov
mov
test
sbb
sbb
add
loopne
daa
inc
rcrl
jno
push
lods
mov
std
mov
stc
mov
cmp
sti
xchg
dec
cmp
idivl
dec
hlt
dec
loopne
imul
cmp
mov
and
and
shl
int
ss
addr16
pop
addr16
push
outsl
test
pop
lds
xor
pop
outsl
jo
das
sub
xor
and
inc
in
xorl
fwait
mov
or
adc
jae
sub
shrb
ja
mov
int3
lock
push
test
inc
mov
adc
push
add
push
aad
in
test
in
inc
out
mov
mov
das
ljmp
or
pusha
shl
mov
lods
jns
movsb
cmp
out
xor
jns
out
repnz
push
aad
or
shl
jmp
out
add
vmovlpd
jbe
push
sbb
les
insb
mov
dec
mov
nop
daa
popf
loopne
or
jmp
stos
mov
xchg
icebp
jbe
ds
in
xchg
scas
xor
add
fldenv
and
out
or
sbb
stc
mov
js
xor
hlt
adc
lods
adc
jle
fists
decb
and
push
xlat
mov
jmp
fsubrl
or
cs
xchg
jg
adc
loop
in
add
es
push
test
mov
jge
outsl
sub
inc
pop
rorb
daa
lods
sti
sar
out
sub
sbbb
rolb
mov
mov
ds
rclb
insl
xchg
jl
mov
sahf
sbb
loop
xchg
xchg
cmc
lsl
adc
mov
cmp
fst
jns
dec
ja
mov
xchg
inc
in
mov
adcl
mov
xchg
fwait
lods
les
rcrl
out
pop
icebp
sbb
dec
js
sbb
aad
mov
push
add
nop
daa
fcomps
lods
jmp
test
jb
fdiv
adc
das
movb
xchg
ss
mov
mov
aam
adc
jae
jge
fcomps
dec
dec
inc
jle
push
mov
mov
push
repnz
addr16
lds
push
jmp
data16
out
sub
lahf
pop
cmp
push
popf
sub
ljmp
std
decl
mov
les
dec
adc
aaa
into
mov
pop
lret
mov
sbb
cmpsb
mov
scas
sar
xchg
cs
xor
pushf
add
int
pusha
ss
mov
push
sarl
and
dec
inc
aas
rcll
jmp
and
or
ss
dec
dec
push
jne
mov
jbe
push
leave
sbb
or
outsb
dec
pop
adc
ss
add
xor
lods
movzbl
mov
out
xchg
in
mov
js
add
inc
pop
jns
xor
sbb
mov
repz
inc
xchg
and
push
jns
push
xor
jbe
cs
xchg
add
es
std
push
xchg
stos
jmp
js
pop
lahf
clc
test
outsb
cmp
xor
cwtl
jae
fdivrl
repnz
pop
mov
ljmp
add
mov
sub
sbb
jmp
add
sbb
je
in
bound
add
into
sub
inc
mov
jns
stc
mov
std
xchg
inc
dec
push
and
sbb
mov
sarl
imulb
cmp
pop
push
decb
cmp
mov
or
lcall
mov
clc
or
repnz
sbbl
stos
imul
jmp
sbbl
ljmp
imul
call
ficompl
enter
repz
xchg
scas
push
sub
sarl
out
mov
pop
jnp
hlt
mov
mov
push
xchg
fiaddl
out
fldl2t
cmp
icebp
cmp
loopne
pop
add
sbb
mov
lret
push
jle
or
mov
xchg
movsb
mov
xchg
sti
jbe
in
pop
jl
xchg
jg
loope
int
pop
lcall
dec
mov
popa
inc
mov
lcall
loope
mov
inc
jl
movsl
lea
jo
pop
xchg
jne
fdivs
mov
pop
les
in
cmp
fwait
mov
aad
hlt
mov
pop
fmulp
ja
mov
cmpsb
push
imul
sub
mov
jne
jns
pop
frstor
cmc
and
or
scas
fisttpll
lret
lret
xchg
pop
cwtl
dec
mov
fwait
add
push
jne
stos
sahf
and
mov
dec
dec
jae
leave
enter
loopne
sub
int3
jmp
fimull
lock
xor
jb
pop
in
mov
dec
js
in
std
rclb
xchg
leave
pop
gs
movsl
outsl
inc
fistpll
cs
pop
lret
push
and
jo
repnz
ja
sbb
push
std
jno
iret
gs
les
and
lret
call
test
mov
mov
adc
mov
fistpll
enter
out
test
inc
rcr
fwait
push
and
jns
mov
sub
push
std
lods
ret
cmp
sub
cmp
jmp
adc
pop
es
xor
js
adc
lret
dec
dec
and
cmp
xor
fildll
ret
cltd
movsl
mov
xorb
jg
mov
jnp
int
and
out
mov
pop
test
insl
ja
pusha
cmp
in
les
dec
sub
roll
lahf
or
add
lahf
inc
push
inc
out
movsl
dec
fwait
or
mov
cmpsl
push
add
inc
or
or
pusha
imul
mov
pop
test
inc
test
out
js
ja
xchg
mov
jg
adc
jns
les
cwtl
cmpsl
adc
sub
mov
aam
iret
rcrb
add
popf
cmp
adc
test
rol
dec
add
dec
fwait
sbb
loopne
mov
push
sub
enter
inc
inc
and
add
jnp
jns
dec
dec
push
inc
sbb
jae
shrl
jns
add
scas
out
mulb
mov
dec
loopne
imul
push
dec
add
mov
cmp
cli
cmp
outsl
mov
les
je
aas
loope
repz
mov
sbb
pushl
xchg
jmp
sbb
or
pop
sub
fstpl
mov
inc
in
jb
inc
iret
enter
adc
and
add
xchg
divb
ds
rclb
pop
ret
fs
inc
pop
sahf
sub
pop
push
pop
mov
jge
adc
insl
in
cld
shrl
jne
inc
into
test
fidivl
loop
inc
out
xor
cwtl
das
xchg
mov
das
pop
jno
add
aad
out
pop
sarl
cmp
cmpsl
ljmp
mov
cmp
frstor
mov
popf
and
imul
jle
mov
xor
pop
insl
cmp
test
push
add
aas
fistpll
adc
sub
bound
push
jge
fistl
inc
or
repz
mov
hlt
jns
xor
sub
lcall
jnp
xchg
daa
jmp
pop
mov
xchg
cmc
shlb
mov
hlt
or
cltd
xchg
dec
mov
pop
loope
ljmp
jle
in
push
and
jl
or
sub
aam
sbb
jmp
or
push
repnz
xchg
mov
mov
inc
dec
test
or
mov
pusha
lret
jb
add
add
cwtl
pop
push
push
dec
scas
aaa
sbb
addb
mov
add
adc
in
and
stos
scas
dec
or
test
std
or
repnz
std
movsb
cld
fisubs
push
jle
adc
btc
cmpsl
in
aaa
sahf
scas
jns
aad
or
sub
mov
mov
inc
mov
setge
insl
stc
lods
pop
iret
pop
out
mov
mov
xor
lds
flds
mov
bound
iret
jb
push
mov
jmp
push
push
int
cmpsb
push
lock
push
in
jmp
pop
cmc
mov
push
pushf
in
test
loopne
fnstenv
dec
xchg
adc
sbb
les
outsb
outsb
inc
cwtl
sahf
sub
lret
test
std
fidivl
mov
mov
push
sub
push
cmp
or
push
stos
test
sbb
dec
sub
pusha
ret
or
mov
add
iret
xchg
adc
adc
push
mov
cld
fwait
sub
jmp
pop
adc
sbb
les
jle
mov
loop
push
mov
xor
xchg
inc
std
xor
sti
push
repz
mov
fldenv
or
cwtl
insl
dec
ficomps
lea
add
jnp
or
push
cmp
jnp
mov
aas
fdivs
xchg
jbe
loopne
ljmp
xchg
insb
inc
outsl
inc
jbe
fcomi
cmp
cmp
inc
pop
xchg
mov
mov
int3
add
or
mov
mov
shrb
les
push
pop
mov
mov
xchg
rorw
fwait
jae
insb
rclb
sbb
xchg
sub
push
xchg
dec
xchg
mov
repz
pop
lea
in
xchg
fs
dec
add
push
dec
shll
cmc
lcall
xchg
mov
inc
hlt
psllq
ss
inc
movsl
jp
fisttpll
sbb
icebp
xchg
fs
jb
xchg
dec
in
nop
subl
cmp
mov
insb
out
dec
loop
mov
imul
out
test
repz
cmp
imul
push
roll
xchg
xor
push
loopne
cmpsb
push
mov
cmpsb
push
das
cmpps
imul
mov
ret
dec
inc
push
dec
mov
mov
arpl
out
jg
sbb
rcll
push
sbb
push
sub
xchg
pop
int
or
jle
sbb
sbb
mov
sbb
scas
loope
push
std
push
scas
jne
popa
cmpsl
aam
mov
repz
mov
clc
shll
xchg
sbb
minps
ja
push
mov
mov
push
inc
lods
js
mov
push
stos
lods
inc
sahf
daa
stos
inc
cltd
fldenv
lods
inc
cltd
push
stc
stos
mov
and
cmpsb
dec
iret
data16
or
enter
or
push
cs
jmp
es
xor
lods
inc
pop
mov
sarl
mov
and
dec
rorl
cmp
xchg
out
ds
icebp
lahf
jbe
test
data16
jp
ljmp
cmpsb
jno
add
push
rcrb
mov
out
or
pop
insl
sbb
arpl
add
inc
pop
or
mov
test
sbb
lret
lahf
or
push
lods
pop
or
daa
jmp
or
dec
jg
outsb
stc
or
and
out
xor
jmp
ljmp
sbb
loope
in
adc
movsb
pop
ret
nopl
sahf
push
loope
jmp
dec
mov
divb
xchg
push
sbb
jl
ja
xchg
scas
out
lea
mov
andl
push
adc
aam
mov
shrl
mov
bound
cmp
dec
and
andl
fldcw
popf
aas
inc
pop
jno
lea
pop
fs
sbb
out
mov
stc
jo
xor
jmp
push
and
xchg
arpl
lahf
int3
pop
in
sbb
dec
daa
sub
jne
xor
cmp
xor
pop
sub
xchg
daa
int3
mov
add
add
cmpsb
jecxz
or
notb
xlat
repz
add
sub
mov
lods
fwait
sahf
xor
sbb
int
or
add
sub
mov
es
push
or
sbb
jnp
pop
rcll
jne
addr16
pop
inc
pop
push
movsb
dec
test
push
dec
jmp
movsb
inc
out
jne
mov
mov
test
xorl
or
mov
jecxz
ds
inc
dec
xchg
je
push
insb
adc
and
or
or
push
cmp
lcall
and
adc
aam
daa
push
in
std
push
inc
add
xchg
loope
adcb
ljmp
sbb
push
icebp
insb
xor
ret
push
bound
decb
int
enter
push
pop
js
cmp
cmpl
or
arpl
or
add
stos
add
pop
sub
dec
loope
dec
aam
test
dec
nop
cmpsb
sbb
jo
iret
mov
sbb
xor
clc
iret
jbe
xchg
and
out
cld
inc
ret
lret
and
inc
out
push
push
sbb
aas
aaa
xor
push
fists
cmpsb
jo
sbb
mov
loopne
or
dec
scas
popf
jno
mov
push
js
jnp
xor
cmp
add
repnz
movsl
in
imul
std
jbe
sub
dec
fnstsw
test
movsb
push
cs
or
or
sub
mov
les
cli
stos
push
push
shll
cltd
loop
stos
cmp
addr16
imul
arpl
mov
popa
lahf
cmp
adc
push
aam
call
sbbb
jge
inc
pop
cmc
jp
dec
cmpsl
sub
int3
insl
or
stc
lcall
mov
scas
scas
inc
jmp
mov
sahf
sub
loope
sbb
movsb
cmp
bound
stc
ret
repz
gs
addb
mov
frstor
rorb
jo
sbbl
jp
mov
and
fmull
popf
jle
loop
mov
insb
getsec
sbb
cmc
enter
fsts
pop
push
loope
xchg
das
mov
test
popa
test
loope
es
mov
dec
aaa
lret
add
pop
xchg
in
add
and
inc
call
cmpsb
jns
data16
jno
dec
pop
pusha
pop
and
sbbl
add
xor
pop
cmp
pop
mov
ss
inc
fisubrl
sti
pop
test
jbe
or
push
adc
jnp
fisubs
adc
test
pop
sub
in
fcmovnbe
pop
fcmovnbe
jno
adc
inc
in
xchg
arpl
stos
cmpsl
mov
rorb
dec
mov
aam
push
in
mov
and
pop
jno
data16
or
jo
dec
lret
pop
pop
push
cmp
lret
bnd
aas
push
stos
jg
push
xor
or
push
mov
fst
repnz
jl
jle
scas
cli
pop
add
cmp
pop
sbb
sub
ftst
imul
jl
sbb
icebp
dec
jo
xchg
pop
cwtl
inc
or
pop
cld
jge
enter
xchg
pop
lret
in
div
mov
cmp
fmuls
mov
sub
adc
mov
aas
mov
pushf
sbb
or
icebp
dec
bound
sbb
mov
xchg
fs
les
cmpb
mov
arpl
movsb
xchg
sub
and
jg
out
popf
mov
insl
mov
push
addr16
icebp
test
ret
push
dec
pop
repz
pop
adc
push
lods
aam
mov
push
lods
xchg
das
push
add
shlb
or
shrl
cli
mov
int3
add
ja
stos
cmpsl
ds
cld
addr16
jne
bound
mov
cmpl
ss
cmp
mov
lds
lcall
ror
leave
or
xchg
mov
jno
and
add
insb
sbbb
into
cmp
pop
test
cld
cltd
adc
pop
mov
rorl
popa
icebp
je
jns
das
and
xchg
mov
test
mov
sub
push
sub
out
sbb
jl
fsubs
mov
cmp
lods
cld
addl
loopne
sub
lret
std
cwtl
call
cmp
add
loopne
xchg
ret
rolb
pop
fwait
jle
shll
lds
push
xchg
mov
dec
mov
ret
shrb
or
pop
loopne
jne
fsubrs
lds
imul
dec
and
inc
in
xor
pop
inc
push
xor
ja
sbb
dec
xchg
pop
push
jg
add
notl
push
out
aad
adc
jnp
jb
test
in
dec
pop
movsb
sub
mov
jl
ja
and
push
cld
ljmp
stos
lds
jns
jg
sbb
cmp
adc
sub
jno
mov
in
jns
fimuls
mov
mov
or
je
adc
lcall
adc
sub
xchg
cltd
adcb
sub
into
imul
pop
pop
pop
loop
xchg
jle
sub
or
stos
cmp
lock
mov
ret
pop
dec
cmc
mov
mov
xor
mov
out
jge
lret
insb
jg
dec
mov
int3
jnp
xchg
push
jne
jbe
cltd
mov
push
in
sub
dec
inc
pop
cmc
mov
push
lock
sbb
fcmovne
addl
inc
ss
sbb
jbe
or
sti
outsl
mov
or
or
xor
cmp
sub
pushf
cmp
jns
clc
cmpsl
inc
sarb
int3
adc
and
icebp
js
gs
pop
imul
pusha
inc
loop
or
imul
mov
aad
fs
stos
es
pop
push
pop
enter
fildll
aaa
fstpt
push
loopne
add
sbb
cmp
std
in
loop
addb
xor
cmp
repz
insl
push
xchg
test
iret
cwtl
adc
inc
mov
jne
mov
pop
outsb
lret
sub
xor
xchg
lcall
addr16
faddl
or
cmc
loope
add
cmp
xor
xchg
dec
gs
mov
mov
ds
out
adc
icebp
cmp
cmp
pusha
inc
test
popf
mov
inc
add
insb
sarb
mov
inc
repz
pop
cmp
lahf
ss
xchg
aaa
mov
cs
dec
loopne
jno
push
lret
push
repnz
in
in
push
movsb
sbbb
mov
mov
nop
lret
lock
sub
pop
mov
imull
jecxz
repz
outsb
jnp
sub
ficoml
xor
adc
or
sbb
enter
lea
xor
push
in
fists
jne
js
cmpl
xor
stos
lock
enter
dec
mov
fbstp
addb
jg
inc
lret
xchg
push
fwait
orb
or
pop
test
std
sbb
dec
fmull
pop
mov
popa
lea
lcall
sub
hlt
mov
fisttpl
fwait
push
push
imul
mov
cmp
adc
shrb
sbb
lock
ret
test
push
hlt
daa
movsb
pop
nop
jnp
aaa
mov
xor
push
push
sub
arpl
lea
fildll
pop
out
out
insl
jbe
and
out
push
test
fldl
popa
js
rcll
decl
mov
add
cmp
push
fcmovbe
xchg
push
xchg
mov
leave
mov
adc
movsb
pop
mov
or
out
pop
lods
mov
jno
dec
inc
cltd
flds
mov
jge
stos
mov
cld
mov
nop
pop
lods
cmp
outsl
in
adcl
out
jae
shl
or
mov
push
insb
pop
cwtl
clc
or
addr16
arpl
add
mov
cmp
pop
sub
push
adc
cmc
dec
dec
loop
sub
movsl
rclb
idivb
into
xor
sub
mov
out
sub
orb
es
mov
mov
into
out
jmp
fs
pusha
dec
call
jne
adc
das
testl
lcall
adc
mov
mov
xor
mov
call
pop
pop
out
add
scas
jo
test
sub
xchg
ffreep
pop
mov
push
jp
filds
arpl
int
imul
popa
push
fmuls
in
push
cld
mov
mov
es
jmp
movb
cmpps
push
adc
or
mov
shl
xor
jb
aaa
aas
push
cli
mov
arpl
test
pop
push
lret
jae
loopne
rcr
sub
push
dec
dec
rol
repnz
out
pop
in
dec
xchg
jp
adc
js
push
mov
pop
mov
mov
and
inc
fisubl
or
mov
sub
push
pop
sub
lret
xor
dec
dec
sbb
and
aam
hlt
mov
test
or
es
iret
cmc
mov
in
aas
mov
jp
adc
xchg
xor
stos
mov
mov
daa
mov
cmp
push
mov
rcll
cmc
cmp
cld
pop
cmp
mov
adc
insl
ret
pop
adc
or
psubusb
cld
cmpsb
cmp
outsb
dec
mov
leave
mov
dec
in
mov
mov
or
inc
xlat
mov
sbb
mov
in
add
shll
imul
test
rorl
out
nop
fsubr
bnd
ljmp
sahf
xor
sarb
stos
loope
sarb
insl
sarl
mov
in
push
lods
xchg
sbb
stc
aad
or
js
mov
out
adc
popf
into
xor
mov
push
in
frstor
mull
arpl
addr16
leave
mov
fdivr
mov
adc
leave
push
leave
sbb
mov
sbb
xchg
lods
mov
enter
insl
jns
into
lods
std
lods
jle
aam
mov
int
ret
sar
sbb
pop
stos
push
aas
aam
sub
inc
dec
inc
arpl
lods
pop
mov
arpl
add
dec
arpl
stos
enter
xchg
pop
in
enter
add
insb
sbb
or
cwtl
mov
lret
mov
jle
pop
daa
out
sbb
push
add
test
adc
ret
sbb
ss
insl
xchg
addr16
mov
jmp
inc
dec
inc
stos
push
lds
das
data16
repz
cmc
mov
adc
inc
sub
aas
cmp
xchg
xchg
add
jns
stc
nop
adc
sahf
sbb
cltd
mov
rclb
loopne,pt
in
cwtl
cmp
in
jl
or
lods
in
push
push
stos
mov
dec
out
push
int3
scas
nop
daa
jo
fisubrs
aaa
and
jnp
int
pop
jmp
push
push
cli
sbb
mov
adc
xor
addb
fwait
dec
stos
xchg
mov
mov
sbb
push
lds
sarl
inc
lcall
mov
add
cmc
xchg
pop
mov
dec
xchg
scas
mov
inc
cmp
push
test
or
addr16
int3
movlps
pop
push
lret
loop
or
and
cmc
cmc
test
mov
ja
icebp
fidivrs
fiadds
leave
xchg
ja
fildll
sbbb
cltd
push
int3
loop
mov
xor
fisttps
mov
das
test
test
mov
addl
hlt
outsb
jle
sub
nop
jnp
ret
push
out
adcb
xor
inc
sub
cltd
leave
testb
mov
sbbl
mov
pop
pop
sbb
dec
lea
ds
adc
jecxz
stos
mov
mov
jne
or
mov
xchg
ret
testb
into
gs
push
and
in
xchg
jb
dec
movsb
mov
push
adc
rol
popa
push
add
jne
pop
adc
add
pop
adc
jecxz
sbb
pop
add
and
sub
je
sub
dec
pop
push
sbbb
rcl
scas
sub
mov
rclb
mov
xchg
shl
xchg
cmp
dec
hlt
mov
cmp
push
cmp
xor
lods
inc
jo
pop
icebp
jmp
push
and
inc
mov
enter
call
or
or
push
popa
subb
lock
or
mov
add
jp
cltd
xor
fsubr
rorb
lock
pop
test
inc
jecxz
jne
mov
push
adc
inc
lret
jecxz
jmp
test
icebp
nop
test
mov
mov
repz
xor
mov
lea
ss
and
push
sub
popf
adc
and
sti
xchg
mov
or
xchg
sbb
mov
insl
push
adc
or
jge
imul
xor
jnp
adc
mov
pop
jecxz
xor
call
aad
inc
push
icebp
mov
movsl
add
gs
pop
mov
mov
sbb
daa
enter
xchg
mov
repz
in
mov
jp
mov
adc
out
mov
pop
xchg
jge
mov
sbb
mov
or
sbb
mov
cltd
xor
dec
xchg
mov
aas
subl
popa
aad
push
adc
push
fnstcw
mov
popf
add
sti
test
xor
jle
mov
adc
dec
xchg
lods
xor
pop
in
cmp
cwtl
mov
inc
imul
fstl
add
or
push
mov
and
sub
mov
dec
adc
idivb
mov
test
fidivl
inc
cmp
cmp
sahf
in
xchg
dec
mov
leave
into
pop
jl
arpl
mov
and
into
mov
push
ss
and
out
adc
call
pop
pop
mov
jnp
push
mov
cmovbe
shlb
movsb
jo
mov
mov
mov
xchg
pop
in
cli
add
jmp
xchg
cmp
pop
sahf
or
push
push
push
test
int3
pop
dec
mov
loope
iret
and
fistl
lea
sub
pop
lock
sub
test
mov
inc
inc
dec
call
ja
lahf
push
mov
leave
push
jge
push
lcall
jne
shr
pop
dec
mov
adc
neg
cld
cmpsb
adc
ja
sti
pop
hlt
pop
cld
xchg
in
rclb
sar
sbb
outsb
push
pop
and
je
pop
insl
cmc
movsb
pop
add
mov
cltd
xor
add
in
mov
dec
mov
push
fmul
or
cltd
pop
sub
push
cmpsl
cmp
sahf
ss
lds
movsb
imul
movsb
ds
xchg
sbb
stos
stos
or
xlat
sbb
scas
xchg
pop
mov
ljmp
mov
ret
lds
imul
or
movl
popf
push
std
aas
lret
popf
pop
pushf
insl
lret
mov
in
out
mov
icebp
and
mov
add
stos
aas
jecxz
ds
and
add
mov
ljmp
fiaddl
add
aaa
decl
ljmp
pop
leave
add
mov
xchg
or
cld
mov
lret
in
std
test
cmp
jp
jp
gs
and
popf
push
ja
ret
shrb
push
dec
and
ljmp
aaa
nop
daa
imul
into
shrb
jecxz
jne
mov
fisubrl
nop
and
mov
and
inc
imul
repz
jae
mov
jp
scas
mov
loopne
mov
imul
lret
repz
aam
ret
xchg
inc
bound
stc
mov
add
lods
ret
jno
jecxz
xchg
in
sahf
push
sbb
jnp
lret
jne
dec
aaa
into
cmp
sbb
inc
shlb
into
fisubs
movsl
jecxz
mov
or
cmp
push
xor
leave
int
test
icebp
push
mov
mov
addb
sub
inc
adc
xorl
jnp
sbb
push
sbb
sub
test
repz
xor
xchg
dec
shlb
pop
mov
push
cmp
lcall
in
adc
add
jg
xchg
push
sbb
mov
and
jl
xchg
add
xchg
test
fwait
jge
mov
lods
cld
and
pop
lods
addb
mov
aaa
ret
arpl
std
stos
or
movsl
inc
test
mov
inc
fmul
outsl
pop
dec
outsl
aas
fwait
inc
pop
adc
decl
and
push
mov
jae
lock
aaa
push
js
or
fsubrp
scas
sbb
add
ss
lods
cltd
inc
js
jmp
dec
int
push
jae
movsb
inc
gs
or
adc
lock
and
push
imul
sbb
push
or
mov
sub
popa
mov
movsb
bnd
fisubrl
aad
mov
std
fcompl
leave
mov
scas
and
cld
test
pop
lods
and
cmp
ret
xor
sbb
cmp
leave
shll
rolb
sub
sarb
sub
test
push
daa
adc
pop
cmc
das
add
add
cmpsl
xor
mov
out
lahf
nop
sub
fisubs
push
lods
mov
aam
pop
cmc
test
test
mov
popf
pop
adc
fadds
addr16
test
or
dec
push
and
sbb
jp
movsb
pop
adc
addr16
testl
test
in
cld
cmpsl
fldenv
div
mov
pusha
movsb
sub
loopne
ret
mov
in
and
jae
std
push
out
pop
outsb
pop
lds
fstpl
pop
jp
sub
mov
add
push
test
jl
aas
ret
ret
mov
adc
xor
ja,pn
cmpsl
mov
inc
jno
notl
test
dec
mov
rolb
jecxz
ljmp
sbb
lret
push
xchg
stos
inc
cmp
inc
lock
dec
xchg
data16
pop
movsl
cmc
sbb
mov
lods
out
es
or
arpl
inc
and
movsl
shl
xchg
xchg
lock
mov
adc
push
inc
push
popf
dec
mov
insb
push
inc
jb
shr
bound
sbb
dec
dec
xor
out
aaa
ficoml
jge
sub
cmp
les
xchg
adc
iret
ficompl
mov
pop
testb
cmpsb
roll
rcll
je
and
push
mov
sbbb
xchg
add
push
in
inc
push
fadds
in
ret
in
sar
mov
jnp
xchg
ljmp
out
fbld
fucom
ljmp
and
push
jnp
dec
std
or
test
pop
and
mov
mov
cmp
mov
lahf
stos
pop
push
mov
adc
rcr
add
dec
dec
out
mov
lds
js,pn
xor
in
add
movsb
stos
jmp
adc
repz
pop
push
repz
cmp
push
dec
cmc
dec
dec
push
lret
in
out
outsb
rcll
insb
js
fnsave
mov
lret
jp
stos
insb
add
arpl
test
cltd
sbbl
push
or
scas
cmc
sbb
ds
dec
jge
fwait
mov
lcall
imul
sub
mov
insl
and
loopne
lcall
mov
fmulp
ljmp
jmp
in
pop
mov
adc
add
lods
aam
pushf
push
ret
fidivl
int3
push
sti
movsl
clc
mov
push
inc
subl
push
popf
inc
arpl
jo
nop
aaa
xchg
sub
repnz
mov
bndstx
inc
pop
cmp
bound
into
sbb
ficomps
and
repz
stos
shlb
sbb
pushf
aam
dec
imul
loopne
xchg
push
imul
test
or
push
stc
jns
mov
push
sarl
leave
mov
fdivrl
mov
iret
pop
xlat
je
insl
push
clc
mov
movsb
xchg
jb
loopne
test
mov
imul
dec
inc
icebp
mov
jmp
shld
in
inc
mov
mov
aad
pop
into
enter
mov
or
in
sub
cli
dec
lods
rorl
adc
push
mov
rolb
in
or
jle
pop
push
xlat
sahf
lods
mov
pop
loopne
mov
pushl
repnz
inc
bound
mov
lcall
and
xor
mov
lea
add
outsb
outsl
push
mov
dec
fidivrl
sbb
and
xchg
lea
sub
sarb
sub
leave
in
mov
sbb
push
mov
mov
xchg
add
jle
mov
jp
sarb
mov
xchg
insb
jnp
jne
leave
test
inc
popf
sahf
into
jl
ja
icebp
or
pop
out
sti
push
xorb
orb
addr16
lahf
cwtl
hlt
popf
fs
mov
mov
outsb
cmpb
cmp
notl
sbb
xor
xchg
sbb
arpl
mov
dec
lods
aaa
pushf
cmc
iret
pop
add
push
repz
cwtl
sub
cltd
mov
sbb
rol
loopne
mov
scas
nop
mov
or
dec
mov
push
or
pop
unpckhps
mov
ljmp
int3
cli
inc
xor
xor
or
dec
adc
fdivs
jl
push
push
repz
lods
repz
xchg
sbb
cmpsb
std
bnd
sbb
mov
insb
and
xchg
push
and
mov
ficompl
xor
mov
xchg
inc
dec
dec
loop
nop
push
sbb
popa
in
test
mov
out
push
das
cmc
dec
les
cmpsb
pop
mov
pop
add
push
mov
adc
mov
shl
scas
pop
dec
jle
inc
fmul
jno
cmpsl
xor
sbb
cvtpi2ps
aam
addl
pop
lret
pop
pushf
add
xor
xchg
cmpsb
std
inc
dec
push
jp
jbe
and
imul
dec
cmp
add
insl
in
mov
fnsave
mov
jecxz
mov
inc
loop
jo
xchg
push
and
sti
std
sub
add
mov
fwait
enter
aaa
cmpsl
sub
xchg
imul
in
sub
aam
mov
bnd
and
pop
sub
cmp
xchg
leave
faddl
mov
fnstenv
and
xchg
mov
movsb
lret
pop
mov
in
pushl
ffreep
loop
jo
arpl
push
in
test
mov
pusha
inc
sub
dec
stos
popa
out
test
mov
mov
loope
int3
sub
lods
pop
cmp
orb
xchg
dec
test
sbb
enter
lea
clc
mov
fldcw
ss
mov
dec
xor
ja
test
lret
mov
and
imul
mov
mov
mov
repnz
push
pop
negl
adc
pop
sbb
sub
jge
xor
cmp
pop
push
sub
dec
cmpsl
inc
fst
add
xlat
adc
adc
test
xchg
ja
mov
cmp
add
les
and
loop
repnz
add
xor
jp
movsl
xchg
jle
cmp
cmp
test
xor
shrl
aam
lcall
inc
clc
aam
scas
repz
outsl
popa
aad
rorl
fmull
mov
sahf
test
push
cmp
push
scas
dec
in
pop
mov
ja
and
pop
push
and
add
adc
or
mov
xor
adc
and
or
aad
jb
cmp
pushf
adc
sbb
shl
int3
jg
jns
xchg
scas
mov
es
adc
pop
inc
pop
fisttpll
arpl
cmp
cmp
adc
imul
mov
std
mov
push
add
mov
lock
cmpsb
lods
mov
ja
movsl
shrl
add
fldenv
ret
pusha
hlt
lods
icebp
cmpsb
addr16
cmp
jg
cmp
scas
rol
int
andl
sti
lds
stc
rcr
sub
test
mov
int
adc
stc
xchg
es
lods
nop
jg
sbb
cmc
fdivs
lret
adc
fildll
add
jge
loope
daa
or
xor
icebp
or
push
sub
scas
mov
sbb
stos
or
rcrl
sbb
shll
cmp
movd
jle
adc
rcrb
mov
cmpsb
nop
xchg
std
push
adc
inc
add
or
lret
data16
cld
pop
dec
in
lods
leave
mull
dec
aam
add
pop
jne
ljmp
bswap
fistl
movsb
xchg
outsl
daa
iret
or
pop
dec
mov
lret
lret
dec
and
icebp
ss
mov
push
and
sbb
std
jg
fs
xchg
pop
fwait
dec
or
adcb
jo
pop
mulb
fnsave
out
stc
pop
adc
dec
ja
dec
xor
fcoms
xchg
xor
negb
and
mov
push
jo
sub
popa
repz
mov
sub
cld
cmpsl
mov
mov
sub
mov
or
sub
sub
and
push
dec
lods
xchg
sti
idivb
lret
icebp
adc
fwait
iret
and
in
addr16
lahf
daa
inc
pusha
jbe
pop
test
test
insl
insb
testb
xchg
adc
iret
std
dec
aas
dec
adcb
xor
cmp
sub
add
or
pop
add
mov
sub
or
rorb
rclb
jecxz
push
cmp
jecxz
push
test
mov
incb
hlt
ss
jecxz
mov
jbe
mov
fistpl
pop
lea
jne
sarl
fbstp
std
pushf
xchg
sahf
lods
cltd
mov
inc
stos
dec
add
arpl
imul
xorl
jmp
cmpsb
pop
mov
lds
sbb
inc
cli
mov
cmpsb
adc
cmc
prefetch
or
dec
lret
add
into
popf
out
push
popf
pop
xor
inc
out
jns
or
std
hlt
jle
stos
or
pop
lret
fldl
idivb
push
gs
iret
loope
dec
add
lods
fldenv
clc
clc
fisttpll
icebp
push
add
jmp
xor
pop
aaa
xchg
aas
mov
ja
dec
pop
mov
mov
jne
dec
push
push
sub
shlb
fstpl
out
notl
push
shlb
jmp
push
dec
rol
jo
mov
pusha
pop
sub
aad
out
jmp
pop
pop
mov
inc
aad
sbb
frstor
movsl
pop
popf
mov
movd
arpl
negb
jp
push
lds
lods
out
pusha
test
mov
movsb
std
dec
pop
in
data16
ds
mov
mov
loop
jle
in
mov
xchg
add
xchg
ljmp
cli
xlat
lods
inc
xchg
and
sti
fistl
pop
ds
filds
scas
movsb
inc
mov
aam
mov
dec
popf
sub
jo
orl
pop
mov
or
fadds
cld
test
mov
pop
mov
sti
dec
sahf
aam
insl
dec
cmp
pushfw
in
xchg
push
or
xor
mov
dec
jo
stc
and
mov
jnp
adc
scas
dec
xor
sbb
fcmovu
mov
mov
imul
dec
jle
mov
in
and
movw
inc
lock
or
in
cmp
insl
or
xchg
out
xor
mov
mov
and
xchg
in
subb
dec
out
inc
mov
ja
mov
pusha
flds
pop
rolb
sbb
dec
cmp
outsl
pop
or
rcl
loop
push
mov
jnp
inc
shrl
push
call
or
std
int
and
inc
in
std
js
outsb
insb
inc
mov
movsl
mov
les
notl
out
cli
and
icebp
mov
lret
sti
mov
xor
imul
xor
fidivrl
loop
test
mov
mov
test
stc
sbb
in
push
in
xor
push
imul
call
out
stos
pop
ss
loop
aam
pushl
or
add
xlat
invd
addb
sbb
xchg
mov
lahf
cmpsl
sub
ja
js
xor
movsb
std
push
lea
sarl
pusha
push
jmp
xchg
test
xchg
insb
dec
outsl
stos
lea
lea
cmpsb
sub
daa
and
cmpsb
cmp
pop
insl
jge
or
dec
pusha
into
shl
dec
dec
pop
cmc
fidivs
int
push
push
inc
sub
inc
in
pop
outsl
dec
pop
push
push
push
add
or
mov
outsl
in
orb
daa
shlb
loop
into
subl
ja
aaa
sbb
cltd
cmp
cwtl
sub
xor
aas
push
and
fidivrl
or
scas
mov
cwtl
sti
pop
mov
mov
shrl
leave
push
mov
test
ret
cmpl
imul
and
pop
add
xor
sbbl
xlat
inc
test
adc
aad
lcall
sub
push
pop
idivb
pop
shrl
cmp
orb
or
and
mov
jns
dec
in
scas
repnz
sbb
mov
adcl
mov
sub
int3
inc
das
and
push
rorl
and
frstor
btr
dec
mov
fmull
das
xchg
xchg
arpl
hlt
or
stos
rclb
in
sbb
jae
pop
lcall
add
mov
push
dec
xchg
and
xchg
xchg
jmp
mov
clc
jnp
adc
fsubs
repnz
clc
je
stos
inc
ret
notb
popa
mov
leave
and
shrb
mov
mov
lds
mov
mov
in
or
and
shl
fsubs
cmc
hlt
les
pop
jnp
add
and
push
sarl
je
pop
loope
sub
dec
pop
icebp
jp
or
test
cs
xchg
aas
sbb
and
lahf
aad
mov
push
mov
xchg
and
jno
sbb
shlb
arpl
mov
dec
mov
or
dec
adc
mov
xchg
fmull
or
jb
rolb
dec
test
js
test
xlat
rorb
mov
shll
xchg
adc
sub
int
mov
or
js
xchg
lcall
rol
add
sahf
hlt
jg
ret
xchg
addb
fldt
loopne
pusha
sub
jns
inc
and
das
jns
loopne
xor
sti
cmpl
test
adcb
sbb
sbb
mov
gs
xor
cmpsl
out
fldcw
mov
outsl
orb
jge
rcrl
aam
and
cmp
inc
pop
dec
jne
fidivl
nop
push
mov
out
jns
dec
stc
mov
dec
xlat
sbb
jb
clc
dec
cmp
ds
repnz
andl
dec
cmp
fbld
cli
fcompl
xor
ss
lods
into
and
cli
jns
test
adc
mov
xchg
adc
repz
popa
jns
lahf
jp
movsl
dec
and
jle
mov
and
inc
scas
gs
es
decb
arpl
mov
pop
cmp
shrb
lret
adc
jle
jge,pn
shll
rol
pop
jns
aaa
es
jae
out
dec
and
aas
adc
insb
in
outsl
or
jae
pop
movsb
xor
jge
adc
push
jbe
or
ror
movsl
push
pusha
add
sbb
mov
imul
cmp
loope
negl
decb
loopne
xor
cld
out
xor
adc
fistps
inc
outsl
dec
jge
pushl
test
mov
dec
xor
sahf
and
jg
adc
imulb
pusha
repz
fwait
les
xor
arpl
call
push
add
in
push
mov
and
xchg
aas
outsb
loop
xor
ficomps
jmp
sahf
fmull
adc
mov
jo
scas
inc
movsl
xchg
xchg
add
in
pusha
cmp
in
adcl
divb
cwtl
insl
add
adc
mov
mov
pusha
stos
xchg
and
stos
test
orl
notb
popa
mov
sub
es
mov
push
xor
xchg
iret
test
ja
in
inc
scas
aam
mov
jo
lods
pop
fistps
lea
nop
pop
xor
ds
mov
cmpsl
dec
sbbl
push
das
arpl
shll
cld
sub
and
or
lcall
loope
jns
hlt
adc
int3
ficoms
jecxz
cmp
lcall
mov
pop
mov
es
xchg
scas
mov
repnz
push
or
aas
scas
pop
in
push
dec
mov
add
call
fadds
pop
xor
movsb
enter
iret
mov
stos
and
cmc
repnz
push
in
mov
add
sbb
lea
adc
stc
popf
sub
jmp
movsl
add
pop
push
out
pusha
xor
out
test
xchg
testl
xor
hlt
mov
xchg
sub
pop
dec
call
mov
cltd
mov
jb
add
add
scas
adcb
ds
jecxz
and
lea
aam
outsl
cmp
iret
xor
outsl
pop
sub
push
outsl
pop
xor
mov
scas
iret
ja
jle
jmp
cmp
cmp
lcall
hlt
fsubr
sub
pop
imul
mov
ja
daa
out
fbld
and
arpl
stc
je
jnp
fwait
adc
inc
les
jp
out
mov
adc
test
loop
enter
fsub
aas
lds
stos
sbb
inc
test
adc
divb
lods
cmpsb
jl
and
mov
adc
out
adc
pop
adc
sbb
leave
cmp
or
test
jo
push
stos
arpl
mov
insb
jae
cmp
stos
cld
sbb
xchg
jg
pushf
mov
mov
aaa
jp
lods
out
mov
push
push
lahf
cs
mov
jne
shrb
pop
test
mov
jp
add
mov
mov
adc
imul
bnd
jo
cs
mov
xlat
out
int3
xor
inc
fstps
cwtl
stos
clc
jo
mull
adc
inc
pop
movsb
mov
lock
fs
cld
mov
leave
popa
ljmp
jl
pop
scas
mov
nop
jae
jecxz
lock
cmp
sarl
roll
adc
xlat
push
or
aad
jge
xlat
ss
cvtpi2ps
inc
pop
xchg
inc
pop
daa
test
xlat
push
je
mov
sbb
xchg
mov
mov
out
or
es
movsl
outsb
sub
xor
mov
out
inc
jmp
xor
xchg
in
fidivs
test
lock
lret
lret
lds
sub
and
add
mov
addr16
cli
test
subb
cmp
loop
fdivrl
cs
cli
pop
lahf
imul
data16
popa
int3
sbb
notb
mov
sbb
mov
adc
mov
scas
xorl
cmp
adc
push
daa
pop
push
push
cltd
inc
cwtl
decb
mov
loop
addr16
sbb
ffree
jns
mov
in
stos
pop
rorl
xor
movsb
dec
cli
pop
mov
imul
or
in
stos
ds
sar
fdivrl
std
mov
jle
and
mov
jge
out
test
lds
mov
in
jnp
stos
stos
pushf
pop
out
dec
xor
lds
rol
adc
daa
or
stos
mov
sub
aas
dec
popf
sub
cmp
rclb
ss
scas
out
or
jno
ret
test
mov
xchg
push
sub
mov
add
push
pop
adc
sub
dec
addr16
pushf
fistpll
icebp
jmp
fsts
lds
scas
inc
loop
push
inc
xlat
mov
pusha
pop
and
notb
notl
test
rcl
aas
jbe
icebp
cmpsl
dec
aad
xchg
xor
xor
ds
sbb
adc
cmp
add
lock
pushf
and
push
xor
stos
inc
and
jbe
leave
pop
js
aam
push
cltd
out
fnsave
aad
inc
pop
repnz
fadds
and
add
aaa
xchg
fucomip
mov
sub
sar
sar
imul
movsb
or
test
mov
cmp
xchg
sub
xchg
bound
or
loope
mov
sbb
mov
and
ss
xchg
cltd
and
shr
push
sub
rol
enter
gs
pop
adc
ljmp
mov
cld
test
ficompl
jnp
pop
inc
cmpb
ss
hlt
addr16
and
xchg
fs
popf
imul
dec
push
jg
and
pop
adc
jl
xchg
sbb
negl
js
lea
add
test
cltd
add
or
add
jmp
enter
add
int
in
push
sub
xchg
jne
daa
test
ja
jns
mov
add
adc
mov
shl
jnp
xor
sub
loop
aam
xor
lcall
cmp
dec
adc
movsb
imul
fwait
mov
out
lret
mov
cwtl
mov
in
std
jo
jmp
mov
adc
xchg
mov
jecxz
sub
ror
sti
sbb
mov
jmp
add
mov
mov
mov
leave
mov
lret
sub
popa
pop
arpl
sbb
scas
or
push
mov
jecxz
sbb
sbb
movsl
mov
loopne
adc
cltd
arpl
movsb
xchg
pop
mov
repnz
les
dec
dec
or
sbb
sub
pop
mov
sbb
adc
mov
fbld
sub
inc
sub
test
fsts
dec
fistl
stc
xlat
mov
in
mov
cmp
and
or
aad
es
xchg
jge
mov
adc
adc
xchg
lcall
add
mov
out
cltd
xor
mov
inc
aam
adc
out
xor
fwait
mov
xchg
xchg
lcall
xor
inc
fwait
or
inc
pop
imul
pusha
inc
add
push
pop
leave
stos
inc
leave
sti
jecxz
stc
ljmp
fcomp
divb
sahf
movsb
dec
pop
popa
cmpsl
fwait
sti
sub
xchg
cltd
rorl
and
jbe
pop
jecxz
xchg
in
lahf
insb
fisttps
out
bound
adc
std
mov
mov
pop
xor
dec
test
and
gs
daa
xor
fisubl
shrb
pop
bound
xor
fldcw
pop
mov
and
lods
cmp
push
dec
or
mov
lods
sti
adc
xlat
lcall
popa
in
loop
shlb
mov
bound
and
out
push
fcompl
cmp
lods
mov
xchg
je
ljmp
xchg
jg
out
cmp
mov
les
push
les
dec
hlt
jg
es
lods
fcoml
dec
dec
bswap
pusha
fwait
sbb
jecxz
lods
test
aad
std
icebp
add
jge
mov
lcall
ficoms
jnp
cmp
push
xor
sbb
leave
mov
push
inc
adc
lds
push
jge
mov
iret
lock
mov
in
popf
dec
clc
int3
dec
cmp
repnz
out
xor
lahf
repnz
mov
xor
insb
sub
pop
outsb
mov
push
or
jge
mov
rorl
insb
jge
push
les
jns
rcr
inc
repz
mov
stos
cltd
or
mov
xor
jmp
cld
dec
bound
ss
sub
nop
xor
js
cmp
ljmp
inc
lock
mov
mov
mov
fsubrs
lock
xor
jns
mov
sbb
jle
mov
sbb
aad
mov
xor
mov
ret
jge
leave
xlat
dec
mov
loop
or
in
fbld
es
fistps
imul
fs
xchg
call
xchg
xor
ds
jno
out
popa
repnz
jmp
inc
fildll
xchg
call
cwtl
inc
mov
push
or
loope
es
cmpsl
add
or
loopne
or
inc
mov
mov
push
imul
mov
xchg
add
sbb
ret
repz
movsl
stos
or
mov
clc
push
mov
movsb
pop
ss
subl
adc
jl
cmp
add
cmc
pop
scas
scas
xlat
clc
push
jno
adc
mov
cmpsb
lret
fdiv
ss
push
push
jo
loopne
cltd
test
mov
jo
dec
out
out
adc
xchg
inc
pushf
cmp
subl
cmp
js
pop
out
and
outsb
sarl
xor
sbb
dec
dec
jle
nop
mov
inc
scas
push
test
cmp
fdivrs
sahf
push
test
xlat
fwait
and
jge
hlt
fsts
xor
out
mov
outsl
sarb
ljmp
sbb
les
cltd
movzbl
punpckhdq
lods
xor
addb
inc
xor
leave
mov
imull
xchg
push
rorb
cltd
xchg
arpl
into
lea
or
pop
xor
arpl
cli
xchg
jmp
xor
ja
into
es
sbb
sbbl
push
cmp
cmpsb
rcrb
fsubrp
xor
sub
ds
sbb
fistps
pop
jae
dec
pop
adc
rclb
jg
jp
aad
testb
mov
cld
popa
mov
shl
inc
gs
rorl
adc
pusha
xchg
das
pop
dec
push
in
xchg
bound
sbb
xchg
xchg
outsb
mov
jno
cmp
dec
ds
movsb
repnz
push
popf
sub
rcr
cld
xchg
xchg
jne
pop
test
sbb
mov
mov
inc
sub
xchg
lds
xlat
out
clc
mov
test
mov
bswap
outsb
sub
jnp
sbb
xor
cli
cmp
arpl
loopne
adc
je
sbb
xchg
vxorpd
mov
loop
test
nop
ret
push
andb
imul
sahf
mov
cmp
mov
cmp
cmp
les
ss
xor
cmp
add
mov
test
add
out
mov
mov
shrb
les
pushf
test
xor
ret
mov
xor
les
inc
xchg
outsl
push
mov
mov
insl
or
loope
mov
mov
test
mov
xlat
and
test
scas
fbstp
mov
ja
sti
inc
sub
int3
sub
jmp
inc
in
xor
hlt
in
pop
jne
lds
imull
fcomps
into
in
out
cltd
mov
nop
mov
xor
mov
cmp
jmp
gs
mov
jecxz
fwait
loopne
int
cli
movsl
lahf
push
scas
mov
popf
fldt
cmp
insl
repz
fadds
cwtl
das
mov
sub
mov
pop
test
xchg
mov
sbb
pushf
scas
in
or
xchg
mov
sub
dec
sarb
movsb
pop
add
out
add
dec
test
or
adc
cli
fstpt
add
jge
pusha
cmpsl
xchg
mov
mov
mov
jmp
jp
test
stc
fmuls
sbb
and
xchg
push
repz
scas
hlt
cwtl
pop
insl
mov
or
mov
or
add
mov
mov
imul
call
or
add
inc
enter
lret
xlat
cltd
enter
in
data16
or
js
mov
out
leave
stos
xlat
cmc
mov
and
imul
cmp
add
test
xchg
pusha
sbb
cmp
pop
dec
pop
jle
jns
fs
movsl
push
das
lret
sarl
xchg
push
jmp
sbb
lods
rcrb
adc
fmuls
out
jp
out
nop
sbb
mov
lahf
notl
jl
push
scas
loop
dec
inc
fs
jp
pop
mov
adc
adc
lret
push
into
cli
sbb
aas
mov
in
or
stos
push
mov
inc
pop
sub
scas
sub
popa
lcall
cwtl
test
sub
add
nop
ss
mov
iret
dec
adc
jl
mov
cwtl
stos
adc
jae
out
lret
xor
pop
adc
roll
aam
xchg
test
les
pop
outsb
push
mov
and
mov
or
cwtl
xor
push
mov
decb
daa
and
mov
aad
jl
inc
orl
outsb
sub
iret
pop
daa
jbe
cmp
mov
sub
adc
jno
addl
lods
sbbl
pop
fsubrs
adc
insb
imul
and
es
or
sub
aam
mov
mov
test
outsb
add
scas
test
movsl
add
mov
jns
jb
xlat
dec
pop
mov
enter
stos
cmp
subb
dec
pop
enter
mov
xor
call
or
and
pop
or
cmp
lods
out
xchg
pop
or
lods
xchg
insl
and
adc
or
mov
sub
push
pushl
fsts
xchg
sub
scas
lret
xor
lret
in
mov
imul
aas
add
mov
ss
push
mov
loopne
inc
and
inc
mov
jmp
xor
or
pop
sbb
xor
shrl
mov
dec
subb
sub
mov
xchg
adc
je
and
cltd
mov
int
push
mov
outsl
daa
ret
imul
out
dec
push
jb
movsl
rol
mov
outsb
sub
xchg
push
dec
shl
ss
push
sbb
jmp
lods
jbe
es
jae
iret
aaa
and
push
decl
sbb
pop
sbb
cmp
jecxz
xchg
inc
into
jne
outsb
cmpsb
icebp
pop
or
jg
inc
inc
dec
test
stc
fwait
aaa
bound
xchg
pusha
ss
mov
jp
mov
push
jmp
fisubl
mov
ds
cld
fwait
jl
loopne
xchg
lods
cli
pop
ret
xor
insb
gs
sahf
lret
mov
lcall
in
stos
xchg
or
mov
fmul
test
push
jp
js
roll
jle
fdivl
xchg
lcall
or
and
xchg
fadds
add
xor
ss
aas
icebp
aaa
testl
testb
pop
sbb
push
lea
inc
lods
loope
outsl
xor
lods
xorb
and
pop
ret
mov
les
in
inc
or
sahf
jg
dec
stos
clc
and
loop
dec
push
jmp
fwait
mov
mov
dec
dec
ds
adc
sbb
pushf
mov
push
xor
es
mov
pushf
jg
pop
movsb
and
pop
dec
jb
push
sub
cmp
xor
int
cmp
jb
xchg
jnp
mov
inc
ret
pushf
test
dec
mov
leave
and
inc
call
or
pop
fsubrl
bound
in
aad
mov
nop
jnp
jo
pop
nop
jg
lret
cmp
cmc
pop
ds
lea
pop
xor
adc
push
add
mov
mov
int3
sbb
sbb
jl
mov
or
adc
mov
add
xchg
pop
xchg
ret
jle
rorb
sub
clc
insl
imul
push
dec
fists
fdivr
and
and
sbb
mov
imul
popa
dec
icebp
cld
lahf
sub
stos
stos
rolb
mov
clc
es
and
pushf
imul
stc
mov
outsl
ret
dec
jb
jge
mov
addr16
ficoms
shl
aad
xor
push
xlat
int3
inc
or
jno
xor
aad
shl
repnz
xor
shll
add
mov
add
idiv
xor
addr16
sub
sub
and
nop
mov
lcall
test
xchg
loope
ret
aad
mov
xchg
jo
loopne
add
adc
data16
cltd
mov
mov
jge
dec
mov
jp
shrl
mov
jbe
dec
mov
mov
jl
xor
xchg
ja
rclb
xchg
stos
xchg
stc
jl
or
stc
xchg
push
mov
call
and
cld
verw
and
push
adc
inc
inc
aam
clc
jmp
jg
cmp
clc
sub
xor
int
mov
sbb
cwtl
cmpl
fwait
lods
aam
cs
pushfw
pop
mov
xchg
dec
dec
sahf
fnstenv
jnp
insb
cmpsb
and
mov
dec
stos
adc
mov
mov
mov
mov
movsb
mov
in
push
push
test
pop
aaa
lahf
xchg
arpl
add
and
movsl
push
cmp
dec
xorl
ficomps
jg
xlat
pop
movsl
jl
adc
fisubl
jl
mov
lcall
add
sbb
cmc
insl
out
jmp
fisttpll
adc
enter
movsb
cs
jnp
or
js
jp
enter
xchg
dec
popf
sbb
imul
movsb
in
adc
test
or
mov
mov
iret
jae
cmc
mov
sbb
movl
or
insb
mov
stos
mov
btc
xchg
sub
rcr
scas
jo
mov
loope
sub
inc
cmp
lods
movsl
mov
adc
movsb
in
xchg
xchg
aas
mov
aas
je
mov
fistl
outsb
mov
push
lds
sub
notl
adc
mov
inc
mov
lods
xchg
hlt
cli
ds
out
test
int
and
mov
insl
sbb
jg
xor
sti
mov
push
pop
mov
flds
das
enter
lods
pop
repz
and
sti
mov
sub
imul
jne
mov
add
loop
inc
in
rcl
imul
stc
sbb
cs
sbbl
inc
mov
aaa
push
imul
push
adc
mov
out
js
push
sub
test
xor
jl
and
mov
lretw
imul
div
mov
and
or
in
inc
xchg
std
jp
das
mov
leave
shrb
outsb
cmp
xor
pop
inc
bound
aad
je
test
pusha
push
addr16
movsl
cmp
aam
je
pop
ret
push
arpl
cmpsb
cmp
xor
inc
pop
push
das
xor
ja
fsubl
push
out
adcl
mov
cltd
fstps
outsb
sbbl
push
cwtl
pop
test
mov
adc
push
lds
in
jb
ds
fbstp
stc
adc
or
push
mov
loopne
je
sbb
fadd
sar
es
arpl
xor
repz
in
popa
icebp
lret
dec
call
test
leave
cmpsl
ds
xchg
inc
pusha
repz
pop
clc
mov
aaa
mov
push
notb
pusha
or
mov
idivb
sub
jns
sbb
or
sbb
jno
scas
push
xor
notl
push
sahf
mov
cmp
ret
and
fcomip
addr16
and
out
test
pushf
cmp
cmp
iret
pop
loop
adc
inc
jb
sub
into
jbe
dec
pop
xor
lahf
mov
jb
mov
addb
movsl
fcoms
xor
stos
dec
shrl
outsb
push
jae
jae
sbb
add
dec
jecxz
push
cmpsb
fwait
add
dec
int
pop
sub
scas
test
mov
or
in
aam
jp
mov
or
out
roll
jl
into
sahf
sbb
push
popf
insb
test
lret
cs
push
lods
jg
gs
sbb
cwtl
sbb
rclb
adc
js
call
ret
mov
push
pop
adc
mov
adc
sub
mov
jle
push
cwtl
std
push
inc
xor
and
in
or
jne
pop
push
xor
xor
jnp
mov
or
loope
dec
call
aas
sub
sbb
data16
add
push
pop
mov
jnp
xor
mov
divl
or
xor
inc
icebp
sub
cld
shlb
jl
sub
icebp
outsb
push
lods
fsubrl
mov
xchg
ds
cld
mov
jbe
jb
shll
dec
jnp
or
repz
sub
cmpsl
jle
mov
out
out
std
or
ss
std
push
jno
arpl
push
lahf
call
dec
dec
mov
daa
arpl
jle
adc
push
sti
fwait
jp
rcr
adc
jbe
mov
add
scas
out
and
stos
cmc
lahf
fbld
shl
loope
pop
decb
mov
cmp
out
pop
fidivrl
push
pop
out
sbb
mov
xchg
clc
mov
or
enter
sti
outsb
add
movsl
mov
int3
mov
test
cltd
mov
and
in
addl
xchg
insl
and
push
or
push
jns
in
xchg
pop
xorb
or
addb
sub
pop
cmp
pop
mov
sbb
scas
in
and
xchg
loopne
imul
xor
adc
jle
sub
dec
ret
xchg
or
imul
pushf
mov
outsl
pop
xchg
jnp
push
lods
test
push
mov
add
jp
cwtl
sbb
call
sarl
icebp
jnp
repnz
cmp
mov
test
cmp
mov
mov
mov
aad
push
xchg
imul
xchg
dec
repnz
pop
loopne
imul
mov
repnz
ret
loope
insb
cld
outsl
enter
mov
hlt
mov
cmp
dec
imul
xor
scas
cwtl
adc
ljmp
rolb
jmp
mov
add
notl
jg
xchg
mov
jp
outsl
sbb
xchg
imul
adc
out
insb
or
push
lret
pop
flds
dec
in
cmc
mov
ret
hlt
mov
pop
lock
and
pop
cmp
mov
mov
popa
ljmp
imul
pop
or
rolb
cmp
inc
adc
ret
mov
sub
roll
and
hlt
lea
or
insb
xchg
in
dec
lea
aad
jle
lock
and
mov
ja
jle
adc
sbb
adc
mov
or
mov
aam
clc
or
xchg
or
push
cmpsl
sbb
lea
outsb
cmp
lret
aad
jne
mull
dec
in
cmpsb
push
sub
xlat
pop
aaa
aam
imul
clc
hlt
stos
inc
clc
push
test
sbbl
adc
das
pusha
mov
cwtl
nop
xor
not
insb
mov
orl
jmp
fsts
leave
add
mov
pop
rol
call
or
cmpb
mov
xchg
push
sub
icebp
or
imul
lret
in
xor
add
inc
addr16
and
push
cli
pop
jg
add
push
xor
repnz
movsl
cmp
insb
sbb
or
vpmulhw
jp
dec
outsb
pop
subl
dec
repz
xor
add
mov
cmp
mov
and
pop
rcl
les
in
movsl
mov
insb
jle
jge
add
inc
mov
mov
out
mov
push
loop
repz
mul
rcrl
ret
jbe
or
cmp
mov
test
lret
sbb
push
push
scas
xchg
xor
xchg
stc
js
popa
inc
push
into
dec
sbb
outsb
mov
fcomps
mov
pop
das
cwtl
xchg
in
dec
mov
jl
cmpsl
xchg
push
jmp
sbb
fcoms
out
cltd
xor
leave
cmp
mov
or
fisubs
cmp
pop
inc
fisttpl
shrl
cmp
jbe
ret
rclb
scas
inc
orb
and
out
inc
cmp
mov
jmp
add
iret
data16
xchg
ja
add
or
outsl
add
jge
push
popf
xor
dec
in
cmpsl
mov
jle
and
data16
pop
lods
sbb
test
adc
sti
adc
orb
add
enter
in
push
mov
hlt
mov
lret
sti
inc
cmp
mov
ret
repnz
push
cmp
jge
xchg
xchg
dec
and
mov
lock
fdivs
insb
int3
lcall
lock
xor
data16
scas
and
icebp
pop
cmc
mov
fwait
pop
jg
pop
mov
aaa
cmp
sbb
outsl
negl
jae
pop
lret
xchg
mov
inc
add
pushf
push
inc
dec
jl
call
mov
sahf
jbe
xchg
arpl
jnp
dec
bound
hlt
push
mov
loopne
hlt
dec
xor
fmulp
ret
xor
xor
les
cmc
shll
sub
mov
cmc
sub
imul
and
mov
aas
push
je
adc
test
ficoms
imul
int
pusha
hlt
cmpsb
jge
jbe
add
mov
sbb
or
jl
xchg
add
jge
lret
insb
rolb
push
mov
test
jae
cltd
xchg
mov
and
mov
dec
mov
in
fldl2t
leave
ret
stos
out
sub
and
mov
xchg
mov
xchg
pop
insl
xorb
adc
and
sahf
scas
mov
shrb
rcl
cwtl
fisubl
fbld
testb
adcb
dec
xchg
push
inc
ds
cmp
gs
ret
int
or
dec
cmp
nop
mov
mov
dec
stos
jp
dec
test
fistpl
xlat
or
icebp
movsl
push
aad
in
int3
loope
std
fsubrl
movsb
and
scas
out
mov
cmp
xor
xchg
jmp
mov
mov
fstl
push
pop
das
jp
mov
cmp
push
aam
jbe
dec
cmc
mov
add
push
or
in
les
in
sub
pusha
lods
lods
cmp
fucom
sub
and
pop
push
cmp
push
clc
pop
pop
es
arpl
push
sti
or
mov
ficompl
xchg
jo
mov
sub
sti
adc
add
rcrl
xchg
ficomps
and
loope
cmp
in
shll
pop
mov
dec
iret
data16
adc
pop
jne
mov
out
add
jecxz
jne
aaa
adcb
push
jnp
push
add
push
xor
fwait
and
icebp
je
pop
xor
outsb
push
outsb
xor
mov
ror
xor
leave
js
sub
aas
sub
nop
or
cmpsl
adc
jo
lds
pop
ffree
scas
sbb
leave
movsb
fucomp
fcmovu
jp
rcrb
imul
inc
popa
jno
add
call
mov
rcl
cwtl
jbe
aas
lds
leave
mov
lcall
and
mov
testl
shl
xor
cld
fistps
sub
lcall
jae
out
jbe
xlat
pop
push
les
or
movsb
sarb
ret
pushf
inc
pushf
dec
aaa
xor
adc
fidivl
pop
hlt
fcompl
jge
jbe
push
daa
push
shl
sbb
shrl
mov
stos
fwait
or
leave
pop
test
adc
sub
mov
xchg
lock
out
fbld
xchg
add
push
cmc
mov
ret
popf
outsb
loopne
sub
inc
mov
xor
and
in
pop
xchg
push
popf
mov
mov
xor
roll
inc
arpl
lcall
sbb
adc
cld
add
sbbb
xchg
subl
fcoml
addr16
mov
test
pop
mov
adc
add
or
mov
popf
jb
or
sub
sub
add
dec
sarl
jnp
or
test
shlb
push
cmc
loopw
std
cltd
shll
pop
sub
stc
or
push
mov
and
pop
out
clc
adc
pop
in
add
iret
mov
add
xchg
cmpsb
or
in
outsb
push
sub
jae
mov
push
scas
aad
jb
aad
mov
icebp
jecxz
fisttpll
loop
aad
outsl
leave
push
inc
loop
mov
inc
orb
orb
mov
rcr
sub
insl
cmc
push
gs
lahf
and
and
or
mov
popa
push
nop
sub
dec
mov
lret
mov
push
inc
mov
hlt
das
mov
fcoms
mov
mov
sub
out
xor
sbb
and
mov
ja
and
xchg
add
mov
or
ljmp
and
mov
jge
icebp
rolb
jl
dec
hlt
test
and
pushf
inc
pop
into
pop
ret
fwait
pop
ret
loopne
fldz
dec
jecxz
sti
mov
mov
loope
cmp
scas
or
jmp
mov
mov
inc
push
sub
mov
lock
lds
mov
ret
inc
add
mov
mov
mov
xorl
pop
mov
pop
inc
fstpt
pop
pop
call
mov
jb
push
xchg
movsb
fmuls
nop
popf
aam
or
fdiv
es
cmp
cwtl
adc
mov
sub
pop
out
jae
inc
inc
pop
inc
scas
inc
jns
testl
hlt
enter
lret
pop
xlat
repnz
aam
scas
les
mov
std
adc
mov
cmp
pop
xchg
js
xchg
arpl
cmp
sbb
mov
es
call
mov
in
sub
xchg
pop
rcr
outsb
cmp
inc
fsts
nop
sub
pusha
inc
hlt
mov
mov
cltd
mov
fldcw
cmp
lahf
sbb
mov
insb
mov
add
jle
sbb
mov
cli
cmpsl
pop
push
popl
xchg
push
cld
cmp
ret
sahf
push
add
or
xor
push
jbe
push
sbb
mov
jmp
rclb
push
out
repz
mov
sbb
pop
xchg
test
mov
mov
pop
or
xor
mov
sbb
in
fucomp
cmc
mov
fwait
xor
lods
push
fbld
mov
adc
ljmp
add
das
lods
and
cmpsb
jns
sub
pushl
dec
int
int3
fdivrp
out
mov
xchg
mov
cs
into
cmpsl
repnz
fisubl
sbb
pop
push
inc
dec
and
dec
jp
add
jne
rolb
dec
cmp
pop
or
jae
icebp
push
cmp
mov
mov
dec
sarl
in
mov
test
jno
cmp
jge
fmul
xor
sarl
cmpsb
and
inc
pop
push
or
cmp
cmpsl
shll
mov
mov
loopne
call
movsb
sti
ljmp
das
jns
add
scas
imul
fnsave
cmp
shlb
les
ret
pop
cld
daa
pop
adc
mov
add
std
or
fcoms
mov
inc
xor
sbb
jno
stos
ljmp
push
add
fdivs
sbb
pop
cmpsl
mov
cltd
xor
jae
cmp
add
mulb
clc
adc
jl
and
loopne
movsb
pushf
sbb
or
xsha1
cmpsb
or
cmpsl
pop
push
sub
enter
jmp
aaa
call
stos
inc
mov
cmc
xor
mov
test
push
jmp
lods
cmp
mov
adc
sbb
ds
ss
inc
inc
outsb
sub
dec
mov
sub
enter
rclb
pop
sarb
jne
in
stc
lcall
mov
xor
andb
dec
xlat
push
dec
lds
xor
jl
mov
lods
lcall
jge
jno
adc
adc
jo
pop
jmp
mov
pop
jmp
inc
add
xchg
ss
inc
roll
mov
call
or
stc
mov
or
fistpll
push
and
stos
push
mov
jg
popf
js
inc
mov
or
cmp
pop
lret
mov
lock
loope
xlat
fstpt
std
scas
iret
data16
in
inc
pop
in
dec
sub
dec
xchg
lahf
jg
or
dec
mov
mov
ret
in
lock
sub
lahf
lret
je
aad
insb
sbb
xchg
push
inc
xchg
dec
pop
push
movsl
cmp
push
cmp
shrl
add
std
pop
jbe
out
ret
pop
and
pop
jae
jl
xor
cmp
out
pop
mov
lods
cmp
sub
lods
fdivl
xchg
pop
sbb
les
push
or
fisubrl
sub
cltd
mov
lds
jp
push
mov
cwtl
rep
xor
into
mov
into
lods
vpextrw
lds
testb
push
xor
xor
pushl
inc
dec
fimull
test
hlt
mov
rclb
cmpsl
testl
push
mov
xorb
stos
psllq
jb
xchg
inc
xor
sub
pop
aas
pop
rcrb
outsl
mov
xor
dec
pusha
mov
sbb
sbb
xchg
pusha
cmpsl
mov
xor
orl
dec
add
cmpb
sahf
xchg
mov
and
cld
inc
xchg
cmpsl
mov
dec
fbld
mov
movsl
ds
xchg
sbb
js
inc
and
dec
mov
push
stos
test
push
jbe
lea
push
loopne
push
rol
cmpsb
jb
push
cmp
xlat
outsb
cmp
xchg
lods
push
mov
pop
mov
test
lahf
push
xchg
add
inc
cmp
cmp
das
sbb
mov
repnz
cmpsl
js
ffree
xor
movsl
mov
cli
mov
aaa
cltd
out
xor
or
inc
fcomps
data16
ja
jb
call
xor
cmpsb
bound
jnp
imul
paddusw
leave
fwait
and
cmp
sbb
cmc
movsl
cli
nop
mov
fdivl
and
hlt
cli
xor
push
lret
inc
btr
sti
jns
or
dec
sub
jmp
dec
loope
xchg
cmc
mov
push
ds
mov
fnstsw
test
mov
fcmovnb
jecxz
out
out
sbb
out
aad
and
mov
mov
out
jp
and
jb
cmp
and
or
sti
push
lret
das
cmc
bound
sbb
imul
sub
push
mov
inc
aad
inc
out
aam
jnp
cmp
xchg
pushf
outsl
push
mov
mov
shr
mov
cltd
sahf
movsl
hlt
and
mov
in
in
test
int3
adc
sarb
pop
lock
sahf
cmp
lcall
fidivl
sub
jecxz
jmp
mov
imul
ja
jns
xor
daa
mov
aas
insl
inc
jl
sub
ds
cld
bound
sti
rorl
dec
mov
mov
push
outsl
push
mov
dec
sbb
or
xchg
aas
clc
jp
out
bound
fstpt
aad
xchg
sahf
push
test
pop
cmpsl
out
icebp
cltd
push
mov
mov
xor
or
aas
inc
movsb
xchg
mov
aaa
cmp
scas
aaa
mov
imul
mov
and
test
jg
sub
and
fadds
popf
or
lret
daa
and
or
ret
ja
jo
add
iret
cmp
push
test
ret
mov
add
scas
in
push
movsl
push
jb
mov
pop
fadd
fists
adc
stc
push
xchg
scas
xor
lock
in
xchg
js
jg
clc
cltd
mov
es
negl
test
adc
pop
sbb
pusha
xor
xchg
int3
dec
gs
mov
or
push
sbb
xor
cltd
mov
inc
fwait
cmpsl
js
and
clc
cmp
pusha
jns
cmp
cmc
sti
push
mov
fcmovnb
repz
cmovbe
dec
jecxz
dec
loopne
dec
mov
mov
cwtl
jne
xor
sub
jge
sub
mov
jle
xchg
push
sbb
popf
in
cmp
pusha
divl
ds
mov
rol
fwait
adc
loope
or
sarl
push
jo
jae
clc
pop
xor
sbb
stc
pop
sbb
sbb
dec
dec
inc
in
js
aam
lods
cmp
cmpb
in
cmp
sahf
xor
mov
mov
std
or
mov
ljmp
push
xchg
inc
pop
mov
imul
jne
test
mov
fistl
dec
jp
mov
outsl
in
jmp
and
loope
test
fstpl
xorb
mov
push
movsb
popf
out
push
xchg
mov
js
jmp
adcl
cltd
push
xchg
sub
push
push
iret
mov
fstp
xor
and
cmp
jno
ds
pop
out
add
popf
mov
es
push
mov
rclb
adc
and
or
stc
push
pop
fistl
xchg
popa
clc
leave
adc
jbe
jg
sbb
and
mov
out
inc
dec
rcrl
cmp
jecxz
lahf
jg
add
cld
jo
outsb
cmp
dec
ss
pop
add
push
lcall
adc
dec
mov
add
subl
add
rcr
jo
cmp
movsb
fsts
mulb
cli
mov
ss
leave
cmp
mov
lahf
jl
repnz
mov
test
and
xor
int3
mov
fmulp
pop
and
and
je
xor
scas
xchg
cmp
sbb
inc
rorl
pop
mov
imul
mov
or
pop
dec
loop
test
push
dec
sub
pop
imul
or
fmuls
in
movsb
push
sarl
xchg
push
into
mov
aam
mov
fsub
add
jae
xchg
sub
ret
pop
adc
inc
clc
test
repz
sbb
add
jno
mov
xchg
pop
out
in
pop
int3
out
lods
jne
call
sub
lods
popa
jo
fucomi
sbb
call
add
sti
xor
mov
lods
add
xchg
push
sub
stos
repnz
ret
mov
jns
push
mov
dec
mov
imul
sbb
pop
outsb
aaa
push
jno
scas
inc
leave
repnz
xchg
arpl
fcoml
pop
div
pop
adc
add
stos
das
mov
xor
cmc
xchg
call
mov
dec
repz
adc
push
jp
dec
xchg
fs
sub
in
cmp
cmp
out
rorb
add
in
test
xor
jnp
ss
jno
mov
les
jnp
sub
outsb
imul
jno
dec
outsb
inc
dec
cli
cmp
and
out
adc
fwait
xor
xor
loopne
sbb
adc
fnsave
arpl
sub
jl
add
pop
popf
stos
rcl
ds
mov
dec
push
je
adc
sub
cmp
xchg
test
mov
movsb
dec
add
outsb
vpxor
inc
lret
xlat
ja
lods
add
jno
outsl
je
outsl
pushf
jle
imul
jbe
adc
mov
and
icebp
rolb
out
lea
push
mov
pop
sub
imulb
movsl
inc
loopne
ljmp
aas
mov
xchg
jp
stos
dec
sbb
scas
mov
mov
xchg
sub
xor
mov
mov
add
cmp
add
mov
pop
test
xchg
sub
call
lods
inc
repz
lret
or
loop
rcrl
xchg
dec
xchg
mov
cmp
mov
cmp
jo
cwtl
jecxz
dec
adc
stos
pop
lret
and
in
push
mov
mov
dec
mov
shlb
outsl
push
jnp
xchg
pop
sahf
fidivl
dec
fwait
add
xlat
out
pop
mov
push
sbb
in
sti
mov
ja
les
sub
bndstx
xchg
jmp
xor
es
mov
enter
rorl
lret
pop
movlps
cmpsl
inc
add
out
icebp
cmpsb
adc
hlt
xchg
xor
sub
mov
inc
shr
sahf
mov
je
lock
popa
aad
pop
push
push
adc
sub
inc
int
mov
jge
jbe
mov
test
sbb
lock
mov
pop
notb
dec
mov
inc
sbb
pop
int
fnstcw
in
data16
sbb
jmp
test
sbb
mov
out
lock
js
cmp
in
push
fwait
adc
push
push
push
adcl
int3
mov
xchg
shrl
imul
jns,pn
stc
xchg
pop
inc
add
add
xchg
xor
pop
add
pushf
mov
push
jne
jecxz
insl
adc
mov
lds
scas
sbb
cmp
arpl
jbe
cmp
xchg
test
add
pop
xor
in
cli
insb
mov
xchg
push
dec
out
dec
jecxz
adc
daa
dec
mov
pop
call
inc
test
xchg
cmpsl
lcall
movsb
mov
out
sub
in
dec
or
add
mov
push
bndstx
mov
aam
in
ret
push
push
mov
push
movsb
sub
popa
addr16
pop
or
fld
mov
call
dec
pop
jl
xor
dec
pop
cltd
jnp
rcrb
adc
repz
gs
dec
and
in
orps
sub
jno
test
test
push
dec
jp
xorb
and
inc
stos
jmp
lcall
sahf
gs
or
scas
cmp
in
pop
nop
mov
imul
movsb
imul
mov
and
jle
push
xor
decb
das
push
scas
sahf
push
xor
dec
push
pop
cltd
popa
js
adc
mov
push
inc
sub
fisubrs
fcompl
das
or
xchg
cmovb
aam
out
and
pop
lods
lret
stc
dec
out
add
cmp
sbbb
les
cmpsl
inc
fucomp
jg
push
es
or
xor
jae
mov
sarl
xor
push
xlat
jb
jg
in
adc
jl
and
push
mov
popa
fisubrl
addb
sbb
xchg
adc
adc
sbb
and
cmp
enter
cmp
pop
out
inc
fldcw
sbb
sbb
insl
and
fildl
test
inc
mov
scas
mov
lret
fadd
fdivs
and
add
loopne
jne
mov
test
push
bnd
push
add
pop
mov
les
xchg
movsb
xor
fstpl
cli
pushf
mov
out
adc
jbe
cmpsb
mov
pop
jmp
shlb
add
push
out
and
inc
sub
test
fistpll
sbb
fldcw
into
sahf
jle
sub
push
ljmp
push
arpl
pop
decb
fsubrs
mov
xorl
imul
ret
clc
xchg
je
mov
out
and
or
movsb
test
shll
in
pop
lock
mov
mov
add
jl
popf
pop
cs
push
xchg
jg
lret
xor
adc
mov
sub
sub
incb
lods
inc
pusha
fists
xchg
xchg
in
rcrb
mov
idivb
iret
inc
bound
es
sbbb
jg
mov
cmp
in
into
dec
test
dec
mov
movsb
loope
mov
std
iret
mov
cs
dec
loope
out
dec
xor
jl
mov
leave
lret
or
idivl
les
pop
outsb
dec
pop
outsb
mov
test
lret
pop
mov
or
inc
addr16
in
mov
mov
mov
sub
aam
add
xchg
lahf
mov
inc
mov
fcompl
jnp
addr16
mov
jl
fwait
add
pop
lds
dec
and
fsubrp
daa
aad
sbb
stos
inc
sbb
inc
pop
fs
cmc
cmpsb
cltd
cmpsl
ds
dec
clc
orl
cmpsl
sub
jo
add
xor
jge
sub
sahf
xchg
push
out
sti
ss
xchg
lods
pop
inc
je
sbb
mov
adc
mov
push
mov
and
push
mov
push
enter
inc
cmc
xchg
mov
push
push
adc
andl
mov
fs
shlb
test
push
pop
sub
sbb
push
nop
hlt
push
dec
push
loopne
ds
stc
test
nop
add
xor
test
mov
sbb
pop
xchg
repz
shlb
enter
pop
arpl
popf
and
mov
mov
and
adc
xchg
jmp
mov
mov
adc
inc
mov
jo
pop
lret
or
jmp
jbe
add
hlt
das
in
and
addl
dec
push
imul
mov
xchg
sahf
addr16
popa
xchg
pop
or
aam
pop
out
mov
fdivl
aad
and
and
push
xchg
popa
scas
xchg
aad
out
dec
sti
inc
sbb
popf
cld
cmp
fwait
repz
in
test
cmp
fistpl
jmp
repz
jmp
xor
bound
roll
and
ret
imul
lcall
sub
pop
shr
jns
mulb
daa
flds
enter
test
xchg
sbb
sbb
shr
ficompl
xor
cmp
scas
push
xchg
loopne
cmp
daa
call
pop
out
xchg
insl
sub
pop
dec
xchg
pop
aam
dec
js
xor
or
in
pop
icebp
adcl
mov
push
xchg
ds
or
push
sbb
es
xlat
jns
push
sbb
out
dec
mov
xor
push
ds
lea
xlat
pop
xchg
cmp
clc
nop
bound
cmp
add
loop
sbb
leave
cmp
inc
inc
out
fs
mov
cmp
mov
sbb
cs
mov
and
nop
pop
pop
xor
jle
aaa
sub
cmp
jnp
cmpsb
pop
jmp
inc
add
and
pushf
xorb
mov
mov
aam
and
sahf
clc
loop
sbb
cmp
in
sub
pop
jge
sti
hlt
xor
sbb
jecxz
jns
in
adc
sbbb
mov
jo
inc
jecxz
push
popf
xor
mov
mov
lods
fcmovu
fdivrs
cld
xor
and
bound
into
movsb
sub
pop
inc
pop
out
jne
mov
lea
int3
pushf
aaa
adcb
mov
enter
jle
or
cmp
mov
lea
or
add
sbb
jbe
sbbl
push
adc
xchg
sub
cmpsl
in
std
mov
aas
outsl
ret
hlt
lcall
push
dec
add
mov
lahf
xor
pusha
out
out
jecxz
fisubrl
loopne
add
lock
xor
movsl
insb
sahf
scas
out
mov
insl
repz
les
int
push
sub
dec
adc
rclb
inc
lcall
xor
test
and
imul
pop
cmp
sar
push
dec
loopne
hlt
test
sar
mov
loopne
push
out
popf
jb
test
sti
ds
subl
fstl
fs
push
sahf
mov
neg
in
jle
aam
imul
and
sub
aaa
sub
inc
jge
cmc
dec
adc
shl
cli
cmp
lods
ss
shll
imul
mov
sbb
mov
sbb
pop
nop
insl
adc
inc
jno
mov
mov
sub
xchg
lds
loope
repz
test
ret
sbb
sub
out
fldl
aad
repnz
cmpl
push
xor
popf
cli
and
ficoms
int3
cld
mov
rorb
xchg
push
pop
add
adcb
lds
cld
xchg
arpl
les
call
inc
in
dec
loopne
gs
jb
ljmp
lret
and
jp
xor
es
push
repnz
sbb
mov
cli
aam
xchg
lahf
mov
sbb
jmp
es
sbb
decl
cmp
cmp
in
sbb
shrb
insl
ficompl
add
ds
cmp
xchg
xchg
jo
or
xchg
leave
or
xor
add
out
adc
pop
inc
divps
imul
popf
push
fwait
ss
sbbl
push
rcl
scas
mov
push
mov
adc
repnz
stc
and
add
jge
lcall
repz
dec
mov
xor
xlat
add
insb
add
mov
mov
lret
add
inc
mov
es
mov
xchg
inc
pop
mov
fisubl
inc
sub
std
out
cmp
and
cli
mov
ds
mov
and
pop
fstl
loopne
sbb
imul
out
arpl
push
outsb
jp
out
add
cld
mov
push
aaa
hlt
mov
adc
std
mov
cs
cltd
in
sti
xchg
xchg
or
repnz
jbe
mov
ja
jno
cmp
mov
fisubrl
adc
mov
scas
insb
cmpsl
dec
data16
sub
mov
outsb
sarl
jge
test
lds
add
iret
lds
faddp
popa
adc
shrl
int3
jecxz
mov
lcall
pop
stos
ret
add
int
cld
xor
jns
xchg
je
dec
or
cwtl
cmp
pop
jnp
in
pushf
adc
jnp
aad
out
mov
push
lods
inc
push
pop
out
xor
xchg
pop
xchg
pusha
push
lea
xor
jge
loop
xchg
add
hlt
push
mov
cwtl
incb
sarl
dec
insl
cmp
mov
mov
xchg
push
mov
in
gs
inc
jp
mov
in
ret
mov
stos
daa
xchg
jno
pop
test
leave
inc
or
push
mov
fwait
pop
xchg
cmc
aas
mov
push
jmp
bound
push
leave
and
sub
cmp
imul
mov
mov
arpl
adc
movsb
jl
or
or
out
ret
in
dec
cmp
sub
cwtl
cmp
cli
jg
add
and
aam
xor
mov
inc
mov
jg
and
pop
cld
adc
cld
push
dec
imul
jbe
aas
push
outsb
leave
jecxz
inc
cmp
pop
mov
mov
jecxz
in
nop
sbbl
mov
daa
ss
or
fidivs
pushf
inc
push
or
out
adc
sti
into
mov
ja
jno
mov
sub
push
push
sbb
jmp
std
popf
xor
mov
js
enter
mov
cmpsb
add
lea
enter
mulb
inc
clc
xchg
gs
mov
push
cmp
sbb
jg
jno
testb
cmp
call
and
pop
mov
dec
xchg
sub
mov
vrsqrtps
subl
push
popa
scas
dec
fistps
bound
shr
add
sahf
sub
js
aad
ja
cmp
jno
out
movl
cmp
test
scas
mov
out
mov
push
cmpsb
push
loopne
adc
adc
jbe
mov
dec
xchg
xor
test
dec
dec
and
addr16
cwtl
jmp
pushf
out
jge
pushl
sbbb
or
adc
addr16
sub
jno
cs
lds
sbb
mov
out
add
mov
push
push
push
dec
sbb
insb
cmp
push
notl
stos
idivl
fdivl
sbb
inc
testb
fs
fwait
cli
xchg
push
iret
sub
add
jno
add
leave
cmp
sbb
arpl
jae
call
fidivrl
mov
push
scas
push
push
xor
push
push
sbb
fwait
jg
clc
pop
jmp
and
xor
pop
daa
addr16
aas
rcrb
xchg
pop
gs
test
ret
push
or
pusha
mov
sbb
lcall
pop
push
cmp
sub
mov
add
inc
xlat
xchg
xor
cmpsb
sbb
frstor
leave
sub
xchg
cmp
stos
aad
cs
cli
cmc
cmp
mov
cmc
sbb
cmp
mov
jno
pusha
pop
push
fistpll
cmpsl
jp
test
sbb
sbb
mov
or
sub
push
inc
add
fisubrs
movsw
cmp
test
cs
ret
add
inc
popf
mov
adc
adc
rorl
ret
stos
pop
in
xor
daa
mov
mov
aad
icebp
into
lods
incb
add
leave
movsl
push
stos
pop
push
loope
xor
pop
std
adc
fnop
xchg
fidivs
repnz
mov
adc
adc
shrl
bound
sbb
sbb
or
or
pop
inc
call
pop
ljmp
stos
mov
mov
int3
cli
pushf
ljmp
sbb
mov
ret
dec
pushf
loop
insl
ret
rcl
cmpsb
and
or
lret
sub
outsb
add
mov
mov
aad
mov
es
dec
add
nop
test
mov
inc
sahf
dec
push
mov
mov
adc
cmc
add
jae
push
enter
mov
pop
pop
mov
dec
leave
jle
jg
fldt
mov
fs
cmp
imul
lods
adc
popa
stos
hlt
mov
cli
xchg
mov
lahf
stos
flds
cmp
pop
add
push
filds
loope
inc
add
cmpsb
pop
lods
add
pop
std
xchg
mov
xchg
push
sbb
push
sbb
mov
faddl
mov
jno
mov
icebp
notl
aad
flds
mov
into
jo
ljmp
in
aam
or
data16
push
mov
aad
out
rcrl
pop
xchg
xor
push
cmp
out
data16
mov
pop
out
or
inc
xor
jecxz
lahf
fsubl
sub
imul
pusha
scas
jb
cli
mov
icebp
cmp
push
rclb
add
sbbl
xor
sbb
jge
push
icebp
out
push
xor
subb
pop
icebp
je
andb
movsb
mov
es
jo
in
idivl
leave
push
outsl
imul
fwait
mov
fs
mov
outsb
sub
outsl
scas
xchg
sbb
ds
dec
xchg
xor
jecxz
or
add
mov
add
into
ljmp
popa
pusha
xor
or
cmp
cltd
ds
add
jmp
test
aas
test
test
scas
cmpl
rcrb
rol
int
xor
xchg
sub
mov
arpl
ljmp
push
push
sbb
addl
popa
jg
data16
xor
jae
mov
iret
lds
pop
jle
dec
icebp
pop
pop
jmp
cltd
into
gs
fsubr
cltd
mov
clc
sub
shll
xor
xchg
push
mov
inc
pop
ds
test
cmpsb
loope
ds
add
add
and
repz
imul
cmpsb
insb
stos
lcall
sti
mov
popf
int3
or
pushf
xor
out
push
mov
mov
out
add
in
movsl
inc
dec
jecxz
andb
lods
adc
popf
cmpsl
xchg
lea
jmp
cli
fimuls
ljmp
inc
or
and
pop
loop
fcomps
shlb
icebp
mov
push
cmp
inc
mov
inc
ficoml
neg
xor
cmpsl
jmp
gs
xor
adc
mov
xorl
cmc
pop
mov
jmp
adc
js
sub
repz
jmp
fwait
jg
or
bound
push
or
cmp
aad
loope
pop
scas
jns
mov
stos
push
insl
popa
jae
inc
shl
xor
hlt
jmp
fnsave
ret
inc
push
inc
inc
imul
jmp
or
aaa
cli
pop
sbb
mov
xor
sbb
aas
push
ljmp
imul
jns
xchg
cwtl
cmp
pop
xchg
gs
xchg
fwait
inc
fadd
xor
pop
push
xchg
iret
cmpsb
inc
ret
jnp
pop
and
adc
xchg
cltd
push
sub
mov
imul
mov
sbb
into
jne
add
dec
xchg
jecxz
mov
xchg
xor
lds
imul
mov
insl
cmp
insl
mov
dec
and
sub
mov
mov
ret
adc
xchg
loopne
sub
mov
pop
scas
or
dec
loopne
sub
addr16
adc
es
pop
sarl
nop
mov
pop
ljmp
jno
xchg
js
push
push
mov
inc
cli
inc
data16
and
or
xlat
mov
rcrl
jns
xor
mov
sbb
mov
cltd
mov
sahf
call
aaa
je
ret
push
xchg
sbb
jg
cwtl
mov
test
mov
inc
loopne
stos
mov
rcrl
pop
cltd
sbb
nop
xor
pusha
add
xchg
push
mov
push
xchg
das
test
lock
push
movsl
mov
mov
movsl
stc
jcxz
sub
ss
inc
push
push
cmp
xorb
add
and
loope
xchg
and
jp
sub
aad
mov
scas
ljmp
call
jmp
and
mov
aad
mov
popa
push
hlt
xchg
fs
adc
mov
nop
outsl
testl
lret
loope
int3
adc
ljmp
cld
sahf
push
loope
data16
jmp
or
fnstsw
and
es
xlat
dec
mov
sub
sub
dec
loop
cmp
xor
fnstsw
shrb
inc
mov
pushf
scas
loopne
add
hlt
push
lahf
movsb
out
cmp
push
xchg
jp
mov
adc
ja
arpl
jg
jg
fildll
dec
pop
icebp
jg
das
stos
mov
xor
fstenv
xchg
mov
dec
repz
and
xchg
das
dec
enter
data16
xchg
lahf
shlb
cmp
call
mov
lret
and
push
jbe
cmp
cmp
lods
jp
lods
stos
into
jns
out
leave
fcmovu
jne
mov
cmp
sub
sbbb
push
xchg
pop
out
fldl
sub
test
jnp
dec
js
push
and
in
test
adc
cmpsl
lock
and
test
add
pop
xchg
bound
pop
sbb
stos
jmp
mov
std
rcrl
aam
sub
sub
insb
int3
cltd
cmc
ljmp
jp
xor
push
mov
dec
ficompl
push
outsb
inc
mov
popf
xor
mov
arpl
andl
inc
jecxz
cmc
fwait
cld
fwait
jmp
pusha
in
xor
jo
and
ds
stc
popf
lret
mov
imul
dec
mov
dec
fisubrl
cmp
cmc
cmp
les
insl
inc
pop
fwait
mov
mov
rcrl
push
xor
or
cmp
lahf
outsl
dec
shlb
es
subb
push
inc
test
mov
and
push
mov
inc
fucom
xchg
notb
inc
ffree
cmp
sub
pop
das
mov
lret
lahf
les
mov
cmp
xor
push
test
inc
das
add
lea
sbb
push
ja
and
inc
push
lods
add
fisttpl
sbb
orl
mov
xchg
push
out
and
ss
iret
and
cmp
inc
sbb
cld
lret
jnp
adc
mov
and
add
xchg
ret
int3
pop
xor
stos
shlb
lock
mov
mov
push
shll
adc
mov
sub
add
jp
xchg
in
test
or
cmpsb
pop
jno
insl
out
out
aas
adc
mov
pop
js
or
adc
stos
cs
xchg
scas
pop
das
pop
idiv
lcall
and
stc
imul
mov
dec
xor
cmc
cmp
pop
les
aaa
push
sbbb
aad
dec
mov
and
mov
pop
mov
loope
dec
mov
pop
je
adc
jg
cmpsb
xor
sub
mov
sarb
jg
mov
and
jb
xor
aas
xor
pusha
mull
push
jg
jno
jle
bound
xchg
icebp
xorl
mov
fs
ret
outsb
mov
pop
imul
out
mov
nop
daa
cld
ss
leave
mov
pop
push
push
xchg
pop
adc
sti
xchg
sub
out
sbb
adc
fldcw
divl
mov
outsl
test
imul
xchg
sub
repnz
xchg
lods
stc
dec
ljmp
push
jle
mov
push
lahf
lea
das
sub
aad
jle
cmp
dec
lock
mov
xchg
enter
cld
dec
aad
outsl
scas
sbb
inc
sbb
mov
jnp
jmp
mov
and
dec
dec
fsubrs
inc
in
push
aad
in
adc
aas
dec
loope
add
mov
xor
shlb
xchg
das
scas
inc
popa
mov
mov
popf
sbb
sbb
bound
inc
or
fwait
sub
fidivl
adc
cmp
xor
add
loope
push
faddp
test
mov
popa
mov
sub
or
mov
je
ficoml
or
pop
testb
jge
imul
and
sub
stos
in
andl
ss
xchg
lods
rorb
dec
xchg
or
in
test
movsl
rorl
add
test
lods
lds
pop
jbe
jno
out
gs
fldt
lods
subl
xchg
jns
xor
mov
in
xchg
xchg
adc
push
loop
hlt
pop
sbb
pop
xchg
fwait
sub
mov
fistpll
imul
cmc
cs
mov
fmuls
mov
add
dec
jecxz
cmp
jmp
or
cmp
in
lock
cmp
pop
mov
or
xor
push
addl
sub
inc
and
enter
cmpsl
jno
in
adc
xor
push
movsb
dec
clc
jns
sub
mov
and
std
jle
clc
xchg
add
xchg
ret
and
mov
out
cmp
push
mov
push
cmp
cmpsl
jnp
out
sbb
xchg
insl
shrl
or
iret
push
cmp
popa
cs
outsl
imul
in
add
xor
mov
andb
imul
fnstenv
xlat
lret
and
dec
test
pushf
xor
mov
adc
sub
and
cmp
aam
out
mov
cld
or
cmp
fimull
adc
mov
icebp
stos
inc
and
leave
sbb
cmp
lahf
sarl
clc
xor
pop
cli
adc
dec
int
xchg
pop
mov
cmp
gs
dec
loope
sbb
rorl
shll
xor
rorl
pop
jne
pop
mov
rcl
add
in
cmpsl
cli
cmc
inc
out
test
push
imul
fistpll
adc
mov
sbb
mov
push
in
push
shrb
xchg
out
pop
inc
mov
add
rcrb
jae
cwtl
outsl
cmp
adc
insb
jnp
loop
dec
and
hlt
pusha
insb
add
xor
mov
inc
fcoml
jnp
sub
mov
push
dec
cltd
cmpsl
xor
ret
pop
in
jns
sbb
xchg
jbe
xchg
inc
mov
xlat
ljmp
mov
sbb
jecxz
test
lahf
enter
repz
lods
test
cmp
imul
scas
mov
pushf
lds
pop
aas
jl
inc
fdivs
mov
movsl
scas
fldenv
mov
sbb
test
stos
mov
mov
je
ss
push
test
dec
inc
and
jg
lahf
jecxz
adc
mov
call
jecxz
sti
mov
and
ss
pop
ret
pop
jnp
adc
adc
lea
mov
inc
pop
rorl
std
push
lcall
test
outsb
not
xchg
mov
sub
int3
frstor
test
repz
movsl
cmpsl
inc
jle
ret
jmp
pop
push
out
sbb
mov
js
mov
push
adc
and
mov
test
cs
ds
dec
inc
push
out
pop
out
mov
fidivl
or
fisubrl
sub
xchg
mov
jg
ljmp
pop
jecxz,pt
xor
pop
inc
xchg
add
arpl
stos
es
mov
aad
cmpsl
cmp
jb
sti
scas
push
rcl
jb
not
mov
cmp
mov
mov
xchg
outsl
add
movsl
sbb
nop
sub
pop
pushf
test
into
push
cmp
ljmp
imul
add
popa
pop
test
mov
nop
call
inc
mov
aam
lea
sbb
loop
cmp
and
sub
inc
push
mov
xchg
pop
mov
cmp
popa
pop
mov
icebp
pop
stos
fsubr
sub
add
and
jg
or
sub
loop
pop
dec
lret
cmp
push
pop
insl
xchg
add
mov
pop
dec
xchg
repnz
mov
adc
adc
or
inc
cs
insb
leave
aam
aad
in
fcompl
inc
ss
mov
push
cmp
xchg
adc
fadds
in
add
add
mov
sarb
cmc
dec
mov
adc
clc
push
sbb
lahf
xchg
out
movsl
js
insl
test
mov
adc
push
cmp
lcall
lcall
jecxz
aas
xchg
xor
shlb
stos
push
les
aam
nop
xchg
mov
loop
and
and
popa
je
lods
cld
xor
pop
jecxz
or
lods
xchg
jne
ret
dec
test
or
mov
push
mov
icebp
cwtl
int
adc
bound
mov
stos
mov
sub
imul
fldt
and
push
setnp
movsl
das
sbbb
fs
psubq
cld
mov
into
inc
sbb
jg
gs
cmp
mov
clc
mov
mov
ret
mov
es
jns
lods
ds
and
mov
lret
test
inc
in
incb
sbb
inc
push
xchg
fcompl
push
dec
std
sbb
mov
ss
outsb
andb
addb
ret
cmp
xchg
inc
sbb
aad
jb
mov
rclb
sti
scas
mov
cmp
adc
out
leave
xchg
clc
mov
les
mov
enter
out
and
ret
popf
test
push
and
xor
test
sbb
cmp
mov
adc
jmp
movsl
daa
fisubs
lcall
data16
cmp
call
dec
in
mov
jno
pop
mov
inc
cmpsb
das
cmp
sbb
pop
add
jg
ljmp
jns
xlat
outsb
mov
cmp
es
cmc
faddl
dec
dec
fs
arpl
mov
mov
daa
sbb
pop
jnp
push
inc
std
pushf
loopne
add
ret
sub
mov
mov
add
add
mov
movsl
jmp
lds
mov
clc
cpuid
fnstcw
sbb
pop
fucom
jmp
into
jl
lahf
das
adc
cmp
andl
hlt
mov
cwtl
adc
mov
sarb
push
stos
cmpsl
dec
push
mov
inc
and
add
dec
push
cltd
push
lods
mov
imul
mov
mov
cwtl
movsl
and
adc
pop
sub
xor
bound
in
call
mov
movsl
lret
iret
outsl
and
lret
sbb
add
mov
shrl
inc
add
pop
data16
movsb
push
in
mov
add
fcmovu
pop
icebp
or
and
loope
loop
in
vpavgb
mov
add
sarb
xchg
cmp
jne
cmp
test
cmp
inc
sbb
jb
jo
xor
dec
inc
movsb
sti
xor
ss
jo
mov
test
cld
stos
fwait
xor
in
insl
hlt
test
inc
je
arpl
ret
test
gs
call
add
pop
pop
cmpsb
push
mov
repnz
pop
sub
jecxz
stos
dec
out
xchg
sub
daa
push
or
pushf
and
pop
test
aaa
sbb
xlat
sbb
pop
aam
mov
stos
sub
add
bound
mov
sub
or
enter
lds
ds
push
jl
lret
pop
fs
fisttpl
push
cmp
dec
pop
inc
addr16
je
roll
jo
test
out
test
mov
cmc
mov
fadds
lcall
cwtl
jne
lret
movb
sbb
in
gs
ja
mov
jnp
xchg
loop
lea
stos
outsl
bound
mov
push
or
inc
push
pop
xchg
mov
jno
dec
sub
decl
ds
aam
lcall
stos
pop
adc
insl
mov
lods
and
xchg
pop
mov
mov
call
add
popf
cmp
sbb
into
mov
push
mov
test
inc
xor
js
enter
fisubrs
xor
cwtl
out
mov
mov
or
pop
fwait
dec
push
xchg
adc
dec
inc
aas
mov
lahf
imul
loopne
pop
mov
dec
pop
gs
dec
jmp
inc
fcmovu
jns
cmp
pop
cmc
or
jnp
sbb
lea
test
mov
repnz
arpl
popf
xor
push
xchg
pop
jo
add
dec
loopne
adc
je
sub
mov
add
adc
and
cltd
inc
aam
add
cmc
stos
inc
call
pushf
loopne
adc
xchg
sub
adc
mov
es
adcl
mov
adc
test
jecxz
rcll
ret
cmp
push
sarl
in
fcmovne
jp
ja
dec
fcoms
xchg
or
adc
aad
adc
mov
arpl
aad
les
testb
int3
mov
fs
mov
clc
mov
mov
lds
jecxz
insl
and
imul
mull
sbb
inc
cmp
inc
push
dec
lock
jl
sub
sbb
add
sub
cmp
negl
rcr
lods
repz
xchg
test
lods
xchg
or
jl
push
imul
sub
pusha
imul
xor
or
jg
and
or
add
icebp
arpl
test
inc
fdivrs
fistps
push
sub
mov
add
hlt
popf
sbbl
xchg
aaa
ss
cmp
adc
jp
xor
jae
xor
or
std
fmull
push
mov
imul
jns
dec
mov
mov
xchg
xchg
mov
iret
iret
test
bound
and
out
into
push
add
in
xlat
cmp
addr16
jg
out
lock
stos
pop
sahf
push
inc
xchg
aam
fisttpll
cs
xor
add
dec
int
and
nop
add
add
sahf
inc
test
mov
iret
lcall
push
xchg
and
imul
int3
movsb
cmp
fcoml
push
fcompl
inc
add
lret
cmp
adc
sub
sub
cmc
add
inc
sti
sbb
imul
stos
daa
nop
ljmp
jo
jb
call
cli
xchg
xchg
inc
push
sbbl
dec
js
sbb
stos
or
js
movsb
mov
popf
scas
jmp
into
daa
mull
and
xor
mov
jb
pop
and
in
adcb
scas
inc
push
push
mov
cli
insb
xor
mov
test
add
data16
imull
and
xchg
mov
lock
test
mov
outsb
mov
lds
int
push
pop
dec
cmpsb
pushf
push
add
bound
sbb
or
fldenv
cmp
loope
pop
pushf
inc
mov
pop
scas
jae
outsb
out
lea
pop
testb
push
adc
ucomiss
adc
pop
daa
push
stc
jbe
addr16
and
push
dec
xchg
repnz
mov
jp
adc
mov
pop
mov
push
ds
and
xor
popf
sub
mov
mov
mov
xchg
adc
cmc
lret
mov
push
xchg
loopne
mov
lods
popf
je
cmpsb
and
pop
filds
out
jge
add
out
sbb
and
and
and
subl
sbb
mov
mov
ror
pop
repz
sbb
push
add
sub
xchg
cs
cmp
jmp
sahf
sub
out
xchg
pushf
pusha
push
and
andl
fcomi
mov
std
xchg
jl
mov
push
xchg
aas
ljmp
std
ljmp
cmp
cwtl
add
cmpsb
cmp
xorb
xor
fnstenv
mov
or
push
in
daa
xor
jns
inc
and
fldl
xor
pop
ljmp
decb
pop
mov
and
fmull
ja
jmp
leave
adc
push
push
test
push
jbe
decb
dec
mov
outsl
insb
fdivrp
test
pop
out
xchg
adc
inc
push
addr16
sbb
in
aad
cmp
out
dec
sub
mov
shll
mov
addr16
push
lahf
sub
mov
addr16
ja
mov
sbb
push
mov
push
sub
test
sti
or
push
pop
add
cmp
push
adc
mov
mov
shrb
mov
filds
xlat
ja
jmp
fcmovbe
fistpl
adc
dec
push
inc
inc
int3
sar
dec
scas
sahf
pop
and
push
data16
pop
aam
inc
mov
sub
icebp
jp
cltd
pop
cmp
es
dec
test
in
mov
test
je
movsl
add
insb
pushf
pop
mov
sbb
mov
sub
dec
cmp
outsb
test
movl
sti
xchg
fsubrp
jp
rcrl
and
jns
adc
ss
sbb
ss
clc
xlat
sahf
hlt
jns
and
push
jo
popf
int3
dec
mov
mov
in
repz
xchg
es
inc
inc
cmp
scas
lcall
hlt
jl
mov
xchg
sub
mov
lods
arpl
mov
mov
sub
in
sahf
pusha
shll
mov
aaa
xchg
xor
insb
ja
jg
mov
or
test
xchg
xor
dec
dec
push
sbb
addb
dec
sbb
jne
add
mov
inc
into
out
dec
les
push
push
mov
popf
js
or
cmp
clc
negl
push
mov
ja
xor
inc
inc
iret
fcompl
mov
mov
ret
sub
ret
xchg
ds
es
repz
ds
scas
mov
addr16
jo
mov
sbb
sbb
xor
adc
inc
xchg
cmp
call
cmp
lds
pop
loop
xchg
jne
insb
xchg
jbe
mov
sti
stc
or
mov
push
mov
push
inc
mov
lahf
dec
lods
dec
iret
cmp
aad
jmp
mov
jns
lock
ss
and
data16
scas
jl
out
xchg
dec
test
dec
mov
popa
ds
mov
jg
aas
mov
pop
sub
xchg
cmp
mov
sub
mov
scas
movsl
mov
imul
loope
sbb
dec
ret
mull
punpckhdq
sbb
mov
mov
pusha
cmp
es
push
iret
mov
insb
mov
xchg
xor
out
cmpsl
add
ds
out
fbstp
int
add
jae
fisubrl
jecxz
mov
dec
cli
int
scas
sub
jne
pop
loopne
sahf
sti
inc
les
dec
notb
jmp
mov
adc
push
aas
daa
mov
lods
pop
ret
notl
pop
add
mov
aad
inc
rorl
and
clc
jle
pop
int
xor
and
jae
cmpsl
cmp
js
xor
lds
iret
jl
mov
pop
mov
mov
inc
adcb
in
sub
mov
int3
push
add
sub
sub
pop
daa
push
dec
xchg
jb
adc
pushf
imul
lods
xchg
xchg
lcall
and
pop
jecxz
add
jo
imul
test
dec
pop
xor
xor
and
cwtl
cld
inc
subl
or
dec
xor
scas
inc
filds
addb
adc
mov
xor
sahf
cwtl
jne
dec
subb
cld
adcb
pop
xor
add
rolb
cs
add
mov
inc
sbb
add
and
lret
adc
pushf
pop
adcb
cld
cmpsb
mov
mov
dec
ret
ret
xor
add
fwait
cwtl
outsb
test
adc
int3
push
repnz
test
test
das
cmp
pushf
mov
inc
dec
add
hlt
xor
mov
mov
mov
stos
xchg
adcb
cmp
fnstsw
hlt
int
mov
mov
mov
es
sbb
sbb
in
rclb
movlps
mov
dec
mov
cwtl
lods
pop
push
dec
pop
mov
jno
mov
mov
push
sbb
add
cmpl
gs
in
test
lret
jno
cmc
or
pop
jne
xor
jp
fsubrl
push
popf
test
mov
fucomp
int
lret
xor
xchg
imulb
dec
sub
jo
in
pop
cltd
add
sub
in
and
sub
mov
decb
pop
add
nop
dec
pcmpgtw
jg
movsb
mov
sbb
xlat
out
test
mov
cwtl
sub
mov
xchg
mov
mov
push
mov
sbb
fsubs
mov
add
or
add
mov
xor
std
or
mov
push
or
test
xor
cmp
push
outsl
jg
lods
xchg
rcrl
mov
int3
rcr
add
xor
and
shll
lock
lods
lock
cltd
mov
sub
insl
sub
mov
jbe
lods
sub
mov
mov
push
or
jle
loopne
lods
sahf
dec
mov
test
std
mov
sub
mov
sbb
das
sbb
lcall
push
xor
sbbb
rclb
pusha
push
or
or
ficompl
dec
cmp
bound
push
mov
imul
xor
leave
xor
pop
cmpsb
add
push
daa
sbb
sti
inc
incb
sub
js
xchg
cmc
scas
dec
push
adc
lret
push
test
push
inc
xchg
inc
xlat
lahf
cli
mov
xchg
arpl
cld
fistpl
mov
xor
mov
lret
inc
in
cmc
shll
xchg
pushf
testl
mov
push
jno
mov
xor
xchg
or
cld
xor
adc
hlt
aaa
gs
mov
pop
xor
cmp
jns
jae
rcrb
dec
lea
imul
popa
push
xchg
inc
dec
cmp
mov
das
adc
and
outsb
or
adc
lcall
and
out
loop
sub
loope
fistpll
pushf
xor
cmp
int
or
int
test
push
mov
ja
add
popa
rolb
jo
jne
fsubs
shll
imul
repnz
aam
jg
lret
adc
cli
pop
push
or
test
and
stos
jge
lods
repnz
repz
lods
sbb
dec
mov
and
insb
rclb
mov
push
aam
or
pop
test
and
push
out
sahf
into
push
fnstsw
ds
jnp
loopne
adc
movsb
mov
mov
dec
push
mov
pusha
jb
gs
arpl
sub
gs
daa
cld
into
aad
sbb
lods
mov
pop
stc
pop
inc
out
fwait
add
pavgw
fucomip
adc
and
mov
jle
xor
lds
and
cmp
mov
xchg
add
int3
jp
outsb
enter
dec
or
stos
dec
shlb
popf
and
dec
stc
mov
mov
add
mov
jmp
jecxz
cmp
mov
xor
call
decb
or
rcll
repz
and
jo
inc
dec
movsb
sub
fcmovne
inc
jl
push
sub
cmp
adc
or
sbbb
sub
mov
lahf
mov
and
pop
mov
add
mov
adc
aaa
dec
mov
gs
loopne
lcall
test
inc
lods
mov
mov
sbb
sbb
or
jb
pop
lods
sub
fadds
xchg
pop
add
cmpsl
jp
pushf
aas
jns
es
lcall
adc
jnp
shl
inc
out
inc
mov
or
adc
xchg
cld
adc
sbb
push
in
lds
sbb
rorl
hlt
add
dec
cmpsl
aad
popa
clc
jg
push
jmp
dec
add
push
insl
ja
imul
fildl
or
sub
imul
enter
or
pop
xor
das
and
xchg
lcall
loope
inc
fwait
pop
cmp
mov
sbb
repz
out
xchg
mov
sbb
or
in
cld
into
repnz
jmp
repz
scas
sti
lret
sti
aam
pop
push
sbb
and
arpl
inc
cmpsl
cltd
push
cli
pop
push
xchg
js
inc
jne
inc
out
into
enter
and
cmp
testl
in
inc
call
jmp
imul
fimuls
adc
cmc
pop
xchg
dec
adc
push
shr
rorl
cmp
sbb
rcl
xorl
incl
adc
adc
add
mov
lock
loopne
jno
push
mov
cmp
out
add
pop
add
or
push
xchg
xchg
es
pop
or
mov
mov
pop
stos
xor
in
xor
inc
pop
jb
jl
fwait
xchg
and
xor
inc
popf
aas
outsb
test
inc
push
inc
cwtl
cltd
mov
cmp
cld
lret
lret
in
scas
mov
into
jl
and
pushf
mov
or
pop
daa
arpl
jae
mov
inc
pop
fdivp
je
popa
jl
cld
in
sbb
mov
pop
cltd
std
ja
fisttpll
sub
sub
dec
aad
dec
std
cltd
add
sbb
test
cmp
icebp
adc
daa
in
das
adc
icebp
iret
push
push
mov
mov
lcall
jle
pop
out
adc
inc
and
adc
gs
stos
xor
int3
jns
xchg
pop
push
mov
loop
mov
or
mov
lret
push
lret
dec
icebp
lock
loopne
inc
and
in
sbb
mov
xor
sbbl
dec
sbb
cld
out
jb,pt
push
call
dec
sbb
call
add
xor
adc
daa
dec
arpl
gs
int
daa
inc
mov
enter
int3
pop
repz
inc
mov
xchg
das
cmp
lds
out
fistpll
sbb
cwtl
call
pop
xor
and
enter
mov
or
aaa
jnp
ds
xchg
movsl
loopne
fcompl
fiadds
mov
xchg
outsl
cmp
fwait
je
dec
and
mov
mov
sahf
scas
or
and
test
sbb
mov
fmulp
test
aaa
lods
pop
mov
xchg
jbe
sub
add
inc
popa
lods
outsl
push
xchg
dec
jbe
xor
sbb
cmp
in
sbb
leave
add
push
cs
mov
out
sbb
jle
mov
jl
adc
add
sbb
or
inc
xor
fisubrl
add
fdiv
push
nop
or
mov
mov
orl
pop
mov
dec
stos
testl
iret
imul
out
adc
lods
inc
cwtl
bound
adc
mov
jo
enter
push
in
fidivl
icebp
loop
je
cmpsl
inc
sti
xchg
jne
pop
popa
jle
mov
rep
imul
xor
stos
xchg
adcb
jne
xchg
in
push
xchg
fwait
aas
sbb
cmp
pop
mov
test
sub
lea
lds
pop
dec
jecxz
cwtl
lea
push
bound
subl
mov
inc
push
xor
or
stc
or
fsub
inc
xchg
outsb
inc
nop
xlat
sub
sbb
dec
out
test
ret
ljmp
push
aaa
pop
fsubr
lret
ret
incl
mov
mov
pop
daa
dec
sbbb
fwait
mov
ss
dec
push
mov
das
popf
imul
gs
or
repnz
in
mov
in
add
pop
push
and
jmp
insb
andb
xor
jne
xchg
clc
lock
adc
jmp
and
add
xchg
mov
int3
push
out
or
orl
out
cs
nop
cmp
out
jbe
adc
dec
xor
inc
aad
or
movsl
xchg
sbb
jno
mov
outsl
sbb
test
pop
lret
or
jno
arpl
jae
mov
push
sbb
xchg
out
jns
push
jmp
and
orl
mov
loop
mov
inc
sub
imull
inc
data16
pop
cmpsl
xchg
jbe
lods
xchg
xchg
fidivl
pop
mov
push
jl
and
test
mov
imul
out
incl
repnz
mov
andb
negb
jecxz
lcall
push
xlat
push
sahf
out
add
mov
push
in
mov
fsubr
xor
push
xor
dec
cmp
mov
stos
fsubrl
fsubrs
in
mov
or
mov
outsl
in
xchg
mov
add
stc
int3
inc
stos
dec
sbb
jne
jae
cmp
aad
call
pop
out
adc
push
push
xor
and
ret
sub
cwtl
xor
mov
sub
add
repnz
ljmp
mov
movl
mov
scas
subb
add
imul
clc
jg
mov
push
dec
in
jl
push
js
jp
ficomps
push
xchg
and
sti
testb
jp
lods
stos
sbb
int3
les
lods
adc
or
movups
and
or
or
std
adc
jnp
pop
sub
into
orl
add
fnstsw
push
test
fimull
lfs
xchg
mov
pop
lahf
test
ja
in
sub
sti
xchg
inc
rcl
insl
mov
jne
repz
mov
mov
sub
nop
rcr
pop
cmp
xlat
jmp
jecxz
mov
fdivrl
jbe
in
ja
push
mov
inc
sbb
sahf
aas
mov
out
mov
jecxz
jbe
cld
imul
loop
sub
popa
add
out
pop
shll
mov
add
dec
push
push
ret
iret
cmp
push
cmp
and
dec
loope
lret
in
inc
push
insb
jbe
lods
shlb
imul
rep
sub
ljmp
dec
in
or
outsl
cmp
xor
popa
or
push
in
outsb
fidivrl
imul
testl
mov
data16
push
or
pop
mov
jp
pop
mov
pop
les
or
hlt
fisttpl
jmp
aaa
ds
cli
icebp
jnp
scas
cwtl
cs
cltd
jb
aaa
mov
pushf
cmp
shll
mov
mov
xchg
fdivl
xchg
jmp
inc
into
iret
and
jl
push
pusha
mov
cmpl
mov
sbb
mov
add
sbbb
jno
loopne
cmpsb
push
sbb
xor
ja
adc
addr16
jno
aaa
cmc
jnp
jo
es
pop
sbb
lret
std
push
xor
jge
dec
enter
dec
insb
cmp
inc
xchg
dec
push
ret
and
rcr
outsl
mov
roll
in
dec
aaa
dec
orl
jmp
movsl
push
imul
lock
mov
sub
push
scas
xchg
cmpsb
add
int
je
lock
fidivs
push
incb
fsubl
xchg
cli
inc
leave
imul
jbe
pushf
in
cmc
mov
xchg
test
stos
mov
mov
push
loop
faddp
imul
cli
sbb
les
or
into
pop
cs
mov
mov
dec
cmpsl
stc
test
mov
in
xchg
scas
cs
add
jno
mov
out
mov
sbb
mov
cmp
add
jg
lods
and
andb
sbb
xlat
in
imul
stos
shlb
jbe
lret
pop
repnz
outsl
mov
or
cmpsl
pop
jo
popf
enter
fstpt
sar
lret
lret
aaa
dec
cmp
and
sub
jne
dec
test
mov
pop
lock
enter
adc
mov
and
cld
dec
dec
mov
bound
push
mov
jge
bound
xchg
js
and
add
jnp
es
cltd
xor
out
subl
cmp
push
movsl
ljmp
sub
call
adc
adc
daa
push
aam
sub
pop
sub
jns
mov
adcb
sbb
lret
movsb
and
adc
fildll
loope
cwtl
sub
or
jbe
stos
cmpsl
lea
pop
push
xor
mov
and
xor
dec
pop
insl
sub
pop
rclb
push
xor
js
add
mov
lret
push
in
xchg
call
pop
sahf
mov
loopne
inc
ja
xchg
imul
rcrl
cs
cs
push
mov
enter
sbb
jae
ret
xor
pushf
je
sbb
dec
das
jle
push
mov
push
jno
popf
and
test
pop
jbe
test
icebp
inc
fiadds
xchg
adc
mov
inc
mov
lret
mov
out
lds
mov
rorb
repz
fdivrp
lret
shlb
lea
push
pop
adc
xchg
push
cmp
out
call
dec
cmp
push
fildll
mov
insb
clc
ficoml
sub
imul
lock
or
inc
fstpl
mov
dec
fwait
or
inc
dec
fcmove
filds
lods
dec
scas
rclb
nop
xchg
sub
pop
insb
add
repnz
jmp
insb
notl
outsl
push
ljmp
jno
mov
fiaddl
sarl
mov
pop
stc
test
push
insl
push
iret
add
loope
imul
into
outsb
dec
inc
rcrl
aas
les
pop
jne
inc
mov
inc
sbb
aas
js
dec
repnz
inc
popa
add
in
outsl
adc
cltd
lret
movsl
cmp
ss
dec
jo
ret
mov
js
pop
idivb
faddl
xchg
fs
xor
loop
mov
stc
mov
mov
sbb
aas
dec
adc
mov
jno
pop
movsl
dec
shrl
in
add
xor
and
cltd
push
les
out
xchg
xor
test
inc
mov
scas
imul
jmp
daa
mov
js
inc
fdivr
adc
mov
pop
ret
das
push
stos
pop
hlt
fdivrl
jnp
and
push
in
xor
fmuls
xlat
jb
inc
or
mov
xchg
repz
cmp
pop
sub
ret
negb
mov
imul
test
sbb
pop
shrl
push
inc
fs
push
sbb
mov
jl
and
shll
mov
cli
outsl
shll
push
fdivrl
sub
xchg
add
fmul
fs
cltd
movsb
push
xor
jnp
inc
fsubrl
movsl
test
aas
icebp
mov
sbb
orl
and
fcmovnb
ds
add
cltd
std
outsb
out
cmp
push
sar
jge
sahf
insl
fcmovne
gs
jnp
sbbl
das
mov
push
lods
cld
sub
jg
cltd
jge
lods
mov
cld
movl
xchg
cmc
xchg
xchg
sbbl
les
nop
daa
jmp
sbb
and
stos
push
or
lret
gs
cmp
push
in
rcrl
leave
add
ljmp
cmp
pop
sub
dec
mov
jg
cmpsl
sub
lds
pop
repnz
jp
inc
js
jb
inc
push
adc
xchg
jns
imull
sub
rcrb
dec
lea
cmp
cmp
inc
stos
imul
pop
subb
lahf
mov
repnz
jae
adc
sti
push
lods
jmp
notl
cs
fsubl
sbb
ret
add
and
pop
xchg
gs
adc
js
adc
aad
imul
mov
xchg
lret
inc
mov
cmp
lock
fldenv
mov
imulb
shll
add
test
aad
or
and
ja
scas
dec
push
fnstenv
push
jl
push
pop
cli
jbe
loope
mov
aam
pop
push
out
xchg
push
notb
pop
xchg
cmc
cmc
add
pop
shlb
sub
bnd
dec
inc
lcall
mov
inc
pop
and
out
jbe
sub
jne
dec
push
leave
push
in
decl
push
push
idivb
aas
fisubs
sbb
xchg
out
andb
out
in
clc
and
inc
xchg
and
in
cwtl
add
ret
push
outsb
arpl
jp
adc
cmp
mov
in
or
dec
mov
inc
sarb
pop
hlt
push
pop
divb
rorb
push
sbb
jg
aam
cmp
and
mov
cltd
test
sub
dec
or
aaa
push
cmc
xor
add
addr16
int3
scas
add
mov
sbb
popa
fwait
mov
jbe
test
jmp
fidivrs
ds
push
gs
adc
adc
xor
popa
sbb
shrb
cmp
enter
dec
xchg
mov
imul
sub
inc
pop
cmpsl
add
scas
inc
stos
je
fiadds
fnsave
push
repnz
mov
test
pushf
push
aad
dec
test
mov
addr16
rcl
outsb
add
mov
xchg
lds
pop
fisubrs
imul
dec
sub
mov
icebp
sbb
adc
and
addr16
cmpsb
xchg
aad
or
ss
and
aam
stc
adc
sbb
stc
lret
jl
mov
dec
mov
add
add
mov
iret
sub
sahf
lods
cli
movsb
push
dec
adc
aaa
xchg
sub
add
sar
mov
cmp
jmp
add
jae
ss
ds
pop
xor
scas
stc
push
lcall
mov
mov
xor
outsb
jno
lods
mov
mov
les
mov
pop
sub
sbb
sbb
aaa
xchg
sbb
xor
xchg
adc
in
out
movsb
call
setb
cltd
fwait
mov
les
stc
pop
sahf
sarb
jg
fs
pushf
loope
push
adc
repz
jno
pop
mov
call
push
out
fs
ret
int
jecxz
test
add
in
fmull
neg
dec
jns
out
stos
imul
sbb
jno
push
mull
push
ret
pop
or
push
lock
aad
icebp
adc
shrl
into
mov
xor
frstor
inc
add
testb
fdivs
add
scas
xchg
sub
test
ret
ja
int3
pushf
xchg
and
ja
xor
and
sub
iret
scas
inc
neg
lahf
xor
int
pop
xchg
out
sti
add
sub
sbb
scas
push
or
or
es
ss
mov
lret
fdivr
lret
les
int3
out
in
scas
and
sbb
addr16
sahf
xchg
adc
xor
aam
addr16
dec
pop
into
test
xchg
sahf
mov
xor
cmc
mov
imulb
or
jg
jle
out
imul
loopne
cwtl
loop
mov
arpl
test
jg
jb
fnsave
xchg
inc
sub
adcl
fildll
inc
inc
xchg
lea
maskmovq
notl
loope
into
inc
jmp
sbb
je
pushf
lods
pusha
push
sbb
xor
mov
shll
mov
jb
pop
in
ret
sbb
in
or
icebp
dec
fsubrp
mov
data16
inc
test
jb
ljmp
push
mov
mov
andb
inc
add
imul
mov
fs
push
and
movsb
popa
das
push
inc
mov
das
pop
sbb
or
jg
dec
cmpsb
rolb
push
aam
test
mov
mov
xchg
pop
es
sbb
out
divl
jb
jle
push
and
les
mov
scas
sub
push
adc
push
stos
sub
loop
pop
iret
testl
int3
loope
push
adc
jp
push
sub
mov
notb
outsb
scas
clc
repnz
push
fwait
andb
mov
xchg
add
sbb
fistps
in
push
jne
dec
mov
insb
xchg
mov
mov
mov
push
mov
les
test
clc
push
cmpsb
popf
cmp
jecxz
and
mov
mov
ljmp
and
shrb
dec
jecxz
clc
and
mov
cwtl
scas
inc
test
mov
fs
jl
rolb
cmp
pop
movsl
mov
inc
arpl
adc
lahf
ss
inc
push
loopne
inc
inc
add
lahf
push
jns
int3
dec
jae
mov
adc
in
das
inc
aaa
pop
cmp
push
sarl
fs
mov
sarl
lock
testl
jae
popf
xor
jg
mov
jae
xchg
pop
fcoms
enter
lahf
lahf
cli
mov
xchg
js
or
fstl
inc
test
jmp
mov
pusha
xchg
mov
mov
in
cwtl
mov
cmp
push
imul
out
add
incl
dec
loope
loope
adc
inc
sub
jg
and
xchg
lods
icebp
adc
jle
cltd
jbe
test
xchg
imul
aad
icebp
mov
mov
loopne
movb
in
movsb
in
mov
pop
and
sub
add
xor
xor
insl
xchg
or
mov
mov
or
cmp
mov
dec
dec
in
jge
pop
inc
imul
js
or
outsb
shl
lahf
adc
xor
test
mov
pop
pop
daa
mov
cld
mov
nop
ljmp
lods
clc
sbb
cmp
mov
sub
psubd
jo
jo
sub
pusha
in
push
movsl
cmp
lret
sti
push
mov
and
mov
imul
dec
jne
lds
pop
mov
in
fdivrs
daa
pop
mov
ficomps
out
out
and
cmpsw
aaa
cltd
sub
test
out
xchg
dec
lods
xchg
sub
push
sbb
cmpsb
cld
pop
xorl
addr16
test
push
or
mov
stos
or
outsl
aaa
sbb
inc
insb
inc
sbb
jnp
jmp
cmp
sub
dec
shll
jge
cs
imul
pusha
pop
es
pop
hlt
sub
inc
xchg
mov
or
les
add
dec
ret
scas
jns
aam
test
and
lahf
adc
psubsw
lcall
mov
cmpsl
pop
jecxz
mov
cmp
dec
fincstp
inc
int3
lret
jecxz
shlb
mov
fwait
imul
pop
inc
pushf
add
arpl
adcl
adc
mov
jne
aaa
stos
ret
arpl
push
fs
pop
imul
sbb
sbb
inc
jb
sub
cwtl
pop
popf
dec
adc
cmp
icebp
imul
jl
repnz
fisubs
lods
sti
add
sbb
pusha
xchg
mov
pop
rorl
xor
out
pop
mov
lret
daa
les
pushf
sahf
out
mov
das
fadds
mov
sbbl
fldt
lret
pop
addr16
pop
cmc
js
bound
xchg
sbb
dec
pop
test
mov
xor
jg
stc
dec
dec
out
adc
xchg
loopne
cmpsl
mov
sbb
mov
sub
insl
sahf
xlat
add
jo
sub
loop
fcmovnu
fistps
cmp
and
pop
in
in
or
lds
rorb
mov
in
push
mov
fadds
or
jnp
fisttpll
mov
sahf
add
enter
test
rcrb
inc
gs
dec
and
cltd
pop
mov
gs
lcall
adc
push
jae
sub
pop
add
dec
dec
sub
movsb
scas
inc
das
sbb
cmp
mov
js
js,pn
rcll
adc
loope
insb
lea
ja
punpcklwd
inc
pop
pop
cmp
mov
xor
cmp
mov
pushf
shll
and
mov
lods
rcrb
or
sub
mov
test
or
lahf
cwtl
sub
pop
lock
aam
push
push
lcall
push
testl
xchg
xor
pop
mov
in
mov
jne
inc
mov
and
mov
inc
xor
mulb
cwtl
xchg
mov
jge
shrb
arpl
sub
adc
enter
dec
xor
pop
mov
pushf
pop
sub
add
mov
mov
cmp
add
leave
dec
pop
es
lock
aaa
jnp,pn
loopne
fiaddl
movsb
xchg
push
and
in
and
jp
cmpsl
dec
pushf
jecxz
xchg
cmp
jnp
add
push
add
xor
fs
or
mov
out
push
push
dec
fucom
mov
das
jno
sub
cmp
bound
pop
jmp
jecxz
add
arpl
test
test
jmp
jae
sbb
shlb
and
jno
mov
xorb
cld
pop
and
leave
sbb
std
into
popf
fstps
pop
idivb
subb
dec
repnz
lds
pusha
ror
xchg
in
fs
mov
cmp
bnd
xchg
mov
adc
hlt
shlb
cmc
xor
xor
push
jno
jecxz
sbbl
xchg
out
xchg
sub
or
inc
imul
sub
loop
stos
adc
aad
int3
adc
addr16
sbbl
jb
adc
call
xor
mov
out
test
inc
cmp
aad
xlat
push
in
loope
cwtl
cmpl
test
add
add
xor
lods
in
data16
dec
push
imul
xor
xor
push
subb
adc
call
lahf
data16
mov
stc
or
jbe
xchg
and
cli
mov
sbb
adc
nop
push
mov
lahf
mov
dec
mov
dec
jge
cmp
push
pop
add
push
jbe
cmp
or
xchg
and
cmp
loope
or
lods
lcall
sbb
sub
cmp
and
fldcw
aaa
push
add
fdivp
je
push
cmpsb
sbb
jae
data16
iret
push
cmp
cmp
push
adc
ljmp
inc
or
subl
add
sbb
or
scas
les
xor
xor
xchg
push
mov
jecxz
call
out
jge
repnz
fidivrs
and
xor
lds
adc
sub
popf
add
adc
xchg
pop
sub
fmull
es
pop
sub
ljmp
inc
in
fnsave
mov
jge
rcrl
test
dec
and
mov
add
mov
pop
outsl
jnp
lahf
es
jle
xor
push
push
cmc
push
icebp
ljmp
cmpb
push
leave
je
pop
mov
push
xchg
test
and
push
dec
jbe
cmc
fdivl
ret
push
ja
fwait
stc
addl
mov
xchg
mov
test
subb
sub
cli
xor
pop
mov
fsubp
hlt
and
imul
insl
dec
popa
ret
mov
pop
adc
mov
pop
rorl
cmc
or
lock
and
or
insb
mov
iret
mov
sahf
lods
mov
push
out
add
leave
jbe
mov
dec
out
std
outsb
mov
cli
sub
inc
aas
aam
pop
sbb
repnz
movsb
jmp
stc
add
inc
arpl
loop
cwtl
and
aaa
pop
sub
and
push
mov
sbb
stos
repnz
or
shll
dec
inc
dec
jbe
cmp
mov
cld
sub
rcrb
adcl
rcrl
xor
jae
fisubrl
cli
or
mov
and
pushf
xor
or
push
insl
add
test
jecxz
testl
ds
pusha
sub
dec
insl
add
dec
call
orb
add
adc
insl
adc
jns
push
cwtl
cltd
mov
xor
mov
jp
or
cld
mov
jg,pn
clc
enter
sub
mov
jle
mov
out
sbb
pop
push
jle
cmp
inc
dec
into
in
jmp
fldl
push
call
test
outsb
dec
sub
xchg
fst
shr
push
mov
fsts
pop
stos
shl
mov
ljmp
rcl
gs
add
push
cwtl
das
xchg
sar
loope
cmpsl
je,pt
jg
mov
mov
or
pop
dec
sub
psrlq
adc
stc
mov
mov
ffree
jno
and
out
xor
pop
jae
push
or
pusha
or
mov
push
cmpsb
add
cltd
in
and
dec
das
fsubs
in
mov
xchg
adc
lods
jl
lret
ds
adc
int3
in
and
out
es
jge
sub
insl
push
lods
sahf
sbb
push
mov
loope
imul
jne
mov
cld
xchg
rcrb
mov
jnp
movsb
lahf
dec
loope
sarl
xchg
mov
into
dec
out
mov
sub
pop
xchg
xchg
pop
push
imul
ja
fsubrs
ficompl
ret
std
sbb
cmpsl
xchg
gs
lcall
cmp
mov
xchg
xor
dec
or
dec
sub
in
jnp
divl
in
mov
imul
cltd
push
adc
push
popf
loop
mov
mov
cs
mov
mov
push
andps
movsb
cmp
xchg
push
adc
xchg
xchg
push
cwtl
pop
mov
push
mov
jb
xchg
mov
ret
cmpb
ret
mov
insb
adc
push
sbbb
lods
dec
cmpsl
jo
cmpsb
dec
xor
or
insb
add
test
in
jae
jo
jmp
lods
xchg
jp
outsl
shll
in
xor
popf
xor
aas
xor
mov
or
je
push
push
dec
dec
adc
mov
jecxz
push
mov
dec
loope
xor
mov
iret
rcr
adc
push
and
imul
es
jae
jmp
add
aas
xchg
add
pop
loope
xchg
stos
adc
push
cmp
mov
cmp
movsb
mov
mov
stc
jmp
mov
leave
sbb
dec
arpl
inc
sbb
push
sub
notl
sbb
mov
stos
cmp
outsl
imul
pop
loopne
xor
push
jcxz
mov
movsl
and
sarb
cmp
arpl
add
lods
loope
dec
fstpl
add
in
mov
je
inc
hlt
mov
adc
rcrl
mov
mov
inc
dec
mov
sbb
adc
orl
xchg
mov
push
lea
fsubl
lahf
movsl
int3
inc
icebp
pop
hlt
and
sub
cwtl
push
cmpsl
push
lcall
scas
and
inc
imul
jge
mov
mov
xchg
jbe
pop
icebp
add
xchg
mov
add
push
hlt
jcxz
push
in
sti
mov
lret
cld
cmp
aam
stc
in
dec
test
js
adcb
in
cld
jmp
jge
adc
pop
outsl
mov
cwtl
mov
insl
adc
mov
and
cmc
hlt
xor
mov
pop
lret
adc
ret
lret
dec
rcrb
pop
daa
lods
test
repnz
push
daa
add
jb
out
inc
mov
sub
adc
mov
push
fs
sub
jp
testb
lea
cmp
outsb
xor
lahf
sarl
lret
xor
arpl
lods
sub
es
mov
iret
mov
cld
jno
ds
jb
pop
movsb
jo
cmp
lods
aad
jl
into
ja
fimull
daa
xorb
xor
scas
inc
sarl
popf
sub
and
inc
rclb
push
arpl
xchg
aas
jae
xor
std
xchg
sti
push
xchg
into
pop
sbb
and
add
push
aas
out
adc
xchg
fiadds
and
fwait
jne
mov
and
and
mov
rorl
inc
jge
ret
fists
cmpsb
push
sahf
jmp
mov
push
int
xchg
cmpsb
scas
insl
mov
enter
and
stos
cli
notb
lods
push
mov
inc
fldcw
push
push
push
pusha
ficomps
sbb
fdivs
jmp
out
pop
pop
jmp
inc
and
add
clc
push
stos
cmp
mov
mov
ret
popa
jo
test
js
cmpsb
in
mov
sub
add
add
and
mov
dec
push
cld
shl
xor
inc
in
pop
cmp
ret
pop
cs
sub
pop
outsl
outsb
ss
add
inc
repnz
pop
dec
mov
out
xchg
jns
nop
mov
mov
xchg
mov
mov
arpl
mov
pop
sbb
lock
loope
lds
add
icebp
test
sbb
mov
out
popl
xor
mov
add
xchg
add
fwait
xchg
inc
ljmp
xlat
xor
into
xchg
push
lahf
fwait
or
inc
fmuls
and
popa
pop
test
dec
xchg
jle
push
mov
cwtl
fidivl
lcall
fimull
cli
nop
push
jmp
lds
pop
out
sub
ds
sub
jp
insl
mov
inc
pop
jle
int
insl
xchg
out
rcl
cmpsl
hlt
xchg
mov
ficomps
jle
mov
inc
out
out
movsb
les
and
add
mov
popf
stc
inc
dec
int3
xchg
mov
lea
jne,pt
mov
std
mov
das
cwtl
cltd
jg
shr
je
xor
out
bound
mov
mov
push
mov
or
dec
adc
cwtl
jo
je
imul
dec
ljmp
in
aaa
push
mov
or
mov
push
adc
int3
sub
pop
lret
and
mov
mov
xor
xchg
andl
mov
popa
jne
test
or
cmp
inc
loop
outsl
push
mov
pushf
xor
ret
mov
je
mov
fsubrs
pop
sub
ret
notb
clc
in
sbb
sbb
aaa
or
inc
idiv
test
lock
push
jge
lret
sub
push
cltd
xor
inc
in
fdivl
adc
xchg
mov
xchg
cmp
push
in
repz
je
lret
jl
in
jle
sub
mov
fsubrs
adcl
loopne
jns
xchg
testl
jbe
out
jmp
in
in
cmp
cs
je
jb
and
ds
sbb
add
icebp
cmp
outsb
inc
lods
push
outsl
nop
xor
mov
adc
add
cs
test
loop
pop
jne
xchg
push
sti
jns
mov
pop
xchg
mov
aam
mov
and
cmp
mov
jecxz
dec
aas
idiv
and
mov
sbb
fwait
cld
addb
dec
daa
scas
inc
pop
xor
fnsave
pop
fucomi
mov
jmp
test
ret
gs
js
add
jae
dec
scas
jle
in
xor
pushf
rcl
sbb
cmpl
rorl
mov
adc
repz
dec
inc
fcoml
jp
ja
fmulp
mov
mov
test
sbb
lcall
sahf
mov
cmp
pop
push
pushf
mov
lods
and
pop
add
xchg
sti
push
sub
mov
jle
sahf
dec
dec
cmc
or
sahf
insb
and
cltd
outsl
aad
aam
or
cmp
data16
inc
push
sub
int
dec
clc
sbb
cmp
enter
xor
fbstp
mov
mov
sub
mov
enter
into
jmp
add
mov
es
ficoms
test
jle
xor
scas
jle
hlt
cs
daa
adc
push
out
mov
pop
loop
mov
mov
push
dec
int
push
lods
mov
addr16
repnz
sub
imul
dec
push
push
arpl
sub
in
inc
xor
fcompl
test
popa
pop
cltd
stc
sub
cmpb
in
mov
in
and
mov
xlat
insb
xchg
out
loopne
shlb
mov
push
and
pop
das
ds
call
push
insb
or
aaa
mov
mov
lods
or
pop
out
out
addl
inc
pop
incb
adc
das
lods
and
adcl
dec
sub
push
cmp
loop
in
adcl
add
insl
cmp
aaa
jecxz
mov
xchg
subl
std
dec
aam
dec
push
jle
fs
jle
sti
mov
adc
popa
sub
adcl
out
cmp
icebp
pop
fs
mov
push
pop
arpl
pusha
mov
addl
and
sbb
or
sbb
inc
cmp
push
mov
hlt
pop
jb
aaa
inc
arpl
lods
inc
pop
rorb
loopne
cmpsl
cmp
or
addr16
clc
xor
mov
enterw
cli
cmc
jne
sub
dec
out
mov
hlt
das
fisubrs
or
out
insb
imul
mov
push
arpl
fidivs
insb
arpl
icebp
mov
or
push
daa
mov
xchg
ss
fsubl
adc
outsl
push
xor
rorl
fistl
add
ret
mov
xor
repnz
sbb
cmpsb
test
data16
or
and
mov
and
ja
cmp
adc
mov
mov
aas
push
lods
jl
or
xchg
sub
jecxz
ja
std
cltd
stc
scas
pop
popf
fstps
dec
pop
jae
pop
pop
cmp
shl
cmp
leave
pushf
outsb
xor
das
xlat
sbb
leave
repnz
mov
sub
pop
cmp
jb
stos
mov
dec
xchg
inc
push
xor
jmp
mov
inc
mov
jno
dec
sbb
adc
insb
outsb
sub
xchg
push
mov
xor
imul
pop
dec
ja
inc
nop
stos
jbe
call
subl
leave
lcall
je
fisubl
into
insb
inc
clc
fs
daa
outsb
jl
jae
add
mov
stos
and
lock
jno
adc
adc
dec
xor
jns
sub
aam
clts
mov
or
aaa
cli
mov
jnp
jo
mov
sub
jns
adc
xchg
outsl
inc
pop
insb
jle
sub
out
testl
cmp
bound
mov
cmpsb
popa
in
adcb
xorl
arpl
fwait
jnp
sbb
sbb
xchg
fnstcw
icebp
clc
or
pop
stos
adc
adc
cs
das
rcrb
ret
jp
push
push
out
in
std
inc
or
dec
add
mov
stos
shrl
and
repnz
and
xor
xchg
insl
ljmp
jb
push
or
cmp
pop
hlt
dec
popf
daa
loop
pushf
scas
das
shl
cltd
xor
cli
scas
popf
cltd
es
pop
jp
xchg
inc
mov
dec
lret
lret
mov
adc
ficoms
xor
subb
repz
out
cmc
nop
sbb
fldt
dec
mov
movsb
es
dec
hlt
add
mov
pop
cmp
je
movsb
pop
push
xor
andb
outsl
push
xor
jge
daa
loop
lds
add
fwait
sti
rorl
xorl
aas
push
pop
xchg
add
xor
jns
xor
xchg
call
and
sbb
sbb
mov
mov
jb
pop
ljmp
subl
ficoml
mov
clc
jnp
jg
loopne
jg
pop
xor
push
es
popf
sub
aaa
cltd
jae
add
addr16
das
sbbl
stos
out
test
add
mov
push
dec
ds
xorb
test
push
popf
xor
sub
pop
mov
xchg
lock
call
and
inc
arpl
dec
ljmp
xor
pop
out
fdivrl
push
add
daa
pop
add
movsb
inc
sbb
in
add
add
sar
xchg
add
loope
add
cmpsb
cmp
sar
aas
xchg
ljmp
xor
push
scas
nop
adc
mov
jecxz
addr16
fwait
loope
xchg
dec
mov
out
shll
add
ds
and
lds
cmp
sbbb
adc
mov
pusha
cli
repnz
pusha
add
sub
cmp
cmp
mov
hlt
mov
cltd
sbb
fidivl
or
addr16
fdivl
shll
enter
inc
imul
dec
mov
ds
dec
inc
cwtl
or
add
out
xor
push
and
sbb
sti
mov
jbe
jne
rcrb
xchg
dec
cs
push
mov
into
dec
cwtl
test
xchg
imul
mov
sbb
leave
cwtl
lods
inc
xchg
jmp
mov
pop
cmpsb
dec
fwait
hlt
mov
lret
pop
jbe
pushf
popa
int
sbb
xchg
out
in
push
mov
dec
push
lcall
idivl
lods
xchg
aad
mov
xchg
mull
or
jne
mov
fwait
push
out
xchg
jnp
inc
mov
pop
fstpl
lahf
es
aaa
arpl
loopne
shlb
mov
pusha
add
movsl
fsubr
test
aam
sarb
mov
loope
test
lock
xor
or
aam
test
and
in
or
mov
mov
scas
cmp
fldcw
cltd
orl
add
inc
mov
mov
jp
xchg
lods
cs
pop
xlat
xchg
mov
loopne
movsb
in
sbb
pusha
mov
rolb
int
mov
fildl
test
sarb
in
hlt
push
mov
push
mov
lea
and
int
aad
repz
cmc
test
loop
in
pusha
or
jmp
mov
push
sub
fdivs
mov
jle
or
cmpl
in
push
jmp
fs
sti
xchg
dec
jb
inc
ret
lcall
sub
loope
cltd
ss
fistl
mov
inc
ret
xor
rorb
mov
dec
subl
aam
mov
lods
mov
pop
jno
add
call
mov
mov
pusha
test
mov
cmpsb
enter
mov
mov
push
incb
cmp
mov
jmp
test
jle
jo
mov
add
mov
sbb
mov
sbb
in
mov
xlat
outsb
gs
ret
push
pmulhuw
mov
adc
push
sub
bound
cmp
ss
outsl
repz
sahf
inc
icebp
sbb
mov
add
dec
dec
add
es
add
daa
xchg
mov
jb
jae
lds
push
repz
jge
push
adc
push
stc
mov
pop
mov
lret
cmp
popf
repz
loope
mov
sbb
loopne
lock
adc
stos
cmpsl
adc
lret
xor
cmpsb
jb
ljmp
test
xor
adc
inc
lock
xor
iret
adc
or
xchg
mov
xchg
xchg
push
mov
cmp
rcrl
fnstcw
fcmovu
inc
outsl
pusha
mull
mov
xor
pop
fs
aad
sbb
jo
les
outsb
mov
adc
cmp
fistpl
pop
jo
xor
lds
outsb
sbb
mov
xorl
adc
and
and
out
inc
faddl
jbe
pusha
arpl
test
inc
lret
adc
push
cmpsl
push
lods
cmp
lods
ljmp
jno
inc
cmp
aas
lret
and
mov
xchg
pop
andl
aas
mov
daa
test
rcrb
inc
ja
jl
adc
sbb
rcl
cli
ds
dec
les
xor
push
outsb
cmp
jns
outsl
pop
icebp
adc
pop
test
push
jecxz
enter
lea
adc
movsl
cmp
clc
mov
jae
cmpb
cmp
dec
mov
nop
dec
pop
out
mov
fwait
adc
xor
mov
mov
cltd
push
hlt
xchg
cmpsl
jecxz
sbb
or
push
adcb
nop
mov
call
icebp
pusha
cmc
cmp
fsubl
fucomip
or
jnp
dec
sbb
enter
daa
in
pop
mov
push
inc
xlat
sbb
and
mov
loop
outsl
or
sbb
jno
sbb
in
fxch
and
xchg
fdivrl
cmpsw
aaa
insb
cmp
or
mov
fidivrl
cmpsl
outsb
lods
jb
stos
pop
xor
cmp
nop
inc
gs
add
xor
sahf
addr16
mov
mov
mov
sbb
enter
ret
pop
dec
dec
adc
loopne
push
cmp
aaa
xor
out
out
pop
pop
lock
data16
and
dec
push
pop
add
jecxz
xchg
in
in
loopne
mov
sub
xchg
ret
cltd
enter
xchg
stc
clc
or
gs
pop
xor
fcoms
adc
pop
xchg
mov
mov
jecxz
jle
mov
mov
daa
xchg
jo
out
cltd
pop
xchg
es
jmp
pop
sbb
ret
jle
cmpsb
sbb
mov
movsl
jp
fidivrl
jge
int3
mov
test
imul
pop
add
in
cld
cwtl
and
ds
mov
out
inc
movsb
shlb
shlb
mov
or
ret
test
mov
pop
xchg
lods
addr16
push
inc
in
jb
test
xchg
add
mov
fidivrs
shrb
lea
inc
fnstsw
fldt
lea
sub
fstpl
stc
nop
pop
arpl
lea
addr16
nop
cwtl
in
aas
sbb
dec
fistpll
pusha
stc
nop
mov
cmpsl
or
lea
dec
loopne
loopne
push
push
cmpsl
cmp
shl
xchg
dec
fstpt
mov
stos
sub
pop
adc
cmp
jg
stc
sub
dec
repnz
out
and
mov
loop
and
ret
or
sub
int3
ret
jnp
jno
and
in
push
ljmp
dec
mov
addr16
adc
sub
pop
push
cltd
inc
out
shl
daa
xchg
xor
push
adc
dec
mov
xchg
cmpsb
pusha
nop
mov
mov
inc
ljmp
fisttpl
jae
cli
add
mov
pop
outsb
cmp
ljmp
cmp
cmpb
mov
jl
add
pop
adc
push
push
das
into
imul
cmpsb
lods
inc
fdiv
ret
jmp
fwait
sub
test
xchg
mov
cmpsl
aaa
into
adc
xor
cmp
mov
rcrl
push
jg
xchg
push
in
mov
inc
clc
bound
mov
push
loope
loopne
xor
gs
xchg
stos
shlb
or
xchg
fcmovu
mull
push
shrb
inc
jge
mov
in
jns
push
stos
jne
xchg
sbbl
lds
lahf
out
pop
dec
mov
or
sbb
out
sti
xchg
add
ljmp
pushf
xchg
ja
cmc
daa
fsubs
add
push
push
std
mov
inc
popa
or
pop
inc
cli
jl
scas
mov
cmp
inc
inc
add
out
mov
arpl
pop
jns
lret
dec
and
inc
dec
imul
dec
sub
mov
mov
sbb
das
imul
test
mov
or
pop
sti
mov
sub
shld
sub
cs
rol
or
cli
mov
dec
dec
inc
iret
gs
repz
lret
mov
cmp
outsl
add
lock
sbb
stos
add
aaa
lea
shll
adc
cs
sbb
pusha
add
xchg
xchg
ss
mov
popa
sbb
adc
xor
mov
cltd
stc
mov
jne
add
mov
mov
in
push
fptan
mov
in
mov
cmp
fwait
test
xchg
mov
cs
push
jnp
or
mov
outsb
push
pusha
pop
insl
jge
or
nop
push
pop
into
adc
add
or
in
pop
enter
push
popf
iret
je
mov
ljmp
repnz
cli
stos
jmp
cmp
jecxz
push
loope
orl
je
xchg
out
rorb
daa
or
mov
inc
xchg
in
bound
jne
mov
push
mov
pop
ljmp
sti
mov
out
test
ja
cs
cmpsb
cmp
push
repz
jecxz
mov
std
in
les
push
test
leave
leave
sub
aam
inc
dec
cltd
and
jp
xor
loope
add
rolb
xchg
lcall
cmp
dec
and
aas
mov
dec
jmp
ljmp
lods
sub
bound
test
cmp
dec
add
stos
jmp
addr16
cwtl
stos
mov
sub
data16
mov
pop
add
mov
cmpb
aaa
sbb
fsubrl
scas
call
push
outsb
clc
mov
cmpsl
sbb
xchg
and
cwtl
pusha
add
loopne
test
cld
stos
jbe
dec
mov
jp
cwtl
lods
stos
jmp
mov
out
lret
stos
or
dec
push
push
aaa
inc
jmp
sbb
jb
clc
in
xor
dec
outsl
outsl
adcb
and
in
or
popf
inc
iret
pop
xchg
sbb
das
cmp
cmp
dec
jae
out
lret
dec
ret
jns
cmp
sbb
push
pushf
stos
xchg
in
test
jne
xchg
dec
mov
cmpl
dec
lcall
add
pop
insb
push
add
or
test
jne
imul
sbb
sti
pusha
adc
adc
popa
clc
mov
arpl
pop
loop
incl
mov
and
fsubrl
push
xchg
mov
loope
mov
sub
nop
in
adc
push
mov
pop
ja
sbbl
iret
mov
pop
pop
pop
or
jg
loop
daa
dec
mov
ljmp
jo
lock
add
jns
orl
sub
or
pop
pusha
cli
dec
sub
pop
scas
add
sub
cmp
or
sub
jnp
sub
out
sbb
adc
jns
or
ret
pop
inc
dec
cmpsb
test
jne
sub
mov
cmpsl
mov
subl
int3
ja
andl
push
into
popa
adc
ljmp
pushf
outsl
pusha
sub
rolb
push
lea
movsb
into
xor
inc
mov
cli
xchg
pushf
mov
cltd
pop
push
enter
icebp
jno
sbb
daa
arpl
loop
inc
fdivs
jae
add
jne
or
enter
xor
add
aam
negl
pop
inc
add
push
xor
mov
dec
imull
mov
lea
jns
cmp
adc
cwtl
dec
dec
add
dec
dec
inc
lret
fisubs
add
lret
cmp
mov
mov
cld
add
sbb
mov
sahf
mov
dec
mov
repz
or
ds
jnp
xlat
stc
or
cltd
out
xor
cmp
lock
jae
inc
leave
in
xchg
out
cld
jp
push
jo
cmpb
add
xchg
sbb
xchg
or
inc
push
ljmp
shrd
inc
dec
fidivl
xchg
xor
push
lahf
mov
pop
and
scas
xchg
lret
lret
scas
lock
push
add
push
dec
lret
loopne
sub
ficoml
int3
fimuls
jecxz
js
push
mov
out
jl
jno
leave
and
jno
lret
dec
push
adc
jle
out
sub
adcl
xchg
lahf
dec
in
jge
sbb
out
jmp
mov
sarb
das
repnz
lret
shll
out
mov
iret
cmp
jecxz
xor
inc
icebp
xor
lock
int
sbb
inc
test
sbb
xchg
outsb
arpl
clc
in
fmulp
xchg
fstps
cmp
cmp
add
mov
lds
pop
rcrb
jo,pn
pop
out
lods
ljmp
jle
cmp
loopne
mov
add
aad
mov
daa
jle
mov
xchg
in
mov
rcll
xor
or
repz
mov
lds
adc
icebp
inc
fisubs
pushf
xor
lea
jg
mov
push
adc
cmp
mov
dec
push
pop
pushf
shrb
push
mov
ret
sbb
xor
shr
pop
xor
pop
in
jb
adc
xchg
lods
cmc
xchg
or
lcall
mov
ds
cmp
and
inc
pop
out
test
mov
mov
fsubp
sub
cwtl
cmpsb
fmulp
mov
fisttpl
sub
addb
or
add
outsl
stos
seta
cmpsl
mov
push
fnstcw
jp
out
faddl
sbb
xchg
outsb
adcb
push
arpl
lret
adc
push
sti
out
mov
cmp
fsubs
aam
pushf
xchg
add
mov
rcrb
nop
mov
dec
mov
ucomiss
ds
leave
les
pop
dec
movsl
pop
push
inc
ljmp
jno
inc
scas
test
in
ss
jae
jl
add
addr16
sub
push
cmc
mov
outsb
push
scas
jns
fdivs
inc
add
mov
sbbl
push
cmp
mov
rorl
hlt
lcall
mov
jecxz
es
ss
mov
xchg
iret
xor
in
out
lods
cmp
xchg
loop
adcl
mov
les
hlt
jge
pop
push
nop/reserved
movsl
incl
cmp
sub
pusha
not
scas
push
int
xchg
js
stos
inc
sbb
ds
mov
inc
stos
fnstcw
in
mov
push
inc
jne
cmc
adc
dec
mov
xchg
push
mov
outsl
insb
mov
or
in
add
mov
cmpl
dec
sub
jp
lds
addr16
mov
mov
lret
sub
dec
and
stos
inc
inc
inc
ds
enter
out
xchg
jo
mov
int
cmp
pop
sub
push
out
out
xorl
in
outsb
out
popf
mov
cmp
fdiv
push
sub
inc
pop
push
push
push
pop
xchg
cmpsl
imul
addb
lods
movsb
cs
adc
icebp
and
sbb
xor
mov
fisttpl
adc
notb
push
and
pop
and
pop
dec
jl
cmp
fs
cltd
incl
mov
out
out
imul
fucomip
mov
fldenv
mov
orb
lret
sti
jmp
mov
adc
shrl
enter
pop
jecxz
cs
fadds
cld
xorb
sahf
inc
fldl
sbb
jmp
dec
mov
adc
cwtl
jns
xchg
test
and
xor
je
adcb
std
mov
lret
xlat
push
idiv
xchg
pop
mov
pop
jne
cmc
das
jg
loop
dec
push
test
into
sub
shlb
shlb
repnz
cmpsb
or
jl
sbb
xchg
inc
mov
andl
loopne
mov
les
push
cltd
out
adc
sub
sbb
sbbl
scas
xor
es
cmc
rolb
dec
jno
mov
mov
pusha
add
movsb
iret
cmpsl
testl
int3
pop
test
inc
mov
mov
push
cltd
and
fs
data16
outsb
andb
es
loope
popf
icebp
adc
and
inc
movsb
ds
jecxz
leave
mov
dec
outsl
fs
aad
adc
xchg
cmp
sub
jge
add
scas
outsb
cmp
inc
icebp
pop
add
jno
mov
mov
pop
test
add
aas
push
add
xchg
fcomi
lahf
inc
xor
xor
hlt
or
repnz
and
push
bswap
cltd
shl
xchg
lods
or
mov
add
and
leave
cmp
add
call
cmp
imul
xor
xor
sbb
decb
movsb
orl
scas
jp
test
inc
je
in
out
lcall
cmp
mov
fidivrs
bnd
fdivl
pop
stos
out
lcall
mov
stos
cld
lcall
cwtl
das
fnstcw
xor
iret
mov
sub
outsl
lock
lcall
cwtl
outsb
cwtl
loope
xlat
dec
mov
movsb
imul
xchg
dec
loop
adc
into
inc
xor
stos
mov
mov
int3
dec
mov
or
mov
int3
mov
loopne
xlat
mov
inc
xchg
repnz
xchg
lds
push
xchg
mov
dec
subb
cmp
call
sub
out
inc
jbe
dec
xor
fwait
scas
out
int3
dec
cld
xchg
ja
xchg
popf
push
addr16
outsl
add
imul
mov
dec
in
mov
mov
cmpsb
push
test
dec
push
sub
out
cmc
sub
jge
or
int
add
clc
dec
jmp
mov
jno
cltd
icebp
lahf
jecxz
stos
cmpsb
sub
sub
xchg
xchg
jg
test
pop
sub
imul
daa
fwait
jnp
out
cmp
insb
jmp
lcall
push
cmc
mov
fstl
sbb
shrl
add
iret
add
adc
and
jb
adc
cltd
inc
data16
dec
cwtl
jb
loop
mov
xor
repnz
mov
xor
in
mov
sub
pop
push
adcb
jo
push
mov
mov
cmp
shrb
adc
push
pop
loop
pop
sbb
jno
sub
push
mov
pusha
pushl
sub
daa
rorl
mov
jns
sub
mov
xchg
cs
push
dec
insl
xchg
fwait
pop
and
mov
std
xchg
bound
test
daa
cmpsl
andl
dec
xor
sbb
shl
dec
std
fsts
fsts
mov
out
mov
or
fwait
cli
aad
jl
and
jle
pusha
jns
sahf
pop
call
pop
gs
dec
cmp
outsb
in
mov
das
push
inc
data16
andl
mov
sar
lock
or
out
test
sbb
or
adc
jecxz
dec
rcrb
test
pop
dec
jbe
sbb
cmpb
es
sub
add
insl
push
nop
sbb
mov
pop
icebp
pop
and
mov
int
out
ja
inc
arpl
mov
mov
push
sti
mov
inc
lret
fcmovne
js
dec
jg
mov
xchg
int3
lret
mov
rcrl
mov
mov
shrl
popa
test
mov
negb
roll
daa
lret
jp
jne
rolb
outsb
out
cld
xchg
fadds
je
aas
pop
das
fdivrl
xchg
cmp
sbb
inc
mov
enter
rcll
enter
mov
pusha
daa
aas
lret
jp
call
push
pop
push
movsb
dec
dec
push
jge
pusha
adc
pop
push
dec
je
repnz
mov
stos
ljmp
call
and
insl
jge
and
faddl
fucomip
lds
addl
jl
inc
xor
fmull
loopne
sbb
gs
push
mov
and
xchg
jmp
call
mov
mov
or
cmpb
fstps
test
in
lods
pop
movsb
test
mov
lods
mov
dec
out
jo
out
jp
outsb
mov
xchg
push
jmp
mov
je
and
xchg
out
les
cmpsb
pop
subl
mov
xchg
sub
jae
test
dec
shr
or
xchg
and
rcll
inc
cltd
insl
jge
xchg
loopne
sbb
daa
adc
sbb
sbb
cmp
push
ljmp
sahf
stc
xchg
adc
inc
loop
imul
xchg
dec
mov
adc
mov
imul
push
add
jmp
stos
and
mov
pop
shll
pusha
enter
and
lret
into
xchg
sub
scas
int3
push
cli
inc
cmp
ljmp
ss
sbb
scas
call
or
mov
out
sti
pop
hlt
inc
jo
mov
jnp
xor
pop
call
push
fcompl
dec
ljmp
mov
test
sub
loop
mov
inc
jge
frstor
inc
fnsave
xlat
fs
push
xor
jl
add
xchg
or
mov
mov
mov
and
add
inc
push
cmpsl
adc
int3
shll
shrl
sub
jae
repz
in
adc
sub
or
jns
fsub
test
out
orl
ds
sbb
mov
mov
aam
jmp
in
pushf
inc
push
or
push
push
jo
mov
xchg
arpl
pop
or
lods
loop
inc
cmp
xor
lock
insb
jle
mov
ret
out
and
stc
lock
outsb
or
imul
cmp
addr16
cmc
lods
ljmp
lods
sub
movsl
rolb
xchg
les
aas
or
or
lret
xchg
insb
nop
imul
into
cmpsl
sub
xchg
push
ja
inc
rolb
lcall
and
loope
sub
pop
push
jg
in
bound
in
pop
imulb
pop
or
push
jo
insb
or
scas
outsb
mov
pop
dec
pushf
xor
pop
hlt
pop
ror
fldl
jl
leave
sub
lock
mov
sub
and
push
or
data16
loope
adc
ds
lock
inc
test
push
out
inc
leave
sbb
add
cltd
popl
cwtl
mov
fnstcw
test
push
sub
repnz
ret
dec
ds
loope
sti
in
pop
outsb
sbb
ds
dec
ror
outsl
insl
mov
insb
and
sbb
ret
inc
out
pushf
sti
mov
jns
pop
ss
mov
jg
dec
push
pop
push
jbe
cli
adc
mov
adc
ja
ds
dec
aas
lods
lret
xlat
sub
cmp
pop
and
repz
sbb
cmpsb
aam
into
sub
loope
jo
jb
cmp
add
xchg
aad
sahf
rcll
adc
lods
cmp
mov
orb
or
xor
iret
insl
pop
imul
push
lret
mov
out
sar
inc
fnsave
mov
mov
inc
dec
stc
aas
dec
and
aas
xchg
mov
out
rolb
sbb
or
cmc
fsubs
sub
std
cmp
sub
rcrl
test
hlt
hlt
xlat
aaa
out
aam
xchg
movsb
xlat
repz
and
push
xor
and
jbe
add
adc
aaa
xor
push
inc
paddb
imul
sbb
mov
and
adc
mov
insl
imul
test
or
inc
fnsave
cwtl
daa
add
test
stos
mov
add
jne
mov
mov
enter
xchg
add
mov
test
mov
mov
fcmovnu
mov
bound
jbe
sub
ljmp
hlt
inc
dec
jp
add
das
inc
or
lods
pop
inc
pusha
jg
insl
rcr
cwtl
mov
mov
pop
imul
xchg
shr
sahf
ljmp
jle
rcrl
and
ds
movsb
notb
sbb
lock
lahf
lods
jl
push
dec
notb
shlb
pop
dec
xor
jecxz
adc
pop
lret
mov
shld
out
fbstp
inc
daa
iret
cwtd
jno
mov
and
cld
ss
push
movsb
cwtl
mov
out
and
outsb
mov
pop
sub
mov
mov
aad
jecxz
jno
cs
andl
add
dec
rolb
sub
mov
mov
stos
popf
dec
fwait
add
es
xor
cld
push
cld
xor
loope
sbb
mov
les
xor
xor
jae
dec
rep
loope
in
fs
adcb
cmp
movsb
lds
sahf
sbb
nop
fptan
ja
ljmp
je
xchg
movsb
std
insb
ljmp
xchg
cmp
imul
mov
ljmp
pushf
mov
jmp
imul
dec
addr16
mul
je
roll
sub
loopne
aaa
mov
jno
dec
das
adc
ss
stos
das
push
pusha
adc
lods
std
outsb
shl
and
jo
cmp
inc
rcll
cmc
push
xor
mov
push
mov
xchg
mov
inc
adc
lds
outsb
inc
fstpl
pop
ljmp
mov
iret
mov
push
out
pop
or
stos
stos
sub
xor
jmp
mov
or
ret
test
ljmp
jno
outsl
lcall
int3
and
xor
dec
mov
dec
test
xorl
in
cltd
xchg
insl
hlt
xor
and
add
xor
sbb
repnz
pop
outsb
cmp
push
push
inc
clc
adc
outsl
jnp
dec
pop
addr16
sub
add
popf
jg
js
jb
ret
pop
jo
pusha
cs
sbb
dec
cmp
push
movsb
sbb
inc
xor
imul
fs
fisubs
xor
or
mov
sbb
fisubrs
divb
push
jo
sar
push
xor
fistps
dec
and
jns
movsb
insb
rcll
mov
popf
xor
sbbl
mov
sbb
in
and
pop
fisttpl
icebp
cmp
cmc
out
and
push
xor
adc
pop
or
dec
shl
pop
jb
ds
pop
shlb
setg
xchg
out
pop
in
cmp
cwtl
mov
mov
pop
and
adc
add
mov
fs
jg
sbb
pop
das
cmp
cmp
test
sbb
stos
xor
ret
arpl
add
scas
mov
ret
cs
outsb
xchg
bt
cld
and
inc
and
aas
cmp
nop
cwtl
cmc
call
add
scas
mov
loopne
sbb
sub
xchg
mov
scas
das
or
push
btc
add
inc
call
push
test
outsl
dec
adc
std
loopne
ja
pop
adc
repz
notb
cltd
xchg
fwait
fwait
repnz
mov
test
jb
call
sub
push
aad
aas
movsb
add
push
ljmp
xchg
cmp
sbb
cmp
jge
dec
hlt
daa
icebp
and
mov
mov
push
push
int3
mov
je
clc
movsl
je
jg
ljmp
int3
std
test
dec
out
xchg
mov
out
lahf
pusha
out
es
xchg
outsl
mov
call
pop
in
inc
mov
mov
push
test
or
stos
inc
mov
lahf
pop
int3
push
mov
push
ret
subl
or
xor
mov
or
xchg
into
xlat
fdivrs
push
fists
jl
sbb
jnp
pop
cmp
add
cmp
les
adc
movsl
mov
jge
xchg
mov
movsl
dec
pop
icebp
aas
add
fucomip
lods
lret
sbb
lcall
pusha
xor
es
fmull
outsl
push
cmp
nop
mov
pop
lea
mov
sbb
std
jb
or
fistpll
imul
mov
cwtl
mov
or
adc
je
ja
jp
inc
mov
xor
xchg
dec
xor
mov
scas
sub
or
adc
popa
push
cltd
faddl
lahf
enter
mov
xchg
sub
dec
mov
gs
push
or
or
jne
or
dec
fidivrs
mov
or
insb
add
bound
dec
rorb
loopne
jbe
daa
mov
sbb
inc
and
lock
sti
ja
cld
rorb
jg
iret
cmp
jl
jl
enter
jnp
in
into
loop
pop
mov
pop
in
imul
roll
shrb
filds
popa
fidivl
and
push
mov
mov
rclb
mov
or
rclb
cltd
xor
dec
sbbl
mov
mov
adc
adc
arpl
fisttpll
xchg
test
mov
sub
inc
push
adc
movsl
cmp
aas
inc
xlat
scas
or
cmp
pop
cmp
lcall
call
call
mov
inc
and
repnz
inc
push
fisubrl
fnsave
pop
cmc
xchg
cltd
js
lret
mov
sbb
ja
inc
vpunpcklqdq
xlat
repz
movsl
cmpsl
xchg
sbb
icebp
notl
icebp
inc
mov
adcb
dec
lcall
mov
or
roll
add
dec
push
out
inc
test
loopne
dec
mov
cmpb
cmc
mov
sub
rorl
push
out
and
push
dec
mov
jg
mov
mov
push
popf
sub
and
out
fbstp
scas
mov
dec
test
ja
into
mov
xor
pushf
xor
mov
ljmp
rclb
mov
cmp
pop
outsl
push
nop
sub
add
lea
jg
and
fdivr
xchg
adc
sbb
inc
mov
in
andl
mov
mov
rolb
add
movsl
cmp
sbb
scas
bound
cmp
mov
pop
out
ret
pop
push
add
jbe
lds
or
jp
cmp
ret
mov
mov
add
inc
ss
cmp
pop
pop
int3
arpl
mov
pop
scas
lock
inc
adc
int
push
sub
mov
fisttpll
dec
push
cmp
add
repz
xchg
xchg
les
adc
and
mov
mov
and
shrb
inc
test
rcrl
arpl
mov
fiaddl
ja
daa
jae
pop
insl
ret
int3
pop
hlt
std
shl
repz
jl
dec
sbb
xchg
dec
sbb
mov
loope
or
clc
xchg
pop
and
jo
les
dec
loop
sbb
test
push
adc
scas
psrlw
mov
xor
lods
sub
scas
rcl
adc
jecxz
int
and
xor
adc
lcall
push
fisttpll
push
pslld
pop
pushw
movsl
xchg
jp
inc
mov
loop
out
cmp
add
and
pop
push
lea
jnp
shll
aam
jne
repz
sub
mov
pop
dec
or
xorl
hlt
stc
nop
and
jbe
pop
inc
mov
cltd
mov
jecxz
rcrl
or
shrl
sub
cmc
pop
cmp
mov
ror
cld
loop
xchg
pop
out
xchg
mov
jo
outsl
push
fwait
xchg
std
xchg
enter
icebp
ljmp
dec
aas
pop
hlt
insb
push
sbbl
lods
jecxz
pop
repnz
mov
shrl
jb
out
cmpsl
lods
mov
fcmove
inc
fiadds
cld
shrl
sub
into
jnp
and
lret
lret
add
xchg
cs
jecxz
pop
cmp
les
add
mov
arpl
inc
push
mov
ror
adc
mov
jnp
dec
xchg
mov
cmp
push
test
daa
dec
xchg
xchg
sub
ror
popa
add
outsb
mov
jg
dec
xchg
dec
loop
shlb
lret
mov
mov
scas
inc
dec
xchg
cmp
ret
addr16
pop
lret
bound
pop
repnz
inc
subps
ret
scas
inc
dec
mov
pusha
rcl
out
pop
sbbl
dec
mov
mov
lods
inc
cltd
sbb
fs
shlb
insl
shrl
sbb
pop
mov
cmpsl
ds
outsb
mov
lahf
sbb
dec
test
mov
addr16
call
push
mov
in
addr16
xor
sub
pop
mov
je
pop
stc
nop
nop
sub
or
arpl
xchg
sub
fs
lea
repnz
jg
xor
xor
mov
xchg
cs
xor
fs
add
icebp
pop
jne
nop
xor
popl
mov
lea
xor
popa
clc
mov
fs
ljmp
adc
jmp
ret
pop
cltd
xor
mov
mov
sbbl
outsb
out
lahf
ss
jl
mov
popf
aaa
sbb
mov
xchg
sub
jo
inc
movsl
cmp
into
insb
jle
hlt
scas
mov
shl
ja
mov
inc
je
sbbl
test
stos
inc
lods
inc
mov
js
int
cmpsl
mov
into
in
adc
xor
jne
xchg
andb
push
aad
xchg
mov
ret
pop
mov
mov
mov
adc
pop
outsl
shrl
lret
popf
xor
mov
mov
outsb
cmc
mov
mov
mov
outsb
lret
bound
mov
jbe
cs
test
icebp
mov
mov
test
xor
jl
jo
xchg
movsl
mov
aam
jno
inc
movsb
aaa
std
xchg
data16
out
mov
lcall
dec
jecxz
cmp
imul
lock
aam
sbb
adc
repnz
daa
pushf
mov
arpl
xchg
jns
push
stos
mov
movsb
out
fidivl
add
aaa
sbb
sbb
subl
cmpsl
les
mov
test
daa
adc
inc
inc
pusha
idivl
push
in
xchg
sahf
adc
loop
shlb
or
xchg
loop
mov
mov
fstpt
aad
add
fwait
xor
dec
in
push
out
test
shrb
fcmovne
pop
adc
stos
inc
and
and
fs
je
jle
stos
inc
mov
adc
or
fs
daa
sub
pop
inc
push
popf
ja
adc
scas
xchg
dec
in
lret
cld
call
and
iret
insb
insb
mov
jne
mov
xchg
sub
adc
fistps
push
or
cs
pop
pop
jae
dec
jge
push
mov
gs
add
aad
pop
xchg
sub
pop
icebp
icebp
outsb
mov
out
mov
pop
scas
sahf
add
aaa
mov
dec
call
add
mov
movsl
insl
add
push
mov
das
movsl
ss
inc
inc
fidivs
ss
fwait
sbb
jae
sbb
rcrl
push
stc
push
out
mov
mov
inc
xchg
ds
cmp
pop
es
and
push
in
xor
xchg
sub
mov
push
imul
stc
mov
shl
or
out
cs
pusha
adc
mov
lret
outsl
fs
loopne
adc
cmc
xor
jmp
lods
inc
test
mov
dec
pusha
lcall
or
cs
pusha
pop
xchg
lods
cmp
inc
fisttpl
mov
dec
loop
cmp
pop
add
push
movsb
push
xor
mov
jno
push
movsl
cltd
xor
jno,pn
pop
stc
arpl
jns,pn
sbb
inc
jg
jns
xchg
cs
xchg
les
xchg
sub
mov
pop
arpl
jne
mov
mov
mov
jae
stc
lea
mov
inc
jnp
sub
sbb
cmp
cmp
inc
fisubl
mov
mov
fstpl
scas
or
xor
pop
repnz
lock
push
ds
xor
jle
push
sbb
xor
xchg
push
das
addb
add
popf
xchg
dec
mov
je
jne
sbb
nop
xchg
jge
pop
mov
jns
pop
out
popf
sub
cwtl
mov
cmp
lret
addr16
enter
hlt
mov
xor
dec
pop
or
pop
shr
sbb
jecxz,pn
jge
add
cmp
xlat
pushf
pusha
mov
and
jg
nop
sub
push
int3
std
pop
cmc
daa
imul
sti
sub
loopne
iret
xor
mov
daa
push
test
arpl
adc
in
je
addb
shlb
mov
dec
sub
sbb
adc
ss
jae
mov
stos
and
int3
mov
fneni(8087
and
mov
lods
inc
fsub
maskmovq
add
clc
jge
sbb
mov
int3
xor
sub
cmc
daa
aad
call
sbb
jecxz
mov
and
popa
push
lcall
adcb
repz
sub
sub
add
js
xlat
mov
push
neg
js
fidivl
dec
mov
cmp
int
pop
jge
xchg
rorb
sti
in
hlt
data16
or
dec
lahf
mov
imul
sti
jge
mov
icebp
push
out
or
cmp
sahf
push
imul
mov
mov
inc
ficomps
add
xor
push
xor
xchg
mov
and
into
rolb
movl
adc
push
lret
cs
pop
sarl
das
repnz
pop
loopne
in
jle
mov
mov
jnp
gs
adc
and
dec
aad
outsb
xor
dec
das
inc
mov
dec
sbb
movsb
pop
mov
mov
hlt
inc
int
stos
icebp
cmp
mov
fldl
and
mov
xor
hlt
rcrl
aad
or
add
popa
in
sbb
cmc
sub
sti
into
dec
lock
jle
adc
dec
mov
in
mov
xchg
mov
mov
hlt
clc
cs
aam
lds
cmpsl
pop
int3
pop
pop
scas
shlb
shll
push
jecxz
stos
jns
mov
pop
push
mov
ss
or
add
add
cmpsl
cmp
dec
lods
ljmp
shl
add
mov
std
hlt
sbb
repz
sub
out
loop
into
in
sti
mov
flds
arpl
mov
sti
repz
lea
sbb
sub
cmc
jbe
jecxz
fs
mov
stc
popa
mov
mov
dec
mov
test
push
or
xchg
and
test
and
or
lahf
out
push
or
les
xchg
jb
adc
mov
adc
ret
dec
fmuls
xor
dec
stos
adc
adc
cmp
daa
inc
in
jb
enter
int3
cmp
outsb
mov
insb
cwtl
shrl
sub
jge
imul
shlb
add
add
jge
mov
ss
test
int3
data16
xor
jge
mov
jl
inc
mov
test
lret
mov
jg
push
lret
daa
xor
mov
mov
int3
cmp
or
pop
push
leave
imul
iret
bound
in
push
fnsave
aad
int3
xchg
insb
scas
adc
push
sar
mov
cli
les
pop
enter
sahf
movsl
mulb
or
out
out
jno
cli
sub
xor
iret
inc
xorb
dec
or
dec
adc
cli
push
push
stc
rcrb
pop
aaa
push
xchg
push
ja
outsb
dec
sbb
dec
dec
sar
leave
pop
mov
insb
fucom
and
or
inc
cwtl
bound
mov
loope
cld
ficompl
and
mov
pop
dec
mov
mov
aas
dec
pop
rcll
push
jmp
je
fdivl
jo
fmull
inc
into
push
cmp
mov
fsubrs
push
lret
mov
cwtl
push
push
test
lcall
push
push
dec
inc
into
int
fisttps
dec
int
push
push
mov
dec
adc
jo
jecxz
mov
aas
mov
repnz
and
mov
push
mov
outsl
lods
pop
imul
adc
pop
in
fnstenv
pop
sbb
sub
jmp
lret
andb
shll
dec
mov
fadds
push
ficompl
cmp
pushf
xchg
mov
aaa
and
loopne
inc
mov
in
adc
cmp
pop
lahf
jb
out
insl
and
dec
xchg
cmp
sbb
pop
call
cmpsb
movsl
pusha
add
cmp
dec
adcb
enter
dec
into
test
pop
adc
bound
orb
data16
arpl
cltd
inc
sub
ja
push
out
mov
xor
lcall
push
stos
sarw
jmp
xchg
sbb
inc
cmpl
cs
ss
mov
mov
cmp
xchg
jno
sbb
sub
xchg
lods
push
mov
push
mov
roll
mov
cmp
sbb
sbb
mov
leave
pusha
dec
orb
sbbl
push
popf
push
mov
cli
ss
mov
loopne
push
ja
test
cmp
xor
push
push
dec
dec
into
sbb
add
cwtl
addb
pop
movsl
sbb
lods
adc
xor
adc
xlat
pop
sahf
in
fld1
sahf
mov
int
fmulp
addr16
mov
daa
mov
stc
add
sahf
lods
cmp
adc
sbbb
xor
sub
out
outsb
and
xchg
jns
cltd
mov
ret
loopne
jecxz
aaa
xlat
pop
mov
cltd
icebp
mov
mov
test
push
push
cmp
inc
push
mov
inc
push
mov
mov
add
or
xor
add
adc
push
pop
lret
cld
xchg
push
cli
add
mov
adc
adc
push
cmp
mov
mov
out
orl
dec
shrb
xor
add
lock
inc
sti
aad
rcl
test
mov
pop
adc
movsb
arpl
mov
or
xchg
push
pop
fbstp
inc
jae
aaa
scas
add
or
jg
test
xlat
sbb
xchg
imul
inc
jl
inc
mov
gs
push
shlb
mov
cmp
and
ja
pop
int3
adc
mov
mov
or
insb
aaa
fdivl
jne
mov
loop
dec
lds
jmp
xchg
push
cmp
push
daa
add
pop
pop
mov
pop
cmp
xchg
bound
pop
mov
lcallw
jmp
mov
fwait
sahf
add
jbe
out
cmp
mov
out
and
lock
add
cli
sbb
mov
hlt
pop
or
push
out
testb
inc
bound
int
inc
fldl
mov
inc
and
xor
jno
or
iret
dec
add
push
cmpsl
sti
xor
inc
sbb
pusha
mov
inc
xor
rorl
jne
dec
aaa
stos
aam
or
inc
test
dec
pop
xor
mov
or
mov
push
cmp
mov
arpl
ja
mov
fwait
xchg
divl
and
jae
push
rolb
push
and
push
cs
sahf
jl
mov
add
lahf
repz
jg
add
and
jns
dec
aam
sub
or
inc
mov
xchg
clc
inc
test
push
stc
dec
inc
shlb
push
call
or
xchg
adc
inc
test
fwait
cmp
mov
push
push
iret
popf
sub
jb
sub
mov
loope
repnz
and
pop
sbb
and
jns
rcrl
push
leave
inc
pop
sub
aas
scas
loope
sbb
push
cli
xchg
cmpsb
mov
add
in
rol
repz
inc
les
add
dec
mov
jae
adc
gs
jne
leave
mov
mov
mov
cs
dec
aam
push
or
ret
jnp
in
into
aas
lock
or
mov
es
add
xchg
and
data16
int3
jb
leave
push
lret
out
pop
sub
pop
test
sbb
cmp
jg
xlat
jle
popf
addb
pop
aam
imul
dec
stos
cmp
add
push
fistpl
jmp
sbb
fldcw
icebp
sbb
sub
popa
add
fs
and
dec
mov
cmp
pusha
negl
mov
cmp
adc
push
adc
push
in
test
shll
aam
fistl
fsubs
out
adc
jae
lods
insb
add
add
jecxz
or
ds
cs
pop
rcll
mov
or
stc
scas
xor
xor
leave
or
adc
fcoml
shll
xchg
add
jp
mov
stc
xorl
jne
and
xchg
mov
inc
mov
lret
int
movsl
and
mov
repnz
loop
stos
pop
mov
out
xor
gs
jg
clc
xor
xor
cmp
test
dec
pop
shlb
jge
add
mov
loopne
mov
cmp
cltd
lock
sbb
mov
dec
add
cwtl
mov
cld
fadds
push
stos
mov
ljmp
jno
xor
call
scas
loope,pt
and
mov
add
adc
or
or
lock
jbe
fiaddl
cmp
mov
in
sub
cli
je
daa
fiaddl
aas
xor
jle
cmp
rcrb
sbb
nop
lds
scas
add
xor
sahf
arpl
and
jne
push
inc
mov
jl
pop
enter
mov
xor
adc
out
jl
lcall
mov
xchg
aaa
dec
je
cld
xchg
outsb
xchg
dec
and
imul
pushf
repnz
mov
add
push
flds
cmp
movzbl
sbb
inc
enter
dec
repnz
sub
into
mov
or
hlt
pushf
hlt
das
and
mov
push
pop
mov
outsl
cli
sbb
sub
sbb
and
pop
push
popf
inc
mov
dec
mov
data16
call
adc
jle
cltd
cmp
lret
xchg
popa
in
and
mov
out
or
inc
inc
imul
daa
dec
movsl
and
hlt
jnp
sub
mov
fcompl
pop
pop
mov
jmp
mov
cmp
jp
mov
dec
mov
or
jb
and
pusha
fwait
iret
gs
aas
rcll
pusha
das
adc
xor
rolb
push
sub
sbb
imulb
test
shll
and
das
sub
mov
inc
fcmovnb
sbb
pop
add
lock
je
div
ds
mov
hlt
aam
mov
divl
jns
test
xchg
int
jne
mov
sbb
jae
sub
rclb
rclb
dec
push
movb
in
and
mov
mov
in
xchg
jge
sub
mov
fsubl
push
cld
mov
repnz
adc
icebp
fwait
adc
or
lret
in
or
jecxz
out
xor
add
add
call
fnstenv
aaa
xlat
idivb
dec
or
lea
clc
mov
jmp
test
push
iret
gs
sbb
jno
lods
lock
leave
xchg
xchg
in
gs
dec
push
mov
fwait
clc
push
rorb
jb
adcb
inc
movsb
xchg
push
fstps
popl
sub
mov
iret
cmp
cmpsb
addr16
ja
xlat
xor
mov
addr16
xor
mov
push
cmp
in
dec
push
mov
mov
and
dec
aam
pop
lcall
sub
pop
xchg
inc
fidivrl
addr16
xchg
push
mov
push
mov
lods
pop
addr16
out
into
mov
fisttpl
mov
jae
lahf
cmp
sub
jg
or
sbbb
jno
xor
out
sub
cmc
lret
mov
cmp
cmpl
adcb
pop
add
jnp
pusha
cmpsl
icebp
push
cmp
pop
movsb
dec
out
inc
repnz
xor
test
mov
cmc
push
inc
call
clc
xchg
push
insl
rol
mov
sub
or
mov
xchg
pop
mov
call
pop
mov
fdivrl
add
icebp
inc
out
push
fstpt
je
inc
inc
fxch
push
out
dec
test
pop
fnstcw
addr16
xchg
xchg
sbb
leave
push
cmp
and
add
jo
lds
jns
and
mov
mov
add
in
icebp
daa
in
mov
aas
or
into
aaa
push
cmp
xchg
xchg
mov
in
dec
mov
fcmovnbe
jg
mov
xchg
cmp
movsb
bound
scas
loop
call
mov
pop
mov
or
inc
push
in
jo
push
push
xor
fildl
js
mov
scas
jb
xorl
push
jge
adc
adc
xchg
ljmp
mov
mov
xor
call
pop
rcl
stos
inc
or
insb
cltd
test
std
outsl
movsl
mov
cld
dec
jecxz
fwait
enter
aaa
adc
repz
cmp
push
cli
movsb
cwtl
stc
sub
sub
mov
outsl
stc
inc
mov
pop
or
dec
mov
jae
test
mov
test
cmpsl
shrb
mov
out
add
dec
mov
out
dec
mov
imull
and
mov
adc
outsl
popf
mov
out
or
sub
adc
push
nop
jg
testb
add
ror
clc
xor
mov
inc
bswap
loopne
lret
jb
in
jle
rolb
dec
mov
cltd
mov
add
xor
out
lock
fidivl
aam
lret
xlat
pop
test
ret
mov
mov
xlat
fstpl
pop
pop
sbb
cmp
mov
ljmp
mov
sbb
cmp
sbb
and
sub
xchg
addr16
push
aas
pop
repz
jb
add
dec
daa
mov
fs
add
lock
pop
arpl
xchg
sbb
jmp
xor
out
dec
fdivl
loope
lods
xchg
sub
jecxz
fndisi(8087
adc
rcll
fnstenv
or
in
jl
push
aam
xor
add
cli
in
push
mov
dec
in
pop
pop
aam
lret
lock
ds
das
iret
cmp
xchg
sub
lahf
fstpl
sbb
lcall
iret
xchg
mov
mov
pop
mov
cmpsb
imul
mov
and
xchg
jne
and
jne
test
flds
out
xor
sub
cmp
adc
daa
movsl
ret
test
mov
jae
mov
mov
imul
xchg
dec
or
orl
cs
in
loope
mov
jmp
and
adcb
cmp
xchg
fdivs
in
fidivrl
fldenv
out
aad
lret
ss
lods
das
xlat
and
or
aas
mov
enter
push
jno
pop
rclb
aam
lahf
push
sub
popa
or
inc
ds
ret
inc
push
cmp
push
popf
out
lcall
sti
xchg
clc
xor
mov
mov
pop
adcl
sub
in
or
mov
sahf
mov
lahf
inc
int
js
into
add
nop
out
dec
mov
cmp
iret
clc
sub
vunpcklps
in
int
mov
jge
test
push
push
or
inc
mov
loop
push
pop
or
icebp
cmc
cmp
sbb
mov
mov
repz
mov
or
loop,pn
jge
stc
push
cmpl
mov
push
sbb
sub
push
in
sbbb
je
jns
fbstp
xor
addr16
filds
pop
pop
cmp
mov
xchg
xchg
out
dec
insl
cltd
pusha
cli
push
lods
popf
andl
rcrb
and
pop
pop
or
sbb
mov
imul
hlt
mov
sbb
mov
cld
adc
xor
jno
into
shlb
into
xchg
loope
inc
ljmp
and
subl
xor
cmp
or
dec
pop
push
mov
shlb
xchg
out
push
lods
loopne
addr16
adc
inc
mov
xor
push
mov
inc
cmp
xor
inc
movsb
push
mov
push
push
jmp
inc
dec
inc
mov
push
ja
cmp
cmp
into
dec
clc
movsb
dec
ret
stc
stos
mov
add
lds
adc
or
loop
icebp
imul
ss
lea
sbbl
add
ja
shlb
adc
cld
and
cmc
mov
sbb
das
imul
fcoms
stos
push
lret
sbb
cmpb
mov
into
push
jl
leave
lcall
rorb
sbb
or
mov
loop
pop
in
sub
inc
negl
inc
rclb
xchg
jb
mov
mov
cmpsb
cld
gs
sub
dec
push
sarb
sub
dec
in
inc
lret
psubb
roll
shr
adc
enter
roll
or
mov
adc
mov
cs
push
push
push
dec
rcrb
xchg
imul
xchg
lea
pop
notb
dec
aam
je
arpl
addr16
inc
arpl
bound
xchg
mov
sub
lahf
sahf
xor
ja
std
push
gs
cmp
xchg
js
pop
clc
xor
lock
aam
loope
push
ret
in
xor
jnp
or
mov
std
ret
inc
xchg
int
pushf
add
cmc
mov
push
pop
into
rep
bound
call
add
and
loopne
fsubs
movl
add
pusha
repz
mov
or
jle
into
xchg
xchg
out
pop
iret
int3
sbb
cmp
cli
divb
lds
fildl
stos
psubb
xchg
js
xchg
pop
and
movsb
cmp
inc
mov
fsubrs
push
leave
mov
loope
mov
ficomps
cmpsl
movsb
ja
or
cmp
mov
pop
scas
cs
scas
mov
ljmp
pop
or
xchg
pop
stc
fildl
xchg
lds
les
pop
frstor
arpl
pushf
add
and
jae
insb
lcall
jnp
int
dec
cli
xchg
test
decb
xor
sahf
jnp
popf
call
in
popf
leave
cmp
mov
out
cmp
adc
jecxz
scas
pop
pop
ret
add
dec
mov
mov
jnp
mov
int3
inc
xchg
push
orl
nop
addr16
dec
rcll
jge
pop
lahf
xor
or
mov
cmp
popf
and
pop
icebp
mov
and
mov
xlat
inc
mov
or
mov
ret
jecxz
dec
mov
sub
repz
push
xor
dec
mov
loop
test
sub
test
sub
push
xlat
outsb
mov
ret
daa
lods
out
mov
lea
shll
movsb
pop
addb
out
push
mov
adc
or
lcall
jle
lds
test
ficoms
lahf
loopne
mov
shlb
data16
dec
leave
test
jo
xor
push
push
pop
push
comiss
scas
dec
testl
fstl
or
imul
xchg
ret
jge
and
lret
xchg
jnp
int
cmpsb
shl
sahf
xorl
adc
scas
inc
and
pop
cli
dec
loope
jl
fistpll
cmp
xor
cmp
lea
aad
jmp
push
jmp
data16
fcmovnbe
push
fldcw
arpl
cmp
jecxz
mov
sub
mov
pop
icebp
inc
mov
add
mov
xor
jmp
jo
js
dec
ds
pushf
mov
jno
jo
xlat
addr16
mov
xor
rorb
push
pop
fstpl
adc
inc
fwait
mov
ljmp
mov
loop
sbb
fistl
gs
cmp
pop
cltd
sub
mov
in
in
jl
cmpsb
lods
or
sub
mov
push
mov
loop
push
movsb
add
xor
mov
notl
adc
test
xor
imul
popf
sti
mov
jp
dec
insl
adcb
cltd
inc
mov
and
and
inc
xor
ja
pop
hlt
cmp
jnp
ljmp
loope
mov
outsl
add
aas
ret
insl
xchg
pop
adc
ss
push
mov
cltd
mov
fsubl
mov
mov
ds
rep
add
inc
mov
js
jp
add
es
das
pop
in
pop
pop
jp
dec
lods
inc
in
jb
aam
call
repz
and
movsl
aaa
ds
das
testl
jp
or
cs
das
pusha
mov
mov
mov
test
imul
pop
xchg
daa
repnz
in
ljmp
lcall
and
lock
cmp
out
cmp
outsl
push
cmp
fwait
xor
pop
nop
daa
jecxz
push
aad
push
mov
not
outsb
sub
lds
lock
dec
jecxz
pushf
or
pop
or
mov
out
pop
pop
rcll
dec
inc
loop
jbe
fs
xchg
xor
cltd
decl
xor
push
fimuls
mov
movsb
sub
mov
imul
sbb
mov
xor
ret
pop
adc
imul
repnz
jmp
call
aas
cmp
xchg
jnp
shrl
xchg
pop
cltd
xor
scas
mov
aad
lret
notb
aas
xor
test
cmp
pop
test
jns
xchg
add
shl
push
cmc
es
lahf
fwait
inc
jl
js
es
out
insl
sbb
test
js
hlt
dec
cmp
xchg
lds
sub
fmuls
xchg
rcl
adc
and
adc
into
repz
ret
push
jmp
sub
pop
mov
aas
incl
pop
ret
lods
decb
test
dec
mulps
or
stos
ret
fwait
pop
loopne
arpl
fistpll
cmp
pop
faddl
insl
lds
or
rclb
sub
data16
sub
std
add
popf
outsb
pop
mov
push
jne
fwait
mov
movsl
sbb
jg
mov
inc
push
loop
int3
insl
popa
pop
mov
jns
lcall
mov
ja
mov
and
push
push
jmp
or
fstpl
out
pop
outsb
out
inc
and
pop
or
lret
xor
fwait
xlat
outsb
int
add
and
jge
and
movsl
or
cmp
xchg
lods
sub
push
mov
cli
sub
xchg
adc
cmp
sbb
mov
test
xor
add
dec
mov
xor
push
sbb
pop
inc
rdmsr
ret
fsubl
jno
mov
mov
mov
imulb
aam
push
rclb
sbb
sub
popf
mov
mov
and
mov
rcrl
cmp
cmp
mov
int
mov
testl
imul
xchg
sub
aas
sub
jecxz
clc
imul
push
jb
das
inc
jb
cld
pop
clc
add
hlt
outsl
and
aaa
sub
and
std
fidivs
jge
aam
cld
insl
cmp
insl
push
add
fimull
xor
lea
cmp
dec
cmp
stos
mov
rcll
outsb
or
popf
sbb
mov
test
sbb
adc
push
jns
and
inc
cmc
xchg
adc
in
jnp
in
mov
lock
loop
sbb
lock
sbb
sub
aad
mov
adc
sub
pop
sbb
je
movsl
and
lahf
xchg
insb
inc
fcomps
xor
push
lock
ljmp
jge
add
mov
dec
sub
outsb
add
lret
inc
les
jl
cli
insl
lcall
dec
lock
inc
xor
xor
jb
mov
dec
adc
ss
mov
or
push
dec
inc
fstpt
lds
into
cmpsb
cmp
lret
jno
jmp
pop
cmc
insl
inc
push
jmp
mov
add
lret
ds
sub
and
jbe
push
cmp
jne
push
popf
xor
jnp
cltd
lods
push
mov
mov
stos
aad
imul
and
dec
je
fucomi
adcl
sub
outsb
pop
push
cmc
pop
test
mov
testb
mov
inc
testb
imull
roll
dec
outsl
in
mov
movsb
and
jnp
aad
push
data16
hlt
fwait
dec
adc
lahf
lds
sbb
jne
daa
inc
hlt
lods
cmp
push
jl
dec
mov
jno
mov
xor
data16
ja
jbe
jecxz
adc
icebp
push
and
int3
xchg
xor
and
lea
arpl
pop
sbb
mov
xchg
dec
pop
add
or
mov
mov
bound
leave
inc
or
sbb
fwait
jg
jecxz
lret
pop
rolb
add
xor
jge
xchg
mov
cwtl
inc
test
jecxz
fcoms
inc
push
lret
sub
fadds
and
aam
cmc
xor
or
call
jle
daa
push
push
std
movsl
xor
pop
add
aaa
aad
test
inc
test
outsb
hlt
mov
push
std
movsb
movsb
out
jae
mov
push
cld
ja
aad
mov
sub
loopne
ret
adc
inc
push
stc
xchg
sub
pop
pushl
cmpsl
cmp
jns
push
sti
xchg
outsb
xlat
jp
popa
xchg
cmp
mov
stos
sarl
and
mull
call
xchg
decl
popa
sahf
jmp
mov
mov
scas
mov
mov
mov
mov
flds
rcrb
cld
pusha
mov
int
fnsave
popf
push
cltd
inc
and
inc
pop
push
mov
mov
gs
dec
mov
pop
shlb
cmp
fadds
mov
scas
clc
gs
or
xor
fistl
arpl
dec
adc
pop
push
xor
testb
ljmp
cmp
xchg
gs
or
std
popa
fsubl
mov
or
jmp
adc
and
inc
scas
sub
aaa
outsb
test
jl
jo
xor
cs
stos
mov
repnz
mov
stc
jmp
in
mov
xor
dec
jo
sbb
cwtl
jb
jne
push
add
outsb
lea
dec
jle
jne
xlat
test
xor
mov
aad
sbb
sub
movsl
adc
test
stos
ja
pop
clc
xlat
test
int
xor
jl
add
mov
push
add
into
xchg
ja
ret
adc
into
sbb
pushw
das
stos
pop
jle
in
xorl
inc
push
pop
rcrl
pop
cld
inc
sbb
imul
sti
pop
je
hlt
jmp
repz
xor
mull
mov
mov
cmpsb
movsb
das
mov
mov
ret
cmp
js
out
loopne
xor
ret
sub
mov
mov
mov
jecxz
inc
adcb
sahf
cmp
in
fidivrs
push
mov
fs
in
xor
sub
outsb
dec
mov
mov
inc
stos
mov
stos
push
mov
out
movsl
das
jne
stos
xor
push
mov
cmpsl
sub
jns
inc
adc
ljmp
fnstenv
pop
mov
mov
fidivs
adcb
pop
out
sti
mov
popl
or
mov
movsl
nop
fcmovnbe
out
push
pop
pusha
roll
sti
rorb
shl
dec
mov
movsl
lds
jg
mov
popa
aam
jbe
int
mov
mov
lds
ljmp
xchg
or
mov
stos
jle
movl
sbb
mov
pop
add
mov
xor
negl
mov
mov
punpckhwd
pop
mov
aam
into
test
cltd
aad
pop
int
add
jo
jb
push
mov
imul
push
cld
ss
mov
sub
gs
lods
xor
stc
dec
adc
push
shlb
add
add
add
ljmp
lock
jb
in
inc
pop
ljmp
mov
fiadds
movsb
ja
pop
jb
add
mov
jl
xor
scas
mov
stos
repnz
test
mov
addr16
test
mov
arpl
lods
scas
xor
rcrb
fdivrl
cld
cmp
sub
jo
mov
sbb
xchg
repnz
push
push
divl
xor
mov
ror
cmpsb
dec
adc
sbb
mov
filds
in
insb
lock
repnz
scas
xchg
sti
gs
sub
popf
gs
adc
add
mov
jmp
mov
jne
inc
test
inc
mov
test
mov
xchg
aaa
test
es
aam
sbb
flds
ret
and
inc
mov
lods
jns
xchg
push
lods
xor
mov
add
mov
mov
mov
inc
into
dec
cld
bound
mov
mov
mov
test
lea
andb
cmp
mov
test
lods
xor
lret
push
jno
dec
lahf
pcmpgtw
push
enter
mov
hlt
aas
mov
xchg
in
leave
mov
lods
adcl
xchg
inc
xchg
mov
pop
int3
mulb
sahf
jg
mov
xorb
sti
pop
aad
fnstsw
or
out
sub
pop
mov
mov
ljmp
cwtl
pop
idivl
mov
and
insb
arpl
cltd
pop
fs
cmp
adcl
lcall
pushf
push
cmp
ds
ret
outsl
aam
mov
ret
rclb
insl
sbb
xor
and
js
fdivrs
movsl
jns
jl
les
add
or
test
push
decl
loop
xchg
mov
push
into
mov
fwait
cmp
xchg
and
cmpsl
out
imul
mov
or
sahf
pop
mov
push
cmp
aaa
insl
mov
out
ss
adc
mov
or
adc
push
sub
push
shlb
je
push
and
fwait
das
sbb
jge
adc
inc
das
hlt
scas
sub
loopne
lret
test
in
in
cli
pop
dec
cli
aaa
mov
cmpb
rcr
fidivrs
push
les
mov
cmpsl
dec
or
lods
stos
sub
aam
nop
sbb
fwait
cmp
inc
push
add
pop
shll
subb
lock
aas
pushf
dec
pop
sahf
subb
outsl
daa
xchg
aam
sub
xchg
cmp
xchg
cmp
and
nop
hlt
xor
ljmp
loop
xlat
and
fwait
pop
xor
cmp
out
sub
lcall
lahf
sbb
inc
or
mov
enter
dec
adc
leave
lret
fcomi
cmp
divl
pop
cs
cmp
sbb
out
mov
dec
adc
fldenv
dec
aas
sbb
addr16
fidivrs
push
int3
dec
data16
cmp
cmp
lret
aaa
nop
pop
ret
daa
cs
les
ror
mov
push
rol
xchg
push
sbb
inc
adc
cld
popa
pop
std
in
push
add
sub
mov
push
and
xchg
nop
cmp
push
xchg
cs
je
push
and
mov
dec
mov
jbe
xchg
js
icebp
pop
and
scas
imul
sub
xchg
push
sti
mov
lods
fiaddl
and
pop
int
xor
mov
mov
jle
ja
push
lret
mov
jno
lock
cmp
sbb
and
push
add
mov
jl
and
aad
mov
or
insl
and
pop
xchg
sbb
push
movsl
or
inc
fdivr
sub
xchg
mov
or
or
ss
jbe
fldl
imul
jns
loopne
cmp
xor
leave
repnz
orl
in
mov
mov
sub
out
insb
xor
pushf
cmp
cld
xor
repnz
dec
mov
cmpsl
push
add
js
outsb
mov
fbstp
sub
jle
cltd
cmp
arpl
push
xor
mov
dec
xchg
inc
out
in
popa
cld
in
mov
mov
mov
shl
stos
sub
push
sti
xchg
inc
adc
push
inc
mov
sub
test
mov
insl
hlt
lcall
push
aad
sub
xor
sbb
push
push
xchg
mov
adc
and
inc
js
scas
into
xchg
jmp
fistpl
xchg
dec
adc
mov
mov
bound
pop
add
pop
insl
icebp
mov
daa
mov
cmpsl
cmpsb
xor
je
mov
js
cmc
mov
fstl
add
into
lahf
cmp
mov
or
pop
dec
mov
rolb
in
push
lcall
xor
loope
inc
push
pop
les
xchg
iret
xchg
adc
fwait
inc
adc
add
add
lahf
nop
es
clc
sub
inc
adc
scas
inc
adc
pop
dec
or
mov
mov
lds
add
pop
and
add
push
cltd
notb
mov
dec
jmp
fmull
fcoml
rorb
or
js
test
lret
insl
and
imul
mov
mov
mov
outsb
ficoml
xchg
cmp
push
in
lea
jbe
fistl
ret
into
sarl
adc
lahf
aas
or
rcll
notl
mov
fsubrs
mov
jp
ljmp
sbb
xor
mov
cltd
mov
outsb
in
xlat
outsb
and
cmc
mov
leave
xchg
sbb
leave
dec
pop
add
shrl
dec
jno
sub
ja
mov
xchg
sub
out
xchg
dec
jmp
es
sti
push
out
cmp
dec
adc
rep
out
jo
xchg
rorb
pop
jecxz
jg
dec
cmc
jae
mov
test
ja
adc
je
or
mov
sarb
or
xor
xchg
cli
add
test
fdivrl
mov
mov
cli
xor
stos
sub
jns
mov
inc
mov
mov
int
and
loopne
sti
dec
or
or
arpl
rcrl
lahf
push
push
add
xchg
inc
loope
pop
sti
add
dec
pop
jl
out
jg
adcl
dec
int3
xlat
nop
daa
or
scas
inc
jl
mov
inc
jb
pusha
call
adc
sarb
pop
mov
pop
jmp
jbe
addr16
shrl
sbb
mov
push
push
xchg
and
ljmp
in
xor
orb
les
mov
je
shll
xor
loop
loope
push
lds
pop
inc
lcall
scas
push
mov
into
fnstsw
sbb
lods
leave
outsl
xchg
cmp
push
test
scas
inc
rorb
inc
fnstenv
iret
cmpsl
xor
sub
lods
pop
pop
aam
repnz
ljmp
imul
rolb
arpl
push
add
stos
mov
hlt
pop
idiv
stos
push
sar
in
movsb
iret
out
adc
mov
push
sbb
into
mov
cmp
cld
xchg
scas
pop
ret
rcl
jns
imul
lret
xchg
cmpsl
pop
scas
xor
jo
shll
bound
test
adcb
mov
xlat
mov
ss
sub
int3
jecxz
dec
adc
icebp
das
mov
jmp
imul
hlt
insb
cwtl
jle
or
pop
sbb
idivl
sub
mov
inc
or
dec
fldl
dec
faddl
lcall
sub
testb
test
mov
test
sbb
mov
push
add
cs
push
cld
jl
imull
jae
das
in
mov
inc
shll
movsl
movsl
sahf
sbb
out
mov
jo
popa
dec
push
add
mov
xchg
xor
ret
leave
add
mov
insb
jo
mov
fbld
stos
popl
xor
xchg
sarb
xchg
adc
push
mov
fstpt
adc
cwtl
push
pushf
cmp
rcl
dec
out
es
xchg
mull
lcall
jmp
inc
sbb
and
sub
inc
int3
xchg
xor
mov
xchg
xchg
inc
cmp
mov
pop
scas
sub
hlt
shrb
cmpsb
call
clc
sub
out
clc
push
push
xchg
icebp
mov
adc
pop
repz
ret
adc
jns
sbb
mov
add
inc
mov
dec
push
jo
ret
xchg
gs
clc
adcl
in
sub
data16
cmc
pusha
jbe
call
mov
mov
lcall
incl
pop
xchg
push
add
and
xchg
inc
lahf
cmp
iret
insl
les
test
fdivl
sbb
push
repnz
insl
and
pop
repz
mov
movsb
push
stc
sub
inc
or
cmp
test
xor
xchg
in
adc
aas
lds
and
pop
mov
add
jg
push
mulb
outsl
mov
xchg
rcpps
jae
xor
mov
mov
scas
push
add
xchg
or
xorl
pop
and
jo
cltd
cmp
fsubrp
inc
fstpl
nop
aaa
into
sarl
inc
mov
fs
dec
faddl
jno
in
jbe
fs
push
enter
inc
sbb
iret
xchg
das
cmpsl
aam
pop
cmp
mov
outsl
mov
pop
pop
pop
std
inc
sbb
por
pop
jnp
filds
cmc
cmp
js
push
scas
daa
stos
xchg
xchg
dec
roll
mov
js
xchg
mov
mov
je
jo
mov
adc
mov
popf
pop
inc
or
sub
cmp
lods
push
nop
cmp
mov
stc
arpl
lods
les
sub
insl
out
lds
cmp
std
test
or
scas
movsl
sub
stos
xchg
cmp
sub
sub
mov
mov
stos
cmpsl
cli
and
iret
jnp
dec
adc
inc
or
je
xchg
push
sti
dec
stos
jns
push
cld
popa
xor
pop
adc
xchg
dec
test
stos
jo
inc
cmp
imul
iret
data16
mov
and
clc
adc
lahf
imul
into
mov
shrb
and
jg
jp
mov
aas
stos
sbb
add
mov
jecxz
into
xchg
sub
cmp
test
or
mov
aad
pusha
xchg
jecxz
mov
or
test
jg
ja
cmp
or
xchg
pop
sub
scas
out
jno
mov
out
jno
or
pop
add
jmp
sub
inc
mov
loop
xchg
imul
push
adc
repz
push
movl
push
dec
daa
pop
sub
inc
xor
mov
cmp
mov
arpl
addb
dec
push
scas
pop
add
js
mov
arpl
dec
dec
mov
mov
cmpsb
jnp
ret
adc
xchg
sbb
mov
sbb
aam
xchg
xchg
ret
mov
xchg
push
rcr
jge
nop
sbb
cmp
inc
mov
negl
mov
xor
sub
scas
mov
movsl
in
mov
out
sar
pop
fcmovne
sub
push
imul
mov
data16
sbb
jmp
daa
inc
into
jg
add
ljmp
pop
cmp
iret
lea
and
mov
dec
adc
xor
aad
add
pop
jbe
sub
call
sbb
push
imul
repz
jg
adc
mov
dec
adc
xchg
mov
lods
xor
or
pusha
xchg
cmp
xor
lcall
lahf
jle
sti
push
sbb
jge
push
add
leave
xchg
inc
mov
insb
lret
bound
sarb
out
cmp
sbb
lock
inc
dec
xor
cld
inc
adc
jmp
insb
dec
add
stos
xchg
repnz
lea
sbb
mov
movsl
xor
and
insb
add
jg
rcll
xchg
pushf
cmp
arpl
hlt
pop
clc
pop
jmp
cli
jp
push
iret
mov
test
nop
bound
sahf
imul
repnz
jbe
pop
test
es
leave
cmpsb
cmp
in
scas
xor
gs
add
pop
or
sbb
push
movsb
stos
xor
xchg
xor
or
push
cmp
orl
out
jb
and
and
ret
jae
aaa
pop
and
mov
lods
sub
push
test
or
jl
dec
xrstor
and
ret
out
jmp
out
cmpsb
cmp
mov
rolb
jl
std
push
add
mov
out
push
out
xchg
and
mov
cmpl
lea
mov
scas
inc
or
cs
imul
dec
nop
mov
or
cmp
push
out
icebp
pop
pop
hlt
imul
mov
mov
fiadds
stc
rorl
fmull
jmp
and
fcomps
add
push
stos
xor
sbb
aaa
cmpsb
in
pop
jl
shl
add
or
dec
pop
sbb
inc
pop
mov
xchg
scas
sub
fcompl
dec
sub
mov
fwait
call
lds
out
mov
and
mov
inc
push
insb
pop
add
xchg
and
xor
push
inc
mov
cld
subl
out
sub
sub
scas
jle
jb
and
lds
sbb
imul
shrb
adc
pop
mov
cmp
inc
ds
les
mov
mov
inc
movsb
arpl
ret
xchg
mov
push
pop
add
mov
imul
sub
xchg
aam
fwait
cmp
lods
test
cli
pop
test
gs
fnsave
mov
clc
out
mov
jecxz
repnz
xlat
ljmp
stc
mov
dec
jo
dec
or
lock
xchg
xchg
xor
negb
mov
adcb
inc
nopl
roll
cli
data16
std
pop
jno
or
sahf
shll
mov
adc
mov
inc
cmpsl
sub
fidivs
push
out
inc
adc
add
sbb
iret
xlat
sbbb
mov
sti
in
cmp
cmpsl
push
test
push
add
and
fisubrs
scas
mov
jmp
cwtl
mov
mov
fiaddl
stos
cmp
mov
or
mov
jmp
adc
dec
outsb
ret
and
adcl
jbe
insl
repnz
popa
inc
or
mov
popf
add
adc
int3
out
jo
sub
jge
add
mov
and
push
sub
sarl
mov
fidivs
pop
loop
outsb
mov
nop
inc
mov
cmp
into
scas
inc
fcmovnu
mov
cs
loop
loope
cmp
popf
dec
in
push
mov
in
mov
mov
xlat
aam
mov
or
jb
jle
faddl
add
sbb
dec
repz
add
mov
je
pop
add
gs
js
push
fstl
mov
outsb
pop
jb
jle
mov
jmp
xor
xchg
sub
jmp
cmp
xchg
gs
push
jbe
sub
fcmovnbe
jge
das
loopne
and
mov
fs
xorb
ret
loope
lcall
leave
loope
mov
stos
xor
out
popf
lods
sub
clc
lret
mov
lahf
cmp
push
lea
icebp
aas
pushf
test
repz
mov
inc
repz
xchg
stos
js
mov
pop
xorb
fisubrl
and
jb
adc
jmp
ljmp
ret
mov
stos
out
jae
pop
sub
lret
nop
cld
pop
test
inc
or
adc
lea
fwait
push
jle
push
sub
sarb
pop
pop
sbb
xchg
pop
xchg
adcb
rcll
dec
or
push
sti
sub
insl
xor
dec
out
mov
lahf
insb
repz
addr16
aas
leave
sbb
daa
lods
in
dec
mov
cs
sub
imul
mov
cs
push
sub
jmp
cmp
mov
lret
jns
inc
and
fidivrs
repnz
jg
mov
cmp
push
loopne
movsb
push
dec
push
in
mov
jg
xor
inc
stos
das
push
push
cmp
mov
jne
mov
in
insb
fidivrl
hlt
inc
movd
fisubs
popf
mov
mov
sub
lock
push
rolb
add
adc
pop
xchg
cli
pop
dec
xchg
xchg
push
add
fidivrl
cmp
xchg
lock
add
cli
xchg
pop
mov
xor
sbbb
stos
lea
movb
lds
pop
adc
aas
dec
int3
xchg
imulb
inc
or
xlat
jnp
xchg
test
mulb
dec
adc
mov
mov
scas
dec
adc
std
test
pop
and
mov
mov
cmp
or
loopne
push
add
fidivrl
jo
test
andb
mov
push
test
cli
mov
outsl
lahf
dec
xor
cmc
std
push
dec
nop
std
bound
mov
shrl
add
push
mov
test
mov
testb
pop
and
inc
iret
orb
sarb
jo
adc
enter
cmp
pop
add
call
add
ds
mov
cmpsl
xor
mov
or
test
mov
inc
aam
jl
lret
or
outsb
mov
bswap
add
push
add
stos
and
fsts
xchg
adc
das
jo
or
xchg
popa
insl
hlt
in
xchg
divb
popf
xchg
jns
jge
aam
lret
call
movsl
addl
mov
test
cmp
jae
pop
add
arpl
or
or
packuswb
cmp
jne
add
jmp
aas
push
je
sbb
lahf
inc
popa
dec
stos
xor
cltd
fs
and
jp
xor
and
xchg
nop
sbb
or
inc
or
pop
adc
movsl
and
lock
mov
and
inc
loop
xor
ret
test
mov
fsubrs
inc
or
jp
pop
cmc
sub
imul
lret
nop
rorb
cmp
add
rclb
shll
lods
jle
addb
js
pop
in
mov
and
scas
sub
cmpsb
das
in
mov
dec
cld
in
aas
xchg
sbb
jl
or
out
fbld
push
repnz
and
sbb
lcall
scas
add
sub
cmpsb
add
arpl
pop
incl
orl
sbb
nop
pop
pop
add
stos
jnp
jmp
cld
dec
adc
sub
rorl
out
lods
adc
in
mov
faddl
jecxz
hlt
push
mov
inc
or
mov
arpl
aaa
cwtl
ficoml
and
cmp
lds
inc
push
push
rclb
scas
adc
push
test
mov
mov
ret
fistpl
lret
xchg
mov
mov
cmp
iret
pop
decl
fldcw
mov
cltd
or
push
or
xchg
cmp
iret
push
sti
icebp
aam
lret
sbb
je
int3
dec
adc
ds
mov
jge
xor
jmp
int
cmp
or
mov
adc
xor
fwait
cmp
scas
and
ds
cmc
les
mov
or
loopne
or
arpl
xor
inc
push
push
add
lcall
int
push
mov
xchg
push
adc
push
into
std
push
jno
mov
jo
jns
shrb
mov
add
and
pop
hlt
and
jns
shlb
gs
loope
jne
inc
addr16
stos
jmp
sub
insl
push
mov
addl
gs
int
aam
mov
xchg
cmp
loope
enter
adc
dec
or
shl
test
sbb
test
mov
rorl
inc
cmp
aad
lcall
pop
test
ret
fstpt
xor
sbb
addr16
sahf
cmp
jle
inc
or
std
fwait
aaa
push
sbb
mov
sbb
mov
rcrl
fidivs
adc
dec
cli
and
pop
xchg
mov
enter
mov
cmpsl
sbb
push
stc
pusha
dec
adc
mov
adc
push
dec
and
push
in
and
les
lods
ret
add
push
aaa
dec
clc
arpl
xchg
cwtl
ss
pop
add
xchg
and
repz
sarl
jge
jg
stc
data16
clc
push
inc
test
lcall
jb
cs
mov
repz
imul
mov
je
mov
push
push
mov
es
push
dec
pop
movsl
outsl
cmp
mov
arpl
insl
cltd
fs
lret
and
sti
sbbb
les
cmpsb
pop
aas
push
test
mov
mov
xlat
cltd
push
movb
jmp
test
mov
inc
or
movsl
lock
ret
inc
xchg
cmp
push
mov
mov
data16
cmp
xor
dec
or
fistpll
jae
icebp
or
and
loop
mov
bound
and
ja
or
or
push
pop
sti
xor
mov
xor
sub
dec
jp
js
mov
lds
fdivp
add
push
dec
pop
incl
test
flds
iret
mov
push
push
and
mov
dec
test
xchg
mov
mov
sub
mov
jbe
aad
mov
or
pusha
das
xchg
pop
xchg
sub
fadd
mov
shll
xor
mov
mov
lret
loopne
add
mov
ret
mov
dec
add
lret
repnz
shll
into
push
vpunpcklwd
inc
callw
fistpll
sub
js
or
push
popa
jmp
add
stos
std
pop
movsb
clc
push
add
sub
dec
pop
pop
call
js
je
inc
xlat
adc
sub
sbb
xchg
cmp
rclb
inc
jae
into
jle
faddl
and
imul
aaa
sbb
pushf
xor
fmulp
fdivrl
pop
daa
mov
ret
push
add
dec
push
mov
jle
mov
xchg
inc
pop
add
in
mov
fidivrl
cmpsb
rorb
and
pop
mov
test
negb
inc
pop
add
test
adc
mov
dec
mov
mov
mov
iret
pop
jg
cltd
sbb
push
int
pop
pop
clc
cmp
fldl2t
jne
test
dec
inc
negl
xchg
adc
xor
sbb
pop
push
cld
pop
pushf
cmpl
inc
dec
inc
dec
or
xchg
mov
das
lret
ljmp
adc
dec
icebp
fs
pop
adcb
into
mov
inc
imul
push
jbe
mov
int
out
inc
adc
fidivrl
outsb
inc
adc
bound
in
arpl
dec
stc
pop
cli
cmp
jl
xchg
test
adc
sarl
jnp
adc
sahf
lret
test
pop
xchg
inc
out
xor
mov
jge
addr16
popf
cmp
mov
popf
and
cmc
popa
or
js
pop
pop
repz
dec
or
mov
inc
out
push
dec
jb
cmp
sahf
cmp
xor
cwtl
frstor
mov
stos
mov
add
in
xchg
adcl
fstpt
ficompl
mov
shll
mov
or
xchg
fisubl
test
mov
lods
xor
jo
in
shll
xor
lcall
shrb
cmpsl
iret
out
outsb
ret
xchg
das
je
addr16
insl
fs
test
xchg
pop
scas
inc
dec
or
das
icebp
mov
mov
cmp
arpl
cmp
jle
dec
push
fldt
mov
mov
lcall
cmp
pop
xchg
or
je
and
lahf
ds
inc
or
stos
stc
fs
fucom
imul
orb
int
push
gs
cli
dec
mov
jno
and
dec
jmp
into
push
sti
data16
ss
sub
lret
inc
xor
mov
aad
sub
add
mov
mov
fadds
mov
push
add
xor
pop
and
aaa
into
cld
cmp
out
jo
push
in
sahf
xchg
jmp
dec
dec
out
jne
cltd
les
jnp
xor
enter
cld
orb
stos
sub
sbbb
mov
mov
fsubr
je
and
jbe
shr
test
and
inc
or
xor
outsl
mov
movsb
xchg
inc
clc
aaa
jp
jle
scas
sub
fdivrl
imul
mov
movsl
cmpsl
das
in
add
repz
jns
mov
test
iret
lahf
lea
adc
enter
mov
cmp
inc
jno
cmp
mov
xchg
mov
jmp
mov
rclb
aaa
mov
mov
rclb
repnz
dec
test
cmpsl
aaa
add
lcall
pushf
xor
hlt
dec
cs
lea
jp
shr
lret
aam
push
leave
stos
xor
inc
std
popa
lods
push
fwait
inc
and
mov
iret
mov
sbb
nop
test
cltd
cmp
mov
push
mov
mov
xchg
inc
mov
sahf
jp,pt
loopne
lret
inc
push
adc
test
xor
sub
push
testb
es
mov
sub
push
mov
add
outsb
ljmp
divb
jae
add
cmpsl
dec
pusha
or
dec
xchg
pop
cli
dec
xchg
iret
mov
xchg
icebp
arpl
mov
shll
in
or
mov
push
pusha
jbe
mov
roll
mov
sub
in
fisubl
xchg
sti
adc
adc
sub
push
mov
or
and
inc
or
sub
cmp
mov
popf
sub
in
adc
nop
mov
inc
les
fists
mov
mov
push
xchg
adc
adc
divb
cmpsb
out
mov
enter
cmp
test
dec
mov
mov
fisttpll
push
mov
insb
add
jp
inc
orb
xchg
aad
aas
pop
mov
pop
pop
or
insb
cmp
pop
repz
mov
test
and
mov
xor
aas
mov
les
cmc
cmpsl
insb
add
push
jl
dec
cli
mov
sub
lcall
mov
pop
rclb
xlat
outsb
inc
repz
and
inc
add
call
or
leave
cmp
ds
pop
push
out
cmp
rep
scas
outsb
add
rolb
and
loope
das
adc
inc
xchg
dec
data16
pusha
fiaddl
out
sub
dec
add
cmpsl
pop
mov
lds
rorl
inc
pop
divb
push
push
cwtl
jge
lret
pop
stos
jmp
xor
ds
pop
push
xchg
xlat
outsb
ret
jb
jp
in
mov
movb
divl
adc
dec
mov
enter
aad
fisttpl
or
pop
repz
sub
jnp
inc
orb
xchg
shrl
dec
call
or
insl
cmp
jl
pop
hlt
mov
scas
adc
dec
add
enter
xlat
mov
ret
rep
insl
add
adc
adc
clc
mov
sub
xor
mov
pop
rorb
fsubrs
icebp
in
and
lea
adc
out
and
cmp
aas
sbb
call
imul
mov
loopne
xor
push
stos
inc
test
mov
cmpsb
leave
pusha
fadds
out
sub
repz
adc
sarb
mov
inc
fsubs
rorb
add
jne
imul
xchg
jge
enter
test
lret
cmpsl
ds
cmp
push
outsb
push
pop
push
xlat
outsb
shll
mov
lds
cltd
divb
and
mov
or
add
push
jl
inc
jle
and
shrl
dec
out
pop
push
or
outsb
cmp
jl
pop
cmc
mov
scas
adc
dec
add
leave
xor
xlat
lahf
push
push
out
rcrb
movsb
outsb
add
inc
testl
jl
mov
pop
iret
or
outsl
ds
and
lea
mov
stos
in
and
ss
xlat
sbb
call
push
outsl
push
fmull
lea
fistps
inc
xorl
dec
movsb
leave
pusha
test
insl
mov
out
sub
hlt
mov
dec
add
test
into
jle
scas
out
inc
fsubs
rorl
add
divb
insb
add
jge
jbe
and
lret
cld
cmp
pop
dec
xlat
outsb
mov
loopne
mov
les
lcall
and
mov
inc
xlat
cltd
xlat
dec
out
mov
insl
add
or
mov
scas
pusha
fwait
xor
mov
push
out
pop
push
pop
fsubrs
jne
jl
pop
testb
lods
adc
ficomps
and
xor
xlat
sahf
push
push
out
mov
outsb
add
inc
testb
dec
stos
inc
jnp
mov
pop
into
or
outsl
cmp
pop
testb
mov
stos
jecxz
and
xor
push
push
call
imul
lea
ficomps
inc
xorb
dec
arpl
insl
mov
out
sub
hlt
mov
dec
add
test
int
xor
scas
out
inc
fcomps
rorb
add
divb
insb
add
adc
jne
and
leave
test
sti
cmp
pop
dec
mov
outsb
mov
fcomip
mov
ret
add
arpl
xor
mov
inc
xlat
cwtl
dec
out
mov
insl
add
or
adc
jnp
and
into
test
push
in
pop
push
push
fsubrs
je
jl
pop
testb
lods
adc
fstpl
and
das
insb
inc
xlat
popf
push
push
out
mov
outsb
add
inc
cmc
mov
daa
fs
xor
mov
push
jmp
or
outsl
cmp
out
and
lea
mov
stos
loop
and
xor
inc
xlat
push
push
push
call
push
mov
sti
lea
dec
stos
inc
xorl
leave
pusha
aam
insl
mov
out
daa
xlat
hlt
mov
dec
add
test
int3
jl
lods
in
inc
fcomps
iret
dec
in
inc
pop
divb
insb
add
jge
les
cmpsb
in
xor
enter
cmp
pop
dec
mov
outsb
mov
fdivp
mov
ret
repz
stos
bound
mov
mov
inc
xlat
xchg
aad
out
mov
insl
add
or
cmp
pop
fwait
xor
mov
push
jecxz
enter
fsubrs
jae
jge
push
testb
stos
adc
fistpl
and
sub
dec
push
out
mov
outsb
add
inc
repz
and
inc
stos
inc
js
mov
pop
lret
or
jo
in
out
push
pop
testl
loope
and
xor
inc
xlat
adc
push
jmp
cmpsw
jo
flds
mov
or
cs
popa
roll
call
mov
dec
push
popf
jns
adc
lret
jp
stos
in
inc
fstps
ds
imull
insl
add
nop
jle
ret
and
test
push
push
mov
outsl
mov
fdiv
lea
rolb
das
adc
pusha
adc
mov
mov
inc
fcoms
mov
imul
and
jle
cmp
and
lret
stos
inc
std
scas
mov
pusha
push
add
jo
jno
jle
push
testl
fsts
and
inc
cli
xor
sub
fstps
mov
outsl
push
rorb
lea
popa
popf
xor
inc
stos
inc
jbe
mov
pusha
leave
pop
fidivl
ljmp
lea
push
lods
fisttps
xor
fcoms
push
push
ljmp
jno
xlat
test
mov
es
fwait
xor
dec
lods
inc
jle
mov
mov
jmp
mov
adc
leave
js
enter
ficompl
lret
dec
out
cmp
clc
insl
sbb
jg
shlb
mov
les
push
popw
leave
pusha
dec
xchg
jo
push
jle
mov
add
lods
pop
adc
inc
jg
lret
inc
fsts
mov
mul
and
push
pop
jg
cmp
and
pop
popf
xor
leave
stos
inc
sti
lods
mov
popa
dec
add
jno
outsl
call
popl
cmpsb
push
lods
xlat
adc
mov
sub
ficompl
mov
jo
into
or
and
xchg
inc
lods
inc
je
mov
popa
movl
stc
nop
mov
push
popf
insb
lods
pop
scas
fisttpll
xor
fsts
push
push
ljmp
jno
aad
jle
mov
es
pushf
xor
dec
lods
inc
jl
mov
iret
jle
outsl
mov
jmp
lea
pop
sahf
jne
adc
push
xchg
and
leave
test
inc
ficompl
lret
sti
cmp
imul
dec
mov
mov
fistps
inc
cmc
xor
popa
dec
test
jo
imul
mov
mov
adc
mov
scas
popa
inc
ficoml
mov
clc
in
outsl
push
push
push
adcb
je
and
pop
sahf
xor
stc
lods
mov
popa
dec
fidivl
outsb
call
popl
push
lods
adc
lret
sub
ficoml
mov
jo
int
adcb
out
mov
nop
inc
lods
inc
jae
mov
popa
movb
ss
jg
pop
stc
nop
mov
push
popf
imul
mov
filds
adc
ljmp
jno
aam
jle
mov
es
xlat
pushf
xor
dec
lods
inc
jnp
mov
into
jge
outsl
scas
out
jmp
lea
inc
pop
sahf
je
adc
push
xchg
and
leave
cmpsl
out
ficompl
leave
push
out
cmp
push
outsl
push
dec
mov
mov
ficomps
inc
hlt
xor
popa
inc
test
jo
push
testl
pop
push
and
lret
inc
ficoml
mov
clc
jecxz
jo
push
add
pop
ss
and
mov
lods
inc
clc
stos
mov
bound
fidivl
insl
jmp
popl
mov
es
es
fistl
mov
stc
call
or
and
aas
lods
inc
jno
mov
popa
les
fdivl
in
jg
push
cli
xchg
mov
push
popf
imul
ss
fldl
push
dec
push
jmp
das
pusha
mull
jb
roll
nop
daa
es
xor
dec
scas
inc
jp
mov
arpl
jnp
outsl
lods
out
ljmp
inc
or
push
xchg
es
movsl
out
fistl
push
out
cmp
imul
adcb
insb
lea
fstpl
inc
repnz
inc
sbb
mov
call
popf
jmp
push
lods
pop
or
mov
lods
pop
inc
fimull
mov
clc
loope
jno
push
add
movsb
push
sahf
xor
imull
int3
arpl
fidivl
insb
ljmp
mov
push
lods
rclb
daa
mov
and
inc
fcoml
mov
cli
out
jo
leave
or
and
mov
mov
popa
ret
je
jecxz
jg
push
sti
xchg
mov
push
popf
addr16
and
mov
fildl
or
push
in
jg
pusha
negl
jae
sarb
adc
and
inc
scas
inc
jns
mov
fs
jns
outsl
stos
in
jmp
pop
int
incl
mov
push
xchg
daa
mov
mov
lds
divb
arpl
addr16
jo
dec
mov
and
or
cs
bound
fs
nop
push
mov
pop
scas
pop
or
mov
stos
pop
inc
fisttpl
scas
stc
fistps
sbbl
mov
ret
scas
inc
cmc
cmpsb
mov
fs
stc
push
sbbb
mov
rorb
sub
and
fstl
mov
sti
in
jno
movl
sbb
cmp
mov
rolb
jne
loope
adcb
cld
xchg
xchg
sahf
cmpsl
sbb
mov
cmp
sub
inc
fimull
dec
push
in
jge
popa
clc
pop
sahf
je
sarb
push
scas
icebp
xchg
sub
rcrl
inc
ja
mov
gs
jo
jmp
sbbl
or
dec
nop
sub
mov
ret
push
jmp
gs
sbbb
push
mov
inc
out
sub
push
pop
bswap
arpl
fdivl
ljmp
mov
lahf
out
sbb
cmp
int
pop
inc
fmull
lods
arpl
fstpl
jae
dec
incb
sub
ret
hlt
movsb
mov
gs
neg
jb
imul
nop
jl
or
into
push
sub
aas
out
xor
ficoms
mov
cld
in
jno
lds
sbb
cmp
lods
rclb
lret
bound
loopne
adcb
cld
xchg
test
pop
sahf
cmpsb
sbb
mov
cmp
sub
inc
fimull
dec
push
in
jl
popa
clc
pop
popf
je
iret
jl
push
scas
lock
sub
rcrb
inc
jbe
mov
gs
jbe
jo
ljmp
cld
cmp
push
lods
dec
vprotb
xor
mov
ret
repz
adc
or
sbbb
addr16
es
fsubs
inc
in
sub
arpl
fdivl
popa
ljmp
mov
lahf
out
sbb
cmp
int
pop
inc
fmull
stos
arpl
fcompl
jae
dec
std
sbbl
mov
shrl
aad
into
gs
neg
jb
push
stc
nop
jnp
or
int
sub
ds
xor
ficoms
mov
cld
jecxz
jno
les
sbb
in
es
pop
mov
inc
push
rclb
lret
bound
fucomip
adcb
cld
xchg
test
pop
sahf
arpl
and
iret
sub
inc
fimull
dec
push
in
jnp
popa
clc
pop
pushf
je
into
jnp
push
lods
out
xchg
sub
iret
popf
xor
inc
mov
jne
mov
gs
cmpsl
jmp
testl
dec
mov
mov
lahf
loopne
fstl
rcll
xor
adc
inc
test
es
xlat
mov
inc
in
sub
arpl
jge
jae
pusha
ljmp
mov
lahf
in
sbb
aaa
jne
int
pop
inc
fmull
stos
arpl
fistpl
jae
dec
cld
sbbl
lahf
dec
lahf
ss
mov
gs
cmc
addr16
sbbl
or
int3
or
sarb
inc
ficoms
mov
cld
loop
jno
ret
add
push
push
mov
inc
imul
fidivs
fsubrp
adcb
cld
xchg
xorl
sahf
bound
mov
daa
inc
fiaddl
dec
push
in
jp
popa
clc
pop
fwait
je
int
jg
lods
out
xchg
sub
into
popf
xor
inc
mov
je
mov
gs
je
jo
call
testl
dec
lea
mov
sahf
filds
adc
push
jmp
bound
jno
inc
addl
xchg
mov
inc
jmp
mov
arpl
jl
jae
pop
ljmp
mov
lahf
in
sbb
ss
int
push
inc
fmull
test
jae
dec
sti
sbbl
sahf
dec
lahf
cmpb
push
rcll
into
gs
hlt
data16
sbbl
or
lret
or
sarb
int3
sbb
ds
ljmp
jno
ret
sbb
es
lods
inc
push
mov
bound
fucomp
orb
cld
xchg
xorb
sahf
popa
mov
and
iret
es
fiaddl
dec
push
in
jns
popa
clc
pop
lcall
stos
in
xchg
sub
int
xor
inc
mov
jb
mov
lds
jno
out
sbbl
clc
stc
cmp
mov
dec
mov
mov
popf
fldl
push
mov
fs
pusha
adc
inc
addl
aaa
push
mov
mov
fs
pop
jmp
nop
int
xchg
pushl
sbb
xor
aaa
into
mov
les
cmc
cmpsl
fs
fcoms
je
dec
stc
sbbb
push
sub
mov
out
lahf
mov
inc
repnz
fs
test
mov
mov
leave
or
sarl
ss
pop
dec
fisttps
scas
data16
fisttps
test
loope
daa
adc
xchg
inc
cmpsw
rcrl
int3
arpl
fucomi
orl
mov
es
and
inc
fildl
push
out
ja
stc
push
cwtl
jne
lret
pop
test
lret
sahf
xor
jo
mov
retw
jno
jb
in
test
kmovb
aaa
or
dec
mov
sarb
inc
fimuls
gs
pop
or
sbbl
bound
cmp
scas
inc
call
or
cmp
je
pop
in
orl
or
dec
add
shlb
cmp
mov
ret
rep
gs
adc
or
testl
cmp
dec
in
popf
mov
addr16
lock
out
test
or
out
sbb
cmp
aaa
into
sbb
loopne
cmp
imul
mov
loopne
sub
push
mov
inc
movsl
rcrl
int
mov
orb
xchg
jle
or
sarb
mov
and
inc
faddl
inc
push
out
jne
arpl
push
xchg
jne
enter
test
xchg
sub
lret
cld
cmp
dec
outsb
sbb
iret
shlw
mov
cli
xchg
divb
sbb
mov
flds
or
cld
pop
push
je
inc
jge
sbb
shlb
inc
out
mov
data16
je
pop
in
test
scas
or
dec
add
shll
cmp
lahf
push
dec
filds
movsb
data16
aad
jne
inc
testb
dec
mov
dec
jmp
rclb
shlb
out
fidivs
pusha
out
test
mov
mov
movb
iret
sbb
loopne
cmp
push
addr16
fisttpl
test
fists
cmp
mov
into
gs
fbstp
fldlg2
orl
std
xchg
jl
or
into
jle
mov
and
inc
fldl
inc
push
out
jae
fs
push
xchg
jne
jne
sbb
leave
mov
dec
insb
sbb
push
dec
iret
mov
je
loopne
test
ret
sti
xchg
cmc
xor
mov
inc
test
shlb
inc
fimuls
mov
gs
pop
or
sbbl
pusha
xchg
sub
mov
dec
out
mov
cmp
je
pop
out
test
or
ficomps
sbb
xor
iret
sahf
push
dec
filds
mov
jne
inc
cmc
test
daa
gs
sub
mov
sarb
mov
push
insl
pop
push
lods
push
pop
fcmove
mov
in
sub
fs
testl
inc
test
lea
pusha
pop
sbb
add
push
mov
push
or
adc
ljmp
and
pop
mov
andl
cmp
inc
push
push
mov
mov
and
mov
mov
cwtl
mov
in
loopne
mov
leave
add
movsb
pop
jbe
out
xchg
push
js
popa
lahf
pop
sub
xchg
adc
or
push
mov
lret
icebp
jbe
fwait
dec
xchg
outsl
mov
int3
sub
xor
mov
inc
mov
sahf
push
jne
mov
pop
jp
push
inc
sub
add
jmp
fwait
xchg
push
pop
xchg
cmpsb
test
ja
cmp
sbb
push
xor
xlat
dec
imul
sub
loop
nop
daa
addr16
mov
test
push
push
sub
add
dec
cmp
fwait
lea
mov
lcall
ret
xor
and
adc
lret
sbb
hlt
sub
and
sub
lcall
jo
loopne
incb
xor
imul
mov
repz
loop
and
jmp
pop
popf
add
fists
mov
or
int3
add
cmp
or
out
sbb
test
and
ror
xlat
cmp
add
aas
adc
xchg
andb
xor
pushf
out
cli
test
or
loopne
xor
jmp
inc
sahf
fdivl
arpl
mov
jae
test
jg
fisttpl
jp
lcall
inc
scas
inc
sbb
lods
sbbl
sbb
jmp
dec
scas
jbe
ret
adc
adc
adc
add
out
sbbl
sahf
test
or
mov
scas
stc
xchg
les
outsb
xchg
leave
and
dec
lock
insb
sbb
mov
enter
decl
and
pop
mov
adc
xchg
lahf
movsb
fstpl
push
call
testl
or
inc
jo
js
adc
mov
or
icebp
pop
stos
xchg
jns
jno
jb
test
jl,pt
sub
jl
xchg
add
jge
sarb
adc
loop
add
cmp
xchg
call
imul
out
xor
data16
xchg
sbbl
push
jl
jns
add
arpl
mov
adc
lcall
inc
fwait
inc
mov
das
inc
inc
dec
add
stos
xchg
mov
movsb
rorb
mov
je
add
fiaddl
lock
push
push
outsb
push
sub
in
fdivrl
sbb
push
sub
ja
mov
aad
int
cmp
into
inc
fnstcw
cmp
jb
test
mov
cmp
push
add
mov
mov
loope
fisubl
out
in
jmp
and
cltd
je
xlat
into
xorl
int
scas
fdivrl
test
mov
mov
out
mov
xchg
bound
jge
jp
sbb
pop
lds
cmp
and
fxch
xor
cmp
int
jle
sbb
repz
xchg
and
andl
jno
cmpsb
mov
pop
push
popa
xchg
clc
push
or
inc
adc
inc
vpandn
popa
loope
and
into
int3
lods
cmp
push
lods
fcoms
cmpsb
sub
pop
add
dec
mov
push
fmuls
out
scas
lods
push
push
adc
mov
mov
pop
add
adc
xor
inc
mov
fwait
data16
cmp
lods
or
shlb
outsb
xchg
jnp
fsubrp
jge
hlt
in
fs
mov
xlat
xchg
out
fbld
sbb
loope
arpl
lds
jge
push
and
js
fbld
add
pop
stc
js
scas
bound
xchg
insl
xor
sbb
clc
mov
outsb
cmp
out
add
sbb
cmp
push
mov
jl
arpl
cmpsl
pop
mov
sub
mov
add
jne
push
negl
jo
or
sbb
add
pop
dec
xchg
jge
fs
and
or
xchg
test
sub
insb
mov
cwtl
imul
and
dec
sti
popf
xchg
insl
mull
add
and
nop
arpl
and
rorb
dec
dec
mov
je
push
stos
mov
adc
je
popa
cli
mov
xor
adc
mov
lods
popa
dec
mov
dec
xlat
sub
insb
sbb
cmpsl
inc
mov
lret
sbb
les
sahf
arpl
cmp
popl
mov
sub
in
dec
or
cmc
or
fincstp
pop
xor
or
push
push
das
js
stos
jb
mov
jnp
movsw
out
adc
in
mov
xchg
daa
or
aam
sub
jecxz
ds
xlat
adc
jecxz
aas
test
jns
push
adc
aaa
out
test
enter
sub
lds
aaa
xchg
cs
out
or
outsb
jp
pop
dec
and
test
gs
movsl
ucomiss
fdiv
jo
getsec
jecxz
push
dec
sar
loope
sub
int
sti
xor
les
js
or
cmp
xchg
mov
jmp
pop
push
int3
fbstp
in
cwtl
aaa
lret
push
addr16
push
jbe
lods
stc
loopne
push
or
hlt
jmp
mov
cmp
test
push
dec
ja
jae
xchg
in
adc
adc
add
cli
arpl
subl
out
dec
test
cmc
fs
dec
fwait
mov
xor
ds
mov
dec
dec
aaa
xchg
stc
or
mov
adcl
mov
loop
rcrb
xchg
pop
pusha
hlt
mov
pop
fwait
cmp
ss
ds
out
leave
cmp
and
in
adc
pop
addr16
ficompl
inc
dec
xchg
js
pop
lods
inc
add
jle
jnp
in
cmpl
int3
adc
inc
sub
pop
cld
call
pop
add
dec
add
jne
push
mov
incb
enter
je
pushl
pop
cmp
outsb
fwait
std
sbb
xlat
push
inc
jecxz
out
jmp
push
ds
mov
mov
dec
ja
adc
aaa
and
fwait
jne
test
repnz
mov
mov
dec
mov
lds
push
arpl
icebp
rcr
lock
dec
pop
push
mov
icebp
jle
mov
push
ret
popa
pop
cmp
stos
loope
or
xor
and
es
jge
dec
mov
ret
jne
fcmovb
dec
sbb
xor
stos
dec
gs
scas
sbb
xchg
enter
lods
xlat
jg
push
add
pop
add
push
jmp
pop
in
je
inc
mov
lcall
gs
sbb
dec
fs
mov
lds
or
ljmp
add
fwait
and
int
pop
mov
pop
in
iret
aad
inc
dec
aas
dec
xchg
sbb
hlt
test
jmp
cmp
and
cmp
or
test
cs
cmpsb
mov
pop
or
xor
push
and
hlt
or
in
jl
xchg
xbegin
call
xor
push
cld
jmp
mov
jl
pop
or
in
push
mov
push
rcll
push
jo
loope
jnp
insb
mov
and
fidivs
push
pop
sahf
mov
inc
scas
mov
pop
es
gs
inc
pushf
xchg
add
ror
push
push
shr
iret
repz
or
sub
in
das
jnp
cmp
push
mov
pop
inc
dec
stc
fldl2t
stos
adc
into
leave
jl
xchg
sti
fistps
inc
scas
mov
mov
jno
lret
mov
outsl
xchg
lret
mov
insl
xchg
int
mov
and
add
and
adc
jp
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
jl
je
andps
add
add
inc
add
lcall
or
inc
sti
out
faddl
cmc
pop
lea
stos
cmpsl
loopne
in
push
sbb
fnsaves
lea
sbb
.byte
