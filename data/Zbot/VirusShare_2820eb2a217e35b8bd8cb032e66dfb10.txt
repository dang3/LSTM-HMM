push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
popl
pop
pusha
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
pop
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
int3
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
jmp
int3
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
jmp
int3
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
pop
jmp
int3
int3
jmp
ret
sub
lea
add
mov
mov
shl
xor
call
sub
pushl
mov
cmpb
jne
jmp
add
lea
inc
movzbl
cmp
jb
nop
mov
sub
jae
mov
cmp
ja
lea
jle
pop
call
popf
push
pushl
decl
ret
aam
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
jmp
int3
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
int3
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
int3
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
jmp
int3
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
pushl
pop
dec
jmp
jmp
call
add
mov
sub
sub
mov
pop
mov
mov
mov
mov
push
xorl
pop
sub
or
mov
mov
push
push
push
pop
push
pop
stos
pop
pop
subl
xor
pushl
lea
lea
pop
repz
sub
test
jne
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
pop
jmp
int3
int3
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
jmp
repnz
add
add
or
add
lcall
add
and
add
and
add
and
add
add
outsb
and
add
and
add
and
add
and
add
add
fsubl
add
add
add
jl
add
adc
add
into
and
add
add
add
and
add
add
enter
and
add
add
jp
add
and
add
add
and
add
add
push
and
add
add
add
and
add
and
add
add
or
add
add
add
add
add
add
adc
add
sbb
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
pop
and
add
add
repnz
add
add
or
add
lcall
add
and
add
and
add
and
add
add
outsb
and
add
and
add
and
add
and
add
add
fsubl
add
add
add
jl
add
adc
add
into
and
add
add
add
and
add
add
enter
and
add
add
jp
add
and
add
add
and
add
add
push
and
add
add
add
and
add
and
add
add
or
add
add
add
add
add
add
adc
push
gs
insl
gs
push
add
out
inc
gs
imul
bound
gs
add
aam
inc
gs
jb
jbe
push
jns
gs
add
push
gs
outsl
arpl
push
imul
inc
gs
jb
arpl
jae
gs
jo
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
adc
push
gs
insl
gs
push
add
push
add
je
outsl
arpl
gs
outsb
outsw
inc
add
cmp
inc
gs
jb
outsl
jb
je
inc
insb
popa
jae
add
mov
jo
outsb
fs
push
add
add
gs
inc
imul
gs
fs
outsl
outsb
jae
insb
gs
add
les
inc
insb
outsl
bound
push
imul
dec
jae
popa
fs
gs
fs
je
add
data16
je
je
dec
popa
outsb
fs
add
addb
jb
popa
je
inc
imul
jns
add
mov
popa
je
push
imul
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
push
imul
jb
je
arpl
add
popa
jo
imul
push
jb
je
inc
imul
inc
dec
xor
cs
insb
add
xchg
inc
gs
imul
js
push
add
in
push
inc
gs
popa
jo
jne
add
jnp
push
gs
outsl
arpl
add
sbb
ja
jo
imul
push
inc
gs
jb
jns
outsb
jne
out
push
inc
gs
popa
jb
je
outsl
jae
mov
inc
jb
ja
arpl
add
xchg
push
push
gs
jae
addr16
add
jnp
inc
gs
imul
outsb
addr16
add
mov
inc
imul
dec
gs
popa
addr16
add
jno
push
gs
jne
jae
jb
int
dec
outsl
popa
fs
jne
jae
jb
add
pop
inc
gs
gs
popa
addr16
add
add
inc
push
xor
cs
insb
add
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
add
push
imul
jb
gs
add
inc
insb
insb
push
imul
jb
gs
add
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
dec
push
cs
insb
add
add
insb
outsl
outsb
gs
outsb
je
jns
add
push
inc
push
dec
xor
cs
insb
add
pushf
pop
scas
and
adc
pop
clc
loop
cltd
leave
inc
jp
fldt
inc
and
push
jecxz
cmp
lods
lret
aad
add
jp
xchg
iret
and
push
inc
mov
movsl
stc
loope
sbb
mov
ror
sbb
setns
ficompl
test
xor
inc
fistps
insl
pop
push
cmpsb
pusha
xor
jp
repz
shr
adc
sbb
lea
shl
sbb
divl
adc
leave
into
call
xor
mov
jecxz
inc
cmp
pushf
in
sbb
sbb
xchg
xorb
xrelease
cmp
dec
inc
mov
fnsave
fildl
xlat
movsb
sub
jno
rcrb
mov
aam
in
sbbb
sbb
push
clc
inc
push
mov
pop
imul
pop
lods
push
lea
cmp
ret
bound
jns
push
adc
iret
push
adc
jno
js
mov
scas
loope
loopne
xchg
loope
mov
test
pop
cld
int3
xor
dec
mov
jecxz
cmp
dec
data16
imull
stos
into
movl
inc
loop
and
sbb
lret
pop
insb
jecxz
pushf
adc
dec
xlat
jg
xchg
rcl
pop
into
sbb
sbb
and
push
std
stc
repnz
mov
jnp
mov
push
push
int3
rcrl
loopne
sbb
inc
mov
in
push
push
sub
insb
push
mov
ret
fists
push
cli
out
test
ret
in
add
dec
jnp
pop
or
push
xchg
adc
pop
in
hlt
pop
and
mov
pop
mov
movsl
or
test
cmp
pop
mov
xchg
aas
push
bound
dec
xor
adc
xchg
or
jnp
inc
loop
sub
jl
mov
popa
adc
jo
test
add
add
add
add
xor
add
decl
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
inc
add
fs
add
add
sbb
add
loopne
add
cld
pop
add
add
add
popl
xor
add
sub
add
and
add
inc
add
add
add
add
add
add
add
std
add
std
add
xchg
xchg
pop
mov
rol
mov
mov
pop
lcall
add
add
add
add
add
mov
sahf
sub
cmpsb
cmpsb
mov
mov
mov
mov
stos
test
das
xchg
xchg
adc
add
add
movsl
popf
pop
cltd
mov
mov
les
mov
lret
out
aam
shr
iret
ror
fmul
lret
lret
mov
movsl
pop
lcall
add
rol
add
mov
lcall
lods
test
mov
mov
mov
int
jmp
loope
out
in
out
in
in
in
jmp
fcmovu
out
mov
outsb
mov
fwait
cltd
add
incl
lods
stos
stos
add
int3
int
cmpsl
cmpsl
test
fs
cwtl
cltd
rcrb
stos
std
mov
mov
jmp
out
push
div
std
cld
cld
cld
sti
cld
push
cmc
repz
loopne
loop
mov
cmpsb
cmpsb
addr16
cwtl
xchg
sbb
push
add
add
add
xchg
xchg
pop
mov
mov
xchg
nop
xchg
pop
popf
popf
sahf
and
stos
lods
scas
mov
pushf
pushf
std
mov
mov
mov
iret
int
fnstsw
out
out
lock
cmc
idiv
sti
cld
sti
sti
cli
sti
call
int3
shr
scas
mov
mov
mov
mov
stos
stos
lods
add
nop
xchg
daa
mov
test
pop
test
test
scas
stos
scas
movsl
mov
mov
std
mov
mov
movsl
movsl
cmpsl
ljmp
mov
std
int
cli
xlat
clc
in
in
ljmp
icebp
jmp
jmp
loopne
dec
iret
jecxz
lods
mov
mov
xchg
pushf
pushf
sbb
add
add
addl
mov
xchg
jae
lods
lods
popf
mov
mov
mov
mov
scas
ret
mov
pushl
test
mov
int
test
fcom
repnz
fdiv
loop
loop
jecxz
in
fmul
lock
mov
mov
mov
nop
cltd
fwait
xor
pushw
arpl
pop
dec
dec
dec
adc
cmp
xor
xor
or
add
add
add
add
mov
subl
mov
rol
cli
mov
mov
cmpsl
mov
lods
pushl
stos
mov
dec
lret
leave
leave
ret
sti
enter
enter
int3
int
repnz
shl
fidivrl
mov
int3
lcall
popf
mov
dec
outsb
jo
and
addr16
pop
pop
gs
dec
dec
push
dec
inc
dec
pop
dec
dec
dec
pop
push
pop
pop
cmp
sbb
dec
or
ja
xchg
xchg
xchg
inc
movsl
cmpsb
cmpsb
mov
mov
cld
lret
inc
mov
ljmp
cmpsl
cmpsb
jmp
lods
movsl
inc
mov
mov
mov
out
enter
mov
mov
movsl
lcall
xchg
xchg
cld
xchg
xchg
nop
rorb
mov
ret
and
jl
xlat
jne
je
imul
je
int
jl
lods
jne
jae
addr16
popa
bound
xchg
xchg
xchg
dec
stos
stos
test
mov
mov
mov
vpaddd
mov
mov
lcall
ret
ret
dec
int
inc
ret
mov
mov
mov
negb
xchg
pushf
call
nop
nop
cld
mov
mov
mov
lahf
fsts
mov
cli
mov
stc
mov
xchg
mov
jge
insl
insb
imul
nop
mov
lods
lods
out
mov
mov
lret
call
sar
cmp
mov
pop
loope
incl
jl
ret
mov
rol
inc
mov
int3
lret
sti
cmpsb
lods
stc
movsb
xchg
mov
jmp
pushf
clc
xchg
xchg
xchg
xchg
nop
stos
pop
lds
xchg
decb
mov
xchg
xchg
xchg
lcall
lahf
fwait
cltd
fwait
sti
xchg
xchg
xchg
out
xchg
pop
jg
push
push
insb
push
push
test
xchg
in
movsb
movsl
cmc
addr16
and
and
mov
call
mov
mov
call
ror
fcom
dec
lret
lret
mov
test
popf
mov
lcall
nop
popf
mov
xchg
xchg
ss
mov
lods
fldt
nop
decl
xchg
xchg
lcall
pushf
pushf
lcall
xchg
xchg
cld
mov
push
push
dec
push
xchg
pop
pop
pop
cmpsl
jo
jb
addl
cmpb
ljmp
mov
pushl
rol
rcl
sar
jecxz
loope
in
in
ljmp
jmp
xlat
mov
lods
lods
lcall
mov
test
mov
cwtl
xchg
call
lcall
xchg
nop
decl
nop
cld
mov
test
test
rorb
mov
out
mov
xchg
cmp
stos
mov
pushl
mov
iret
icebp
repnz
sti
cld
cld
std
cld
std
cli
cld
cld
out
lock
fcom
fdivr
mov
stos
lods
lock
dec
xchg
addl
lahf
sahf
lcall
sahf
mov
call
xchg
cltd
xchg
lea
clc
mov
subl
jp
stc
mov
jae
std
mov
jb
dec
addl
mov
mov
jmp
in
push
idiv
cld
std
cld
std
sti
std
cld
clc
stc
cli
jmp
jecxz
inc
enter
mov
mov
fwait
cltd
push
jg
jg
int3
shll
scas
stos
mov
jmp
movsb
cmpsl
lcall
mov
movsb
ljmp
dec
inc
jno
inc
arpl
pop
adc
lret
push
add
aad
add
jmp
push
or
fiaddl
xchg
rol
mov
ljmp
cld
std
cld
std
cld
push
div
in
out
out
sti
loop
loop
mov
mov
test
lcall
mov
mov
fldt
stos
stos
pushl
lods
scas
jmp
stos
inc
test
inc
jne
dec
pop
or
rcll
call
push
add
rcrl
call
pop
add
fsubl
jecxz
add
in
outsl
add
cmc
jbe
push
jge
call
test
cmpsl
jmp
aam
in
jecxz
push
ljmp
frndint
rcl
shl
lret
test
mov
lods
and
mov
mov
mov
mov
lods
stos
test
mov
mov
mov
mov
ljmp
lods
lods
inc
stos
pushf
dec
orb
pop
pop
call
pop
add
rcrl
call
popa
add
fisubl
jmp
imul
push
jbe
cli
jge
cld
addb
std
orb
testl
insl
jmp
mov
xchg
faddp
scas
dec
sarb
test
cmpsl
mov
sarb
add
scas
scas
fldt
mov
mov
mov
mov
scas
mov
inc
mov
call
pop
fsubs
fstps
fisubl
jmp
imul
push
jne
cld
jp
std
jle
incb
or
cld
nop
sbb
std
xchg
and
std
fwait
sub
std
popf
xor
out
mov
inc
mov
stos
stos
xchg
lcall
mov
test
fldt
mov
mov
mov
mov
inc
mov
dec
xchg
push
aad
or
fsubl
fisubs
jmp
insb
add
lock
cli
jl
sti
jg
cld
jg
std
mov
lcall
sub
cld
cltd
cs
sti
fwait
xor
cld
sahf
xor
cld
pushf
das
push
mov
stos
clc
stos
stos
stos
mov
xchg
xchg
inc
push
push
push
add
add
add
jg
orb
mov
mov
ret
mov
mov
sarl
call
pushw
call
pusha
add
fisubs
in
add
in
jno
clc
jl
sti
jg
sti
addl
std
xchg
es
std
stos
dec
std
stos
dec
sti
stos
dec
cld
test
dec
stos
dec
sti
ret
xlat
ret
lods
sti
mov
lods
rcrb
add
dec
pop
pop
pop
insb
fisttpl
mov
ret
ret
ret
mov
mov
inc
sarb
aam
das
jmp
push
add
cmc
jp
cld
jg
incb
add
sti
lea
std
test
std
mov
data16
std
mov
insb
std
ret
inc
push
mov
mov
sahf
lahf
pop
lcall
add
dec
pop
pop
pop
pop
fcoms
mov
inc
ret
inc
mov
mov
mov
mov
fadds
or
jmp
jae
cli
jle
std
addl
incl
sti
cltd
sub
mov
test
dec
cmp
iret
xchg
call
mov
mov
aad
sti
ficompl
std
mov
mov
mov
lea
add
add
add
arpl
jge
mov
mov
vaddsubpd
lret
int
test
mov
mov
call
mov
dec
jmp
insb
or
icebp
jo
cli
jnp
std
jg
incb
add
incb
cmp
cld
into
cld
fwait
std
fcomps
ficomps
jmp
mov
fmul
mov
mov
mov
xchg
sbb
incl
jl
jno
pushf
pushf
pushf
inc
leave
int
fs
in
loope
in
fstp
fmulp
rcl
fcmovu
lret
out
int
lret
not
mov
dec
jmp
or
hlt
jne
cld
jge
std
addb
sti
xchg
incb
pop
scas
push
std
fsubrl
jecxz
in
std
call
mov
loop
jmp
shll
ljmp
mov
incl
stos
lods
stos
add
or
icebp
lock
icebp
repz
in
out
inc
jmp
out
pop
in
in
jne
fnstsw
xchg
xlat
fcomp
ret
mov
jmp
ja
cld
jle
jg
cld
addl
incb
push
mov
ret
out
sti
call
mov
sti
call
mov
jmp
mov
movsl
pushf
mov
addb
add
add
std
add
std
add
std
decb
cmc
div
sbb
out
lock
fstp
jnp
mov
std
jmp
adc
divl
std
jnp
cld
jl
cld
addb
incb
xor
dec
xchg
jmp
mov
cli
loopne
push
ljmp
jmp
stos
sti
loop
mov
ret
mov
test
mov
jg
aam
aad
aam
int
into
sarl
out
adc
repz
push
outsl
add
hlt
jb
push
jnp
testb
std
in
ret
mov
in
aam
cli
ljmp
hlt
fmulp
movsl
in
aad
mov
ror
mov
iret
int3
mov
rcl
mov
pushf
test
xchg
xchg
sbb
add
add
pop
enter
enter
int
xchg
neg
addl
fdivrl
cld
xlat
jle
neg
mov
loopne
push
jmp
stos
jle
iret
mov
lods
rol
mov
test
sarl
jns
ret
mov
dec
mov
mov
mov
add
add
add
sarb
iret
mov
lods
repz
fnstsw
scas
stos
mov
scas
cmpsl
movsl
mov
test
mov
mov
push
mov
mov
sub
mov
push
enter
int
add
addb
add
incb
mov
stos
adc
mov
mov
lods
mov
lods
pushf
mov
test
lods
scas
movsl
push
mov
test
xor
movsl
cmpsl
adc
shrl
xchg
xchg
xchg
pop
stos
stos
lods
add
std
incl
incb
stos
stos
stos
add
mov
adc
mov
cmpsl
adc
stos
lods
setp
mov
cltd
lcall
std
std
add
add
add
push
add
add
add
jmp
add
add
add
inc
add
add
incl
add
cld
add
add
add
push
add
add
add
jmp
add
add
add
inc
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
loopne
add
incl
pop
jmp
add
add
jmp
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
addl
test
mov
mov
mov
mov
sub
mov
add
sarb
mov
mov
rcl
out
in
in
fnstcw
movsb
mov
add
cmpb
mov
stos
stos
cmp
cmpsb
stos
movsl
cmpsb
movsb
cmpsl
hlt
mov
mov
fcmovu
fscale
out
lock
std
out
out
lock
leave
lret
mov
jae
or
dec
or
push
push
push
push
jg
jg
xchg
cwtl
lcall
mov
mov
mov
mov
mov
mov
int3
enter
fdiv
fxch
loopne
mov
shl
fwait
cmpsb
mov
xchg
jbe
insb
insb
push
je
je
jbe
jne
mov
mov
mov
jmp
ret
ret
stc
mov
mov
sahf
lcall
scas
mov
cmc
lea
xchg
out
mov
mov
mov
negb
ret
iret
xchg
mov
int
std
enter
lods
movsb
stos
std
popf
xchg
lahf
hlt
cltd
xchg
or
stos
pushf
mov
xchg
xchg
call
mov
jp
fcomps
fwait
stos
mov
iret
out
out
in
in
out
out
dec
lret
cmpsb
movsb
cmpsl
rcrl
mov
pushf
test
movsb
cld
mov
pushf
popf
ljmp
outsb
cmp
cld
shrl
fidivrl
call
stos
xchg
loopne
int
cmc
hlt
lock
repnz
fcomp
fcmovbe
mov
mov
adc
mov
mov
mov
mov
mov
call
pop
add
in
jo
push
jl
push
lea
out
mov
mov
mov
rol
add
add
lcall
cld
mov
mov
dec
xchg
out
add
clc
jp
sti
test
cld
lcall
sti
stos
dec
fnstcw
movsl
push
push
push
push
add
add
add
je
stos
lods
lods
clc
rol
mov
fwait
outsl
jmp
insb
or
hlt
js
cld
addl
std
mov
js
cld
leave
jge
faddp
movsb
out
scas
lods
stos
imul
mov
popf
rcl
aam
mov
out
cmpsb
cmp
sti
jle
std
xchg
cld
fldenv
cld
jecxz
jmp
shrl
sbbb
add
lods
stos
lods
push
in
out
jecxz
jmp
push
out
js
sti
jl
sti
mov
std
neg
mov
lock
icebp
fst
mov
mov
lods
jle
mov
add
std
std
incb
aam
and
mov
mov
push
hlt
fmull
push
aam
mov
cmpsl
test
lret
outsl
int3
int3
mov
mov
mov
lods
lods
stos
add
add
add
mov
cmpsb
jns
stos
lahf
pop
mov
scas
cmpsl
es
mov
or
aad
push
stos
stos
stos
add
std
std
add
add
add
lcall
std
std
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
and
add
add
mov
add
add
std
incb
mov
mov
jae
into
int3
mov
leave
leave
push
mov
mov
popf
sahf
popf
or
test
mov
mul
loope
cli
loop
out
mov
les
jl
cmp
imul
daa
cmpsl
test
push
lods
mov
stc
mov
int3
test
sti
mov
fwait
xchg
lods
lea
mov
xchg
movsb
jmp
lret
lods
mov
ror
cld
mov
mov
fwait
xchg
lcall
mov
xchg
stos
jae
out
mov
lcall
icebp
in
jmp
rcl
rcl
test
mov
mov
rcll
call
test
jmp
mov
mov
lcall
lods
mov
cmpsl
xchg
in
adc
stc
jle
sti
movsb
aas
inc
outsb
out
les
popa
add
add
test
scas
cmp
aam
js
mov
lret
sbb
sti
mov
cld
les
neg
scas
sti
jmp
mov
mov
stos
stos
add
add
add
std
add
aad
pop
fstl
mov
ror
mov
mov
add
add
add
add
add
add
mov
daa
mov
cmpsb
pop
mov
mov
jg
addb
incb
lock
scas
add
mov
scas
add
mov
scas
add
mov
scas
addb
scas
rol
scas
pop
mov
fsubp
js
cmp
call
rolb
adc
cmp
or
icebp
sub
pop
xchg
mov
fsts
sub
sub
mov
imul
enter
es
movsl
push
sbb
lods
dec
js
ret
test
lret
sti
mov
imul
inc
outsl
xchg
mov
ret
hlt
mov
inc
jmp
or
arpl
loop
lcall
xchg
in
mov
lahf
loope
pop
mov
add
mov
nop
push
inc
faddl
cmpsb
arpl
xlat
add
xor
push
cwtl
das
mov
ss
mov
fcompl
aam
das
repnz
push
repnz
movsb
adc
leave
imulb
lds
jmp
int3
sbb
dec
jecxz
cmp
push
int
jno
shr
pop
and
es
lods
inc
push
mov
bound
fucomp
orb
mov
mov
push
cltd
jge
mov
jmp
and
inc
lock
arpl
mov
in
adc
jge
sbb
mov
fstl
push
push
push
jmp
sub
jne
jg
sub
shrb
inc
std
sub
int
dec
sub
ret
add
les
rclb
ds
ja
out
test
lds
jne
cld
cltd
pop
mov
push
in
adcl
aam
jb
mov
outsb
les
mov
rcll
fiadds
xchg
cs
test
dec
daa
pop
or
push
sub
jl
pushf
icebp
mov
jl
lcall
and
pop
and
push
sub
pop
jne
xor
push
clc
fwait
ret
inc
mov
stc
inc
setle
cltd
bound
adc
add
daa
arpl
sub
inc
enter
cmp
int3
arpl
pop
push
mov
xorl
sub
and
fsubrs
inc
sbb
test
xor
shlb
in
xchg
repz
jmp
out
jo
ja
rclb
lock
ret
mov
ja
stos
movsb
cmp
ret
hlt
sti
ret
push
sbb
cmp
mov
cltd
xor
hlt
fidivs
dec
inc
inc
cld
xchg
jns
insl
xchg
lcall
out
cmp
sbb
ds
in
outsl
pop
xor
mov
dec
out
jecxz
sub
ss
push
mov
gs
fsubr
orl
enter
or
jg
sub
rcl
inc
fldl
daa
fs
pop
inc
inc
xlat
jbe
sbbb
xchg
pop
cmc
enter
jmp
mov
xor
fnsave
mov
xchg
clc
loop
insl
adc
sbb
insb
cmp
popf
mov
test
out
fidivl
or
jne
inc
sub
in
fs
sub
mov
dec
jmp
or
addr16
pop
out
test
mov
mov
cld
add
ret
add
xchg
mov
fadd
aas
repnz
test
adc
cmc
inc
dec
mov
adc
mov
fbstp
or
std
xchg
ja
xlat
outsb
xchg
cwtl
sbb
in
cmp
sbb
adc
cmp
out
insl
pop
xor
mov
push
out
loope
sub
outsb
add
addr16
mov
orl
inc
fucomi
test
das
or
jge
sub
mov
add
into
imul
pop
mov
fidivs
imul
xchg
add
mov
jns
movsb
stos
lea
mov
add
loope
mov
adcb
imul
push
ret
sahf
movsb
pop
xor
mov
inc
mov
hlt
mov
imul
xchg
test
mov
mov
shlb
lea
xorl
mov
cwtl
pushf
testl
js
fidivs
test
hlt
mov
push
in
sub
rep
inc
and
pop
rep
popa
clc
cs
xchg
out
jg
jle
xor
imul
stc
out
iret
data16
adcb
test
mov
mov
cmc
loop
cmc
mov
adc
xchg
mov
enter
mov
adc
sbbl
mov
push
loop
imul
bound
dec
scas
mov
push
loop
mov
mov
add
xchg
mov
xor
mov
mov
insl
mov
mov
jno
aam
cmp
mov
jae
push
mov
je
js
cmp
imul
mov
jle
movsb
scas
lods
inc
outsl
andb
in
gs
xchg
cmp
jns
mov
testl
jae
popf
xor
mov
fnstenv
inc
dec
loopne
xchg
xchg
sarl
into
stos
inc
mov
jae
lea
mov
pop
hlt
stos
inc
mov
sbb
test
xchg
fnstsw
dec
lods
dec
pop
idivb
fwait
xor
addr16
ficoml
xchg
push
fbld
ficoms
orl
xchg
mov
cld
xchg
push
mov
les
inc
ficoml
or
mov
shrl
addr16
xchg
insl
or
mov
xor
mov
insl
jns
mov
jbe
cmpsl
insl
ret
pop
mov
jbe
out
js
enter
ds
jge
call
xchg
popa
add
ret
test
inc
sbb
xchg
mov
xlat
outsb
lret
fcoml
out
xchg
lods
inc
or
and
ss
mov
sub
inc
fiadds
in
test
inc
pop
ret
pop
inc
int3
stc
add
mov
sti
ret
mov
addr16
jnp
sub
xchg
sub
adc
inc
mov
mov
jne
cwtl
cmpsl
xor
punpckhwd
pop
lcall
dec
int
adcb
inc
xchg
sub
mov
dec
jmp
in
movsb
daa
shrl
imul
test
cltd
lock
push
cmpsb
cmp
je
xor
xor
cmp
das
sub
pop
in
iret
sbb
adc
inc
movhps
cli
pusha
std
xchg
xchg
sbb
mov
mov
fwait
add
xchg
xor
add
test
mov
xchg
cld
or
cs
gs
mov
addb
cmpb
dec
in
in
adc
push
or
movsb
sub
pop
inc
nop
daa
js
sbbl
movsb
adcb
in
or
inc
sahf
xor
aaa
scas
xor
fsubrp
lods
inc
and
js
lcall
cmc
enter
loopne
ja
fsubrs
lods
sbb
fildll
adc
ja
xchg
jbe
inc
fcmovnu
lods
mov
addr16
fidivl
scas
adc
loopne
testb
mov
nop
daa
les
mov
pop
and
cwtl
out
lret
push
es
fdivl
repnz
insl
and
and
es
shlb
icebp
repnz
fsubrs
hlt
push
jmp
mov
outsb
add
lret
stc
cmp
sub
loope
insb
add
popf
pusha
test
pop
xor
mov
mov
imul
repz
fimuls
xchg
fldcw
cmp
int3
dec
dec
jecxz
out
dec
jecxz
popf
pushf
xor
cmp
pop
push
xchg
mov
fcmovu
jae
xchg
xor
xor
mov
mov
push
jo
mov
out
ret
cs
fstps
push
xor
mov
cmpsl
mov
add
inc
push
ss
pushf
xor
enter
add
data16
pop
call
adcb
and
sbb
cld
pop
jmp
lea
dec
data16
jno
jae
pop
pop
jo
lds
jg
sub
pop
xor
cmp
push
xchg
lcall
mov
mov
cmpsl
aas
push
addr16
aam
cli
xchg
out
test
sbb
insb
push
jmp
mov
je
push
inc
and
negl
mov
movaps
push
sahf
dec
push
popf
jns
mov
jmp
mov
loop
jmp
push
sbb
fnsave
adc
mov
cwtl
push
xchg
dec
mov
pop
cmc
push
xor
cli
push
rcr
cmc
into
sbbl
sub
mov
ret
repnz
adc
je
sub
test
or
fcomps
xor
sbb
cmc
das
test
movsb
dec
cltd
xorl
into
add
rclb
mov
xor
jp
mov
lea
lcall
mov
jne
inc
jl
test
xor
xchg
es
adc
int3
int
push
xchg
mov
inc
jmp
fwait
shrl
add
cmp
cmp
popa
pop
and
xchg
dec
cmp
mov
mov
pop
dec
or
or
aaa
or
mov
jbe
xchg
xchg
mov
loop
cld
mov
cmp
sbbb
mov
or
test
xor
ret
jge
xor
xor
ss
testl
add
add
push
mov
sub
sub
cli
stc
inc
add
test
jb
or
int3
inc
call
mov
aaa
stos
lds
aaa
mov
xchg
ror
sbb
gs
adc
enter
movl
aad
cmp
jb
and
and
jae
pop
in
popa
pop
cltd
mov
mov
or
lret
subl
clc
sub
inc
push
mov
or
lret
aas
adc
and
outsl
mov
lods
cmp
sbb
fisttps
jb
scas
rol
add
aas
jecxz
lcall
inc
ret
jns
orl
jl
and
jg
clc
pop
pop
loop
iret
fsubrs
sar
addr16
push
cmpsb
out
sbb
inc
or
scas
int
divb
std
push
xchg
das
mov
sbb
push
scas
lods
adc
dec
dec
jl
fcomi
in
xchg
xchg
sbb
scas
sbb
insl
inc
xor
adc
cmp
or
xor
xor
repz
inc
ljmp
xor
inc
push
add
ds
xlat
dec
xor
andb
jno
xor
outsl
jbe
popa
in
dec
mov
pushf
aam
and
movsl
mov
outsb
test
mov
mov
mov
popf
fstl
stos
mov
inc
sbb
out
mov
inc
in
xor
add
lcall
daa
jl
inc
ss
xchg
xor
sti
test
addr16
bound
std
inc
push
pop
sti
insb
std
mov
loop
dec
jnp
shrl
adc
arpl
popf
sarb
adc
add
xchg
bound
test
out
test
sbb
or
das
pop
mov
cmp
fsubrl
mov
test
lret
shrl
pop
adc
test
stos
inc
popf
ds
imul
roll
stos
inc
add
push
out
and
adcb
fs
arpl
cmp
dec
out
mov
outsl
or
cmp
movsb
scas
pop
jno
dec
repnz
insl
scas
push
lahf
inc
mov
cmp
sahf
xor
mov
push
xchg
jno
inc
add
gs
in
adcl
or
mov
fstps
mov
jnp
aad
fs
adc
cltd
xor
fidivl
aaa
repz
jl
sbb
add
xchg
sbb
test
mov
das
fwait
rcrl
mov
mov
cmp
fs
jl
rorl
lcall
int
dec
outsl
hlt
xchg
sub
mov
jge
dec
mov
mov
add
or
cmpsb
mov
testl
push
xorb
xlat
cmp
ret
call
sub
cwtl
das
fwait
inc
outsl
push
xor
and
stos
in
sub
add
cs
subl
leave
movsl
lock
popf
sbb
stc
fnstenv
and
dec
repnz
push
sahf
xor
and
push
iret
dec
jle
jp
lret
xchg
pushf
xor
fsubrl
mov
pop
lret
bound
mov
xor
gs
cmp
or
and
mov
fcmovne
sub
stc
adc
into
gs
adcb
fwait
in
addl
xor
dec
lea
in
add
loopne
insl
stc
nop
jns
addr16
cmp
push
test
out
int3
frstor
mov
ljmp
jno
int
jmpw
std
xchg
mov
lret
aaa
adc
dec
push
sub
push
orl
lret
ja
std
and
data16
aam
test
fsin
test
sub
xchg
sub
mov
rclb
jecxz
inc
push
fbstp
push
cwtl
out
std
xchg
mov
lret
adc
cmp
dec
in
lea
hlt
test
add
mov
xchg
sub
mov
pop
fistpl
adc
jp
mov
lret
add
loop
and
fistl
sahf
xor
loop
mov
adc
lret
push
cltd
xor
test
hlt
mov
rcll
test
push
push
aas
outsb
jl
test
xchg
data16
ljmp
in
push
cltd
xor
xchg
insb
add
repz
ds
mov
sub
lds
inc
mov
data16
insl
mov
shl
mov
xchg
sbb
daa
cmp
test
sub
sahf
inc
pop
out
repnz
in
sbb
push
sub
jbe
movsl
cmp
lahf
mov
mov
ret
pop
hlt
fisubrs
insl
fadd
pop
pop
mov
mov
and
hlt
ds
cmpsl
and
inc
hlt
ds
outsl
jp
movl
adc
add
mov
lea
lods
inc
insl
cmpsb
shrb
test
shlb
cmp
sbb
lahf
inc
lock
movsb
push
mov
pop
je
stc
pop
jb
sbb
xor
es
sahf
xor
jne
mov
je
test
jno
inc
sti
xchg
daa
fdivrp
popl
push
sbb
stos
and
into
add
xor
repnz
push
ljmp
xor
xchg
sbb
out
mov
insl
add
rcr
jne
cmp
xchg
loope
test
mov
enter
xlat
cmp
push
in
adc
add
in
and
scas
addr16
mov
es
mov
mov
adc
fnstenv
jbe
xor
les
lods
and
insl
or
jmp
and
mov
jb
xor
push
mov
fisttpl
jg
push
lock
push
sbb
data16
jl
pop
mov
in
test
or
in
sub
xchg
or
push
out
sbb
nop
xorl
pop
scas
ret
hlt
cmpsb
cmp
add
sub
shrl
xchg
loopne
out
xchg
nop
daa
xor
or
inc
dec
dec
sub
lock
int3
arpl
mov
adc
add
pop
shll
jb
ret
popf
pop
out
shrl
or
outsb
sub
xor
mov
lcall
shl
shrl
add
nop
jp
xchg
mov
movsb
adc
aaa
cmp
push
mov
loopne
out
gs
in
andl
or
inc
mov
ret
scas
ss
mov
ja
inc
push
jmp
bnd
push
jae
pop
sahf
dec
pushf
popf
xor
addr16
inc
add
lret
lock
clc
and
call
push
inc
mov
popf
subb
lahf
cmpsb
adc
sub
inc
xor
add
fnstenv
and
sti
vpmacssdqh
scas
mov
lods
into
leave
xchg
sub
out
lret
mov
jge
push
ljmp
jno
pop
addr16
add
es
ret
push
or
mov
dec
pop
dec
loope
addr16
in
stos
pop
or
or
or
add
adc
shlb
and
pop
xor
xchg
mov
leave
sbb
test
lds
daa
lcall
fs
rsqrtps
insl
es
sub
nop
sbb
dec
les
shrl
inc
xor
jae
xchg
sub
in
lea
push
cli
push
xchg
sub
fnstcw
dec
cmpsb
incl
sahf
iret
iret
shrb
jmp
lock
inc
fiaddl
push
movsl
or
clc
les
sub
push
in
push
out
jle
loope
or
mov
roll
jb
movsb
cmp
ljmp
cmp
lahf
mov
shlb
mov
jne
inc
fildl
mov
cmp
and
or
dec
loopne
cltd
mov
mov
fadds
fs
xor
adcb
pushf
jge
mov
and
dec
std
xchg
ja
xor
mov
cld
push
ljmp
test
movsl
pop
out
leave
or
daa
and
inc
jnp
xchg
sub
mov
cld
mov
cmpl
shrl
push
or
fsin
cmp
fdivp
or
in
insb
cmp
iret
dec
mov
in
sbbl
or
jmp
xchg
sub
shlb
cmp
test
stos
or
jle
in
test
cmp
repnz
or
mov
fldt
rcr
inc
ficoms
cld
mov
pop
cmp
cld
pusha
jnp
push
inc
mov
outsb
push
jmp
mov
dec
mov
stos
cmp
je
pop
inc
fdivrs
sar
or
test
pop
lock
mov
ja
lea
mov
adc
mov
xor
dec
add
sub
repz
out
xchg
adc
mov
inc
xlat
jae
sub
hlt
pushf
pop
cmc
xor
dec
loope
push
push
ljmp
jbe
sbb
mov
xchg
sub
mov
ret
scas
shrb
and
ja
jl
xchg
rcrl
mov
add
sub
push
popa
inc
fcoms
mov
fbld
js
clc
inc
dec
loopne
push
addr16
push
xchg
jg
in
outsl
out
add
or
pop
mov
cmp
cwtl
das
pop
jle
inc
xor
push
xchg
push
fistpl
mov
imul
shrb
push
cli
xchg
mov
adc
js
cmp
push
sahf
lcall
cmc
fisubrl
int3
js
aas
inc
add
jl
adc
lret
call
sbb
jbe
inc
xlat
push
jo
mov
mov
fnstsw
scas
jo
pusha
or
sub
dec
in
mov
xchg
or
scas
ss
sub
les
adc
or
adc
cltd
mov
mov
xchg
sbb
fcmovnu
push
sub
pop
fs
push
jp
shr
jbe
mov
xchg
fistpl
sbbl
es
sub
inc
dec
jg
push
insb
fwait
sbb
pushf
test
sarl
jecxz
je
int
sub
xchg
sbb
popf
fnstcw
inc
out
test
lds
xlat
addb
pop
enter
adc
rolb
pop
and
mov
and
sarb
test
cltd
fnstcw
push
scas
or
arpl
call
xchg
inc
and
cmpsl
aam
add
lds
cld
je
je
mov
mov
test
lea
popf
push
sti
fists
xor
sbb
decb
sub
mov
out
jp
jne
add
fwait
and
shl
rdtsc
notl
mov
lcall
mov
or
sbb
out
js
xor
mov
adc
jno
mov
es
icebp
mov
iret
push
lret
in
and
je
xor
mov
push
in
aaa
adc
lock
xlat
add
cwtl
out
inc
adcb
data16
mov
in
and
hlt
fucomi
rclb
xchg
int
rcrb
loopne
xchg
jno
out
push
push
int3
decl
or
test
lods
movsl
xchg
and
sub
inc
popa
mov
aad
insl
mov
test
xor
mov
cwtl
jmp
insb
adc
jno
insb
mov
mov
sahf
out
mov
bound
in
fists
xchg
and
movsl
ljmp
mov
insl
shlb
inc
lods
push
sub
fdivl
enter
push
jae
mov
icebp
es
mov
fdivs
cmp
les
movsl
mov
jns
or
sbb
sahf
jp
cmp
mov
fldpi
pop
cmp
insl
insb
mov
jo
xchg
and
test
dec
call
in
mov
xor
cltd
xor
push
jo
add
xchg
jmp
mov
mov
ret
and
inc
and
add
test
ret
test
fsubs
jge
dec
or
popf
repnz
popa
xor
test
xchg
xchg
insb
icebp
vmovaps
das
loope
pop
mov
ret
add
pop
je
int3
lret
repnz
pop
jle
ret
inc
xor
jl
lcall
push
dec
inc
fxch
orb
mov
mov
sub
push
mov
rcll
sub
daa
mov
and
jg
pop
sbb
add
jne
ret
hlt
push
out
adc
fbld
push
cltd
mov
andb
inc
cmp
cmp
jno
fwait
iret
dec
jns
dec
frstor
repnz
nop
clc
cmp
scas
xchg
cmpsl
ljmp
popf
les
in
or
in
add
sub
jns
push
mov
movsb
dec
xchg
leave
fucomp
cmp
pop
mov
icebp
cmp
cmp
dec
ljmp
in
mov
mov
sbb
mov
mov
sbb
xchg
test
fmuls
fs
scas
out
mov
out
cmc
std
mov
out
rorl
xor
jecxz
test
cmp
add
push
loop
and
test
mov
push
mov
jle
sub
js
cmp
adc
lds
loopne
cmp
mov
jne
jg
pop
pop
lds
dec
add
dec
lahf
scas
in
daa
or
sub
mov
push
jge
adc
xor
dec
or
cmovbe
or
inc
cltd
movsl
xchg
iret
sbb
push
push
dec
cmc
jb
cmpsl
lret
adc
lret
gs
pop
cmpsb
mov
lods
repnz
adc
test
mov
repz
jecxz
dec
sbb
out
mov
lret
jno
stos
jae
or
xchg
stc
inc
push
xor
mov
fcompl
inc
mov
mov
into
sahf
pop
mov
push
call
mov
xchg
pop
push
add
adc
andl
lahf
add
push
int
push
pop
jl
sahf
mov
xchg
xor
fldenv
mov
outsl
insl
mov
dec
inc
xchg
push
jmp
data16
lret
add
pop
pop
int3
cwtl
or
icebp
and
notb
lret
int3
push
inc
sbb
scas
call
mov
sbb
out
inc
out
xchg
push
pop
popf
add
pop
leave
ficoml
sarl
inc
cltd
lock
ret
jmp
sti
stos
inc
push
cwtl
jae
sbb
adcl
xor
adc
popf
call
addr16
dec
test
fcmovne
js
adc
mov
std
shlb
push
add
xor
enter
mov
in
inc
push
in
xchg
mov
std
cmpb
add
inc
xor
mov
mov
mov
push
mov
aam
orw
jg
std
dec
pop
out
pop
xchg
push
xchg
cmp
aam
imul
and
pop
inc
push
pop
mov
out
mov
adc
movsl
mov
aam
mov
test
neg
addr16
outsb
in
roll
or
sbb
cmp
out
push
pop
mov
lahf
jg
outsb
xor
mov
add
push
and
loop
mov
mov
in
out
push
scas
jbe
xchg
test
mov
mov
gs
adc
jl
repz
and
inc
mov
and
mov
js
cwtl
sbb
sub
cmp
fwait
or
fidivrs
cmovg
jp
lds
sbb
adcb
xor
xor
cld
sbb
add
jecxz
lods
ret
pop
push
repz
bound
rorl
push
sahf
mov
lahf
dec
fisubs
push
and
sub
or
dec
loop
xchg
pop
mov
bound
xlat
xchg
scas
xchg
sbb
rcrb
iret
int3
nop
repnz
mov
mov
add
cmp
and
add
movsl
push
inc
mov
adc
hlt
pop
dec
jbe
push
xor
imul
and
gs
pop
in
popf
loop
and
lahf
cmp
aas
lea
jg,pn
cmpsl
jnp
neg
sar
rorb
sbb
add
fwait
movsl
jne
lahf
dec
call
into
push
imul
push
xchg
and
cmp
push
ja
ja
inc
rorb
xchg
mov
cli
push
sbb
int3
inc
stos
rorl
imul
sub
je
push
xlat
xchg
xor
sub
or
dec
push
adc
pop
rcrb
xchg
xor
xchg
jb
lret
lds
cmp
mov
xchg
sarl
aas
xchg
pop
and
jae
pop
push
lock
iret
sub
test
add
jns
ja
jle
push
mov
pop
add
pushf
or
jbe
dec
aad
xchg
dec
inc
rcrl
test
xchg
mov
sbbl
pop
fbstp
pop
and
jns
push
test
shll
insl
cmpsl
inc
push
sbb
lahf
roll
dec
rcrl
mov
les
cltd
popf
sbb
idivb
xchg
mov
lock
pop
xlat
push
mov
fimuls
pushf
sbb
and
filds
add
loope
add
and
cmp
aad
cmp
call
addr16
dec
dec
insb
cltd
cmp
decb
daa
push
pop
iret
inc
ljmp
push
lds
stc
es
stos
paddusb
push
daa
cmp
jnp
test
rorl
call
cmp
pushl
fdivs
push
push
test
imul
insb
in
imul
ud2
mov
rorb
add
add
ficoml
jecxz
ss
int
fsubrl
repnz
sub
pop
or
lock
push
inc
mov
pop
mov
sahf
addb
jbe
mov
rclb
or
xchg
xor
mov
push
add
ss
jle
dec
test
orl
sbb
pop
aas
push
inc
push
dec
and
out
dec
stc
xor
mov
test
xor
push
int
push
gs
loope
mov
xor
or
movsl
sbb
testl
add
sbb
lock
cld
dec
jle
popf
push
cwtl
or
repz
inc
dec
add
sub
push
pusha
test
cmp
lock
gs
sbb
sbb
mov
or
movsb
adc
mov
decb
nop
pop
pop
push
int
lods
sub
stos
ret
repz
sub
popf
pop
xchg
jno
cli
mov
and
inc
mov
xchg
pop
jae
sbb
push
xor
aas
cmp
mov
out
sub
pop
fcom
sbb
shrl
pop
dec
inc
dec
jb
fiadds
in
cwtl
xor
popa
and
repnz
dec
mov
js
int3
xchg
dec
mov
dec
pop
inc
push
addb
cs
je
pop
mov
repz
cmc
xor
xchg
inc
inc
add
repz
call
xor
lods
stos
cmc
cwtl
lret
push
cmpb
notl
icebp
push
pop
jge
jp
fstl
xchg
loop
lret
stos
loope
les
pop
sbb
das
test
jbe
inc
sub
jmp
and
mov
lods
inc
adc
std
lahf
in
in
loopne
adc
dec
pop
jne
mov
mov
stos
popa
cmp
aam
sub
out
mov
push
xor
fldcw
dec
jbe
sarl
sub
mov
pop
iret
jbe
mov
or
mov
mov
pusha
mov
leave
and
cli
sub
adc
jae
adc
scas
mov
test
sarl
push
scas
pop
push
hlt
sub
xorps
xor
sub
in
scas
xlat
inc
gs
jns
mov
fwait
scas
nop
stos
and
stos
mov
sbb
jmp
cld
fcomps
dec
bound
xchg
aam
xlat
dec
js
cmpsb
lret
dec
cmp
rcrb
fmuls
fisubrs
and
xchg
mov
lds
inc
ja
and
xchg
mov
fnstenv
shlb
fidivrl
icebp
ljmp
rorl
jle
jns
cmp
dec
cmc
mov
sub
inc
mov
push
data16
inc
xchg
movb
inc
xchg
ss
test
repnz
pop
xchg
int
fiaddl
cmpsl
popa
jo
mov
inc
in
cmpsb
andb
xor
notl
jmp
adc
sub
push
les
cmp
lret
xchg
jb
ljmp
adc
ror
xor
jge
xlat
or
push
inc
das
mov
mov
push
xchg
xor
inc
js
lcall
std
and
xor
lret
jmp
add
shrd
scas
nop
das
push
sbb
inc
pop
lret
jbe
movsb
inc
shlb
xor
loope
lret
jecxz
push
fisttps
mov
push
pop
rorl
mov
in
mov
pop
rorb
fs
and
loopne
mov
sbb
fs
sub
fists
sub
push
fs
daa
push
adc
and
mov
cmc
pcmpgtb
sub
popf
push
or
pop
iret
fwait
xor
fwait
mov
sbb
aaa
inc
mov
lods
es
ficoms
xor
outsb
lahf
out
xchg
stos
lods
leave
mov
scas
mov
leave
adc
inc
cli
add
scas
fwait
sub
andl
inc
int3
leave
xchg
es
das
insb
dec
leave
xchg
hlt
sbb
push
rolb
in
cltd
xchg
mov
or
fsts
ds
push
jmp
das
fstps
mov
das
xor
mov
test
pop
xchg
xchg
cmpsb
daa
pop
or
pop
add
cmpsl
jecxz
xchg
stos
add
stc
xchg
add
inc
adc
push
dec
jns
popf
lahf
data16
mov
mov
ret
jp
in
cli
mov
or
xchg
jnp
shlb
sub
ljmp
leave
frstor
jge
fistpl
sbb
arpl
ds
imul
iret
in
sub
lret
and
stos
test
lcall
test
test
adc
mov
jmp
out
jmp
mov
lods
push
mov
test
or
sub
lret
test
mov
pop
cwtl
es
std
or
pop
cmp
jb
dec
push
fs
mov
add
mov
loope
mov
pop
inc
out
cmp
ds
sbb
mov
mov
call
js
mov
fwait
pop
in
jge
arpl
test
jmp
addl
cmp
in
mov
mov
out
bound
push
xor
in
sub
cmp
movsl
sub
cmp
dec
sbb
sub
mov
ds
mov
call
stc
sarb
ljmp
arpl
inc
das
push
fwait
mov
dec
arpl
sub
lea
sbb
jne
in
mov
cmpsl
int
insl
adc
jp
les
loopne
aas
xchg
sti
cmp
sbb
jo
xchg
inc
pop
jle
sbb
pop
scas
cld
jno
add
sbb
in
outsl
sahf
into
in
shrl
rorb
sbb
inc
lret
fst
pop
icebp
iret
sub
lret
dec
fwait
push
cmpsl
pop
inc
and
mov
inc
jmp
popf
and
lods
fldenv
cmp
aad
pop
push
lods
lret
test
lods
cmp
xchg
inc
shlb
pop
or
js
xchg
insb
pop
adc
push
orb
mov
fucomp
inc
jne
inc
es
orb
cs
mov
dec
or
adc
push
fwait
adc
and
mov
adc
jne
mov
push
pop
leave
imul
inc
test
pusha
sbb
mov
add
out
xor
lds
std
lods
mov
mov
int3
xchg
sub
add
push
data16
pusha
lods
mov
or
xorb
mov
cld
lods
jg
mov
pushf
xchg
mov
xchg
or
ret
stc
or
insb
fiadds
pop
daa
mov
cmp
scas
popa
pop
pop
sub
pop
or
push
addr16
jge
push
lret
pusha
in
andl
jns
aam
cmovle
xchg
fcompl
inc
adc
push
andb
cmp
mov
fmull
add
imul
mov
mov
mov
dec
xor
sub
mov
cmp
add
fnstsw
aam
xor
dec
test
divl
dec
dec
push
scas
push
fs
clc
jb
lock
xchg
incb
dec
add
es
lock
mov
out
cmpsb
dec
aad
xlat
adc
push
ret
sub
add
cmp
xchg
sti
frndint
or
rclb
mov
btc
xor
and
test
inc
dec
adc
sbbl
stos
mov
pop
jl
stc
pop
or
fsincos
add
mov
mov
sub
iret
cmp
jns
ss
push
xchg
adc
popf
in
jmp
mov
add
outsb
movsl
cli
call
subl
mov
addr16
and
adc
jbe
fsubrs
ficompl
ds
sbb
dec
in
sub
push
pop
xchg
cli
scas
les
dec
lret
imul
mov
adc
movsl
out
scas
push
mov
sarb
std
lods
loope
xchg
test
pop
mov
leave
xchg
sarl
shl
or
outsb
in
sbb
mov
das
pushf
fcmovnu
test
cwtl
or
cmpl
add
push
xor
ds
adc
fisubrl
jno,pn
or
ds
gs
inc
movaps
push
push
sbb
cmpsb
imul
in
xchg
scas
push
cmp
sbb
scas
cmp
xor
aaa
and
icebp
push
pop
scas
repz
inc
in
sbb
outsl
and
bound
incb
addr16
mov
outsb
mov
adcl
xor
enter
cwtl
ss
sbb
add
ds
mov
stos
leave
add
pop
leave
cmp
push
repz
jb
imul
sbb
add
fcompl
pop
sub
fsts
mov
push
add
jb
inc
idivb
dec
ja
lock
mov
test
xchg
sub
out
in
pop
dec
cmp
jb
bnd
lock
fsub
loope
mov
mov
jae
inc
lret
scas
dec
xchg
mov
pop
push
sbb
in
or
ljmp
pop
jb
fwait
mov
movsl
sbb
pop
cmp
cmpsb
inc
cmpb
adc
sub
and
fcoml
clc
cltd
jb
cmp
gs
addb
outsb
int3
or
sub
int
adc
add
enter
inc
add
pusha
ss
adcb
jle
sbb
lret
adcb
insb
bound
fcompl
jmp
test
popaw
and
data16
mov
sbb
and
xchg
cmpb
xlat
mov
mov
and
sbb
leave
jge
insb
cmpsl
pop
imul
inc
mov
pop
xchg
outsl
loop
xchg
mov
test
repnz
lods
jmp
mov
adc
xchg
out
jnp
mov
insb
mov
repz
into
shl
aad
add
sbb
xchg
clc
lcall
xchg
test
insb
ljmp
scas
loope
adc
cmp
mov
cmp
sbb
test
insb
stos
sub
sub
movsl
mov
cmp
push
fnstsw
mov
shr
lcall
mov
mov
loope
push
add
lock
inc
jns
sbb
movsl
cmp
mov
jg
loopne
or
xor
jecxz
out
rorl
js
add
cmc
popf
or
aad
ljmp
inc
stos
fmull
jns
inc
push
lret
test
adc
mov
sbb
mov
ret
mov
mov
lods
outsl
cmp
adc
mov
xchg
arpl
addr16
ljmp
push
sbb
jae
data16
in
xchg
and
inc
inc
das
inc
fiaddl
test
clc
dec
sti
dec
jmp
mov
cmp
dec
xchg
pop
cmp
and
xchg
test
fwait
loop
sub
lea
inc
dec
idivb
mov
and
and
test
xchg
mov
fstps
ljmp
lahf
add
out
jb
fbstp
sbb
mov
imul
mov
push
pushf
test
adc
loop
nop
dec
data16
sti
jmp
jmp
xchg
lock
cmp
cs
push
outsl
sbb
dec
inc
add
insb
outsb
popf
dec
jg
cmp
mov
mov
jle
mov
fnstenv
jno
lods
iret
mov
js
roll
imul
or
fdivrs
mov
cmp
arpl
xchg
idivl
outsb
mov
fldl
adc
test
or
fstpl
mov
insl
cs
push
stos
scas
cmp
add
call
lret
mov
mov
test
pusha
jmp
sbb
outsb
sub
inc
add
add
scas
and
inc
dec
std
add
adc
popa
mov
in
adc
data16
outsb
push
jmp
dec
js
sbb
icebp
imul
imul
sti
lods
mov
jmp
mov
sbb
cmc
inc
jmp
pop
fcomi
lods
pop
pusha
loope
rcll
ds
jae
or
outsl
xor
or
hlt
jno
mov
cmp
mov
mov
pusha
fidivrl
cmpsl
scas
inc
mov
std
shll
cmpsl
push
sbb
sahf
xchg
sub
adc
int3
enter
cld
mov
setae
jle
repz
fs
pop
pusha
js
push
mov
ret
aam
stos
cmp
sub
cmpsb
mov
pop
std
aaa
les
cmp
fwait
icebp
xchg
xrelease
insb
inc
outsb
sub
adc
xchg
and
pop
aas
cmp
push
stc
mov
xchg
mov
push
mov
cld
or
lock
and
stos
addr16
lods
mov
popa
sub
xchg
cltd
pop
mov
daa
bound
btsl
xlat
dec
std
test
mov
xlat
fisttpl
push
add
test
insl
pusha
aam
cmpb
popa
mov
imul
fwait
xor
jbe
cmp
sbb
add
cltd
mov
sbb
sub
aas
or
mov
test
imul
daa
jg
pop
test
aad
filds
push
nop
lcall
push
dec
sbb
sbb
loope
in
xor
jbe
xchg
pop
fcmovnb
iret
jp
adc
arpl
cmpsl
cwtl
popf
mov
pop
dec
cmp
ja
push
or
test
movsb
mov
mov
or
push
pop
pop
and
pop
and
xchg
outsl
pop
push
xchg
xchg
xor
movl
pop
cmp
fs
add
mov
xchg
rcrb
aad
cmpsl
push
and
inc
loopne
cmp
xor
js
mov
leave
mov
sub
pop
out
or
lock
test
iret
mov
cmpsl
adc
jns
sub
xor
dec
jno
std
dec
mov
push
pop
shlb
add
mov
std
xor
sub
push
dec
out
add
ljmp
dec
sarb
jp
shlb
fdivl
nop
mov
xor
adc
in
pop
icebp
movsb
mov
test
pop
fnsave
test
test
fcomip
inc
jbe
sub
jae
shll
out
xchg
mov
push
dec
push
jae
jnp
movsb
add
pushf
sub
or
addr16
iret
xor
cltd
rcll
sbb
fwait
xchg
xchg
test
add
daa
andl
lock
inc
aad
jne
pop
stos
push
mov
stc
stc
fisubrl
int
adc
in
inc
sti
pop
and
pop
mov
cmp
mov
push
lret
into
popa
fwait
mov
sub
mov
call
cld
mov
enter
pop
imul
inc
iret
movsb
xor
sub
jge
mov
mov
mov
jno
jae
or
dec
inc
ja
mov
aas
ljmp
fiadds
cld
popa
addr16
cltd
sub
cltd
xor
movsl
pop
jns
sub
sbbb
and
fs
dec
add
in
cmp
jge
sarl
out
sub
lea
lods
mov
dec
inc
xor
data16
cli
pop
arpl
cmovns
scas
cmp
outsl
pop
hlt
hlt
lea
popf
jl
xchg
and
xor
inc
movsb
stos
ja
xor
mov
xchg
jmp
shr
adc
imull
addr16
fwait
iret
cltd
xchg
ret
rorb
enter
lahf
sub
jae
mov
jp
adc
jecxz
les
jb
lds
jg
out
popa
neg
push
popa
scas
shr
dec
insl
pop
cmc
cli
dec
rorl
je
push
mov
pop
push
sarb
popf
imul
jp
out
iret
xor
pushf
adc
push
xor
push
popf
and
jp
and
xor
in
add
mov
adcb
and
in
in
or
push
test
pop
mov
push
fcmovu
pop
fs
cwtl
popa
pop
sarl
adc
lret
dec
xchg
nop
add
mov
fistl
mov
adc
and
notl
es
loopne
cld
xor
fstl
sti
scas
mov
ficomps
cwtl
pushf
shr
aad
inc
xchg
lret
cmp
mov
notb
pop
pop
xchg
sahf
jns
xchg
mov
nop
out
je
xchg
shlb
add
in
stos
mov
jns
or
gs
scas
movb
int3
and
mov
or
adc
int3
sub
cmpsl
cmc
pop
out
loope
cwtl
test
test
push
mov
pusha
cltd
loope
pop
jmp
fcmovne
fstps
dec
or
adc
cmpl
les
lcall
push
inc
mov
sbb
repnz
pushf
add
in
pop
jae
popa
jmp
jmp
popa
pushf
movsl
ja
jbe
rolb
stos
adc
jp
movb
test
aas
aaa
ret
mov
or
mov
mov
inc
inc
test
popa
pop
mov
xchg
sbb
or
fadds
icebp
dec
stos
out
ja
pop
fsts
push
lock
xchg
insl
ljmp
inc
cmp
negb
das
imul
sbb
adc
dec
sub
movsb
inc
mov
int
xor
insb
aad
ja
or
mov
dec
push
pop
je
sub
mov
jb
fistpl
push
scas
mov
jb
pop
pusha
loope
arpl
adc
mov
stos
pop
mov
pop
jecxz
mov
in
add
xor
sbb
inc
negb
sub
mov
jnp
and
or
mov
frstor
rclb
aaa
fdivp
mov
cmp
fisttpl
push
push
or
iret
and
dec
push
loop
lcall
ror
jle
daa
rcrb
jmp
jne
test
adc
lods
or
add
dec
xor
dec
in
lods
insl
or
fldenv
cmp
loop
pusha
adc
clc
scas
aad
lea
sub
outsl
aam
jge
or
es
cmp
add
jns
xchg
call
pushf
repnz
mov
data16
sbb
xlat
lahf
inc
pop
add
xchg
or
into
mov
or
mov
leave
push
stos
sbb
xchg
movsb
sbb
pop
cmp
xchg
mov
shlb
push
gs
in
das
jl
fldenv
frstor
out
cmc
dec
push
and
adc
adc
aad
nop
jae
je
inc
inc
sub
in
jmp
gs
repnz
sub
adc
xor
fdivrl
inc
seta
daa
jge
lods
test
mov
sbb
and
adc
pop
pop
fdivl
sub
sub
pop
andb
outsb
aaa
ja
aas
gs
and
daa
sbb
sbb
fidivrl
add
out
or
dec
sub
popa
xchg
dec
lods
test
dec
cmp
bound
sbb
and
jnp
or
call
jnp
push
adc
jns
pop
icebp
movsl
movsb
int
or
lcall
and
int
mov
jl
mov
pusha
lods
sub
js
inc
or
into
popf
sarl
adc
sar
outsl
cmp
loop
stc
cmp
in
mov
popa
xor
pop
ret
inc
xor
cwtl
sbb
cmpb
out
lcall
idivl
dec
mov
mov
xlat
push
in
pushf
mov
fidivl
mov
inc
shll
icebp
cmp
fmuls
outsl
insl
clc
outsl
push
push
mov
sahf
sbb
pop
pop
pop
xchg
mov
movl
test
add
push
inc
adc
repz
push
push
ret
mull
and
pusha
xchg
out
int3
mov
jmp
in
imul
out
clc
jle
xchg
cmp
cmp
inc
ficoms
xchg
fidivl
jge
mulb
sub
adc
daa
orb
dec
pop
fsts
and
pop
fcom
push
jnp
push
lret
add
or
pop
cmp
jns
jo
jecxz
xchg
xchg
cs
mov
cwtl
loope
mov
push
add
mov
aaa
shrl
push
ds
mov
mov
adc
sub
sub
xor
dec
in
mov
insl
add
hlt
fnstenv
sub
xchg
jns
lods
inc
lods
lcall
add
ds
and
js
aas
push
out
jo
add
cmpsb
xchg
jb
ret
and
daa
sub
xor
xor
dec
lea
fisttps
stos
pop
out
fdiv
ljmp
inc
or
sbbl
dec
jmp
fcompl
shrl
ds
outsl
dec
repnz
adcb
sahf
adc
iret
jecxz
xor
aaa
mov
call
mov
fldl
xchg
push
jmp
and
dec
outsb
cmpb
rcl
std
add
daa
js
pop
ss
addr16
and
cmpsl
ds
ficoml
or
pop
push
sub
or
in
cmpsb
jg
es
add
add
and
push
insb
aas
popf
js
subb
pop
sahf
cld
adc
sbb
cwtl
das
xchg
outsl
inc
fsubl
shll
or
imul
push
lods
inc
mov
ja
scas
testb
cli
push
xor
inc
push
jle
das
mov
shll
adc
or
inc
xor
out
mov
ret
cld
jmp
das
adc
ss
sub
jecxz
xchg
xchg
shlb
mov
mov
in
cld
xchg
push
push
lods
inc
cmp
dec
fbstp
sbb
lret
mov
add
sub
and
jo
hlt
mov
js
lret
xchg
enter
lods
inc
push
lock
sub
mov
bound
pop
jne
in
mov
fisubrs
sub
mov
push
dec
mov
ja
xchg
xor
rcl
clc
pop
sub
push
out
dec
and
scas
xchg
cwtl
das
rcl
inc
xlat
or
push
out
sub
push
dec
clc
ja
adc
ret
scas
clc
jecxz
fistps
popa
clc
inc
cmp
jge
sahf
mov
mov
loope
jmp
or
jne
sub
mov
pop
mov
ret
and
ss
mov
xchg
push
jecxz
in
mov
enter
lcall
stc
nop
pop
xor
xorl
pop
mov
std
in
andl
lds
mov
mov
xchg
push
mov
pop
push
pop
icebp
mov
and
popa
scas
jg
flds
out
and
and
subb
cmp
mov
pop
rep
cld
cmpsl
ds
icebp
mov
inc
out
test
mov
push
out
cld
sub
and
inc
dec
loop
or
xor
movsb
cmp
mov
mov
jge
loope
xor
xor
push
je
adc
imul
push
mov
and
sbbl
mov
push
jmp
fidivs
or
mov
mov
pushf
xor
mov
cld
jmp
stos
inc
insb
or
xorb
cmpsb
cmp
xchg
fadds
in
and
sbbl
sbb
or
inc
repnz
lcall
outsb
imul
jl
mov
sub
push
push
inc
jmp
stc
nop
pushf
xor
imul
adc
punpcklwd
clc
push
mov
cmp
scas
add
mov
dec
mov
fwait
xor
push
shlb
mov
repz
mov
arpl
call
or
mov
mov
stos
inc
sub
mov
lret
push
ret
push
cwtl
das
mov
rcrl
fwait
xor
inc
push
jnp
adc
lds
jle
ljmp
inc
or
ss
sahf
stos
inc
leave
inc
cmp
jg
lea
ss
jno
call
inc
int3
inc
fbstp
in
push
push
mov
in
test
and
enter
sbb
enterw
ljmp
mov
loopne
add
xchg
sub
addr16
push
mov
cwtl
das
push
std
xchg
or
fbstp
sub
or
mov
ret
stos
inc
cld
subb
inc
fcomi
mov
imul
popa
mov
dec
out
xor
add
test
pop
insl
cmc
mov
mov
xor
adc
mov
or
inc
xchg
sub
cmp
scas
punpckhdq
cmp
or
test
mov
loope
mov
mov
ret
out
cld
pop
jmp
mov
shrl
popf
repnz
fsubl
mov
push
ljmp
popa
clc
pusha
add
adc
lods
inc
cmp
test
ror
pusha
push
mov
sub
jmp
push
or
aas
jae
les
push
out
repnz
stc
inc
adc
sbb
shl
sti
mov
mov
inc
cmp
cmp
ret
stc
mov
or
sbb
jge
pop
cltd
xor
add
or
mov
fcomps
inc
fimull
mov
outsb
push
out
pushf
dec
sbb
push
ljmp
daa
inc
jmp
cld
pop
bound
or
aam
icebp
cwtl
cltd
xor
adc
lea
lods
inc
daa
imul
lahf
dec
in
jg
and
mulb
cmp
inc
clc
sbb
out
dec
sub
jle
insl
jmp
fwait
dec
in
add
sbb
adc
sub
mov
mov
mov
les
fistps
xchg
jne
mov
push
lahf
pop
stos
lds
xchg
lds
cli
cmp
addr16
sub
mov
cmp
sahf
fistps
loop
sub
adc
push
cmpsb
inc
mov
shll
movsb
jb
adc
mov
sub
rclb
mov
dec
or
jmp
pop
les
xor
stos
testb
stc
or
adc
stos
ja
ret
lcall
mov
ds
adc
rolb
dec
xlat
bound
pop
out
jge
and
mov
hlt
jg,pn
push
sbb
jg
jge
pop
movsb
imul
xchg
int3
lahf
daa
cmc
mov
mov
inc
or
scas
ss
xchg
mov
dec
hlt
iret
jmp
push
idivb
xor
mov
int
stos
dec
mov
xchg
and
into
fcoms
pop
ret
jb
xor
pop
mov
or
push
mov
icebp
and
sbb
ss
hlt
and
in
outsl
punpcklwd
inc
xchg
jge
mov
enter
scas
mov
sbb
lods
dec
cmp
sub
aam
cmp
lods
int3
outsb
jmp
adc
jge
push
pop
mov
loopne
push
jecxz
sti
jle
and
lods
insl
mov
cmp
lds
leave
or
jno
pop
xlat
pop
mov
les
in
stc
mov
xor
sub
push
pop
mov
dec
mov
jecxz
mov
fisttpll
test
xchg
or
pop
mov
jge
enter
sarb
adc
lods
xchg
and
dec
xorl
outsl
shlb
mov
aam
mov
xchg
cmp
add
rorl
xor
and
das
aad
push
mov
jns
dec
lock
adc
scas
push
sub
xor
jl
test
in
mov
iret
sbb
jno
sti
and
pop
dec
jmp
mov
gs
jo
pop
test
mov
ljmp
subl
push
aam
imul
sti
add
add
dec
and
pop
jbe
rcrl
pusha
psrad
in
stos
sbb
sti
std
dec
lea
mov
mov
sbb
lods
mov
out
loope
sbbb
cmp
mov
stos
inc
mov
or
fistpl
mov
sub
inc
icebp
jg
push
in
xchg
iret
aaa
test
and
inc
scas
pop
shll
in
incl
push
lods
ss
mov
out
insl
stos
push
out
mov
sar
add
loop
sub
push
mov
addr16
aad
aad
mov
faddl
lcall
or
into
addb
mov
or
and
xor
mov
push
xchg
jo
ja
call
sbb
out
xchg
cmp
dec
lea
sarl
fistps
adc
or
arpl
sub
inc
test
in
xlat
mov
or
int3
arpl
cmp
add
xchg
iret
xor
add
lds
popf
xor
jae
and
lds
shl
fnstenv
push
dec
loopne
cld
testl
js
test
mov
lret
movsb
cmp
push
call
leave
int
push
dec
loopne
add
lea
and
nop
pop
jp
inc
mov
ret
shrl
les
add
add
aas
mov
loope
pop
mulb
mov
push
ret
rclb
testl
or
ljmp
sub
scas
insb
nop
push
call
int
adcb
out
push
in
sub
dec
xchg
jg
nop
daa
mov
mov
imul
adc
out
mov
xchg
add
testb
sub
lret
imul
pushf
shrb
cld
mov
das
outsl
repnz
leave
adc
ret
cli
sub
sub
adc
mov
ds
mov
or
cmp
pop
hlt
mov
setl
stos
inc
popa
mov
fidivs
mov
sbb
hlt
mov
cmp
jb
inc
sbb
mov
ret
mov
sbb
mov
js
lret
stc
ljmp
stc
dec
mov
jmp
dec
rcl
mov
inc
enter
xchg
imul
test
dec
inc
fdivrl
jo
cmp
adc
cmp
xor
rcr
in
or
push
push
fnstcw
and
out
call
mov
jecxz
insb
idivb
cmp
ljmp
outsb
mov
cmc
or
push
out
fwait
jp
adc
mov
inc
add
addr16
cmp
pop
cmp
movsl
imul
data16
add
test
jl
dec
loopne
push
stos
inc
imul
cmpsl
and
push
out
push
inc
shrl
jb
test
orl
dec
repnz
pop
sub
push
pop
pushf
ret
jg
mov
out
inc
sarl
ss
mov
repz
lahf
addr16
adc
add
pushf
and
xor
sbb
cmp
outsl
test
test
push
and
push
aaa
mov
mov
and
sbb
adc
scas
inc
lret
sub
ds
pop
xchg
sub
mov
outsl
push
and
mov
jb
out
cmc
mov
popa
mov
mov
ds
lods
mov
sbbl
add
jo
or
sahf
jo
mov
lret
in
pop
push
sub
jo
and
mov
xchg
jle
loope
mov
std
sub
call
scas
mov
mov
scas
mov
mov
push
lods
fidivs
jne
jmp
adc
gs
lret
nop
daa
std
inc
push
fs
sub
xchg
pushf
shrl
sbb
dec
out
out
test
outsl
fs
lahf
inc
or
lock
daa
mov
inc
ljmp
popf
aas
imull
fbstp
mov
adc
xchg
daa
adc
scas
mov
ret
xor
repnz
mov
push
out
xlat
out
or
jecxz
add
lret
jle
mov
jmp
aaa
lret
sti
inc
lods
inc
jne
push
ljmp
jb
pushf
out
sbbl
xchg
sub
cmp
mov
lods
nop
daa
out
int3
dec
loop
mov
xor
xchg
lock
loope
push
in
out
add
je
inc
xlat
out
xchg
sti
xchg
pop
mov
gs
cltd
iret
push
jmp
mov
sbb
aas
lock
das
sub
xchg
sub
or
jmp
mov
stos
sbb
mov
dec
jecxz
lods
mov
and
loop
repz
aad
les
adc
xlat
cmc
xchg
sub
stc
or
ljmp
xor
xchg
sub
lahf
push
out
mov
enter
adcl
add
mov
jecxz
scas
repz
dec
in
sti
leave
pusha
in
into
lock
push
test
movsb
cmpsb
cmp
adc
and
sti
xor
movsl
movsb
lcall
or
lret
stos
stos
inc
icebp
in
cmp
and
clc
adc
fisubs
repnz
ss
mov
leave
add
adc
daa
mov
shr
rcr
fisubrl
repz
add
add
pop
icebp
and
sub
sub
stc
decb
sub
test
cmpsl
loopne
ljmp
outsl
je
popa
mov
mov
adc
sbb
sbb
cmpsb
cmp
lods
xchg
or
rcl
insl
or
xor
rcll
pop
out
stos
inc
or
jae
jp
inc
fcmovne
fwait
inc
pop
icebp
add
jo
mov
ret
mov
stos
inc
lret
xchg
inc
or
mov
push
into
cli
mov
repz
cwtl
das
adc
xor
movsb
les
or
lcall
fldcw
ret
pop
sub
sbbl
jno
lret
xchg
jmp
lock
dec
adc
jae
pop
push
sub
hlt
test
popf
xor
leave
fbstp
ds
xchg
push
mov
cmp
pusha
out
enter
sti
xchg
pop
add
jb
lea
xchg
std
xchg
add
es
fsts
mov
in
and
jl,pt
test
push
and
mov
fs
or
divb
insb
add
adc
xor
imul
add
cli
cmp
sbbl
xchg
jecxz
out
aam
mov
inc
cmc
out
jb
jb
icebp
mov
inc
fistpl
ja
inc
xchg
sub
lahf
sub
andnps
and
mov
jb
nop
rol
pop
les
push
cs
idivl
push
cmp
dec
in
data16
xchg
pushf
pop
lock
call
pushf
shrl
mov
mov
cmp
pop
repnz
sub
xlat
adc
mov
mov
jg
jl
or
subps
xor
into
mov
ret
mov
mov
nop
aam
out
lds
pop
repnz
dec
out
push
es
push
ss
pop
gs
adc
push
cmp
lock
ret
mov
dec
loopne
aam
ret
lds
cltd
out
std
xlat
or
mov
clc
cmp
repz
or
jge
add
mov
push
imul
das
fdivl
or
dec
ret
mov
mov
icebp
decl
call
mov
adc
lock
daa
adc
mov
xor
sub
jae
test
ret
leave
push
movsl
mov
fnclex
jns
lret
add
ss
mov
fsubrs
out
lods
sbb
test
and
loop
jmp
mul
dec
add
xor
pusha
das
push
push
jae
insb
cmpsl
xchg
clc
mov
dec
in
or
mov
pop
hlt
sbb
pop
out
nop
cmp
out
test
std
xchg
rorl
xor
cmpsb
cmp
ss
lcall
or
call
pushf
in
push
jae
dec
xchg
das
or
imul
out
inc
aam
mov
es
cmpsl
fmul
sbb
in
cmpsl
sbb
jg
ja
xchg
mov
int
fs
andb
insl
add
xlat
mov
dec
int3
int3
rclb
cli
xchg
loopne
push
in
call
mov
jnp
xchg
inc
fildl
es
sub
mov
cli
and
hlt
mov
jne
jmp
dec
push
sahf
mov
int3
jae
andb
and
xchg
jnp
inc
sti
xchg
jle
xsha1
cmpsb
mov
pushf
xor
aas
xchg
sub
ret
push
add
sbb
out
pop
not
xchg
loop
imul
sub
push
pushf
or
sub
inc
frstor
shll
mov
mov
int
aad
lds
dec
lods
out
xor
dec
cld
xchg
jge
lret
pop
dec
loop
or
ljmp
pop
adc
aas
pushl
inc
fsubs
les
lret
mov
push
fiaddl
push
sub
testb
xchg
pushf
xor
es
movsl
dec
cld
xchg
lcall
xchg
push
fldcw
mov
fistpll
mov
add
xchg
jae
add
es
out
fidivrl
mov
mov
lahf
ss
inc
pop
repz
push
scas
inc
xor
dec
in
rcr
je
sbbl
pushf
jecxz
mov
lods
inc
xchg
push
test
dec
mov
jb
decl
sub
xchg
sub
mul
pusha
not
xchg
rcrl
add
jb
push
lods
inc
js
rcrl
js
or
nop
daa
dec
sub
push
sahf
ljmp
mov
nop
daa
out
shll
int
mov
jge
in
sub
push
adcb
clc
lods
inc
ljmp
imul
popf
xor
out
mov
xor
pop
movsb
mov
push
out
mov
pop
mov
pop
cmp
ja
sahf
xor
dec
cld
jg
out
jmp
jge
adc
xchg
or
ja
mov
insl
mov
add
pop
lcall
fidivl
lret
fsubrs
in
xchg
sub
lret
repnz
xchg
inc
fiadds
out
sahf
and
jo
dec
mov
sub
or
stos
pushf
xor
pop
je
mov
sub
push
fsubrs
add
dec
movsb
testb
notl
sub
xor
insb
adcb
fisttpl
push
sti
push
push
pop
push
bound
pop
scas
je
in
jecxz
enter
cld
ret
fidivs
jecxz
fsubs
ficompl
xor
test
add
fiaddl
aas
jmp
aam
or
adc
add
cli
or
cli
xchg
or
sbbl
pop
push
mov
int
jno
push
mov
mull
jb
push
sbb
xchg
dec
jbe
daa
test
sbb
sti
mov
int
dec
orps
inc
outsl
jmp
mov
ret
repz
sub
adc
mov
cmp
fstl
mov
in
test
or
mov
push
sub
xorl
add
jne
mulb
cmp
adc
dec
fiaddl
xchg
push
aam
push
pop
leave
icebp
movsl
addr16
ss
outsb
mov
es
test
push
adcb
push
pushf
ret
mov
repnz
pop
ja
or
adc
xlat
setp
and
js
xchg
bound
adc
xchg
adcl
das
jno
push
shl
xchg
sub
xor
and
jae
xor
cmp
and
xchg
inc
adc
lea
mov
gs
xchg
mov
xor
call
or
cmp
or
pop
outsl
push
lea
lea
add
dec
add
mov
xchg
call
mov
sub
sub
orl
lahf
inc
fnop
hlt
data16
and
inc
test
jns
jle
jbe
mov
xor
in
rclb
mov
jne
fsubrs
xchg
cld
sbb
subl
adc
push
lds
and
push
inc
dec
dec
loopne
add
or
rcrl
in
in
pop
or
adc
sub
popl
mov
mov
push
pop
cmp
cmp
jg
sub
sbb
fsub
cli
mov
or
outsb
cmp
xchg
in
dec
and
adc
adc
cmp
xor
xor
fisttpl
fs
lret
outsb
roll
dec
ds
push
mov
insb
cs
mov
das
nop
repz
pusha
out
adc
pop
dec
nop
mov
jne
pop
inc
subb
cmc
ret
add
loopne
or
jb
cmp
pushf
jne
xor
xor
dec
and
das
and
fiaddl
jl
fildl
jmp
and
adc
insb
dec
dec
add
dec
add
stos
push
in
xchg
fwait
jne
push
movsb
mov
xchg
pop
fbstp
cmc
push
add
fnstsw
enter
out
fcoml
adc
mov
xchg
sub
js
or
pop
iret
js
mov
push
ja
jns
loopne
inc
aad
lea
in
jo
les
popf
lds
incl
test
sti
xor
inc
mov
xchg
mov
loope
mov
pop
shrb
leave
subb
popf
xor
hlt
cmpl
test
push
imul
jecxz
into
xchg
xchg
imul
sub
dec
imul
xchg
sbb
dec
outsb
icebp
divl
ja
fucom
in
jno
dec
add
or
adc
inc
outsb
lea
pusha
mov
push
cld
xlat
pop
mov
in
jo
mov
xor
xor
daa
shl
add
fwait
jae
jecxz
shlb
mov
sbb
mov
stos
cmp
sbb
orl
fildl
movsl
stc
clc
movsl
es
aaa
jns
fldenv
ljmp
sub
xchg
mov
loopne
inc
adc
in
imul
lret
inc
shr
sahf
popf
mov
es
cmp
outsb
mov
cmp
and
daa
inc
lock
cmp
jo
mov
pop
ret
mov
ss
lret
shrb
enter
sub
jl
pop
out
lret
cmp
scas
imul
scas
movl
sbb
mov
int
std
xlat
sub
xor
sub
fcmove
lea
sarb
xchg
insl
xchg
jbe
clc
ljmp
in
orl
lods
xor
push
xchg
cmp
inc
out
jbe
sub
pop
mov
mov
fsts
sbb
aad
mov
adc
ljmp
movsl
cs
lret
pop
rol
mov
pop
push
ficoml
orb
pop
pop
je
fucomip
inc
lea
sbb
jecxz
jno
repz
mov
test
jo
xchg
inc
out
icebp
and
pop
outsl
ds
push
cmpsb
jmp
imul
jbe
sbb
stos
push
idivl
mov
or
add
dec
js
mov
xchg
scas
mov
mov
fs
gs
stos
cld
negl
rorb
pop
cmc
fs
and
rcll
jp
xchg
or
and
push
mov
or
sub
mov
inc
adc
inc
sub
std
inc
popf
push
cld
jne
sbbl
sub
negb
mov
xchg
dec
lock
testb
push
into
in
jae
sbb
lods
fwait
push
lods
daa
mov
pusha
inc
lcall
mov
popa
adc
int3
xchg
stos
out
pop
fnstsw
xchg
addr16
push
je
in
repnz
in
add
add
mov
adc
mov
sub
push
dec
adc
callw
popf
out
cmp
cmp
add
pop
lds
mov
adc
enter
inc
adc
mov
adc
adcl
mov
in
sub
add
fistpll
jno
adc
dec
enter
fistpll
xchg
pop
stc
adc
cwtl
icebp
add
mov
pop
sub
loope
mov
in
test
mov
push
adc
sub
mov
lods
jb
ljmp
xor
daa
iret
cs
inc
pop
pop
shrb
adc
xor
pop
loop
xchg
aas
hlt
stc
push
pop
out
jp
cmp
ret
cmpsb
outsl
mov
test
push
mov
in
iret
les
mov
js
dec
cmp
rorb
dec
pop
jns
cmp
push
add
fbld
rorl
out
pusha
rorb
call
pop
jo
aaa
testb
dec
repnz
xchg
and
cli
add
push
mov
lcall
aaa
arpl
mov
xor
dec
fs
cmpsl
jle
clc
inc
sarl
je
aam
mov
aas
and
lea
es
pusha
add
adc
nop
rcll
push
dec
movsl
sbb
out
inc
sahf
jmp
in
out
mov
pop
enter
out
aas
and
scas
movnti
jg
ret
movsl
jge
jne
out
pop
adcl
es
jl
nop
mov
and
dec
pusha
jg
push
iret
loope
dec
sub
data16
xchg
mov
in
inc
xchg
jno
mov
mov
out
dec
loope
push
sub
mov
movsl
push
sbb
cmc
bound
or
subl
hlt
cmpsl
pop
add
lret
mov
and
xchg
mov
dec
loop
loope
pop
cmp
inc
pmulhw
xor
enter
mov
inc
in
sub
sbbb
push
loopne
jmp
mov
dec
adc
cmp
dec
ljmp
mov
mov
repz
movsb
pop
repz
sub
out
mov
mov
jbe
inc
jnp
mov
and
mov
mov
cwtl
inc
outsb
push
ljmp
jno
adc
xor
outsl
push
nop
daa
inc
push
lods
inc
stc
shrl
add
pop
out
dec
inc
fdivrl
loop
xchg
js
xchg
mov
and
dec
jbe
fldt
jg
mov
mov
mov
lcall
pop
mov
les
roll
add
popa
dec
dec
ljmp
jae
sbb
scas
out
test
bound
lret
adcb
xchg
popa
clc
pop
xor
mov
jo
cmp
pushf
xor
scas
cmpsl
and
js
pop
and
nop
ret
jnp
or
cmp
cmc
mov
data16
mov
mov
test
sub
pop
inc
ss
test
jno
ret
add
cmp
mov
lea
mov
xchg
push
push
pushf
mov
push
or
mov
add
cld
jg
add
lock
scas
inc
in
jb
adc
in
test
pop
sti
xchg
jmp
mov
clc
jmp
mov
and
xor
popa
lock
lahf
loope
scas
rcr
jle
or
out
xchg
adc
mov
or
out
sub
rcrl
fiadds
jle
adc
push
xchg
mov
cld
movb
mov
mov
mov
sahf
insb
fbstp
or
clc
popl
les
mov
xchg
sub
es
ret
pop
dec
adc
inc
jnp
mov
imul
std
jmp
in
addr16
cmpsb
ret
pop
sbb
icebp
lcall
popa
pop
hlt
pop
cmc
and
xor
pop
lret
les
or
rolb
in
ret
dec
sub
aaa
mov
xlat
test
cld
xchg
mov
mov
cmp
enter
mov
adc
adc
inc
fdiv
push
je
inc
sti
sub
sub
inc
fcoml
test
mov
loopne
dec
loope
jecxz
mov
xor
mov
xchg
sahf
sbb
pop
mov
push
jmp
mov
movsb
les
notb
sub
sub
pop
scas
push
mov
xchg
cld
lcall
out
add
cmp
loopne
pop
hlt
jo
and
test
mov
in
mov
mov
pusha
divl
rclb
repnz
pop
repz
fs
dec
daa
adc
mov
sar
imul
dec
in
in
fiadds
inc
mov
mov
out
mov
and
cmpsl
iret
dec
loop
cmpsb
fnsave
es
dec
and
push
fsubrs
popf
sub
int
xchg
sub
push
inc
fstpt
in
aad
fidivs
sub
sub
int
pusha
mov
mov
cmp
jg
aam
cmpsl
js
int3
stos
cmpsb
xchg
sbb
nop
dec
pop
cmp
dec
mov
mov
mov
aad
sbbl
in
das
lds
push
aas
aad
cmp
das
lds
mov
aas
aad
and
push
xchg
ja
cmpsl
add
loop
jne
jl
sub
sbb
inc
fldl
into
daa
mov
xchg
xchg
sub
mov
and
dec
mov
jnp
jno
and
repnz
mov
jbe
mov
push
in
adc
pop
sbb
js
lock
in
mov
adc
repz
jnp
pop
hlt
sbb
push
adc
push
jle
shll
movsb
dec
data16
gs
test
lds
adc
fimuls
mov
jg
pop
scas
inc
imul
mov
int
lock
pop
adc
dec
push
xchg
sub
pop
hlt
ret
ret
adc
dec
xchg
mov
push
lods
inc
push
sbb
mov
mov
mov
sti
xor
jmp
push
ljmp
push
mov
pop
imul
xchg
dec
out
rcrl
mov
or
stos
inc
jne
dec
in
js
repz
pop
mov
imul
jmp
or
push
cmp
inc
jno
in
mov
stos
pop
scas
fdiv
sbbb
adc
or
rclb
xchg
pop
out
cmp
dec
loop
xor
mov
mov
push
jmp
das
dec
fistps
filds
iret
inc
push
out
push
rclb
and
les
cmp
ja
sbb
xchg
clc
xchg
push
jge
xor
in
sbbb
in
cmp
push
repz
into
jecxz
xor
adc
cmp
icebp
sbb
iret
sub
imul
and
aaa
into
sbbb
jle
sbb
aad
mov
out
and
out
xchg
mov
push
ljmp
loopne
jg
inc
fstl
mov
addr16
dec
loope
dec
fistps
and
or
dec
in
dec
mov
inc
adc
mov
jb
adc
mov
lret
add
push
clc
out
mov
mov
icebp
dec
jecxz
hlt
cmp
out
es
cmp
imul
rcll
inc
fimull
mov
lds
iret
lcallw
fldcw
leave
lods
xor
fstpl
mov
aas
aad
loopne
add
subl
out
mov
test
addr16
leave
push
addr16
pop
pop
cmp
nop
fwait
arpl
or
ss
dec
mov
cmp
aaa
into
jne
or
scas
jle
shrl
test
pop
xchg
adc
inc
pop
scas
enter
mov
mov
shr
mov
outsb
add
in
test
inc
inc
fnsave
cmp
mov
stos
test
dec
jl
jp
dec
out
jae
mov
js
loope
push
movsl
ss
test
lods
iret
popw
ret
std
xchg
hlt
pop
inc
fstl
jo
cs
mov
pop
inc
test
xchg
insb
add
cmp
fisubrs
lods
mov
push
aaa
addr16
addr16
xchg
mov
stos
arpl
fildl
mov
jae
montmul
cmpsb
inc
jb
sbb
stc
mov
mov
xchg
push
push
adcb
pop
pop
sahf
popl
push
sti
icebp
jge
loop
add
aad
outsb
add
mov
xchg
lcall
or
insb
add
mov
push
and
or
xchg
movsb
testl
push
add
jb
testb
or
cmp
fldenv
sbb
insl
sub
popf
cmp
or
inc
fisttpll
scas
xchg
je
jo
xchg
jge
loope
xlat
jns
enter
fmuls
outsb
add
inc
jg
adc
and
fs
loop
xchg
pop
out
es
cvtpi2ps
pop
dec
test
xchg
sub
lds
fildl
mov
out
sub
std
aad
inc
xlat
jecxz
mov
ljmp
sub
or
jge
adc
jp
fiaddl
repnz
addb
movl
and
jmp
mov
adc
leave
pusha
lahf
mov
nop
pavgw
scas
bound
outsb
imul
jmp
fstl
scas
or
sub
xchg
daa
mov
push
out
lods
shrl
add
int
pop
and
xorl
or
stc
daa
sub
push
push
out
orl
lahf
sahf
ret
pusha
sti
clc
mov
xchg
dec
adc
mov
repnz
ret
ret
mov
adc
push
loopne
push
or
xchg
mov
les
cmc
scas
aam
loopne
cmp
inc
add
mov
push
adc
in
cmpsb
das
xlat
or
dec
in
popa
mov
xchg
dec
imul
mov
imul
lock
xor
je
aas
addr16
insl
pop
les
cwtl
xchg
cs
pushf
fbstp
add
stc
nop
inc
inc
xchg
sub
add
xor
lcall
adc
imul
sbb
popf
xor
jp
cs
or
push
arpl
pushf
xor
shlb
aad
xchg
cwtl
repnz
ficomps
mov
mov
push
les
pop
std
push
mov
lcall
push
push
xchg
inc
mov
xchg
sub
sbb
clc
rclb
and
popa
fnstsw
cld
xchg
jp
sub
sbb
inc
fildl
int3
sub
jmp
daa
bnd
in
xor
call
cmp
fwait
sbb
int3
add
dec
cmp
jg
testl
sub
cmp
dec
sbb
jbe
std
xchg
mov
mov
fabs
jb
xchg
sub
sbb
sub
pop
push
inc
fldl
shlb
mov
dec
dec
dec
loope
jg
aaa
jo
sbb
cmc
lods
pop
lock
lea
push
adc
sub
sbbl
xchg
mov
xchg
sub
in
jmp
or
mov
jo
daa
arpl
push
out
xchg
nop
daa
pop
inc
push
mov
aaa
es
dec
out
stos
popf
xor
test
mov
push
adc
xchg
cwtl
das
add
and
cmp
or
cmp
xchg
sub
xor
fs
dec
in
pop
mov
dec
xlat
sbb
repnz
push
in
jno
add
scas
lods
in
ret
movsl
pop
icebp
aad
sbbl
push
lds
hlt
lret
fwait
and
xor
rep
roll
mov
out
arpl
add
lea
dec
push
movsl
jl
in
subl
mulb
mov
test
push
ljmp
pop
push
push
lods
test
ja
into
push
out
ljmp
dec
pop
clc
sbb
bound
push
ljmp
push
mov
aaa
dec
jecxz
pop
push
out
xlat
xor
xor
mov
out
dec
jecxz
pop
outsb
add
push
mov
dec
filds
lret
sti
popa
nop
daa
push
hlt
inc
cs
loop
cwtl
inc
xlat
leave
insb
aaa
into
pop
add
leave
xor
mov
insl
xchg
jbe
pop
addr16
aaa
fbstp
shll
into
add
cmpsl
ds
dec
cmp
jl
lock
jne
lret
addr16
jno
ds
subl
sbb
daa
mov
test
sub
decb
out
jp
inc
lea
mov
sbbl
jg
push
and
aaa
push
cmpsb
cmp
jno
jecxz
push
and
pop
movsl
push
call
or
sbb
xor
lret
outsb
rolb
sbb
aad
lret
in
pop
jl
mov
ja
dec
loope
push
pop
inc
adc
inc
mov
jecxz
jmp
and
dec
fucomip
dec
fistps
lock
inc
jecxz
sub
mov
mov
test
inc
fcomi
mov
aas
sub
sub
insl
sahf
pop
jmp
cmp
je
inc
xchg
or
imul
jno
sub
fs
das
pop
scas
lods
inc
icebp
pushf
loopne
psubd
sbb
xchg
inc
push
sub
test
jg
andb
lods
inc
jmp
call
add
sub
out
lds
subb
lods
inc
out
call
add
jno
push
bound
mov
mov
testl
les
aaa
pusha
mull
mov
xchg
es
cwtl
and
inc
faddl
cmp
enter
jl
shrl
jne
loopne
jg
or
loopne
or
arpl
dec
in
arpl
mov
xchg
dec
loopne
into
push
call
cmp
mov
cmp
movsb
scas
xor
scas
loopne
leave
pusha
push
jmp
jbe
push
push
adc
test
and
stos
int
hlt
fdivl
cmpsl
sub
stc
jb
popa
clc
push
test
mov
fwait
or
int3
pop
movsb
cmp
data16
mov
sahf
jo
loop
cmpl
or
movsl
add
inc
pop
outsl
push
push
js
dec
imul
icebp
dec
add
repz
ds
xor
imul
xchg
rcrl
mov
movsb
fidivl
dec
push
jmp
daa
jne
cwtl
js
aam
into
xor
shlb
mov
mov
pop
data16
icebp
mov
pop
sahf
sub
mov
add
es
shll
cmp
push
dec
xchg
pop
scas
pop
xchg
cltd
mov
mov
bnd
lods
push
fwait
lea
es
push
ds
mov
or
mov
fs
dec
lds
movsl
mov
or
sub
mov
mov
jmp
mov
test
push
mov
int
lods
decb
and
sub
scas
outsl
and
mov
outsb
mov
jmp
fs
mov
xchg
mov
data16
or
lods
xchg
lods
inc
pop
cmpsl
lret
fsts
sbb
adc
lds
lret
push
add
cmp
int
addr16
jge
inc
jo
aaa
mov
lods
shll
pop
nop
daa
dec
sbb
add
test
gs
dec
in
rcrb
cmp
shrb
cmp
lahf
stos
and
loope
sbb
dec
inc
fdivrl
sbb
ss
lcall
mov
mov
xor
insl
dec
in
out
pop
and
cmpsl
dec
pop
xor
movsl
mov
shl
xchg
add
imul
shrb
cmp
and
mov
loopne
cltd
push
xchg
sub
lds
addl
test
sub
jg
fisttpl
movsl
lret
das
mov
popa
or
nop
jge
in
pushf
or
repz
and
add
aam
dec
pop
scas
jg
mov
sti
js
icebp
stos
cli
adcb
mov
push
in
loop
pop
testb
push
rolb
pop
scas
add
stc
nop
mov
push
lods
sub
push
out
push
sub
fwait
sahf
sbb
int
push
stos
cmp
push
jmp
push
rorl
mov
mov
mov
xchg
adc
jge
sbbb
mov
sbb
ljmp
loop
sbb
out
test
jns
addr16
push
lcall
jns
push
test
inc
dec
mov
nop
test
neg
or
jp
data16
jne
jae
jle
sahf
scas
add
mov
or
push
sbbl
mov
mov
fwait
jl
or
xor
and
addr16
scas
sub
pop
fists
enter
sti
aam
cmp
sub
ss
addr16
fs
ja
cmp
sahf
xchg
rorb
or
jnp
xor
jb
xchg
sub
jnp
aam
push
pop
out
andb
xor
push
push
ljmp
fwait
xor
add
push
in
mov
fdivl
scas
jae
loope
cli
jbe
push
data16
adc
jbe
cmp
aam
sub
lcall
cli
jbe
lcall
mov
cli
jbe
gs
aas
aam
cmp
pop
pop
push
lahf
push
adc
cmp
dec
std
and
pop
sbb
push
sti
movsb
sbb
fimull
fwait
ja
nop
loop
mov
rcr
mov
push
push
test
fidivrs
jbe
cmp
inc
sbb
lahf
push
aaa
mov
stos
pop
test
lret
mov
or
xchg
arpl
xchg
push
std
push
mov
dec
jne
push
jecxz
dec
push
ja
push
lret
ja
push
iret
push
out
je
sub
or
insb
cmpsb
pop
mov
mov
icebp
mov
sbb
xchg
dec
sbb
les
mov
lock
enter
jle
push
je
xchg
shlb
jl
idiv
dec
loop
pop
sbb
jg
add
sarb
shrl
adc
jl
inc
insl
jbe
xor
xchg
lcall
out
xor
mov
mov
pop
adc
pop
jbe
pusha
adc
je
mov
arpl
jns
mov
mov
dec
pop
leave
push
in
pop
mov
or
rcrb
pcmpeqd
ja
jmp
insl
jle
cmp
and
push
js
push
outsl
mov
push
ljmp
repnz
fmull
adc
pop
jl
dec
rolb
icebp
pop
daa
add
das
lcall
ficoml
out
add
ds
in
cmpsb
ja
scas
and
mov
out
dec
fldl
dec
insl
adc
xchg
jge
pop
dec
mov
loopne
sbb
pop
mov
ss
in
and
xchg
addb
lds
fstp
push
int3
cmp
sub
cmpsl
fs
int3
xchg
data16
sbb
inc
nop
hlt
stc
pop
int3
mov
stos
and
in
ret
sbb
imul
and
mov
jne
inc
movsl
cmp
shll
jne
mov
lret
xchg
inc
add
cmpsb
xchg
jb
lea
leave
xor
xor
and
and
shlb
adc
and
add
xor
out
in
into
movsb
lods
jno
fucom
push
fstps
xchg
mov
mov
addl
jo
adc
dec
shll
popa
mov
jle
out
imul
mov
adc
lock
push
inc
jp
adc
add
shll
dec
subb
jno
loope
mov
cwtl
outsb
pop
push
mov
adc
int
in
jg
daa
out
xchg
mov
push
xor
jg
insb
push
xchg
lret
jb
inc
insb
adc
mov
or
repnz
push
add
int
push
xchg
add
pop
mov
xchg
or
mov
into
lods
push
or
shll
hlt
inc
testl
inc
pop
or
xlat
stos
das
pop
icebp
or
clc
inc
mov
in
mov
sub
sbb
adc
add
in
xor
xchg
jb
sbb
and
pop
inc
int3
and
aas
cmp
cmpsl
xchg
icebp
push
push
or
ss
orb
jb
gs
mulb
insb
sbbb
xchg
mov
pop
or
cli
popf
lods
sarb
inc
jo
shl
mov
jae
xchg
dec
int3
add
pop
dec
js
stos
xor
dec
test
push
push
sbb
aad
jb
out
dec
and
sub
inc
sub
mov
stos
sub
in
shll
scas
js
xchg
in
cli
mov
icebp
mov
dec
rcr
insb
shll
mov
dec
push
jns
mov
mov
jle
inc
mov
jmp
add
pop
add
or
push
jbe
mov
test
lret
sti
sbb
sbb
pop
sahf
push
mov
in
fildl
or
insl
add
sub
mov
lcall
inc
in
ja
xor
inc
lret
cld
popa
out
xchg
sbb
add
jl
adc
iret
and
enter
and
out
inc
pop
hlt
jae
insl
add
xchg
jnp
sbb
lea
test
sub
mov
pop
mov
fucom
jge
push
into
loopne
int3
or
test
ret
ret
pop
leave
xlat
dec
loopne
jmp
js
sub
pop
add
mov
hlt
xchg
cmp
imul
cli
mov
faddl
loope
lret
jno
gs
movsl
cmp
xchg
mov
ret
pop
lret
fmuls
or
loope
pop
sub
pop
add
lea
jle
pusha
mov
adc
add
add
inc
cmp
ljmp
push
or
push
lods
in
sbb
cmpsl
mov
vsubpd
push
sub
dec
mov
sbbb
repz
and
mov
sbb
mov
ss
jne
jmp
push
popf
ss
call
adc
leave
pusha
sbb
fdivrl
out
pop
andl
mov
rcll
cwtl
hlt
ja
gs
pop
adc
inc
cmpsb
incb
mov
fisubl
cli
fldcw
sar
or
repnz
cmpb
scas
in
jo
rolb
mov
mov
lods
mov
fnsave
lret
fbstp
das
push
call
dec
subl
mov
ret
cmp
hlt
daa
stos
inc
pop
adc
leave
pusha
lods
addr16
cltd
int
jle
mov
push
popf
push
or
and
mov
les
cmc
mov
xchg
push
popa
clc
inc
push
aaa
push
sub
xor
stos
dec
loop
push
mov
add
arpl
jb
dec
xchg
xorl
sbb
daa
pop
cmp
mov
jp
lods
pop
repnz
jnp
push
in
push
movsl
push
inc
mov
mov
js
ret
mov
mov
lods
inc
cwtl
xchg
jne
stc
mov
mov
cmp
js
jp
out
jbe
das
test
arpl
mov
stos
gs
lcall
int3
shrb
sbb
inc
repnz
jmp
push
push
arpl
dec
mov
jmp
enter
add
fisttps
sbb
add
mov
dec
in
enter
out
out
mov
popf
pop
repz
push
cmp
sub
jp
adc
dec
xchg
inc
mov
movsl
out
arpl
fidivs
or
dec
lods
add
mov
jns
out
jmp
inc
cltd
aaa
sbb
jns
lea
mov
push
cmp
inc
dec
aas
adc
sub
pusha
pop
mov
add
int
inc
out
cmp
pop
cmp
lahf
cmp
push
mov
out
in
dec
dec
xchg
cltd
mov
xchg
jne
sbb
jmp
fsubs
repnz
fisttpl
mov
pop
xor
mov
jnp
loope
rcl
fbstp
out
mov
inc
cmp
mov
mul
jo
sbb
mov
pop
std
add
pop
scas
outsb
cmp
outsl
dec
loop
or
inc
pop
outsl
mov
fbld
idiv
daa
ss
and
or
mov
dec
repnz
enter
je
adc
call
mov
fildl
dec
lret
ljmp
stos
icebp
push
cmp
push
scas
dec
mov
mov
xor
fsubrp
jno
lock
mov
movsl
xchg
dec
sarl
xchg
mov
jns
imul
push
aas
aam
mov
popa
jns
mov
enter
push
push
ret
scas
arpl
test
push
or
inc
fmuls
orb
ret
mov
cmp
call
jnp
dec
loope
cmp
xor
dec
add
arpl
cmpsl
xorb
mov
add
cmp
call
in
out
sbb
loop
push
lods
incl
jb
in
cwtl
das
sbb
mov
cmp
and
mov
mov
hlt
repnz
fbld
cmp
mov
dec
loope
dec
push
or
adc
je
xchg
mov
mov
insl
enter
dec
jmp
movsb
ss
mov
pop
adc
bound
push
rclb
or
push
cmp
arpl
sbb
int3
push
sub
cmp
cmp
mov
fadds
hlt
in
rol
pop
add
inc
push
popf
test
xchg
jg
pushf
in
arpl
imul
imul
and
inc
ljmp
mov
mov
sbb
call
push
test
mov
cltd
dec
hlt
in
pushf
or
arpl
aas
mulb
fnstsw
dec
lods
popa
sbb
out
mov
xchg
jl
and
pop
lret
sahf
ret
cmpl
data16
insl
mov
lret
or
push
in
jecxz
mov
mov
fidivl
aad
jmp
pop
push
adc
xchg
out
sbb
mov
ja
sti
mov
cmp
sti
xchg
add
jge
push
mov
jb
adc
xlat
pop
test
or
ret
cmp
mov
mov
jl
mov
imul
mov
cld
xchg
cmpsb
xchg
sbb
jne
fdivl
push
pusha
aam
push
ljmp
dec
nop
mov
scas
shrl
ret
and
out
std
or
push
xor
lcall
adc
nop
xchg
jp
pop
sti
and
mov
push
pop
jns
sbb
nop
jmp
pop
inc
sub
inc
push
pop
subl
fst
push
or
cs
add
inc
pop
repz
push
pop
rolb
or
sub
and
push
lcall
push
movsl
mov
push
and
cli
fldt
cmp
in
or
fistpll
andb
es
shrl
outsb
insb
xchg
popa
inc
xchg
stos
inc
inc
js
aaa
into
mov
ds
lret
or
sbb
daa
dec
daa
stc
push
xchg
sub
sti
sub
lds
cmp
out
sbb
push
loopne
leave
add
imul
xchg
jg
repz
sahf
add
jge
enter
insl
mov
enter
clc
xorl
insb
cli
jl
loop
pusha
enter
fildl
ret
pop
lcall
pop
jmp
pop
rolb
lcall
shll
insb
jmp
pop
les
mov
mov
pop
sub
rol
pop
add
adc
imul
cmp
add
into
mov
mov
add
push
pop
loope
clc
popf
add
xlat
or
push
jnp
push
pop
test
cmp
push
jle
nop
mov
or
cmp
ret
pop
sahf
stos
adc
dec
movsl
jge
fsubs
inc
jnp
jns
in
andl
sbb
add
mov
mov
and
jecxz
dec
cmp
sahf
or
push
jne
or
sbb
adc
inc
or
je
push
xrelease
cs
nop
cmc
add
scas
in
je
cld
call
pop
mov
adc
aam
pop
sbb
xor
pusha
mov
dec
movsl
int
and
xchg
sub
push
test
scas
aas
lods
movsb
aaa
into
aad
adc
xchg
mov
jg
cmpsb
mov
pushf
cmpb
adcb
lods
cmp
dec
sbbb
lea
and
clc
hlt
inc
mov
jae
cmp
sahf
adc
dec
ret
dec
sbb
and
mov
xor
test
dec
jmp
fdivrs
push
pop
sub
aaa
aas
jno
jno
leave
push
push
and
es
lods
adcl
inc
mov
mov
fidivrs
sbbl
cmp
jbe
xor
movsl
pop
psadbw
add
fsubrl
clc
in
xor
pop
push
scas
jno
outsl
insl
cltd
and
outsb
incl
or
mov
jae
movsl
lods
mov
lods
adc
pop
inc
into
mov
lret
dec
mov
mov
in
xchg
iret
imul
ljmp
std
lret
cmp
aas
mov
fiaddl
xor
or
nop
add
shl
xor
loopne
fsubl
mov
pop
sub
xchg
dec
dec
mull
in
outsl
dec
push
push
pop
adc
push
pop
xchg
mov
mov
dec
mov
mov
push
xor
xchg
sub
add
adc
in
dec
mov
sbb
jb
dec
rcll
or
lcall
cmp
xchg
icebp
xor
jp
inc
sbb
stos
mov
cmp
push
ret
lret
insl
jp
mov
xchg
andb
push
sub
xchg
pop
aaa
in
and
fmull
inc
popf
stos
lock
mov
xor
inc
push
idivl
les
pop
lret
fistl
or
and
leave
push
mov
ljmp
jecxz
xchg
loop
cmpb
jg
xchg
ret
jmp
push
push
pushf
rcr
test
xor
mov
cmp
xchg
ret
movsb
int
imul
mov
mov
pushf
hlt
mov
mov
test
out
incb
stos
adc
ss
lret
xchg
sub
push
push
pop
mov
inc
dec
push
mov
popa
xor
xchg
bound
xchg
jnp
adc
jns
inc
aad
jl
jns
and
loop
in
inc
imul
jge
inc
xchg
and
enter
lds
int3
out
js
dec
xchg
adc
jns
aas
or
outsl
out
xchg
xchg
loopne
cmp
bound
movsl
lods
xchg
lret
mov
mov
sbb
mov
fnstcw
adc
or
pop
lea
mov
nop
cld
in
mov
push
testl
mov
push
ja
xchg
ret
mov
pop
mov
or
mov
icebp
mov
ret
mov
ja
testb
jecxz
leave
mov
push
aad
pop
xchg
aaa
xor
push
in
xor
lcall
xchg
subb
pop
push
sbb
mov
jo
xchg
mov
dec
arpl
lcall
mov
sub
or
pop
pop
adc
xor
enter
out
iret
mov
add
sarl
insl
sub
or
mov
xchg
rcl
xchg
aad
arpl
stc
aaa
xchg
inc
es
jmp
sub
mul
scas
notb
pushf
cmc
ss
or
pushl
push
jno
jmp
insl
push
jno
sbb
add
daa
mov
inc
pusha
fidivs
push
sahf
and
inc
jmp
push
xchg
lds
cmp
mov
and
mov
dec
xor
push
jmp
ss
fsubr
clc
pop
out
sub
dec
xchg
cmp
iret
test
test
lcall
mov
test
jne
mov
push
and
mov
hlt
je
ljmp
or
add
adc
scas
lret
xchg
fcomps
or
mov
arpl
dec
lea
lods
lds
xchg
bound
add
mov
hlt
push
jp
stc
nop
fildl
fistpll
mov
xchg
jo
les
inc
mov
fwait
fwait
fs
dec
pop
and
adc
mov
ror
ret
fbstp
insb
or
and
loopne
jne
aaa
into
std
xchg
xchg
push
sbbl
in
arpl
ss
pop
aaa
add
fwait
outsb
xor
fstl
pop
lcall
js
add
jle
bound
jp
pop
pop
sahf
dec
adc
ljmp
lahf
in
mov
xchg
sub
mov
add
jo
and
mov
out
aas
xchg
jecxz
xorb
outsl
inc
sub
and
inc
jns
mov
jo
ret
insb
mov
js
addr16
cmpl
es
pop
mov
mov
bswap
pop
int
mov
xchg
cmpl
adc
cmpsb
xor
pop
ss
pusha
xchg
xor
xor
mov
test
push
loope
or
int3
loope
testb
xor
jne
in
push
pop
test
xchg
mov
mov
pop
fadd
repz
fstps
mov
popa
int3
int
mov
flds
xor
mov
inc
pop
and
scas
pop
in
ss
sti
daa
mov
mov
mov
cs
push
jmp
jbe
rcrl
ret
lret
mov
hlt
mov
mov
stc
xchg
pop
sbb
sbb
push
cmp
mov
jno
and
push
mov
adcl
ja
mov
pop
cltd
sub
aad
rolb
out
call
cwtl
jbe
lret
push
sub
or
add
stc
push
add
push
test
mov
mov
insl
je
sbb
mov
jp
ljmp
cmp
cmp
das
fmuls
mov
xor
cmp
jg
jmp
push
cmp
mov
adc
mov
outsl
adcl
sub
sbb
std
cmp
cmpsl
inc
pop
cltd
dec
adc
add
cmp
cmpsl
xchg
dec
fsubrl
xor
jg
fsts
push
inc
mov
movsl
jns
andb
mov
idivl
jns
dec
inc
lcall
push
cmpsb
out
movsb
dec
sbb
sbbl
jne
outsl
lea
decl
jns
jge
idivl
jp
das
add
jle
cltd
push
inc
pop
xlat
xor
aaa
adc
mov
adc
ud1
ds
adc
jbe
out
jecxz
outsb
pop
or
lahf
cmpsl
xchg
xor
or
imul
outsl
test
jecxz
aas
vxorps
std
out
xchg
into
mov
or
or
stc
je
xor
mov
dec
loop
lock
jmp
add
clc
xor
imul
lcall
sub
lds
jnp
and
addb
shlb
gs
and
push
pop
dec
lret
jl
imul
dec
cmp
inc
popl
out
addr16
push
sarb
dec
pop
jge
pop
lds
ret
jbe
push
cmp
jo
idivb
sub
out
xor
cltd
inc
mov
iret
repnz
addl
jmp
ret
imul
or
sbb
mov
jae
inc
sarl
fildll
jae
insl
sub
mov
adcl
sbb
gs
das
std
dec
les
and
int3
adc
pop
stc
lods
aad
mov
leave
aam
in
es
fstpl
gs
test
ds
sbb
pop
sbb
jns
cwtl
sub
mov
mov
into
das
dec
in
push
xor
and
repnz
loope
xchg
cmpsb
cmp
xchg
bound
add
cltd
ja
sti
ret
adc
loope
xor
push
es
jge
jae
mov
scas
cmp
ds
sbb
cmpsl
cltd
jns
cmp
ret
push
mov
and
dec
cs
call
aaa
fcmovnu
xchg
arpl
js
sahf
aam
js
pop
jnp
jmp
popf
pop
add
fwait
lret
jmp
fcomps
iret
push
into
test
fs
testl
std
sbb
dec
pop
push
movsl
shl
jnp
mov
rclb
adc
cltd
push
push
adc
add
lds
call
dec
mov
or
jge
xchg
xchg
xchg
and
jl
adc
mov
push
fidivl
int
pushf
adc
loopne
or
cmp
mov
fwait
aas
mov
mov
sarb
add
out
popf
stos
adc
cmpsl
inc
pop
or
mov
sbb
or
jo
popf
icebp
xchg
mov
rorb
cmpsb
cld
test
into
mov
nop
pushf
fstps
fs
fucomi
push
call
fsubs
mov
rcr
inc
sbb
sti
xchg
mov
sub
mov
mov
jmp
sbb
xchg
dec
xor
mov
cmpsb
sub
add
jge
mov
mov
dec
mov
or
into
mov
adc
ffree
jg
sbb
movsl
stos
add
stos
movsb
sbb
dec
es
insb
int3
cmp
jp
enter
into
iret
insl
mov
cld
and
flds
cltd
jne
shr
sbb
es
cmp
psubusw
inc
jl
jle
sbb
adc
popa
fs
pop
pop
mov
dec
push
cmpsl
nopl
fisubrl
or
push
pop
bound
leave
xchg
mov
in
call
in
pop
cli
add
push
push
add
cmp
imul
cmp
pop
jae
ds
inc
fdivrl
adc
mov
sbb
push
add
enter
lret
in
out
dec
xchg
test
cmpsl
aam
push
sar
xchg
add
outsl
arpl
mov
adc
inc
ljmp
stos
mov
addr16
mov
mov
mov
shll
jne
push
mov
loopne
outsl
mov
or
jle
out
insl
push
xchg
jae
inc
out
xchg
scas
test
pusha
dec
scas
data16
in
push
mov
or
aam
mov
jp
rolb
icebp
mov
fwait
dec
in
mov
lds
mov
or
pop
dec
stos
js
sbb
pavgw
mov
jp,pt
or
mov
push
inc
repnz
mov
not
inc
lret
inc
ja
ret
cmp
imul
sbb
inc
cmp
add
or
fdivl
adcl
adc
mov
cs
inc
ret
pop
mov
xchg
pushf
xchg
sbb
xchg
out
xor
mov
lahf
ss
je
lock
xchg
and
mov
test
testb
rcll
xchg
cmp
add
add
sbb
jbe
mov
addb
fdivrs
imul
push
movsb
cmp
std
xchg
decb
rolb
shrl
bound
jns
lret
bound
ror
adc
in
xchg
pop
repnz
stc
pop
cmp
dec
sub
dec
sahf
fists
scas
rorb
jno
xor
call
dec
fbld
scas
push
push
lods
push
mov
pop
inc
dec
loop
inc
cmp
les
fmuls
leave
test
mov
jmp
mov
push
leave
pusha
nop
nop
inc
fiadds
mov
inc
lret
mov
inc
dec
fbstp
roll
push
fstpl
int
into
gs
lcall
add
lds
inc
jnp
ss
and
adcb
pushf
icebp
pop
or
outsb
inc
ficomps
shll
cmp
pop
mov
movsl
cmp
rcr
jbe
int3
ret
pop
and
xchg
push
pop
loop
nop
adcl
repz
xchg
mov
mov
in
jp
add
bound
lahf
jne
pushl
dec
cmp
pop
leave
pusha
stos
mov
xor
dec
gs
fwait
xor
cltd
xor
adc
mov
pop
mov
lahf
mov
pop
xchg
cmc
mov
sub
ret
jecxz
hlt
dec
inc
lods
push
cmc
push
lods
pop
outsb
mov
mov
aad
push
std
je
adc
fstl
mov
stc
jb
movsb
cmp
mov
fimuls
stc
pop
repnz
out
xchg
dec
pop
scas
jl
jns
int
jne
xchg
dec
add
lods
push
into
xlat
pop
stc
insl
scas
fdivl
scas
das
mov
dec
out
cs
pop
adc
outsb
movsl
sbbb
aad
out
pop
cmc
and
inc
cmp
push
push
push
add
mov
or
and
fnstenv
and
or
ljmp
lock
adc
lcall
stc
or
fbstp
mov
mov
ds
jbe
mov
xlat
outsb
mov
call
vpsrlq
adc
and
fisubrs
fisubrl
fnstsw
dec
fildl
or
daa
mov
jbe
je
pusha
xchg
pusha
imull
xor
push
dec
pop
sahf
push
fs
jp
jle
sbb
mov
pop
repz
push
mov
pop
and
scas
jecxz
js
int3
xchg
jns
jae
pop
xor
pushf
xor
jg
or
sti
aas
pop
pop
in
das
pop
xchg
imul
aas
lret
inc
jge
pushf
xor
hlt
sti
xor
daa
fwait
mov
sbb
pop
mov
mov
xorl
sti
jbe
int
js
out
xor
mov
es
mov
es
in
rorb
scas
inc
fstp
inc
aad
pop
fsubl
fstps
outsl
fstps
or
subl
inc
mov
adc
out
es
push
shrb
push
shll
pop
leave
push
push
sub
push
fwait
mov
xor
sbb
jne
xchg
in
lods
cld
push
or
scas
jge
xchg
mov
pushf
nop
adcb
insb
lahf
jecxz
dec
out
cmpsl
jp
ftst
insl
add
cli
jecxz
mov
fistpl
clc
adc
data16
aad
stos
rcll
and
add
mov
lods
cltd
mov
fiaddl
jne
sti
xchg
dec
out
xchg
call
or
xchg
pop
fidivs
mov
mov
shl
push
in
add
daa
je
cwtl
ret
les
mov
xchg
sub
icebp
mov
jo
sbb
call
push
cld
cld
leave
push
les
test
loope
fnstenv
adc
aad
lods
ss
pop
test
cld
and
or
inc
cld
in
sub
rclb
mov
jb
popa
clc
mov
fbstp
adc
int3
arpl
xor
xchg
insb
xchg
mov
loopne
rcl
and
stos
inc
pop
mov
dec
loope
xchg
sub
xchg
mov
jmp
test
nop
ja
ret
pop
jle
icebp
mov
jo
push
mov
mov
push
in
sbb
pop
and
popf
imul
push
pusha
mov
test
cmpsb
popf
scas
jne
xlat
mov
mov
out
xor
push
adcl
add
xchg
mov
or
fidivs
int
fnstsw
ficomps
pop
mov
adcb
cld
mov
test
xchg
subb
inc
pushf
xchg
dec
jecxz
xchg
mov
fs
out
xchg
shlb
iret
lods
inc
rcrb
outsl
nop
xchg
mov
imul
inc
cmpsl
xor
test
out
sub
add
or
pop
lock
cld
xchg
mov
xor
daa
shrb
rorb
ret
sbb
inc
in
gs
sbb
ds
mov
adc
pop
cmc
or
dec
loope
sub
mov
sti
mov
repnz
pop
cmc
jae
pop
testb
dec
loopne
ds
outsl
fstps
mov
xchg
push
or
dec
push
mov
mov
sbb
jns
jmp
sarb
jb
lret
push
testb
jmp
dec
xchg
and
xchg
pop
in
inc
imull
add
ljmp
ljmp
paddw
inc
data16
hlt
push
push
ljmp
jno
pop
daa
jmp
xchg
jb
repz
cli
inc
call
fistl
jge
add
cmpsb
arpl
adc
aaa
mov
out
mov
mov
inc
add
lret
xchg
mov
rorb
loope
test
daa
std
scas
inc
out
dec
add
cwtl
repz
and
inc
hlt
mov
popa
clc
cmp
pop
pop
repz
jmp
popa
mov
add
xor
xchg
or
cmpsl
lcall
xor
mov
pop
adc
lcall
imul
inc
xor
leave
test
out
xchg
mov
push
lods
cmp
ljmp
imul
sub
subb
shll
mov
cmp
mov
xchg
out
imul
jo
aam
mov
pop
and
xchg
addl
mov
cmp
lods
and
mov
mov
mov
iret
cli
xchg
mov
cmpsb
sub
adc
orl
loop
repnz
mov
push
jmp
mov
hlt
mov
lea
dec
rol
idivl
into
pop
loop
mov
sub
xchg
xor
add
mov
jne
dec
and
pop
push
pop
out
insl
jp
push
inc
mov
mov
jo
insl
add
xchg
rcrl
out
aaa
push
mov
push
pop
in
ss
aaa
cmp
pop
push
pop
int3
arpl
mov
xor
sbb
lds
mov
dec
fisubrl
dec
aas
sti
cmpsl
les
and
aam
repnz
mov
call
or
or
jg
jns
fisubl
pop
lds
pop
inc
out
xchg
add
xchg
xchg
sbb
js
int3
dec
jae
adc
js
sahf
movsl
cmp
shll
xchg
mov
pushf
jno
adc
ret
pop
or
cmp
les
pop
and
dec
nop
dec
loopne
outsb
sbb
imul
mov
in
xor
mov
mov
insb
add
fsubrs
mov
gs
mov
mov
jmp
inc
fnsave
xchg
sub
and
stc
xchg
aam
popa
js
dec
push
xlat
outsb
hlt
repz
push
testb
scas
outsb
add
xchg
in
inc
fneni(8087
outsl
mov
or
in
adcl
insl
int
dec
loope
pusha
mov
push
stos
sub
sbb
xchg
loope
not
pusha
outsl
push
jl
gs
jns
aad
cltd
imul
push
push
lret
xchg
fs
sbb
inc
cmpsb
mov
cmpsl
ds
ffreep
pop
in
in
test
add
xor
xchg
mov
dec
mov
add
pop
insl
adcl
sbb
data16
test
inc
movsl
movsl
push
in
repnz
out
xchg
adc
lahf
inc
std
or
or
ljmp
ljmp
mov
cmp
mov
faddl
out
jns
xchg
pop
cmp
cmp
cmp
jo
shrl
xchg
inc
fstpl
lcall
test
fidivs
movsl
pop
mov
repnz
sbb
stc
dec
xlat
stos
inc
or
jmp
mov
scas
xor
shrb
out
aad
cmp
dec
sbb
pop
sbb
jo
inc
sarl
mov
out
mov
cmp
dec
cld
cli
dec
jl
push
mov
mov
cmp
push
out
pop
jmp
gs
cmpsb
add
xor
sbb
push
call
jp
cs
xor
xor
loop
in
adc
push
sbb
xchg
lret
adc
iret
std
xchg
icebp
sbb
mov
jmp
loope
adc
xor
testb
mov
xchg
sub
aad
push
ljmp
imul
jg
lahf
out
push
lea
add
xor
push
cmp
jecxz
jns
xchg
cmp
jmp
cmp
pop
ja
push
adc
lds
in
rcr
or
jmp
or
add
fidivrs
pop
test
cld
mov
sbbl
add
cmp
push
int3
arpl
cmpsb
ljmp
stc
or
sub
es
jle
inc
fcmovne
lahf
cmp
shl
stc
in
adc
cmp
xor
and
mov
dec
imul
sahf
loopne
aam
ss
imul
fstpt
outsl
mov
popf
jmp
xlat
shrb
outsl
sbb
imul
lds
dec
mov
adc
xor
pusha
cltd
mov
sub
adc
and
test
add
stos
push
add
mov
jae
popa
movsl
lods
cmp
js
call
fmul
je
frstor
xchg
xchg
mov
and
mov
stc
sahf
push
mov
mov
pusha
hlt
add
jnp
lret
aam
push
push
in
cwtl
or
mov
pop
mov
mul
jl
aad
adc
push
add
popa
jo
inc
aaa
les
test
or
orb
jge
test
mov
xchg
enter
adc
or
mov
test
out
sahf
adc
stos
sub
leave
adc
in
subb
mov
mov
cmp
mov
imul
push
push
ret
hlt
dec
sbb
andb
test
push
movsb
repnz
xlat
add
idiv
outsb
jl
mov
leave
mov
push
incl
fucomi
push
pop
je
pushf
jmp
xchg
loope
std
test
sub
mov
hlt
fidivs
js
out
sbb
sahf
fsts
mov
mov
pop
jno
pushf
mov
fmull
mov
add
aam
xor
lcall
xchg
rcl
cmc
adc
cmp
add
sbb
stos
rolb
cmpsl
ret
push
xadd
and
sub
cmp
mov
arpl
ljmp
or
sub
cltd
inc
dec
popf
enter
inc
sbb
push
pop
lock
pushf
pop
inc
dec
mov
mov
outsl
mov
rcrl
shrl
pop
mov
inc
sbb
in
out
fwait
fs
test
pop
or
adc
mov
cld
js
es
push
arpl
cmpsl
push
loope
or
rol
ret
xchg
pop
push
mov
add
scas
adc
nop
scas
pop
mov
movsl
loop
xor
pop
or
repz
jge
and
loope
adc
sbb
inc
pushw
sbb
lret
outsb
inc
xorb
dec
fxch
cmpsl
nop
imul
loopne
outsb
add
mov
loopne
mov
out
mov
pop
dec
scas
and
push
mov
xor
aam
insb
scas
cmp
pop
cmp
repz
mov
data16
pushf
add
repnz
pusha
lcall
or
scas
out
mov
lahf
xor
sarb
mov
cmp
daa
clc
xchg
icebp
movsl
jmp
sbb
inc
dec
repz
mov
sahf
lahf
mov
xor
xor
push
add
mov
push
bound
xchg
xor
xor
ret
inc
push
pushf
sti
hlt
push
stc
cmp
inc
mov
jmp
in
jnp
cmp
js
and
fimull
jecxz
and
xchg
jmp
into
cmc
insb
shlb
xchg
jbe
lods
loop
jae
in
neg
xchg
or
in
cli
xchg
cmpsl
and
sbb
ja
add
push
stos
pop
icebp
jb
add
pop
jns
or
or
adcb
jg
cmp
inc
lret
fiaddl
into
jne
aad
pop
jns
push
dec
jecxz
or
rcll
xchg
cwtl
mov
movsl
mov
fstps
iret
fldt
ret
xor
pop
mov
mov
scas
cmp
adc
adc
inc
fs
xchg
aas
shll
inc
dec
mov
add
mov
mov
daa
test
dec
incb
dec
or
inc
cmp
or
cmc
shll
pop
sub
std
pop
in
cmpsl
and
insl
pop
cli
stos
inc
aaa
jnp
bnd
mov
stos
pop
cli
iret
es
dec
mov
xchg
or
out
daa
jp
loopne
adc
icebp
dec
aaa
inc
shll
sti
pop
jns
cmp
dec
mov
inc
pop
fisubl
addr16
xchg
mov
rcl
cmp
in
cmp
shll
lock
testw
dec
sub
add
mov
push
rolb
cmp
dec
loope
adc
mov
outsb
xlat
pusha
lea
cmp
push
add
sbbb
xchg
in
popf
in
loopne
sub
in
sti
lds
mov
mov
lds
int3
arpl
lahf
xchg
sub
xchg
ljmp
push
xchg
adc
xchg
and
outsl
imul
dec
insl
shll
out
in
sub
rcr
les
fdivl
paddusb
xchg
pop
xor
add
loopne
mov
ss
ja
pushf
lcall
push
aad
incl
imul
cmp
out
ja
fsub
mov
bound
scas
xchg
mov
pop
dec
inc
push
cmc
clc
mov
sub
pop
dec
nop
lods
dec
mov
shll
loopne
xor
push
cli
or
pop
jg
lcall
in
mov
jae
pop
cmp
inc
out
sahf
jbe
jns
icebp
sub
jp
pusha
clc
cmp
mov
in
std
mov
scas
mov
push
repz
cmc
mov
adc
mov
lock
dec
out
mov
mov
mov
adc
fs
inc
push
dec
decb
push
shll
jle
ljmp
loop
mov
jae
pop
pop
mov
push
sub
add
adc
addl
fwait
dec
cwtl
stos
lret
lea
ds
out
cwtl
mov
and
or
mov
sub
inc
sar
call
cmp
sbb
dec
sahf
shl
leave
adc
sbb
and
xchg
cmp
fisttps
pop
repnz
pusha
inc
push
pusha
xor
movsb
fldl2t
aad
mov
xchg
rcrl
push
insl
int
xchg
mov
or
lret
out
mov
mov
popa
xchg
mov
rclb
sbb
outsb
jle
popf
fidivl
cmp
cld
stos
addr16
dec
pop
repnz
fwait
not
hlt
daa
mov
cmp
or
pop
push
push
mov
push
and
notl
incb
fnsave
js
mov
xchg
mov
sub
pcmpeqd
xchg
add
pop
pop
mov
das
pushf
sub
aas
add
jo
sub
sub
mov
outsb
fwait
lock
int
inc
xlat
inc
jnp
mov
cmp
scas
pop
mov
outsl
fld
or
sbb
outsb
sub
dec
mov
pop
sub
jmp
hlt
lret
lret
call
outsl
arpl
cwtl
dec
xchg
jnp
mov
negb
adc
popf
jb
inc
push
or
add
sbb
leave
xchg
pop
int3
and
mov
inc
out
sahf
jb
inc
or
divl
pop
popf
jle
pop
jb
jnp
fildll
data16
popa
mov
daa
into
adc
bound
mov
add
adc
gs
imul
jl
ret
cmp
adc
pop
cmc
xchg
mov
inc
inc
cmpsl
cwtl
pop
imul
jmp
aam
sbb
or
mov
fmul
movsb
push
add
or
bound
cmp
add
push
dec
pop
rcll
stc
inc
mov
in
popf
inc
inc
mov
inc
sbb
sbb
xchg
adc
icebp
push
jl
jmp
jb
push
fstl
jge,pt
adc
and
inc
das
jp
push
test
push
push
cmp
mov
repz
in
movsl
push
sub
ss
dec
mov
jae
cwtl
push
pop
adcb
mov
sub
jl
mov
inc
sbb
mov
jns
iret
and
pushf
adc
lea
scas
inc
arpl
add
cld
push
ret
orl
sbb
cs
scas
mov
jp
fcomps
testl
sbb
mov
addr16
adc
xchg
stc
test
xchg
pop
jl
in
sub
lret
cmp
fisttpll
scas
sub
fwait
jmp
jno
outsl
jge
daa
mov
js
fsubrs
ja
lcall
xchg
sbb
dec
shrl
pop
addr16
enter
lods
test
push
xchg
movsl
push
adc
mov
dec
sub
leave
jno
into
scas
mov
xchg
daa
sahf
xchg
jno
mov
subl
jbe
hlt
push
mov
inc
push
test
insb
add
leave
ljmp
mov
cmp
sub
adc
and
idivl
sub
scas
nop
jecxz
dec
fcomps
cmp
xchg
cmpsb
sbb
mov
sarb
add
cmp
and
in
pop
jg
sbb
mov
movsb
call
das
outsb
sbb
mov
jmp
mov
stos
sub
lcall
fisttpl
mov
repnz
roll
shrl
das
jp
mov
mov
and
and
scas
stc
pop
dec
pop
mov
call
jle
mov
mov
std
std
or
jmp
test
data16
and
push
sub
inc
data16
js
add
lret
xchg
or
lods
adc
xor
xchg
in
dec
pop
ret
xchg
daa
cli
fdivrs
mov
subb
and
iret
and
mov
adc
repz
call
inc
xor
sahf
rcrb
jne
loope
test
fiaddl
add
or
std
into
dec
mov
fldl2t
popa
aad
fisttpll
push
fs
push
scas
lcall
cmp
xchg
fstl
add
outsb
mov
mov
insb
decl
fs
test
bound
or
adc
mov
jno
out
jmp
out
xor
in
fcomp
mov
mov
es
pop
push
inc
cld
movsl
std
dec
sahf
sbb
fldl
pop
out
pop
popa
inc
fidivrl
repnz
fs
clc
adc
mov
push
subb
or
test
stos
inc
cmp
dec
dec
ror
insb
sub
dec
dec
pop
int
pop
jmp
loope
shlb
jle
outsb
decl
lahf
fnsave
ljmp
imulb
out
xor
xchg
add
movsb
jl
dec
loop
mov
cmpb
in
jecxz,pn
gs
outsl
aad
xchg
gs
xchg
inc
icebp
out
outsl
add
mov
imul
in
mov
jmp
and
pop
sub
fnsave
mov
fisubs
sbb
add
sub
jnp
ja
imul
jge
mov
jno
sbb
sub
dec
testb
popf
adc
ja
jg
mov
in
aad
mov
test
insl
dec
clc
icebp
clc
sahf
mov
mulb
inc
and
lock
lcall
xor
aam
xchg
inc
or
imul
add
mov
hlt
pop
mov
push
add
mov
ja
stos
std
xchg
inc
test
mov
push
rcll
ljmp
xchg
or
cmp
mov
daa
mov
nopl
mov
popa
lret
cld
subb
cmp
clc
mov
sbb
sub
ds
insb
fwait
test
int
cs
test
movsb
jnp
mov
add
add
subb
out
shll
jno
cmc
xor
arpl
sti
fwait
push
push
ljmp
adc
xor
test
cli
out
hlt
sub
push
xchg
cwtl
imul
mov
adcl
arpl
outsl
adcb
loopne
xsha1
cmpsb
dec
inc
inc
pop
loope
jp
pop
jecxz
insb
mov
sbbb
cmp
dec
repnz
and
inc
pop
sarb
ficompl
rorl
adc
mov
gs
jmp
fsubl
mov
push
les
movsb
nop
sub
icebp
push
or
cwtl
ret
stos
mov
sub
sub
rclb
mov
shrl
insl
pop
jb
fldpi
ret
cmp
cmc
fmulp
fucomi
push
jnp
fstpl
jnp
test
cmp
add
aad
mov
testb
cli
xchg
into
shll
fidivrl
hlt
push
sbb
inc
dec
test
mov
out
orb
sub
mov
sahf
hlt
mov
dec
andb
fsts
push
jb
cli
xchg
push
adc
sbb
or
xchg
dec
or
push
enter
lods
movsb
or
pop
loope
jge
jb
mov
scas
insl
pusha
testl
aam
mov
dec
sub
sbb
leave
cmp
sti
into
gs
sub
test
sahf
out
dec
das
jnp
sbbl
mov
mov
jb
pop
add
lret
adc
rcrb
xchg
pop
or
lcall
loope
pop
add
add
pop
jge
and
push
mov
inc
xchg
push
add
leave
pusha
add
jb,pt
lcall
inc
xchg
sub
sbb
popf
movsb
clc
movsl
cmp
add
push
mov
xlat
mov
inc
sbb
insb
ret
les
add
xchg
cmp
inc
mov
jmp
mov
cltd
into
enter
out
xchg
mov
out
mov
call
mov
xor
call
push
outsl
scas
push
jns
push
iret
mov
push
xchg
and
into
push
inc
lods
mov
push
ljmp
inc
push
ret
insb
outsb
adc
jg
test
jle,pt
jg
aaa
inc
call
ljmp
push
stos
movsl
xchg
sub
mov
les
daa
fs
inc
mov
xchg
stos
mov
add
jl
std
roll
push
pop
jno
sbb
mov
sbb
lods
js
leave
test
int3
fiadds
iret
sub
int3
cwtl
pop
leave
dec
mov
dec
xor
push
mov
and
adc
mov
shlb
add
out
pop
sub
js
jg
adc
xchg
push
mov
out
jns
push
andb
mov
pop
out
cwtl
xor
dec
pop
jle
jmp
add
or
jns
push
pop
insl
dec
sub
or
pop
cmp
xchg
push
or
lcall
call
cmpsb
jne
sahf
pusha
das
push
ret
es
loop
pop
push
add
out
sub
push
push
mov
jl
scas
jb
dec
ficoms
std
fstpl
das
clc
or
xor
push
jmp
or
jo
push
push
test
jns
push
sub
movsb
loopne
dec
out
dec
dec
rcll
sbb
pop
ss
cld
pop
push
fistps
sarl
test
out
adc
lock
test
lcall
in
pop
into
enter
push
push
ret
mov
jecxz
dec
leave
sar
add
lods
xchg
sub
sub
xorl
jle
testl
daa
or
arpl
dec
cli
sbb
inc
fs
dec
out
movsb
sub
lret
das
bnd
jo
std
lcall
std
repnz
and
shll
dec
cmp
jae
lret
sub
inc
sahf
jle
and
sbb
in
insl
test
inc
adc
int3
mov
dec
push
out
xor
inc
je
cmpsl
jne
test
pop
pop
das
push
mov
int3
fdivrl
mov
push
je
test
xor
sti
or
jno
aam
push
mov
testb
stos
cmp
outsl
sub
pop
std
xchg
push
out
lds
test
sub
cmp
call
outsb
inc
sub
pop
mov
fcoms
fidivs
mov
cmp
out
sahf
xchg
aaa
and
cli
inc
xchg
test
jno
cmp
pop
sarb
fdivrs
jbe
rcrb
pop
insl
outsb
cltd
push
mov
iret
sub
mov
sarl
xchg
push
mov
add
ja
sub
leave
fstps
mov
cli
xchg
jecxz,pn
pop
mov
mov
lds
imul
sub
mov
push
add
inc
dec
mov
pushf
push
into
cmp
stos
stos
pop
mov
ret
inc
jns
mov
adc
imulb
add
dec
loop
iret
lds
imul
jmp
mov
mov
xchg
cmp
test
cmpsb
xor
xor
pop
jne
lods
or
aas
or
fcoms
mov
lods
std
inc
cmpsl
daa
or
push
dec
stc
jle
sub
xlat
sbb
out
jl
mov
xchg
iret
jecxz
mov
popf
xor
push
mov
sbb
test
cs
movb
add
pop
outsl
jge
xor
test
sbbb
fs
outsl
and
and
or
jl
adc
sbb
int
leave
xchg
push
lds
sti
or
inc
inc
pop
cmp
and
into
in
xchg
add
orl
cwtl
inc
and
jmp
adc
lahf
pop
mov
mov
ret
mov
add
xor
pop
mov
lods
jb
clc
dec
sbb
ljmp
mov
add
shrb
xlat
push
and
movsl
fcmovb
std
adc
inc
sbb
jb
mov
mov
sahf
pop
inc
xor
xor
repz
lea
les
mov
cmp
pop
mov
iret
and
jnp
inc
out
cld
scas
js
and
scas
and
int
ljmp
jno
mov
dec
and
mov
paddsb
insl
sbb
add
pushf
xchg
dec
add
ds
lods
fistl
pusha
in
mov
shl
pop
sub
roll
jnp
mov
ret
outsl
cmp
call
fnstcw
ror
divb
sub
fdivs
aam
cmp
sbb
sub
fistl
mov
inc
jmp
jmp
adc
jle
jno
mov
push
fcompl
mov
call
data16
xchg
lods
inc
mov
adc
arpl
or
nop
ss
pop
adc
xchg
xor
pushf
sbb
mov
out
mov
daa
push
inc
lret
dec
pop
cmp
nop
dec
cmp
int3
and
inc
sbb
push
dec
ror
mov
xchg
jmp
mov
xor
out
test
ljmp
movsb
sbb
mov
pop
jne
fwait
out
in
repnz
cli
cmp
loope
rol
cmp
popa
dec
adc
mov
dec
cmp
fs
rcrb
mov
mov
stc
popf
adc
jo
idiv
pop
movsb
loopne
dec
push
mov
jl
mov
ja
inc
xor
cmp
xchg
xchg
lahf
xor
ret
jno
addr16
pushf
sbb
and
dec
push
mov
or
orl
sbb
out
jmp
das
rorl
push
clc
add
jbe
xchg
in
jne
inc
ffree
add
inc
lcall
mov
cs
mov
cmp
and
cld
dec
mov
addr16
enter
notl
repnz
js
imul
cmp
lea
sbb
dec
pop
or
sbb
pop
jecxz
add
lods
fistpl
shll
push
pusha
aaa
add
ret
call
sbb
fldt
loope
and
add
popa
mov
jns
cmp
loopne
pop
loop
test
addl
sbb
dec
outsl
aaa
mov
popf
or
xchg
cmpsb
mov
push
jge
pop
aad
sub
cmp
push
inc
dec
push
out
ret
icebp
or
sub
pop
mov
jb
push
adc
and
test
mov
push
stos
inc
enter
test
push
and
pop
sahf
cwtl
pusha
test
sub
insb
nop
repz
jns
jmp
lds
adc
and
lcall
and
dec
sbb
cmp
dec
sbb
in
or
push
xchg
in
mov
ret
out
sbbb
cmpsl
sbb
out
sbb
shll
shl
pop
mov
das
mov
lret
bound
mov
int
inc
xor
lahf
inc
and
add
dec
in
sti
stos
mov
inc
cmp
ret
sbb
rcl
xchg
xchg
das
lods
incb
imul
test
dec
test
and
mov
mov
mov
mov
mov
jae
repnz
or
xor
pop
inc
xchg
xor
sub
sub
xor
jle
mov
int
mov
roll
mov
cmp
push
jo
test
jle
out
mov
push
iret
into
insb
mov
shrl
jle
bnd
mov
divl
inc
fimull
lahf
ss
sarb
xor
aaa
pop
imul
ds
xchg
pop
lds
inc
clc
sbb
sbb
dec
ss
shl
adc
daa
pop
insl
imul
jns
jge
xor
adc
loope
adc
loopne
mov
jnp
jne
adc
fs
pushf
dec
push
or
mov
xor
test
fdivl
inc
sub
in
mov
xchg
insl
add
fldpi
mov
mov
clc
iret
jg
inc
fiadds
es
icebp
jbe
sti
sbb
subl
pusha
clc
scas
ret
or
sbb
cli
lret
cmpsl
cmp
sahf
repnz
stos
and
jl,pn
enter
mov
ret
xchg
and
dec
filds
adc
in
jecxz
sbb
jb
mov
mov
aaa
jl
push
and
jns
and
or
int
or
inc
jae
mov
out
jno
loopne
aam
test
daa
jge
mov
xchg
js
xchg
xor
lods
loope
testl
mov
cld
push
movsw
sbb
subb
xor
stos
cmp
pop
or
decl
mov
in
pusha
sub
pop
xor
loop
mov
push
pop
and
mov
out
dec
mov
dec
xchg
dec
fnstcw
lahf
fnstenv
mov
mov
jnp
call
jne
pop
lock
popa
add
ficompl
clc
adc
aaa
mov
movsb
jle
aas
fucomi
push
mov
jge
mov
outsl
jmp
stos
rcll
or
mov
mov
or
insl
sub
out
push
xchg
push
loop
cmc
aam
cmp
sub
cmc
inc
ljmp
je
sbb
insl
pop
js
in
in
jmp
filds
jecxz
icebp
push
fdivr
pop
mov
loopne
stos
or
cli
xchg
add
cmp
mov
sar
hlt
xor
fs
xlat
xchg
call
adc
jno
mov
lret
cs
mov
lds
stc
insb
popf
xor
cmp
cmp
or
push
in
lahf
push
xchg
push
dec
aaa
data16
ja
shlb
push
das
loope
mov
call
dec
fdivs
cmpsl
and
pop
dec
lea
loop
cli
inc
cmpsl
sbb
jmp
mov
sti
mov
push
out
stc
popa
fdivs
inc
jmp
lds
ljmp
mov
or
imul
sbb
push
lods
testb
inc
push
inc
dec
sahf
add
call
pop
das
icebp
pop
arpl
jb
pop
jbe
push
sahf
adc
dec
je
cwtl
xor
lock
cld
jmp
xor
dec
fdiv
call
mov
js
adc
cmpsl
jecxz
imul
frstor
rcrb
jge
sahf
jb
dec
shrl
fcoms
andnps
mov
inc
ret
enter
movsb
fidivrl
movsl
xchg
test
outsl
jnp
jbe
jmp
fwait
es
xchg
outsb
andb
lcall
in
adc
push
jg
mov
fldl2t
dec
push
fdivrs
shrl
dec
fwait
loope
cmp
cmp
pop
dec
fiadds
icebp
pop
movl
int
test
imul
lods
add
je
rolb
mov
cmp
dec
stos
in
sbb
imul
mov
push
stos
jnp
mov
xchg
stos
mov
xchg
mov
push
sub
mov
clc
je
leave
shl
cmpsl
into
es
or
inc
xor
jbe
int
add
ss
mov
cmpsl
add
shrl
sbb
icebp
jo
mov
adc
add
mov
or
cmp
xchg
add
pop
pop
mov
icebp
sahf
sub
cmp
repz
clc
leave
into
test
xor
sub
pushf
xor
adc
mov
or
leave
int
sub
dec
push
dec
movsb
pop
push
mov
addb
cmp
pop
stos
or
mov
loop
movsb
xchg
cltd
xorb
sbb
or
lods
int3
lahf
or
ds
jl
cwtl
das
and
std
inc
push
inc
cmpsb
lock
sub
push
sbb
push
dec
es
jmp
lret
pop
mov
cmp
mov
mov
fistps
cmp
cmp
push
push
or
sarb
cmp
jnp
fistps
or
jle
daa
mov
test
mov
in
push
lea
loopne
jnp
mov
test
adc
xlat
pop
push
test
lods
andnps
cli
xorb
test
jg
daa
sbb
mov
xor
jl
lods
xchg
fidivs
sbb
mov
cmpsb
ret
gs
push
push
cwtl
xor
sbbl
inc
stos
and
lret
cmc
and
mov
xchg
outsb
add
sub
or
aas
fwait
je
incb
and
xchg
adc
das
mov
adc
clc
mov
and
cmp
push
je
aaa
pop
sub
xchg
jns
lahf
scas
jb
mov
lret
adc
out
jns
rcrl
clc
mov
jmp
or
jae
mov
sti
enter
pop
mov
pop
xlat
xchg
ljmp
push
xchg
adc
out
cmpsb
fwait
lods
aad
in
dec
mov
push
or
clc
js
push
lcall
xchg
mov
dec
inc
sti
cltd
xchg
sti
push
push
jp
sarl
outsb
stc
push
movsb
xchg
loope
adc
fnstsw
xchg
adc
xor
push
inc
lret
sbbb
or
loope
sbb
dec
and
pop
push
or
subb
dec
xchg
mov
push
in
xor
addr16
fisubs
jb
xor
xor
inc
and
jns
mov
xlat
loopne
and
sbb
les
addr16
jge
cmc
lcall
sbb
pop
push
and
push
cltd
jnp
adc
cwtl
xor
xchg
push
or
adc
and
std
aad
cmp
stos
cs
adc
mov
mov
push
pop
mov
mov
mov
les
and
ret
jns
fs
das
mov
loopne
pushf
push
daa
rcl
mov
adc
fisubrl
sar
pop
lock
jecxz
movsb
sub
inc
xor
jp
loop
jmp
enter
pop
or
push
cli
shl
fs
pushf
pop
jae
dec
sarl
mov
push
aaa
dec
jl
mov
int
sahf
jg
dec
mov
in
sbb
jmp
dec
ss
dec
xchg
xchg
test
and
fsubr
ds
push
jl
push
xor
sti
mov
adcl
stos
push
pop
sbb
xchg
stos
ss
pop
lea
mov
cmpsb
nop
pop
sub
and
jge
cli
cld
dec
lcall
sahf
lock
mov
mov
clc
xchg
dec
stc
sub
xchg
ljmp
insl
add
mov
adc
sub
cmp
jge
adc
xor
jne
pusha
mov
sub
xchg
testl
pop
or
dec
popf
jbe
and
loop
xchg
or
sbb
out
addl
or
adc
rol
and
cmp
xchg
sbb
in
mov
fistl
or
fnsave
mov
ss
add
es
jo
lods
xchg
add
popa
jne,pn
xchg
or
pusha
pop
jge
mov
out
call
cmp
ljmp
xor
idivb
and
dec
xchg
cmp
imul
push
iret
adc
pusha
xchg
add
idivb
xchg
das
lret
popa
icebp
mov
fnstcw
dec
push
repz
les
lahf
addr16
cmp
ljmp
adc
add
xor
inc
aad
test
mov
ja
test
cmp
cmpsb
mov
loop
jle
lcall
icebp
iret
inc
mov
push
ljmp
jno
dec
in
sbb
add
cmc
lcall
inc
sbbb
add
orb
lods
stos
jg
push
pop
scas
sub
dec
adc
or
sbb
mov
adc
jmp
rcll
insb
shll
and
stos
push
push
xor
sbb
mov
push
cmp
jg
push
ficoms
sar
adc
fmull
jge
pop
iret
data16
sbb
insl
push
add
mov
mov
mov
enter
fistps
mov
pop
scas
jae
dec
std
stos
and
es
mov
addl
adc
push
ljmp
mov
push
into
push
popa
setns
scas
jo
add
mov
sub
sbb
sub
mov
push
jo
outsl
shrb
cmpl
addr16
in
sbb
icebp
sbb
xlat
shlb
and
cld
pop
jp
inc
insl
loopne
xor
lock
ss
add
jnp
mov
mov
es
repnz
or
mov
jbe
cwtl
push
mov
fidivrl
pop
insl
pop
push
cmpsb
lcall
test
ja
shrb
mov
pop
pop
daa
into
mov
push
mov
or
cmp
fistl
add
fdivp
fucom
lods
xor
mov
mov
push
xchg
pop
sub
adc
adc
mov
pop
icebp
test
lods
and
pop
cmp
leave
test
lret
movsl
ss
andb
push
jmp
cmp
outsl
pop
jae
out
movsb
push
out
add
push
jbe
sub
jno
jne
testl
iret
mov
scas
jo,pt
adc
fiadds
lahf
fwait
push
xchg
in
add
out
aaa
jb
mov
inc
data16
addr16
sub
lock
pop
mov
mov
aaa
pop
sub
scas
inc
lcall
shufps
popf
lret
jne
or
gs
jl
lea
pminub
shrl
ljmp
push
pop
pusha
sbb
sbb
pop
lret
push
shr
bnd
mov
xchg
sbb
dec
dec
pop
icebp
sbb
stc
mov
sub
outsb
adc
fidivrl
push
push
push
dec
inc
stc
nop
jb
sarb
mov
les
fildll
cwtl
and
and
ds
mov
stc
jecxz
out
sub
dec
pop
rolb
daa
mov
scas
ret
mov
imul
jp
lea
cmpsb
in
call
push
and
je
adc
hlt
cwtl
das
loop
sarl
cmp
xchg
out
and
sbb
dec
and
xchg
aas
pop
cmpsl
test
jnp
hlt
out
mov
lds
jno
push
icebp
mov
mov
lds
sub
sub
in
jae
lds
sbb
loopne
popa
clc
xor
fidivrl
add
popf
push
fstps
arpl
mov
subb
sub
cmp
pcmpeqw
aas
sub
lods
mov
roll
push
stc
sub
jp
push
mov
pop
sbbl
add
pushf
pop
jmp
cli
inc
mov
js
fdivs
decb
ljmp
xchg
push
inc
xchg
dec
aad
add
in
push
js
sbbb
mov
push
mov
lret
jb
mov
arpl
xchg
es
imul
in
dec
cli
pop
pop
stos
sbb
jl
arpl
cld
nop
pop
mov
cmpsb
sti
insb
cmp
xchg
sub
push
adc
push
or
dec
sbbb
jmp
cltd
insl
rol
ret
inc
mov
pop
in
add
mov
pushf
and
mov
test
lret
clc
or
inc
insb
repnz
sbb
out
inc
scas
pop
and
jg
sub
xchg
sub
mov
fisubrl
or
inc
fwait
mov
add
push
and
adc
sbb
jns
adc
push
cmpsl
adc
lods
cmc
xor
addr16
push
push
mov
mov
mov
pop
xchg
mov
mov
cwtl
fdivrp
push
fwait
out
clc
cmp
and
mov
in
jle
adc
pushf
push
cmp
mov
or
into
movsb
sub
rcr
cmp
or
pop
fildl
fbld
sbb
mov
stos
call
xor
aaa
sbb
jecxz
ss
shlb
inc
push
pusha
stc
pop
shll
pop
and
push
add
out
fiadds
adc
je
ret
cmp
in
jns
or
mov
pushf
call
test
cmpsl
sti
inc
and
jmp
add
mov
clc
ja
enter
push
leave
in
bound
sbb
push
test
lahf
mov
push
jge
xchg
sbb
jmp
int
xchg
jp
push
ss
sbb
enter
xchg
or
aas
mov
xchg
and
test
in
pop
adc
aam
aas
mov
cmc
fwait
bound
mov
ds
mov
aad
or
and
sbb
packuswb
push
das
test
popa
mov
ret
jne
jl
lret
popf
xchg
sub
enter
mov
jo
sbb
add
mov
push
or
push
pop
and
jl
pusha
adc
loop
rclb
adc
jp
cwtl
daa
pop
sbb
xchg
dec
adc
insb
lods
cmp
sub
push
addb
xchg
fnsave
mov
mov
sti
jbe
sub
pop
sub
xchg
jno
imul
in
push
push
xchg
pop
cmp
jae
fs
insl
mov
cmp
xchg
sub
mov
stos
lods
sbb
xor
stc
addb
lods
cli
pushf
test
int3
test
gs
jo
inc
mov
dec
dec
mov
and
mov
hlt
mov
inc
shrl
dec
fbstp
stc
test
and
sahf
push
jns
aas
adc
clc
push
imul
pushf
and
dec
mov
pop
dec
dec
cltd
sbb
cmp
gs
sub
arpl
outsb
mov
arpl
call
push
jae
sahf
pop
mov
mull
jnp
adcb
aaa
xchg
inc
in
scas
aad
es
or
push
ss
xor
jg
mov
cmpsl
pop
test
mov
sub
ret
jae
or
arpl
push
pop
mov
int
push
adc
mov
scas
aaa
dec
push
push
fxrstor
mov
pop
push
and
clc
fs
rcl
aaa
jg
and
or
pop
or
addr16
inc
ficompl
addr16
cmpsl
cmp
and
repz
cmp
js
sbb
sub
stc
scas
add
clc
adc
mov
add
jnp
mov
add
stos
xor
push
dec
lret
pop
insl
lds
insb
pusha
div
lea
movsl
push
or
push
insb
push
mov
lahf
pop
icebp
shlb
sub
cltd
mov
test
outsl
sbb
mov
jl
or
add
or
out
pop
adc
jb
adc
out
es
fldt
xchg
out
mov
mov
icebp
dec
outsl
mov
xchg
dec
xchg
ret
cmp
rcrb
jg
scas
insb
mov
les
arpl
xor
add
dec
ss
inc
cmp
mov
mov
out
loope
adc
pushf
mov
pop
inc
mov
jmp
cli
cmpsl
xor
out
pop
xor
inc
out
cltd
clc
and
pop
push
sbb
jle
jbe
jnp
aad
add
cmc
or
push
fsubs
push
scas
or
xor
push
or
jbe
xchg
and
lret
pop
jno
addr16
ficompl
xchg
or
xchg
js
pop
stos
mov
dec
enter
jno
shll
lahf
mov
loop
js
movsb
and
sbb
push
hlt
jle
std
xor
mov
add
add
cli
push
jb
dec
and
add
mov
xorb
movzbl
mov
int3
jbe
scas
sub
into
gs
fstl
in
and
push
popf
movntq
loop
push
sub
pop
std
lret
adc
in
add
mov
pop
movsl
xor
and
scas
inc
mov
cmc
popf
xor
add
push
sti
fadd
pop
and
andb
repnz
fistps
cmp
cmp
outsl
je
cmpb
pop
mov
test
aaa
fstps
stos
es
pop
and
in
lds
sbb
dec
push
add
inc
subb
or
das
dec
xor
in
push
sti
pusha
daa
pop
cltd
adc
outsl
dec
in
fwait
daa
cmp
push
pop
sub
rolb
and
out
scas
lock
das
fnsave
xchg
aas
sti
inc
scas
loopne
jbe
mov
and
pusha
testl
mov
push
movsl
test
jb
inc
movsb
push
mov
bound
int3
cmpb
xchg
lds
daa
mov
or
jae
scas
scas
pop
cmp
push
add
pop
jecxz
aam
aas
ret
cli
test
mov
adc
pop
jl
cmp
repz
mov
inc
ret
add
or
cmp
mov
sbb
mov
fs
test
leave
hlt
stc
adcb
jmp
xor
pop
sbb
sbb
mov
in
loop
jno
sahf
test
and
xor
test
inc
push
int3
arpl
testl
jmp
dec
and
inc
sbb
fisttpl
outsl
inc
frstor
dec
loop
shrl
mov
push
ljmp
jb
and
scas
inc
lret
inc
arpl
sahf
sbb
add
aaa
subl
mov
xlat
scas
sbb
inc
mov
pop
enter
testl
add
pop
mov
mov
loope
xchg
ret
push
insl
cld
xor
int3
shr
push
or
dec
cmp
adc
xor
aad
in
mov
adc
and
and
fdivl
inc
push
je
jbe
inc
ret
cmp
cmp
mov
into
pop
inc
xlat
lahf
mov
pop
dec
mov
and
sub
jmp
imul
jmp
pop
push
jns
dec
out
lret
xor
jp
popa
je
enter
hlt
sarb
mov
pop
fistps
sbb
jns
lds
dec
aad
in
sbb
pop
inc
pop
or
mov
sub
stc
or
out
mov
xchg
add
dec
xchg
stos
push
or
xor
int
mov
mov
or
pusha
and
cmp
stos
xchg
jmp
add
dec
rcrb
jbe
ja
jno
loop
pop
imul
setb
mov
gs
dec
jo
test
movsb
ret
ljmp
cmp
pop
add
out
xor
movsl
pop
or
xor
dec
pop
cmpsb
sbb
pop
xor
nop
sbb
out
xor
jmp
repz
imul
xor
and
into
sub
jbe
mov
push
rclb
inc
cmc
or
xchg
fdivrs
dec
enter
or
cltd
cmc
push
je
jecxz
pop
jnp
int3
in
adc
mov
xchg
xchg
pop
jns
dec
orl
push
dec
gs
shlb
ljmp
push
cwtl
in
repz
in
inc
mov
mov
stos
mov
setnp
pop
and
mulb
adc
es
dec
pop
clc
dec
mul
jb
es
add
arpl
mov
shlb
sbb
cmp
mov
lods
dec
sbb
data16
xchg
addb
inc
sbb
ljmp
pop
dec
in
cwtl
inc
add
fstl
imul
and
les
std
xor
sbb
inc
clc
mov
stos
es
pusha
and
lock
cld
movsb
cltd
jmp
pop
sub
out
mov
dec
adc
mov
pop
inc
out
fdivp
mov
push
enter
pop
insb
cmc
incb
sub
test
cmp
sahf
sub
mov
cmpl
push
or
sarl
mov
in
and
lds
or
cmpsl
iret
sub
inc
inc
loop
lcall
pop
out
lahf
xor
pusha
mov
pop
pushf
xor
in
inc
mov
pushl
icebp
scas
mov
shlb
lret
cmp
fidivs
loope
imul
cld
xchg
mov
mov
mov
cmp
in
stos
pop
shll
inc
out
dec
aaa
dec
fucomip
dec
test
jle
cmp
sbb
rcll
mov
cmp
xchg
xchg
rol
loopne
mov
fwait
cmp
imul
add
push
mov
mov
lea
loopne
inc
lods
imul
jg
cmpsl
les
inc
loope
jl
shrl
dec
pop
lock
mov
jge
ja
pop
mov
jecxz
nop
lea
roll
push
or
mov
aas
insb
pop
gs
or
subb
jge
jns
dec
mov
leave
jnp
pop
call
call
lret
das
pop
jmp
mov
imull
je
aam
shll
mov
outsb
stc
lock
mov
pushf
push
mov
repnz
clc
cltd
aaa
xor
ja
out
push
mov
outsb
cmp
jg
gs
rorl
aaa
or
test
iret
scas
out
jge
mov
idivb
hlt
mov
pop
pop
cmp
mov
movsb
push
and
or
push
sti
push
or
clc
xchg
add
pushl
clc
dec
addr16
out
cwtl
scas
add
call
cmp
aaa
sbb
xchg
daa
pop
rolb
iret
rcrl
rcll
xchg
lahf
mov
cltd
stos
cmp
mov
jb
add
jle
add
arpl
adc
pop
push
out
mov
mov
test
jno
test
sbb
arpl
in
mull
lds
sbb
pop
dec
push
into
mov
and
loop
inc
pop
loope
push
mov
fimull
dec
popf
bound
lret
cmp
jo
add
movsb
js
test
adcl
mov
and
lods
xchg
xchg
test
int
sbb
cmp
jo
inc
push
out
adc
test
test
pop
call
fcomps
sti
rorl
sbbb
fdivl
call
mov
xchg
cwtl
in
out
push
dec
sbb
rolb
into
cmc
cmp
shrl
push
push
or
pop
bound
insb
mov
push
jo
mov
stos
mov
sub
inc
fldcw
or
lret
add
leave
rol
jp
loop
insl
sub
xchg
pushf
outsb
fnsave
pop
test
mov
scas
xor
and
inc
cmp
in
popf
repnz
push
jecxz
xchg
inc
in
xorl
dec
out
nop
cmp
int3
push
jb
ja
leave
test
inc
fwait
aas
mov
pop
xor
imul
pushf
cmp
inc
out
lcall
or
scas
pop
ljmp
outsl
jl
mov
ljmp
pushl
push
lret
les
cld
cmp
xor
imul
sar
jecxz
sub
in
jge
int
lcall
and
mov
inc
fnsave
call
jnp
lods
inc
mov
out
incb
movsb
fbld
enter
stos
inc
js
popa
add
xchg
imul
ss
ja
aad
scas
add
jp
cli
mov
push
sub
outsl
xor
jge
sbb
push
test
mov
fwait
cld
leave
inc
cwtl
addr16
fbld
inc
pop
sub
mov
pop
xlat
push
inc
or
les
or
mov
dec
hlt
addr16
divb
stos
ret
jmp
cmp
push
out
mov
leave
mov
sub
cmpb
andb
mov
mov
push
icebp
nop
sub
lret
cmp
sub
fcmovnbe
cmc
mov
call
cmpsl
inc
cmp
stos
cmpsb
sbb
int
mov
jo
addr16
std
mov
pop
cmp
push
xchg
push
shrl
fisubl
pop
imul
imul
cmc
scas
call
ja
sahf
scas
cwtl
xor
mov
imul
lret
fdivrs
and
fcompl
xor
adc
outsl
notl
sbb
out
mov
lods
push
jno
push
outsl
add
pushf
push
or
cmpsb
cmp
leave
fnstcw
push
xor
ja
adc
jno
fcoms
pop
int
sub
pop
xchg
add
sub
adc
adc
and
test
xchg
insb
jmp
sbb
ja
fs
cmpb
inc
std
cmpl
cld
mov
xchg
sub
ja
cmp
xchg
mov
bound
sbb
inc
lahf
xchg
paddusw
and
xchg
out
xchg
das
js
add
jns
rorb
jnp
xchg
das
mov
mov
popa
aaa
test
mov
popa
mov
adc
aam
arpl
cld
pop
addr16
xor
repz
insl
pop
add
jne
dec
leave
bound
outsl
les
mov
jg
and
jle
mov
addr16
pop
addr16
push
push
clc
test
leave
jo
or
mov
cmp
mov
jns
pop
xchg
mov
fwait
inc
pop
icebp
jp
aam
push
fsubs
testb
scas
mov
mov
imul
xchg
inc
jb
divl
mov
divl
pop
fadds
aad
push
lds
push
addr16
lahf
mov
xlat
pusha
testl
mov
cmc
push
xchg
test
mov
jno
std
mov
out
jnp
pminub
push
push
scas
cmp
xchg
scas
jp
and
ret
hlt
push
mov
pushf
icebp
push
push
push
sbb
mov
jle
loop
jp
dec
movsb
shlb
jno
and
lock
stos
add
in
lods
scas
jg
push
outsb
sbb
sub
inc
jl
jbe
mov
lods
nop
lods
cltd
sub
div
movsb
cmp
loope
sbb
insl
ret
roll
sub
xchg
es
cmp
cwtl
out
add
xchg
xchg
push
sbb
mov
mov
mov
inc
rcl
ss
out
cs
push
enter
mov
das
inc
xor
testl
push
pop
lret
fdivrl
cmc
stos
and
mov
mov
fldt
test
in
sbb
dec
das
movsb
imul
dec
in
incb
lods
inc
in
xchg
adc
pop
into
pop
test
scas
inc
repz
or
int
fisubl
push
sub
jp
ss
mov
out
div
pushf
sti
or
lret
add
lret
decl
mov
pop
xchg
mov
or
aas
add
add
out
mov
mov
fsts
mov
js
add
shll
lret
mov
out
pushf
jae
in
test
or
mov
mov
sub
inc
dec
arpl
std
mov
leave
and
out
mov
push
dec
into
loop
ds
shl
stos
and
stc
pop
lret
mov
adc
cwtl
pop
in
or
loopne
push
insl
jge
mov
mov
cli
fidivs
sub
or
iret
cmp
pop
xchg
into
mov
in
sbb
sbb
mov
dec
mov
dec
pushf
stos
xchg
add
push
sub
jae
xchg
or
dec
and
int3
adc
cmp
and
fstps
fsubrs
in
daa
orb
push
xchg
push
pop
arpl
dec
xor
mov
jnp
and
std
adc
or
or
lret
addr16
fsubrs
inc
fidivl
xchg
jb
hlt
mov
repz
sbb
rorb
lods
mov
test
fnsave
mov
push
pop
mov
scas
mov
fnstenv
pop
mov
cmp
std
adc
mov
jbe
mov
gs
outsl
lret
push
adc
add
push
out
and
adc
or
cmc
and
jne
pop
xchg
xchg
sub
jne
inc
cmpsb
cmpsb
jno
mov
xor
add
mov
iret
mov
push
insb
imul
dec
cs
push
mov
inc
mov
pushf
inc
outsl
xor
js
popa
inc
jecxz
xchg
int
inc
push
pop
imul
dec
sub
lods
push
cs
xchg
out
aas
repz
mov
cwtl
scas
pop
cltd
adc
lret
jl
cmpsb
mov
repz
cs
xchg
inc
shll
add
pop
hlt
and
pop
dec
mov
rorl
pop
sub
insl
addr16
mov
shll
sub
cmp
pop
ljmp
adcl
cmp
push
sub
loopne
mov
ficoms
call
ss
jo
inc
ljmp
mov
call
fwait
scas
addr16
ss
cmp
subl
pop
sub
push
cmp
scas
adc
sub
jecxz
outsl
cmp
outsb
sbb
adc
mov
cmp
movsb
and
es
popf
pushf
decb
adc
ljmp
aam
stc
inc
xor
mov
xchg
mov
and
push
shlb
pop
xchg
movl
mov
sub
cwtl
add
stc
hlt
mov
in
in
or
xchg
xchg
pop
aam
fwait
inc
push
dec
es
popa
pop
jecxz
jp
aam
scas
mov
leave
int
sbbl
ret
lock
lods
xlat
or
sbb
sub
and
and
dec
xor
sti
int3
jae
cmp
jmp
and
pushl
jne
lds
mov
mov
lcall
xor
jmp
fmul
and
cli
pop
mov
sbb
xor
loop
push
leave
mov
cld
ljmp
push
inc
hlt
stc
push
arpl
xchg
aas
decl
add
pop
shrl
pop
pop
push
dec
mov
enter
ret
enter
jecxz
and
mov
xchg
cli
test
mov
pop
sub
sbb
jecxz
mov
shl
inc
in
push
dec
mov
mov
sub
es
inc
mov
cmp
xchg
pop
mov
lock
jbe
jbe
pop
push
test
dec
test
inc
je
hlt
jnp
sbb
mov
cmp
ss
cmpsl
rclb
call
or
sbb
jo
or
xchg
jbe
notl
arpl
pop
mov
mov
in
mov
adc
and
pop
test
xor
push
jl
mov
fwait
test
inc
hlt
sbb
adc
sti
cmp
jmp
dec
test
dec
test
push
scas
lods
rcrl
aas
push
enter
leave
jmp
leave
sbb
je
in
shrl
or
mov
das
mov
push
and
jl
pop
roll
add
mov
ret
insl
test
xchg
xchg
jb
lods
xchg
repnz
and
fs
rcrl
in
bound
cmp
outsl
add
mov
fsubrs
cs
mov
notb
decl
and
leave
iret
jo
push
push
sbb
mov
gs
dec
ljmp
push
inc
push
jno
or
mov
iret
stc
and
pop
sub
jb
lods
ret
movsl
mov
rcrb
mov
ljmp
imul
xchg
pop
in
rcl
mov
or
mov
pushf
jmp
ja
push
outsb
xor
mov
xchg
std
shlb
in
lret
testl
sbb
in
mov
sti
or
mov
fists
or
sbb
push
push
cltd
cmc
push
imul
xor
pop
lahf
daa
xor
inc
jns
sbb
imul
stos
js
sbb
imul
addr16
xchg
xchg
jo
sub
jae
cld
lret
mov
or
sti
jl
mov
rclb
and
icebp
das
add
loope
mov
out
shlb
mov
mov
imul
addb
lcall
and
mov
fadds
test
bound
inc
sub
mov
sub
jae
add
into
pop
jecxz
addr16
jne
out
push
mov
fistpll
jg
cmp
mov
xor
dec
pop
arpl
aaa
sub
mov
pop
ds
adc
pop
sahf
pop
call
cmp
dec
push
mov
mov
adc
int
mov
shr
pop
cmpsb
in
mov
or
clc
push
mov
jns
pop
xchg
out
add
imul
and
mov
cmpl
scas
mov
fcomip
into
lret
push
jnp
mov
scas
call
xchg
idivb
fisttpll
xchg
imul
and
xor
loope
ja
mov
stc
mov
out
jl
sub
push
insb
cli
lahf
mov
sbb
pusha
push
push
xchg
mov
cmpsb
lea
lret
add
inc
call
xchg
scas
rcl
sbb
mov
scas
cmp
inc
pushf
mov
cwtl
negl
es
jne
adc
mov
imul
test
add
shrl
pop
clc
setno
jle
sbb
add
and
lea
ret
je
xchg
in
aam
mov
xor
inc
fdivrs
fdivs
mov
dec
rolb
or
aas
push
push
jae
ret
idivb
ds
lahf
sbbb
push
fldt
cmp
or
cs
cs
pop
mov
inc
dec
sub
out
pop
sbb
and
push
or
lret
xchg
test
test
xor
insl
push
pop
mov
mov
addr16
lret
test
arpl
inc
dec
and
mov
leave
test
call
into
das
scas
cmpb
mov
cmp
pop
dec
push
cld
addr16
push
cli
adc
aaa
and
fstl
lods
jne
cltd
mov
push
js
and
push
test
fsubr
imul
adc
mov
mov
push
outsl
imul
dec
push
xchg
lods
cmpb
mov
cmp
andb
test
mov
imul
std
jbe
and
jp
and
xor
xor
dec
push
push
or
jmp
mov
or
push
adc
cld
pop
push
daa
adc
or
adc
es
push
aam
fwait
cmpsl
mov
xlat
test
jmp
pop
xchg
iret
lret
jno
int
push
popf
scas
mov
xchg
cmpsl
sbb
cmp
mov
mov
test
mov
jg
andl
int
out
lret
sbb
imul
jmp
add
sub
leave
jl
jle
out
and
ljmp
stos
mov
dec
ljmp
cmpsb
stos
and
push
mov
movsl
cmp
out
push
cltd
push
or
flds
jnp
cs
sub
repnz
aaa
test
push
rcrb
bound
ljmp
and
rcrl
mov
jnp
out
rcl
push
or
in
pop
pushf
scas
jb
daa
mov
out
imul
push
mov
mov
popf
test
jae
pushf
cli
pop
sbb
les
lea
and
sub
icebp
jo
sub
jb
or
rcrl
mov
mov
add
pop
insb
jp
dec
xor
ficoml
inc
sbb
sbb
scas
mov
sti
adc
inc
push
int
les
stc
data16
jae
jecxz
in
aad
addb
mov
movsl
aas
call
pusha
mov
in
cmp
pop
mov
imul
cmp
mov
cli
ljmp
xchg
std
and
cmp
in
icebp
fstl
int3
lret
ds
ljmp
pusha
or
jae
mov
xchg
pop
in
xchg
test
add
pushf
inc
shrb
cmp
or
gs
sbb
xchg
imul
pushf
mov
test
mov
sbb
push
jae
mov
cmc
pop
inc
sbb
push
cwtl
add
push
lcall
pop
jp
sub
jp
icebp
inc
in
mov
lcall
xor
add
andb
pop
ret
outsb
fnsave
leave
orl
jg
enter
mov
gs
call
scas
and
rclb
jno
push
dec
dec
pop
out
pop
stos
insb
das
sbb
lea
pop
dec
jns
jbe
fldcw
outsb
pop
es
mov
sbb
or
jno
jl
stos
fidivrl
outsl
daa
mov
shl
pop
daa
scas
xchg
rorb
xor
sub
pusha
jnp
and
add
xor
movsl
dec
cld
data16
shl
mov
add
pop
add
aad
jbe
jb
sarb
pop
dec
dec
adc
repz
jo
jl
jg
adc
xlat
repnz
enter
aad
dec
mov
mov
fisttpll
sbb
pop
sahf
cs
mulb
xor
sub
pop
iret
mov
loopne
loopne
sub
icebp
xchg
aad
subb
cmp
jae
fldenv
dec
pusha
idivl
inc
aad
cmpl
jbe
inc
mov
pop
repnz
in
xchg
lahf
popf
cmp
mov
pop
sub
push
pop
add
adc
xchg
inc
or
rep
loop
mov
cmpsl
cmp
dec
dec
pop
xorl
js
mov
aam
mov
push
jl
pop
out
jns
or
popf
jl
and
sti
bound
mov
stc
mov
mov
inc
dec
mov
bound
in
aam
pop
mov
pop
pop
ja
mov
mov
dec
xchg
outsb
popf
mov
bound
mov
jbe
cmp
push
jmp
aaa
pop
aam
test
js
pop
dec
xchg
jge
or
mov
popf
dec
fildll
test
mov
mov
iret
shll
jge
cmp
inc
mov
or
sarl
jecxz
mov
aad
xor
sbb
bound
dec
jmp
xlat
fsubr
std
pop
dec
inc
jae
jo
int
movsl
push
mov
jecxz
test
mov
stc
push
loope
mov
out
bound
repnz
or
in
xor
je
inc
push
movsb
loopne
mov
roll
xchg
pop
jmp
cmpsl
repnz
cltd
pop
jle
fsts
dec
jae
clc
in
mov
add
xchg
std
push
xchg
sbb
push
inc
cmp
pushf
dec
cmp
pop
ret
jo
adc
xchg
jg
sbb
sbb
push
jno
or
mov
xchg
inc
fwait
jb
repz
jno
stc
push
es
sbb
xlat
cs
push
imul
adc
push
mov
xor
push
jb
hlt
xchg
mov
test
loop
lock
xchg
push
jnp
js
btc
lods
aas
shr
inc
xor
leave
and
clc
cmpsl
jle
pusha
lock
jecxz
add
and
pop
call
inc
cwtl
mov
jl
neg
cli
push
aam
cltd
inc
popf
jl
pop
mov
pop
and
mov
loop
pop
bound
loopne
arpl
testb
mov
sub
mov
mov
imul
pop
adc
repnz
pop
movsl
jo
mov
loopne
movsl
addr16
sub
arpl
dec
es
mov
inc
and
aas
and
sbb
movsb
jo
jnp
mov
rcll
dec
lahf
mov
popa
mov
inc
data16
push
in
test
lret
popf
je
and
movsb
imul
not
cmpsb
inc
sahf
dec
push
repz
scas
int
and
cld
shlb
outsl
mov
aaa
mov
cmp
insb
add
insb
ljmp
popa
insb
out
jns
arpl
int
sbbl
arpl
mov
push
fsub
sbb
dec
sbb
lea
dec
popf
pushf
xchg
jmp
jmp
xor
add
bound
mov
addb
inc
in
sub
imul
push
cmpsb
test
jnp
hlt
out
sti
push
test
xchg
mov
aaa
dec
mov
stos
cmp
ret
push
adc
fisubs
push
lods
sub
adc
pop
dec
iret
lods
cld
mov
cmp
addb
cltd
mov
xchg
das
mov
pop
sarb
and
sub
cli
shlb
mov
and
adc
xor
int
mov
add
push
outsl
popa
in
icebp
xchg
sub
fs
inc
shll
push
rcrb
inc
pusha
or
and
lods
push
in
mov
out
jo
leave
dec
xor
imulb
aad
enter
pop
notl
jae
daa
inc
push
push
jb
mov
inc
repz
roll
mov
push
jge
daa
je
mov
loopne
xor
rcrb
pop
mov
mov
clc
fucomi
pop
sbb
lds
and
aas
sub
xor
aas
loope
stos
push
fimuls
loopne
adcb
ss
arpl
or
sub
lock
incl
dec
lahf
push
xchg
fsubrs
jg
es
xor
mov
pusha
or
adc
mov
or
cmp
pop
push
cltd
gs
cmp
xchg
cltd
sub
jae
xchg
pop
sahf
adcb
arpl
pop
scas
inc
lea
lcall
test
hlt
xchg
sub
ficomps
test
out
cld
outsb
int3
pop
xor
lds
aam
lcall
sbbl
je
pop
gs
mov
outsl
xchg
imul
cld
sbb
inc
bound
insb
or
cmp
mov
jg
mov
xor
adc
clc
pop
add
inc
cld
and
mov
push
ja
and
pop
adcb
sub
adc
adc
mov
jmp
lds
andps
cmp
pop
outsb
shll
mov
cmp
push
jae
dec
pop
les
mov
aad
shl
push
or
fs
cmpsb
add
jns
mov
in
adc
mov
jmp
icebp
adc
stos
into
enter
loopne
push
mov
or
lret
repnz
arpl
shrl
pop
cwtl
and
in
clc
sbb
fidivs
cmp
jge
imul
into
mov
nopl
jecxz
insb
and
out
sub
dec
push
ss
adc
jmp
lret
int
mov
fidivrl
stc
leave
push
jno
test
dec
dec
repnz
or
add
pop
or
jb
jnp
dec
int
fwait
xor
mov
inc
cwtl
lret
out
lret
hlt
enter
xchg
dec
cmpsb
dec
dec
sbb
lcall
xchg
lds
or
shll
sub
sbb
mov
mov
or
add
cmp
pop
je
push
data16
in
ret
sbb
hlt
jae
mov
test
sbb
cmc
jo
sub
xlat
pop
leave
pusha
mov
out
test
and
bound
inc
push
adc
sub
subl
push
or
mov
addps
mov
fwait
sti
push
lcall
push
cmpsl
jecxz
dec
mov
and
testl
jae
pop
das
and
popa
cmc
add
lods
lcall
jns
arpl
mov
inc
lcall
cli
clc
shll
sbb
test
lcall
and
xchg
cmp
mov
or
das
fwait
push
cmp
sbbb
sbb
gs
mov
aad
push
dec
push
dec
sbb
sbb
repnz
mov
incl
mov
in
dec
mov
xchg
repnz
divb
hlt
mov
mov
or
jno
mov
push
xchg
sahf
xchg
popf
imul
imul
pusha
idivl
adc
sahf
xchg
loope
lods
adc
xor
aam
mov
xchg
sub
in
sub
lcall
push
test
jmp
xchg
and
xchg
movsl
pushf
scas
fldt
dec
popf
cld
sarl
out
xor
into
dec
push
xor
into
in
dec
ljmp
xor
out
movsb
add
mov
mov
sbb
adc
mov
js
aam
inc
dec
loop
push
inc
sti
out
xchg
imul
or
fucomi
aaa
outsb
js
pop
stos
je
in
loope
out
outsl
aad
in
icebp
in
cltd
inc
shr
jmp
out
sub
in
jp
das
mov
pop
mov
xor
or
pop
mov
stc
jne
pop
lret
jns
xchg
outsb
gs
ret
in
add
repnz
mov
jl
je
gs
cltd
mov
adc
xchg
xchg
xchg
test
lcall
in
in
inc
dec
xor
mov
jge
aas
clc
mov
sbb
and
pop
jnp
cmp
push
notl
sub
rorl
insb
push
out
popf
xchg
sbbl
mov
mov
imul
xor
dec
cmc
shll
sahf
sub
add
mov
jne
sahf
scas
adc
cmp
loope
pushf
cmpsl
inc
inc
pop
dec
jns
mov
push
adc
jae
mov
jge
and
xor
mov
dec
in
mov
and
lods
hlt
popa
cli
in
flds
addb
dec
fmull
and
sbb
sub
testb
push
pop
scas
inc
fbld
lea
dec
shrb
cmpb
stos
add
scas
adc
mov
sbb
push
jbe
xchg
fwait
aad
cmp
inc
inc
loop
arpl
in
push
out
cmp
add
mov
adc
xor
test
xchg
jns
pop
jne
or
in
mov
or
cmp
xchg
test
negb
jae
inc
repnz
push
adc
adc
es
int3
fs
aad
adc
jg
call
sub
pop
loop
sub
jns
scas
ljmp
add
jge
loop
add
scas
mov
pop
push
push
push
mov
in
jbe
in
xchg
andl
ret
adc
test
shlb
jne
or
test
loope
adc
dec
loope
mov
cmp
mov
mov
nop
fistpll
iret
lret
xlat
pop
call
mov
fisubrs
addr16
pop
enter
mov
xlat
jbe
or
sahf
inc
imul
cwtl
sbb
adc
data16
push
popf
dec
cwtl
dec
push
dec
ficomps
stc
mov
add
push
cmc
mov
jecxz
jb
or
rclb
push
push
push
mov
push
pop
repnz
mov
div
lock
fmul
stos
xchg
in
arpl
mov
push
mov
lea
lret
pop
push
mov
cli
adc
cmpsl
jns
cltd
test
mov
push
cmp
les
sti
cmp
js
push
outsl
sbb
loopne
xchg
out
jle
or
lahf
jno
ret
or
ja
incl
push
mov
pusha
lods
inc
adc
pop
shlb
mov
jo
scas
mov
or
out
aad
add
ja
push
jecxz
flds
or
std
out
jl
cmpsb
jne
and
aam
mov
dec
ret
rep
test
fwait
int3
arpl
inc
mov
stos
psubsb
mov
sub
xchg
aaa
les
inc
and
insb
mov
std
dec
mov
push
sbb
push
ja
in
fidivrl
add
lret
dec
fimuls
mov
imul
aas
pop
ljmp
push
ret
mov
int3
jle
out
sbb
adc
insl
cmp
insb
int
test
sub
cmpsl
nop
inc
jge
jbe
stos
mov
mov
icebp
inc
mov
mov
stos
outsb
scas
clc
xor
mov
cli
fadd
ficompl
xchg
aas
sub
out
aam
push
cs
repz
divl
into
and
fsubl
insb
inc
mov
sbb
pop
jb
mov
jecxz
dec
pusha
mov
lock
test
xchg
cli
mov
or
xor
pop
xor
test
jge
jns
ja
int
add
jno
dec
lds
mov
mov
jecxz
cmp
jl
mov
scas
out
add
mov
loope
xchg
movb
jg
jl
call
into
dec
pusha
add
outsb
xchg
push
loope
inc
add
or
jle
push
icebp
pop
push
iretw
xchg
fdivl
push
loop
push
lret
and
icebp
mov
jge,pn
lret
sub
push
push
xchg
sbb
mov
loopne
mov
inc
mov
and
mov
inc
shrb
js
aad
enter
loopne
sbb
outsb
jl
push
repnz
inc
ja
inc
cli
sub
inc
cmp
leave
cmc
loop
pop
mov
aad
jno
dec
and
lret
std
aaa
cmp
outsl
dec
add
push
imul
int3
and
sub
mov
popf
jae
clc
sbb
fnstenv
sarb
outsl
jns
ljmp
cmc
adc
xor
dec
mov
test
push
out
ja
mov
mov
inc
fiaddl
or
add
add
mov
lock
cmp
fs
cmpsb
mov
aad
add
ja
ja
cli
shl
lea
and
mov
jmp
leave
sbb
dec
pop
insl
push
jno
adc
insb
xchg
out
cmc
cmp
xor
test
push
pop
lods
lds
aad
fldcw
mov
mov
js
sbb
add
out
scas
inc
mov
sbb
fimuls
out
daa
pop
pop
popa
mov
xor
and
nop
imul
ss
xor
fcoms
orb
popa
sub
and
pushf
jo
xchg
mov
cmc
gs
cmc
jge
mov
pop
sahf
jnp
inc
insl
cli
sbb
in
mov
int
lods
mov
ds
aaa
int
repnz
lds
mov
dec
aad
jns
jl
mov
enter
shlb
das
mov
fcompl
iret
sbb
add
aas
stos
xchg
jno
sbb
xchg
fldcw
and
cmp
sbbl
les
iret
cmc
cmp
mov
les
stos
sub
test
inc
push
aas
out
mov
push
ret
lret
push
jb
fcomp
jb
aaa
inc
sbb
mov
leave
loope
jae
aaa
and
dec
xchg
shl
mov
adc
pusha
insl
mov
xchg
dec
stos
je
sar
cvtps2pi
into
fidivl
enter
dec
loopne
aaa
out
inc
js
mov
in
adc
xchg
cmp
jecxz
sbb
jne
dec
pop
in
scas
pop
enter
cmp
in
sets
bound
mov
jb
in
sarl
test
cs
cmp
test
out
rcrl
repz
inc
sbb
mov
loop
aaa
xchg
imul
add
sub
mov
push
sarl
out
decl
xor
out
inc
sbb
int
imul
jp
mov
or
lea
idiv
inc
inc
xor
jne
pop
stos
rolb
movsb
lods
enter
outsb
add
push
lcall
jbe
fwait
jle
fidivl
subl
cltd
divl
dec
test
insl
dec
pop
push
aaa
push
or
add
xchg
loope
fldt
add
lods
inc
lret
jg
lret
nop
cwtl
xor
and
mov
dec
cwtl
and
outsl
jns
push
mov
fildl
push
adc
test
cmp
sub
xchg
cld
push
repz
aas
mov
xchg
xlat
pop
rolb
add
in
sub
adc
jae
imul
jg
mov
xchg
imul
adc
xchg
mov
data16
je
push
xor
fldenv
adc
pop
inc
arpl
pop
pop
or
xor
inc
repz
dec
repz
hlt
call
std
imul
xor
push
mov
push
out
push
je
adc
fs
gs
mov
pop
mov
or
pop
xchg
cld
xchg
fwait
daa
loopne
adcb
dec
jle
sbb
repz
pop
out
xchg
adc
push
dec
cli
mov
lods
ret
fadds
dec
pop
jecxz
loope
pusha
cmp
dec
cmpsl
outsb
sbb
adcl
fldt
cs
mov
jl
xchg
mov
mov
dec
mov
insb
or
flds
repz
adc
jae
int3
cltd
inc
loop
cmp
add
call
xlat
push
movsl
or
jmp
lahf
sub
lret
push
bound
push
shlb
jge
cmp
scas
jp
cmp
push
pop
xchg
mov
push
mov
xchg
xchg
sahf
out
inc
in
mov
imul
imul
dec
mov
popf
lcall
fmuls
sbb
mov
sbbl
fistps
sbb
inc
ds
push
or
les
or
and
mov
cld
jg
jecxz,pn
and
out
lods
fdivp
nop
pop
filds
arpl
nop
sbb
popf
cmp
sahf
pop
aad
inc
rol
mov
jl
sub
repz
out
cmp
inc
xor
rcll
mov
jp
sub
inc
daa
pop
cli
sbb
mov
push
mov
jno
inc
mov
xacquire
inc
pop
sbb
fwait
dec
cmp
cmp
adc
loope
adc
pop
adc
ret
addl
mov
lea
popa
test
in
mov
icebp
sbbl
cmp
or
repz
push
jno
imul
jmp
aaa
aas
shlb
mov
lahf
aam
testb
cmp
sbb
lds
sahf
int
mov
jo
insl
repnz
jno
pop
xchg
jnp
cmc
cld
and
ljmp
clc
and
adc
pop
xor
nop
fs
sbb
push
sarl
jl
adc
mov
cmp
orl
sub
aas
and
incb
clc
jno
ljmp
call
push
outsb
xor
nop
jbe
decb
hlt
notl
sbb
cmp
xchg
lcall
xchg
mov
jge
popf
cmp
aam
add
sahf
lods
sbb
rcrb
icebp
jl
mov
mov
or
add
pop
mov
mov
mov
xor
aas
into
loopne
add
push
push
or
fwait
arpl
pop
repnz
add
jmp
sahf
outsl
daa
rol
mov
xlat
xor
stos
popf
mov
in
mov
or
mov
dec
sahf
int3
xchg
fisttps
xchg
sub
jmp
mov
xchg
xor
cmp
push
dec
jecxz
dec
int3
xchg
insb
addr16
lea
movsl
ja,pt
in
das
xchg
jns
cltd
xchg
dec
pop
inc
fsubrs
nop
fnstenv
xchg
pop
ret
sub
add
cld
nop
dec
ljmp
ja
xor
mov
push
dec
mov
mov
call
cmp
pop
in
test
xchg
cmp
push
mov
xorl
mov
jg
cmp
xor
data16
jge
scas
jno
movsl
jnp
jns
lret
xchg
bound
movsl
xchg
pop
test
pop
ja
push
push
ds
movsl
mov
mov
inc
push
mov
inc
daa
jns
push
pop
dec
into
sub
repz
mov
mov
insl
cmc
pop
aaa
hlt
aas
pop
es
js
mov
lods
js
movb
clc
xchg
icebp
mov
xchg
push
out
cmp
cmp
dec
lds
enter
sbb
arpl
rclb
jnp
sbb
lods
mov
mov
lea
dec
pop
sub
repnz
clc
roll
adc
jl
dec
mov
in
jle
in
add
test
sub
mov
or
xchg
stos
je
test
dec
out
testb
daa
shl
rcrb
dec
cwtl
pop
addb
daa
or
or
das
outsl
cmp
notb
dec
xor
add
into
mov
fisttps
stos
xchg
pop
jae
mov
add
xor
cltd
stos
subb
mov
repz
sub
cmp
jecxz
les
mov
cmp
mov
inc
push
add
fdivrp
lcall
dec
je
negb
cmpsb
xchg
aad
cmp
sti
leave
dec
arpl
mov
aaa
cmp
testb
cmp
ds
mov
repnz
push
nop
lods
inc
inc
push
and
arpl
sub
adc
orl
jmp
in
or
mov
loopne
iret
inc
dec
xchg
fbstp
fildl
jge
pop
ss
sub
sbb
pop
inc
adc
imul
xchg
lock
lds
push
mov
jecxz
loopne
cld
inc
mov
pop
sahf
pop
enter
stc
and
aam
fisttpl
push
mov
mov
loope
sarb
mov
mov
inc
ret
sub
js
add
push
xchg
jge
sbb
lds
cli
loope
jl
xchg
jmp
movsl
and
and
stos
xchg
mov
cli
sbb
add
cmc
pop
adc
adc
dec
xor
mov
repz
xlat
push
insb
pop
mov
and
js
cmp
or
push
sub
push
pop
inc
paddsw
pop
in
lock
test
es
mov
adc
xor
dec
aaa
shrb
icebp
repz
mov
mov
aam
adc
inc
mov
out
inc
jp
mov
stos
out
adc
mov
shrl
andl
and
fcom
dec
sbb
in
mov
push
rcll
popf
fs
and
jno
in
clc
dec
add
shl
int3
adc
push
inc
dec
pop
stos
jne
ljmp
sub
add
stos
pusha
sub
xor
imul
dec
adc
inc
lock
xor
fwait
ds
xchg
mov
pop
sbb
dec
cli
inc
jg
nop
sbb
fsub
mov
jo
sub
push
jno
xchg
insl
jb
ret
mov
imul
out
cld
or
cmp
ljmp
fs
xlat
icebp
xchg
xchg
repnz
sub
push
push
aad
adc
xor
inc
scas
add
inc
push
add
bndstx
inc
stos
xchg
jmp
mov
jnp
cmc
add
add
mov
fs
cmpsb
xchg
icebp
loope
adc
loopne
pop
mov
lcall
lds
adc
ja
xor
and
or
std
dec
aad
pop
lret
pop
js
cmp
push
or
dec
pop
add
sbb
xchg
in
cmpsb
bound
add
push
bound
pop
cmp
mov
cmp
insl
jnp
jmp
repz
fmul
xchg
lret
xchg
and
imul
push
mov
fstl
aaa
sub
lods
pop
in
loop
mov
pop
pop
push
fstpl
aad
nop
cmpsb
ret
fbstp
mov
xchg
in
adc
xchg
icebp
inc
add
xor
or
fidivl
xor
cmp
jmp
jmp
enter
pop
insb
lea
jle
ret
mov
data16
push
push
xchg
test
loope
push
nop
and
mov
notl
xchg
pop
es
out
push
stos
dec
mov
adc
mov
jno
sub
fsts
test
ljmp
in
jne
sbb
js
loopne
test
push
fisubrl
enter
push
negl
call
ficoml
mov
addr16
cwtl
xor
mov
cmp
mov
imul
js
scas
and
testb
std
adc
cs
cmp
sarb
in
fistl
mov
ja
adc
cmc
xor
es
dec
pop
lret
fimuls
not
insb
sub
aad
outsl
test
jge
add
pop
popa
pushf
bound
adc
je
add
jle
pop
and
cwtl
inc
inc
xchg
loopne
mov
mov
int3
mov
add
mov
fdivrl
rcrl
push
mov
nop
in
ja
arpl
out
out
mov
lahf
inc
cltd
push
xlat
cmp
jmp
inc
loopne
cmp
push
pushf
xor
aas
mov
add
xor
lcall
movsl
jl
pop
pop
sahf
jae
stos
cmp
mov
enter
rcl
ret
test
inc
sbb
das
push
add
push
leave
inc
test
and
and
loope
mov
mov
add
movl
dec
sub
rcl
cmp
insb
insb
mull
aad
outsb
add
pop
mov
jg
sbb
sub
dec
pop
push
hlt
cmp
cmp
pop
jecxz
pop
xchg
add
test
ljmp
jno
mov
test
push
andl
pop
in
add
and
or
pop
fnstenv
xchg
imul
sbb
addr16
cmp
inc
pop
add
add
mov
lea
cmpl
cmpsl
lahf
fcomps
inc
dec
je
dec
xor
in
cmpl
movsb
test
rorb
jmp
sbb
jne
xchg
jb
dec
and
xchg
jmp
insl
cmc
mov
inc
test
dec
mov
iret
fildl
sbb
mov
or
xor
aas
and
popf
je
mov
sti
push
fs
dec
notl
shlb
sbb
call
inc
test
movsl
cmp
repnz
out
nop
out
dec
sbb
cmp
push
jbe
cwtl
daa
in
andl
aas
cltd
xchg
adc
lods
push
cltd
std
fnstsw
push
cmp
or
cmp
adcl
sbb
fmull
es
rcrl
xchg
mov
push
jno
xlat
repz
call
popa
in
mov
xchg
jl
int3
or
mov
test
sbbb
ret
lds
inc
fldl
out
scas
dec
std
xchg
test
adc
les
xor
xor
pop
pop
inc
pop
mov
out
addr16
mov
ret
mov
pop
rorb
xchg
jle
ret
jo
mov
out
jbe
xor
inc
lret
push
aas
dec
pop
cs
xchg
mull
std
in
mov
shll
xorb
test
clc
dec
mov
ljmp
pop
mov
or
jb
or
insl
and
xchg
inc
jecxz
mov
lock
inc
jb
lea
mov
aad
int3
in
jns
loope
rcl
jle
cli
mov
out
mov
jge
inc
mov
test
cwtl
push
icebp
mov
mov
cmp
mov
mov
sahf
xchg
lods
cmpsl
js
mov
sub
xchg
add
jbe
out
dec
adc
and
and
adc
add
loopne
aad
lods
imul
sbb
mov
int
xchg
adc
mov
call
loopne
inc
push
lcall
loopne
jecxz
out
pop
sbb
sbb
inc
cmc
in
or
adc
push
int3
cltd
and
mov
mov
clc
mov
rcrb
push
mov
mov
mov
and
movsb
xchg
inc
rol
jmp
int3
adcl
mov
sbb
ljmp
jae
adc
lds
xchg
xchg
outsb
adc
xor
lods
sahf
fstpt
movb
lret
es
shrl
xor
orb
loop
jg
imul
imul
or
pop
int
imul
fisubrl
das
cmp
push
cmpb
dec
xchg
sbb
movsl
iret
popw
adc
cmc
xchg
clc
push
dec
test
pop
sub
pop
into
pusha
sub
out
movsb
jnp
or
pop
dec
lds
jecxz
outsb
inc
dec
mov
cmp
andb
ss
sti
inc
insl
xchg
inc
push
dec
jb
call
add
subb
xchg
cli
ret
sub
insb
adc
into
fisubl
cmpsb
inc
ficoml
xchg
sbb
popf
pop
add
adc
and
popf
mov
cmpsb
ds
push
pushf
iret
popf
xor
scas
mov
push
data16
cmp
fsubrl
dec
mov
insb
pop
in
in
xor
inc
cmp
pop
scas
ja
push
das
adc
push
mov
bound
and
push
dec
push
outsl
jl
pop
jo
pop
shrb
imul
jae
shrl
imul
xor
jmp
stc
or
xchg
movsl
cmp
or
cwtl
sbbl
jo
push
dec
and
mov
outsl
adc
mov
outsl
jno
xchg
mov
clc
repnz
mov
jmp
xchg
popa
mov
test
xor
es
jl
out
roll
cmc
ds
lock
pop
pop
sahf
imull
loopne
inc
and
cmp
enter
pop
fadd
mov
mov
mov
or
push
cs
jno
xchg
mov
test
push
shll
pushf
cmp
into
and
xchg
hlt
pop
inc
cli
or
xor
jae
lods
inc
rcll
std
push
inc
fcompl
fidivl
inc
dec
fdivrs
fdiv
inc
aad
push
lret
mov
ret
imul
inc
nop
mov
or
out
add
push
pop
add
pop
jo
cli
dec
xchg
inc
adc
inc
inc
decl
leave
and
jg
jl
loop
cli
mov
imul
mov
fiaddl
cltd
ja
jo
xchg
js
cmp
sbbb
pop
sub
in
jns
xchg
xchg
call
movsb
fbstp
mov
ficoms
ret
outsb
or
mov
movsl
daa
out
jno
fs
lds
mov
test
jecxz
xor
xor
stos
or
sub
in
adc
ja
out
mov
testb
sbbl
rorl
mov
cmpsl
dec
call
mov
test
jmp
xchg
add
out
fdivrs
dec
ss
mov
shl
xchg
jno
xchg
out
xchg
mov
dec
dec
bound
adc
lea
jmp
sub
sahf
aas
add
in
cld
cmc
adc
pushf
xlat
repz
shr
or
cmp
cmp
inc
sahf
add
sahf
jo
mov
mov
xchg
lea
sti
aaa
lods
sbb
xlat
mov
repnz
fcoml
int3
int3
mov
xor
notb
jecxz
mov
mov
out
pop
add
push
shll
test
pop
popf
orb
ret
mov
push
xchg
cwtl
sahf
popa
or
mov
push
jae
lcall
movsl
mov
rorl
movsb
add
fs
ljmp
xor
mov
cmp
mov
mov
les
filds
cmp
test
cmc
pop
mov
add
mov
and
pop
jl
scas
loop
push
out
sbb
and
inc
or
xlat
ja
out
popa
imul
icebp
adc
push
pop
out
pop
add
xor
int
adc
sti
xor
int
insl
stc
orl
xchg
pop
push
xchg
cmp
mov
jge
ret
ror
movsl
add
jmp
out
xor
test
shrl
std
inc
test
mov
push
lea
xchg
jbe
iret
xor
lea
xchg
iret
std
lahf
ss
lcall
sub
ret
inc
fcmovnu
out
or
xchg
fldl
xorl
jp
xor
fildll
push
jecxz
mov
push
inc
sbb
pop
sbb
hlt
mov
out
es
outsb
push
pop
lea
sbb
pop
and
mov
dec
fistps
jecxz
mov
jmp
idivl
pop
push
push
push
mov
jl
dec
push
xlat
scas
pop
adc
in
mov
xchg
adc
cmp
imul
repz
add
xchg
jns
lahf
cmp
lcall
outsb
popa
hlt
mov
mov
pop
or
insb
scas
lcall
adc
mov
jl
dec
mov
add
cwtl
out
cmp
cmp
jno
dec
adc
sbb
dec
pop
cmp
and
out
inc
into
lahf
mov
ficoms
xor
in
xor
and
adc
sbb
jno
mov
fs
xchg
inc
xchg
jle
xor
or
shll
int
jg
jae
mov
push
mov
or
jp
and
sahf
ret
pop
sarb
loope
mov
call
cmp
popf
jbe
in
push
cmc
adc
or
jne
add
cmp
jb
push
fcmovbe
cmp
nop
sbb
lret
int3
or
repz
test
lods
push
adc
les
ljmp
int
sub
xchg
outsb
test
inc
cmp
repz
dec
mov
xlat
out
mov
sub
cld
pop
arpl
cli
cwtl
lods
daa
and
outsl
daa
mov
fdivrl
jg
pop
lods
jg
mov
loop
mov
sub
cmpl
pop
mov
adcl
jp
test
jb
cltd
negb
enter
dec
fcoms
add
cmp
int3
and
ret
js
mov
rorl
dec
mov
ret
sub
mov
sbb
lea
xchg
shrl
inc
cmp
inc
mov
lea
rorl
xchg
aaa
test
sbb
pop
add
lods
push
xor
das
lahf
in
scas
and
popa
loope
xchg
add
pop
scas
rclb
mov
cwtl
gs
repz
call
or
test
cltd
stos
je
push
lods
or
pop
outsb
jb
lahf
imul
or
mov
jb
push
jns
mov
pop
nop
repnz
ds
outsl
ret
push
lods
hlt
lea
andb
movsb
xor
jmp
repz
lret
xor
fists
jmp
or
or
inc
push
repz
xchg
sub
clc
push
cmpsb
stc
mov
in
push
les
pusha
cs
dec
jl
fldt
lcall
sub
or
scas
roll
shr
arpl
ja
pushf
or
sub
mov
add
adc
cld
into
pop
je
and
pop
cmp
cmp
sub
dec
fstpt
xor
outsl
cs
popa
dec
sarb
lods
sbb
lret
add
xorb
and
repnz
push
mov
pop
lcall
stc
mov
nop
inc
add
data16
xchg
xor
xor
inc
push
jmp
arpl
out
roll
dec
mov
fists
mov
and
sbb
shlb
sbb
lret
adc
add
push
mov
mov
adc
clc
dec
push
faddp
popa
sbb
in
adc
test
mov
xor
loopne,pt
jmp
xor
and
leave
or
cmp
or
jae
imull
pushfw
insb
jp
pushf
push
push
ljmp
or
lock
mov
xchg
popf
or
dec
out
stc
nop
fnsave
jae
inc
pushf
cli
js
adc
xchg
cltd
jbe
loopne
jno
inc
sub
mov
fcoml
fildl
aaa
add
add
dec
mov
lods
inc
popfw
ljmp
mov
add
xor
push
inc
or
ds
mov
jg
xchg
je
ds
push
adc
shll
gs
pop
mov
dec
movsb
adc
and
and
or
pushf
or
jle
repnz
imul
inc
mov
lock
rcr
jle
ret
pushf
dec
clc
stos
jp
ficompl
sbb
mov
add
out
or
icebp
insb
push
daa
and
sbb
hlt
jmp
pop
push
rcrb
mov
jno
cmp
push
xchg
rcrl
xor
inc
scas
jne
mov
fimuls
pop
adc
negl
test
xor
and
mov
push
adc
mov
or
and
fwait
outsl
ds
mov
adc
fdivs
in
lods
inc
sbb
sbb
lret
xor
lret
cli
fsub
jecxz
sbb
gs
cmp
lods
push
or
movsb
lods
rolb
loop
inc
jne
sti
and
icebp
lret
hlt
aas
mov
and
dec
imul
test
lret
lahf
rcrl
inc
xchg
out
sub
sbb
jecxz
xchg
push
fstl
jle
clc
and
imul
out
out
jbe
popl
insl
popa
ss
fs
lds
xor
xor
pop
orb
push
or
or
xchg
mov
mov
add
xchg
outsb
lret
lea
jmp
push
add
jg
inc
mov
lds
leave
fldenv
dec
jne
in
je
add
hlt
cmpl
rolb
adc
xchg
xorl
popa
mov
lds
or
mov
cmp
lcall
xor
add
subb
daa
test
test
repnz
jns
mov
leave
lea
mov
rcrl
xor
jg
pop
test
adc
add
xchg
mov
out
loope
cltd
push
adc
aad
aad
jns
mov
xchg
imul
ret
fidivrl
mov
fwait
xchg
int
into
pop
fldt
fs
dec
push
xor
insl
insl
cmp
cmpsl
and
outsb
and
dec
mov
fldt
nop
repnz
pop
enter
push
pop
nop
inc
arpl
jp
pusha
in
bound
shll
out
cs
iret
lock
xchg
lds
adc
lds
ds
ret
out
adc
cmp
mov
mov
mov
mov
adc
jne
les
insl
hlt
ret
imul
xor
jg
add
and
pop
aaa
inc
cmp
out
data16
push
mov
xor
movl
shl
repz
mov
adc
adc
sub
jno
sbb
add
xchg
les
xor
adc
inc
testb
jmp
lock
fisubl
and
jne
mov
je
adc
and
gs
mov
push
scas
mov
leave
jl
sub
xchg
xchg
xchg
rorl
pushf
inc
dec
sbb
fucomi
add
sbb
dec
add
repnz
int3
fsub
pop
into
push
aam
pusha
add
jp
rol
xchg
mov
fildl
sbbl
int
mov
aas
lret
lcall
jo
mov
fmull
push
cmc
sub
out
fadds
jnp
pop
stos
add
jno
outsb
rcrb
dec
repz
test
ficomps
lret
mov
cli
cmp
push
jg
loopne
dec
pop
jno
ror
jbe
sbb
cmp
outsl
sbbl
outsb
sti
insb
mov
sbb
rclb
adc
jecxz
inc
and
sti
cs
mov
dec
outsl
negb
sti
push
popf
lock
js
adc
xor
arpl
clc
shl
jge
aaa
jp
or
pop
fisubrs
jmp
outsb
dec
xor
mov
rcl
xlat
pusha
xchg
call
push
in
cmp
pop
inc
fmuls
sti
adc
shlb
dec
popa
movsb
inc
ds
lds
roll
cmpsl
pop
icebp
fdiv
mov
mov
sti
xchg
inc
and
popa
pop
ficomps
xchg
mov
imul
push
dec
imulb
psrld
dec
ja
or
push
pop
cmp
jno
push
loop
inc
fmulp
jl
sub
out
test
push
mov
pop
jle
int3
scas
jle
and
nop
xchg
imulb
sahf
xchg
dec
cwtl
ljmp
adc
iret
inc
add
xchg
icebp
pop
jbe
inc
mov
es
jl
inc
fcomps
flds
sbb
aas
aad
in
data16
dec
call
test
push
sbb
lret
stc
test
sub
pop
xor
cs
imul
cmp
adc
rcrb
test
insb
mov
mov
fnstsw
fidivs
je
jg
jbe
adc
repnz
xchg
lcall
popa
fsubrp
pop
inc
aad
inc
xor
mov
jae
addl
jae
cli
xchg
cli
bound
adc
mov
add
aad
push
gs
jmp
and
je
jle
or
jle
jecxz
jno
pop
rcrl
cwtl
test
f2xm1
clc
movsl
push
jmp
bound
hlt
mov
sti
in
cmp
sub
mov
pop
pmulhuw
or
daa
cltd
daa
cmp
xorb
add
jmp
subl
clc
adc
ljmp
pop
pop
mov
fs
int3
stc
into
mov
cmc
dec
cmp
addr16
jp
jl
stos
stos
cld
xchg
adc
fsubrs
fidivl
jle
and
test
xor
cmp
inc
int3
out
sub
push
xchg
dec
aam
sbb
and
cmpps
hlt
sub
imul
pushf
add
mov
xorl
fistpl
outsb
sbb
iret
jg
es
addr16
cltd
adc
pop
mov
push
int
push
lahf
test
jp
pop
and
mov
xchg
or
jae
push
ret
push
sarl
lock
int
mov
arpl
inc
ficoml
xlat
insl
cld
shl
out
dec
dec
add
insl
push
mov
mov
push
test
pop
adc
jo
adc
out
dec
arpl
jecxz
jmp
int3
adc
mov
in
aad
out
lahf
jecxz
icebp
in
cmp
out
das
out
or
fsubrs
sbb
sub
leave
shlb
inc
cwtl
dec
iret
mov
push
jno
inc
nop
inc
jns
pop
repz
leave
fs
std
test
pop
out
push
push
mov
xchg
inc
xlat
adc
sub
mov
cwtl
icebp
fwait
cwtl
or
cld
mov
add
or
adc
lods
fistpll
test
out
adc
repnz
pop
jno
mov
sbb
jbe
push
sbbb
into
pop
inc
sbb
push
popa
add
rorb
stos
js
xchg
sbb
mov
lret
fbstp
test
cmp
clc
lahf
jbe
pop
xor
sub
adc
fdivp
repnz
lods
mov
movsl
out
pop
push
repz
sub
cli
pusha
push
xorb
leave
rcrl
insl
cmp
inc
or
adc
es
out
fildl
imull
rorb
popa
adc
add
cli
mov
xor
xchg
inc
sbb
xor
rcrl
shll
inc
inc
push
jbe
or
aam
lods
push
fcoml
cli
inc
into
std
mov
jmp
xor
inc
add
mov
sbb
jle
insl
in
int
adc
lret
fsubs
inc
pop
imul
sub
enter
shlb
sub
add
mov
fadd
pop
or
xchg
fsub
jmp
gs
or
and
inc
pop
xchg
cmc
mov
sbb
jle
and
dec
in
lea
adc
sub
call
adc
pop
inc
mov
pop
call
leave
pop
push
ret
jmp
std
pusha
out
push
mov
scas
mov
xchg
movzbl
sub
push
mov
mov
push
dec
dec
and
mul
sub
mov
jecxz
mov
or
mov
sahf
test
sbb
mov
out
or
pop
mov
mov
scas
push
add
rcrl
aad
popa
mov
fiadds
gs
push
push
dec
shll
addb
dec
cmpsl
jmp
adc
sbb
xchg
sub
notb
push
or
hlt
icebp
jle
icebp
sahf
cwtl
rcrb
std
jno
adc
mov
out
sbb
jmp
and
push
cwtl
jne
lcall
dec
push
and
pop
pop
xchg
inc
pop
push
mov
push
sub
dec
xchg
push
mov
js
jg
outsl
je
push
aas
fmuls
xchg
fnstsw
fsubrs
out
jb
inc
sub
xor
imul
jecxz
and
cmp
pop
nop
into
and
mov
or
aad
jp
xor
adc
sti
loopne
inc
test
and
lds
mov
out
jae
pop
test
movb
push
aaa
out
and
xchg
in
out
imul
mov
cmp
add
ja
cs
sahf
mov
adc
sti
push
shld
fldenvs
pop
pushw
popf
push
mov
cmp
int3
push
mov
mov
xchg
sbb
or
nop
fistpl
into
xchg
in
sbb
mov
jns
shr
addr16
in
inc
mov
lock
fwait
inc
adc
stos
inc
ror
cwtl
imul
mov
shlb
rcrb
sbb
test
or
dec
pop
jmp
push
icebp
cmpsb
test
loopne
push
popf
les
or
andb
push
inc
mov
dec
adc
jmp
cltd
inc
pop
cmc
cmp
addb
repz
pop
enter
jl
mov
pusha
pop
and
xchg
xlat
fldl
and
sub
test
adc
xor
aad
pop
jae
ss
adc
mov
stos
mov
fwait
mov
jae
cmpsb
stos
sbb
notl
js
std
call
xchg
dec
mov
xchg
lret
jno
xchg
pusha
mov
dec
std
push
clc
mov
xor
cld
adc
pop
sbbb
lods
pop
mov
ljmp
cmp
push
adc
mov
nop
andb
jo
mov
fcom
lret
jmp
pop
and
pop
data16
xor
mov
lds
and
pop
hlt
aam
in
and
je
lahf
jmp
mov
pop
scas
xchg
lock
xchg
dec
js
mov
int
rcl
xor
push
mov
sbb
cmp
test
push
leave
jo
es
lock
stos
mov
cmp
jle
push
shrl
rcl
lds
and
adc
shll
pusha
enter
dec
test
push
test
cmc
xchg
scas
inc
leave
xlat
jg
movsl
inc
xor
loop
jge
mov
lock
xchg
idiv
ja
sub
cmp
rol
dec
cmp
sahf
pop
adc
xchg
xchg
sub
int3
out
or
push
jo
imul
lds
sbb
daa
or
mov
cwtl
bound
jge
mov
mov
in
test
clc
jg
cmp
nop
or
imul
lahf
inc
call
ljmp
in
jnp
fbstp
imul
add
fdivs
or
nop
test
fisubl
push
es
nop
mov
rcll
subb
mov
and
add
arpl
push
stos
xor
add
jns
nop
or
pop
jle
pop
in
cmp
add
mov
jns
out
popa
mov
sti
lods
cmp
fldenv
inc
sub
movsl
inc
enter
pop
dec
ss
mov
dec
outsb
inc
pusha
pushf
inc
pop
insb
dec
subl
in
mov
das
mov
pushf
iret
rcl
pop
or
fs
or
lahf
jo
xor
lcall
mov
lock
loop
cmp
mov
ja
inc
push
jg
mov
inc
mov
jae
cltd
pushf
test
les
xchg
sbb
sbb
mov
pusha
mov
loop
sub
add
lods
stos
add
cli
sub
xor
or
pushf
js
add
mov
inc
jno
xor
pusha
jp
in
xlat
and
pop
inc
fisttpll
add
in
jp
sti
in
subl
pop
outsb
lcall
jbe
or
adc
psrad
add
daa
hlt
movsl
arpl
or
dec
mov
pop
lret
xchg
push
push
lds
data16
outsb
inc
xchg
or
outsl
pushf
imul
jno
lods
add
repz
je
rorb
add
jb
xor
addr16
scas
orl
lods
mov
in
pop
hlt
dec
cmp
add
rorb
sbb
pop
test
push
push
int3
dec
loope
js
push
mov
push
mov
ret
icebp
rcrl
and
cmpsb
dec
ds
jbe
xchg
pop
xchg
xchg
sti
cltd
movsb
cmp
fiadds
sti
sbb
mov
popl
add
pop
loopne
xchg
jo
cmp
add
fsubrp
popa
cli
mov
mov
lods
pop
inc
out
movsb
jnp
fistps
add
mov
cwtl
out
xor
xor
sar
pop
test
outsl
nop
push
roll
xlat
pushf
cmc
lock
imul
mov
jnp
cmp
mov
lcall
xor
xor
clc
push
sbb
cmc
ja
and
cwtl
cmp
inc
add
cmpsb
jae
jb
mov
cli
and
pop
movsb
pop
mov
imul
push
dec
ja
fcompp
xchg
jnp
decl
inc
xor
xchg
mov
mov
dec
loopne
outsb
xchg
jns
call
push
je
ja
mov
jecxz
sub
aas
cmp
insl
adc
xchg
cmovl
iret
fcomi
or
sbb
dec
cmp
ficompl
imul
dec
add
ret
les
pop
or
xchg
mov
addr16
hlt
xchg
js
xchg
ret
xchg
jl
in
mov
frstor
xchg
stos
mov
jo
jle
sbbb
xchg
jbe
pop
inc
adc
jae
pop
fsubs
call
out
add
test
xlat
sbbb
pop
orl
jnp
push
insb
add
pmulhuw
mov
shll
add
shr
pop
in
icebp
adc
pusha
addr16
push
dec
bound
dec
fdivrs
jae
or
push
movsb
xchg
mov
xchg
sub
push
out
jns
sub
mov
or
out
add
pop
jns
pusha
icebp
pop
rorb
loope
add
psrld
insl
pop
mov
dec
pop
andl
inc
mov
jge
pop
scas
mov
xchg
xor
add
pop
adc
sbb
sbb
mov
nop
and
pop
js
inc
stos
cmp
mov
arpl
cmpsb
sbb
insl
insl
cld
jg
ds
ret
sub
inc
pop
cmp
sub
mov
sbbb
jnp
or
mov
ja
mov
addr16
iret
push
aad
js
add
sbbl
lahf
das
test
mov
or
lods
movsl
cmp
pop
push
or
mov
pop
aam
mov
mov
mulb
sub
stos
dec
idivb
jmp
lods
and
xor
jnp
repnz
lret
pushf
push
sbb
jmp
loopne
out
test
or
fmuls
mov
fsubrl
mov
mov
mov
xchg
mov
pop
mov
lock
mov
jo
shll
js
and
sbbb
iret
and
xor
inc
add
mov
test
pop
pusha
sahf
sub
sti
mov
mov
rcr
jg
cmp
dec
sbb
inc
mov
outsb
xor
adc
aaa
pop
ds
mov
inc
jle
dec
xchg
xchg
iret
add
jmp
xor
test
sbbl
mov
sbb
pusha
cli
pushf
test
decb
adc
sbb
sbb
push
and
out
xor
and
dec
nop
cwtl
stos
clc
aas
in
push
xchg
add
cli
mov
pop
loop
adcl
into
negl
sub
pop
or
mov
nop
or
pop
xor
testl
enter
adc
stos
mov
add
cmpsl
cmc
int3
adc
cmpb
cltd
and
cmp
push
xchg
out
pop
bound
adc
mov
movsb
adc
push
push
jne
mov
test
inc
fstl
fisubrl
dec
xor
jnp
xor
pusha
xor
addb
lret
arpl
les
sub
dec
aam
popa
sub
adc
aaa
out
insl
adc
dec
xchg
out
movsl
adc
and
add
int3
pop
lret
or
stos
or
jmp
sbb
enter
call
push
outsb
inc
iret
hlt
mov
sbb
pushf
subl
out
xchg
sahf
jl
jo
orb
cld
call
cltd
mov
int3
lret
fdiv
xor
push
jb
imul
or
jle
push
loop
push
mov
mov
or
sbb
jle
pop
es
jp
cmp
inc
fs
cmc
aaa
movsl
cmp
pop
pusha
pop
std
and
pop
mov
mov
dec
add
jns
xchg
pop
xlat
stos
xor
cmpsb
ljmp
xor
sbb
rcrl
dec
push
stc
scas
mov
out
enter
mov
fucomi
xorl
push
xchg
sub
pushf
sbb
dec
lahf
and
push
ds
jns
loopne
pop
xchg
inc
lret
push
add
dec
cmp
push
jle
mov
add
xchg
cld
xchg
ss
test
jge
lods
cmp
push
aad
es
mov
dec
cmc
les
lcall
pop
mov
mov
sbb
xchg
mov
pop
popa
xor
or
por
cwtl
inc
cmpsl
leave
or
jnp
sbb
xlat
mov
inc
push
mov
mov
mov
adc
adc
inc
push
sbb
pusha
pushl
mov
mov
xchg
sub
test
mov
cmp
int3
jg
shll
inc
out
popa
inc
fimull
lea
clc
dec
jae
stc
fildll
sbb
popa
lcall
push
mov
xchg
popa
ja
lods
sbbb
sbb
leave
in
sbb
push
push
add
leave
bound
xor
movsl
or
aaa
stc
cmpsb
jns
xchg
mov
cld
pop
mov
mov
push
mov
add
jg
and
jp
sahf
popf
repnz
in
mov
push
int
lahf
or
in
les
roll
dec
arpl
enter
pop
sub
lock
cli
xchg
scas
mov
insb
mov
push
jmp
sbb
lahf
loope
mov
xlat
cmovs
testb
pop
adc
ret
outsl
jnp
mov
int3
or
jnp
fisubrl
push
jmp
lret
cli
jge
ljmp
lods
inc
jge
addr16
fxch
cmpsl
mov
mov
or
lahf
aas
jmp
mov
lock
scas
mov
sti
pop
dec
push
nop
sbb
adc
cmp
add
inc
cmc
xchg
xchg
and
xor
insl
or
adc
inc
inc
lock
rclb
clc
and
lods
push
dec
dec
mov
insb
sahf
and
ret
mov
jae
in
stc
lcall
sbb
cmp
shl
fistl
test
jno
xor
pushf
shrb
cmp
jmp
ljmp
cli
outsb
sub
pop
fnstenv
fbld
pop
inc
aaa
xor
lret
in
pop
jmp
mov
or
inc
insb
sbb
int3
fisttps
sbb
mov
jle
addb
pop
js
mov
ja
pop
cs
jns
hlt
pop
mov
fisttpll
sub
jo
dec
pop
mov
mov
jecxz
es
xchg
lods
ljmp
fidivrl
mov
xchg
adc
mov
xchg
mov
add
jb
cmpsl
xchg
pop
inc
leave
xchg
jle
dec
stos
ja
lret
cmp
dec
dec
ret
xor
xor
test
cmp
jne
inc
testb
dec
mov
int
or
fwait
push
frstor
daa
dec
adc
shrl
inc
inc
sti
xor
scas
jle
push
test
jecxz
mov
loopne
lcall
mov
adc
popf
cli
and
push
stc
mov
repz
in
pop
mov
out
adc
pop
daa
jp
mov
bswap
orb
dec
rorb
cs
add
push
xlat
addl
or
cs
jo
fistpll
jne
in
cmpsl
sub
mov
pop
lcall
test
outsl
dec
gs
inc
mov
pop
sub
cs
das
xor
adc
cmp
lods
cmpsb
sbb
adc
mov
cli
stc
out
pop
in
mov
jnp
fcoms
ja
inc
fs
rcl
inc
adc
xchg
cld
xchg
nop
fnstcw
and
lret
xlat
push
and
arpl
sbb
mov
jmp
repz
pop
fisttps
aas
sarb
scas
jmp
incb
mov
stos
xor
cli
mov
icebp
js
aaa
mov
lcall
cmc
daa
mov
fs
pop
mov
and
pusha
push
and
jae
push
add
pop
sub
iret
add
add
sbb
dec
sbb
lds
addb
inc
mov
cmp
mov
pop
mov
and
jo
loop
out
mov
jns
push
mov
mov
mov
mov
test
pop
push
daa
mov
mov
mov
adc
cwtl
mov
cltd
cmpsl
dec
pop
xor
pusha
sub
stos
mov
cmp
sbb
std
or
es
lahf
nop
jns
les
test
mov
pop
orb
sub
sbb
pop
xor
jp
shll
xchg
loope
inc
sbb
xor
xor
jmp
jl
sub
adc
jbe
cmc
test
idiv
and
scas
shll
mov
pop
call
cltd
add
mov
test
addr16
andb
pop
repnz
or
sbb
aas
orl
or
and
dec
in
xchg
mov
rcll
xor
mov
ja
dec
mov
sub
rcll
add
fwait
mov
decb
cmpsb
out
add
pop
cmp
sahf
aas
mov
movsb
and
sbb
sub
mov
mov
pandn
ja
jmp
test
cli
aad
adc
pop
pop
inc
lods
mov
stos
orb
cmc
rorb
cld
pusha
test
pop
sub
xor
out
test
cmc
sub
sub
adc
push
mov
lea
shl
xchg
jmp
sbb
jecxz
adc
stc
inc
pop
jo
sub
dec
mov
rcl
sbb
lcall
mov
rorb
push
lods
shr
xlat
dec
sbb
dec
sub
dec
ds
fsubr
movsb
xchg
int
test
mov
dec
loopne
movsb
pushf
cmp
movsl
pop
mov
in
jne
jmp
int
xor
mov
inc
inc
flds
in
push
cmp
loop
pop
fwait
jmp
mov
imul
push
pop
cmp
and
out
push
jne
pop
mov
dec
adc
clc
sbb
xchg
icebp
sahf
shrl
sbb
cwtl
jns
or
pop
loope
ret
cmp
mov
dec
pop
xchg
jge
aam
sub
out
xlat
xchg
les
adcl
cmp
in
cmpsl
dec
int3
repnz
push
sub
and
test
cmp
xor
in
frstor
mov
xchg
mov
adc
in
push
or
fsubrs
inc
adc
pop
sbb
mov
scas
mov
lcall
cmp
sub
vpunpcklwd
insb
ja
adc
jmp
xor
cmp
mov
in
xor
sbbb
or
add
pop
sub
push
dec
mov
dec
sbb
or
nop
sbb
and
bound
adc
bound
xor
ja
xchg
loop
add
fnstenv
loop
loop
lods
xchg
mov
sarb
cld
faddl
aaa
cli
cmp
ja
test
in
or
mov
andb
je
adc
stos
fidivrl
and
cltd
jg
dec
jo
fstpl
shlb
cmpsl
push
dec
pop
ljmp
lods
repz
or
scas
sub
mov
fnstenv
out
cmpsl
fidivrl
call
cmp
inc
ret
outsb
cli
lea
xchg
lock
in
jno
xor
cmp
and
jno
jne
xor
cmpb
push
out
xchg
lret
out
xchg
and
fsts
stos
or
fdivl
mov
fistps
adc
inc
ret
testb
mov
arpl
xor
dec
pop
test
stc
lods
ret
cltd
cmp
mov
icebp
popa
out
rcrb
mov
jecxz
imul
fnstsw
pop
ffreep
push
imul
or
rclb
sub
cmc
inc
out
inc
xor
stos
and
mov
mov
ljmp
xor
sub
shrl
xchg
sbb
push
mov
clc
les
neg
push
int3
int
stos
cmp
mov
js
fdivrs
mov
push
in
jg
adc
in
adc
insb
fsubl
fsubr
sbb
shll
rorb
lock
adc
pop
or
sbb
jecxz
inc
call
fwait
mov
cmp
mov
pop
in
insl
aas
mov
bnd
sbb
dec
adc
lods
cmp
inc
and
stos
sub
out
inc
sahf
mov
movsl
mov
mov
adc
mov
in
cltd
test
stos
addr16
jl
jge
pop
fmuls
jg
sahf
sub
xchg
inc
iret
mov
lds
pop
mov
push
dec
out
subb
or
lods
cli
push
push
push
clc
shrb
negl
cmp
repz
mov
outsl
jle
out
lods
popf
sbb
xchg
jge
fidivrl
fwait
jo
xchg
pop
add
push
mov
add
lret
lock
repz
pop
xchg
mov
jb
pop
mov
in
lret
add
aaa
enter
adc
fs
cmpsl
outsl
cld
lea
jmp
xchg
mov
sbb
icebp
mov
dec
test
pushf
fldt
sbb
es
fdivrs
fdivrp
jo
cs
inc
inc
jno
iret
sbb
rol
lods
and
clflush
add
jns
in
scas
cli
sub
or
in
clc
cmpsl
xchg
nop
iret
mov
or
ja
push
sbb
mov
sti
fxch
mov
mov
ja
or
call
inc
xor
add
bndstx
ficoms
aaa
cmp
sbb
sbb
out
mov
loop
jle
das
adc
leave
fists
mov
divb
adc
into
ljmp
ret
fbstp
in
xchg
push
pop
xchg
fdivs
es
or
push
mov
sarb
lret
add
shl
int
pop
inc
leave
sarl
jne
pop
dec
and
sti
out
cltd
imul
cmpsl
outsb
push
sbb
dec
arpl
idiv
shll
fincstp
xchg
les
push
int
sbb
popa
lds
dec
jge
test
pop
jno
cmc
loop
jne
mov
xor
pop
mov
mov
lea
xor
push
out
xchg
in
mov
mov
adc
loopne
xor
inc
fsubrl
xor
int
imul
test
sbb
stos
and
cmp
mov
cmp
mov
sub
rorb
call
ret
pop
jmp
sub
push
inc
push
call
mov
loop
cmp
and
hlt
mov
push
imul
or
mov
mov
add
mov
push
xor
test
rol
push
lahf
or
xchg
loopne
int3
add
cwtl
cmpsl
push
mov
stos
mov
or
lods
popa
jle
push
data16
cmc
adc
idivb
push
xchg
sub
adc
scas
jecxz
push
in
fisttpl
lods
jmp
pop
fcomps
mov
jmp
cmp
icebp
pop
call
hlt
imull
and
xchg
gs
addr16
cmp
dec
pop
imul
xlat
test
addr16
hlt
sti
popa
cli
mov
lahf
push
sahf
cli
pop
out
add
jl
adc
mov
xchg
inc
xchg
or
popf
push
push
popa
out
push
jae
out
cwtl
xor
dec
testb
pop
loop
icebp
xor
sub
mov
ret
lock
cmp
sbb
jno
mov
lods
sbb
ret
ret
jns
or
stos
mov
aas
mov
lahf
ficoms
imul
mov
movq
jb
mov
test
hlt
adc
out
push
and
jb
rclb
push
mov
xchg
pop
add
das
mov
fsubs
cmp
test
mov
sub
add
bound
pusha
fcmovne
xor
js
xor
mov
cmp
or
in
fnstenv
je
mov
scas
lret
imul
pop
jnp
push
test
lret
ficoml
cli
pushf
lret
xor
jo
lods
mov
xor
xchg
jno
bound
stos
and
addr16
iret
lods
call
mov
xor
sti
and
ds
pusha
mov
enter
pop
aam
sbb
dec
test
sub
mov
pusha
xor
orb
cmpb
arpl
xchg
jge
adc
orb
mov
jo
jns
nop
adc
mov
xchg
scas
sbb
pusha
sahf
inc
je
popa
mov
test
add
test
movsl
outsl
in
add
lock
jae
cld
imul
iret
imul
mov
int
xchg
fs
pop
insb
or
xchg
add
mov
outsb
jp
arpl
push
jne,pn
into
aad
stos
pop
jecxz
dec
jecxz
jae
in
test
sbb
cmpsb
jl
sti
push
sbb
aad
mov
or
nop
mov
loopne
jbe
aad
jbe
adc
movsb
dec
shll
jne
notb
lret
mov
ss
cmpb
xor
test
pop
jb
or
sbb
push
in
ja
in
inc
andb
fs
das
cmp
mov
test
into
out
jle
pop
lea
jbe
sar
jne
test
add
xor
push
xor
mov
inc
test
adc
fs
xchg
scas
xor
pop
mov
dec
adc
xchg
icebp
in
fsub
jp
test
rclb
pop
dec
inc
dec
out
lea
rcl
jmp
test
jge
imul
sbb
mov
dec
xchg
cmpps
xor
pop
and
inc
int3
adcl
repnz
loopne
daa
mov
mov
aad
stos
inc
dec
push
icebp
hlt
or
scas
cmp
aaa
lret
mov
add
loope
adcb
jnp
call
mov
icebp
insb
mov
add
je
call
mov
data16
mov
xor
push
je
fwait
loop
outsl
or
out
and
xor
mov
movsl
aad
gs
push
mov
enter
inc
jmp
fprem1
loopne
jecxz
mov
add
cmpsb
pusha
xchg
add
cwtl
insb
sbbb
std
adc
jl
lock
test
xchg
mov
mov
mov
movsb
xor
subl
inc
jmp
aaa
inc
sbb
jne
push
mov
gs
jb
push
lret
sub
fbstp
cmp
int3
push
into
js
push
ljmp
adc
stc
popf
cltd
inc
out
les
fs
xchg
inc
dec
mov
andb
ret
fiadds
in
pop
xor
cs
sub
inc
push
or
stc
filds
xor
lret
and
iret
cmp
xor
lods
jmp
jns
popa
add
mov
movsb
jp
mov
test
xchg
xor
sub
xchg
cwtl
xor
jne
xchg
add
inc
icebp
and
and
cltd
addr16
inc
fdivl
popf
fsubrp
xchg
jg
shr
mov
xchg
flds
pop
movb
jge
cwtl
sub
test
in
outsb
add
jno
into
pop
sbb
in
divl
adc
mov
and
xchg
jbe
int
movsb
cmp
daa
inc
or
arpl
icebp
adc
and
adc
jmp
push
xor
scas
add
adc
dec
loop
lods
push
mov
mov
aas
mov
int3
xor
and
test
pop
or
mov
movsl
cli
push
xchg
int3
dec
inc
test
add
xchg
mov
ljmp
push
mov
jne,pn
or
sub
jge
mov
hlt
stos
sub
push
lds
scas
int
pop
pop
sub
inc
aaa
xor
shlb
lret
add
cmp
orl
push
push
idivl
sub
movl
mov
loop
out
xchg
xchg
lds
dec
mov
outsl
jmp
xchg
jo
pop
mov
add
int
cmp
imul
scas
fsubs
mov
cmc
xchg
loope
ja
add
sbb
outsl
jge
ljmp
insb
in
shrb
xchg
popf
cmp
fdivs
test
jg
in
pop
lret
cmp
sarl
jns
mov
and
lret
push
sbbb
xchg
ret
jbe
stc
or
sub
lret
addr16
test
adc
rcrb
mov
jecxz
push
mov
mov
stos
dec
jecxz
jb
pop
xor
push
cmp
or
cmp
or
push
pop
inc
push
or
out
adc
push
testl
xor
pop
pop
test
fstp
inc
push
adc
outsb
mov
daa
mov
mov
loop
lods
sti
fbstp
lock
fs
int
jmp
mov
test
fidivrl
push
cmp
daa
cmp
clc
cmpl
xor
pop
jne
and
cmp
pop
fildl
inc
fdivrs
sub
aad
int3
loope
into
in
jns
xor
inc
sahf
adc
fildll
aam
xchg
mov
adc
rorl
pop
xchg
imul
and
scas
mov
ss
out
mov
inc
mov
loopne
addr16
xchg
jae
in
jae
pushf
aad
dec
mov
and
push
test
xlat
mov
fstpl
bound
push
scas
xor
cltd
sub
lret
aad
test
imul
mov
scas
test
or
in
inc
lcall
cmpsb
adc
cmp
or
adc
js
mov
fs
or
scas
ljmp
out
cld
lods
iret
xor
adc
or
or
into
gs
adc
in
jg
add
push
movsl
fisubrl
mov
addl
xor
cmp
push
cmp
xchg
sbb
push
cmp
jbe
sti
arpl
fsubs
add
jmp
ret
lahf
xchg
out
jmp
outsb
mov
push
int
dec
fs
xchg
out
sti
int3
add
lods
inc
or
xor
hlt
dec
xchg
lock
mov
or
jae
or
inc
fiadds
xor
sbb
test
inc
mov
and
lds
mov
sbb
cmp
aad
sbb
or
lds
dec
aad
aam
mov
mov
add
and
data16
movsl
inc
mov
enter
push
jne
mov
leave
fld
ret
inc
lods
or
addl
dec
aas
push
out
jle
pusha
shlb
add
push
sub
and
insb
incl
ss
int
andb
add
xchg
or
pop
cmp
aaa
adc
xchg
mov
push
add
adc
xchg
xor
xchg
add
mov
cli
add
mov
sahf
mov
and
lcall
dec
in
sbbl
mov
push
sub
iret
adc
inc
sub
pop
cwtl
ds
out
arpl
out
and
out
lods
mov
pop
sub
inc
or
or
in
jns
pop
inc
fstpl
fs
aad
jb
popa
repnz
sbb
mov
or
repnz
cmpsb
imul
or
adc
iret
mov
orb
cmp
pop
insl
sbb
and
push
sbbb
loope
lret
and
js
in
inc
dec
je
pushf
rcrl
ljmp
push
fmul
aaa
sub
arpl
jp
cmp
ljmp
push
sub
pop
pop
sub
daa
push
mov
int3
dec
xor
je
fiadds
inc
and
jecxz
push
sub
cld
push
lret
data16
and
adc
stc
nop
mov
or
xor
out
xchg
pop
pop
mov
mov
cmp
mov
pop
cmp
hlt
add
ljmp
xchg
hlt
jle
xchg
jp
popf
dec
inc
push
jp
xchg
push
repnz
loop
pop
adc
push
pusha
in
or
mov
dec
xchg
jno
in
outsl
scas
fucomip
sub
mov
add
les
gs
cmp
cmp
add
cs
adc
lods
daa
notl
cmp
cmp
mov
pop
fsts
out
adc
imul
push
fbld
add
mov
cmpsb
fnstenv
dec
or
int3
movsl
pushf
aaa
rcr
fs
cmpsb
inc
jbe
dec
pop
dec
mov
lahf
lods
lcall
fst
pop
xor
xor
fstpt
arpl
out
sbb
and
shrb
dec
out
jle
mov
jnp
mov
push
cltd
xor
lea
fbstp
pop
mov
and
jl
or
shll
add
adc
xchg
ljmp
fs
jg
xchg
ljmp
adc
push
sub
mov
adc
mov
cmp
cmp
rolb
lcall
clc
dec
movsl
pop
fisubl
mov
aaa
mov
cmpsl
out
rcrb
jge
orl
push
test
xchg
fisttps
dec
push
lret
fiaddl
lock
mov
pop
repnz
cmp
orb
jns
push
sub
popl
or
jmp
pshufw
pusha
jno
push
cmpsl
ret
dec
cmp
add
mov
ja
adc
xchg
out
mov
and
adc
cmp
scas
jne
pop
mov
xor
int3
arpl
stos
xchg
negb
loope
cmp
mov
pop
out
or
push
push
sub
add
jg
insl
jge
sub
push
mov
lds
cli
ja
fbstp
lock
sbbl
jnp
movsl
addb
cmp
xchg
inc
xor
adcb
mov
std
sbb
pop
inc
jg
hlt
sub
jp
xchg
mov
add
icebp
in
js
jnp
push
jns
in
sbb
cwtl
nop
imul
insl
dec
fbstp
nop
xchg
popa
int3
fmul
lahf
mov
xchg
inc
fsubrl
cmp
pusha
lods
cltd
cmp
scas
std
lcall
lcall
mov
dec
xchg
out
divb
cmp
mov
push
movsb
je
mov
inc
and
enter
cmp
test
push
push
pushf
sub
loope
adc
sbb
mov
mov
sub
cmp
mov
mov
inc
xchg
dec
dec
adc
mov
dec
mov
mov
sarl
nop
pop
adc
push
push
xor
pop
cmc
sub
negl
pusha
aaa
idivb
mov
jne
imul
popa
mov
sbbb
pop
pop
adc
and
jo
and
push
out
ds
dec
jle
out
call
jb
lods
pop
mov
ja
jmp
pop
pop
and
add
mov
loop
sahf
cmp
out
push
xchg
or
mov
lret
pop
adc
add
cs
andps
iret
jbe
fs
inc
cwtl
lods
mov
xchg
xlat
outsb
leave
leave
out
bound
lcall
test
subl
inc
addr16
aam
dec
mov
sub
mov
arpl
imul
lods
lods
add
int
jmp
lock
out
sbbl
fwait
pop
mov
and
xchg
sbb
das
or
xchg
cmp
or
pop
pop
sbb
je
sub
aad
sbb
mov
cwtl
lds
jecxz
testl
mov
push
mov
and
mov
std
jecxz
xor
mov
dec
in
mov
sarl
adc
mov
test
sbbb
jp
jns
movsb
mov
lahf
pop
jle
fidivrl
lds
nop
pop
decb
dec
push
andl
mov
mov
mov
mov
jge
cmp
addr16
mov
mov
pop
xor
das
lock
mov
mov
xchg
scas
xor
fwait
xchg
ficoms
cmp
ja
je
addr16
xchg
jae
pop
enter
add
out
std
cltd
inc
sbb
and
cltd
inc
cmp
fildll
ds
test
adc
push
mov
pushf
clc
inc
xlat
sub
cmp
cltd
mov
mov
test
dec
in
cli
mov
arpl
insb
sub
sbb
fildl
adc
mov
aam
sub
jne
std
nop
jnp
inc
adc
hlt
inc
push
push
lods
cmpl
mov
push
out
xchg
inc
mov
loop
ja
fisubl
jmp
push
inc
mov
cmpsb
mov
daa
push
pop
aad
shll
jb
sbb
add
sub
mov
fidivrs
lock
lret
aad
jmp
daa
outsl
inc
xlat
loopne
or
stos
test
add
sbb
movsb
mov
cmp
ds
jecxz
lds
jmp
shrb
jge
in
stos
sub
mov
push
dec
dec
in
and
or
inc
cmp
push
inc
xor
decb
data16
ds
out
dec
lock
pop
lods
sbb
ja,pn
dec
popf
stc
rol
es
insl
fmull
js
and
mov
ljmp
pop
xchg
scas
sbb
push
sub
cmc
mov
inc
sub
xor
hlt
lea
cmp
mov
clc
nopl
pop
movsb
cmp
ds
faddl
jecxz
pushf
sahf
push
add
push
pop
or
mov
clc
jmp
dec
add
sbb
dec
mov
xor
and
lea
jb
ss
mov
mov
outsb
test
out
pop
pusha
out
dec
push
ss
mov
cmp
adc
insl
inc
sub
ret
mov
xchg
shlb
test
mov
arpl
xchg
and
mov
sub
mov
loope
ds
cli
fsubrs
pop
nop
jl
mov
divl
or
lea
dec
mov
cmpsl
cmc
mov
rcrb
sbb
adc
movsb
jge
pop
scas
jns
sub
pop
pop
stos
mov
je
mov
test
inc
cltd
std
cmpsl
in
adc
call
push
xchg
inc
adcl
mov
loope
fucomi
dec
jle
xchg
jo
lahf
ror
js
adc
mov
mov
add
jle
mov
sub
or
cmp
push
push
dec
mov
clc
dec
cmp
dec
pop
mov
jg
jnp
subl
stos
xchg
shl
call
cld
decl
xchg
push
leave
fs
or
fwait
mov
loope
pop
fwait
cltd
stos
imulb
shrl
int3
xor
lahf
mov
jno
lea
xor
push
push
fs
jl
inc
jmp
mov
hlt
inc
xor
jbe
mov
push
jecxz
int
outsl
rorl
imul
scas
sbb
orb
xchg
push
cld
imull
mov
lea
mov
fcmovb
imul
xchg
shrb
mov
lcall
aam
ljmp
movsb
test
pusha
cmp
test
jbe
insl
sbb
insb
scas
por
iret
repz
and
jno
jno
pop
test
and
in
repz
lret
mov
push
in
imul
ja
jl
pop
icebp
adc
mov
aaa
cmp
addl
mov
aam
popf
stos
fldt
ja
cmp
xor
sahf
mov
mov
or
mov
jo
cmp
fucomip
stos
push
mov
cmp
cmpsl
sub
aad
cmp
pusha
pop
movsb
xor
lea
sbb
jnp
jl
in
popa
ret
cmp
loopne
movsb
sti
or
int3
and
iret
sbb
jecxz
adc
inc
fdivr
fistps
xchg
pusha
mov
fildl
jo
je
push
xchg
pop
in
mov
andl
call
xor
out
lcall
cmc
mov
hlt
mov
adc
inc
je
std
xor
xchg
lods
push
add
add
and
pusha
sbb
lds
push
arpl
pop
fldenv
mov
negb
mov
xor
add
and
jle
mov
fs
sub
push
repnz
cmp
leave
fsubs
push
arpl
outsb
and
push
sub
dec
hlt
jge
push
es
fldenv
mov
imul
ljmp
stc
in
in
aad
mov
das
js
cltd
outsl
enter
dec
lcall
push
cmc
fwait
or
sbbb
scas
data16
loopne
loop
push
in
mov
lahf
ficompl
mov
pusha
and
jae
ja
loop
cmp
divl
test
push
add
fcmovnbe
push
or
mov
rcrl
arpl
arpl
pop
lret
adcl
add
xor
arpl
push
bound
xchg
add
or
xorb
add
sbbl
jecxz
dec
or
out
in
rcrb
std
jo
push
dec
fiaddl
stc
push
lahf
fs
mov
lcall
subl
or
jle
pop
fwait
push
test
neg
je
xchg
mov
xchg
mov
fisubrl
into
jb
hlt
xchg
push
lds
mov
outsl
mov
aam
fistl
pavgb
fldt
call
xchg
js
cwtl
outsl
cmp
stc
jns
movsb
aas
es
stc
or
stos
movb
mov
lea
adc
cmp
pusha
insb
xor
inc
mov
add
dec
insl
jge
cmp
pop
je
adc
and
addr16
test
cltd
and
mov
xchg
cmpb
sarb
and
lahf
jp
sbb
mov
outsb
das
jge
fisttpll
inc
pop
inc
test
cmp
pop
jnp
jo
jns
dec
imul
cli
call
dec
dec
push
push
jg
sub
testl
ds
lea
mov
xor
jmp
adcb
push
mov
mov
pop
mov
jne
int3
inc
lret
cmc
fmuls
sbb
mov
add
mov
xlat
dec
aad
adc
sbbl
mov
lahf
loopne
stos
xchg
xchg
repz
mov
mov
pop
sbb
jg
hlt
xor
mov
add
lods
xor
mov
int
xor
push
scas
push
xchg
call
aad
pushf
idivb
push
mov
inc
dec
and
ret
shrl
mov
stos
in
cmp
pushw
stos
mov
popf
add
jns
pop
test
test
xor
shlb
cmpb
sub
lock
fs
add
xchg
sbb
mov
jp
or
mov
xchg
outsb
add
cmc
cmp
or
shlb
push
sub
mov
cmpsb
adc
mov
inc
rorb
enter
data16
rol
pop
sti
jbe
pop
gs
fst
mov
xlat
mov
or
push
call
push
shll
or
mov
sub
or
cli
jg
ja
out
loopne
sbb
in
fxch
orb
push
sbb
test
pop
insb
sub
sbb
cmp
cmpsl
xor
mov
jae
inc
loop
dec
or
into
cmc
js
arpl
jne
lahf
cmp
lock
mov
jecxz
sbb
xchg
jns
loopne
mov
push
outsb
xchg
fiadds
cld
stos
jb
rol
ret
mov
cmpsb
cwtl
pop
sbb
jns
cmp
jbe
push
popl
mov
push
mov
iret
leave
and
push
ffree
imul
bound
inc
xor
inc
aad
pop
xor
mov
xor
jbe
loopne
sbb
or
push
test
pop
cmpsl
jmp
cmp
mull
int3
gs
sbbl
js
andl
cwtl
sbb
fldl
jne
ljmp
clc
jnp
mov
xlat
dec
mov
xchg
imulb
or
hlt
mov
push
loop,pt
adc
inc
sub
jo
fsubr
push
push
cwtl
pop
aam
test
mov
pop
mov
mov
loop
jmp
sbb
mov
adc
out
push
mov
arpl
sbb
mov
psraw
or
filds
mov
test
ds
out
sub
rclb
or
cli
sbb
mov
sarl
mov
pop
cmpsb
xor
adc
fnstsw
jge
adc
mov
repz
out
add
sub
pop
push
lods
adc
adc
xorl
aam
popf
sub
sub
fists
xor
push
adc
decl
cld
xchg
dec
and
push
das
or
xchg
add
jmp
push
xchg
popa
cmp
xchg
mov
mov
mov
xchg
push
push
out
mov
mov
mov
mov
mov
jns
dec
ret
mov
in
jle
aaa
cmp
ffreep
popf
out
les
jmp
mov
sbb
call
or
inc
sub
inc
cmp
push
cmc
mov
and
jnp
mov
arpl
inc
imul
and
add
pop
mov
jno
enter
nop
daa
jmp
sub
lahf
dec
dec
jecxz
jno
mov
and
pop
pop
icebp
test
out
lahf
push
inc
cli
pop
adc
jg
xlat
pop
cmpsb
dec
jb
cmp
pop
repz
loope
pop
fldcw
mov
fwait
mov
jno
cmp
jne
jp
mov
sbb
daa
frstor
scas
out
push
push
pop
loop
mov
sti
and
das
stos
push
fsubrl
jbe
add
push
jbe
outsl
jecxz
push
jl
push
icebp
popf
inc
lret
imul
push
push
or
outsb
pop
lds
int3
ficoms
lea
orl
adc
mov
dec
pop
loop
xchg
mov
jno
loope
mov
mov
jb
xchg
pop
cmp
aaa
jae
add
mov
fs
push
mov
push
jne
inc
rcrb
dec
out
jge
pop
decl
xlat
sub
push
dec
sarl
or
mov
jns
sarb
push
test
xchg
xor
popf
stc
xchg
jg
jns
adc
or
xchg
sbb
mov
pop
cmpsb
sbb
out
popa
leave
mov
mov
push
or
stos
ljmp
aam
iret
mov
rorl
jle
sub
push
adc
push
sbb
cwtl
sub
outsb
mov
cmpb
cmp
jb
pop
pushf
pop
dec
fwait
lods
or
pop
add
shlb
in
out
pusha
lret
pop
frstor
sbb
das
pop
in
mov
xor
xchg
cmc
jl
jae
cmp
fwait
add
sbb
adc
push
and
sahf
xchg
aam
xor
push
js
cmp
sbb
imul
cld
roll
stos
cwtl
or
test
fsubrs
scas
push
add
fnstenv
outsb
dec
dec
pop
pop
testl
in
cmp
in
push
mov
sbb
or
shll
sbb
or
pop
sahf
and
insl
dec
xor
imul
mov
or
xor
mov
bound
pop
daa
or
cltd
mov
cli
das
or
js
jg
insl
test
dec
or
cmp
mov
data16
push
or
jl
aad
out
shll
xchg
movsl
jmp
xchg
cmp
scas
aas
mov
repnz
or
decb
xchg
pop
sub
cmp
notb
cmp
ret
out
icebp
ljmp
pusha
dec
push
fwait
dec
pop
daa
mov
push
dec
pusha
cmp
inc
hlt
cld
call
xchg
stc
push
lock
sbb
outsb
xor
call
cmp
inc
and
xor
lods
jmp
adc
scas
sub
mov
test
aad
lock
mov
xor
and
shlb
jge
rclb
pop
dec
pop
cmpl
pop
xchg
movsl
aam
sub
mulb
or
push
pop
cmp
adc
jmp
fs
or
xor
jnp
or
loopne
jmp
lret
mov
cmp
test
or
sti
push
pop
cmpb
cmpsb
cmp
pop
sbb
aad
xor
aad
add
mov
or
stos
inc
andl
std
jge
shlb
dec
pop
outsl
iret
jae
mov
add
sbb
xchg
jmp
inc
test
add
fnstsw
xchg
mov
pop
shlb
pop
push
add
sub
lods
xor
pop
inc
or
repnz
cmp
xor
jbe
ljmp
add
pop
scas
xchg
pop
xor
test
std
dec
bound
or
fwait
push
mov
movsl
sbb
jbe
push
or
scas
pusha
xor
movl
fdivrl
inc
mov
bound
loope
sub
sbb
arpl
jno
cmp
std
inc
dec
cli
cmp
mov
call
cmpsl
sbb
mov
repnz
aas
in
sbb
jo
dec
xchg
mov
or
outsl
loop
out
or
jns
cmp
pop
add
inc
mov
inc
or
adc
add
jle
pop
sbb
pop
xchg
js
dec
loope
push
cmp
sub
mov
sub
mov
sbb
aaa
mov
lret
test
jp
sbb
xchg
adc
iret
add
out
cmpsl
in
dec
pop
push
fbstp
imul
lret
dec
movsl
idivl
seta
push
fsubr
adc
push
cmpsl
jp
je
js
ljmp
test
and
mov
es
add
adc
mov
int3
dec
dec
push
cmp
push
pusha
pop
jecxz
stc
push
mov
or
jmp
mov
pop
icebp
fwait
test
xor
fsubs
dec
mov
dec
das
or
jbe
stos
jne
mov
add
add
push
and
push
xchg
mov
lds
mov
inc
cmp
subb
pop
fadds
call
aad
into
xchg
jmp
push
mov
iret
mov
dec
lahf
fidivrs
adc
mov
imul
ret
cmp
and
mov
mov
ret
ror
xchg
outsb
jo
mov
out
cld
xchg
fcoml
pushf
inc
js
aad
out
push
cmc
faddl
sbbl
add
mulb
pop
mov
or
jb
jne
cmp
push
lahf
les
call
int
movsl
lret
cmp
je
xor
pop
adc
lea
pop
ljmp
and
scas
fisubrl
stos
repnz
and
mov
ljmp
push
test
adc
xor
mov
sbb
mov
jns
mov
je
cwtl
xor
lret
cltd
ret
jns
jle
jmp
mov
shrb
stc
xchg
fcomip
aaa
fiadds
mov
je
fidivl
push
and
sub
sbb
or
hlt
lods
pop
adc
or
inc
lods
sarb
inc
lcall
push
loop
push
mov
push
stc
nop
jnp
dec
xor
hlt
jne
and
cmc
clc
adc
pop
push
movsl
psadbw
aaa
xchg
popa
adc
movsb
out
cmovbe
jo
adc
in
inc
add
outsb
aas
and
ret
cmc
insb
rcl
subl
imul
fisubrl
mov
fisttpll
ret
or
leave
loopne
pusha
xchg
sub
push
out
mov
push
cltd
jno
movsb
pop
mov
in
xchg
adc
addr16
das
xor
arpl
aaa
outsb
or
scas
push
cmpsl
lock
cltd
adc
xchg
mov
mov
ret
repnz
mov
push
push
lcall
jbe
pop
test
orb
push
sbb
jp
add
inc
lods
cli
cwtl
aam
into
adc
xor
out
cwtl
rep
fcoml
push
scas
stos
stc
or
sbb
cmp
hlt
aad
mov
mov
adc
lods
cs
mov
sub
xor
addr16
jecxz
cs
out
cmp
hlt
in
dec
dec
adc
mov
jno
pop
addb
test
pop
loopne
sub
inc
mulb
enter
movsl
pop
enter
sub
add
fnstcw
mov
insb
dec
pop
filds
fwait
push
inc
and
mov
lods
xor
pushf
rcrl
push
popf
sbb
fsubl
push
add
lods
sub
std
mov
adcl
mov
cltd
add
mov
pop
xchg
pop
jae
out
sti
dec
rcrl
fs
dec
mov
dec
xor
dec
lock
inc
adc
and
ss
xchg
mov
sbb
aas
xor
jbe
dec
xor
push
out
mov
pop
insl
inc
daa
jbe
lret
sbbb
pop
sti
addb
inc
mov
mov
push
mov
shr
sub
cmp
xorb
daa
in
adc
adc
lods
call
mov
loopne
fsubr
sti
xor
fisubl
pop
jbe
push
aam
cmp
xchg
stos
test
lret
lods
icebp
adc
adc
jb
fnstsw
notl
fs
out
jnp
fsubl
jno
push
ret
add
xor
adc
or
cmp
xchg
cli
sub
fs
cld
adc
popf
mov
jmp
inc
sub
leave
iret
xor
xchg
jno
popa
lods
jbe
pop
xor
or
mov
push
pop
push
pushf
out
nop
sbb
pop
push
and
imul
into
mov
fistl
or
inc
push
mov
enter
lods
inc
or
dec
ss
push
push
cltd
test
test
cmp
pop
ficomps
cmp
cmpsl
cld
jae
push
inc
pushf
or
and
and
cs
mov
data16
addl
jb
sub
sbb
repz
orl
sub
push
lods
stos
cmp
pop
fwait
jp
xchg
inc
mov
mov
pushf
jl
fnstenv
sub
mov
stos
dec
mov
lds
or
insb
add
sbbb
mov
lahf
and
add
cwtl
push
in
or
in
mov
out
in
mov
leave
je
adc
inc
xchg
fldt
xlat
shlb
mov
jmp
xor
out
leave
push
or
or
xorb
mov
cmp
decb
sbbl
push
mov
xor
mull
sbb
ljmp
inc
xchg
xor
dec
pop
and
aas
mov
movsb
add
xor
loope
or
lds
decb
xchg
mov
push
add
pushf
fsubr
outsb
pusha
je
subl
ficoml
xor
stos
xlat
pop
add
movsb
mov
mov
ret
icebp
pop
cmp
push
inc
cltd
or
and
mov
inc
sahf
test
and
notb
shlb
test
lret
lcall
pusha
push
lret
loope
and
cmp
dec
push
dec
out
push
pop
jno
mov
or
add
push
test
loope
int
inc
adc
outsb
aad
aaa
mov
aad
xchg
ret
js
xor
cmpsb
bound
ret
dec
in
mov
inc
cmp
push
mov
imul
js
pop
sbb
push
sti
addr16
leave
add
push
push
test
bnd
stos
shrb
leave
loopne
jl
pop
scas
sub
adc
xchg
adc
push
inc
pusha
mov
pop
xchg
dec
in
xor
xchg
popa
and
add
ds
repz
out
mov
popa
mov
incl
cmp
outsw
sbbb
int
jae
loopne
cmpsl
xchg
stos
inc
enter
pushf
fs
xor
xor
imul
and
insb
push
push
mov
int3
jo
int
jp
or
stos
and
repz
or
adc
or
out
mov
orl
add
inc
ficoms
xor
jecxz
adc
aad
mov
loop
push
outsb
push
pop
pusha
jp
ret
mov
mov
mov
fsubrl
mov
scas
mov
imul
and
xor
cmc
xor
hlt
clc
out
mov
bound
cmp
mov
mov
push
adc
into
fisubrl
cmp
adc
mov
jne
adc
fldcw
mov
push
push
rolb
pushl
pop
movl
loope
sbb
cwtl
loopne
adc
or
scas
cmpsb
lock
cmp
cmp
rcr
test
mov
add
push
enter
or
mov
decl
mov
sub
jmp
mov
std
pop
inc
in
xor
out
pop
lret
test
gs
add
ds
jl
sbbb
pop
xchg
adc
mov
sbb
imul
mov
mov
mov
jbe
and
subb
cwtl
out
inc
ljmp
and
cmp
pop
jmp
iret
cmpsb
punpckhdq
mov
dec
mov
cmp
imul
push
mov
fnstenv
adc
sbb
mov
cmp
test
fwait
inc
sbb
mov
mov
mov
cmp
pop
dec
mov
mov
dec
jb
ror
outsl
push
fnstcw
pop
xor
and
jbe
cwtl
pop
cwtl
add
mov
xchg
push
iret
xchg
mov
mov
mov
and
into
jnp
or
outsb
rcr
ds
pusha
in
out
mov
jge
test
push
push
aaa
aad
out
push
lds
sub
lret
icebp
mov
jmp
cmp
mov
cmp
pop
lock
mov
movsl
fs
das
shlb
sub
std
cmp
jns
mov
ja
repz
dec
add
xorl
or
inc
fbld
iret
xchg
sub
dec
shl
mov
out
push
lahf
shlb
push
icebp
adcb
scas
sti
movsb
testb
push
inc
fwait
int
ja
fdiv
inc
movsl
arpl
pop
insb
mov
leave
mov
add
add
daa
leave
mov
pop
jge
test
mov
mov
or
or
leave
cmp
jb
aam
mov
xchg
jbe
mov
cmc
pop
cmc
inc
add
lret
and
xchg
int3
cmc
adc
jno
out
out
aad
cmp
jg
clc
sub
inc
test
lea
jg
dec
out
sti
and
je
js
mov
pop
push
pushf
addr16
pop
addr16
sahf
ljmp
mov
out
xchg
adc
adc
ficompl
cmp
arpl
out
dec
jmp
aad
xor
imul
cwtl
shrb
mov
clc
negl
cmp
pusha
jp
jo
mov
sarl
push
sarb
sub
push
adc
idivl
int3
and
in
iret
out
stos
mov
push
aaa
jge
fwait
sub
and
pop
out
lret
pop
stos
adc
jo
shlb
lret
lret
push
push
pop
xchg
sub
cld
cmovo
sbb
push
push
xchg
pcmpeqd
and
cmp
testb
adc
adc
sar
mov
lock
add
leave
xor
data16
push
push
popa
inc
mov
ljmp
lahf
or
fnstenv
lea
cmpsb
loope
jno
cld
pop
cmpsl
sub
mov
sbb
outsb
adc
jnp
adc
pop
jbe
adc
sbb
mov
jb
imul
sbb
mov
flds
decl
and
in
adc
push
shl
push
push
xor
test
xor
lret
lds
push
add
out
pop
pushf
sbb
les
lret
mov
push
mov
and
push
insl
jl
sbb
push
ja
aaa
push
xor
xlat
daa
cmp
mov
lds
adc
int
or
call
and
in
out
ds
cmpsl
jb
push
xlat
ret
or
into
push
mov
jnp
test
sbb
mov
cmpsb
gs
mov
sub
mov
mov
and
jmp
bound
cmp
pop
and
dec
lods
xchg
cmp
daa
or
scas
std
push
mov
ret
inc
sbb
dec
sbbl
xchg
or
mov
imul
jge
or
std
addr16
jno
mov
inc
sbbl
aaa
filds
out
push
sahf
adc
inc
lret
lahf
stos
xor
rcr
mov
je
repz
xchg
mov
pop
loop
dec
mov
dec
pop
cwtl
or
pop
fstl
insl
shrl
popf
push
pop
sbb
cmp
inc
cwtl
jns
cmpsl
ret
cmpsl
jp
js
xchg
inc
jle
adc
sbb
add
push
mov
lret
xchg
adc
mov
sti
lahf
rolb
xchg
aad
lock
push
ja
mov
in
cmp
fadds
sbbl
inc
jns
sahf
repz
push
dec
push
repz
roll
xchg
jae
push
jb
cltd
aaa
lea
xlat
daa
inc
jne,pt
push
cmp
aas
dec
push
mov
jge
mov
fimuls
movsl
mov
or
aad
rolb
daa
div
mov
dec
aad
cmp
jbe
adc
out
aas
sbb
repnz
push
jo
cmp
mov
movsl
pop
pop
jecxz
rorl
lea
mov
cmp
inc
lret
stos
push
test
mov
out
add
inc
sarb
cld
xor
imull
add
outsl
mov
movd
jl
pop
repz
call
loop
shrb
dec
fildl
jae
call
sbb
or
xchg
lcall
pop
out
outsl
mov
xchg
mov
inc
out
sub
test
sahf
xchg
pop
add
and
jo
sub
out
adc
push
mov
jmp
cwtl
sub
dec
ret
hlt
outsb
addr16
outsb
enter
fnstsw
adc
cltd
xor
scas
das
inc
arpl
mov
xor
shll
popf
dec
xlat
jp
mov
lods
mov
xchg
sbb
sub
push
ss
cmp
scas
aas
cli
mov
adc
sbb
nop
dec
test
or
shl
or
cli
pusha
xlat
mov
stc
movsb
fst
push
dec
lea
pop
xor
sarl
ljmp
and
xor
pop
loope
xor
push
mov
fimuls
mov
push
imul
cmc
out
std
out
fsubrl
mov
push
sbb
mov
test
fstpt
nop
sbb
jge
movsb
push
loop
mulb
sbb
inc
into
push
mov
mov
jns
inc
push
imul
sti
int3
sub
test
adc
in
pop
iret
jae
xor
bound
loope
cs
jl
mov
xor
mov
aas
mov
imul
gs
pop
and
xchg
add
mull
lcall
pop
fbstp
lret
pop
dec
pop
ja
sbb
ret
mov
call
in
arpl
xchg
ljmp
or
jns
mov
fsts
iret
sti
xchg
add
pop
xchg
fsubs
sub
dec
mov
lret
jge
xchg
xor
orb
push
mov
scas
jp
mov
jge
in
ss
ja
push
pop
rcrl
xchg
js
fcoms
and
arpl
out
stos
push
xchg
aaa
push
ja
push
fs
lahf
xchg
dec
in
cs
dec
cmp
dec
mov
lretw
push
push
imulb
dec
adc
fldt
sbb
push
push
arpl
inc
push
loopne
mov
outsl
test
sbb
cld
or
pop
lret
ret
dec
inc
pop
jge
inc
out
int3
xchg
push
push
fnsave
mov
and
shlb
cmpsb
pop
pop
add
inc
xchg
fs
cwtl
and
push
pop
or
stc
loopne
dec
mov
test
rol
test
daa
mov
mov
or
cli
ret
fs
sub
loopne
cmpsl
ds
icebp
cmp
ret
inc
or
jnp
cwtl
lcall
and
mov
test
hlt
mov
add
icebp
jecxz
fwait
xor
inc
adc
push
fnsave
lods
inc
rclb
daa
jmp
lods
xchg
xchg
push
in
mov
ja
jnp
dec
xchg
inc
test
jns
shlb
pushf
push
jmp
inc
dec
xchg
mov
dec
and
jbe
xchg
test
jno
cwtl
xchg
push
push
outsl
popa
mov
leave
in
jae
jp
xchg
fisubrl
xchg
loopne
int
inc
inc
mov
fmulp
sti
mov
push
mov
andl
out
cmp
inc
push
add
dec
jl
adcl
out
jle
ret
in
shrb
in
orb
int
lcall
je
mov
fsubrl
ret
into
fimuls
dec
pop
jo
and
rorl
repnz
jne
pop
mov
xchg
leave
test
push
call
xchg
in
add
fimuls
adc
pop
ljmp
in
insb
ljmp
mov
mov
jo
jg
adc
lock
bound
jle
and
rcrb
das
call
sbb
movsb
les
shlb
rcr
dec
xchg
repz
sbb
pop
out
xchg
rcrb
adc
adc
in
jae
sub
mov
inc
mul
lods
sub
sbb
scas
add
daa
movsl
daa
ficomps
faddl
sahf
mov
fldt
or
cmp
fstpt
sbb
scas
pop
ljmp
push
fwait
mov
imul
sbb
fbstp
jno
add
mov
aas
lret
aaa
mov
inc
mov
ret
cmpb
xchg
stos
mov
jae
insl
push
add
loopne
jg
cmp
lock
add
dec
push
fidivrl
scas
das
xor
fstl
repnz
mov
int
mov
inc
stos
outsl
mov
subl
bound
pusha
sbb
cld
mov
xor
push
or
fidivl
mov
stos
dec
popa
mov
sub
outsl
cwtl
push
test
xchg
hlt
popl
daa
add
cmp
jae
scas
dec
inc
in
lea
jae
sbb
adcb
pop
out
or
xlat
fisubrs
enter
mov
fistl
lret
les
pop
and
add
fidivrs
aaa
lret
inc
aad
mov
mov
mov
vpslld
jmp
int3
imul
idivb
fistpll
xchg
sub
mov
xlat
jl
sub
pop
popa
movsl
adc
in
bswap
fiadds
and
sbbl
rcll
sub
imul
loopne
jns
dec
stos
inc
adc
xchg
or
stc
dec
pop
rorb
xor
js
jo,pn
and
xchg
aas
xchg
sbb
pop
push
push
stos
jmp
push
ljmp
icebp
enter
into
inc
and
scas
lods
sub
or
rcrl
xchg
pop
xchg
out
hlt
negb
in
pop
ret
mov
add
imul
pop
popa
mov
ret
xchg
out
lcall
pushf
ljmp
or
xchg
aam
push
cmc
mov
sbb
push
or
mov
test
dec
adc
xchg
and
dec
popa
mov
adc
enter
ficomps
mov
test
std
outsl
incb
daa
or
pop
cmp
xor
mov
mov
cwtl
cmpsl
imull
xor
jp
sbb
mov
test
inc
jle
in
data16
pop
inc
cmp
cli
sub
pop
sub
push
orl
pop
sub
xchg
je
in
dec
mov
jg
sub
cmp
out
test
test
xor
inc
jbe
cltd
stos
inc
stos
fdivrl
push
fcom
out
adc
pop
repnz
invd
jne
dec
sub
in
adc
push
icebp
or
push
mov
jo
in
mov
lret
into
jp
sahf
mov
push
pop
fdivrl
ja
cmc
add
lret
aad
in
sub
outsb
jmp
dec
cmpxchg
mov
scas
pop
dec
in
lret
shll
and
lock
xchg
jmp
sub
or
popf
andl
outsb
call
les
sub
cmp
loop
inc
add
mov
xlat
sub
cmpsl
cmp
lret
pushf
das
stos
adc
popa
bound
das
fs
and
jge
dec
bndstx
mov
jmp
rclb
imul
in
popf
xchg
vmovdqu
adc
test
xor
cmpsl
add
scas
fcoml
and
sbb
dec
subl
es
inc
push
lock
cmp
adc
lret
sarb
cmpb
mov
pop
sub
add
sbb
and
sub
push
ljmp
inc
mov
mov
or
mov
stos
push
pusha
imul
sbb
or
mov
push
push
popl
cld
cli
sbb
movsb
mov
js
mov
mov
jmp
iret
data16
and
push
nop
or
movsb
in
test
loop
and
mov
xchg
or
scas
xchg
dec
sbb
outsb
cmpsl
dec
ret
xchg
es
fs
ljmp
popf
adc
xor
bound
dec
push
mov
xlat
jmp
insl
adc
push
and
jg
xchg
mov
sub
cmpsl
fdivrl
mov
in
cs
mov
ljmp
ficomps
pop
mov
jns
scas
cli
xchg
subl
cmp
sbb
xchg
mov
pop
ja
test
mov
fisttpll
or
scas
fwait
scas
addb
jp
fidivs
lahf
loopne
in
mov
daa
mov
mov
xchg
adc
sbb
inc
adc
pushf
xor
ss
addb
or
in
daa
inc
xor
mov
push
ds
adc
and
or
pop
sub
push
push
and
divb
mov
and
das
notl
adc
mov
fwait
jb
test
jno
cmpsl
stc
nop
aad
xchg
sub
scas
stos
dec
dec
mov
cmp
lret
movsl
fldl
push
cmpsb
lods
mov
adcb
out
rcrl
mov
mov
or
sub
sub
mov
pop
aas
dec
jecxz
ret
imul
add
fimull
pop
xor
in
test
in
dec
pop
adc
or
hlt
mov
xor
insl
mov
lahf
mov
push
or
or
shr
or
idivb
jb
int3
dec
nop
jmp
in
inc
loope
mov
jmp
sub
cmp
dec
pop
lret
jns
ret
inc
xchg
sub
mov
es
cmpsb
cwtl
push
mov
pusha
mov
pop
jp
mov
pop
xlat
and
dec
pop
push
ljmp
push
cmp
adc
lret
mov
mov
sbb
mov
cmp
rolb
add
inc
ja
cmpsl
push
scas
test
iret
jecxz
mov
scas
inc
popf
ror
daa
add
int
lahf
in
mov
mov
pop
jecxz
ds
jae
aaa
mov
dec
mov
lods
add
fcmovne
inc
or
orl
xor
popa
in
cmp
mov
mov
dec
jne
add
shrb
adc
push
xor
js
outsb
jecxz
or
cmp
out
fidivl
inc
std
or
repnz
daa
mov
sbb
or
jo
adc
movsb
dec
jmp
popl
cmpsb
push
sbb
dec
xor
sbb
jecxz,pt
bound
push
cmp
adc
outsb
ss
ds
aad
jp
sbb
jp
in
scas
adc
push
ret
popf
sbb
jne
imul
repz
adc
sbb
fiaddl
imul
sbb
outsb
lea
ret
sub
loope
int
jo
out
jmp
aam
push
mov
inc
fwait
lods
pop
lea
shrl
rcrl
mov
jo
pop
adc
dec
or
cmpsb
push
rcl
push
js
xor
xor
arpl
xchg
pop
cmp
jae
lahf
pop
push
or
stos
mov
stos
push
xchg
stc
cmp
and
imul
das
xor
daa
loop
xchg
and
adc
loope
xlat
mov
dec
movsb
imul
xor
inc
mov
outsb
frstor
push
into
sbb
or
cmp
into
and
mov
or
bound
testl
push
dec
popa
pop
ficompl
dec
fnstenv
cwtl
test
push
in
inc
mov
mov
push
and
les
lods
mov
xchg
js
out
test
mov
repz
outsb
jns
cltd
sub
pop
fisubrl
outsl
stos
hlt
fistps
adc
dec
test
or
pop
mov
ljmp
push
aas
ficompl
popa
lea
sbb
pushf
mov
jnp
xor
std
inc
jp
pushf
xchg
jmp
xchg
inc
sub
inc
imul
sub
mov
lods
sbb
pusha
shl
ret
mov
jg
and
loop
pop
out
push
sbb
sbb
lea
xchg
cmp
sbb
xlat
mov
add
cs
pop
mov
sbb
hlt
cmp
push
cmp
sub
pushf
xor
loop
ljmp
fstpt
negl
out
mov
sbb
cmp
xchg
cmpsl
aam
fdiv
gs
adc
pop
or
jg
leave
sub
inc
mov
sbb
nop
into
sahf
aam
mov
in
mov
stc
or
aam
xchg
cli
inc
aam
jbe
pushf
test
xchg
repz
sbb
jl
out
fwait
repz
sbb
ret
xor
adcb
int
stc
ljmp
repz
jp
xor
clc
pop
arpl
loop
ftst
clc
cmpsl
pop
jae
or
adc
mov
jnp
sub
inc
pushf
xchg
add
xchg
mov
push
fildll
sbb
testb
cld
or
add
mov
push
push
enter
repnz
push
fwait
push
xor
sub
xchg
popf
push
adc
stc
arpl
popf
adc
call
rcl
add
and
aam
mov
mov
push
xor
sub
jne
or
mov
enter
sarb
popl
sub
sti
cmp
gs
inc
dec
lahf
mov
inc
mov
mov
int3
ficoms
mov
negb
movsb
mov
movsb
adc
test
xchg
jp
js
shr
push
scas
inc
subb
push
nop
iret
lods
mov
mov
outsl
push
add
sub
add
pop
bound
cltd
ja
je
push
fdivs
pop
adc
enter
sub
xor
xor
xchg
jle
adc
xchg
scas
mov
adc
push
les
lods
cs
push
out
scas
lds
cmp
popf
orb
insl
jl
and
out
cmpsb
hlt
pop
loopne
aam
lods
ljmp
divb
add
mov
pop
and
sbb
mov
xchg
jb
cmc
inc
out
and
gs
xlat
inc
gs
jge
push
out
repnz
mov
fadds
js
cmpsl
pop
pop
lods
xchg
inc
fisubrs
jl
icebp
scas
iret
popf
fucomi
cmpsb
stos
lods
mov
lds
sbbb
rcl
fcoms
adc
dec
sbbb
pop
lahf
mov
adc
add
and
jle
inc
int
add
int
mov
mov
sti
pop
and
cmp
aad
cmpsl
rcrb
lret
cmpsb
xchg
imul
jbe
aad
cld
and
shrb
addl
jne
cwtl
int
mov
fisubs
test
jmp
out
in
jb
cmp
inc
jne
push
pop
call
lds
jle
mov
mov
adc
dec
gs
adc
lea
aam
and
lock
lret
icebp
shlb
pop
pop
daa
dec
out
test
cmp
fsubrs
dec
and
lret
xor
out
mov
cli
inc
shll
xor
testb
call
mov
push
fistpll
loope
clc
cltd
test
add
dec
adc
loope
push
inc
cs
push
cmp
jmp
pop
out
jae
out
jmp
cmpl
mov
or
mov
stos
sbbb
xor
shll
out
pushw
push
mov
mov
jmp
jb
or
mov
mov
mov
scas
jge
dec
mov
mov
stc
and
aad
and
orb
fs
fbstp
mov
dec
ficomps
cmpsl
sti
inc
jmp
clc
or
out
push
push
adc
pop
pushl
es
dec
mov
adc
sub
pop
lret
add
fmull
pop
push
inc
adc
pop
add
pop
aaa
cli
jne
icebp
inc
inc
movsb
push
fstl
aas
test
aas
pusha
repnz
jbe
rol
xchg
push
and
js
pop
fcomps
xchg
dec
mov
jecxz
fmull
add
nop
pop
push
sahf
clc
loopne
mov
push
xor
dec
in
jp
aam
adc
mov
ret
mov
xlat
inc
inc
fstpl
mov
pop
shlb
orb
addr16
push
inc
cmp
popa
dec
and
in
sub
inc
sahf
out
jb
and
and
inc
testb
loopne
dec
push
std
mov
pop
jno
lods
mov
popf
sub
inc
fld1
jbe
inc
sbb
fimull
sahf
data16
movsb
pop
dec
movsb
test
mov
jbe
loopne
and
sub
xchg
mov
jno
ljmp
lea
lds
ret
or
sbb
jo
or
and
dec
jbe
mov
jbe
enter
jae
push
sbb
and
hlt
outsb
push
sbb
and
push
arpl
insb
outsl
daa
and
jge
cbtw
das
cwtl
add
idivb
and
stos
xor
sbb
shrb
xorb
xchg
stc
je
popa
rclb
fists
pop
xor
je
xchg
add
xchg
rcll
cld
mov
in
xor
push
cmpsl
sub
lcall
out
in
in
xor
xchg
mov
mov
jecxz
and
test
inc
std
mov
jl
out
outsb
sahf
test
mov
pop
push
mov
mov
push
mov
add
jno
pop
shrl
sbb
hlt
mov
or
jge
das
in
xchg
mov
adc
adc
xchg
dec
test
sbb
pop
jge
es
fdivrl
test
push
aas
mov
movl
pop
mov
mov
pusha
xor
data16
lcall
pop
mov
pop
dec
mov
icebp
popf
ds
cmpsl
shlb
fsubs
inc
ds
inc
out
jmpw
mov
jne
sarb
mov
rcl
and
movb
test
int
rolb
nop
insb
int3
out
gs
mov
scas
push
daa
push
scas
and
sub
out
lods
or
sbb
jmp
movsb
cmp
mov
call
cmc
in
jns
int
mov
or
orb
in
mov
pop
les
lret
or
mov
in
and
add
popw
pop
push
mov
lret
and
cmp
out
shr
sti
sbb
adc
nop
daa
stos
or
mov
and
cs
mov
adc
push
push
cmp
cltd
sub
or
pop
icebp
lret
fwait
or
sti
in
js
stc
loopne
lods
leave
or
jae
sbb
or
dec
inc
jb
ja
pop
adc
adc
movl
xor
fldt
ret
popa
out
sub
shrl
sbb
sub
loop
or
sbb
daa
inc
imul
ja
cmp
cmp
mov
inc
cmp
subl
negl
pop
pop
mov
decb
lods
in
sub
dec
int
aas
mov
stos
loope
xchg
add
pop
test
xor
mov
js
xor
out
xchg
movsb
stc
dec
pop
mov
inc
sarb
mov
sub
pop
pop
scas
cli
xchg
and
xchg
push
lcall
sub
test
fmulp
mov
pop
mov
sub
adc
loopne
inc
push
sub
jnp
cmp
jp
dec
dec
cmp
fidivrl
pop
mov
sbb
sbb
cmpsb
or
dec
cmp
jnp
and
push
fsubs
sub
mov
push
pusha
or
aas
movsb
cmp
xchg
stos
push
lcall
enter
movsb
mov
mov
push
sub
leave
bound
and
xchg
enter
add
xor
mov
int
daa
adc
test
aad
mov
hlt
and
fstl
aam
je
push
or
shr
fnsave
movsb
mov
mov
je
std
lret
dec
dec
xor
push
pop
sub
push
xor
test
and
sbb
testl
sbb
mov
into
cmp
lods
imul
mov
push
lret
dec
iret
lds
loope
mov
xchg
pop
rclb
dec
and
dec
pop
ss
jmp
out
orb
mov
or
leave
and
int3
fld
adc
mov
and
mov
fiaddl
sbb
int3
fadd
data16
bound
sbb
adc
seto
push
repz
adc
cmpsl
mov
adc
sub
stos
jmp
hlt
adc
xor
jg
test
xchg
in
psubsb
orl
inc
xchg
cs
fstpl
mov
push
and
cmc
lds
gs
push
pop
popa
adc
mov
jmp
lods
cmp
test
mov
test
movsl
movsb
ljmp
mov
dec
jo
iret
aad
cltd
icebp
movsl
inc
and
pop
push
dec
loope
bnd
adc
and
imul
xorb
out
insb
xor
shl
lea
arpl
lret
adc
aad
ja
mov
pusha
or
lea
sbb
gs
int
je
inc
in
xorl
mov
xchg
addl
popa
pop
adc
pop
inc
and
mov
es
rcll
subl
push
sti
in
in
mov
or
addb
ds
cmc
pop
out
or
inc
outsb
or
push
out
nop
cvtps2pi
sub
dec
loop
fidivl
lret
bound
mov
mov
icebp
or
pop
push
outsl
aas
clc
je
fcompl
and
js
mov
or
std
mov
or
into
cwtl
pushf
scas
leave
out
aad
xchg
jp
pop
aas
mov
gs
lfence
and
out
mov
in
xchg
aas
mov
ret
pop
and
roll
idiv
mov
sbbb
repnz
pushf
and
test
ds
pushf
mov
jnp
jns
out
pushf
sub
add
iret
movl
pop
in
jmp
int
inc
js
lcall
jl
and
xchg
sub
enter
mov
xor
lock
scas
gs
mov
push
mov
sub
cli
and
pop
scas
iret
push
andl
xchg
pop
lea
sub
js
cld
xchg
setg
cmp
clc
push
nop
and
mov
imul
ret
xor
xchg
cmp
arpl
ret
in
test
push
pop
test
repz
fwait
sub
adc
dec
out
testl
out
jne
and
and
inc
mov
xor
sub
mov
mov
xchg
push
push
mov
inc
movl
pop
cmp
lea
jne
scas
rol
test
and
mov
ret
pop
pop
mov
les
mov
push
mov
fs
iret
cmp
add
xchg
ja
push
sahf
jmp
loopne
cmp
sarl
or
lods
faddl
imul
decl
lods
loop
test
je
mov
mov
iret
dec
loope
push
das
addr16
jecxz
xchg
sahf
lods
pop
mov
mov
sahf
or
aam
and
jp
fs
imulb
lods
test
jbe
add
into
stos
out
cld
jecxz
imul
shrl
jbe
dec
cltd
or
cld
fldenv
mov
shrl
lret
lds
mov
ret
jnp
xor
sahf
dec
loopne
dec
mov
out
test
cmp
mov
dec
sub
push
out
cmpsl
inc
sbb
in
xchg
shrb
mov
inc
icebp
xchg
cmp
imulb
hlt
sub
dec
jae
jb
push
mov
jbe
jg
or
cmp
in
xor
int3
bound
mov
fsub
js
mov
mov
addb
in
add
out
in
mov
ret
pop
cwtl
pop
xchg
adcb
cmp
mov
pop
mov
mov
cmp
or
sbb
sub
cmp
fs
in
jns
jg
lret
push
mov
cmp
and
es
lahf
xchg
pop
cmp
push
pop
sbb
mov
clc
and
push
lods
test
mov
in
adcb
pop
jnp
jns
stos
cmp
sbb
cltd
leave
xchg
lret
fbstp
fisubrs
sbb
lahf
dec
aam
je
jae
outsb
add
mov
add
es
outsl
adc
dec
mov
add
sub
mov
and
adc
adc
out
xor
in
test
mov
daa
and
daa
xchg
lds
mov
xlat
jnp
cs
sbb
push
inc
fsqrt
xchg
fsubrs
sbb
lret
or
fildll
cltd
xchg
int
enter
xchg
out
int3
lret
sahf
mov
xor
or
cmpsl
clc
fstps
jb
lds
in
insb
add
dec
jbe
xor
aaa
out
sub
adc
adc
xor
in
andl
jg
fwait
xor
outsl
cmp
in
jecxz
xchg
cmp
push
js
ja
mov
ret
jge
imul
jno
push
xlat
pusha
or
jns
pop
outsl
rcrb
mov
clc
jg
cmp
imul
ja
or
sarb
or
adcb
std
jnp
mov
mov
add
pop
decb
jb
adc
shrl
mov
jae
outsl
out
or
lea
sub
push
imul
dec
xchg
stc
jae
in
sbb
sti
push
mov
popa
cmp
sbb
arpl
jns
popa
leave
xchg
push
push
sahf
lea
in
sub
rcll
popf
jb
mov
cli
in
lock
jp
popf
push
into
and
mov
mov
das
sbb
mov
push
out
leave
jmp
das
or
adc
add
pushf
sbb
movsb
jnp
dec
mov
jbe
in
push
ret
inc
jp
pop
jecxz
xchg
xchg
insb
je
sbb
pusha
mov
mov
daa
adc
push
in
add
pop
pop
mulb
cmpsl
hlt
jl
mov
mov
sub
fidivl
mov
adcb
pop
push
popa
adc
imul
or
into
ret
mov
stc
cmpl
mov
fwait
mov
push
montmul
cmpsb
xor
fwait
in
sbb
add
pop
icebp
mov
ret
js
jns
push
xchg
inc
adc
push
incb
shlb
cmp
mov
pop
imul
adc
xchg
arpl
cs
les
pop
scas
xorb
mov
jae
mov
xor
mov
leave
pusha
inc
mov
jle
ja
add
or
sub
iret
xchg
js
test
call
fimuls
push
test
andnps
mull
pusha
mov
stc
mov
jb
adc
push
test
aas
mov
cltd
icebp
mul
jl
insb
scas
mov
and
jg
or
fiaddl
testb
inc
mov
enter
mov
lahf
daa
test
sub
das
jge
ja
or
cltd
mov
es
fisubrs
sbb
pushf
mov
pop
adc
insb
push
and
mov
jne
imul
imul
push
add
mov
inc
dec
cmp
adc
add
xor
and
cmpsl
int
mov
enter
scas
pushf
aas
or
jle
push
jecxz
mov
jge
xchg
dec
dec
xor
pop
arpl
sub
push
or
js
or
adc
push
lods
mov
inc
loop
xchg
mov
vpsraw
cwtl
mov
push
xchg
jns
inc
out
ficoms
mov
mov
mov
xor
mov
push
add
xor
push
int
jno
push
pop
repz
pop
enterw
outsb
lahf
push
clc
mov
cwtl
cmpsb
out
ljmp
mov
mov
ret
push
push
xchg
mov
cmpsb
xor
dec
or
pop
lret
push
and
cltd
push
sti
bnd
and
mov
fcomip
and
hlt
sarb
cli
jmp
movsl
mov
into
adc
lret
cmpsb
cmp
push
mov
ret
andb
sahf
pop
pop
cmp
push
bound
and
pop
xchg
stos
das
fistpl
dec
pop
mov
sbb
adc
jnp
cwtl
dec
cltd
test
das
mov
xor
ljmp
in
xchg
imul
push
jge
or
mov
inc
add
or
jo
loope
xchg
jnp
push
andl
data16
xchg
cwtl
in
cltd
inc
adc
mov
bound
addr16
addr16
jmp
fwait
mov
and
les
test
aaa
das
xor
out
pop
inc
pusha
clc
and
data16
and
je
scas
xchg
call
mov
dec
bound
jb
insb
sub
pop
mov
gs
sbb
and
fsubr
ds
dec
arpl
loop
mov
shrb
add
in
mov
test
pop
stos
inc
xchg
dec
lods
js
mov
mov
cmp
lods
lds
xor
ss
mov
fildl
daa
leave
push
lcall
insb
mov
gs
jbe
cmp
mov
push
pop
dec
dec
inc
pop
aam
aad
mov
addr16
xchg
jne
xchg
sub
lods
jle
fstl
pop
hlt
sti
mov
and
cld
outsl
in
inc
mov
push
or
adc
es
rcpps
push
jno
mov
fmull
push
movsb
ja
mov
xchg
scas
mov
push
inc
jmp
outsb
xchg
or
cmp
in
and
fwait
push
test
add
daa
rdtsc
enter
and
and
jno
dec
sub
jl
jnp
in
in
dec
add
jno
mov
test
mov
lahf
cmpsb
and
mov
les
clc
mov
call
and
cmpsb
mov
add
mov
aam
inc
jge
sub
imul
mov
in
ja
imul
push
mov
xchg
pop
ljmp
push
ret
mov
daa
imul
mov
push
pop
testb
inc
or
sti
jge
xchg
mov
mov
push
xchg
sub
or
mov
ret
repz
xor
out
shll
inc
adc
cmp
testb
outsb
aas
rcr
mov
hlt
xchg
xchg
pop
and
hlt
int3
inc
sbb
adc
cmp
out
enter
jno
mov
aas
xchg
add
and
mov
lds
pusha
mov
enter
fsubr
imul
jle
and
aad
mov
adc
sbb
mov
adc
dec
jae
jne
les
sti
mov
outsl
push
xor
fs
jmp
sub
in
dec
call
ret
jle
jecxz
and
icebp
insb
cmp
xlat
test
pop
sti
jb
cmpsl
nop
jnp
sbb
jge
les
fwait
jno
add
jnp
xchg
cmp
xlat
ds
popa
in
push
inc
cmp
test
cmpsb
push
cmpsl
dec
mov
sub
jne
int
clc
ss
out
std
fisubs
outsb
sbb
dec
sbb
mov
jmp
ret
push
cmp
mov
nop
add
hlt
rcrb
mov
mov
cmp
mov
hlt
pop
addl
push
fdivl
mov
cmpsb
aas
arpl
push
inc
or
mov
mov
js
cmp
sbb
call
pop
mov
push
nop
pop
mov
mov
cmp
rorb
push
inc
leave
cld
negb
das
sub
lea
cmp
mov
nop
cmc
inc
insb
jecxz
dec
add
test
cli
jo
test
out
test
inc
and
lock
insb
mov
sbb
xlat
xor
dec
xor
xor
cmc
or
add
mov
int
sbb
hlt
cltd
xor
in
or
push
out
addb
movsl
ja
nop
push
adc
pop
in
mov
jp
popf
andb
js
and
ja
call
cmp
cs
inc
mov
jns
adc
cmpsl
add
fdivrl
ja
int3
cmpsb
xchg
dec
and
in
test
mov
adc
fs
jmp
lods
in
xchg
and
dec
out
pop
or
inc
and
int3
xchg
add
rcr
addps
cmp
rclb
or
rcpps
mov
aad
bound
jb
xchg
cltd
rcrb
out
mov
imul
ja
mov
xchg
imul
sbb
pop
pop
and
or
test
lds
loope
pop
cs
mov
dec
add
sbb
mov
mov
subl
and
inc
mov
fsubp
leave
inc
lret
in
mov
pusha
clc
push
inc
out
or
xor
add
dec
test
hlt
sub
cld
stos
jo
jg
outsl
daa
shrl
adcl
jmp
rolb
daa
jecxz
push
subl
cmp
pushf
xlat
in
ljmp
xchg
jbe
cli
mov
enter
mov
mov
fidivs
iret
lea
xchg
pop
stos
sbb
pop
jb
mov
and
ret
sbb
jg
sub
movsb
sbb
loope
int3
xor
ljmp
in
cwtl
pop
daa
inc
adc
xor
cmpsl
popa
mov
inc
inc
notl
sbb
cwtl
test
clc
jno
add
mov
push
pop
push
mov
jmp
pop
and
and
xor
xchg
out
push
dec
jo
xlat
es
cltd
or
in
jae
cld
outsb
in
out
test
out
xchg
js
shlb
inc
pop
lea
rcl
aaa
inc
das
stos
es
fldt
inc
popf
imul
dec
std
test
or
gs
sbb
mov
in
lods
into
orl
sbb
mov
or
pop
stos
cmpsl
rcl
arpl
scas
sbb
scas
cmp
shr
jo
mov
out
inc
cmp
in
push
xchg
pop
rclb
icebp
or
andl
in
pop
cld
sub
inc
add
push
in
clc
jae
mov
loop
cli
mov
ret
hlt
mov
jmp
xsha256
cmpsb
adc
sub
cmp
inc
add
dec
sbb
push
rclb
pop
sbb
fsubrp
arpl
pop
cs
iret
outsb
inc
stos
jg
push
xchg
fs
push
loope
es
sbb
lret
adc
ljmp
dec
push
fpatan
cwtl
inc
pop
mov
ret
loop
outsb
aad
push
ret
add
dec
fstpt
dec
add
inc
pop
mov
or
lock
inc
adc
cmp
mov
cmpsl
rorl
sub
adc
mov
orb
popf
adc
js
push
leave
les
pop
xor
test
xor
jl
adcl
cld
leave
rol
gs
lds
or
ret
repnz
mov
ds
push
fistl
or
jg
outsl
lea
adc
jne
in
jnp
lret
mov
xor
clc
int
add
lea
push
lods
jo
mov
sub
ret
inc
lcall
es
inc
xlat
outsb
jae
lods
mov
sbb
or
lods
pop
ljmp
jno
popf
in
ss
jp
pop
inc
stc
lods
xchg
jp
out
clc
sahf
pop
outsl
pushf
sub
mov
jg
shll
ljmp
inc
pop
test
int
and
mov
add
fwait
xor
sahf
sbb
push
push
inc
stos
pop
in
xor
sub
xchg
add
and
insb
cs
inc
ret
xorl
pop
mov
dec
mov
leave
xchg
or
sbb
jnp
and
iret
nop
out
inc
dec
or
fldenv
into
xor
pushf
sbb
jp
in
fs
into
lods
push
jne
dec
stos
or
aaa
xor
sbb
enter
outsb
into
insl
ss
fbstp
les
stos
pop
inc
or
nop
mov
out
pop
loop
pop
enter
lret
lds
dec
add
into
loopne
stos
and
add
cmc
pop
inc
push
add
test
and
in
shrl
pop
add
pushf
les
ret
inc
daa
stc
fnsave
ss
inc
mov
jge
mov
icebp
sbbb
test
or
popw
sub
pop
mov
in
stos
cs
inc
pop
out
fsubr
pop
in
jg
sbb
test
push
push
dec
mov
xchg
push
mov
push
mov
push
and
std
sub
hlt
stos
jnp
xchg
dec
ss
dec
ror
jp
xor
mov
push
shr
add
jge
push
in
test
icebp
out
or
mov
popa
dec
nop
jl
jmp
ffree
xchg
push
lret
sbb
arpl
dec
in
add
mov
loope
ss
fmuls
sbb
orb
lret
repnz
je
cmp
lahf
cmp
notl
jne
jno
test
xchg
jge
add
add
mov
fs
das
mov
dec
mov
adc
std
movsb
mov
and
push
roll
jmp
dec
imul
xchg
xchg
cltd
adc
cmp
in
fsubs
in
mov
xor
fisttpll
dec
and
call
xor
pop
mov
into
ret
das
xchg
and
jg
cmp
push
add
imul
dec
out
shlb
insl
jae
mov
addl
sub
add
cld
arpl
test
xorb
pop
fwait
cmp
dec
rorl
repz
test
ja
jl
push
push
out
data16
cwtl
adc
sbb
daa
inc
dec
mov
lret
and
pop
scas
mov
mov
pushf
jp
xor
test
nop
inc
popf
repnz
mov
andl
mov
out
insl
cmp
adc
mov
call
xchg
cmpsb
adc
add
js
inc
jae
cld
or
and
jmp
jns
aad
jo
movsb
or
ja
jb
mov
cmpsl
mov
sti
out
insl
sbb
cmpsb
lds
mov
add
mov
jno
mov
fisttpll
cmp
cli
fstpt
mov
in
cmpb
mov
imul
push
sub
pop
fstps
shrb
sbb
lahf
pop
sub
cmp
daa
adc
loop
pop
bound
xor
push
mov
sbb
cmp
vpinsrw
daa
mull
out
daa
jb
cwtl
iret
shl
es
fisubrs
mov
xchg
dec
jecxz
out
cmp
pop
cmc
mov
jo
int
es
js
das
mov
insl
push
or
fwait
lret
dec
dec
popa
cmp
or
xor
push
sub
mov
add
jbe
adcl
xor
movsb
xchg
shl
rolb
and
lcall
push
kortestb
in
adc
aaa
mov
xchg
pop
pop
insb
fdivrs
sbb
inc
mov
xchg
imul
mov
fisttpll
icebp
push
xor
and
jo
fiadds
adc
xor
sbb
mov
inc
inc
sbb
hlt
push
or
fidivs
das
mov
hlt
test
and
lods
mov
arpl
mov
nop
movsl
jmp
outsb
rorb
in
je
js
adc
push
icebp
sub
xchg
cmp
pop
sub
ret
jmp
jnp
popa
rorb
dec
jno
inc
aaa
sbb
stc
stc
out
or
aas
cmpl
das
sbb
mov
fsubr
sti
inc
out
clc
jge
movsb
sbb
mov
pop
loopne
jl
xor
mov
imul
cld
jl
out
mov
mov
dec
xor
movsl
cmp
mov
movsl
mov
pop
jae
sub
add
xchg
jg
test
divl
xchg
dec
js
xlat
mov
pop
cmp
push
jmp
popl
jno
mov
negb
cli
aam
movb
dec
loop
dec
out
jecxz
sub
mov
testb
movsb
jmp
pop
mov
dec
mulb
xchg
sub
cwtl
jne
push
xor
sbb
rcll
in
mov
div
xchg
and
mov
lret
mov
test
jg
fldl
popa
enter
push
fs
stos
xchg
js
sbb
iret
movsb
repnz
cmp
mov
lods
sub
inc
testb
push
or
in
sbb
sti
pusha
mov
jbe
in
add
les
fidivrl
lods
call
cmp
add
mov
es
cwtl
dec
and
imul
sahf
pop
pop
ret
rorb
sub
pop
int3
sbb
xchg
dec
popl
mov
mov
sahf
inc
push
and
pushf
xor
cmc
pusha
mov
arpl
adc
jb
mov
ja
mov
imul
mov
sbb
push
cmpsb
mov
sub
sahf
mov
mov
add
mov
out
jb
or
repz
inc
std
iret
pop
pop
cmp
gs
pop
stos
add
addr16
xchg
push
sbb
int
sbb
jne
push
and
popf
add
rorb
sbb
fcomi
inc
inc
das
addr16
add
mov
push
cltd
psadbw
out
xlat
stc
fdiv
pop
sbb
fstpt
or
hlt
or
dec
insb
cmpb
mov
jmp
adc
ret
xchg
dec
mov
push
fsts
out
loop
add
out
test
rcrl
jecxz
sar
addr16
pusha
xchg
outsb
push
pop
shl
nop
xchg
daa
cmpsl
cmpsl
sbb
in
sbb
adc
aas
std
cltd
cltd
out
fwait
sti
add
je
cmc
inc
push
movsl
cltd
lahf
js
sar
aaa
fwait
jmp
icebp
hlt
adc
mov
sarl
dec
add
mov
mov
cmp
sbb
or
popa
je
sbb
xchg
push
jg
push
ja
jae
mov
adc
and
icebp
xor
js
inc
mov
xor
mov
rcl
repnz
mov
es
cmp
push
aaa
push
repnz
ret
cmpsb
xchg
sub
sahf
ficompl
mov
arpl
lcall
sarb
sti
push
int
aas
mov
loope
mov
sbb
incl
mov
pop
and
or
aas
mov
mov
shl
sarl
in
sbb
sub
mov
in
pop
mov
fiaddl
and
mov
mov
sub
mov
xchg
sti
cmp
or
cmp
cmpl
pop
aas
push
aad
mov
dec
jnp
pop
getsec
adc
dec
daa
sahf
jno
test
stc
jg
aas
sbb
mov
mov
in
dec
xchg
out
add
xor
jne
and
push
mov
repz
mov
aad
sbb
scas
test
repz
dec
insl
xor
pop
out
xchg
cmp
nop
push
ret
mov
push
lcall
pop
adc
nop
jl
ret
jp
mov
pop
imul
cmpsl
and
and
inc
push
pop
xchg
test
lret
jae
sahf
xorb
sbb
xchg
in
imul
cmpsl
aas
data16
inc
xchg
fadd
das
inc
hlt
std
xor
sub
int
add
sbb
xor
mov
stos
ljmp
test
mov
testl
stos
xchg
and
lret
sub
xchg
sub
mulb
ds
or
cmp
lods
int
push
sti
push
data16
std
push
fadd
or
andb
push
ficoml
and
or
mov
mov
dec
ret
loope
pop
cmc
movsb
inc
pushf
jb
lret
inc
push
and
iret
xor
es
cmp
pop
pop
mov
lcall
lret
test
add
mov
lock
mov
cltd
and
mov
adc
mov
and
popa
andl
inc
cltd
std
jmp
lods
dec
mov
loopne
stos
xchg
popf
repz
sbb
mov
pop
mov
imul
fstl
xchg
add
jns
sbb
aaa
lock
jecxz
fbstp
xchg
shl
mov
or
jg
dec
push
and
jp
add
shlb
mov
or
or
sbb
mov
inc
addb
xor
sti
adc
cmpsb
dec
dec
popa
sbbb
xorb
lret
lret
pop
jo
psrad
movsb
gs
mov
mov
pop
xchg
fs
clc
aad
sub
cs
out
aas
jecxz
cld
push
adc
sarb
ljmp
cmp
lahf
gs
popa
repnz
out
mov
xchg
cmp
adc
test
jmp
push
movsl
mov
pop
or
push
stos
addl
adc
and
out
pop
call
jle
inc
in
mov
mov
out
sub
mov
lods
lret
jb
cli
out
add
cmpsb
sub
shrl
xor
cmc
mov
xor
mov
mov
xor
add
inc
inc
adcl
call
or
mov
in
int
cmp
fcompl
jl
mov
or
cmp
ja
push
jge
sahf
daa
jmp
out
mov
icebp
movsl
jmp
dec
test
dec
or
data16
shll
mov
mov
pop
cs
mov
sbb
cmp
xchg
je
fwait
repnz
lods
cmc
into
xchg
lret
xor
shlb
inc
pop
mov
stos
jbe
push
push
add
popl
pop
dec
imul
mov
mov
push
dec
nop
sbb
pop
movsl
inc
pop
test
mov
imul
fimuls
cmpsb
sub
xchg
insl
push
push
mov
jae
cs
inc
jo
ja
sbb
mov
adc
sub
ljmp
or
sti
sbbl
or
inc
cmp
ja
dec
xor
xchg
jbe
lret
lret
add
test
push
inc
mov
imul
adc
js
mov
sbb
andl
mov
cmpsl
add
hlt
sbb
cmp
js
pop
cmpsb
cmp
inc
inc
les
dec
adc
dec
pop
jecxz
int
add
repnz
stc
mov
fildl
or
cs
mov
cli
pop
sti
lods
fbstp
fwait
cltd
test
inc
std
mov
pusha
push
mov
lret
xor
mov
mov
push
sub
ret
jecxz
les
push
jno,pt
jne
pusha
popa
sbb
inc
sbb
xor
mov
push
mov
loope
aaa
dec
adc
xor
paddb
orl
les
dec
fcomps
jl
jne
jg
aaa
ret
cld
dec
pushf
test
mov
outsb
jmp
shrb
into
mov
cs
add
out
or
mov
imul
pop
fmull
shll
sbb
ret
in
pop
cmp
dec
ljmp
dec
lret
cwtl
jecxz
daa
inc
xchg
push
cmp
mov
ss
repz
data16
xor
ret
loop
xlat
ljmp
mov
jge
mov
fimuls
jl
jg
inc
cmpsl
add
push
shlb
mov
jo
mov
pusha
pop
push
sbb
scas
mov
pusha
xor
outsl
mov
ljmp
jno
jnp
mov
jno
cmp
scas
out
mov
xor
aas
inc
xlat
dec
adc
sub
cld
add
pop
mov
cmp
icebp
dec
call
loopne
push
aaa
xchg
cmp
stos
mov
or
scas
pop
add
mov
sbb
inc
inc
inc
gs
ja
je
dec
movsl
mov
cmpsb
subl
dec
movsb
lds
cltd
imul
or
lods
mov
sub
aaa
testb
nop
adc
sbbl
filds
xchg
lret
xlat
xchg
sbb
jle
shrb
push
jle
dec
pusha
mov
decb
movsb
pop
scas
sbb
fnstenv
xor
hlt
or
xchg
xor
add
int
mov
cli
inc
outsl
inc
jmp
sbb
push
pop
movsl
mov
sub
dec
mov
mov
sub
sbb
add
sub
xor
dec
in
repz
stc
add
insl
in
aas
hlt
loopne
mov
sbb
jecxz
rcll
insl
scas
mov
xchg
push
xchg
jp
jmp
mov
mov
mov
test
xor
mov
pop
mov
xor
pop
mov
arpl
repnz
dec
sbb
lret
jo
pop
cmpsl
inc
jns
jae
out
out
jg
lahf
test
and
in
popf
jg
and
jl
fs
jle
jl
aaa
jp
or
pushf
fs
inc
mov
fsubrl
movsl
cmp
fstl
repz
sarb
dec
aad
jp
lock
int3
ret
dec
stos
int
push
movsl
loope
jge
or
insl
iret
push
lahf
jb
push
clc
shl
in
outsb
test
pusha
or
adc
incb
and
inc
mov
inc
in
clc
sahf
xor
xchg
pop
jb
mov
ret
mov
jecxz
mov
fnstsw
bound
insb
data16
sbb
sbb
jecxz
shl
sub
in
ret
jp
xor
sarl
out
into
stos
inc
jnp
and
jbe
mov
xchg
stc
popf
pushf
inc
jecxz
mov
jmp
shrl
jge
inc
sti
and
and
or
mov
js
jmp
or
push
push
push
mov
faddl
xchg
lret
and
mov
pop
jae,pt
or
imul
daa
mov
and
clc
jnp
testb
testb
repz
call
aas
fisubl
int3
aaa
or
stos
in
sub
pushf
inc
iret
mov
mov
stc
arpl
jbe
pop
test
sub
imul
ret
dec
in
cli
mov
jne
or
xor
mov
cs
xor
mov
xchg
fs
mov
adc
xchg
mov
sub
pushf
add
mov
imul
minps
loop
jno
pop
in
aam
mov
jle
inc
out
mov
popa
sti
fstl
in
xchg
and
out
mov
xlat
xchg
test
rclb
aad
cmp
dec
ret
leave
pop
jae
xor
lahf
imul
ret
lret
xchg
mov
ret
fstps
cmp
push
arpl
lock
ljmp
imul
es
jmp
xchg
es
and
fldl
fldcw
sub
jnp
jno
stc
pushf
pushf
or
scas
shrl
adc
jg
inc
jne
mov
push
in
jmp
dec
sbb
addr16
jp
or
lds
cmp
mov
les
stos
movb
xchg
mov
jl
xchg
sub
mov
cmp
jnp
js
lods
dec
daa
sbb
xor
fisubl
ljmp
adcb
sarb
out
movsl
fadd
lahf
xor
lcall
fnstcw
sub
mov
push
into
ds
fimuls
sbb
add
pop
xor
sarb
jne
rol
push
jg
outsl
jno
xor
dec
shlb
adc
push
adc
aaa
fadd
push
mov
es
scas
push
mov
movsb
stc
push
add
push
xlat
outsb
mov
mov
js
sarb
pop
sbb
ret
mov
fwait
xchg
mov
scas
add
cmp
push
mov
and
dec
test
sti
mov
jbe
call
test
and
ret
arpl
jns
inc
in
adc
mov
popa
add
mov
in
dec
adc
or
stos
push
add
shrl
hlt
sub
outsb
sbb
addr16
lret
mov
inc
and
iret
xor
pushl
mov
sub
outsl
jle
enter
negb
test
fsubrs
inc
cwtl
pop
jle
addr16
push
xchg
cmp
leave
das
or
sbb
xchg
inc
pop
dec
aaa
dec
in
ljmp
test
lcall
and
adc
es
js
cmp
es
fcomps
sub
lods
bound
shl
dec
divl
jecxz
fsub
mov
nop
test
xchg
jmp
loopne
mov
stc
or
outsb
addr16
sub
mov
xchg
in
inc
stos
cmpsl
inc
stc
add
lcall
inc
push
aaa
stos
inc
je
dec
out
push
aad
jno
lret
inc
pop
adc
adc
sub
popf
push
repz
pop
sub
xchg
and
push
mov
add
fisubs
sarb
fs
inc
testl
hlt
or
subb
bound
mov
scas
push
push
fcmovnu
mov
cmp
mov
mov
ja
fcoms
cmp
push
or
fs
jg
stos
lods
jle
test
leave
mov
aam
shr
es
cmc
cmpsb
cmpl
mov
dec
hlt
inc
cwtl
jg
inc
ss
xchg
adc
je
call
rcrl
in
sbb
adc
inc
hlt
lahf
mull
mov
out
xor
mov
ja
fstpt
lods
adc
rorl
ljmp
fs
pop
gs
aam
add
dec
mov
sbb
add
pop
icebp
popa
dec
es
sti
sub
popf
add
and
fneni(8087
popa
push
jg
pop
out
lahf
dec
jecxz
or
pop
jge
in
in
xchg
fs
inc
bound
das
add
mov
push
lret
jnp
xor
ss
xchg
xchg
push
out
inc
test
xlat
out
dec
inc
adc
push
or
sub
sbb
aad
pop
dec
ret
sub
pop
sbb
ret
jo
idiv
dec
mov
aad
xchg
ret
mov
insb
loopne
mov
sub
or
ds
sti
mov
stc
mov
mov
xchg
add
clc
or
pop
or
xchg
add
cmp
jl
inc
or
aam
loope
mov
sbb
push
fidivrs
inc
xchg
jno
test
jbe
jno
lock
push
xchg
inc
push
enter
cld
fstl
xor
dec
out
out
mov
shl
mov
mov
ror
es
adc
fwait
out
sbbb
sbb
leave
inc
repz
xor
rclb
fists
inc
sub
sub
xor
bound
dec
imul
addl
nop
jb
aaa
pop
cmpsb
pop
cmp
inc
add
andb
loop
sarb
xor
pop
adc
jno
sbbb
mov
xchg
push
mov
cmpsb
sahf
into
gs
pop
in
addr16
dec
jmp
aad
sbb
pop
cmc
rcr
jnp
out
ret
shll
cmc
dec
or
dec
mov
in
rol
inc
mov
sarb
push
test
dec
arpl
push
sbb
aas
data16
push
mov
mov
jecxz
xor
or
xchg
imul
test
repz
cld
stos
stc
push
mov
add
sub
adc
mov
dec
adc
rclb
jecxz
cmp
lods
iret
test
in
test
push
and
inc
push
idivb
add
enter
push
and
lock
push
push
inc
testl
jbe
cltd
mov
jae
jg
xor
sti
arpl
jo
jns
xor
addl
orl
xor
mov
dec
std
inc
xor
inc
mov
mov
xor
cli
or
pop
cmp
cmp
lods
jl
pop
hlt
loop
fldenv
add
adc
jns
call
test
jmp
jae
test
push
mov
fdivrp
dec
xchg
notb
jecxz
movsl
push
mov
mov
mov
adc
repnz
xlat
outsb
fstl
call
gs
mov
push
pop
lcall
out
jl
push
cmp
mov
jmp
push
sub
adc
sbb
jb
xchg
neg
mov
into
fcompl
push
xchg
call
dec
lds
es
scas
inc
and
xchg
xor
das
jnp
lods
mov
xorb
aas
lods
in
subl
cwtl
push
notb
in
cmp
das
add
push
jnp
int3
cmpsb
inc
hlt
xor
dec
pushf
jg
mov
stc
sahf
jbe
mov
lahf
inc
shrl
jle
out
pop
js
jl
lods
pop
pop
loopne
add
aas
mov
mov
or
mov
int3
sbbb
xchg
call
pop
fs
pop
ret
xchg
push
leave
and
mov
negl
jg
xlat
insb
or
es
pushl
jge
inc
iret
adc
es
stos
push
movsl
cmp
pop
add
and
xlat
icebp
aad
cwtl
bound
ficoml
enter
inc
and
inc
sbb
ficompl
sub
jge
cmp
add
push
vmwrite
push
dec
xor
dec
xchg
je
les
sbb
mov
jl,pn
lock
movsb
pop
imul
jne
mov
pusha
inc
push
clc
adcl
sub
pop
ds
or
insl
adc
lock
push
push
jl
inc
mov
add
inc
mov
insl
lret
and
mov
fildl
loop
dec
in
call
leave
jg
jl
out
mov
jge
dec
shlb
jle
in
cmpsl
cltd
push
mov
fwait
sub
mov
or
sub
ljmp
into
ret
imul
inc
mov
stc
jmp
out
in
xlat
divb
daa
mov
inc
push
bound
pop
mov
lret
leave
loope
and
fsub
lods
push
push
stos
cmp
sbb
jmp
shlb
jp
cmp
in
adcl
insb
jae
inc
and
cld
xlat
sub
rcl
ret
shll
push
nop
cmpsb
sbb
xlat
mov
lods
inc
push
notb
xor
xchg
xor
stos
inc
mov
push
push
int3
jmp
or
cmp
sub
pop
cmp
or
mov
sahf
lahf
ds
mov
xchg
sbb
movsb
les
mov
out
int
xor
and
push
add
lret
pop
pop
inc
jmp
xchg
sbb
push
in
and
jmp
call
cmp
into
stos
add
push
loope
push
mov
add
xchg
iret
inc
jle
pop
dec
or
lock
cmp
dec
mov
pop
shll
adc
lea
ss
xchg
sub
sub
in
push
push
clc
out
cmpsl
scas
add
push
mov
loopne
xor
dec
lret
shll
js
mov
into
inc
jae
mov
jnp
sahf
push
adc
cmp
push
mov
jmp
sub
jp
sub
cli
adc
sub
enter
xchg
and
fcmovu
std
mov
fnsave
mov
in
cli
adc
repz
mov
push
push
mov
negb
cld
roll
jg
sti
pop
repz
and
push
sbb
xor
enter
loopne
ffreep
xlat
dec
pop
test
lret
addw
hlt
pop
jecxz
sbb
mov
adc
or
push
rcl
xor
mov
lods
loope
mov
out
das
dec
sahf
push
insb
shrb
or
mov
lahf
testl
out
add
loope
fs
rorb
mov
add
cmp
in
insb
ret
iret
pop
mov
in
mov
jae
sub
mov
data16
add
fsub
pop
cmp
loopne
pop
enter
cltd
push
mov
jbe
and
sbb
lds
xor
jecxz
mov
dec
mov
mov
add
nop
and
enter
je
test
mov
ljmp
xchg
xor
jns
push
push
popa
scas
repz
sbb
jmp
cli
jp
and
lds
icebp
cmp
jg
mov
mov
push
fnsave
movsl
cmp
repz
and
mov
je
cmove
fimull
sub
sbb
or
and
mov
or
lcall
faddl
cmpsl
addr16
dec
jmp
lds
sub
add
mov
repnz
in
int
push
xchg
mov
stos
inc
xlat
and
add
call
push
leave
rclb
xchg
lret
repz
inc
xlat
adcl
mov
xor
imul
outsl
or
xchg
scas
xor
popa
sbb
imul
dec
mov
call
or
fdivrl
adc
popa
mov
fisttpll
addb
pusha
aam
hlt
mov
xchg
cmp
push
push
add
mov
in
fcoml
insb
mov
aam
nop
mov
mov
inc
sbb
add
cltd
cmpsb
jno
or
lea
jmp
cli
aaa
repz
aam
cs
inc
aad
cmpl
sahf
cmpsl
js
cmp
mov
cltd
push
sub
mov
nop
lods
inc
or
insl
inc
loop
push
jns
inc
cs
add
es
cltd
push
mov
sbb
and
shrb
cmp
pop
cld
ja
fidivrs
mov
shrl
jo
aas
loop
pop
loop
inc
int
jnp
in
sub
adc
mov
ljmp
cmp
lahf
iret
insl
loopne
into
cwtl
daa
enter
xchg
dec
cs
and
inc
out
sub
adc
sbbl
xlat
cltd
repnz
adc
scas
xor
or
call
inc
sahf
enter
mov
mov
insb
jp
jo
sbb
ljmp
lods
xchg
mov
bound
pop
lock
clc
cmp
rorb
mov
ljmp
in
xchg
popa
xor
out
push
mull
add
scas
fnstsw
in
mov
iret
int3
pop
in
ss
sub
mov
and
jbe
cmp
mov
lret
jg
dec
loopne
je
pop
mov
push
cwtl
das
mov
sub
leave
xchg
mov
jbe
lds
cwtl
lods
mov
jae
push
outsb
int3
daa
jns
popa
add
xchg
mov
clc
movsl
addr16
insl
jl
repnz
shrl
add
xchg
imul
into
gs
jb
lret
push
ss
adc
xchg
out
mov
ss
addr16
decl
xorl
popa
sub
fimuls
fcomip
and
inc
inc
cwtl
inc
fcomps
cmpsb
inc
mov
add
xor
inc
jmp
sbbl
push
add
scas
ror
in
xchg
lea
jmp
lock
or
inc
jp
adc
into
gs
leave
jae
mov
in
sahf
hlt
shll
mov
cwtl
inc
lods
inc
in
adcl
outsl
sub
push
adc
jp
test
xlat
repz
mov
inc
jl
sub
push
orl
and
or
addr16
mov
addr16
cltd
pop
loopne
mov
iret
lds
movsl
push
mov
loop
or
ret
daa
mov
enter
insl
jmp
fbld
mov
out
pop
in
hlt
add
out
ret
xchg
xchg
sti
inc
in
xor
inc
inc
imulb
dec
dec
push
lcall
or
cli
sub
cmp
mull
add
repnz
ficompl
xor
sbb
jbe
imull
in
std
movswl
dec
jecxz
loopne
fprem1
gs
jb
pusha
jl
ja
cli
and
inc
push
xor
sbbl
mov
and
aad
stc
pop
pop
es
jl
jae
adc
cmp
cmpsb
cli
pushf
xlat
in
sbb
push
adc
jne
xor
adc
fs
mov
xor
shl
std
xchg
jle
or
mov
mov
or
xchg
ja
mov
sbb
ret
ret
dec
enter
leave
data16
loope
ljmp
and
push
out
mov
clc
icebp
adc
mov
fnsave
or
cmc
adc
fmuls
mov
pop
xor
les
fsubrl
jae
cwtl
mov
lret
add
push
pop
popf
xchg
fwait
push
dec
std
dec
pop
fdivrl
fldenv
lods
sub
sub
pop
sub
pop
lods
push
stos
mov
cmp
aas
push
xchg
adc
pop
add
mov
stc
or
sarl
push
je
jno
pop
cmp
mov
dec
out
aad
mov
sti
push
add
and
bound
dec
push
fisubl
je
inc
mov
into
cmp
cmp
mov
xor
adc
fimull
jmp
sbb
sahf
addr16
stos
dec
ds
lahf
xchg
pusha
xor
sti
out
mov
add
xor
and
jae
scas
push
icebp
bnd
sub
jle
inc
cmp
cmp
lahf
out
loopne
int
mov
sbbl
push
loopne
fiaddl
cmpsl
inc
cmp
inc
push
les
fimull
jmp
mov
aad
ret
js
out
push
stos
sbb
addr16
in
and
lret
jae
int
outsb
pop
inc
ja
xchg
lcall
movsb
jnp
dec
xchg
xacquire
jle
shrb
mov
jne
or
mov
test
inc
cwtl
test
add
sbb
add
sub
outsl
or
loope
or
and
call
add
ret
xor
sbb
mov
mov
sbb
ds
adc
cmp
add
aam
push
xchg
imul
icebp
adc
jge
sti
xor
in
fs
outsb
pop
mov
das
fsubrs
push
mov
add
sbb
dec
inc
gs
xchg
adc
popl
clc
mov
sub
xor
jge
or
mov
cmpsl
or
andb
push
mov
loop
pop
out
jle
dec
roll
mov
dec
hlt
adc
ds
sahf
fsubrs
push
notb
cmp
and
adc
push
jmp
sub
sbb
scas
jo
jnp
sarl
ljmp
pusha
out
insb
xchg
adc
push
xchg
mov
nop
jae
shrb
mov
shl
into
test
andl
xor
jnp
lahf
and
call
out
stc
dec
mov
mov
aad
jbe
sub
mov
and
enter
push
cmp
jmp
mov
pop
out
mov
test
jp
mov
sbb
sbb
inc
ljmp
add
jp
add
fcompl
into
or
add
cmp
mov
dec
jp
data16
loope
outsl
lret
das
mov
sbb
mov
cmpsb
pop
push
vandnps
mov
mov
addl
lock
cmp
sub
in
ret
sahf
jb
sti
mov
mov
loopne
pop
icebp
sub
repnz
sahf
les
jmp
or
push
test
add
loopne
mov
sahf
jg
stos
mov
xchg
out
es
test
ret
mov
subl
int3
sti
inc
ja
and
fiadds
sub
or
dec
add
insb
cli
xor
push
add
ds
mov
push
jno
mov
xchg
mov
ljmp
mov
jg
and
lahf
pop
loop
or
shlb
push
es
imul
add
ret
xor
lods
jno
lods
sub
sahf
xor
cmp
mov
std
iret
inc
jb
mul
les
jle
out
addr16
add
fdivrl
leave
xchg
sti
push
movsl
in
cmp
add
cmp
xchg
insb
jnp
bound
sub
sbb
dec
sbb
int3
cmp
inc
sub
lock
out
and
mov
in
sahf
sbb
lods
inc
movsl
sub
scas
repz
dec
bound
cvtpi2ps
dec
bound
mov
dec
push
cld
jno
in
and
jb
sub
mov
jno
xor
push
popa
addb
lock
shll
lahf
pop
adc
mov
xor
mov
xorb
loopne
nop
jl
pop
jmp
jecxz
icebp
orb
out
stos
push
push
adc
and
daa
sub
xchg
arpl
loop
mov
imul
negb
dec
pop
into
mov
jle
fldl2e
sub
push
mov
mov
pop
pushf
xor
mov
je
enter
inc
mov
or
clc
adc
xchg
dec
test
mov
notb
pop
pop
addr16
inc
fnstcw
into
mov
rcl
fcom
sub
mov
mov
sub
cmp
imul
popf
sub
dec
xchg
and
push
push
scas
stos
jne
mov
int3
and
int3
sbb
std
fnsave
inc
sub
mov
adc
push
dec
arpl
mov
cmpsl
xchg
popa
aaa
or
pop
mov
les
sbb
xor
xchg
dec
add
repz
cmp
sbb
mov
push
hlt
mov
arpl
sbb
inc
jecxz
popa
mov
jmp
dec
sub
pop
sub
mov
ss
cmpsl
lds
mov
stc
add
out
dec
push
push
mov
sub
js
sbb
mov
pop
das
jle
cmpsl
xchg
push
inc
idivl
je
fisubrl
cmp
mov
and
loope
and
enter
xor
data16
xchg
xor
subb
cltd
mov
mov
in
icebp
mov
or
das
ds
adc
xor
sbb
clc
aaa
push
push
std
or
push
push
mov
testl
pinsrw
test
xor
loopne
mov
dec
mov
mov
sahf
dec
ret
jo
pop
stos
shl
das
jb
inc
lret
xorb
xor
inc
ja
push
clc
in
dec
loopne
sbb
bound
mov
push
ja
jmp
pop
xchg
ret
mov
clc
ds
push
jp
scas
mov
push
cli
inc
enter
into
icebp
imul
insl
in
std
xchg
cmpsb
leave
pop
add
push
cs
pop
jge
cs
mov
int3
pop
mov
adc
das
enter
push
repnz
pop
adc
xlat
jp,pn
rorb
jp
repz
stos
outsb
push
lret
push
cmp
push
in
jp
cmpl
lcall
out
jbe
fxch
in
adc
cmp
stos
jbe
mov
and
enter
out
out
int
sahf
push
lods
dec
clc
xchg
repnz
mov
or
in
and
fucomi
scas
push
shlb
pop
pop
push
sub
jg
push
inc
sub
cmp
jg
dec
test
andl
pop
jno
xlat
pushf
scas
mov
cmp
push
fists
int
iret
pop
icebp
add
add
sbbb
das
pop
sti
mov
rorb
cmp
jp
insl
test
xor
xchg
repnz
rcrb
jge
add
dec
inc
aaa
jge
xchg
xor
pop
fistpll
push
ljmp
lock
mov
std
xchg
fwait
mov
std
sbb
scas
lea
mov
sbb
sbb
or
dec
imul
jp
out
adc
and
pop
xor
lret
in
sbb
cmp
mov
mov
testb
lods
xchg
xchg
xor
mov
cmpsb
leave
mov
mov
push
xchg
mov
or
stos
sub
stos
mov
imul
add
xlat
lea
xchg
popa
xchg
mov
fidivrl
or
cmp
loopne
jecxz
int
into
cmp
out
inc
clc
fdivl
add
cmp
es
inc
pop
cwtl
dec
mov
pop
push
inc
pusha
enter
loop
adc
flds
add
in
xchg
xor
sti
push
stc
ret
lret
rcrw
adc
test
fnstcw
push
xchg
add
add
push
repnz
xchg
shl
inc
shlb
pop
mov
pop
xor
xchg
loope
push
push
int3
mov
jno
cmc
int3
gs
cmp
adc
mov
pop
mov
adc
les
bnd
push
sub
outsb
out
lret
mov
and
adc
std
pop
fidivrs
adc
adc
ffree
sbb
loope
repz
int3
ss
or
push
cwtl
push
ljmp
out
jae
stos
loope
je
fsubrp
push
lods
adcl
loopne
sub
inc
jo
clc
add
mov
pop
xor
sub
mov
ret
dec
dec
mov
inc
adc
mov
push
js
icebp
lds
imul
adc
mov
shlb
add
arpl
stos
repnz
pop
gs
loop
jg
inc
sti
lock
out
icebp
insb
cmc
out
add
enter
dec
mov
lods
pop
ljmp
and
sub
xor
int3
fiadds
into
bound
cwtl
jae
inc
jmp
hlt
mov
inc
cmpsl
dec
scas
mov
iret
mov
sbb
mov
sub
sti
in
out
jbe
push
dec
dec
pop
cmpsb
aas
in
push
out
sub
inc
push
fimull
inc
stos
mov
imul
idiv
sbb
cwtl
push
jmp
adc
stc
push
xchg
dec
insb
xchg
and
add
add
pop
stos
or
daa
cmc
cmpsl
sbb
iret
pusha
fcmovnbe
mov
aas
lods
ret
stos
mov
je
sbb
mov
insb
sbb
pop
ss
lahf
call
sub
mov
push
xor
push
loop
mov
sub
push
add
insl
or
mov
stos
xlat
jo
and
add
cmp
or
test
and
dec
pusha
xor
outsl
stos
not
aaa
add
sub
je
or
std
aaa
add
pop
daa
pop
xchg
mov
lock
mov
cmp
jecxz
xor
dec
imul
jo
mov
jl
out
andb
lret
cmc
jbe
adcl
sub
push
shlb
cwtl
imul
and
leave
or
popa
andl
mov
js
sbb
out
add
call
and
insl
adc
xchg
inc
sub
push
add
imul
dec
sbb
cmpsl
xor
ja
pop
or
sbb
add
mov
mov
ret
adc
mov
lods
jbe
js
jbe
xor
push
pop
out
sti
xor
nop
shlb
cmpsb
or
sub
hlt
pop
xor
dec
or
cmpsl
into
sbbl
out
cmp
xchg
xchg
dec
pop
inc
imul
pushf
pop
and
dec
and
or
jg
fnsave
push
test
push
movsb
jnp
outsb
mov
inc
rol
push
sbb
add
adc
scas
xor
pop
or
pop
je
mov
clc
int
adc
sub
pop
inc
sub
pushf
add
inc
sub
hlt
int3
arpl
cmp
push
mov
jne
jo
out
sbb
cmp
cli
ja
fmuls
pop
add
xchg
jnp
and
mov
sub
insb
std
call
sub
pop
xor
mov
pop
movsb
cmp
cmp
popa
push
into
adc
jmp
pop
sti
pop
cmp
mov
mov
sahf
sub
push
out
dec
shll
repnz
loope
mov
mov
and
fidivrl
shll
scas
jl
sub
jae
cmc
cmp
jne
fmull
mov
push
icebp
cs
cmpsl
add
xor
cwtl
out
mov
je
pop
mov
aas
stos
test
mov
or
cmp
sbb
mov
sarl
insb
mov
dec
dec
add
mov
jb
pop
mov
cmpsl
repnz
mov
add
xchg
negl
fnstenv
sub
cmc
aaa
popf
test
test
inc
aas
cmpsb
xchg
or
and
fisttpll
push
lock
push
add
test
js
insb
test
jne
into
and
cmp
mov
dec
or
sub
mov
mov
mov
push
lods
repnz
and
sub
stos
ret
or
rcrl
pop
scas
jle
inc
scas
mov
mov
push
add
sbb
xor
es
push
ret
std
lods
dec
repnz
pop
and
leave
rorb
adc
mov
mov
test
shll
or
xchg
jp
dec
jne
or
cmp
fsubs
test
enter
cmc
mov
in
and
push
sub
ljmp
mov
cmpsb
mov
lahf
inc
cmpsb
or
sub
dec
and
jge
cs
lods
xor
out
inc
rolb
movsb
divl
xchg
push
inc
dec
fdiv
mov
lcall
roll
outsb
add
int3
sbb
cmpsl
mov
add
mov
pop
gs
sti
inc
shll
sbb
cmp
xchg
pop
std
xchg
jno
inc
pop
je
jo
hlt
stc
je
aam
adc
jmp
add
repz
lock
add
test
popl
cmp
xor
mov
cmpl
dec
dec
dec
out
fbld
test
nop
xor
insb
incl
stc
js
xchg
mov
insb
ljmp
jmp
mov
mov
cmp
sahf
xchg
xlat
xchg
inc
jecxz
xor
cmp
mov
sbb
inc
dec
fbld
xor
lahf
mov
xchg
push
lods
mov
or
xchg
adc
jnp
or
fisttpll
in
adc
fcoml
and
or
rcrl
cmp
lret
addr16
inc
mov
cmp
mov
loopne
and
pop
ja
pop
stos
shlb
push
lds
xor
mov
jmp
adc
dec
orl
fs
jno
inc
push
jae
mov
or
and
xchg
push
adc
nop
xor
aaa
addr16
pop
cmp
xchg
sub
enter
test
and
fisubl
cwtl
test
insb
dec
pop
stos
mov
movsb
jl
and
push
js
call
in
inc
fcompl
lret
pop
scas
mov
jo
movsl
sub
and
and
stos
stos
mov
jp
inc
subb
iret
aad
shll
stos
pop
es
outsb
inc
icebp
dec
test
adc
mov
xchg
ss
and
ror
popf
jns
lret
xchg
aas
into
shr
pop
pop
sbb
sub
inc
push
inc
pop
test
mov
and
push
mov
sbb
fidivl
pop
je
loop
subb
mov
cmpsl
inc
cmc
pop
cltd
pop
fbld
imul
test
lds
mov
mov
pusha
and
add
addl
mov
cmp
xchg
push
push
sbb
adc
imul
or
and
fisttpl
outsb
repz
jns
and
aam
xchg
out
sub
mov
sub
mov
push
insl
cmc
in
fistpl
sbb
mov
loopne
pop
push
sub
aas
stc
mov
stc
push
xchg
fwait
and
inc
sti
jp
aad
bound
std
xchg
mov
gs
aas
fwait
sbb
adc
ja
pop
mov
cli
pop
repnz
pop
push
in
sub
aaa
scas
mov
aas
test
mov
aaa
mov
aad
lret
sarb
imul
lahf
daa
jo
ja
rolb
loope
jge
inc
aas
bound
mov
sahf
mov
fcomps
aad
xor
inc
lea
nop
imul
fwait
dec
in
push
into
gs
xchg
dec
lds
fdivrl
sub
cmpsb
xchg
test
loop
aam
negb
add
es
test
dec
iret
data16
mov
out
test
mov
mov
arpl
fldt
pop
pop
cmp
pop
rclb
jmp
mov
imul
sub
lock
rcll
mov
cwtl
leave
push
inc
nop
movsl
std
jmp
scas
mov
mov
imul
dec
nop
sbb
xchg
out
jecxz
call
pop
lret
push
jge
dec
pop
xchg
test
xchg
jo
dec
arpl
add
jnp
mov
dec
in
adc
inc
ficoml
or
jno
dec
shrb
inc
adc
mov
lock
je
mov
sub
add
xchg
pop
or
dec
cmp
daa
lods
call
decb
jb
fdivrl
mov
mov
push
lahf
addr16
xchg
cmpsb
sub
cmp
sbb
aam
insb
cmp
xor
notl
andb
nop
add
and
mov
jecxz
jb
rolb
scas
xchg
pop
shl
out
pop
hlt
cmc
dec
aad
jp
jge
dec
xor
jmp
mov
test
lea
xor
fistpll
push
sub
cltd
cld
imul
rolb
and
dec
mov
cld
adc
jl
and
ficomps
push
cmpsl
xor
in
aaa
bnd
sub
lcall
cmp
jl
test
std
adc
outsb
xchg
pop
insb
out
or
rol
frstor
mov
dec
mov
inc
rcrb
fsubs
dec
inc
sbb
idivl
xor
dec
xchg
add
fildll
nop
and
pop
std
fsubrs
adc
sbb
inc
xchg
xchg
int3
insb
cmc
xchg
movsb
jle
mov
dec
mov
jmp
cmp
pusha
lret
jae
out
test
mov
fmulp
out
ss
out
mov
pusha
addr16
insb
lret
jl
mov
lea
xchg
cs
in
mov
call
loopne
lret
nop
aas
mov
mov
cmpb
pop
test
or
fwait
jg
and
pushf
xor
jmp
sub
shrb
lds
add
sbb
add
bound
mov
fwait
outsl
loop
mov
mov
shll
inc
add
stos
rcrl
fnsave
jne
negl
sub
push
lret
imul
rorb
or
mov
cmp
pushf
orb
and
push
pop
lds
out
jo
lret
and
outsb
xor
lds
fucom
out
adc
cli
pop
mov
shll
and
and
jg
imul
imulb
jb
leave
push
mov
daa
insb
pop
aaa
and
loope
jbe
push
das
pop
jbe
test
pop
xor
sbb
push
add
cmp
pop
mov
dec
mov
pushf
int
inc
jnp
sti
in
pushf
enter
jno
lret
xchg
mov
mov
mov
mov
pusha
pushw
mov
xchg
hlt
out
or
test
or
dec
outsb
bound
pop
sbb
cmp
cltd
outsb
fidivl
adc
xor
push
ds
pop
pop
loopne
cmc
sbb
aaa
cmp
ss
sub
arpl
jle
fwait
andb
pop
outsb
xor
and
adc
xchg
jmp
add
and
loopne
repz
mov
push
in
adc
xchg
adcb
lahf
or
sarl
out
and
mov
movsl
pop
xchg
push
sbb
pop
stc
or
cmpsl
dec
mov
adc
mov
movsl
data16
mov
xchg
loope
inc
and
xchg
push
dec
das
test
sub
mov
dec
movsl
inc
fdivl
dec
out
mov
out
out
mul
sub
insl
sbb
scas
and
test
daa
cmp
aam
jecxz
xchg
cmp
sbb
adc
stos
jnp
out
addb
cltd
mov
call
ljmp
stos
dec
ficoml
sbb
pop
dec
jae
mov
in
adc
jb
nop
xor
pop
sub
dec
in
fidivrl
in
or
imul
cltd
je
jecxz
push
imul
pop
jecxz
jo
sub
mov
fwait
xor
mov
lret
jo
mov
das
add
pop
jl
sbb
inc
inc
daa
cmp
mov
mov
jle
cmp
pop
in
cs
icebp
fwait
xor
dec
dec
and
mov
test
cwtl
rcrl
push
and
adc
icebp
sbb
jge
add
add
sub
cmp
lahf
cmp
rcll
clc
push
jle
jae
daa
jmp
inc
jo
pop
mov
lret
add
scas
mov
mov
int
jns
push
in
adc
and
data16
adc
jae
cmp
cli
lock
aaa
in
ljmp
jge
in
imul
cmpsb
sub
adc
mov
xorb
addr16
mov
icebp
inc
pop
mov
andl
xor
ret
pop
rolb
cmp
imul
or
sbb
xlat
xchg
xchg
pop
pop
aam
popl
adc
rol
mov
jge
and
mov
push
insl
add
out
cs
repz
or
aaa
scas
sub
push
add
add
jns
leave
je
pop
push
sub
mov
stos
mov
adc
int
dec
jp
cmp
ljmp
sbb
dec
lods
or
fldcw
pop
sahf
test
mov
icebp
andb
or
or
dec
sub
scas
insb
and
sub
inc
out
pop
fcmovb
adc
push
pop
imul
push
pushf
inc
fdivp
and
push
push
int
test
fistpll
pop
test
movsb
sbb
push
or
loopne
mov
enter
mov
xor
push
mov
cmp
sbbl
sub
sbb
sbb
xchg
leave
fdecstp
aad
imul
lods
fcmovu
or
aas
push
fidivs
pop
movsl
cmp
in
push
fwait
push
rclb
xchg
test
scas
or
test
dec
out
push
scas
sti
xchg
repnz
sbb
sarl
call
pop
pusha
repnz
clc
sti
push
pop
imul
and
cmp
sahf
xor
hlt
xchg
push
imul
sbb
fiaddl
xchg
ss
cmc
jns
push
ret
jbe
mov
and
jmp
sub
push
or
jmp
mov
mov
jnp
ret
insl
sub
add
xor
call
shr
in
mov
jae
mov
mov
dec
in
rcll
enter
push
xchg
lods
repz
sbb
pop
xchg
lcall
or
or
dec
pop
leave
cmpsb
imul
scas
lea
lds
jmp
push
addr16
jb
mov
fcoml
leave
movsl
mov
jns
fistps
xchg
sarb
icebp
push
inc
hlt
jae
add
mov
enter
push
into
xchg
push
rorl
adc
push
mov
loopne
xlat
xor
nop
push
daa
xlat
xor
andl
sbb
xchg
xor
dec
pop
mov
dec
xor
dec
sub
dec
outsl
fs
push
loop
outsl
inc
icebp
sbb
ss
xchg
mov
icebp
push
dec
arpl
mov
adc
ret
fwait
sbb
ret
jnp
mov
or
or
jo
inc
js
dec
stos
fs
in
mov
jg
or
in
inc
push
repnz
pop
aad
es
jl
inc
cs
das
ficoms
cmpsl
cmp
jp
lea
loope
jne
pop
stos
arpl
test
addl
cmp
add
mov
cld
push
repnz
es
inc
cs
add
inc
ficoml
aad
push
and
popa
scas
push
inc
fwait
cmpsl
jne
xor
loopne
inc
xchg
xchg
fstl
sub
dec
pop
out
sbb
mov
les
pop
sub
loop
jg
mov
ds
daa
add
nop
add
lret
imul
dec
out
inc
mov
inc
stc
push
int
in
sbb
cltd
ds
popf
stc
ret
or
adc
push
and
fs
jmp
xor
push
popa
mov
and
je
adc
gs
js
pushf
mov
cmp
fdivr
mov
push
adcl
jae
idivb
pop
xchg
sub
leave
fld
adc
or
xor
mov
or
jg
jbe
pop
pusha
pop
icebp
xchg
sub
ret
movsl
jecxz
lds
push
out
xor
repz
cld
mov
test
xchg
fimull
nop
rorb
mov
loope
push
adc
hlt
mov
xor
out
mov
xchg
add
aam
and
cmp
mov
sbb
test
lahf
lods
push
repnz
sti
fmul
push
stos
push
mov
xor
cld
subl
shrl
mov
fldt
mov
test
push
sbb
les
fidivs
enter
xchg
dec
cmpsb
es
xchg
cmp
pop
in
or
hlt
cmp
sti
cwtl
jecxz
leave
fsubl
outsl
jb
cmp
sarb
pop
mov
inc
xor
test
sub
and
lea
repnz
ja
push
es
jge
sub
add
std
aad
imul
andps
test
xchg
outsb
cmpsl
repz
jb
cmc
dec
inc
data16
and
lahf
jne
shlb
push
repz
out
inc
sub
insl
ret
mov
and
enter
sbb
sub
pop
ret
je
test
xchg
fsts
sahf
add
ds
add
push
out
gs
movsl
jnp
inc
in
inc
daa
pop
add
aam
lret
and
pusha
repz
push
test
fists
sub
fiadds
adcl
jns
inc
aas
sbbb
xchg
cmp
stos
fiaddl
lcall
cmovl
out
mov
dec
pop
xor
mov
mov
movsb
mov
sbb
inc
xor
jbe
and
arpl
add
xchg
out
dec
pop
mov
dec
xor
ret
out
push
mov
repnz
int3
jp
cmp
rep
lds
sub
insb
mov
jb
xchg
cmpsb
xor
enter
xor
dec
je
arpl
lds
jae
and
sbb
dec
stos
cmp
cmpb
or
dec
add
call
testb
arpl
pop
cmp
hlt
dec
repz
loope
cltd
xchg
ljmp
xchg
movsl
mov
mov
iret
icebp
loope
imul
push
mov
fs
in
inc
in
cs
add
mov
hlt
mov
inc
clc
push
cs
push
push
inc
jecxz
fcomps
aad
call
fisttpl
xor
outsl
xchg
pop
out
idivl
adc
adc
lods
or
pop
inc
inc
fwait
sarb
gs
push
scas
inc
out
push
cs
iret
sub
mov
pop
lods
or
jecxz
or
loope
xlat
add
rcll
pop
cmp
inc
jge
mov
std
sub
lcall
in
stos
setp
dec
mov
out
mov
rcl
adc
pop
jg
xor
sbb
iret
test
jno
andb
sub
jp
jp
sub
pop
inc
push
test
cmp
aaa
mov
mov
rclb
loop
inc
adc
adcb
cmp
cmpsb
les
xlat
pop
xchg
sbbb
pusha
and
out
cli
enter
mov
pusha
cmp
and
adc
ror
fwait
ror
jo
std
inc
dec
mov
fmuls
pcmpgtd
int3
pop
test
adc
loop
xchg
jo
add
stc
mov
stos
fs
sub
sbb
jle
in
movsb
dec
fadd
inc
fstpt
inc
lcall
icebp
insb
jo
into
shl
mov
mov
xchg
jb
shlb
icebp
arpl
add
adc
add
lock
in
push
scas
fs
sbb
rclb
push
test
mov
popa
clc
lods
mov
mov
data16
pop
rcl
lds
loop
push
and
mov
stos
push
fwait
push
dec
int
pusha
mov
sbb
rep
pop
ficomps
mov
push
cmc
adc
cmp
std
lods
inc
adc
call
sub
icebp
test
dec
sbb
dec
imul
sub
and
loop
in
add
dec
push
icebp
clc
xchg
sub
dec
add
cld
mov
adc
lods
jno
xor
mov
ds
push
mov
or
add
mov
jb
mov
cmp
int
into
jnp
lea
cmp
pop
push
andl
bound
shrb
es
out
aam
cld
imul
mov
ja
xchg
es
or
mov
xor
mov
inc
adc
xchg
and
cmpsl
ret
and
nop
xchg
es
outsl
fidivrl
notb
and
sub
jecxz
in
sahf
fdivp
or
test
sbb
xor
out
pushf
fwait
pop
xchg
sbb
in
sti
xchg
fsubrp
xchg
jl
sub
add
pop
sub
mov
push
aam
fidivrs
imul
sti
cmpsl
jbe
dec
xor
popa
xor
sub
xor
xchg
xchg
sbbb
test
or
fildl
test
insb
fidivrs
rolb
jne
gs
mov
xor
or
pop
andl
insl
mov
add
jns
jbe
and
jl
aaa
jmp
push
xchg
jmp
sti
jbe
mov
dec
lods
pop
in
aas
add
sub
mov
adc
mov
lods
inc
lods
sub
lcall
je
adcl
jmp
out
fs
xchg
ljmp
push
fld
push
lds
stos
fnstcw
fisubs
fildll
cmp
scas
mov
or
out
pushf
daa
xor
jmp
push
gs
cltd
pop
inc
leave
dec
repnz
and
lcall
loop
mov
jp
dec
push
inc
out
jns
loopne
mov
in
test
mov
cmpsl
push
outsb
lret
dec
insb
jmp
adc
mov
jae
mov
push
xchg
pop
orb
insl
pop
jne
dec
lods
mov
in
cmp
sbb
mov
push
xchg
xchg
sbb
mov
fsubrp
js
cmp
add
arpl
dec
cmp
in
inc
jg
ss
inc
dec
and
js
push
mov
notl
cmp
imul
out
es
aaa
iret
insb
shl
lcall
pop
adc
shr
pop
push
je
fisttps
gs
icebp
fldt
mov
popf
das
pop
xchg
cltd
shrl
icebp
adc
lods
or
mov
pop
xchg
sbb
dec
lock
xor
js
stc
push
adc
xchg
push
in
cltd
or
push
frstor
je
aad
xchg
lds
divb
and
or
ret
sbb
scas
ret
cs
sar
pop
or
in
mov
push
or
xor
inc
mov
lea
lea
jmp
cli
mov
ret
repz
js
xor
lret
incb
sti
push
outsl
mov
les
mov
insb
nop
sbb
out
in
push
push
repz
bound
call
sti
int3
test
jp
test
lods
imul
pop
pop
xchg
sub
cli
lret
popa
mov
iret
cli
loop
mov
pusha
mov
rorb
call
push
inc
push
call
mov
sbbb
cmc
loop
scas
aad
dec
pop
roll
mov
and
dec
xchg
pop
imull
sub
jbe
lea
mov
jmp
inc
sbb
adc
xor
ret
push
xchg
dec
dec
mov
fnsave
ret
outsl
inc
dec
orb
or
pop
bound
shlb
fisubs
sarl
div
cltd
pusha
sub
nop
push
cmp
adc
pop
dec
nop
das
popf
xor
jae
cmpsb
dec
cmpsl
xchg
push
adc
xchg
mov
icebp
pop
repz
popf
mov
fisubs
lods
xor
or
pop
subb
stos
lods
mov
xchg
mov
neg
jle
fsqrt
push
or
add
aas
jmp
sbb
or
mov
movsb
call
test
bnd
loope
pop
push
inc
mov
push
imul
sub
pop
jne
and
aaa
cmp
adc
ret
mov
cli
xchg
and
sbbb
imul
aam
mov
nop
cli
jmp
fimull
sub
nop
xor
jg
sub
mov
outsl
mov
inc
ljmp
xor
mov
lcall
es
mov
push
adc
into
out
lret
repnz
or
xchg
xchg
mov
movsl
add
mov
je
inc
sub
cmpsl
pop
add
call
sti
pop
jae
adc
in
cmpsb
adc
sub
stos
xlat
fildll
in
dec
imul
cmp
mov
mov
or
or
nop
lea
dec
movsb
lcall
adc
lahf
or
rorb
lcall
cmp
aaa
adc
mov
imul
lods
in
cmpsl
sub
jge
mov
loopne
push
lret
inc
clc
sar
mulb
aam
pusha
mov
fists
or
jge
sbb
outsb
and
cmpsb
pop
inc
inc
dec
jmp
dec
out
pop
lods
jo
cmpsl
shll
or
and
das
stos
mov
std
add
xor
xlat
lods
push
fsubrs
fs
dec
pop
cmc
aad
jbe
push
xor
push
push
js
and
bndstx
push
jecxz
and
mov
jmp
sub
inc
out
divb
lds
inc
or
dec
mov
cli
rolb
popl
push
push
jne
xor
jecxz
mov
xor
mov
adc
in
mov
mov
lea
mov
adc
add
dec
pop
ret
fists
fdivrs
or
pop
sbb
popf
or
inc
dec
loop
add
scas
xchg
and
fwait
xor
repz
scas
cli
push
test
ss
mov
sbb
xor
out
jmp
pop
mov
push
sti
mov
aad
pop
dec
adc
ljmp
adc
dec
add
subl
dec
fbstp
xchg
fldt
stc
sub
cmc
cmp
push
xchg
lahf
sbb
hlt
cmp
cmp
dec
push
les
push
adc
sub
imul
int
xor
aam
daa
lret
outsb
ret
lea
les
dec
add
fninit
jbe
in
cmp
lods
sbb
rcll
inc
shll
rol
call
lret
cld
cmpsb
lods
mov
int
jns
dec
jb
fs
and
cmpb
adc
mov
xor
jne
or
mov
scas
mov
loop
mov
jno
lret
sub
into
gs
les
test
lret
add
and
popf
repnz
mov
xchg
mull
lods
fcom
sub
enter
pop
add
add
pop
or
sbb
dec
add
nop
push
cs
xchg
leave
adc
pop
adc
adc
jnp
mov
imul
pop
lret
insb
mov
stos
es
jmp
test
mov
test
mov
lock
mov
mov
aam
xlat
imul
ds
imul
pusha
fiadds
je
loope
pusha
outsl
sbb
cmp
faddl
or
in
flds
aam
xchg
jne
test
xor
add
ret
out
into
dec
aaa
inc
int
mov
sbb
add
inc
cmpsl
out
mov
aam
outsl
out
xchg
fcmovu
inc
dec
aaa
push
int
mov
lret
fldl
jg
ss
bound
push
lret
call
sub
dec
loop
jge
sbbl
das
or
lret
push
push
xchg
pop
xor
stc
or
call
cmpsl
or
pop
push
mov
sbb
aaa
nop
lods
xor
out
adc
sbb
push
fldenv
mov
arpl
push
fcompl
or
or
popf
test
inc
or
xor
or
push
je
cmpl
dec
nopl
ret
cs
fisubrl
mov
add
pushf
fs
and
xor
in
aas
mov
mov
mov
jne
fisubrl
adc
pop
int
test
out
sbb
jecxz
mov
stc
mov
push
pop
lret
dec
pop
sbb
mov
adc
lret
dec
clc
jnp
loopne
inc
js
cmp
fisttpl
or
shll
ds
in
ret
or
scas
pop
cltd
fbstp
or
shlb
fnstenv
inc
jle
jne
notl
sahf
popa
divl
aam
pop
stos
mov
sub
rcl
jo
outsb
jge
les
add
pushf
push
xlat
jae
adc
add
mov
std
int3
adc
pusha
xor
cltd
mov
arpl
shr
jp
arpl
xchg
rolb
push
inc
jbe
dec
test
scas
es
out
test
xor
mov
pop
cmc
or
jle
lret
int3
pop
jb
xchg
sub
jnp
inc
lods
out
pop
leave
inc
mov
test
add
inc
cs
sub
xor
lds
xor
sbb
sub
incl
pushf
xchg
fwait
outsb
sbb
insb
mov
pop
fbld
out
fistpl
cmp
fildll
jno
or
pop
sbb
push
adc
cmp
imul
arpl
jge
xor
or
jle
xor
outsl
sub
push
pop
mov
pushf
cmp
lods
or
shll
data16
sbb
mov
scas
dec
adc
mov
mulb
dec
imul
mov
ret
icebp
lret
cmpsl
movsl
cmp
mov
cli
push
scas
inc
lret
adcb
jl
hlt
arpl
adc
push
jecxz
and
mov
jo
std
imul
add
xchg
xchg
or
mov
sbb
ds
jle
enter
mov
mov
dec
scas
imul
aad
jle
into
divb
xchg
imul
ss
lds
xchg
out
pop
call
mov
mov
cltd
add
cmp
scas
movsl
mov
mov
jp
push
shlb
mov
push
movsl
jg
mov
lret
dec
aaa
jb
pop
movsb
inc
icebp
insb
sub
imul
outsb
sarl
insb
shrl
xor
xlat
xchg
push
jne
ret
sbb
sbb
fdivs
scas
push
xor
addr16
dec
inc
pushf
scas
add
leave
jns
adc
sarb
and
insl
sbb
popa
sbb
xchg
inc
lret
jge
pushf
mov
lock
stc
sub
pop
xchg
addr16
sbb
sub
add
insb
push
xor
stos
inc
scas
mov
inc
jecxz
mov
jle
shll
inc
bound
in
xchg
dec
jge
andl
addl
sbb
adc
jns
xchg
inc
rcrb
adc
inc
in
jne
f2xm1
xlat
xchg
sub
shrl
iret
sbb
icebp
pop
mov
dec
jmp
sti
pop
adc
dec
pop
insl
stos
outsl
rcll
dec
cmp
push
jb
ja
xchg
orl
add
test
sub
push
notb
and
push
add
dec
xor
xchg
loope
test
cmpsl
sbbl
or
sbb
pop
std
pushf
sti
dec
std
sbb
sbb
incl
and
es
or
lea
jae
call
loope
bound
mov
stos
popa
div
repnz
sbb
sub
popa
jns
xchg
jae,pn
movsl
dec
pop
outsb
adc
scas
fldcw
inc
mov
rcrl
add
outsl
mov
push
scas
jne
pop
cwtl
or
adc
lret
fstp
and
and
jae
mov
push
pop
int
add
mov
push
xchg
scas
daa
add
xor
sbb
xor
movsl
inc
inc
les
and
cmp
imull
in
icebp
pop
push
aad
push
lret
push
adc
push
cmpsb
sub
daa
sub
or
adc
scas
mov
xchg
out
mov
inc
scas
repz
fidivl
in
ja
sub
pop
adc
out
shrb
mov
push
cwtl
adc
cmp
lea
sahf
and
sbb
icebp
scas
out
test
adc
inc
dec
inc
mov
lock
jp
sbb
orl
mov
xchg
cmpsb
out
adc
js
jge
or
lods
shrl
pop
push
push
pop
push
pop
mov
pop
adc
int3
scas
add
dec
add
push
inc
add
or
addr16
push
jo
cmp
stos
xchg
mov
or
test
pop
and
fsubp
and
and
jle
push
mov
sub
loopne
rcll
cmpsl
adcb
in
mov
dec
jae
push
jl
stos
add
mov
or
cmp
popf
cmpsb
test
mov
cmpsb
or
cmp
pop
or
jmp
scas
fdivs
lcall
xor
xchg
cmp
out
xor
insl
sub
bnd
xor
in
cs
lea
pop
repz
gs
inc
xchg
stc
dec
dec
arpl
or
outsl
push
jns
dec
pop
lret
jbe
pop
ljmp
jno
loope
leave
cmp
lret
mov
jg
test
sbb
ds
repz
mov
ret
add
xchg
out
hlt
mov
mov
mov
stos
ja
pop
xor
xchg
pop
adc
adc
dec
rcrb
int
icebp
shll
icebp
fwait
aas
fldt
ja
adc
xchg
mov
and
add
add
icebp
icebp
adc
push
aas
add
gs
xchg
dec
sub
mov
add
pop
je
ret
jl
in
pop
lds
mov
insl
ret
jmp
std
and
dec
je
cmc
data16
pop
popf
je
idivl
mov
scas
pop
aas
inc
fcomps
pop
sub
xor
out
sti
dec
fucom
xchg
add
mov
addb
push
adc
xor
mov
cmp
inc
mov
je
test
mov
or
inc
pop
dec
push
mov
push
leave
add
into
sub
out
mov
cmpl
ret
sti
dec
pop
ss
hlt
pop
fst
das
mov
andl
cltd
out
jle
ficoms
xor
mov
shl
in
mov
outsb
add
sbb
andl
out
out
mov
test
xlat
arpl
or
add
inc
shl
imul
loop
add
xor
and
pop
or
lcall
sbb
dec
leave
pushf
insl
les
roll
imul
fwait
cmpsl
jl
shrb
pusha
sub
mov
fdivrs
dec
xchg
dec
imul
imul
push
cmp
stos
cs
icebp
xchg
lret
aaa
push
stos
in
fnstenv
iret
adc
jecxz
inc
test
stos
fidivs
test
cmp
out
cmc
cmp
or
push
jbe
sbb
mov
std
gs
out
and
lahf
mov
jecxz
jge,pt
add
sbb
cwtl
outsl
jae
ret
in
mov
pop
call
cli
mov
xorb
adc
out
and
shll
xor
lea
mov
ret
sub
adc
or
cmpsl
jb
fmul
dec
push
jl
or
repz
adc
mov
cmpsb
mov
stos
xchg
aaa
jmp
hlt
mov
imul
pop
add
clc
dec
pusha
cmpsl
ds
and
mov
add
jl
push
xorb
mov
xor
insl
xlat
in
mov
mov
and
xor
push
sub
mov
aad
pop
test
mov
sub
mov
ret
xchg
cld
mov
push
sub
mov
mov
outsl
mov
lea
sub
pusha
dec
jbe
icebp
push
pop
out
lods
xchg
adc
inc
add
adc
outsl
sub
test
xchg
or
xor
pop
jmp
push
aas
fsubrs
pop
cmp
mov
insl
out
stc
je
cmp
mov
mulb
dec
ret
jmp
movsb
push
pop
mov
push
add
fisttpl
push
mov
or
mov
jns
jo
aad
lcall
in
sub
mov
cmp
filds
lods
mov
fistpll
mov
pop
dec
loopne
testl
cmp
sbb
scas
mov
pop
push
cmp
inc
mov
push
sub
sbb
arpl
nop
sub
movsb
push
mov
pop
leave
aaa
fcmove
sub
push
xchg
adc
in
lret
mov
xchg
push
sub
rorl
jg
xchg
push
mov
pop
adc
enter
push
lds
sti
aas
dec
loop
testb
scas
adc
mov
js
adc
mov
push
int3
mov
inc
scas
cmpsb
push
mov
ljmp
outsb
inc
stos
jbe
pushf
mov
inc
cmp
leave
int
xor
scas
dec
mov
adc
mov
push
in
push
mov
cmp
xor
jecxz
mov
inc
pop
stos
int
fimull
jmp
movsb
subl
ds
mov
dec
or
rcpps
testb
or
mov
shrb
xor
pusha
jp
shll
wrmsr
stos
jle
cmp
jecxz
lock
push
cmp
cmp
daa
sti
test
pop
testb
mov
bound
outsl
xchg
jne
jo
mov
lret
fnstsw
fstpl
repnz
push
ljmp
xor
repnz
xchg
cld
jecxz
test
les
jb
cmpsl
ds
xchg
add
out
cmp
push
or
push
rol
sarl
aam
test
push
push
rcll
nop
imul
push
je
push
sbb
outsb
into
in
mov
cmpsl
movsl
movsb
jg
add
mov
push
les
scas
in
jne
stos
cmp
jne
cld
adc
jnp
pop
imul
jnp
cmpsl
lods
cmp
lds
daa
sbb
outsb
cwtl
and
lahf
push
adc
out
test
add
test
fidivs
pop
mov
xor
xchg
xor
adc
aad
shll
lds
sub
mov
out
lret
jo
mov
not
push
insb
mov
sbb
dec
sbb
jg
movsb
cmp
mov
xchg
cmp
sarl
int
scas
insb
add
push
sub
cmp
sbb
sub
notb
sbbl
daa
jecxz
push
dec
jae
push
pop
aaa
nop
daa
arpl
mov
ret
inc
lea
fbld
imul
iret
xor
mov
imulb
ficompl
xchg
popa
push
mov
xor
cmp
out
in
cltd
sti
adc
adc
dec
scas
jo
jae
incl
pmulhw
pop
daa
cli
jl
mov
xchg
loop
or
sbb
jle
add
xchg
insl
xor
jge
nop
scas
push
sub
jp
ja
pop
and
dec
lods
insb
sahf
idivb
jge
pop
or
mov
jo
sbb
push
fstl
inc
or
jle
divl
pop
add
add
pop
cmp
dec
flds
push
stos
pushf
scas
in
sbb
xor
insl
mov
push
push
dec
fdivl
js
cmp
jmp
les
dec
jecxz
ds
jp
xor
or
rorb
jo
in
xor
in
ret
push
test
int
jo
pop
mov
pcmpgtd
mov
fdiv
addr16
lods
inc
cmc
cltd
mov
push
int3
cmovno
push
mov
mov
cwtl
loop
push
sti
push
stos
pop
mov
jg
xor
cmp
or
pop
dec
and
mov
mov
fcoms
inc
push
dec
jb
popf
jae
loop
loop
addb
fwait
push
cmpsl
cmp
outsb
mov
lods
lds
mov
hlt
sub
jae
mov
pushf
lock
ret
pop
nop
mov
loope
jge
insl
sub
jecxz
inc
insl
mov
and
push
mov
cltd
sub
in
ljmp
loope
mov
push
movsb
cmp
pop
pop
adc
jmp
nop
dec
aam
sahf
fsubrl
cld
stos
dec
scas
xor
dec
jecxz
xchg
lods
popa
sbb
mov
push
test
mov
mov
pop
lea
or
and
mov
adc
clc
ret
cmp
adc
imul
and
sub
das
loopew
add
call
pop
mov
push
jo
mov
in
push
jnp
shrb
mov
loope
cmp
cltd
cmc
out
mov
test
lcall
out
notb
cmpsl
out
test
or
mov
decb
or
mov
xchg
sub
inc
and
add
cltd
fwait
scas
xchg
jb
push
push
loope
inc
push
mov
fbld
or
loope
sub
test
mov
lods
mov
jg
push
popf
leave
cwtl
cmpsb
dec
out
scas
repnz
sarl
mov
fiadds
fdiv
inc
ds
dec
int
movsb
imulb
sub
shll
je
insl
fistl
dec
fcoml
sbb
mov
out
out
std
push
leave
insb
fs
addr16
shlb
push
and
mov
or
mov
jbe
mov
ror
mov
inc
popf
mov
pop
ficompl
or
xchg
push
sub
popa
inc
dec
fs
sbb
ret
outsl
xor
pop
cs
sub
pop
adc
fnstcw
daa
add
mov
pop
aaa
clc
mov
lea
xchg
adc
inc
dec
mov
mov
mov
cmp
xor
or
fcmovu
cwtl
sub
inc
pop
ljmp
push
rolb
dec
int3
popf
das
icebp
xchg
cmp
notb
xchg
mov
fwait
mov
fnstenv
pusha
ss
aaa
and
cmpsl
dec
sbb
loope
outsl
cmp
dec
hlt
jmp
loop
sbb
mov
fsts
pop
mov
das
in
roll
xor
scas
and
into
or
stos
scas
ljmp
xor
shll
mov
sti
stos
inc
pop
or
add
inc
xor
test
mov
push
data16
sbbl
adc
mov
xor
sub
mov
jo,pt
and
dec
test
mov
fstl
fimull
lods
gs
mov
jmp
or
jecxz
adc
rclb
mov
mov
js
mov
js
jno
stos
push
sbb
mov
outsl
jp
adc
mov
sbb
xchg
add
cli
repnz
xor
lcall
pop
adc
sbb
shr
shl
xor
jecxz
bound
les
lret
mov
popa
ds
mov
divl
mov
and
test
mov
inc
fisubrs
mov
push
jg
idivl
mov
push
mov
cmp
mov
shrb
cmp
nop
dec
dec
mov
rcll
imul
lods
fadds
cmpsl
stos
pop
and
inc
ror
push
dec
aas
mov
pop
jbe
cmp
adc
pop
dec
fmul
fcomi
sub
inc
movsb
dec
cltd
fisubl
ds
inc
in
aad
push
fldenv
add
mov
push
dec
pop
jmp
dec
sbb
pop
push
jne
inc
jecxz
xchg
cmp
mov
or
js
fwait
dec
cmpsl
out
loopne
ficoms
sbb
enter
rcrl
mov
pop
enter
fstpl
mov
mov
lret
sbb
ds
addr16
in
incb
mov
mov
xorl
out
push
in
outsb
ds
jl
data16
mov
ret
adcb
dec
mov
pop
into
add
push
sbb
mov
or
roll
movl
inc
filds
mov
js
push
inc
scas
cmpsb
xor
in
pushf
test
lds
loopne
je
call
cmp
or
push
add
pop
dec
mov
lret
movsl
jbe
scas
outsl
adc
test
addr16
and
jo
jl
and
and
inc
aas
cli
xchg
mov
pop
sahf
stos
xchg
cltd
mov
mov
xchg
lea
sbb
nop
push
les
or
outsb
test
test
adc
data16
xchg
imull
movsb
movsb
cmp
mov
fistpl
jle
bound
js
pop
stos
push
leave
push
je
fbstp
xchg
mov
lcall
cmpsl
xor
pop
xor
pop
int3
push
xor
dec
cmp
aam
jp
xchg
mov
xlat
lock
shll
mov
sbb
push
pop
cmpb
popf
pushf
pop
repz
pop
jecxz
sarb
les
and
lock
dec
lret
mov
in
shlb
and
dec
adcb
mov
aad
fiadds
clc
je
dec
loopne
ret
xchg
mov
call
jp
xor
sbbb
pop
addr16
cwtl
jge
test
enter
inc
in
dec
add
bnd
fcompl
lea
sar
or
lret
dec
pop
int
inc
inc
cmp
sahf
xor
inc
xchg
inc
sbb
mov
sub
lods
in
pusha
sub
adc
mov
test
cmp
cmc
repnz
xchg
inc
clc
out
cmp
shr
jp
gs
add
mov
pop
mov
mov
popa
leave
rol
pop
jecxz
call
sub
xchg
push
ljmp
jno
in
sbb
mov
mov
push
dec
addr16
fisubrl
rol
insl
sbb
adc
ficoml
out
pop
add
sbb
push
cwtl
push
gs
fdivl
pushf
dec
lods
jb
sbb
addr16
cmp
lcall
ja
out
sub
dec
and
jecxz
dec
in
inc
cmp
lret
lcall
push
mov
ss
push
stos
jmp
mov
cmc
sarl
and
cmp
popf
neg
add
mov
in
test
mov
fisttpll
stc
jle
push
push
daa
jl
fsubrs
xchg
sub
cmp
das
jno
test
lret
xchg
add
call
or
add
add
adc
fsts
pop
ja
xchg
ds
cli
jge
pop
movsl
xchg
jns
xchg
pushf
sbb
sahf
xchg
lock
mov
dec
lahf
dec
jno
shl
cwtl
es
push
sbb
add
ret
jmp
push
packssdw
cltd
sbbb
sub
mov
xor
inc
add
push
push
push
fimull
hlt
inc
cmpsl
popf
jb
scas
scas
or
lahf
xor
fdivrs
test
mov
dec
insl
add
xchg
push
and
fidivrl
add
pop
push
push
mov
clc
enter
sbb
popl
mov
cmpsb
dec
int
call
cwtl
jl
stos
scas
js
jb
dec
cmp
jg
repnz
arpl
or
sbb
sbb
cltd
and
outsl
fnsave
pop
movsl
mov
mov
dec
sub
je
jns
imull
mov
adc
inc
dec
in
sbb
out
push
cmp
testb
test
shl
mov
out
and
mov
cli
jne
pop
leave
xlat
roll
dec
mov
mov
scas
js
jecxz
mov
pop
test
les
inc
push
test
adc
xchg
mov
mov
inc
xor
dec
out
cmp
arpl
push
int
and
and
test
dec
mov
dec
mov
fmull
push
pop
stos
adc
sub
lret
je
repnz
dec
adc
shll
push
sub
shrl
jecxz
xlat
int
lcall
nop
jp
ds
fs
cmp
jg
sbb
push
mov
sub
push
out
sub
insb
dec
or
dec
adc
dec
rcrl
insb
jb
sbb
jle
add
sbb
scas
add
cmp
icebp
ljmp
insl
cwtl
popf
mov
xor
lock
xchg
insl
mov
pop
hlt
mov
mov
cmp
sbb
push
andb
cwtl
outsl
aad
sbb
add
push
shrb
jle
cld
mov
enter
ret
ret
sbb
stos
mov
adcb
mov
and
mov
inc
fisubrl
cmpsb
out
or
inc
mov
repz
sub
sub
lock
fbld
xchg
ja
aas
outsl
incl
pop
out
pushl
scas
push
sbb
test
stos
xor
pushf
mov
mov
popf
fmull
and
sarb
outsb
cmpsb
inc
or
mov
xchg
mov
pop
push
add
xor
nop
pop
mov
xchg
sbb
call
or
cmp
test
sbb
xchg
adc
cs
cltd
movsl
xchg
int
sahf
sub
fwait
ljmp
subl
dec
lock
fldt
pop
shrb
fistpll
or
loop
or
jne
sbb
adc
push
add
xchg
xchg
cld
push
mov
lods
arpl
jl
dec
jo
jle
inc
or
dec
xor
add
push
repz
or
jno
sbb
mov
jnp
cmp
xchg
push
repnz
shl
jp
pop
sbb
adc
fwait
enter
adc
out
jge
mov
jge
jne
out
jnp
pop
mov
pop
inc
pop
ret
imul
popf
out
jnp
mov
or
mov
xchg
mov
add
jnp
sbb
cli
adc
or
mov
dec
jg
xor
mov
jnp
aas
aad
cmp
pusha
and
adc
es
lea
fdiv
sbb
sub
cltd
ds
out
xchg
or
mov
imul
mov
inc
into
lret
bound
shlb
negl
stc
sbb
pop
lods
shlb
clc
fcomps
dec
adc
lods
iret
pop
or
seta
push
jae
loopne
dec
in
adc
mov
out
mov
pop
inc
mov
rcrl
addl
pop
in
mov
mov
jmp
jns
pop
mov
jl
push
addr16
out
or
in
stos
testb
xor
push
sbb
shr
pop
gs
jae
jb
shll
in
jnp
mov
pop
jne
stc
cmp
xor
loope
js
shr
pop
pop
xor
lcall
mov
in
repz
xchg
push
int
aam
out
out
mov
pmaddwd
add
cmpsl
mov
xchg
cs
shll
jmp
jno
cmp
sbb
cmp
dec
cmp
xor
rorb
pop
jle
sar
movsb
jbe
pusha
sbb
rcll
fnsave
pop
cmp
push
mov
loope
jp
or
push
add
add
xchg
cmp
xlat
and
push
sub
ja
xor
inc
inc
andl
mov
pop
cld
inc
sub
sbb
test
sub
cmp
sub
xchg
sbb
cmp
push
lock
mov
push
jmp
loop
push
in
aas
out
push
shlb
add
and
sbb
cmp
ja
in
sarb
pop
or
ficoms
cmp
sub
mov
mov
ja
push
sarl
cmp
outsl
sbb
cmp
xchg
sub
sub
jmp
cmpsb
sbb
or
imul
mov
cmp
mov
jge
inc
jnp
and
arpl
mov
popa
inc
fcoml
cmp
push
sbb
push
sub
jns
lds
test
cmp
xchg
cmc
lds
into
mov
adc
aas
xchg
aam
sbb
std
stos
test
enter
imul
add
jnp
push
mov
sub
cs
pop
dec
mov
inc
out
jns
jl
enter
popa
test
xchg
mov
ret
lods
aaa
leave
pop
inc
cltd
mov
push
inc
fmull
movsl
cmpb
sub
fisubrs
scas
cmp
idivl
shl
shr
test
call
push
movb
dec
repnz
bound
sbb
std
pop
push
add
xlat
outsb
mov
push
push
test
inc
add
fisttpl
sbb
pop
or
ret
jp
imul
movsb
mov
es
cmp
loope
add
stos
mov
fisttpl
pop
cmp
scas
sub
in
iret
add
add
ljmp
pop
adc
dec
mov
xchg
insl
cmpsl
xor
stc
movsb
xchg
rcr
les
xor
mov
fwait
mov
jl
test
cmpsl
ret
ret
aam
push
pop
inc
es
test
adc
xchg
fwait
sbb
loop
call
mov
jp
sbb
or
mov
push
jb
xchg
lahf
fnstcw
lods
ja
push
movsl
gs
sub
add
das
or
and
mov
push
shrl
pop
push
inc
inc
jno
add
loopne
outsl
not
ss
adc
shrl
jmp
icebp
mov
rorl
jbe
inc
adc
xchg
mov
ja
jmp
repz
cmp
inc
mov
xchg
scas
pop
adc
push
cld
rol
sub
popf
or
rcrb
mov
push
mov
aas
dec
stc
sub
jmp
in
cmpsl
shlb
jg
push
es
inc
in
sub
or
ja
sub
sti
outsl
xchg
insl
xchg
pop
cmc
xchg
jl
test
sbb
adc
bnd
stos
fiadds
xchg
mov
in
jp
je
roll
xor
jle
int
cmc
lahf
cmp
into
repnz
mov
lods
xor
mov
fnstenv
fisubrl
push
push
mov
aas
push
repnz
mov
fwait
cmc
pop
adc
fsubl
mov
add
mov
rcrl
mov
lea
mov
and
repnz
sub
jl
adc
cmp
sbb
inc
les
dec
push
xchg
push
popf
mov
mov
cmp
push
push
or
cmp
cwtl
call
dec
and
sbb
leave
sbb
and
jo
movsb
call
mov
filds
xchg
add
xchg
mov
mov
pop
lret
mov
cmpsb
leave
push
xor
lock
sbb
xchg
jg
dec
shll
iretw
mov
mov
iret
dec
xchg
jbe
aam
sub
ror
test
sub
cmp
xor
aaa
mov
adc
mov
inc
scas
xchg
mov
jae
imulb
es
adc
into
pop
mov
icebp
cwtl
in
cltd
pop
xchg
popl
xlat
mov
xor
repz
push
idivl
sub
ljmp
outsl
xchg
add
mov
fsubrl
fsubrl
push
fnstsw
js
mov
in
loope
pop
ljmp
push
ror
adc
adc
push
jge
mov
into
inc
sbb
cld
cmpsb
cmp
es
aaa
dec
jge
pusha
mov
shll
pop
in
data16
push
je
repz
xchg
ret
scas
mov
rcll
mov
insb
mov
out
lss
shl
push
movsb
shrl
sahf
sub
mov
fdivl
sub
ljmp
in
insb
pop
dec
ds
into
lcall
scas
add
hlt
jbe
adc
fwait
or
je
cmp
jl
mov
mov
mov
or
push
mov
jl
hlt
scas
jge
lea
sbb
les
and
sbb
shlb
lods
mov
xchg
mov
and
pop
jg
stc
xchg
popf
mov
mov
cmp
hlt
mov
pop
ret
xchg
sbb
das
push
arpl
xchg
mov
test
or
cmpsb
jnp
push
mov
or
push
std
xchg
push
int3
xor
cmp
lds
push
andb
jns
enter
out
pop
aad
mov
inc
mov
xchg
xor
ret
sti
scas
inc
ret
push
sbb
adc
jo
inc
mov
ror
mov
inc
movsb
out
sub
mov
cmp
in
lea
mov
jg
or
add
fcmove
lcall
adc
in
sub
ja
fildll
ds
pop
popa
push
in
shlb
hlt
js
dec
pop
or
mov
outsb
add
add
lahf
rclb
nop
aad
dec
xchg
sarb
push
aaa
int
mov
xor
in
nop
test
addr16
popw
mov
notl
movsb
movsl
faddp
or
enter
sub
mov
jae
dec
sub
adc
movsb
inc
les
test
cs
leave
adcl
push
sub
in
mov
inc
imul
adcb
cmp
add
imull
stc
popa
cmp
pop
xchg
mov
js
mov
xor
cmp
inc
cltd
pop
icebp
leave
push
mov
ja
shl
lret
les
pushaw
xchg
loop
dec
insl
leave
jne
das
mov
cmpsb
cmpsb
lock
jae
xlat
jo
xchg
div
mov
jp
cmc
cmp
mov
push
imul
mov
cmc
outsl
adc
inc
xlat
and
jae
inc
jecxz
add
fisubrs
movsb
mov
int
pop
dec
imul
push
lods
in
loop,pt
jnp
xor
fisttps
adc
lock
jae
pop
out
xchg
adc
cld
outsl
insb
add
sub
cmp
pop
xchg
dec
imul
pushf
rcr
xlat
push
mov
adc
es
mov
and
mov
test
push
xchg
test
les
jae
cli
mov
xor
ret
loopne
pop
xchg
jno
or
inc
or
dec
ljmp
xor
xor
xor
xchg
dec
cmp
ret
cmp
cmp
mov
xor
cmpsb
jge
xlat
ret
xchg
xchg
sahf
add
sub
pop
das
cmpb
cmpsl
lds
addl
jo
pop
dec
push
jp
or
mov
xor
jb
and
test
fisubrs
adc
shl
jg
jl
loopne
test
imul
sub
sub
cmp
mov
sub
pop
mov
sub
add
pop
jae
inc
add
cld
jl
sbb
mov
or
jbe
adc
inc
pop
clc
mov
and
xchg
mov
adc
jb
lock
jmp
adc
dec
adc
rol
inc
sub
or
mov
xchg
jle
push
loope
lret
roll
pop
and
out
jb
jl
pop
dec
scas
lret
inc
xor
test
mov
adc
dec
inc
incb
xchg
jae
adc
adc
sbb
repz
jo
arpl
sub
mov
jb
cmc
fsubl
lahf
xchg
adc
dec
arpl
jmp
std
aas
pusha
stos
xlat
cmp
jnp
not
lods
pushf
pop
push
in
sti
xchg
or
fdivrs
addl
lock
cli
cmc
repnz
xor
ret
mov
adcl
dec
scas
repz
dec
push
ficompl
out
jbe
cmp
adc
jp
adc
je
js
mov
test
cld
xchg
aad
inc
pop
pop
xor
adc
hlt
popa
xchg
aam
add
cmp
and
inc
out
xchg
hlt
out
cmpsl
cmp
out
lds
push
inc
mov
or
lods
pop
cmp
aam
cmp
sbb
pop
sbb
cmpsl
test
push
mov
mov
pop
popf
aas
sahf
shlb
sbb
dec
xor
push
xchg
jl
ret
outsl
call
outsl
das
mov
mov
dec
insl
fcmovu
mov
cmpsb
push
jae
mov
cmp
iret
cmpsl
fnstsw
mov
push
std
or
fstpt
call
ja
push
mov
test
aad
repz
cmp
cs
dec
daa
test
shrl
adc
jb
shlb
push
stos
mov
out
out
adc
scas
cmp
psubusw
adc
jl
and
push
cltd
adc
pop
adc
adc
dec
cmpsb
imul
repz
adc
jbe
adc
add
inc
outsl
dec
cli
xorl
inc
push
inc
in
cmp
jb
out
mov
sbb
jnp
lcall
add
mov
jl
fwait
clc
inc
push
push
lret
xor
pop
fs
sub
add
je
xchg
mov
call
xor
repz
sbb
in
cmp
pop
test
int3
outsb
lcall
jmp
add
and
add
in
cwtl
test
movsb
push
mov
pop
xchg
test
ja
subb
call
or
jecxz
inc
push
mov
cmpsb
les
jecxz
jae
mov
popf
in
mov
sub
int3
dec
lcall
cmp
mov
in
clc
mov
cmp
mov
outsb
iret
mov
dec
cltd
push
icebp
out
pop
enter
xchg
daa
pusha
hlt
rol
imul
fiadds
ret
pop
aaa
cmp
xchg
mov
stos
cmp
jns
arpl
out
and
int3
enter
fidivrl
int3
enter
pop
pop
mov
addb
and
ret
outsb
mov
jnp
movsl
xchg
mov
jg
imul
addr16
mov
ljmp
sbb
je
jl
sbb
adc
ss
dec
jns
jge
sbb
jl
jg
cltd
sbb
inc
into
mov
jmp
out
int
cld
in
ss
psubd
cmp
dec
cmpsl
mov
push
lret
test
xchg
mov
mov
mov
cvtpi2ps
bound
pop
and
xchg
push
xchg
pop
cmc
cmp
sar
and
xchg
mov
js
xchg
mov
or
jecxz
jg
xorb
push
and
cwtl
fs
and
mov
inc
popa
xorl
incl
icebp
das
mov
mov
sbb
negl
xor
pop
jbe
cmpsl
pop
stos
mov
and
outsb
movsb
add
fcoms
mov
xchg
cmp
lret
jo
pop
sarl
cmp
pop
repnz
mov
lret
adc
test
push
jbe
push
nop
cmp
and
xlat
subl
push
xchg
fcmovb
push
stc
jae
lock
fs
dec
mov
js
inc
mov
insl
jecxz
data16
xor
les
out
mov
lret
mov
gs
mov
push
cli
sub
xchg
mov
clc
jns
push
fcmove
dec
pop
repnz
aas
test
xlat
scas
sbbl
imul
dec
and
int
lds
fidivrs
mov
sbb
cld
jl
insl
fwait
or
xlat
int
test
in
adc
mov
not
repnz
adc
xchg
pop
mov
sub
divl
mov
or
pushf
sbb
mov
gs
test
cmp
cmpsb
imul
aam
jne
out
lds
push
mov
add
loope
test
cld
jbe
mov
xchg
loop
jl
jb
adc
jg
add
sbb
xor
daa
jb
sahf
decl
xchg
fcmovne
ret
mov
in
and
jmp
sti
jge
add
lock
dec
fnstcw
lret
lret
clc
xor
ja
inc
enter
mov
adc
lds
jnp
sbb
clc
xor
xchg
push
fbstp
and
sub
push
cmp
inc
cmp
add
xor
out
or
sbb
push
and
sbb
aam
cmp
lret
cld
dec
inc
push
dec
int3
push
outsl
push
nop
cmpsl
sbb
add
sbb
pop
ret
inc
insb
sti
fucomi
dec
stos
inc
inc
mov
dec
mov
popa
call
xor
xor
sahf
xchg
cmc
mov
mov
inc
ret
xchg
cmp
repnz
mov
inc
testl
ret
sub
jo
movsl
stc
xchg
mov
jl
push
negb
nop
aas
addr16
fwait
mov
movsl
jbe
mov
inc
stos
pop
xchg
int
inc
xlat
cmpsl
loop
in
daa
cmpsb
mov
cmp
mov
loop
jp
push
int3
sbb
dec
in
int
inc
mov
add
mov
mov
fbstp
loop
into
mov
xchg
cmp
std
hlt
pop
cmp
lods
sarb
movsl
je
add
test
dec
mov
aam
sbb
dec
or
mov
add
xchg
sti
cmpsb
clc
sub
cmpsl
inc
xor
sub
cmp
mov
jle
pushf
inc
jnp
xor
xor
xor
test
ja
sub
test
xchg
mov
adc
sub
jp
push
sub
sbb
filds
add
and
pop
mov
jecxz
mov
mov
cltd
mov
xor
jmp
outsl
mov
jg
jle
call
scas
orb
stc
pop
pop
mov
enter
test
mov
dec
push
pop
xchg
sub
cmp
mov
push
xor
mov
push
lds
lahf
jmp
sub
enter
lea
adc
cli
fldcw
dec
sub
push
inc
sub
fwait
pop
push
adc
mov
arpl
notl
sub
mov
fsubrl
jl
pop
pop
jg
stc
jno
aad
bound
cmp
cli
aam
or
lahf
rorl
or
mov
pop
std
insl
jae
les
pop
hlt
cwtl
sub
sbb
mull
jp
ds
outsb
dec
shll
andb
rclb
and
icebp
push
jmp
jo
dec
dec
jecxz
xor
les
aam
push
shll
jl
pop
nop
imul
notb
jne
xor
cmpsl
pusha
aaa
push
sbb
fstps
and
fwait
and
jmp
out
xchg
fistpll
sub
push
daa
cmc
and
aaa
cmp
rclb
lea
add
inc
push
scas
jno
insb
sbb
cmpsb
aad
and
sub
aad
xor
xor
cld
push
jmp
mov
cmc
xor
pop
lods
es
adc
fidivs
push
inc
ss
popa
out
xor
popf
pop
xor
test
push
aas
jne
std
and
sub
sbb
xchg
pop
push
mov
incl
cmp
je
sbb
out
dec
jbe
jns
outsl
pushf
sub
mov
fbstp
mov
inc
inc
fidivrs
popf
mov
inc
in
rol
fisttpll
mov
lea
push
movsl
icebp
ficoms
out
cmpb
test
mov
nop
xor
xor
in
dec
jns
dec
pop
push
fistpl
in
sub
cmp
sbb
in
loope
int3
mov
jl
or
inc
loop
jb
ret
test
pop
push
scas
sti
es
mov
xchg
mov
push
test
lret
pusha
sti
fldenv
sub
jge
pop
pop
fsts
pop
ret
jp
push
inc
lret
cs
inc
inc
and
popf
daa
outsl
iret
ja
push
in
cld
cwtl
or
pop
std
xchg
lret
pop
sbb
jo
mov
adc
shlb
push
testl
lods
les
pushf
scas
inc
in
mov
jmp
add
push
mov
movsb
subb
ljmp
cmc
dec
jnp
add
in
cmp
insl
xchg
out
sbb
add
pop
mov
fadds
ficoms
adc
add
sbb
pop
js
and
pop
sub
push
mov
decl
mov
xchg
xorb
sub
repz
mov
ds
xor
push
shll
repz
rcrl
and
outsl
push
pop
mov
or
adc
shl
or
scas
dec
out
negb
out
pop
xchg
pop
xchg
vpcmpeqb
sub
loopne
mov
mov
xchg
lret
inc
or
test
push
popf
popf
movl
lods
testb
loop
fidivrs
daa
sarl
mov
add
nop
jns
sti
test
mov
push
cltd
push
test
jp
xor
lock
dec
add
sub
adc
movsb
cld
xor
mov
xchg
loop
mov
iret
fmuls
inc
adc
pop
lock
sbb
mov
or
fstpt
or
cs
sbb
cmp
insb
repnz
outsl
inc
xchg
repz
das
imul
leave
mov
leave
inc
xchg
pusha
jp
push
push
mov
dec
sbb
popf
push
dec
pop
fnsave
es
js
dec
ds
jecxz
dec
cmp
jecxz
fists
fsubs
xchg
cmp
loopne
js
inc
mov
rep
jo
mov
test
push
or
jmp
cmc
shl
imul
sub
cli
cs
andl
in
int3
std
lret
ret
sar
add
jno
xchg
nop
adc
mov
mov
add
lret
sar
inc
mov
jp
cmp
movsb
xchg
mov
sub
int
mov
stos
adc
xchg
mov
fstpl
sarl
add
lahf
sub
jl
sti
sub
ds
hlt
and
inc
ja
jmp
add
push
dec
and
cmp
pop
dec
cmc
cmp
xchg
sub
cmp
or
cmp
jb
repnz
xchg
inc
mov
aad
lahf
bound
mov
pop
int
rcr
pop
andl
cmp
add
cmc
cmpsl
add
pop
sub
adc
and
int3
pop
xor
xchg
call
xor
sbb
mov
icebp
inc
sub
push
lea
bound
xor
mov
sahf
sbb
ja
cmp
call
cltd
sub
daa
gs
dec
loope
arpl
mov
and
notl
aaa
sbb
pop
xor
fs
fsubrl
dec
lock
sub
mov
dec
pop
js
cltd
ds
imull
cli
cmpl
adc
rcrb
fidivrl
je
dec
fs
sti
mov
mov
sbbl
adc
and
lds
addb
adc
out
jb
lret
cmp
xchg
dec
and
outsl
inc
jnp
fcomi
fs
mov
les
pop
xor
inc
mov
adc
leave
fstl
push
dec
scas
test
fwait
dec
cmp
cmpl
mov
adc
popf
out
jno
pop
cmp
inc
loop
outsl
inc
inc
sbb
mov
push
or
movsb
xchg
or
dec
mov
dec
add
jns
xchg
clc
adc
pop
das
push
aas
ficompl
rcl
testb
and
fadds
icebp
jnp
aaa
scas
inc
test
inc
pushf
xor
mov
push
pop
inc
lds
daa
ja
pop
pop
dec
cmc
movsb
shl
mov
out
sub
scas
in
test
xorl
es
das
sbb
test
and
cmp
jbe
std
cwtl
pop
aam
xorl
lea
fdivrs
pop
sbb
jge
outsb
gs
ret
aam
jge
jl
jb
in
je
xor
lret
xor
or
dec
mov
xor
and
andl
rcrl
mov
lcall
inc
test
insl
loopne
scas
cmp
jle
fst
cmpb
adc
sub
ss
int
sub
lock
mov
ret
imul
cmp
adc
push
push
sub
cmp
fadd
and
lds
cwtl
stos
adc
arpl
test
adc
test
cli
inc
and
leave
pop
mov
pushf
and
stc
bound
mov
inc
lock
movsl
and
mov
mov
sub
mov
mov
pop
jl
ret
mov
adcl
dec
sub
cmp
mov
add
icebp
insb
in
mov
cmp
lret
aad
jmp
pop
call
dec
mov
xchg
cs
les
mov
lods
ljmp
pushf
xor
std
rcrl
jg
outsl
movsl
jmp
cmp
push
xor
addb
xchg
adcb
cmp
push
and
jo
out
in
ljmp
mov
iret
mov
jno
sub
dec
test
mov
and
cmp
cmp
fs
shlb
xor
and
sub
xchg
fildl
jo
test
mov
mov
mov
outsl
sbb
jp
daa
and
mov
div
mov
fwait
pop
insl
xchg
mov
in
data16
xchg
jle
push
emms
pop
mov
or
jnp
xor
inc
inc
int
jmp
pop
imul
dec
push
cwtl
in
aaa
lahf
aaa
ljmp
mov
jnp
lcall
sub
xlat
add
sbb
mov
out
mov
call
or
pop
cmp
clc
cmc
pop
add
sarl
scas
mov
sahf
and
fsubs
cmp
xchg
clc
mov
mov
or
mov
and
fdivs
lods
adcl
lds
testb
mov
scas
cmp
pushf
mov
out
pop
xchg
jbe
cs
loop
mov
pop
cmp
jp
fimuls
mov
dec
addr16
lds
push
mov
insl
inc
inc
cmp
and
test
das
mov
push
adc
js
xchg
inc
pop
cmp
xchg
test
push
divl
dec
adc
inc
inc
jmp
sub
xor
mov
push
movl
mov
ljmp
ret
jnp
pushl
sbb
out
lret
jb
add
jno
xchg
sub
jbe
jbe
and
aam
and
sub
sub
add
push
fnsave
rcl
arpl
imul
cmpl
rorl
int3
xor
aad
push
inc
fimull
sti
fcomps
mov
lcall
sub
add
lods
inc
aam
cs
test
lret
stos
test
pop
neg
iret
in
lea
add
repz
dec
xor
push
inc
inc
adc
notl
ror
pop
cmp
lea
cmp
cwtl
jne
pushf
mov
stos
push
repz
xlat
sbb
stos
add
mov
popf
add
aam
sbb
shrb
jbe
xchg
outsb
jnp
cld
jg
xor
lds
add
inc
lcallw
adc
mov
dec
neg
enter
test
int3
daa
ljmp
jno
add
cmp
mov
mov
and
lahf
scas
pop
in
in
xor
ret
in
jecxz
mov
flds
push
xorb
cmp
aas
mov
or
xchg
icebp
sbb
jns
pop
fldpi
push
out
add
xchg
cs
jae
je
scas
xchg
and
sarb
shll
xchg
add
and
push
out
imul
loopne
inc
jl
subl
xlat
push
int
je
and
mov
fisubl
mov
and
lds
push
push
lods
jnp
add
push
sbbl
insl
push
pop
imul
pop
and
push
clc
mov
mov
mov
loope
mov
lock
test
jl
xlat
jecxz
sub
inc
and
add
and
aas
call
pushf
push
pop
jbe
mov
xchg
rolb
jne
and
cs
sbb
xchg
mov
cld
jl
imul
testb
outsb
mov
aam
in
sbb
je
notb
cmp
sbb
add
xchg
xchg
movsb
xchg
mov
rcll
mov
sub
inc
jmp
dec
lret
shl
adc
ficomps
fsubs
scas
insl
and
jl
jns
aas
popf
mov
cmp
pop
mov
sub
aad
or
and
push
aad
add
jno
jo
or
push
jb
hlt
imul
lds
sbb
mov
push
or
add
inc
xchg
xor
inc
call
shrl
or
or
pop
mov
adc
inc
les
cmp
add
dec
inc
popf
mov
stc
push
fldcw
pushf
sti
jge
and
loopne
jg
popl
add
or
test
in
jecxz
movntq
mov
sub
inc
jecxz
xchg
lahf
cmc
cmp
push
imul
inc
mov
adc
cli
sahf
mov
sbb
dec
dec
stos
test
pop
push
imulb
cmc
or
lcall
movsb
pop
lea
sbb
pop
push
das
aas
add
js
sub
mov
xchg
add
mov
add
in
in
mov
inc
xchg
sbb
adc
xor
push
push
mov
popa
or
test
jecxz
pop
pop
mov
inc
mov
adc
icebp
sbb
mov
mov
fs
mov
mov
mov
repz
call
mov
lret
cld
add
gs
sbb
sarb
jae
sub
dec
push
xlat
lahf
mov
loope
xchg
jl
inc
notl
loop
lret
int3
add
les
in
loope
int
scas
divb
adc
add
lahf
insl
sbb
inc
xchg
hlt
aas
imul
adc
inc
insl
es
jecxz
push
sbb
fs
adc
iret
mov
push
notl
adc
enter
push
xchg
mov
lahf
fs
inc
fs
pop
jmp
in
and
ret
imul
mov
push
lock
clc
iret
daa
mov
repz
ss
iret
xchg
jle
int3
adc
das
pop
test
sbb
pushf
sub
xchg
cmc
jnp
push
pop
lahf
and
scas
add
inc
cli
push
fildl
and
lea
out
sbb
pop
mov
adc
push
dec
leave
sbb
or
scas
xchg
rorb
mov
xchg
jno
push
int3
imul
sub
into
fisubrs
negl
or
push
scas
inc
loopne
nop
arpl
std
sbbl
inc
jmp
push
add
mov
outsl
mov
mov
popf
imul
jl
push
fstpt
or
xor
adc
push
mov
sti
pop
repz
mov
dec
fwait
shr
mov
out
mov
add
enter
jle
push
mov
fs
dec
test
lcall
and
fildll
cmp
jmp
pusha
cld
jg
clc
enter
test
pop
push
inc
mov
pop
mov
sbb
push
mov
rclb
leave
push
pop
push
fldt
xlat
outsb
xchg
mov
imul
data16
mov
int3
daa
stc
sahf
and
enter
mov
cmp
sbb
cmp
pop
jnp
jle
mov
xchg
sbb
cmpsl
and
mov
xor
adc
cmpsb
dec
loopne
or
jp
iret
addr16
add
add
pop
shrb
mov
fdivrl
xchg
test
test
popa
xchg
cmp
ffree
xchg
dec
fisttpll
mov
movsl
ss
ljmp
inc
in
jne
inc
cwtl
xor
pop
inc
push
adc
jecxz
insl
mov
hlt
lret
lcall
mov
pop
inc
fdivrs
adc
sub
pop
call
test
inc
insb
aam
setle
dec
and
incl
pop
cmpsb
pop
inc
jecxz
outsl
and
push
and
xor
jb
ja
push
dec
mov
sub
data16
int3
pop
lcall
pop
arpl
les
rol
xor
adc
pop
mov
ret
cmp
ret
lea
sbb
xor
andb
push
mov
mov
jne
pop
addr16
loopne
cmc
xlat
push
xchg
cmp
sbb
iret
subb
sarl
and
popf
subl
cmp
push
cltd
cmpsl
aaa
sub
jp
stc
jb
dec
movsb
popa
push
xchg
test
xlat
mov
ja
dec
mov
sub
enter
out
notl
fisubl
or
mov
rol
inc
scas
rol
dec
pusha
mov
mov
xor
lea
sti
stos
int
push
adc
shl
mov
jecxz
or
pop
sbb
dec
ret
popa
jmp
add
pop
adc
es
mov
cmp
scas
in
xchg
fnop
xchg
iret
cmpsb
or
lret
push
ljmp
jl
mov
jbe
in
std
es
push
xchg
daa
repnz
lea
pop
or
test
cmc
and
out
sbb
pop
adc
mov
in
cmpsl
pop
jns
nop
movsb
inc
out
add
aas
push
push
pop
sub
xor
pop
or
cwtl
and
pop
incb
mov
loope
insb
test
cmpsl
dec
ja
rcrl
pop
mov
jecxz
mov
lds
mov
inc
mov
lahf
ror
std
aas
sar
mov
adc
test
int3
xor
jmp
addr16
loopne
mov
sbb
cld
xchg
mov
jge
mov
pop
insl
and
mov
lods
or
sar
jmp
sbb
xchg
addr16
test
ret
jle
sub
cmc
mov
push
inc
lea
fcmovbe
jno
int3
jge
hlt
pusha
dec
cs
mov
or
ja
lahf
pop
loopne
outsl
push
jb
jp
pop
negb
aam
add
jg
les
push
pop
icebp
inc
inc
test
add
sbb
lahf
mull
pop
imul
mov
pop
orl
xchg
adc
add
dec
faddp
fisubs
bound
mov
cli
xchg
push
and
mov
or
xchg
xchg
push
enter
lods
inc
arpl
inc
pop
and
loopne,pt
adc
dec
pop
or
je
xchg
add
xor
ljmp
or
push
out
movsl
stos
xchg
fbstp
cmc
mov
lret
jle
sub
dec
inc
xchg
ret
dec
cvttps2pi
jno
push
rcrl
sub
xchg
adc
or
gs
aaa
jbe
in
xor
enter
jae
dec
clc
fldt
mov
fisttpl
sbb
popa
jmp
test
xchg
push
push
cltd
xor
xchg
incl
mov
and
mov
or
and
add
push
adc
inc
mov
cmc
lret
push
pop
cmp
loop
mov
jno
sub
jbe
sub
test
iret
fmull
or
and
jp
out
test
out
fadd
lret
lahf
adc
xchg
into
adc
sbb
and
mov
leave
popl
push
leave
or
or
lods
lea
xor
out
addl
add
stc
rcrb
mov
aad
jae
pop
orb
mov
das
cmc
sub
repz
sub
inc
out
test
stc
xor
fisubrs
fidivrl
pushf
xor
test
adcl
mov
outsl
mov
stos
jle
push
fstl
lods
mov
lret
popl
jg
scas
or
mov
gs
adc
mov
push
jmp
and
sahf
in
aaa
jbe
cmc
leave
int
or
inc
and
iret
aam
cld
or
frstor
push
inc
push
sub
pop
loope
cmc
ss
pop
inc
icebp
push
std
xor
xchg
into
loop
aad
adc
out
dec
xlat
jb
aam
sbb
cmp
cmp
sub
pop
lods
ret
jmp
and
lea
lods
push
lods
lea
rcl
and
sti
sbb
sub
xchg
hlt
sbb
std
adc
orb
mov
or
int
push
sbb
fisubl
xchg
mov
mov
dec
sub
orl
adc
test
leave
fisttpll
push
jmp
xor
cli
inc
or
mulb
fwait
xchg
pop
push
lods
pop
int3
and
lcall
gs
rcrl
adc
inc
sbb
cmp
out
pop
pop
xchg
into
mov
in
or
add
lcall
outsl
sbb
mov
jecxz
cmpb
nop
push
das
lds
push
jmp
shlb
sbb
cmpsl
adc
dec
loopne
daa
cmpsb
cmp
scas
or
rorl
sbb
and
out
mov
mull
push
in
push
shlb
jg
jbe
jne
pop
push
xlat
int3
push
fstps
xchg
push
stc
pushf
pop
shll
fs
daa
aas
cmp
repnz
adc
fwait
mov
inc
mov
mov
cmp
aad
jns
stc
bound
pop
push
ljmp
inc
stos
stos
lock
jb
sbb
jp
push
xchg
jne
out
add
fldcw
les
test
or
scas
std
jg
gs
jge
ja
test
sbb
movsl
addr16
sbb
ja
jae
iret
cmpsl
dec
in
mov
movsl
inc
dec
mov
inc
gs
dec
dec
mov
shr
inc
out
push
lds
xchg
pusha
pop
jno
mov
xor
clc
adc
xlat
dec
or
push
outsl
pop
adc
pop
jp
adc
xlat
fildl
sbbb
outsl
ret
pop
xlat
jp
sbb
cmpsl
cmp
jbe
les
and
pop
add
cmpl
lods
test
cmp
mov
cmpsb
push
mov
pusha
fistpl
adcb
jne
fsubrl
adc
mov
sub
or
jb
stos
xor
sarb
imull
shll
dec
mov
mov
push
scas
outsb
jp
jb
ret
mov
add
mov
jp
jge
mov
sbbb
out
xchg
stos
lock
rclw
arpl
and
iret
and
add
aas
xchg
test
push
mov
outsl
loop
sub
adc
dec
scas
jno
mov
lods
sbb
push
mov
mov
push
xchg
and
mov
lock
add
xchg
cltd
jo
xchg
out
negl
dec
popf
cld
jae
sub
push
ja
xor
dec
loop
repnz
nop
aas
xlat
nop
daa
leave
dec
sti
xchg
jg
mov
mov
ret
pop
lahf
rcrb
inc
adc
inc
jns
rcll
xchg
shll
jmp
inc
fdivl
lock
push
inc
xor
popa
lods
ds
adc
pop
divl
fstpt
ret
dec
shrb
xchg
out
xor
loope
or
dec
xchg
and
ret
lcall
mov
and
out
in
mov
and
inc
sbb
cmpsl
xor
xor
mov
mov
push
inc
ret
mov
xor
push
pusha
jl
insl
scas
sub
jge
into
push
adcb
mov
jp
sahf
cld
cmc
test
pop
into
movsb
jg
aad
lods
adc
ret
fldenv
push
mov
cmpsl
out
sbb
sahf
lret
test
inc
add
bound
ja
es
pop
ds
out
xlat
outsb
imul
xor
mov
adc
nop
xchg
adc
jp
aas
das
int
int
dec
out
dec
sub
add
jbe
cs
mov
and
add
mov
pop
cmp
stc
mov
or
push
aam
xor
shrb
jecxz
and
imul
mov
testb
out
cli
stc
dec
cmp
inc
incb
das
test
dec
mov
jecxz
fcompl
cmp
ljmp
imul
hlt
jmp
ja
and
sbb
bound
outsl
push
fwait
cmp
rcrb
repnz
stos
inc
in
test
xchg
outsb
in
mov
incl
sbb
mov
mov
ljmp
mov
mov
mov
sbb
sub
shll
add
jns
icebp
adc
mov
call
sbb
loop
xor
jbe
fmuls
sbb
add
sbb
sbb
inc
push
ja
call
decb
movsb
fucom
add
mov
out
lock
push
mov
pop
jbe
xor
in
ror
shrb
inc
xlat
pusha
mov
mov
fdivl
push
repnz
test
adc
insl
repz
push
ds
push
mov
rcll
fwait
lret
adc
mov
hlt
mov
mov
jo
mov
ljmp
xchg
xor
jno
adc
inc
pop
fstps
xchg
push
clc
cmp
sub
or
repnz
sub
in
push
fsubs
mov
or
fisttpl
lahf
cmp
je
idivl
lods
shll
jl
sbbb
repz
xchg
movsl
cmp
cmp
inc
stos
inc
ret
xchg
inc
jae
push
out
in
inc
inc
es
xor
inc
mov
mov
repz
leave
mov
pop
mov
mov
inc
mov
xor
imul
insb
dec
cmp
dec
movsl
loop
sub
and
daa
stc
sub
lods
inc
mov
iret
xor
inc
or
fisubrl
xchg
pop
cmp
cmp
shl
sub
arpl
add
pushf
xchg
mov
lods
and
mov
stc
stos
daa
dec
aas
push
orl
mov
sub
cli
add
mov
vmovaps
test
lret
push
stc
cmpsl
mov
hlt
push
int3
sub
sti
xchg
sbb
push
shrl
popa
lods
adc
xlat
imul
mov
add
jmp
faddl
popf
adc
iret
test
sbb
subl
cmp
fs
push
xor
scas
in
sub
shrl
mov
mov
sbb
add
in
test
cmp
jp
js
idivl
shll
ret
cmc
and
mov
xchg
push
mov
inc
mov
shrl
pop
sub
sarl
mov
mov
pop
ds
sub
jecxz
mov
push
sbb
push
imul
movsb
sbb
outsl
jle
sbb
das
mov
push
sub
outsb
pop
stc
ret
dec
test
xchg
scas
adc
scas
inc
cmpsb
xchg
mov
imul
repz
lret
repnz
gs
pop
pop
xor
insl
or
mov
and
dec
pop
rcrl
and
rorl
mov
popa
rcrb
test
mov
cmp
shlb
xor
stc
and
adc
cmpsl
clc
xchg
mov
push
insl
dec
dec
aad
mov
or
aam
mov
cmpsl
andb
adc
enter
fs
jg
mov
sti
leave
sub
mov
call
pop
aaa
lret
int3
mov
push
scas
aaa
jno
pop
test
and
mov
jb
dec
into
popa
cmp
xchg
lahf
outsl
daa
out
cld
aam
pusha
stos
add
xchg
and
sti
repz
cli
cli
xchg
adc
and
xchg
dec
jmp
cwtl
adc
lods
inc
push
leave
pusha
cs
rorb
into
ja
or
cmpsb
push
into
jns
xlat
mov
jmp
in
fsts
ffreep
mov
divb
mov
mov
iret
icebp
leave
arpl
dec
xchg
jmp
pushf
into
cmp
push
mov
rcrb
pop
jmp
fdivs
sub
jl
jg
adc
push
dec
add
cmp
popf
sub
sub
sub
sub
cmp
ss
cmc
dec
adc
out
stc
in
xchg
fwait
inc
test
mov
push
lcall
cwtl
stos
aad
adc
outsl
adc
jg
jg
outsl
sub
mov
insb
data16
mov
mov
mov
sub
add
mov
or
repz
mov
shlb
dec
mov
jne
cmp
jno
ja
xchg
fs
pop
or
sub
or
repz
scas
jge
popa
gs
pop
push
mov
movsb
bound
loope
push
inc
cli
aaa
adc
push
jne,pn
shrl
pop
xchg
pop
dec
mov
inc
pusha
push
cwtl
jb
rcll
push
mov
imul
mov
push
out
add
inc
mov
or
ret
mov
fsubr
std
popf
outsl
clc
sbb
inc
lods
fisubs
test
inc
cmp
push
adc
adc
shrl
shl
ret
lret
cmp
stos
mov
sub
inc
push
rcrl
inc
je
lock
js
mov
mov
dec
mov
sarl
fimuls
stos
pop
mov
push
jbe
ret
add
adc
addb
imul
push
or
xchg
cmp
mov
mov
mov
mov
ja
inc
arpl
lcall
jecxz
jmpw
pop
add
adc
jge
cli
push
xor
jb
and
mov
pusha
jns
add
fiaddl
loopne
sti
int3
lret
push
loope
push
jbe
xchg
mov
fnstenv
les
clc
mov
jb
jecxz
enter
clc
lods
scas
inc
repz
imul
lcall
sbb
aas
inc
push
xchg
mov
ret
pop
mov
fs
scas
xchg
mov
mov
sbbl
and
cmpsl
ds
fldl
rcll
cmp
cld
hlt
into
mov
call
sbbl
jl
aaa
push
sbb
dec
outsb
dec
lret
imul
lds
scas
and
lds
rcr
dec
push
pusha
mov
push
push
lods
ljmp
and
rorb
insl
aad
pop
mov
ret
scas
or
call
cmp
jns
std
adc
xchg
and
aas
insb
push
rcl
pop
dec
aad
sub
mov
clc
into
jno
fdivrl
lock
pushf
xor
push
mov
enter
fs
rclb
test
orb
sbb
inc
orl
pop
pop
mul
and
movsl
xchg
fbstp
ficoml
xchg
and
dec
pop
sub
sub
dec
dec
inc
jle
sbb
jge
mov
fdivl
fs
out
outsb
push
mov
pop
aam
and
dec
dec
sbb
es
or
adc
sub
xchg
repnz
enter
jbe
mov
adcl
cmc
sbb
add
inc
mov
ret
ljmp
xor
test
jno
add
cmpsl
sarl
xchg
orb
out
mov
cmp
in
or
stos
lods
mov
push
std
or
mov
or
sbb
inc
fcoml
lcall
xchg
push
mov
test
outsl
loop
jge
lret
leave
inc
xlat
cli
adc
ret
leave
jo
mov
xor
mov
or
lods
fistl
cltd
sub
xor
push
xor
insl
in
bound
mull
mov
cwtl
test
shl
or
and
out
adc
xor
in
das
aaa
mov
xchg
mov
jae
push
orl
daa
mov
xchg
aam
push
or
stos
push
jae
loope
push
scas
mov
idivl
dec
cmp
push
imul
sub
push
or
xchg
jns
xor
in
ret
or
mov
xchg
push
loopne
xor
mov
jecxz
stos
es
lcall
sbb
negl
adc
cltd
cmp
xchg
es
mov
adc
add
imul
add
sbb
outsl
xchg
out
cmp
mov
fldenv
mov
jge,pt
jne
add
cmp
aas
and
mov
jp
jne
dec
dec
repz
mov
dec
add
sbb
hlt
sbb
push
xchg
and
sbb
ss
call
addb
loopne
aad
mov
mov
mov
orb
xchg
sbb
adc
jle
mov
mov
jge
and
jecxz
cmp
xor
mov
sbb
sub
fnstsw
and
sti
xor
in
loop
shll
jecxz
loopne
xor
fld
xchg
pop
mov
cld
inc
in
jbe
sbbl
cmc
add
int3
push
insl
test
out
mov
pushf
and
sbb
add
das
mov
inc
rorb
adc
ds
push
push
mov
mov
jg
stos
and
xor
mov
cltd
mov
int
lods
push
movsb
mov
lea
scas
mov
in
push
mov
outsb
adc
inc
ja
mov
lret
cmpps
shr
add
shlb
and
jg
inc
ljmp
sbb
lds
cli
push
mov
xor
and
add
out
cmp
imul
adc
xchg
inc
xor
insl
fdivp
inc
inc
add
in
adc
lods
inc
std
in
add
add
cmpsb
jnp
mov
lods
add
testl
fwait
push
push
dec
sar
enter
xchg
in
mov
fstpt
lods
jg
lods
sarb
push
jecxz
dec
dec
mov
popf
pop
sub
add
inc
dec
mov
clc
cs
cmp
aaa
or
xchg
xor
repz
mov
imul
test
add
sbb
jnp
xor
sub
loop
inc
lods
jl
push
mov
sbb
or
out
pop
pop
fldcw
jbe
or
dec
and
roll
jno
sarb
lods
insb
jbe
decl
test
push
lahf
add
lcall
imul
dec
dec
dec
iret
out
fcomps
cmp
push
push
sub
sbb
subb
cmpl
cmp
rcll
xchg
push
mov
sbb
sub
pop
sbb
enter
add
testb
xchg
and
out
shll
lret
mov
arpl
loopne
mov
xlat
and
and
iret
fidivrl
icebp
fsubl
flds
out
mov
jae
push
aas
aad
mov
insb
test
aas
or
popf
insb
scas
inc
lahf
ss
add
ss
arpl
fimull
lods
add
call
lcall
in
add
xor
sbb
iret
xchg
out
movsb
mov
insl
enter
aad
aam
pop
negb
jle
xlat
ret
js
push
mov
fstpt
repnz
aas
mov
pop
mov
stos
lea
in
mov
sbb
pop
addr16
add
mov
lods
mov
rcll
sbb
iret
adc
sbb
fbstp
push
loope
push
leave
pop
mov
inc
out
push
or
shl
pusha
mov
data16
fcmove
inc
mov
pop
xchg
repz
insl
sub
add
pop
dec
hlt
addr16
adc
xor
and
sub
mov
pop
add
aaa
rcll
inc
imul
pushf
cwtl
sbb
sbb
or
mov
fimull
push
cmc
les
adcb
xor
jmp
into
ficoms
mov
sahf
fists
aas
dec
sbb
subb
and
insb
dec
pop
jb
in
cmp
sub
push
push
je
fdivs
inc
xor
jne
sti
fwait
scas
ret
call
in
sbb
enter
adc
cmp
push
mov
inc
out
push
push
fcoms
xchg
mov
inc
jbe
pop
test
pop
imul
mov
xor
add
mov
or
add
mov
fs
mov
jecxz
push
adc
cmpsb
shl
cmp
mov
cmpsl
pop
xor
into
loop
mov
jns
aaa
or
or
push
shrl
push
ss
jb
js
cltd
std
cltd
pop
sub
xor
mov
popf
and
jno
leave
and
cmp
or
jo
xchg
and
inc
icebp
ds
adc
mov
test
clc
dec
loope
or
add
enter
scas
lcall
xor
xchg
sbb
rcrl
movsl
in
inc
test
out
rolb
jne
jle
add
aas
adc
lcall
mov
fcmovne
leave
mov
mov
cmc
cmp
jg
jmp
in
pop
icebp
sub
jp
js
dec
cwtl
pop
dec
enter
aam
es
push
rcll
mull
inc
pop
cmpsb
iret
cmpsb
imul
mov
push
dec
cmpl
fcomps
jae
mov
sub
mov
sbb
subb
add
mov
ja
cmp
dec
push
add
dec
xor
nop
aad
sbbl
jae
imul
inc
les
cwtl
or
pop
and
jno
rcr
add
inc
sarb
ljmp
inc
ljmp
add
imul
mov
jle
cld
push
in
xchg
imul
add
push
add
cs
and
sbb
mov
and
subb
icebp
jno
jmp
push
mov
xchg
shlb
pop
fbstp
jecxz
outsb
dec
call
mov
xchg
and
cmp
push
jno
dec
rolb
lcall
mov
adc
out
aad
sub
test
sbb
movsl
jp
pop
or
dec
jge
in
or
insl
fnsave
loope
mov
loope
fiadds
cs
hlt
push
adc
incl
jl
movsb
in
dec
jge
insl
add
mov
out
arpl
jle
enter
fistl
and
pop
mov
or
scas
std
cmpsl
loopne
lret
mov
fdivrs
push
mov
adc
sub
sub
inc
mov
and
scas
pop
push
cli
push
js
scas
pop
fisubrs
mov
je
xor
mov
xchg
pop
repnz
add
jmp
add
inc
daa
jns
add
pushf
hlt
and
mov
xchg
aad
test
jl
out
out
sbb
sub
jge
fadd
outsb
inc
out
pop
push
insl
adc
cmpsl
out
sub
jmp
gs
jnp
inc
add
xchg
dec
mov
sub
call
sub
cltd
pop
mov
mov
dec
movsb
into
xchg
gs
mov
imul
cmpb
cmpl
and
test
push
inc
push
push
sub
sbb
xor
lods
or
mov
or
repz
push
ja
popa
dec
mov
orl
test
xor
dec
inc
xchg
and
inc
insl
adc
dec
shrb
mov
data16
mull
and
mov
lods
mov
popf
jmp
jp
cmc
arpl
loop
daa
dec
rcrb
inc
jg
movsl
inc
jae
mov
push
and
popf
cmpsb
in
xchg
xchg
add
sti
push
ss
xchg
stos
xor
mull
in
out
out
cmp
add
ret
mov
test
std
sbb
fimull
in
es
jae
adc
mov
dec
outsl
movsl
ds
jnp
movsb
push
cli
lahf
ja
iret
sbb
push
icebp
orb
pop
pusha
rcr
cmp
mov
aaa
imul
sarl
or
clc
nop
mull
mov
cs
iret
outsl
dec
cs
cmp
dec
cmp
cmp
xlat
lods
out
xchg
cmpsb
and
ja
ja
imul
adc
cli
xchg
sbb
fs
cmpsb
out
and
repnz
inc
fnsave
into
shlb
addr16
add
pop
mov
inc
inc
ds
jo
pop
into
lock
pop
cmpsl
ret
push
enter
movsl
insb
orl
mov
sub
dec
std
push
inc
out
mov
outsl
daa
add
in
push
cwtl
pop
mov
in
in
movsb
aas
push
mov
incb
shlb
bswap
lret
sbb
rorb
dec
pop
cltd
mov
loope
cmp
mov
adcl
jns
mov
add
mov
add
repnz
jo
xchg
push
xor
test
lret
jnp
je
cmpsb
in
or
add
xor
push
add
bound
andl
and
ljmp
mov
inc
call
pop
js
movsl
repnz
inc
cmp
mov
xchg
mov
imul
call
push
ds
inc
repz
pushf
cs
out
call
sub
adc
movsl
js
loope
fdivr
mov
mov
mov
xor
xor
inc
pop
into
push
push
sub
dec
or
mov
dec
adc
in
xorb
mov
and
jnp
int3
js
xchg
mov
fistps
adc
pop
imul
jne
dec
outsl
repz
push
sbb
and
adc
push
add
rorb
jg
mov
loope
mov
pop
call
test
aas
out
xchg
bnd
jno
mov
filds
cli
into
fsubrs
lret
addr16
xchg
pop
orb
xchg
lret
rcr
jmp
mov
jmp
loopne
mov
pop
loopne
cli
rcrl
jg
xchg
leave
pop
push
jno
push
call
sub
adc
dec
stos
fdivrp
jns
mov
stos
std
jns
xor
push
lods
fidivrl
das
mov
xchg
pop
lcall
pop
cmpsl
mov
out
pop
xchg
mov
dec
arpl
popa
cmp
sti
popa
xor
sbb
clc
lcall
icebp
mov
sub
pop
fdivs
mov
fs
add
into
cmpsb
mov
lock
add
sbb
call
dec
jecxz
push
leave
mov
xchg
arpl
xor
inc
mov
test
jnp
add
push
incb
ret
fadds
stc
negb
pop
sahf
mov
testl
mov
sub
sbb
lods
jns
add
inc
imul
stos
pop
imul
mov
lods
jmp
sbb
cmp
fnstenv
or
mov
add
jno
clc
dec
movsl
mov
mov
test
nop
int3
pop
shlb
test
mov
ficomps
jae
add
jns
in
aas
loop
subl
xlat
push
or
push
cmp
dec
lcall
inc
or
iret
pop
push
jmp
mov
sbbl
out
cmp
xor
dec
push
out
hlt
jbe
pop
test
jmp
mov
aaa
leave
push
mov
loopne
mov
cwtl
xchg
test
lods
mov
rorl
lods
test
inc
or
testb
pop
sub
adcb
push
leave
in
fistps
mov
addl
test
cmp
loop
roll
popa
stos
dec
out
test
sti
lock
and
test
pop
inc
gs
ss
pusha
jecxz
adc
and
mov
jne
call
xchg
jmp
es
cmpsl
mov
lret
js
aam
lahf
dec
into
push
call
test
daa
jne
pop
mov
mov
cmp
lahf
push
pop
rolb
pop
out
cmc
movsl
jno
pop
or
mov
leave
dec
push
scas
icebp
ljmp
je
ja
les
jle
jo
mov
rcll
add
inc
sub
inc
mov
ja
and
sbb
fildl
xor
jmp
inc
rol
in
push
pop
jle
sbb
or
sbb
dec
jle
xchg
clc
pop
xchg
adc
pushf
sub
mov
jmp
loopne
cmp
out
dec
int
in
je
pause
cltd
std
lahf
and
push
jb
cmpsb
dec
sub
jns
push
lahf
mov
sbb
test
inc
inc
mov
push
fwait
xor
inc
cmpsl
sbb
das
and
cmp
add
call
mov
aam
fwait
or
cli
pushf
mov
mov
xchg
loope
jg
inc
aas
dec
pop
movsl
or
push
sbb
mov
outsl
divl
aaa
dec
cli
mov
sbb
and
sti
test
ss
sbb
xchg
icebp
test
push
pushf
cmc
shl
mov
jecxz
insb
jle
sarl
fistl
sbb
push
lods
jo
pop
mov
lret
pop
add
pushf
cli
push
add
push
cs
push
jbe
cwtl
cltd
iret
leave
jns
shrb
mov
loop
testl
mov
ja
inc
aad
pop
lds
cmpl
insl
ficoml
mov
or
cmp
jg
xchg
xchg
add
std
lods
shl
negl
lret
add
sub
in
or
lret
push
mov
pop
adc
int
fldl
push
pop
ja
cmpsb
jo
ss
jne
cmp
mov
test
sub
sub
test
jb
pop
sub
xchg
call
mov
pop
cltd
les
mov
inc
push
add
jno
inc
lret
test
insl
ja
popf
jb
inc
cmp
nop
jo
ret
dec
add
add
jl
or
xchg
add
mov
push
loopne
test
pop
mov
jle
mov
es
lock
push
push
les
mov
xor
shrl
inc
lahf
mov
int
lods
inc
push
pop
ss
in
insl
add
adcl
dec
mov
jo
lret
add
or
sbbl
lds
inc
inc
push
clc
dec
fbstp
xor
fsubl
xlat
data16
sbb
sbb
mov
int3
jne
mov
mov
idiv
lods
popa
sub
nop
ss
xor
pop
imul
enter
mov
or
pop
cwtl
mov
or
pop
gs
pop
pop
in
mov
jno
pop
stos
cmp
jl
insl
lods
cmp
fidivs
push
hlt
mov
mov
je
mov
push
aam
int3
fbstp
call
int3
enter
loop
jne
pop
imul
les
loopne
jnp
xchg
lcall
lret
or
mov
and
cmpl
pop
ds
js
push
ljmp
cmpsl
inc
pop
adc
fdivp
jb
push
mov
loope
sti
or
jnp
or
mov
pop
push
inc
scas
js
or
je
lods
mov
pop
mov
sbb
add
repz
imul
in
mov
mov
cmp
or
sti
bound
lahf
das
jge
popa
mov
mov
decb
xlat
xchg
add
adc
pop
rorb
dec
mov
mov
lret
xchg
ljmp
popa
adc
adc
js
jo
jmp
test
mov
aaa
rorb
jno
call
lea
or
cli
or
out
xor
aaa
std
aam
dec
mov
xor
sub
iret
push
cmp
hlt
mov
cmp
ret
add
imul
or
and
andb
cmpsb
xchg
sub
push
repnz
out
in
xor
ret
mov
xchg
xchg
cs
mov
adc
mov
clc
es
lock
orl
lahf
ffreep
jl
xor
into
jge
jmp
xor
jnp
js
lahf
sub
in
lret
addl
stc
loopne
xchg
sub
cli
popa
xchg
dec
pop
add
cmp
cmp
pop
cmp
mov
bound
adc
jecxz
adc
cmpsb
lahf
ljmp
or
hlt
mov
addr16
out
mov
subl
push
decl
xchg
pop
xchg
fdivr
test
shrl
sub
ret
mov
insl
xchg
shrl
out
mov
sub
jecxz
insb
shlb
daa
adcl
ljmp
test
jne
enter
push
fistpl
and
in
add
jae
mov
add
cmc
adc
inc
mov
stc
dec
push
sbb
aad
sarb
insl
lcall
int
sbb
insb
pop
hlt
push
loope
push
push
and
popf
das
inc
push
sbb
testl
mov
insb
add
jmp
dec
ret
pop
jl
sub
push
xchg
pop
mov
jno
mov
popa
inc
mov
fisubl
mov
xor
mov
xor
nop
testb
xchg
jbe
in
int
mov
lret
xchg
and
arpl
jns
inc
push
sub
or
cmp
cwtl
mov
fbld
mov
xlat
mov
in
test
sub
pop
dec
notb
jb
mov
mov
gs
sub
shll
jo
pop
and
leave
fidivs
or
mov
mov
in
repz
les
mov
mov
lea
popa
pminsw
clc
push
or
xor
jnp
aam
punpckhdq
sbb
xor
add
cmp
mov
push
dec
inc
fcmovnu
pop
in
cmp
dec
fisubrs
xchg
jle
jl
mov
adc
cmpsl
sub
xchg
and
sahf
adc
std
aad
push
dec
jmp
xchg
pop
sbb
adc
mov
scas
and
xor
mov
cmp
punpckldq
pop
cltd
add
cmp
pop
jle
rclb
test
sbb
hlt
icebp
sarl
loopne
nop
push
push
rcrl
lcall
jae
inc
mov
adc
jo
and
add
cmovae
mov
test
and
lds
adc
or
xlat
inc
in
add
inc
xlat
insb
mov
call
dec
aam
mov
icebp
mov
jo
fnstcw
stos
mov
das
jno
mov
and
cli
push
mov
mov
mov
jl
outsl
repz
fs
stc
adc
ret
xchg
shll
movsl
jle
dec
loopne
dec
ja
je
cmpsb
in
or
idivb
add
inc
sbb
andb
sahf
inc
xchg
or
jle
js
rol
xchg
jl
mov
pop
lahf
pop
cli
pop
mov
arpl
gs
out
repnz
cmp
mov
or
ret
sbb
cmc
xchg
sbb
adc
and
xor
in
test
jl
adc
lds
loop
mov
push
jo
dec
and
aam
sub
subb
outsl
xlat
cld
xchg
lds
jmp
push
ja
je
push
loope
xchg
sub
jge
mov
add
mov
and
notl
adc
jae
es
fldcw
xchg
mov
cltd
les
js
sahf
ds
test
xchg
sahf
cmc
movsb
jecxz
ss
cli
adc
movlhps
sbb
pop
mov
cld
insb
mov
into
cmp
in
in
lret
lret
fnstcw
js
std
int
push
lcall
sbb
cwtl
cmp
add
sbb
mov
sub
dec
jno,pt
sub
fwait
adc
int3
fdivrp
push
mov
fs
xchg
or
inc
dec
pop
cs
pop
push
mov
pop
cmp
loop
dec
icebp
adc
lock
or
movsl
fisubs
pop
cli
repnz
imul
lods
push
xchg
hlt
xor
add
mov
inc
dec
jecxz
aad
cmp
push
lods
xor
es
shlb
push
pop
and
inc
adc
xchg
mov
cltd
insb
aaa
mov
iret
mov
fidivrl
test
pop
push
stos
outsb
adc
lods
stos
inc
clc
cli
cmpsl
dec
adc
push
or
scas
dec
movsb
jg
jb
push
int3
pop
jecxz
sub
jmp
or
cmp
xchg
cmp
pushf
or
mov
jno
jno
sub
sahf
repnz
lods
leave
rcrb
xlat
pop
fdivl
mov
cli
xchg
pop
mov
xor
ss
adcl
sub
adc
test
sarl
into
imul
jbe
in
adc
leave
xchg
shr
pop
cmp
dec
xor
dec
jmp
jmp
mov
jne
test
data16
or
cmp
pop
xchg
pop
mov
test
pop
jae
hlt
push
xor
lds
repz
mov
je
pop
insl
dec
xchg
inc
gs
mov
adc
jb
add
movsb
fbstp
icebp
insl
mov
jp
sbb
nop
mov
mov
into
xor
inc
fistpl
lahf
lret
jnp
cmp
or
pop
cmp
pop
imul
mov
divb
cs
push
xor
and
sbb
jo
cmp
scas
inc
push
orl
pop
xlat
adc
sub
sti
add
inc
sbb
or
loop
fdivrs
mov
lahf
test
mov
call
addr16
fnstenv
frstor
ret
dec
push
cmp
push
or
stos
aaa
mov
testl
jle
pop
mov
insb
popf
test
sbb
mov
pop
lods
lods
inc
fistpll
insb
mov
aas
lods
fistpl
sbb
fnstenv
in
xor
in
inc
xchg
or
mov
cwtl
pop
aaa
fwait
mov
jae
mov
test
les
mov
push
pop
add
ret
shlb
xchg
lret
mov
data16
in
inc
aas
push
xchg
and
mov
pop
movsl
cmp
dec
stos
adc
pop
lret
and
pop
ret
pop
xchg
xchg
call
loopne
imul
cmpsl
add
loope
aam
and
cmpsl
cmp
push
cmc
cmp
nop
lods
les
dec
out
in
repz
mov
xor
mov
test
pop
es
xchg
xchg
inc
outsb
cmpsl
ja
inc
xor
sbb
mov
fdivp
xor
sti
push
sub
pop
in
popf
add
ljmp
ja
sti
repnz
scas
pop
scas
jno
roll
mov
fldl
add
int
xor
lods
pop
inc
cwtl
fldt
ss
outsl
xor
pop
cmp
arpl
cltd
out
xor
test
lds
mov
fisubs
sub
xchg
cmp
xchg
ja
rcrb
add
mov
inc
adc
inc
outsb
sub
xchg
cltd
xchg
stos
je
fsub
and
into
iret
into
mov
lret
pusha
cmp
daa
lret
mov
sub
scas
mov
and
add
ds
adc
xchg
jno
rcrb
mov
jmp
fidivs
or
lods
and
lea
inc
test
cmp
aam
in
insb
sub
add
aam
add
cltd
rolb
xchg
xchg
jbe
int
or
dec
test
mov
int
repz
shl
cmpsl
pushf
xor
sub
push
stos
mov
add
fcomps
rcrb
scas
inc
or
dec
lret
ljmp
push
push
or
and
mov
xor
and
sti
int
sub
repz
mov
xchg
stos
test
stc
popa
scas
popf
jmp
addb
rol
jo
cmc
fcompl
daa
inc
cmp
inc
data16
iret
mov
pop
bound
mov
jmp
inc
jecxz
sahf
mov
push
fs
sub
test
stc
or
xlat
mov
into
jp
ja
push
jno
push
mov
sub
jno
inc
xchg
lret
xlat
jmp
out
and
pop
testb
mov
rep
lds
cmp
iret
mov
stos
xor
js
movsb
lcall
fsub
js
mov
pop
jle
call
ret
stc
xchg
add
adc
xor
or
inc
idiv
mov
popa
xor
mov
mov
pop
out
jne
pop
xor
inc
inc
pop
in
lea
cmp
pop
js
mov
jb
and
mov
cmp
add
mov
data16
xor
fnstenv
rcl
out
fbld
ficoms
hlt
aaa
fsubrl
lds
insl
inc
fsubs
nop
mov
cltd
lret
sbb
das
clc
mov
dec
fisubrs
inc
push
mov
sbb
and
push
mov
loope
mov
dec
lods
movsb
mov
out
pop
add
cmp
and
ds
std
pop
cmp
push
jecxz
jnp
push
fsubr
pusha
mov
pop
mov
or
shl
lds
loop
xchg
sub
inc
xlat
pusha
stos
pushf
dec
and
out
adc
xchg
je
xchg
push
rol
dec
mov
lret
and
popf
dec
push
inc
pop
jmp
add
out
push
mull
and
les
add
outsb
xor
pushf
test
fprem1
mov
test
popf
lret
adc
mov
push
push
out
push
aad
cmp
in
clc
cmpb
mov
repz
ffree
in
push
add
xor
into
fs
pop
sbb
jo
mov
call
xor
cmpsb
cmp
dec
bound
xchg
das
dec
bound
inc
test
xor
and
dec
cmp
clc
mov
mov
dec
cmp
jno
cmp
and
imul
imul
in
lock
mov
lock
out
in
iret
outsb
in
out
push
or
pop
movups
add
sbb
cmc
mov
pop
loope
in
jno
xchg
adc
sub
and
jno
and
shll
mov
mov
and
pop
incb
in
and
arpl
std
inc
xor
adc
dec
adc
or
cltd
xchg
repz
xchg
push
sbb
rclb
cld
inc
lods
mov
mov
mov
mov
fdivs
repnz
dec
into
add
pop
out
inc
push
pop
fadds
cwtl
pop
cwtl
cltd
insb
inc
outsb
aaa
divl
imul
roll
or
mov
add
orb
aas
mov
out
sub
jl
stos
cmp
push
or
or
push
jo
sub
xor
sbb
std
outsl
inc
jo
jge
and
sahf
xor
sarb
mov
lahf
and
or
out
loop
cwtl
cmp
fwait
out
adcl
aad
stos
push
xchg
fnstcw
push
fldpi
add
push
sbb
ret
xor
arpl
mov
xchg
imul
imul
pop
stos
mov
mov
or
testb
es
pop
repnz
std
clc
ret
jp
lret
inc
xchg
pop
and
lea
push
xchg
inc
sub
pusha
mov
cmpsb
sub
jg
push
sub
mov
xchg
ds
int3
imul
mov
mov
int
jno
fcmove
loopne
and
test
insb
sti
data16
sub
sbbl
bound
add
movb
lcall
push
js,pt
xchg
and
pusha
stos
xchg
sub
push
push
cmc
mov
adc
imul
cltd
xchg
call
or
popf
lret
pop
test
jne
jmp
jbe
notl
xchg
ss
jnp
fdivrl
ljmp
add
rol
pop
lahf
dec
ja
jge
out
mov
arpl
pop
lret
bound
sub
scas
push
push
shl
movsb
test
xchg
xor
stos
out
mov
fistl
int3
stc
sub
mov
aam
push
andb
push
frstor
rorb
or
cmp
jnp
jecxz
jbe
mov
inc
mov
push
or
divl
insl
sahf
push
dec
rcrb
pop
push
inc
push
in
push
loop
mov
sub
push
cmc
add
mov
movsb
insb
sbb
in
hlt
dec
cmpl
loope
or
mov
mov
jle
lods
icebp
lret
xor
sbbb
mov
jl
sti
aam
xchg
pop
lret
lahf
jb
mov
inc
add
dec
dec
push
push
sahf
mov
add
xchg
pop
cmc
inc
sbb
or
mov
inc
mov
xchg
jbe
mov
dec
add
jge
jmp
pushf
jg
pop
test
ret
loop
inc
dec
xorb
pop
or
mov
es
mov
in
add
push
jno
sub
and
pop
cld
xchg
mov
sbb
or
test
or
or
and
push
push
cltd
xor
lea
push
packsswb
and
aas
push
test
int3
fsubrs
jae
sbb
pop
pushf
xchg
sub
cmpsb
jnp
dec
enter
add
rcrl
cltd
sub
aam
shll
movsl
fbld
pop
ret
pop
dec
jl
aam
cmp
ja
popa
arpl
pop
adc
or
push
cli
mov
das
xor
add
sbb
lret
mov
push
jns
fsubs
xor
push
sub
jbe
popa
xor
pop
cld
inc
add
sub
pushf
scas
and
xlat
dec
lods
dec
jb
fmuls
and
xchg
stc
or
mov
lret
mov
pop
mov
leave
enter
xchg
sub
dec
loope
lret
push
shrl
into
mov
in
push
sbb
push
sti
je
fidivl
fists
shr
pop
inc
or
adc
sbb
mov
aad
jbe
popf
and
mov
cmp
ja
out
mov
pop
push
icebp
repz
cltd
adc
pop
cmp
jecxz
adc
or
lds
data16
loop
add
adc
xchg
es
mov
jg
mov
jno
mov
jmp
iret
lods
testl
xor
shrl
mov
sub
leave
xlat
push
jl
or
xchg
jno
popa
sbb
lahf
es
jg
out
cmp
std
mov
sarb
iret
mov
loopne
arpl
inc
push
cmpsl
lret
daa
sub
sbb
repz
movsb
shlb
jo
outsl
xor
stos
inc
cmp
jle
cs
in
or
mov
jb
fwait
out
sbb
cli
jno
imul
jbe
xchg
pop
fimull
ja
xchg
adc
pop
cmp
les
gs
jmp
inc
pop
pop
xlat
push
test
les
repz
loopne
pop
lcall
dec
xlat
loopne
fpatan
rcl
mov
pop
je
sbb
add
dec
in
mov
outsb
pushf
outsb
mull
jo
int3
movsb
sbb
sub
add
sbb
or
xchg
lea
and
pop
scas
inc
inc
adcb
scas
jno
fisubrs
popl
add
cli
mov
fiadds
pop
xor
aam
inc
pop
jnp
movsl
cmp
pop
es
pop
rclb
std
cpuid
outsl
pop
lock
push
push
call
in
outsl
insl
and
inc
push
inc
cli
mov
data16
cwtl
inc
xchg
inc
iret
mov
cwtl
sub
addb
pop
pop
mov
int
jb
mov
stc
nop
push
mov
cs
lcall
pusha
and
rclb
cmp
mov
pop
insl
bound
lahf
test
inc
andb
ret
stos
jle
sub
push
fwait
push
fdivs
std
xchg
in
cs
mov
jmp
mov
add
dec
fsubs
cmc
adc
js
fbstp
cltd
xchg
add
loop
sbb
shll
out
dec
xor
movq
and
xor
enter
push
or
aad
outsb
loope
insb
jge
mov
inc
fwait
xor
dec
jmp
leave
shrl
sbb
in
orl
or
sub
js
decb
jmp
out
lock
jne
cmp
pop
xchg
mov
xchg
js
or
jns
aas
adc
mov
test
sbb
imul
xor
pop
push
inc
cmp
fwait
sub
mov
fidivs
mov
push
adc
pop
mov
test
push
in
lahf
pop
push
or
je
xchg
out
jnp
cmp
push
xchg
jge
mov
xchg
in
sub
out
mov
call
push
dec
mov
inc
mov
push
mov
fdivr
daa
inc
add
es
cmp
pushf
xor
rcrl
shll
mov
popf
lods
xlat
xchg
adc
xchg
mov
xchg
pop
test
and
imull
lret
mov
les
add
call
mov
adc
cmpsb
popa
out
mov
test
pop
cmc
lods
jo
ficoms
lahf
push
jl
lock
push
add
jnp
in
lods
xor
subb
daa
inc
fldl
mov
popf
push
mov
inc
sub
lret
scas
push
pusha
dec
arpl
or
imul
sub
in
loopne
jmp
cmp
in
hlt
fwait
repnz
add
mov
jne
pusha
mov
pop
nop
imul
jl
and
mov
sub
xor
add
ja
pushf
xor
sbb
cmc
cmp
negb
jecxz
or
adc
push
insl
repnz
jg
sbb
inc
popf
push
xor
sarl
iret
sbb
cmpl
push
jb
cmp
inc
aad
fwait
or
data16
in
mov
inc
and
das
cli
insb
lret
movsl
push
movsb
loopne
sbb
jge
jnp
lds
or
mov
jbe
sahf
pop
or
add
dec
xlat
call
cmp
rorl
imul
pop
in
es
and
xchg
xchg
add
sbb
ljmp
repnz
into
jmp
aam
mov
cmc
cmp
add
sub
jecxz
mov
sub
ss
dec
inc
xchg
ret
pop
pop
nop
in
or
cmp
imul
xor
popf
pop
frstor
or
call
xlat
xchg
sbb
test
and
stos
xchg
xor
daa
cmp
repz
andb
mov
ficompl
xchg
ljmp
push
pop
jge
sub
mov
les
jg
adc
add
pop
es
rorl
mov
ffree
leave
mov
ror
pusha
les
mov
or
push
ja
sub
mov
and
sbb
bound
into
inc
push
mov
cmp
dec
and
nop
inc
mov
stc
add
sbb
xor
xchg
sbb
mov
xchg
ja
mov
adc
cmp
lret
cmp
test
daa
mov
loopne
mov
add
div
pop
cmp
ss
pop
cmp
sbb
hlt
cmp
sub
sub
sarb
cmp
stos
ljmp
repz
addr16
sbb
xchg
push
cmp
clc
adc
adc
cmp
or
add
rorb
lods
fs
mov
mov
push
popf
stc
jb
pop
mov
pushf
xor
std
sbb
dec
mov
aam
cmp
push
js
sub
insl
sub
push
out
mov
xchg
and
test
jno
loopne
mov
mov
rcl
in
fwait
xchg
std
mov
xor
inc
test
iret
jae
cmp
stos
inc
ret
lret
xor
push
out
into
dec
int3
adc
in
xor
add
xchg
incl
sub
dec
and
pusha
sub
stc
pop
mov
mov
sub
jg
jns
ss
fsubl
bound
and
cmpl
xchg
push
jg
stos
in
out
movsb
xor
dec
out
sti
jle
push
sti
xchg
xchg
cmp
dec
inc
lcall
pop
sbb
adc
mov
out
adc
repz
icebp
scas
and
mov
clc
fsubl
push
push
xchg
push
mov
je
cmp
pop
jp
sub
and
call
lods
inc
lods
js
push
scas
add
sub
cmp
adc
enter
push
call
add
pop
mov
xchg
push
test
inc
fmull
filds
arpl
adc
leave
mov
jecxz
push
sarb
dec
les
cs
xor
dec
push
pushf
ret
and
sbb
scas
rorl
in
mov
dec
scas
xlat
mov
cmpsl
and
inc
xchg
and
in
xchg
cli
xchg
fcomi
mov
adc
mov
xor
movsb
and
mov
loop
push
aaa
mov
push
mov
mov
imul
mov
xor
scas
leave
rorb
xchg
loopne
out
fistl
gs
mov
mov
andl
femms
test
scas
mov
mov
or
xchg
subb
cli
jne
test
cmp
add
sbb
sahf
fidivs
loope
or
fnstenv
mov
stc
mov
jns
leave
mov
fadd
mov
pop
negb
push
mov
iret
pop
adc
xchg
sbb
movsb
icebp
movsb
cmp
lds
dec
xchg
xor
int
rorb
pop
lea
xchg
movsl
push
sbb
mov
shrb
pop
pushf
jmp
cmp
sub
int3
fdivrl
shll
mov
lds
adc
push
enter
or
es
das
mov
imull
sbb
or
add
cmp
add
into
in
cmp
mov
adc
sti
dec
mov
les
icebp
psadbw
sub
mov
sbb
das
push
in
cmp
jb
loopne
or
addb
test
add
mov
mov
aas
int
sbbb
cmpl
scas
mov
xchg
lds
scas
xor
std
test
push
xor
dec
or
testb
notl
andb
leave
repnz
je
mov
push
dec
adc
aad
lock
js
cmp
jb
stc
inc
lret
mov
mov
dec
loop
pusha
dec
ret
push
add
popf
mov
into
hlt
je
push
data16
sbb
and
out
xchg
mov
inc
xchg
jl
lods
cmp
xlat
fs
dec
inc
invd
xchg
imul
pop
mov
in
das
mov
call
sbb
arpl
cmp
pop
push
sbb
sub
ret
test
jo
hlt
pop
mov
psrad
adc
add
daa
push
or
adc
jns
pushf
scas
cli
jle
xor
mov
push
add
and
xor
sbb
sbb
inc
in
push
cmp
dec
xor
popa
xchg
xchg
mov
dec
addl
mov
fsubp
push
jl
cmp
xchg
lods
lods
jle
sbb
cmp
push
inc
popf
arpl
sbb
repnz
adc
sub
xor
xlat
fisubrl
dec
in
or
jl
call
push
iret
mov
cmp
inc
and
and
sbb
addr16
xchg
movsl
jmp
repz
imull
jp
dec
jecxz
rclb
movsl
inc
xchg
jbe
adc
push
jno
data16
test
lock
adc
inc
xchg
dec
cmp
fnstcw
inc
pop
leave
loope
cmp
sub
lods
aas
jl
jno
cmp
and
rcrb
mov
movsb
inc
push
cmp
ljmp
lock
inc
mov
mov
pop
test
jmp
adc
jne
mov
in
jg
cmp
inc
scas
jno
pop
test
fisubs
movsl
and
xchg
cmp
xchg
test
mov
hlt
push
adc
add
fistps
jl
inc
cld
pop
jg
int3
inc
aam
gs
and
aam
jno
in
push
jmp
lcall
movsb
ret
rorl
add
dec
lret
cli
mov
jne
shll
fsubs
inc
push
stos
mov
pop
insl
inc
rclb
lret
cmpsb
xchg
in
adc
mov
lahf
mov
cmpsl
in
add
arpl
jno
jp
cmp
jl
mov
fucomip
pop
adc
jbe
popf
jno
xchg
jl
sbb
aam
inc
pop
push
inc
add
test
std
dec
pop
adc
dec
loop
cmp
xchg
mov
push
sbb
testl
xchg
out
int
popa
sbbb
lea
clc
jbe
cmp
sub
outsl
pop
pop
sbb
ds
dec
dec
sub
and
fnsave
pop
test
lds
push
jg
iret
ds
cmp
imul
push
decb
cmp
aam
cli
in
das
insb
add
jbe
and
jmp
sbb
rol
mov
call
adc
cltd
jae
nop
cmp
sub
add
shrb
notl
xor
sbb
mov
cmpsl
xlat
jmp
hlt
jns
mov
or
add
push
xchg
xor
pop
xor
in
or
pop
stc
aam
daa
cmp
fs
dec
pop
dec
adc
pop
add
mov
add
mov
sub
movsb
dec
loope
push
je
aaa
xchg
cmp
lret
lret
jo
in
inc
inc
hlt
xorl
int
mov
pop
negl
mov
leave
out
and
jmp
mov
arpl
mov
mov
fucomip
push
popa
add
xor
daa
cmp
arpl
adc
jns
cmp
push
dec
push
test
push
test
cwtl
icebp
pushf
pop
sub
mov
jl
mov
xchg
sbb
add
inc
ss
adc
js
ljmp
add
xor
cmc
cmp
rcrl
push
ret
testl
cmc
cld
and
fstp
lret
jnp
orb
adc
shll
inc
stos
pop
sbb
insl
inc
sub
dec
test
popa
add
adc
es
adc
ret
xchg
sbb
das
cmp
inc
lcall
sbb
adc
iret
cwtl
pushf
icebp
int3
mov
sub
mov
or
and
js
pop
cmpb
xor
in
fnstenv
pop
lock
push
cmp
fildll
enter
mov
daa
outsl
mov
std
lods
mov
ss
xor
mov
inc
mov
jae
cmp
sub
fistps
fsub
mov
pop
loop
sub
test
sub
push
push
sarb
insl
add
cli
testb
lcall
xchg
dec
in
cmpb
enter
loopne
and
adc
nop
movsl
sbbb
stos
xchg
adc
inc
push
cmp
aad
jmp
mov
cmpl
lret
jb
cmp
fisttpl
sbb
pop
fstl
outsb
push
sbb
pop
jno
insl
or
out
push
mov
push
push
jmp
jb
loopne
inc
popf
xor
xchg
mov
ds
in
mov
dec
inc
fstpt
sbb
mov
mov
frstor
push
cltd
stos
mov
fldl
push
or
fadds
test
inc
inc
xor
dec
add
push
adc
xorl
out
inc
push
push
or
sub
jbe
js
cld
add
or
adc
aaa
inc
call
mov
pop
xchg
arpl
xor
mov
xchg
xor
sbbl
addb
mov
jae
dec
jae
scas
inc
loop
sub
js
xor
mov
and
add
inc
or
jb
sti
and
dec
push
dec
mov
hlt
inc
xor
mov
mov
xchg
test
and
mov
lret
xchg
je
adc
call
mov
das
in
xor
jl
ljmp
aas
dec
mov
mov
dec
ficoml
insb
jo
jns
out
xchg
icebp
dec
ss
push
add
xchg
loopne
sbb
movsl
hlt
fcmovu
sbb
je
lods
mov
out
xchg
je
mov
pop
fidivs
xchg
and
inc
push
cmpsl
nop
pop
movsl
xchg
sbb
cmp
out
push
cmp
gs
dec
insl
sub
mov
ret
dec
sub
push
fdivs
xor
xchg
cwtl
jle
cmp
inc
rol
in
sahf
inc
pop
inc
pop
mov
xor
test
mulb
insl
push
mov
je
out
and
insl
xchg
sub
out
int
fs
sub
jge
push
testb
push
jg
movsl
add
and
jmp
mov
sub
dec
pop
pop
jno
dec
cli
xor
inc
stc
adc
or
je
test
notl
cld
into
adc
sahf
loopne
push
pop
jmp
or
or
xor
pop
out
fnstcw
mov
aas
fsubr
lods
pop
ror
into
aad
int
cmp
mov
movsl
test
stos
inc
inc
and
cmp
test
adc
lcall
faddp
sbb
xor
out
xchg
jne
add
out
stos
das
lock
inc
push
cmp
out
iret
aas
xchg
das
or
out
aas
hlt
mov
ficomps
call
shll
repz
dec
dec
scas
or
fldenv
jb
les
shlb
mov
xchg
rcl
jb
xlat
jecxz
mov
cmpsb
sbb
or
into
mov
aam
shrb
cmc
xor
negb
cmp
insb
sub
jmp
aaa
mov
mov
push
pushf
aas
outsb
xchg
sbb
test
or
lods
pop
adc
imul
and
out
jnp
mov
lcall
xchg
repz
inc
dec
xor
insl
es
inc
clc
or
add
sub
es
icebp
cmpb
jns
sti
push
mov
jg
int3
mov
jbe
mov
loope
xchg
xor
bound
mov
lods
fisttpll
ds
xor
cmpsl
push
arpl
sub
pop
popf
cli
mov
lock
jne
cmp
lods
ret
sub
mov
push
movsl
and
pop
imul
mov
xchg
xchg
test
ret
mov
pop
lock
pop
leave
call
std
jns
dec
xor
cmp
push
lods
in
push
push
int
or
mov
push
jge
jbe
ss
cld
mov
stc
in
push
sbb
xchg
jge
int3
mov
lods
ljmp
ficoml
xchg
repz
dec
lret
jns
cwtl
inc
movsl
shll
ret
sti
jmp
sti
jecxz
sahf
in
xchg
popl
jmp
movsb
add
mov
ljmp
dec
dec
xor
push
fdivr
sti
or
adc
xchg
and
jne
sbb
pop
jno
mov
flds
push
rorb
xchg
adc
aam
sti
sub
gs
fisttps
mov
xchg
fs
dec
lret
xlat
push
jno
arpl
hlt
ret
dec
dec
je
mov
cld
mov
jle
pop
repz
push
mov
sbb
jns
xchg
insb
inc
in
test
pusha
mov
jmp
mov
xchg
stos
inc
add
shrb
sbb
push
or
mov
dec
shlb
push
cltd
xlat
outsb
xchg
insl
inc
jo
inc
mov
iret
in
jbe
fwait
xor
cwtl
inc
pop
cltd
jbe
out
and
jbe
pop
and
cmp
and
push
call
jae
mov
mov
mov
and
inc
push
scas
mov
mov
enter
add
push
push
jb
inc
data16
enter
repnz
mov
pop
mov
pop
mov
sbb
sbb
fisttps
xchg
sub
cwtl
pop
mov
ret
hlt
mov
lds
jae
pop
mov
xor
mov
jge
test
pop
xlat
loop
pop
ret
mov
js
sbb
pop
xchg
loopne
idivl
xchg
scas
push
jg
lea
test
xchg
sti
adc
sbb
lahf
or
test
inc
jge
lods
fiaddl
jge
in
mov
xchg
in
push
repz
jp
daa
pop
xor
scas
sub
and
push
xor
je
xor
xchg
std
fidivrs
mov
cmp
add
dec
loope
js
jl
lret
imul
dec
add
lods
inc
jno
and
mov
movsl
jne
add
and
out
cld
in
sub
mov
mov
lock
in
jnp
xor
pop
push
pop
sahf
cs
and
icebp
fdivr
jl
imul
push
add
fdivl
dec
mov
fisubl
xchg
negb
or
adc
push
push
xchg
daa
mov
rcl
stc
insl
scas
push
xchg
sub
sarl
inc
mov
xchg
pop
cli
dec
js
shll
sub
mov
ffree
rcrl
mov
enter
jp
push
lcall
jno
ficomps
sub
inc
jmp
xchg
sub
mov
popl
jle
jbe
push
xor
pushf
shll
mov
or
push
mov
fwait
adc
out
inc
mov
push
mov
xchg
sub
xor
cmpsb
std
jae
jmp
rcll
xchg
psubsb
hlt
mov
dec
jge
jmp
call
or
inc
sbb
inc
insl
push
movsl
sahf
push
movsb
test
stos
rclb
mov
clc
aam
fldcw
iret
push
mov
dec
xchg
xor
enter
les
aam
add
pop
insb
push
loop
fstpl
push
pop
mov
nop
mov
jle
inc
mov
sar
jge
fcmovb
mov
jo
scas
sti
sub
subb
leave
fwait
and
shrb
imul
add
lahf
pop
mov
daa
leave
fisttpl
jns
or
or
adc
shr
or
pop
inc
sahf
mov
inc
insb
rol
fldt
out
dec
cmp
cmp
les
sbb
inc
push
sub
mov
fisttpl
xchg
leave
incl
mov
push
stos
ret
mov
mov
or
out
mov
jp
xor
mov
test
fdivrl
xor
jmp
pop
cmp
dec
sbb
jnp
dec
loopne
in
push
stos
sub
xchg
cmp
lock
in
mov
int
and
add
ds
inc
inc
es
aas
or
jb
cmpsb
jmp
jmp
mov
jg
stos
jae
lods
pushf
scas
iret
add
shrb
aam
sti
mov
data16
jae
data16
das
inc
aas
jno
mov
cmp
test
xchg
shll
lock
scas
lock
push
and
add
mov
push
mov
cmp
test
and
loop
jo
out
dec
pop
fstpt
in
mov
inc
sbb
dec
mov
nop
inc
ret
fisubs
lret
or
jle
pop
fnsave
mov
dec
jne
cli
jg
sub
fidivl
mov
jge
lcall
sub
aad
cmp
adc
xchg
pop
jle
sbbl
sbb
inc
jle
pop
adc
orl
pop
inc
scas
and
push
scas
testl
shll
rcll
repz
loop
mov
sub
pop
mov
sbb
cmp
fsubrl
dec
mov
iret
aaa
xchg
xchg
xor
shrb
xchg
cmp
test
and
push
in
push
xchg
and
inc
jbe
push
sarb
mov
dec
and
jne
cli
or
sahf
fbstp
aaa
rorl
or
js
xchg
test
idivl
jmp
cmpsb
and
mov
divl
jno
cmp
add
dec
adc
and
sarl
push
mov
les
je
push
in
and
sub
lcall
loopne
xorb
out
pop
or
mov
inc
xchg
test
arpl
adc
out
out
pop
jae
xor
shlb
dec
mov
mov
insl
inc
sub
fdivrs
cld
stc
cmc
inc
cmpsb
sbb
inc
dec
sbb
xchg
cmpsb
or
popf
imul
xorb
or
outsl
cmpl
fdivs
hlt
mov
jb
aas
push
inc
jg
mov
lcall
pop
popl
jns
pop
test
inc
sub
push
sub
xchg
or
stos
int3
add
dec
es
dec
and
sti
cmp
push
sub
leave
cltd
bswap
data16
xchg
insl
jnp
es
lret
cmp
push
sbb
scas
test
ds
outsl
xchg
std
pop
les
pop
push
jne
xcrypt-ecb
cmpsl
lret
mov
or
scas
outsl
daa
sub
add
pop
imul
push
insb
xchg
mov
subl
mov
insb
cmpsl
sbb
or
das
cmp
call
push
dec
repnz
pop
push
mov
xchg
add
sbb
push
fdivrs
pop
insb
jbe
mov
dec
dec
push
xor
pop
sub
adc
mov
sub
xchg
adc
cmpsb
and
pop
repnz
cli
movsl
stc
loopne
int3
cltd
sbb
jp
outsl
inc
mov
push
sahf
stos
adcl
mov
test
lret
jge
imul
push
clc
jg
sti
xchg
dec
cld
jg
loopne
add
push
rcl
out
dec
push
jl
pop
mov
adc
mov
jg
es
jecxz
adc
stos
and
jne
mov
cmc
enter
xchg
fs
xchg
mov
push
mov
std
push
fsubr
xchg
or
lret
sub
out
jno
pop
clc
push
andl
jle
push
aam
dec
xchg
sub
dec
pop
inc
hlt
fs
scas
pushf
and
push
mov
cmpsl
cmpsl
nop
scas
aam
loopne
sarb
mov
ret
jmp
adc
adc
std
xchg
int
leave
lahf
ja
shrb
cli
test
push
lods
in
or
push
push
aaa
pop
dec
inc
mov
push
and
xchg
jbe
insl
nop
ror
cmp
or
push
mov
loope
push
mov
bound
test
testb
stos
loop
dec
fmull
xor
fadds
dec
dec
jle
scas
lahf
outsb
xchg
sub
inc
mov
mov
mov
mov
add
and
pushf
cmp
in
lock
inc
outsl
inc
mov
sub
xadd
lcall
fs
push
arpl
cmc
dec
or
imul
push
lret
pop
fmuls
xchg
popa
or
scas
insb
jmp
and
inc
add
pop
or
cmpsb
mov
pop
incb
add
add
fdivs
sub
stc
test
mov
mov
dec
shlb
sti
in
add
fsubrs
add
mov
lret
sbb
jecxz
aam
adc
cmp
xchg
insb
mov
sahf
inc
sub
push
mov
adc
cmp
iret
xor
insl
aam
js
cmpsb
cmc
hlt
mov
mov
adc
xor
mov
sbbl
sbb
xchg
and
mov
jne
in
and
mov
or
jne
hlt
xorb
pop
fldl
add
cmpsl
sbb
movsb
dec
out
mov
insl
loop
and
mov
sahf
sub
clc
int3
mov
int3
fs
les
hlt
inc
push
pop
rclb
roll
lret
jne
into
in
shlb
jne
jle
mov
sbb
addr16
jns
pop
pop
out
jo
sbb
jle
in
testl
mov
movsb
adc
mov
rcl
xchg
jle
pop
xchg
sbb
std
or
xor
push
stos
xor
xor
xchg
cltd
add
test
dec
clc
movsb
sub
lock
leave
mov
cmpb
popf
in
mov
jecxz
mov
mov
xor
mov
loope
sbb
sbb
xchg
in
fwait
rcrl
cmp
jae
sub
mov
add
in
mov
push
push
jb
test
out
push
sbb
fnstenv
inc
mov
mov
ror
cmp
pop
jb
ljmp
test
bnd
push
mov
or
mov
popf
jo
inc
xlat
mov
cld
shlb
pop
pop
aad
cmpxchg
ret
push
inc
mov
xor
insb
dec
loop
jmp
mov
int3
scas
leave
or
or
stc
imul
into
paddb
fs
or
insb
pusha
fbstp
clc
mov
add
push
daa
mov
jmp
mov
and
icebp
cmp
js
frstor
enter
inc
push
push
ja
push
mov
push
add
sub
add
jmp
sbb
xor
push
out
sub
push
nop
jl
pop
test
push
stc
popa
sub
pop
cld
jo
cmp
cmp
stos
push
out
into
ret
in
push
pop
pop
aad
cmp
enter
jb
inc
test
cmp
xchg
rcl
out
or
push
pop
pop
loope
inc
mov
pop
rcll
mov
insb
push
rolb
sahf
push
push
or
ret
outsl
jle,pt
aaa
dec
lahf
cs
divb
into
or
adc
repz
jmp
xchg
lea
jp
pop
pop
fstps
fnsave
in
xor
push
xor
lret
gs
inc
cmp
jle
mov
test
sub
cmp
dec
xor
xlat
ja
jl
inc
lods
clc
movsb
jmp
inc
addr16
into
inc
cmpl
mov
adc
frstor
xchg
in
out
mov
repz
in
inc
arpl
xor
or
adcb
mov
pop
mov
dec
popf
sbbl
jecxz
loope
js
notl
add
add
int
mov
push
sarb
stc
aaa
lret
inc
inc
sub
fisubrs
push
fdivrl
pop
leave
std
mov
mov
mov
repz
fnstenv
jns
xlat
and
mov
and
scas
mov
std
sbb
adc
das
xor
dec
pop
inc
xchg
lock
shll
cmp
dec
xor
cmp
es
push
test
add
sahf
das
cmp
sub
push
test
mov
outsl
lcall
out
mov
in
decb
sub
xlat
sbb
ret
aam
es
fildll
add
gs
addr16
push
sarb
add
ja
cs
jmp
daa
outsl
mov
pop
test
cmc
dec
and
mov
xor
push
out
inc
xlat
pop
dec
bound
lds
aad
inc
fmull
arpl
or
push
sarb
mov
popf
add
outsl
mov
cmpsb
dec
arpl
sub
rorb
das
mov
inc
or
jle
rcr
shrb
movsb
add
sbbb
jp
push
jne
adc
cltd
test
mov
and
daa
xor
icebp
cmp
push
aam
out
sbb
mov
pusha
addl
xchg
xchg
iret
pop
scas
push
inc
fsts
out
mov
je
cmp
addr16
mov
push
sub
sahf
push
push
add
xor
jo
test
mov
out
dec
enter
mov
sbb
pop
sahf
dec
aad
mov
xchg
jle
xchg
cmp
lret
add
dec
cmpsb
in
movb
je
jb
xor
xor
in
ret
adc
inc
into
add
and
mov
insb
mov
sub
jae
jae
pop
cmp
adc
sbb
aad
in
aaa
mov
push
int3
arpl
ja
cld
xchg
and
lcall
mov
lods
jnp
pop
notb
xchg
sub
fsubrs
fisubl
lods
dec
sahf
push
xor
cli
mov
std
int3
pop
mov
adc
or
adc
mov
call
scas
ret
outsl
movsl
ja
test
test
nop
dec
or
sub
pop
test
jns
mov
stos
jmp
jmp
test
inc
jae
xchg
jb
jns
jnp
cmp
add
jmp
sbbl
push
pop
sub
xchg
lret
out
iret
lahf
add
mov
push
rcr
sbb
jge
pop
insl
loop
test
subb
and
dec
in
or
jns,pt
stos
insl
sub
enter
lock
push
or
pushf
test
add
inc
scas
or
dec
cld
dec
or
ja
pusha
dec
lcall
jbe
jle
push
jmp
jnp
shlb
cmp
scas
add
sub
lcall
ds
adc
cmpb
mov
das
int
pusha
ret
test
dec
sub
or
sub
cmp
icebp
sub
fcoml
stos
jg
xchg
hlt
push
xchg
cwtl
stos
repz
icebp
xchg
hlt
cmp
stos
jmp
push
addr16
xor
aam
aad
mov
mov
dec
jl
inc
inc
xor
fstpl
adc
cld
clc
movsb
jecxz
cli
popf
stc
xor
mov
gs
mov
and
sti
jnp
insl
shrb
divl
rcrb
inc
cmp
xor
int3
popa
push
aad
fldenv
mov
dec
popa
je
fsub
push
dec
adc
cmp
sub
push
dec
mov
fcoms
jecxz
pop
mov
insl
aam
pusha
xor
inc
fildll
jg
xchg
xchg
shll
add
push
in
push
dec
testl
sbb
loop
mov
push
xabort
add
sti
xor
sub
xor
mov
in
lret
les
mov
lods
data16
mov
push
ja
mov
das
in
incl
lret
sub
push
cltd
nop
lret
and
push
inc
pop
cmp
pop
fcompl
cmc
stc
adcb
cs
test
mov
js
inc
mov
test
sub
and
out
fldenv
fwait
in
insb
das
jns
fdivrs
test
mov
leave
lret
ret
leave
push
adc
stos
test
adc
movsb
sbb
mov
sub
dec
dec
scas
mov
or
cld
push
xchg
or
xor
push
adc
lea
jo
mov
fdivrl
jge
cmp
xlat
mov
pop
jo
push
test
mov
mov
jle
dec
jmp
sbb
roll
push
mov
mov
add
push
pushf
xchg
jnp
mov
icebp
mov
adc
jmp
orb
jp
ss
int3
aas
or
mov
sub
pop
jbe
push
and
enter
pop
pop
movb
faddl
fcomi
addr16
sahf
pop
mov
mov
mov
je
dec
inc
fisubrl
iret
outsb
dec
xlat
sub
or
cwtl
or
mov
jne
adc
cmp
xor
jg
push
addr16
mov
loop
mov
push
or
dec
push
pop
xadd
pusha
scas
cmp
and
insb
jbe
popa
xor
mov
mov
xor
int
jmp
fsts
stos
push
adcl
mov
ror
adc
loop
int3
dec
add
jo
mov
mov
fdivs
outsl
dec
lds
pop
push
sahf
jbe
push
ljmp
jno
jecxz
mov
cli
cmp
addr16
xchg
stos
mov
cmpsb
and
cli
pop
add
ret
inc
test
pop
out
test
fildl
stos
push
repz
push
mov
mov
je
sti
js
jne
roll
orb
pop
outsb
or
insb
jne
bound
sub
cs
push
inc
out
xchg
pop
add
xor
fcompl
xchg
dec
mov
or
or
mov
or
adc
rcl
out
push
loop
test
push
xchg
add
push
xorb
mov
test
mov
adc
std
sbb
mov
or
mov
cmpsl
or
adc
push
out
fbld
mov
lds
jmp
cmpsl
lock
sbb
sahf
inc
stc
adc
imul
mov
add
sub
aam
scas
call
fdivs
or
adc
pop
add
addr16
aad
lock
add
mov
jp
cmpsb
pop
pop
cmp
scas
aaa
mov
sbb
pop
and
mov
add
pop
mov
insb
popa
clc
popf
enter
repz
dec
or
sub
movsl
cmp
mov
push
jne
jle
mov
into
sub
cmpsb
lock
lahf
aam
cmp
enter
pop
fs
xor
testb
scas
lods
mov
mov
out
xor
daa
shl
js
out
xchg
cmp
les
in
and
rcrl
daa
fdivs
in
or
or
mov
imul
cmc
loopne
scas
repnz
jle
hlt
cmp
adc
mov
sbb
rcrb
test
dec
jbe
icebp
subl
sbb
push
sbb
imul
in
fadds
mov
popl
pop
push
jmp
jl
jg
test
fidivl
je
cmpsb
aaa
jne
sti
cmp
pop
sub
pop
lahf
mov
ret
out
cmpsl
cmpsl
mov
mov
push
cmpsb
mov
aas
daa
dec
stc
ss
and
mov
nop
inc
int
and
sbb
mov
outsl
sbb
ret
xlat
inc
insb
aad
cmpsb
test
mov
inc
dec
pop
scas
sarl
inc
loop
or
aam
push
xor
nop
sub
cmp
dec
mov
in
xchg
loopne
cmp
add
sbb
sti
gs
xchg
lret
int3
xor
divl
lret
push
aaa
push
inc
test
inc
in
in
in
mov
xor
in
stos
inc
pop
mov
add
sbb
mov
lahf
ss
arpl
sbb
xor
dec
mov
repnz
mov
movsl
dec
or
push
or
int3
inc
repnz
mov
lea
mov
call
lea
add
xor
scas
mov
cmpsb
xchg
bound
pop
mov
inc
ds
jne
popa
xor
and
push
jmp
aaa
jmp
in
pushf
lock
lods
enter
mov
or
xor
in
xor
mov
jl
pusha
pop
hlt
push
mov
imul
sbb
xchg
scas
leave
or
push
nop
mov
pushl
cmpsl
jle
lock
dec
xchg
inc
pop
mov
adc
cmp
addr16
add
push
adcb
loopne,pt
jl
sbb
xchg
scas
cltd
sub
mov
and
mov
daa
outsl
mov
lret
mov
xlat
push
shrb
test
jg
cmp
outsb
dec
cmpsl
lahf
mov
icebp
ljmp
or
dec
jp
dec
lods
add
iret
into
pop
xchg
pop
or
jmp
push
enter
loopw
mov
out
xchg
add
xchg
sub
mov
mov
repnz
les
ljmp
xor
xchg
cs
jbe
mov
nop
mov
sbb
icebp
js
xchg
xchg
xchg
sub
insb
dec
add
mov
mov
or
or
jp
je
dec
add
push
add
int3
push
test
aaa
in
mov
int3
mov
rorl
xchg
loopne
add
inc
push
shrl
dec
xchg
into
call
xchg
mov
leave
shll
into
shl
xchg
daa
lods
jbe
sbb
dec
loop
push
cltd
insl
inc
pop
pop
cwtl
pop
in
aaa
pusha
jns
lods
mov
adc
jge
and
add
mov
or
sub
fs
inc
jge
jno
pushf
mov
mov
int3
insl
fsts
aas
unpcklps
dec
rorl
lcall
xor
sarb
cltd
sbb
pop
fnstenv
repz
loop
mov
loopne
loopne
mov
jo
sub
push
jp
clc
fimull
out
cld
movsl
xchg
pusha
movsl
sub
scas
outsb
in
xor
popa
mov
enter
mov
lret
repnz
in
add
sub
xchg
adc
mov
outsb
pop
loope
cmp
aaa
jno
ret
cmp
enter
gs
xchg
mov
aas
loopne
clc
mov
ret
arpl
push
daa
push
mov
gs
sub
cli
jbe
inc
ret
aaa
jns
insl
push
ja
push
gs
hlt
dec
test
out
repnz
and
cmp
and
sub
out
popa
mov
dec
fnstcw
je
cld
mov
mov
dec
int3
xchg
imul
jbe
lods
aaa
cltd
push
test
out
inc
outsb
cmp
dec
bound
in
sub
sub
inc
xchg
pop
in
cltd
dec
sub
sahf
out
mov
out
adcb
ss
rolb
sbb
lret
adc
cmp
lods
jne
fldt
test
jb
inc
push
ljmp
push
xrelease
push
push
push
xchg
dec
lock
add
adc
outsb
xor
and
push
cmc
dec
jle
shll
mov
decb
ljmp
add
push
xchg
lods
sbb
mov
notb
sub
ja
int
mov
int
sbb
lret
pop
subb
mov
fs
hlt
mov
add
mov
imul
adc
in
aaa
push
aam
sub
cld
jp
cs
mov
xchg
add
mov
orb
js
jno
sarl
call
jg
in
hlt
cltd
mov
fwait
mov
scas
or
fnstenv
js
je
and
push
iretw
fbstp
and
and
sbb
sbb
push
mov
sbb
jl
or
jb
sarl
aam
sbb
xchg
loopne
cmp
mov
lret
cld
xchg
dec
imul
and
decb
in
mov
dec
loopne
mov
mov
in
andl
mulb
xchg
add
nop
incl
or
dec
sahf
cmp
pop
loop
push
test
frstor
mov
outsb
imul
or
pop
out
jo
repz
cwtl
je
out
jecxz
adc
pop
adc
cmp
jns
mov
out
cmp
xor
mov
arpl
outsb
jo
iret
jge
jecxz
mov
and
lods
add
std
xor
rclb
les
pop
inc
int
xchg
scas
xor
pop
icebp
sbb
push
js
add
jnp
fwait
jle
std
cmp
fistps
mov
jo
cmp
jo
mov
dec
pop
mov
fwait
jle
aad
das
sub
sbbb
adc
jb
sbb
add
fs
popf
xor
mov
mov
lret
jbe
cmp
pop
inc
pushf
mov
add
out
clc
and
push
test
addl
xchg
add
into
cltd
rorb
mov
scas
cmpsb
xchg
test
pop
pop
icebp
movsl
adc
pop
loop
int3
adc
inc
mov
je
cld
cltd
xor
pop
jnp
std
sbb
fstpt
popa
cmpsl
enter
push
pop
cli
xchg
gs
fnstenv
push
cs
enter
sahf
mov
mov
test
jmp
push
xchg
sub
sbbl
shlb
mov
dec
pop
mov
jge
adcb
mov
sbbb
jns
loope
inc
lcall
ja
repz
test
fsubrs
adc
popa
inc
into
testb
sti
and
pop
shlb
mov
xchg
inc
xlat
jno
mov
ret
xchg
add
xor
cmpsb
sbb
leave
les
mov
mov
hlt
jmp
ret
shlb
jg
cld
das
sub
cmpsb
xchg
repnz
and
adc
enter
bound
sub
lods
or
push
dec
cs
ds
dec
xchg
in
push
insb
js
xlat
sbb
in
mov
iret
mov
or
lock
sub
add
dec
cmp
cmpb
js
sarl
dec
jecxz
mov
bound
leave
jmp
shr
mov
ja
lea
jmp
add
inc
mov
aaa
ss
push
xchg
test
loop
mov
cli
outsl
push
sub
test
gs
jns
inc
push
cmp
in
push
mov
add
xchg
cmc
mov
loop
sbb
js
mov
pop
xchg
pop
enter
or
hlt
andb
push
imul
test
dec
jecxz
test
xlat
adc
mov
push
scas
sub
mov
jne
addr16
pusha
adc
jbe
inc
test
xchg
pop
stos
jo
fisubrs
xchg
jb
pop
jne
fdivs
xchg
add
jg
js
popf
push
es
pop
cmp
inc
xchg
xchg
cmp
divb
icebp
repnz
inc
fnstsw
mov
repnz
jmp
in
inc
or
aad
pop
scas
inc
lea
xor
lret
inc
stos
in
push
jne
cmpsb
mov
test
or
test
mov
enter
jmp
cmp
bound
jns
mov
lea
lods
adc
lret
jns
test
push
xchg
dec
int3
xlat
mov
mov
ret
movsl
das
and
dec
inc
push
or
loop
into
adc
mov
mov
xor
cmp
sub
sbbl
push
mov
push
cltd
pusha
mov
xchg
je,pn
pop
mov
insb
jno
lret
fisubl
jmp
xor
dec
roll
xchg
xor
aad
adc
scas
call
ret
xor
cwtl
stos
in
sbb
adc
insb
jno
icebp
mov
push
sub
or
jbe
pusha
sub
test
inc
or
movsb
cmp
hlt
out
mov
aas
cmpsl
xor
movsl
in
andb
mov
adcl
stos
mov
ljmp
add
outsb
ss
scas
fnstenv
jno
in
cli
ss
vminsd
inc
in
lret
jae
pop
adc
imul
ljmp
jle
pop
insb
cmpsb
pop
inc
movsl
sahf
andb
jp
or
inc
rcrl
mov
enter
call
push
int3
cmp
in
in
les
sbb
pop
rcll
mov
jo
cli
into
xor
xchg
xor
and
lods
adc
and
icebp
mov
pop
sub
frstor
jg
test
sub
xchg
pop
jns
cwtl
pop
mov
inc
adc
outsl
mov
addr16
stos
pop
xchg
pop
fcoml
mov
and
add
or
test
pop
clc
and
fcompl
cmpsl
ds
std
or
cmpsb
pop
jl
pop
mov
pop
in
add
stos
mov
clc
faddl
jnp
xchg
iret
loop
or
insl
inc
pop
rcl
xor
in
les
inc
dec
iret
xor
int3
imul
inc
inc
ljmp
mov
push
rcrl
mov
add
inc
or
gs
rcr
iret
sbbb
fidivs
sbb
out
adc
loope
fcoms
dec
filds
dec
add
stos
popf
and
fisttpl
inc
cwtl
and
notl
leave
popa
fists
jmp
dec
pop
xchg
sbb
iret
jnp
add
add
ja
and
ja
ds
mov
lcall
imul
sarb
mov
sahf
jp
pop
lock
mov
xchg
mov
shr
aad
pop
jnp
sti
mov
sub
add
sbb
bound
xor
dec
or
adc
dec
cmp
push
decl
xchg
cmp
adc
gs
mov
sub
add
inc
mov
mov
bswap
arpl
popf
nop
daa
jnp
sbbb
pushf
scas
inc
or
mov
push
rcrb
jl
inc
ja
cli
fiadds
xchg
rolb
jmp
fwait
add
add
xchg
dec
out
outsb
add
inc
sub
jo
or
mov
fwait
scas
and
int3
aad
push
jmp
or
das
push
dec
lock
xor
dec
mov
shll
dec
mov
inc
dec
call
and
xor
sub
out
xor
adc
out
mov
mov
fstpl
add
mov
hlt
int3
arpl
pop
push
fsubrs
sti
scas
cmc
mov
fwait
clc
sahf
pop
lds
clc
xor
call
sarb
test
pop
inc
not
lea
or
bound
js
pop
insb
fcompl
mov
into
jmp
inc
inc
sub
enter
mov
mov
xor
push
mov
js
test
or
xchg
add
cmp
pop
adc
push
fsubrl
push
jmp
cmpsl
push
nop
add
jmp
cmpsb
push
ret
decl
leave
mov
rorb
xchg
subb
dec
scas
insb
jns
jns
cmp
in
push
adc
daa
xchg
ja
adc
out
pop
mov
mov
mov
rolb
jge
jbe
sbb
shrl
dec
xchg
push
mov
mov
or
cmp
in
dec
lret
fstpl
rorl
mov
jecxz
dec
mov
or
cmpsb
lock
sarb
or
sbb
cmp
adcb
adc
xchg
or
lahf
imull
incb
mov
test
push
pushf
into
push
insl
fst
mov
add
and
push
or
shlb
stc
test
add
mov
jge
pop
popf
stc
inc
add
nop
es
lahf
sub
jge
jge
loopne
clc
mov
sub
ss
repnz
std
ret
test
mov
fisttps
xchg
jmp
mov
gs
jle
fildl
push
xor
dec
sub
outsl
cmp
or
jg
or
mov
inc
fs
fistpll
inc
std
fnsave
fucomi
push
ss
prefetchnta
mov
push
xlat
das
inc
or
push
mov
sub
addl
add
fdivrs
sbb
push
negb
mov
loopne
inc
popf
das
aaa
adc
stos
in
inc
push
jmp
xor
push
push
xlat
push
rcll
loopne
fidivl
xlat
aaa
stos
fmull
cwtl
test
jns
fwait
mov
sbbb
enter
jo
xchg
xchg
inc
mov
push
jne
push
fdivl
dec
mov
adc
shl
add
mov
push
mov
mov
clc
fwait
addl
adc
sub
aam
sub
pop
cmp
shrl
jb
or
shrb
stos
stos
mov
cmp
pop
stos
jmp
fadd
inc
push
dec
or
int
sarw
mov
fstps
jmp
adc
mov
notb
cmp
jns
mov
inc
push
mov
out
gs
mov
les
cmp
cmc
fisttpl
add
xorb
mov
cmp
sub
and
mov
adc
xchg
xchg
icebp
xor
test
out
xor
lret
cwtl
pop
push
icebp
push
scas
or
or
push
sub
add
out
test
mov
mov
out
mov
inc
and
push
adc
test
js
lret
test
jge
mov
jb
das
pop
aad
mov
or
inc
jmp
popf
mov
out
xchg
xchg
cmc
push
ret
pop
scas
bound
dec
leave
fwait
adc
jp
icebp
sarl
movsl
lds
xchg
jo
out
sbb
inc
jecxz
pop
std
mov
test
repnz
ljmp
outsb
cmp
orl
inc
movups
xchg
and
push
pop
lret
and
imul
hlt
mov
push
ja
pop
dec
lcall
je
lea
fiadds
sbb
mov
fsubs
add
xchg
cltd
push
in
mov
xor
es
cltd
insb
clc
push
push
setnp
shl
mov
scas
pushf
jae
testl
cli
movsb
std
sbb
out
insb
cmp
sbb
adc
push
mov
fisttpll
jo
xor
xor
addr16
pop
inc
arpl
jae
outsb
jbe
subl
das
push
push
popa
dec
add
xor
je
inc
pop
xchg
mov
gs
loop
cmc
fcmovnb
adc
dec
xchg
jb
sub
stos
mov
sub
sub
clc
fnstsw
and
push
lcall
sub
mulb
adc
subl
cli
push
nop
push
inc
adc
sub
push
in
std
nop
dec
popa
xchg
cltd
mov
xor
in
jns
nop
sahf
mov
jno
lock
adc
movsb
lahf
popf
or
popf
hlt
jmp
ret
fistpll
fwait
shr
repnz
dec
and
mov
sbb
arpl
mov
data16
ret
js
pop
mov
aam
add
repz
in
push
or
xor
dec
testb
arpl
fldl2t
into
pop
jne
mov
data16
xchg
mov
int
and
xor
fs
das
cmc
mov
pop
fsub
push
adc
xor
sub
jp
stc
into
xchg
mov
mov
int
outsl
inc
in
pop
aas
add
clc
testb
es
cmp
fcmove
loopne
out
cmpsl
push
ds
repz
xchg
push
inc
in
xor
dec
gs
push
mov
push
sarb
nop
sbb
das
jp
dec
cmc
jnp
loop
sub
dec
pusha
or
aad
push
ds
loopne
stos
fwait
sbb
lea
jle
pop
scas
mov
cmp
dec
rclb
test
fcmovu
mov
fcompl
xor
push
aaa
stc
jl
push
pop
add
xor
mov
testl
mov
mov
xor
or
mov
jmp
xor
jecxz
add
xor
incl
loopne
cld
bound
dec
inc
int3
insl
andb
cwtl
loop
cs
mov
in
in
das
cs
int
ja
xchg
test
jmp
test
enter
pmaxsw
dec
stos
or
imul
popf
xor
daa
xchg
ljmp
aad
xor
and
js
stos
jp
ja
shl
push
mov
xor
mov
outsl
jp
add
in
std
add
push
mov
testl
nop
mov
pop
pop
mov
jge
in
test
in
sbb
mov
pop
xor
lds
mov
and
test
jle
inc
call
xchg
lds
push
jns
add
cmp
mov
cmc
pop
xor
add
xor
out
mov
outsb
or
inc
mov
int3
sahf
push
adc
pop
ret
mov
sbb
fidivs
mov
scas
enter
test
xchg
andb
insl
shlb
sbb
test
mov
sub
add
push
sub
sub
in
mulb
data16
icebp
sub
out
sub
xor
sub
repz
add
add
cmpsl
jnp
add
jg
adc
test
lds
lds
mov
or
fsubrs
addr16
push
aaa
into
movsl
jecxz
sub
and
movsl
dec
js
dec
ret
aad
pop
cmp
lods
adcl
das
decl
mov
fdivs
xchg
push
inc
inc
xchg
sti
or
xchg
sarl
mov
loop
test
push
enter
js
jg
lcall
mov
gs
push
xlat
stos
ror
push
lods
stc
mul
dec
sub
test
dec
incb
add
mov
adc
sbb
shrb
inc
sub
pop
ret
aam
adc
js
pusha
mov
xchg
push
sub
mov
mov
adc
in
popf
lods
inc
add
call
scas
cmp
lcall
aas
jno
aaa
xchg
sub
push
push
or
dec
mov
jns
out
push
in
push
xor
imul
in
mov
pusha
add
lea
popf
iret
mov
inc
out
in
lcall
movsl
popf
arpl
xchg
decb
in
ret
dec
mov
pop
cmpsb
js,pt
outsb
mov
mov
jle
mov
mov
out
mov
and
and
les
add
or
sahf
fsubl
mov
xor
add
adc
mov
xor
jp
fstpt
or
add
mov
shll
add
aad
lock
mov
arpl
xor
popa
fs
loop
xchg
clc
cld
mov
or
push
and
pop
pop
xor
ss
or
scas
and
sbb
lds
movsl
add
movsb
ret
aam
and
push
mov
jle
xor
aaa
push
andb
add
int
aad
pop
and
rorb
cmp
mov
ret
pop
out
hlt
cltd
jl
push
push
jbe
cmc
pop
arpl
ds
mov
imul
js
mov
cmp
adc
push
lret
sbbb
out
xchg
and
xor
jmp
push
daa
in
mov
loop
dec
imul
shl
mov
mov
adc
dec
in
ret
cmp
pop
jl
rorb
pop
pop
xor
mov
push
jmp
push
xor
loope
add
stos
shlb
dec
adc
pop
mov
cmp
mov
movsl
inc
xor
notrack
lahf
push
xchg
leave
fcomi
and
aad
icebp
out
rorl
pop
movsb
push
sbb
subl
pop
xor
enter
mov
jno
push
jbe
xchg
jns
lcall
jns
popf
xchg
jns
roll
in
mov
push
add
loope
inc
std
ret
test
lods
test
mov
push
jno
loop
adc
ret
dec
dec
cmp
xchg
mov
lcall
popf
dec
add
inc
mov
into
xchg
mov
sbb
rorl
jnp
push
xor
movsb
cmp
filds
call
fsubrs
dec
ror
jae
sbb
das
jno
push
scas
test
jae
cmp
in
fcompl
stos
inc
inc
cmp
push
jno
insb
sbbl
dec
cmp
stos
dec
xchg
divl
mov
adc
imul
outsb
xor
data16
aaa
emms
xchg
inc
out
or
mov
and
pushf
popf
iret
mov
sti
and
std
push
sub
pop
xor
imul
mov
pusha
xor
call
std
xor
push
into
mov
push
jp
hlt
dec
jge
fwait
cltd
and
lret
mov
sub
sbb
scas
lret
mov
sub
fwait
dec
sbb
scas
out
push
out
pop
sbb
mov
push
and
enter
sbb
aaa
call
inc
sbb
shll
repz
xorb
into
add
dec
jge
mov
xorl
movsl
jle
arpl
cwtl
jbe
add
aam
or
cmp
test
dec
lock
pop
mov
mov
cmp
pushf
jno
push
mov
pop
jns
ss
bound
mov
addr16
pop
add
push
add
divb
js
jo
fldenv
ds
in
gs
sarl
scas
mov
pop
orb
or
shll
push
xchg
xor
scas
rcrb
fldenv
hlt
mov
xchg
inc
inc
xor
mov
adc
or
cmp
out
sti
xor
movsb
rorl
mov
stos
vpslld
and
push
hlt
add
add
jl
push
mov
adc
fbld
xchg
inc
xor
mov
pushf
sub
dec
jge
repz
fs
mov
jle
cmp
popf
push
into
add
lahf
hlt
popf
scas
sub
push
ljmp
rorb
adc
and
lret
fcoms
push
sub
mov
int
nop
mov
or
sarb
incb
gs
out
xchg
push
adc
loop
shl
mov
js
push
fbstp
mov
sbb
pushf
mov
mov
xor
fisubl
movsb
repnz
mov
out
out
sbb
mov
test
sub
sub
pop
jo
ret
hlt
fdiv
mov
scas
adc
xchg
sbb
sbb
mov
clc
mov
in
roll
add
xchg
pop
and
sti
xor
inc
mov
shlb
cmp
inc
cs
in
aas
sub
aam
loopne
xor
fxch
push
test
loopne
mov
stc
add
outsl
repz
xchg
mov
test
jge
bound
das
xchg
filds
dec
push
in
add
xor
insb
mov
mov
cmp
mov
cs
and
dec
or
dec
inc
ret
arpl
sbb
inc
xchg
fidivs
push
push
in
test
jae
add
ret
and
popa
push
leave
pop
das
xor
push
push
pop
pop
fldcw
pop
cbtw
lret
xchg
rorl
lea
jnp
jbe
push
aas
or
pop
mov
pop
sub
scas
mov
test
inc
fldt
jmp
jne
ljmp
clc
aaa
stos
rcl
sub
sub
mov
mov
nop
std
enter
subb
cmp
imul
lcall
mov
rcrb
mov
lock
inc
insb
orb
mov
pop
pop
cmpsl
scas
outsb
outsl
ror
jo
inc
hlt
mov
outsb
imul
test
fnstenv
and
rcrb
call
pop
mov
mov
jecxz
fucom
pop
lret
adc
int3
stos
cli
dec
ret
xchg
mov
repz
addb
jb
pop
adc
pusha
mov
mov
in
rcll
xor
je
and
neg
addr16
outsl
and
mov
bound
rorb
inc
in
add
lock
and
fdivrl
xchg
pusha
fisttpll
call
and
idivb
lcall
loope
movsl
scas
add
fistl
mov
loop
outsl
jp
jl
repnz
pop
cmpsl
repz
fidivrl
ret
mov
pop
xchg
mov
lcall
jmp
pop
lock
lcall
cwtl
push
lcall
and
add
mov
lds
and
jl
push
and
stc
xchg
mov
sbb
jecxz
pop
jp
add
es
inc
adc
cli
and
scas
fdivrp
push
aaa
pop
adc
or
lds
adc
push
sahf
repz
sbb
pop
push
or
add
mov
sbb
stc
pop
sahf
or
int
jecxz
sahf
fs
dec
in
adc
push
pop
lret
shl
cltd
mov
add
popf
add
sbb
dec
pop
adc
push
push
adc
dec
ficoml
test
sub
bound
mov
push
inc
sti
data16
mov
out
es
pushf
data16
repz
sub
pop
jns
loop
cmp
push
pop
dec
mov
fistps
andl
mov
mov
scas
and
jecxz
imul
cwtl
shlb
imul
mov
xorb
dec
cmpsl
lea
sub
stos
cmp
pop
ja
add
cltd
std
lret
push
dec
jmp
out
mov
movsl
mov
dec
scas
mov
sub
pushf
inc
popf
mov
or
mov
dec
sub
cmpxchg
sbb
repz
mov
and
ss
daa
push
fsubrs
lret
stos
jp
fdivr
mov
mov
mov
test
loopne
stc
or
rcrb
and
lcall
int
lds
pushf
aaa
jae
adc
fsubrp
adc
pop
insl
sbb
xchg
fs
push
leave
dec
adc
mov
stc
dec
cmc
inc
push
jle
imul
cmp
add
push
or
les
loopne
rcl
xlat
or
mov
dec
test
daa
nop
mov
aam
data16
push
test
xchg
movsb
inc
daa
addl
cmpsb
lock
xor
dec
sub
or
call
fnstenv
imul
cld
jns
pop
mov
dec
cli
pop
jb
lret
sub
jecxz
inc
shlb
xor
fnstcw
daa
cmovbe
rcr
dec
xor
cltd
push
cmpsl
adcb
lds
and
hlt
push
jle
test
mov
loopne
in
xlat
sbbl
inc
leave
shrl
jecxz
xor
mov
call
mov
pop
jns
pop
jle
ds
aas
push
stos
loope
jb
rcll
cmp
lea
pop
repnz
push
xor
out
pop
mov
int
lods
mov
sbb
mov
fildll
xor
and
mov
mov
cmp
pusha
pop
or
jmp
std
mov
insl
jge
sahf
sahf
sahf
int
inc
and
cltd
loope
es
out
cltd
jo
imul
sbb
cltd
imul
icebp
nop
test
adc
or
and
xchg
popf
fwait
or
push
xor
jno
push
sub
jns
adc
mov
push
mov
inc
mov
sahf
call
add
out
imul
pop
mov
stos
adc
lock
dec
cmp
cmp
jo
jne
sbb
in
cli
mov
sbb
or
jae
jnp
inc
js
and
into
mov
add
push
js
and
push
loope,pt
dec
icebp
out
pop
and
jnp
int3
and
std
cmp
mov
scas
fimuls
xchg
mov
mov
ss
cmp
repz
andb
daa
mov
pop
cmp
test
jmp
out
outsl
fldt
lcall
lret
push
mov
popa
arpl
and
push
sub
repnz
je
cs
or
or
cli
into
repz
out
sbb
nop
xor
mov
jecxz
pop
test
inc
push
inc
ljmp
lods
sarb
push
sbb
bound
mov
shrl
test
adc
pop
sbb
bound
popa
movsl
icebp
xchg
and
xorb
or
in
icebp
sbb
add
fists
pop
jbe
iret
cmpsl
add
outsb
push
scas
fdivrs
xor
pop
fadds
ficoml
fmulp
pop
pop
and
out
jl
in
xor
pop
scas
test
mov
aam
jecxz
lahf
sbb
pop
imul
in
sub
adc
xchg
outsl
orl
push
in
add
dec
hlt
jnp
mov
out
or
pushf
mov
mov
test
mov
or
aad
inc
pop
jmp
jns
xchg
imul
cmc
mov
pop
sti
xchg
push
mov
ja
lret
sti
inc
jle
repnz
inc
mov
adc
mov
mov
push
orb
movsl
inc
inc
mov
jp
stc
shlb
jle
int3
cwtl
push
popa
jl
ror
cmpsl
lods
jg
fsubr
xor
or
lahf
cmp
sub
fstl
adc
cmp
or
pop
fimull
xchg
xor
or
mov
ja
sub
fisttpl
pop
hlt
jbe
jmp
pop
adc
lcall
xor
cmp
pop
cmp
mov
add
adc
add
cmp
jmp
aas
pop
stos
divl
push
ds
sub
push
xor
lods
inc
bound
push
and
pop
adc
xchg
bound
sbbl
sbb
test
addl
fadds
cmp
mov
mov
sub
aaa
pop
dec
imul
in
jmp
adc
mov
jno
rcl
lea
mov
mov
inc
pop
jle
rcr
push
cmpsb
movl
jns
adc
sbb
mov
xchg
mov
mov
rcrl
dec
and
fidivrs
cmpps
jl
in
pop
dec
pop
outsb
jg
add
and
sub
push
adc
orl
loopne
mov
popf
inc
repnz
dec
test
dec
or
iret
fdivl
mov
scas
scas
inc
idivb
lret
daa
ss
xchg
xchg
add
mov
rolb
or
jg
loopne
sub
popa
add
mov
in
or
pop
stos
inc
gs
or
shll
xor
bound
inc
mov
jg
cmp
loope
push
in
insl
cltd
jge
inc
sub
testb
or
scas
call
ret
mov
outsl
xchg
sub
lea
nop
mov
or
jp
call
or
mov
mov
xor
mov
mov
stos
mov
adc
test
call
out
out
mov
in
adc
xchg
push
adc
xchg
push
ljmp
jle
mov
leave
jbe
add
data16
push
pop
jo
jno
hlt
mov
add
add
push
xor
xchg
jne
dec
out
sub
inc
fwait
dec
mov
jp
push
outsl
fnstsw
dec
mov
sub
fisttpl
hlt
addr16
inc
dec
loopne
or
cmpsb
in
jge
fdivs
xchg
in
jns
adc
mov
enter
add
xchg
leave
cli
repz
inc
insl
jl
jmp
cltd
icebp
insl
cmpb
xchg
sub
mov
fisubrs
adc
jle
add
aas
iret
inc
icebp
or
and
fdivr
aad
sub
mov
mov
lea
test
jnp
push
sub
mov
inc
subb
xchg
xchg
testl
lock
ss
sub
lcall
lcall
mov
mov
mov
pop
dec
out
notl
dec
xchg
insl
jge
rorl
andb
inc
gs
push
icebp
mov
mov
movsl
or
flds
sub
xchg
fists
lea
std
out
adc
sahf
or
js
pop
ds
xchg
xchg
testb
loope
push
xchg
ljmp
mov
pop
xor
jmp
pop
out
and
cmp
mov
imul
fidivs
sub
push
sahf
inc
or
jle
hlt
mov
jmp
mov
iret
sarb
adc
push
call
das
hlt
pop
push
cmp
jnp
insl
pusha
and
dec
nop
fbld
inc
push
jmp
loop
add
fistps
repnz
fists
jbe
enter
mov
scas
xor
loopne
pop
shll
stos
pop
cmp
mov
dec
push
aas
jl
lods
sbb
inc
fildll
data16
arpl
data16
rcrb
xchg
push
pop
ficoml
das
jnp
and
xor
sbb
push
and
ret
mov
or
or
nop
dec
xor
push
iret
push
mov
in
cmp
cmc
mov
mov
enter
rcr
push
ret
pop
aaa
sbb
call
dec
mov
sub
adc
lock
xchg
adc
mov
lods
imul
ret
jns
scas
push
jb
call
sbb
sahf
inc
hlt
dec
xchg
and
push
mov
and
cmp
mov
movsb
cmp
ret
icebp
xor
divb
fsubrs
mov
pop
lahf
xchg
jo
mov
out
insl
stc
push
pop
cld
out
hlt
aad
dec
push
push
dec
popa
xchg
sti
xor
sbb
cmp
fs
cli
arpl
mov
xor
test
insb
xchg
mov
xchg
mov
cmp
mov
into
out
mov
jns
add
cli
fs
sbb
daa
xor
cmp
subl
icebp
adc
inc
adc
xchg
fs
sbb
or
mov
ftst
add
aad
jle
mov
clc
mov
xchg
inc
lret
loop
cmp
push
mov
cmpl
jg
push
xchg
lahf
in
pop
jle
lea
mov
add
jae
dec
jecxz
jb
mov
fiadds
lods
sub
jae
lahf
shlb
mov
orl
into
das
fidivrl
movsl
lretw
pop
loope
shrl
scas
or
das
mov
jle
mov
in
push
rorb
add
inc
sub
loopne
or
inc
sbb
xchg
jl
fs
movsb
add
fcomps
add
scas
inc
fs
out
insb
mov
mov
jp
scas
call
rcr
out
cmpsl
loope
mov
scas
aas
filds
jb
dec
or
jae
out
fdivrl
push
cmp
jns
mov
sub
mov
xor
push
rorb
aaa
into
out
out
popl
push
in
pop
leave
cmp
cmpb
test
stos
push
out
jbe
stos
orb
adc
fists
icebp
test
rcl
push
cli
xchg
mov
cld
loop
mov
sub
push
inc
mov
aam
rolb
sub
inc
mov
jb
xor
lcall
xchg
ret
xchg
push
mov
aam
lahf
ss
idivb
in
push
ljmp
or
lock
and
int3
or
sub
loopne
mov
add
mov
test
mov
fmuls
call
mov
dec
out
sub
insl
inc
xchg
subb
inc
xchg
inc
fcoml
hlt
mov
push
adc
cmp
pop
mov
gs
repz
std
fnstenv
push
and
out
aaa
mov
std
add
xchg
mov
mov
mov
pop
popf
inc
repnz
dec
fnstsw
test
pop
rcll
pop
xchg
inc
dec
inc
icebp
bound
push
jge
mov
xchg
mov
lods
ljmp
pushf
clc
mov
sbb
imul
push
aaa
mov
adc
push
lods
je
int
cwtl
pushf
xor
int
cmp
ljmp
add
out
add
push
xchg
fcmove
sub
mov
pop
hlt
loop
rcrb
jbe
dec
stc
mov
sub
push
lods
hlt
push
inc
inc
ficomps
popf
inc
pop
les
jecxz
xchg
ja
mov
cltd
aaa
into
lret
out
pop
scas
jp
mov
mov
add
xor
jecxz
test
sub
xchg
stos
dec
lock
mov
fwait
jmp
add
andl
cmp
setbe
adc
cmpsb
imul
in
stos
mov
cmp
push
fstl
or
mov
mov
sbb
xor
sbb
mov
jp
jge
mov
aaa
into
mov
int
into
pusha
dec
lret
adc
xlat
outsl
scas
inc
jbe
mov
cmpb
sub
pop
arpl
mov
mov
and
stos
mov
push
sub
lock
int
mov
cmc
jns
mov
sub
jmp
jae
jb
sub
mov
icebp
insb
mov
stos
es
pop
xlat
mov
mov
mov
xchg
cmpsl
rclb
mov
lods
mov
test
or
fldl2t
push
sub
sub
jge
adc
out
or
es
xor
mov
mov
mov
ja
andl
push
test
inc
lods
or
adcl
outsb
pop
cmc
adc
mov
cmc
mov
adc
inc
aaa
call
or
xchg
test
fwait
jnp
push
pop
out
orl
data16
add
mov
mov
cmp
adc
cmpsb
cmp
push
addr16
dec
or
adc
cltd
xchg
push
out
fisubrl
dec
scas
fnsave
and
js
cmp
dec
mov
xlat
shlb
cs
cmp
fbld
cli
add
mov
sahf
cltd
pop
test
push
jae
xchg
arpl
xchg
jmp
lea
xor
xchg
dec
loop
sub
out
enter
stos
jae
push
test
mov
nop
out
or
jnp
lods
data16
rorl
mov
or
xchg
inc
mov
inc
bound
loope
or
inc
mov
fs
dec
leave
pusha
jg
cltd
inc
dec
ljmp
aad
je
imul
lret
xchg
add
push
cmpsb
mov
pop
jae
arpl
mov
into
mov
icebp
aam
or
jl
mov
aad
or
arpl
sbb
fdivl
sub
jp
inc
fs
rcrl
mov
cmp
adc
mov
jb
subl
ljmp
insl
jl
xor
test
cmp
test
jb
and
cmp
dec
loop
cmp
dec
push
add
fxch
movsl
jg
scas
cmp
outsl
shrl
dec
pop
xor
daa
arpl
sbb
or
push
test
inc
jecxz
aaa
sti
pop
stos
and
inc
push
imul
mov
xchg
adc
into
sbb
add
pusha
add
and
sahf
orl
push
adc
mov
sbb
sbbl
es
mov
xlat
inc
fcmovne
jl
jle
outsb
and
sahf
shll
xchg
mov
sub
scas
aam
movsl
and
mov
fcoml
add
inc
xchg
pop
add
add
test
xchg
dec
adc
and
jmp
sti
ds
fwait
stc
sbb
and
dec
aas
ret
dec
loope
rorb
ret
popf
mov
mov
sbb
add
movsb
sub
insl
jnp
sub
shll
insb
cltd
sbb
std
int
gs
push
or
mov
idivl
scas
cmp
fcoml
lods
or
jae
mov
or
out
int3
cmp
sub
dec
add
mov
call
ret
shrl
in
nop
sub
loop
pop
fwait
icebp
scas
push
loopne
adc
push
pop
test
add
jbe
push
mov
ret
stc
pop
lock
movsb
out
pusha
divl
add
mov
lods
xor
xor
cmp
lods
mov
mov
cld
adc
mov
jae
arpl
push
loope
pop
pushf
jne
mov
leave
add
in
jl
mov
pop
inc
aam
cmp
insb
or
bound
xlat
and
lods
cmp
out
pop
jg
xchg
mov
mov
sbb
pop
inc
push
lahf
aad
ret
ret
xor
sbb
jne
fwait
sub
sbb
dec
inc
mov
mov
adc
mov
loop
sbb
jl
rorl
or
gs
jl
jnp
nop
push
rcll
jge
loope
jl
addr16
mov
enter
std
adc
or
mov
lcall
xchg
fsubrs
arpl
xchg
xor
jp
adc
rorl
xor
nop
daa
cmpsl
inc
shlb
cwtl
inc
xor
jbe
test
push
fidivrs
clc
sahf
cmpsl
xchg
lahf
or
mov
and
es
or
inc
fdiv
jbe
cld
cs
arpl
pusha
cld
fwait
repnz
dec
push
mul
push
test
cmp
std
pop
rcrl
jno
out
add
pushf
test
test
add
xchg
pop
xor
addr16
imul
mov
std
js
dec
add
adc
and
lret
lret
fmuls
mov
jmp
cmp
push
and
cmp
fidivl
pop
xor
and
test
fs
lret
bound
mul
jle
add
sbb
xor
daa
das
jp
cmp
in
nop
jp
dec
cmp
and
ds
mov
mov
dec
mov
push
push
cli
lods
add
popa
mov
into
cmp
and
push
shr
data16
sahf
mov
sbb
mulb
dec
mov
or
fsubs
cli
imul
leave
mov
pop
sub
repz
shrb
sbbb
or
loope
xchg
popa
rorb
scas
leave
xchg
arpl
nop
arpl
shll
and
jns
jb
repz
xchg
std
mov
in
xchg
adc
push
cmp
xor
inc
fs
es
ficoml
mov
jo
andb
jne
in
lret
into
dec
imul
mov
mov
ljmp
pusha
repnz
xor
rcr
xor
mov
nop
or
adc
pop
xchg
enter
dec
pop
testl
jmp
insl
loope
pop
mov
ret
sub
imul
jmp
shrl
outsb
clc
pusha
sbb
and
jecxz
and
dec
outsl
jmp
cmp
push
mov
add
inc
pop
sub
cmp
scas
xor
cmp
pop
cmc
aad
push
dec
jo
int
aas
push
rep
inc
aad
data16
add
shll
pop
sbb
or
sbb
je
popa
sbb
lock
out
mov
add
add
mulb
mov
fwait
sti
mov
call
jns
sbb
push
inc
fs
incb
xor
shll
xchg
and
dec
loopne
inc
pop
add
rcl
sahf
add
mov
jo
jge
scas
xchg
mov
mov
movsb
bswap
sub
jne
adc
nop
add
addr16
fsubrl
sbb
jae
xor
mov
repz
dec
in
fnstsw
lret
fxch
out
outsb
sbb
push
stos
sub
mov
lods
mov
mov
sub
ret
jle
jno
xchg
mov
and
xor
insl
stc
in
push
movsl
popa
imul
data16
ret
sub
test
add
pop
outsl
lods
xlat
sbb
inc
jge
lods
scas
popa
pop
fbstp
scas
sbb
loopne
movsb
mov
into
jne
add
cwtl
test
fwait
subl
jae
mov
fidivrl
and
lds
cmc
sub
lret
jbe
idivl
call
pop
and
sbb
sbb
dec
and
movsb
ja
sub
xor
cli
addl
nop
dec
popf
and
push
jbe
inc
or
jae
fs
test
xchg
iret
fldl
jp
jmp
in
test
fwait
sti
xor
fcomi
mov
push
cs
jb
out
andl
pop
test
xlat
cltd
dec
pop
mov
fimuls
lds
cld
ret
shll
into
gs
push
shrb
adc
xor
sbb
out
nop
push
mov
lods
xor
jnp
or
sti
push
mov
mov
ss
shlb
or
sub
dec
scas
imul
pop
movsb
jnp
mov
push
dec
pop
mov
clc
cli
call
inc
sbb
pushf
outsl
xchg
pop
or
rcl
sub
pop
dec
nop
imul
lahf
xor
jbe
test
and
inc
fdivrs
aaa
jmp
sub
and
sub
lods
inc
cld
mov
je
xchg
mov
movsl
jmp
sti
lods
loop
mov
add
lds
cmpsl
xchg
pop
or
aam
es
adc
adc
xor
cmc
ja
mov
dec
pop
aas
xlat
int
outsl
or
push
xchg
daa
cmp
icebp
push
andl
mov
sbb
dec
jbe
fldl
dec
shll
dec
or
sbb
xchg
pop
jo
mov
mov
sbb
lock
dec
repz
inc
in
adcl
or
xor
mov
pcmpgtb
lods
ret
fcmovnbe
or
scas
sub
xor
adc
inc
mov
test
fidivs
lods
adc
repz
adc
insb
stos
lods
loope
addl
mulb
mov
lods
and
push
ja
cmpl
add
mov
fcomps
sub
daa
lock
aam
imull
and
movsl
aad
add
mov
out
mov
jo
fadd
push
ljmp
jno
scas
xchg
mov
cmp
jns
loop
dec
loopne
adc
subl
add
jmp
insb
xchg
jmp
add
push
testl
fldz
js
ss
clc
cmp
xchg
jg
and
xor
bound
jl
mov
dec
jb
dec
movsb
push
std
push
pop
int
lock
sub
and
cmp
adc
repz
and
sbb
sahf
cmp
clc
and
inc
lahf
daa
pop
into
ss
outsb
insl
sub
lods
mov
adc
inc
in
mov
adc
push
andb
addr16
fistpll
cmpsb
out
cmovno
inc
cld
aad
in
mov
ds
or
fsub
jno
lret
xchg
data16
push
mov
frstor
test
inc
int3
or
ret
dec
add
pushf
jb
icebp
jp
pop
std
jno
push
mov
dec
push
push
jns
xchg
pop
xor
dec
cmp
push
lods
cmp
scas
push
test
cmpsb
xchg
das
mov
jge
ljmp
inc
sub
or
mov
dec
cmpsb
ljmp
mov
or
adc
cmp
int
jae
cltd
sub
andb
xor
mov
pop
sub
sub
mov
loope
lea
xor
inc
jbe
lret
movl
jb
mov
dec
mov
push
lret
push
jge
out
mov
jne
pop
cmpsl
mov
add
movsb
mov
jno
xchg
std
xchg
ret
sbbb
jno
sbb
push
push
and
lods
inc
adc
jecxz
xchg
push
xchg
aam
pushf
jo
out
and
jecxz
stc
push
pop
push
movsl
orb
mov
pusha
xor
cmp
mov
sbb
pop
fs
add
mov
std
push
inc
negl
sbb
mov
pop
xor
xor
lods
or
aas
mov
cmp
pop
test
sbb
fcoms
cmp
pop
repz
or
dec
dec
movsb
jnp
mov
jns
mov
sbb
adc
adcb
lcall
shrb
in
mov
mov
aam
mov
gs
xchg
mov
mov
pop
mulb
icebp
and
dec
push
scas
xchg
push
push
sub
stc
dec
dec
cmp
imul
fsubrl
inc
mov
jge
inc
adc
lahf
rcr
ja
cmpb
cli
mov
sub
and
push
fisttpll
clc
ljmp
call
push
cmp
out
or
cmp
xchg
insb
jmp
mov
fisubrl
enter
test
in
jae
push
das
lds
iret
dec
in
outsl
push
jle
in
add
shl
jl
mov
and
jp
pop
lds
xor
pop
mov
push
bound
xor
or
inc
leave
add
pop
lret
push
lock
mov
scas
out
pop
pop
cmp
hlt
jle
mov
mov
xchg
jg
sub
rol
dec
jae
call
lds
pop
xor
lods
cmp
cmpsl
adc
out
xor
adc
arpl
push
inc
xlat
je
clc
push
pop
inc
stos
mov
fisttpl
adc
add
fiaddl
sbb
insl
add
in
cmp
mov
nop
and
dec
inc
adc
xchg
sbb
cwtl
xor
mov
xor
xor
inc
mov
outsb
mov
jg
scas
mov
xchg
add
adc
cmp
test
ret
add
sbb
cmpl
loop
int
sbb
inc
jb
addr16
imul
call
mov
add
test
stos
jmp
lea
repz
movsb
fwait
cmp
test
lea
xor
jge
mov
xchg
add
pop
adc
adc
mov
jb
xor
jecxz
nop
in
xlat
ljmp
ds
sbb
sub
push
pop
mov
push
pop
mov
or
jle
pop
daa
mov
add
and
repz
cmpsl
cmp
inc
push
mov
out
xchg
cmp
out
cmp
scas
hlt
dec
mov
and
inc
mov
hlt
gs
test
data16
fdivl
and
hlt
lea
mov
jle
call
and
stc
push
repz
fadds
xchg
pop
scas
notl
jge
lahf
daa
pop
popf
pop
ja
mov
add
or
jno
or
adc
fsqrt
pop
int3
add
pop
pusha
mov
jne
jg
into
sub
lret
push
inc
mov
xlat
inc
dec
adc
xor
sub
sub
in
ljmp
or
setge
ret
jge
cmp
jecxz
push
xchg
jge
mov
sbb
je
adcb
lods
negl
xchg
out
cmc
iret
leave
pop
ds
mov
aas
cmovp
js
icebp
iret
dec
add
push
inc
push
push
aaa
lret
push
push
dec
sbbb
dec
jne
jmp
lods
adc
loope
addr16
fwait
cmc
outsl
aad
clc
fimull
jae
pop
lret
adc
cld
daa
outsb
xor
push
testb
lods
outsb
leave
mov
fimull
mov
ret
test
dec
loopne
lret
and
mov
out
xchg
fstpt
into
dec
add
xor
loopne
pop
xchg
jecxz
outsb
in
jg
add
popa
inc
fwait
and
outsl
xor
inc
stc
aad
mov
pop
add
xor
and
pop
inc
aaa
int3
stos
fs
lea
mov
out
push
cwtl
sub
jbe
lahf
push
adc
mov
es
aaa
sbb
lret
or
clc
cmp
lods
jle
pop
dec
out
sti
lahf
xor
mov
repz
leave
loop
repz
rorb
int
pop
cmpsb
arpl
outsb
or
mov
js
xor
aas
cli
in
mov
testl
iret
das
or
ficoml
or
mov
dec
adc
xlat
inc
push
cmp
adc
rorb
jo
mov
jl
into
pop
sbb
addl
aaa
cmp
xchg
sub
cmp
movsb
mov
pushf
sub
sbb
jle
mov
push
or
pop
cmp
lods
fidivs
cmpb
push
sub
xor
mov
fincstp
in
xchg
out
mov
adc
dec
in
push
mov
sub
xrelease
es
xor
inc
pop
push
imul
cmp
jecxz
int3
adc
loop
and
mov
mov
mov
fstpl
mov
mov
adc
cmp
out
ret
incb
cwtl
sub
ficoml
ret
pop
mov
xor
mov
xchg
fsts
cmp
ss
push
rcll
add
pop
xlat
xor
loop
addr16
mov
int3
pop
bound
add
cmpsl
dec
or
adc
pop
pop
mov
cmp
add
nop
lahf
rcl
aad
cmpsl
ret
insl
sbbb
stos
and
vpsubb
jecxz
rolb
adc
movsb
movsb
xor
std
cmp
push
in
mov
dec
enter
push
lods
xor
frstor
jp
nop
fwait
mov
fisttpl
mov
jno
or
test
data16
sbb
push
ss
jmp
imul
cmpsb
add
sti
jbe
or
jb
mov
test
mov
and
or
ljmp
inc
es
lcall
mov
imul
xchg
je
mov
push
outsl
daa
fadd
push
cwtl
call
fstpl
mov
cmpsb
sbb
out
dec
pop
jl
mov
pop
and
out
out
leave
xchg
cs
rclb
adc
rclb
pop
dec
fmull
in
gs
cmp
xchg
repnz
xchg
mov
jecxz
mov
add
rclb
jo
cmp
or
test
daa
mov
jp
inc
clc
in
daa
mov
push
test
into
mov
lea
pop
mov
lea
fisttpl
xor
shlb
clc
and
mov
notb
adc
or
sbb
mov
fcompl
jle
xchg
test
adc
ret
sbb
outsb
push
enter
xlat
jmp
mov
xor
stos
push
mov
cmp
addl
sub
sub
test
sbb
push
scas
xchg
jp
and
test
es
lods
inc
into
dec
sub
es
out
stos
xchg
pusha
imul
mov
mov
cmp
inc
dec
dec
inc
loop
cs
fistpll
lea
stos
xchg
gs
pcmpeqd
nop
out
xchg
ss
rep
pop
xchg
jne
cmp
mov
aam
mov
or
ds
mov
pop
cmpsb
xor
and
decb
loop
out
insl
jmp
dec
repnz
shlb
jno
dec
repz
mov
cmc
mov
pop
inc
pushf
add
aas
cli
movsb
mov
cmpb
ret
call
sbb
cs
adc
push
push
ret
pop
cmp
js
mov
push
mov
pop
cmp
mov
jp
xorb
and
and
loopne
xchg
aam
adc
gs
adc
mov
cltd
jmp
xchg
sub
lds
ja
dec
test
int
repnz
xchg
test
lret
jnp
dec
fidivrs
cmpsl
pop
cwtl
out
lock
xor
aaa
pop
repz
or
inc
repz
xlat
mov
dec
dec
xchg
fdivp
insb
pop
pushf
jns
test
xchg
lcall
adc
mov
push
pop
scas
aas
stos
mov
fucom
sbb
sub
out
mov
pop
jle
xchg
dec
arpl
jo
dec
sbbl
push
call
inc
fidivrs
jecxz
push
jae
adc
push
cmpsl
jle
out
test
or
sbb
ds
add
cmp
cmp
fwait
mov
enter
sub
nop
dec
divb
sub
cmp
sub
jno
and
dec
dec
out
inc
push
pop
gs
push
inc
fstl
ds
ja
gs
cmpsb
dec
dec
fldl
xor
mov
inc
in
sbbb
sub
add
sub
jg
pop
mov
adc
es
push
dec
and
je
jae
mov
lea
jmp
scas
sbb
dec
push
inc
fiaddl
push
lods
ljmp
in
pop
push
mov
xchg
pop
pushf
jmp
test
add
lret
notb
cs
imulb
and
inc
mov
ret
sbb
mov
ret
mov
mov
mov
mov
sub
lock
xorb
push
xchg
sbb
xchg
jns
pop
pop
outsb
lcall
pop
add
sbb
add
or
lds
lahf
lret
xchg
test
es
and
xor
xchg
dec
loop
cs
pop
imul
and
add
arpl
out
testl
shlb
sbb
mov
adc
jb
jmp
mov
push
lea
fiaddl
fcoms
das
or
out
mov
sub
jl
push
sub
push
add
es
xchg
cmpsl
and
sub
std
push
imull
or
stc
xor
pop
hlt
out
push
stos
inc
jb
adcb
xchg
int3
out
outsb
movsl
push
dec
fbld
jb
scas
les
xor
cmpl
pop
out
inc
jle
or
lahf
push
xchg
test
mov
cmp
mov
daa
pop
and
xchg
sarl
adc
xor
mov
xor
bound
in
mov
cmp
popf
or
dec
filds
aam
adc
cmc
ret
hlt
adc
leave
cs
xchg
imul
mov
adc
fwait
xor
and
jne
mov
rclb
ss
lcall
push
or
sbb
lahf
xor
mov
mov
outsb
icebp
mov
pushf
lea
negl
sub
repz
andb
sbb
dec
jge
movsb
sub
ja
sbb
repnz
mov
sbb
sub
int3
cmp
push
repz
push
pop
and
xor
pop
inc
loop
inc
mov
pop
sbb
jnp
adc
mov
cltd
loop
cmp
pop
push
clc
mov
cld
sub
xor
xchg
add
jno
cmp
dec
jne
je
pushf
das
xchg
push
mov
sub
pop
xorb
insl
cmp
cmc
mov
insl
rorb
imul
nop
and
in
add
es
popa
fsubrl
dec
pop
loopne
push
movsb
mov
outsl
sub
cli
push
sbbl
add
push
dec
insb
cli
jnp
inc
movsl
jmp
or
mov
std
mov
mov
loopne
outsb
xchg
inc
mov
mov
inc
stos
inc
test
jns
ror
sbb
sbb
and
enter
test
mov
cmp
movsb
xchg
adc
popf
js
int3
and
dec
push
jb
outsl
clc
icebp
shll
pusha
das
xchg
lea
in
dec
faddl
pop
add
in
sti
cmp
fdivs
add
ret
add
mov
test
sub
test
jne
daa
cmpsl
fcoms
adcl
insb
sub
or
bound
stos
push
nop
sub
dec
pop
das
stos
mov
jns
sub
stos
cmp
add
xor
cli
call
cmp
lret
rcrb
inc
test
loopne
push
aas
cmp
ss
rclb
loop
mov
push
sub
dec
inc
xlat
cmp
out
scas
scas
aaa
loopne
insl
mov
mov
sbbl
mov
lahf
push
mov
fstl
push
xor
push
xlat
mov
test
mov
mov
pop
xchg
and
ret
outsl
shl
xlat
mov
sub
or
addb
arpl
mov
pop
cld
lcall
cli
jne
or
push
in
cld
enter
fdivrl
loope
int3
mov
das
and
jp
std
push
fsts
xor
out
add
fistl
mov
jecxz
js
pop
add
into
xor
push
sub
movsl
adcb
lea
int3
mov
xchg
out
stos
cmpxchg
aam
lds
sbb
add
sbb
inc
dec
cmp
lcall
aaa
cmp
add
dec
test
decb
push
jecxz
or
add
sbb
push
fsts
into
or
xchg
inc
in
mov
inc
mov
arpl
push
sbb
push
js
mov
movsl
dec
testb
sub
adc
lret
shrb
push
mov
pop
sub
mov
add
js
outsb
testl
mov
push
out
inc
jl
jge
jmp
pop
lcall
push
fs
mov
xchg
or
push
xor
arpl
cwtl
adc
jns
sub
repz
xor
jp
add
mov
hlt
and
add
popa
cmp
mov
jns
and
fsubrs
pop
xor
dec
scas
fsubp
popa
sbbb
pop
stc
cmp
cmp
lods
imul
sbb
stos
cmp
pop
mov
in
dec
dec
and
shlb
cmp
cld
xchg
xor
sbb
mov
ret
arpl
test
dec
jecxz
lret
xor
cmp
add
ljmp
xor
push
inc
repz
xchg
ljmp
jns
das
sar
push
add
mov
push
push
sti
xchg
inc
pop
mov
push
adc
xchg
inc
jbe
loopne
hlt
scas
mov
or
mov
test
mov
push
movsb
repnz
int
enter
ficoms
inc
popf
hlt
imul
imul
xchg
xorb
jecxz
jb
rcll
mov
xor
jne
or
icebp
lock
sbb
xor
mov
fcompl
mov
adc
mov
lods
xchg
jnp
je
cmp
add
jecxz
jnp
loop
cmp
mov
aas
out
xchg
test
out
dec
lock
out
repnz
adc
dec
jmp
std
xchg
lahf
mov
enter
cmp
sub
les
dec
and
mov
int3
sub
xor
jmp
and
xor
shll
adc
cmp
dec
ret
addr16
or
cmp
shrb
test
add
push
mov
mov
and
aas
xor
jno
xor
ret
cmc
out
push
pop
push
pushf
xor
mov
addb
jb
cmpsb
jg
xchg
outsl
add
lock
out
mov
push
aad
dec
fildll
test
dec
sbb
inc
mov
ds
nop
xchg
lcall
pop
xlat
mov
sbb
dec
pop
pop
adc
and
sbb
ljmp
mov
jne
jo
pop
in
xor
cmp
in
hlt
jb
fs
sub
push
pop
sbb
or
mov
sti
out
mov
push
and
mov
jmp
dec
cmp
or
roll
test
lret
movsl
cmp
out
push
inc
inc
adc
inc
les
cmc
clc
push
sbb
outsl
shll
insb
adc
adcb
roll
add
push
arpl
pop
fnstsw
in
jg
push
mov
divb
push
xor
sub
push
adc
mov
mov
or
mov
jo
fyl2xp1
sbb
and
cwtl
sub
jmp
in
das
arpl
sbb
lea
mov
imul
cli
pop
sbb
inc
push
inc
out
sti
dec
bnd
inc
sub
cmp
insl
out
loopne
mov
jmp
aas
sbb
mov
pop
in
js
push
lahf
jno
fimuls
dec
jnp
dec
dec
bound
cmpsl
fs
add
cmp
adc
pop
enter
lods
xchg
sub
int
push
ds
add
jl
dec
pusha
inc
pop
subl
mov
mov
sarb
xchg
pop
add
pop
jg
adc
fwait
sub
sbb
out
cmp
adc
jecxz
cmp
jmp
daa
add
rcrl
jmp
test
adc
jb
add
push
jne
push
jg
loopne
mov
jno
push
nopl
lret
loop
shrb
adc
mov
fisubl
dec
rcrb
cmc
stos
icebp
xchg
popf
inc
in
out
int
mov
out
push
jne
xlat
jnp
xor
pop
mov
inc
out
adcb
xchg
pop
mov
scas
jb
xor
push
outsb
lea
imul
dec
dec
pop
mov
imul
cmpb
loop
jae
mov
xchg
and
mov
inc
pop
sbb
js
sarl
lds
test
inc
fisubrl
mov
add
bound
pop
test
test
xchg
dec
lock
int
and
adc
xchg
ret
sbb
lock
push
rorb
loopne
das
popf
mov
mov
stos
lret
add
mov
inc
dec
adc
mov
out
divb
sbb
scas
test
or
fisttpl
or
lea
mov
pop
sti
aad
into
cltd
sbb
int3
adc
adc
or
sbb
shl
push
shl
pop
aas
sub
push
cltd
setns
add
push
push
jg
pop
mov
popa
jo
mov
aam
sub
and
in
push
xchg
or
push
shll
cmp
and
cltd
jle
lea
addr16
outsb
leave
mov
in
ljmp
jnp
outsl
movsw
pushf
dec
test
stos
mov
lods
add
lcall
roll
sbb
dec
xlat
mov
in
jecxz
xchg
fcmove
inc
cmp
mov
jb
mov
jmp
xchg
inc
xor
add
xchg
inc
dec
xchg
cli
mov
loope
mov
jbe
in
sbb
inc
sbb
pop
jge
push
jne
sbb
bound
rclb
stos
mov
out
insb
jl
in
mov
jge
das
pop
iret
cmp
dec
push
repz
jp
enter
mov
inc
pop
xor
mov
stc
mov
aam
adc
adc
icebp
fbld
aam
lods
or
sbb
sub
outsl
pushf
mov
xor
pop
imul
mov
lds
rcr
ljmp
dec
sbb
jns
jne
pop
push
stos
dec
clc
mov
push
sbb
out
lret
xor
std
js
testb
add
lock
dec
fistpll
xchg
adc
sbb
push
sub
lds
popf
clc
xchg
jecxz
dec
sbb
mov
imul
lds
cmp
cld
mov
pop
pop
adc
adc
fs
mov
jg
ffreep
addr16
adc
push
mov
mov
push
pop
aam
sub
mov
cmp
inc
pop
pop
jne
sub
pop
or
sub
add
dec
dec
push
outsl
push
cmpsb
out
inc
arpl
enter
outsb
inc
push
out
cli
in
hlt
push
jbe
push
insl
jnp
and
shr
out
imul
loope
xchg
aad
cmp
mov
ds
jb
push
or
push
mov
sbb
ss
fucomip
fdivs
stos
inc
aam
icebp
dec
enter
dec
sub
in
test
dec
and
jno
lds
sub
out
pop
cs
pushaw
loop
xchg
packssdw
cmp
pop
dec
push
xor
pop
insb
and
ss
mov
inc
hlt
int3
mov
aad
inc
and
lret
add
mov
sahf
lea
and
mov
ds
test
mov
fwait
mov
loopne
and
test
ss
dec
inc
push
jg
dec
loopne
mov
sbb
in
cmp
scas
lcall
popa
pop
loopne
daa
inc
inc
sbb
fisttpll
imul
stos
xchg
addr16
sbb
jne
jb
test
xchg
ljmp
jg
dec
out
mov
push
lods
fst
clc
sbb
pusha
stos
in
pop
push
lods
mov
sbb
mov
and
loopne
jnp
add
fs
subb
mov
insl
jmp
fildll
bound
xchg
lret
or
jmp
scas
sbb
mov
xchg
cmp
pop
mov
mov
or
xchg
jnp
sahf
dec
dec
lds
mov
ljmp
mov
sbb
ret
sub
jmp
aaa
sub
push
add
loop
cli
hlt
inc
sub
cmp
mov
nop
daa
and
mov
daa
jbe
jle
fbstp
add
push
cmpsl
jns
pop
pop
arpl
rcll
xchg
ret
push
pop
pop
sbb
nop
cmp
jg
cmp
or
bnd
out
inc
or
rcrb
notl
dec
jnp
jge
cmp
dec
rcll
ss
into
out
sbb
ss
cmp
xchg
cmp
ret
ret
mov
movsb
cmp
xor
dec
call
insl
dec
mov
jmp
aas
pop
sbb
mov
js
fxch
push
ljmp
insb
inc
pop
lcall
ja
jne
sub
and
xor
and
jo
cmovle
lret
xchg
push
and
lea
xor
or
cltd
lret
outsl
movsb
les
fcoml
cli
leave
cmpsl
ret
fs
add
mov
lcall
push
fnsave
dec
xchg
mov
xchg
int
cwtl
dec
pushf
stos
push
movsl
mov
adc
sbb
repnz
lods
mov
sbbl
sahf
adc
int3
lret
mov
cs
mov
push
push
xchg
stos
inc
add
test
fs
aaa
ljmp
lods
jle
xor
test
in
mov
inc
mov
cmpsb
les
fidivrl
adc
and
sub
dec
jns
mov
mov
insb
std
sub
movsb
loop
pusha
dec
add
pusha
dec
ret
or
xchg
cmp
lds
mov
test
mov
shrl
shlb
js
repnz
mov
or
cwtl
cmpl
inc
movsl
insl
jge
xchg
or
jo
fisubrs
or
das
nop
lock
xchg
mov
popa
jns
sub
pop
push
pop
inc
xchg
cmpsb
adc
adc
loopne
test
in
mov
mov
inc
fucomip
stos
ljmp
addr16
push
push
or
js
jne
les
sbb
inc
fisttpll
stos
fs
fucomi
mov
sbb
mov
test
xor
lcall
pop
adc
push
mov
or
lea
outsb
jns
out
rcll
aad
inc
sbb
xlat
xchg
push
outsb
cmp
fimull
test
cmp
sti
sub
cmpsl
rcr
mov
push
imul
test
push
es
inc
mov
jno
sbb
push
cltd
mov
mov
testl
stc
cltd
ljmp
std
jns
movsl
or
sub
loopne
pop
adc
lock
pop
mov
push
or
xchg
rol
cmp
sbb
sti
or
movb
lcall
sub
dec
xchg
in
xor
mov
je
mov
inc
push
sti
jbe
lock
js
sarl
fs
aad
mov
jg
jmp
add
mov
add
fidivrs
nop
mov
sbb
scas
jne
nop
jae
xchg
cmp
fidivs
add
xchg
cld
fildll
pop
lock
dec
ja
push
xchg
in
mov
aaa
sbb
enter
in
jmp
or
adc
mov
shrl
adc
mov
mov
mov
push
mov
ficomps
mov
and
arpl
in
mov
inc
cli
push
pop
cli
fsub
inc
inc
sahf
hlt
imul
pop
pop
sbb
mov
jecxz
insl
sbb
fidivl
xor
sti
jg
shrb
popf
iret
and
push
mov
ret
sbb
mov
add
mov
xchg
adc
pop
sub
sbb
or
xchg
sub
sub
xchg
mov
dec
jns
jl
sbb
lods
ja
xlat
sub
push
test
mov
dec
dec
adc
mov
lock
jl
push
cmp
inc
rcr
adc
xchg
fmuls
or
sub
cmp
sub
aas
sahf
shr
ret
adc
in
push
jne
movsb
jo
jb
xor
push
testl
mov
lock
ljmp
pop
cmp
mov
nop
in
cmp
dec
push
addr16
push
daa
mov
or
divl
push
aam
push
int
pop
fistl
jecxz
mov
bound
cwtl
out
fwait
sti
inc
mov
std
jmp
rcrl
cltd
dec
clc
or
cwtl
or
pop
popl
negl
sbb
adc
pop
gs
daa
arpl
inc
out
xchg
mov
or
stos
je
out
dec
sbb
xor
scas
cli
dec
out
unpcklps
push
bound
push
add
push
pop
shll
scas
jecxz
xor
out
lret
mov
out
jae
dec
loop
adc
push
lahf
mov
decl
pop
lock
lock
push
adc
mov
jne
push
bound
pop
mov
xchg
jmp
in
sub
jo
lea
out
ret
repz
add
sub
out
std
adc
jns
mov
iret
push
adc
xor
mov
add
ja
rclb
call
das
inc
mov
cmc
clc
jle
faddp
sbb
outsl
jbe
cli
bound
xchg
xor
setle
jnp
cli
aas
repnz
sub
mov
lea
add
cltd
sub
xor
xchg
outsl
inc
inc
icebp
push
ret
call
push
jmp
sbb
loope
adc
sarb
in
push
xchg
aam
push
das
addr16
add
mov
xchg
jecxz
aaa
inc
into
mov
outsb
push
mov
push
je
das
jl
xor
mov
negl
sbb
rclb
cmp
adc
pop
or
inc
jae
cmpsl
scas
lret
pop
lods
jno
fildll
shl
scas
sub
xor
pop
nop
sub
jbe
arpl
and
out
je
sub
mov
inc
fstpt
and
ds
arpl
xor
add
aam
mov
mov
xor
jmp
sub
push
xchg
popa
cmp
lcall
cmc
and
daa
xchg
mov
inc
imul
mov
jp
fwait
and
repz
out
sub
jmp
xlat
xchg
fucomp
dec
xchg
jp
test
mov
inc
jmp
jbe
dec
or
mov
rcll
movb
dec
in
out
loopne
imul
in
ret
fnsave
adc
sub
mov
repnz
jge
dec
xchg
pop
cmp
cltd
or
loopne
cli
mov
push
sti
sub
jmp
out
aas
adc
dec
lcall
mov
jno
xor
lds
inc
jp
in
sub
add
out
cmp
dec
dec
bound
push
fnstenv
or
cmp
sahf
gs
shrl
and
cli
movsb
mov
pop
jmp
ljmp
pop
xchg
mov
gs
movsl
popa
loopne
push
lcall
or
mov
inc
and
in
leave
std
lahf
cld
into
sbbl
call
out
into
xor
fimuls
sub
mov
push
add
mov
fwait
cmpsl
stos
fisttps
test
adc
lods
mov
or
lods
das
pop
push
pop
out
test
sub
inc
dec
dec
pop
or
mov
imul
aaa
cli
jecxz
imul
inc
fcmovnu
mov
mov
cmpsl
lahf
push
push
or
sahf
lods
and
leave
push
dec
vmulss
in
pop
ljmp
and
dec
lea
pop
inc
xor
mov
xchg
push
jle
bound
inc
clc
addl
fsubrl
dec
and
push
inc
in
pop
call
or
sbb
imul
or
xchg
xchg
mov
push
mov
cmpxchg
sbb
js
mov
cli
fists
ss
incl
dec
fcmovnu
repnz
scas
nopl
mov
je
cmpsb
lods
inc
aaa
into
jbe
js
push
fxch
fists
mov
jns
mov
or
mov
mov
adc
cld
mov
dec
sarl
loop
pop
rolb
and
popf
inc
test
or
lahf
sub
out
jnp
mov
xor
out
or
paddb
xchg
cmc
add
rorl
ja
aam
and
ja
ret
in
out
jecxz
mov
add
xchg
insl
js
pop
test
cmp
ss
sti
xchg
imul
lds
mov
pop
xor
mov
or
xlat
test
pop
or
ret
lods
pusha
pop
push
nop
inc
inc
adc
aad
pusha
aad
rcrl
mov
int3
sbb
loope
idivl
inc
push
mov
jb
addl
xor
add
scas
mov
test
adc
lods
inc
mov
adc
xor
mov
adcl
push
jns
jae
inc
adc
add
mov
pop
and
movl
sbb
out
jae
mov
lods
test
jbe
movaps
cmp
pushf
jbe
movsl
adc
push
and
mov
test
jp
push
nop
loope
out
push
dec
fwait
test
test
push
jo
lods
mov
pusha
daa
xor
cmp
imul
xchg
inc
popf
rcll
mov
out
sub
je
or
cli
xchg
outsl
mov
loope
lock
sbb
nop
mov
inc
ret
or
mov
sarl
mov
or
mov
and
mov
orb
dec
ss
pop
rolb
out
push
push
jl
sub
inc
cli
xchg
js
xchg
std
repz
inc
adc
xchg
sub
sub
fiaddl
sbb
add
push
rorb
mov
std
lcall
in
jne
and
mov
dec
adc
addl
dec
std
testl
lret
xlat
or
ret
or
xor
icebp
cmpps
add
shrl
and
adc
daa
call
push
jp
or
fs
mov
imul
xor
fimull
cmp
and
lea
arpl
dec
and
outsb
and
ret
push
in
fbstp
and
jge
mov
inc
push
aam
adc
call
jnp
jle
sbb
outsl
adcl
add
jmp
adc
mov
mov
mov
aaa
jnp
lock
shlb
sbb
mov
ljmp
mov
dec
push
idivl
dec
inc
stos
sarl
lret
inc
inc
push
xchg
int3
dec
add
and
stc
sbb
fnstcw
xor
mov
xchg
mov
xor
adc
pop
daa
mov
and
inc
les
jbe
xchg
das
push
mov
lcall
and
adc
adc
imul
test
es
push
adc
inc
xchg
mov
bnd
xor
sub
mov
movsl
sbb
jp
fsubrs
xor
cmp
int
lock
rcrl
mov
pop
cmpsl
lahf
stos
and
mov
in
jmp
rclb
cmpsb
xchg
or
add
mov
and
mov
shrb
fs
orl
mov
or
mov
dec
add
aas
daa
mov
pop
cmp
jnp
dec
test
aam
xor
iret
jae
outsl
daa
cli
sbb
adc
sub
gs
pop
sub
pusha
mov
add
and
imul
mov
cmpsl
xchg
roll
fadds
jmp
push
jo
jb
es
cs
mov
xchg
mov
mov
enter
xchg
pop
ss
adcl
adc
dec
insb
out
les
aad
push
dec
loopne
addr16
pop
adc
add
adc
es
ret
cmpsl
out
pop
aaa
mov
cmp
scas
cmp
mov
or
std
push
fiadds
sti
and
sti
mov
ret
outsl
popf
push
mov
push
push
sbb
ljmp
adc
pusha
test
in
and
inc
add
rolb
adc
or
dec
pop
jno
imull
mov
sbb
push
enter
or
add
daa
into
inc
ss
and
xchg
mov
mov
push
fs
sub
int
decb
sbb
scas
out
mov
jnp
mov
cli
xchg
mov
mov
inc
cwtl
sbb
mov
adc
or
or
stos
mov
or
mov
shrb
ret
push
push
fldcw
repz
pop
and
leave
loope
jae
push
inc
push
pop
mov
int3
mov
fucom
daa
pop
adc
clc
movsl
sbb
mov
rorb
je
push
ret
lods
orl
outsl
ljmp
test
sub
dec
push
mov
movsb
out
sti
push
lea
fwait
ret
psllq
pop
psllw
sahf
push
rcrb
int
xor
push
add
inc
lahf
jg
shl
outsl
pop
adc
out
or
andb
pop
cmp
push
cwtl
outsb
push
inc
inc
fistpl
cwtl
xlat
sbb
and
pop
outsl
ret
arpl
rep
loopne
mov
mov
adcl
push
adc
and
lods
mov
sbb
inc
mov
xchg
scas
sbbb
push
in
xor
xchg
rorb
inc
shlb
and
movsl
or
push
sahf
pop
mov
roll
cmp
es
sbb
inc
shrl
leave
push
aad
or
loopne
push
mov
dec
push
inc
jecxz
out
push
mov
xor
cmpsl
lock
push
jo
cld
xchg
fs
cmp
cmp
pop
jae
jne
push
or
inc
jb
jmp
add
stos
push
leave
enter
mov
inc
lds
push
and
enter
jl
clc
das
sbb
test
mov
out
test
daa
ljmp
and
insl
push
popf
sbb
or
cmc
push
sub
sub
int3
aaa
leave
xlat
test
xchg
flds
lret
mov
add
iret
data16
lds
lds
loop
add
cmc
popa
adc
xorl
mov
or
fisttps
das
xchg
mov
bound
cmc
mov
lea
pop
dec
sbb
insb
sub
cld
adc
repz
sbb
mov
push
mov
loope
jg
fldl
fdivrs
pop
stc
mov
lds
jnp
cmp
dec
push
fnstenv
clc
nop
push
fwait
and
mov
fwait
daa
lret
pop
insl
pop
cmpsb
push
cld
jmp
shlb
adc
adc
mov
adc
xchg
add
and
shlb
lret
fimull
mov
sub
and
push
das
dec
mov
xorb
push
insl
mov
sbb
xor
bound
or
clc
cwtl
adc
add
cmpsl
icebp
rorl
mov
pop
stc
ret
mov
rorb
mov
andb
pop
sub
lea
inc
pop
repnz
jns
inc
cmpsl
xor
lods
js
shrb
push
les
mov
lret
cltd
jge
add
es
cmp
aad
inc
jecxz
inc
aas
pushf
movsb
repnz
jbe
add
or
jge
and
cmp
into
popa
cmp
imul
or
clc
cmp
test
stc
fprem1
andl
rcrb
cmp
int3
cmpsl
mov
add
movsl
sub
sbb
xchg
inc
push
outsb
mov
inc
fcomip
mov
loope
pop
mov
add
push
push
popa
sbb
call
xchg
stos
or
dec
mov
cmp
jle
mov
or
inc
arpl
or
sbb
jnp
movsl
push
sbb
push
xlat
cmpb
xchg
out
jp
fcoms
icebp
mov
inc
lea
lods
inc
add
adc
and
out
sti
pop
ja
in
icebp
mov
dec
add
aaa
pop
jb
lret
sub
jb
cli
mov
lahf
ljmp
sub
sahf
scas
adc
nopl
outsl
cli
jge
mov
push
cli
inc
mov
je
jbe
jge
test
mov
dec
cs
jne
stc
adc
push
mov
xchg
sarb
mov
adc
jae
push
cmp
pop
and
pop
popf
repz
shrl
push
rol
dec
mov
dec
pushf
lcall
add
into
pop
jle
loope
mov
sub
cmp
test
sarb
mov
mov
rol
cmpsb
xchg
inc
add
mov
int3
mov
and
cmp
int
cmp
je
popa
outsl
cmpsb
push
mov
in
nop
lods
mov
jo
ficoms
mov
enter
mov
and
rcrb
mov
sub
daa
popf
and
or
jb
push
push
cmc
mov
or
xchg
ds
sub
cmpsl
shr
xor
and
and
loop
repnz
out
mov
adc
or
ds
ss
out
loopne
mov
push
pop
jnp
sub
movsl
cltd
in
mov
orb
jmp
push
xor
jg
ljmp
pop
fmuls
pusha
int3
outsl
jnp
add
fldl
pusha
cwtl
test
mov
jmp
add
push
mov
and
and
movsb
adc
jg
addr16
mov
mov
inc
xchg
ja
xchg
inc
fidivrl
ds
insb
hlt
gs
lea
into
je
cltd
leave
outsb
mov
mov
test
inc
das
insl
and
arpl
push
sub
add
out
cmp
jge
mov
loopne
dec
repz
xor
stos
mov
xchg
in
sbb
aam
xchg
and
sbb
arpl
fistpl
into
or
pop
xchg
adc
addr16
mov
pusha
push
or
dec
cmp
mov
and
bound
ret
adc
jns
xchg
cmp
adc
adc
inc
test
je
sbb
xchg
test
push
cvtdq2ps
lret
adc
cmovb
lock
dec
xchg
ja
psubusb
cli
pushf
pop
adc
mov
sahf
pop
cwtl
jmp
push
fildll
sarb
ret
sarb
dec
clc
fwait
roll
and
mov
lea
lret
lock
dec
data16
popf
push
cld
or
test
sbb
es
aaa
cmp
scas
push
push
inc
cld
adc
inc
iret
mov
popa
cmp
xlat
jg
mov
sbb
pop
jns
sub
or
imul
jmp
out
insb
push
sbb
popf
cmp
sbb
rolb
fistpll
fbld
push
xchg
dec
inc
ss
push
or
adc
outsb
jmp
ret
push
lcall
jnp
mov
stc
test
out
push
pop
outsb
xor
aaa
mov
lret
out
arpl
xor
mov
sbb
or
enter
jo
rorl
jge
insl
mov
movsb
lret
and
data16
dec
stos
xor
movsl
imul
repnz
mov
and
fcomip
leave
outsb
add
inc
mov
xchg
cmc
push
in
mov
cmp
mov
addb
xor
das
dec
add
sahf
lret
mov
pop
mov
mov
sub
xchg
mov
dec
cmpl
sahf
in
stc
add
adc
add
mov
cld
push
pop
outsl
push
mov
or
jnp
movsl
cmp
das
cmpsl
imul
int
loopnew
int
inc
add
jle
in
imul
nop
adc
jb
cmpsl
jae
mov
xchg
leave
pop
inc
jmp
lret
test
adc
insb
push
sti
push
out
cld
xchg
scas
out
sbb
mov
sbb
push
pushf
xor
stos
mov
pop
mov
mov
es
lods
mov
insl
scas
mov
push
imul
pop
imul
add
mull
lcall
sbb
mov
lcall
rep
std
push
pop
ds
lahf
add
push
sub
mov
movsl
jmp
adc
push
repz
cmp
jecxz
lods
or
lds
mov
aad
fcoms
es
dec
xchg
daa
in
cmp
adc
inc
lea
lods
out
adc
and
cmp
cmp
pop
scas
outsb
push
gs
fbstp
lea
popf
cmpsl
inc
push
push
inc
jo
lds
cld
jbe
inc
and
push
sbb
popf
mov
fnstcw
mov
enter
adc
push
ljmp
stos
jno
nop
iret
dec
adc
out
stos
movsb
mov
cs
mov
cmpsb
cmp
and
adc
or
jle
mov
fldt
pop
sbb
xchg
inc
sub
js
test
arpl
dec
mov
sub
xchg
inc
xchg
pop
cld
mov
xor
jge
lcall
jl
mov
daa
outsb
cmp
add
std
push
xor
xlat
aas
aad
mov
mov
nop
sub
inc
adc
sti
stos
dec
jp
inc
mov
loope
push
cwtl
inc
jmp
cld
xchg
pop
and
cmp
or
in
dec
out
and
push
mov
mov
add
push
push
ret
or
jno
movsl
icebp
mov
jbe
or
insb
incl
pop
xchg
sbb
mov
xor
mov
iret
sahf
adc
xor
icebp
xor
jbe
subb
sbb
lret
add
push
dec
pop
jne
cmp
es
mov
loop
out
rclb
adc
neg
movsb
dec
pusha
mov
sbb
leave
pop
pop
dec
cmp
leave
int
jae
in
loope
sbb
scas
fdivrs
std
bound
outsl
std
or
out
test
xor
scas
pop
push
mov
ljmp
push
mov
mov
decb
imul
inc
nop
stc
push
dec
outsb
xchg
sbb
jecxz
or
mov
sub
inc
fadds
jno
icebp
push
inc
cmp
and
aad
inc
out
shll
int
xchg
cmpsl
aas
push
je
add
push
shrb
inc
push
aaa
popf
lods
fs
or
mov
repnz
in
pusha
inc
daa
cmp
xor
mov
shrl
lea
sub
mov
lret
ss
inc
hlt
cmp
aaa
mov
pop
sub
inc
repz
inc
repz
adc
negb
mov
mov
fwait
in
dec
mov
push
inc
imulb
imul
push
xor
xchg
in
lcall
jbe
fsubrs
jb
addr16
pop
inc
xchg
jle
dec
insb
pop
mov
push
lds
shrb
dec
push
arpl
sbb
add
adc
jle
insl
insl
rol
insl
inc
imul
pop
jno
mov
enter
dec
pop
xchg
ret
pop
mov
insl
sbb
dec
fsts
shrl
push
loope
or
cmpb
cmp
das
jge
pushf
lcall
addr16
in
sbb
mov
addr16
nop
daa
outsl
or
icebp
movsl
pop
push
mov
dec
out
pop
add
pop
mov
mov
fisubl
iret
mov
movsl
adc
ds
mov
repz
and
mov
dec
xor
in
mov
xlat
in
push
adc
mov
adc
pop
pop
stos
ds
cmpsb
mov
push
jge
das
inc
pop
xor
icebp
int3
fiadds
lock
bound
ja
pop
and
lret
sub
es
lcall
mov
enter
fisubrs
jp
js
js
cmp
mov
fs
push
scas
pop
gs
fsub
cwtl
stos
out
mov
mov
and
inc
add
std
dec
mov
push
or
xchg
movsb
addr16
mov
push
mov
lret
xchg
xor
jg
mov
icebp
outsb
pusha
pop
aad
pop
cmp
cmp
xor
test
mov
insl
add
lret
dec
fdivr
push
loopne
mov
xlat
leave
loope
and
adc
aas
orb
add
rolb
pop
adc
ror
or
ffree
jae
xchg
daa
scas
js
pop
and
jb
in
lret
xor
add
push
mov
inc
xlat
and
fsubrs
mov
mov
leave
scas
ss
scas
sub
fldenv
or
stos
mov
shlb
test
mov
or
cmp
mov
mov
insl
sahf
dec
sbb
dec
adc
and
fistpl
lock
push
and
mov
push
enter
adc
cltd
inc
sbb
mov
je
ds
push
or
adc
pushf
arpl
push
in
xchg
ljmp
popw
sub
xor
mov
bnd
dec
mov
stos
sbb
mov
push
bound
adc
sub
or
xchg
inc
add
stos
ror
mov
pop
popf
test
adc
lret
inc
and
clc
xor
fdivp
sbb
or
add
shl
cltd
mov
fcompl
cmc
xchg
stos
mov
xchg
clc
adc
jb
aas
xchg
or
insl
inc
pop
sbb
mov
xchg
ja
push
or
push
sbb
xchg
movsb
fsts
push
out
and
insb
push
movsl
mov
aad
idivb
jb
in
xchg
out
push
imul
sub
addr16
out
shl
inc
inc
pop
push
aad
push
and
cmp
pop
fisttps
mov
loopne
push
add
shrl
insl
out
mov
sub
push
sahf
hlt
aas
sbb
xchg
sub
cmp
nop
jnp
mov
cmp
jle
int
mov
out
shll
mov
add
jg,pt
push
int
cmp
and
rorl
popa
sbb
jnp
and
js
cli
lea
lea
mov
sbb
stc
mov
popa
mov
jecxz
movb
int
loopne
inc
loopne
or
cmp
add
pop
xchg
sub
mov
sub
cli
mov
jp
xor
mov
aad
mov
nop
test
inc
cmpl
lods
or
fwait
adc
ffreep
mov
xchg
sub
mov
es
jmp
push
pop
push
ljmp
in
jl
pop
push
push
jg
rolb
add
xor
xor
ret
mov
mov
jecxz
or
shl
ljmp
mov
inc
jle
mov
jecxz
dec
enter
aaa
into
add
sbb
lods
push
mov
and
popa
add
idivb
popf
mov
ljmp
dec
xor
mov
xchg
icebp
or
bound
adc
gs
or
loopne
popf
xor
or
hlt
mov
inc
pop
loop
lock
xchg
mov
ljmp
push
xor
inc
fisubl
adc
push
aad
insb
adc
and
cmpb
mov
mov
mov
push
stc
nop
nop
lods
inc
cmpsl
mov
fwait
mov
in
jge
mov
xchg
les
xchg
and
cwtl
add
inc
popf
xchg
push
inc
cmpsb
or
or
repnz
xchg
shl
clc
add
pop
imul
xchg
pop
jecxz
mov
push
enter
pusha
pop
cmp
adc
inc
pop
dec
mov
xchg
push
or
sbb
jecxz
ja
cwtl
arpl
mov
push
mov
inc
sbb
mov
repnz
stos
cld
leave
cmpsb
lock
repnz
push
call
adc
adc
rol
outsl
dec
dec
push
hlt
mov
push
push
pop
sbb
dec
andb
testl
popa
lret
xchg
das
stos
lret
loopne
mov
loope
push
stc
mov
jle
sbb
or
pop
repz
add
jns
add
or
int
loop
js
jns
jmp
imul
movsb
pop
insl
add
and
out
add
adc
mov
outsl
mov
cmovl
lret
pop
sbb
cs
or
scas
jae
dec
pop
pop
xchg
ss
fists
xchg
int3
cs
jb
pop
jmp
loop
popf
mov
mov
add
cli
popf
mov
mov
cmp
pop
fisubrl
push
pusha
leave
mov
push
in
push
mov
popa
or
int3
or
flds
and
sarb
inc
pop
je
xor
mov
inc
loope
jmp
ljmp
sbbb
push
icebp
mov
pusha
notl
jnp
adc
cli
mov
fsubr
out
add
ja
cmp
icebp
nop
inc
dec
ljmp
push
outsb
std
enter
andl
dec
adc
cltd
xor
mov
popl
lds
and
je
mov
inc
push
movsb
stc
out
cmp
mov
mov
mov
aas
loopne
pop
out
inc
jge
cmpsb
jmp
das
or
loope
pop
sub
stos
add
cmp
sahf
cmpb
inc
aaa
dec
loope
js
dec
push
xchg
adc
dec
cs
divl
scas
sub
sbb
into
add
push
mov
jmp
bound
add
hlt
popa
or
mov
inc
adc
fcmovne
xor
sub
mov
popf
jns
pop
icebp
pop
jle
les
jae
hlt
jmp
dec
push
cwtl
xor
and
inc
cmpsl
test
mov
jo
aaa
adc
jmp
inc
lcall
lea
xor
fnstsw
pop
mov
push
push
insb
imul
xchg
scas
bound
aas
and
data16
dec
fnstsw
dec
inc
jecxz
sbb
push
add
repz
pop
xchg
pop
les
pop
gs
mov
jg
icebp
sub
adc
adc
mov
fdivrl
and
shll
aad
mov
fwait
in
loope
fsts
nop
add
mov
inc
cmp
in
mov
or
adc
xchg
rorl
subb
add
cld
loopne
inc
pop
fucomi
fcomp
mov
lds
sarb
imul
push
repz
scas
icebp
and
popf
push
iret
push
cltd
shrb
fmull
test
in
out
pushf
xchg
inc
shrl
aad
mov
std
adc
adc
mov
mov
test
aas
add
aad
pop
jge
lods
xchg
jecxz
iret
dec
push
fdecstp
lock
scas
incl
imul
sarb
fsubrs
test
sbb
push
push
jmp
mov
fdivrp
xchg
incb
xchg
stos
fildl
cmpsl
nop
mov
fistpl
mov
cmpsb
imul
push
inc
shrb
adc
dec
cmc
jecxz
mov
push
js
fisttpll
push
lret
incl
imul
sbb
das
mov
cmp
pop
pop
cwtl
xchg
add
sbb
aad
pop
cmpsb
mov
pop
cmp
fcmove
adc
sbb
pop
popa
xor
sbb
sub
lahf
ss
dec
sti
repz
sub
push
addr16
aas
or
sub
mov
sub
cmp
repnz
pop
lods
push
sahf
or
jmp
jg
lahf
mov
test
mov
sbb
insl
add
fstps
data16
je
addr16
pop
mov
xchg
push
fistpll
dec
das
inc
pop
jo
jnp
aaa
lods
jo
xor
xchg
jge
leave
shlb
or
push
xchg
inc
scas
aas
nop
daa
jno
mov
or
xor
ljmp
cmp
mov
mov
cmpsl
iret
aad
adcl
mov
test
add
mov
xor
or
xlat
addr16
sub
push
out
add
int3
daa
inc
cmp
rorl
or
in
and
or
push
ja
fldenv
adc
pop
mov
jnp
xor
adc
fs
call
and
mov
es
adc
push
jae
in
push
loope
aam
xchg
mov
pop
jmp
add
int
xchg
testb
cs
sbb
mov
jns
idiv
or
stc
add
or
aam
cmp
cltd
cmp
cs
cs
sbb
lods
inc
cmp
pop
je
lret
sbb
mov
sbb
fwait
enter
jnp
push
es
bound
subl
test
loope
repz
mov
outsb
jp
loopne
mov
test
xor
push
dec
mov
pop
into
dec
push
fistps
std
outsb
xchg
mov
addr16
outsl
inc
jmp
ja
jg
aam
add
aam
jno
into
push
int3
lcall
mov
pop
data16
add
cli
or
adcb
mov
lcall
push
push
mov
inc
add
je
bound
in
test
sbb
mov
mov
jecxz
das
mov
ds
inc
data16
gs
rcl
push
imul
icebp
cmpsb
shl
and
loopne
sub
lds
shll
cs
decl
cmpsb
xchg
sub
mov
dec
dec
arpl
jle
sbb
mov
xchg
inc
or
enter
mov
ret
divl
ffree
mov
pop
xlat
xlat
in
nop
std
add
xchg
pop
leave
not
inc
in
pushf
pusha
ds
mov
rcr
push
dec
loopne
cmp
cmp
cs
pusha
stc
ret
sub
pop
pop
pop
call
stos
data16
xchg
test
mov
push
or
jecxz
mov
xchg
scas
pop
stos
add
xchg
dec
jnp
pushf
cli
add
test
test
inc
fcoms
in
cmc
mov
fidivrs
cmpsb
or
push
lcall
xlat
mov
fwait
movsl
aaa
adc
push
or
idivl
ret
add
fnstenv
sahf
cmp
inc
into
xlat
fistpll
pop
repnz
lcall
loopne
stc
nop
popl
sub
lret
xor
mov
call
jb
in
jns
jmp
into
insl
jge
dec
les
xor
xchg
icebp
ljmp
xor
insl
inc
mov
mov
insb
into
in
jecxz
add
ret
or
nop
jb
out
iret
or
aam
std
ror
lods
inc
shll
mov
repz
push
insb
lret
mov
jnp
fidivrl
cmpsb
arpl
fsubrs
pop
mov
and
jb
cmpsl
fbld
fprem1
cli
or
shl
scas
clc
mov
xlat
jmp
mov
aad
lds
test
dec
in
xor
add
add
scas
xor
jns
mov
test
jnp
xlat
xor
mov
or
sub
add
in
push
or
ror
scas
ja
test
in
stc
dec
mov
out
aaa
mov
repz
cmp
in
fldl
mov
loopne
sub
cmpsl
mov
mov
jno
sbb
mov
mov
pop
scas
mov
lret
jnp
and
imul
popf
sbb
mov
jns
lret
ds
icebp
xchg
lret
mov
out
sbb
sbb
ss
jp
daa
mov
adc
mov
or
mov
add
das
inc
mov
sub
adc
jl
pop
loopne
popf
xchg
shld
insb
outsl
daa
jno
outsl
dec
mov
dec
stos
ljmp
cmp
mov
out
arpl
mov
add
scas
fidivrs
imul
xor
cld
dec
stos
mov
packssdw
add
mov
cld
in
aad
jg
mov
xor
and
int
add
in
test
aaa
dec
sbb
and
xor
das
in
mov
add
adc
mov
add
jge
or
mov
shlb
cmp
pop
jg
stc
mov
sbb
cmp
inc
xchg
sbb
xchg
xor
in
lahf
arpl
mov
xchg
cmp
ljmp
mov
ds
cmpsl
xchg
adc
cmp
mov
mov
data16
or
imul
lahf
adc
std
sub
fwait
xor
pusha
mov
out
inc
into
mov
sbb
dec
sub
xor
in
out
mov
mov
stos
fdiv
lea
cmp
iret
mov
jae
push
and
icebp
adc
mov
sub
sbb
loopne
sub
or
std
int3
jecxz
js
push
mov
lcall
pop
pop
fidivrs
add
mov
pushf
adc
mov
roll
pop
lods
mov
cmp
xchg
inc
divl
xorb
sbb
fstps
mov
data16
mov
notb
out
lods
or
sbb
in
jns
mov
leave
cltd
jl
push
mov
sti
shll
adc
add
pop
mov
aad
scas
mov
in
push
jg
iret
fistl
mov
jae
std
sub
jmp
push
push
adc
divb
cs
xor
and
jecxz
mov
jl
jnp
lods
dec
fisttpl
nop
test
lcall
sub
inc
mov
inc
pop
jno
cmpsb
mov
out
out
and
fwait
push
movl
iret
sbb
xor
inc
aas
popa
add
repz
pop
orb
push
and
in
push
jl
fwait
mov
movsb
pop
je
imul
pop
push
inc
movsl
cmp
insb
repnz
push
hlt
mov
inc
push
movsb
aad
fdivrs
dec
sub
fldcw
mov
int
mov
push
sbb
mov
xchg
loope
jecxz
adc
jo
dec
pusha
js
inc
imul
arpl
jmp
dec
lea
lahf
jp
or
mov
dec
inc
movb
aad
adc
jae
sub
xor
add
cmp
jecxz
mov
pop
scas
ror
lret
sbb
test
push
sub
cmc
je
and
dec
or
aaa
pusha
push
sub
dec
cli
and
and
add
fnstenv
mov
inc
or
movsb
cmp
fsubr
arpl
fwait
and
and
cltd
pushf
jbe
and
inc
mov
mov
push
inc
and
mov
popa
leave
out
fcmovne
imul
loop
pop
es
pusha
add
imul
pusha
and
xor
push
inc
fimull
es
sbbl
push
add
into
xchg
inc
pop
jmp
sbb
add
std
xchg
das
xor
insl
lods
repnz
xor
loope
adc
or
outsl
ja
mov
mov
inc
divl
pop
adc
leave
sarl
out
arpl
cmp
stos
in
pop
pop
outsl
jle
or
mov
ss
mov
xor
cmpsl
fnstenv
dec
inc
sti
jbe,pt
push
out
push
adc
lea
xor
pop
sahf
sti
or
or
jbe
call
sub
fucomp
gs
int
imul
js
dec
mov
pop
cmp
adc
jecxz
inc
xor
and
jb
xor
xchg
aas
rcr
imul
dec
stos
inc
and
mov
imul
daa
hlt
nop
clc
stos
mov
aam
mov
call
pop
aaa
pusha
lahf
xchg
pop
jo
inc
push
lea
mov
jl
fcomps
or
xchg
mov
gs
fwait
mov
add
addr16
pop
ret
inc
lea
lret
out
mov
fidivl
stc
test
das
push
sub
sbb
mov
add
jns
and
jge
mov
rcrl
scas
nop
push
fidivs
aad
or
jb
lock
popl
or
cmp
lcall
cmp
adc
aad
mov
out
mov
test
pop
pop
xor
mov
int
and
in
test
div
push
lods
pop
or
inc
divb
shrl
mov
dec
pop
seta
mov
jmp
adc
sub
mov
and
aaa
shll
lcall
sub
inc
cmp
ja
jmp
popf
dec
int3
insb
mov
imul
js
ret
pop
leave
hlt
mov
push
or
lds
mov
cmpsb
xchg
sub
push
repnz
clc
push
clc
jae
xchg
pop
push
es
push
push
xor
mov
ffreep
xchg
sbb
jecxz
daa
outsl
daa
test
dec
ja
mov
rcrl
aaa
mov
movb
lret
pop
adc
sbb
inc
mov
jle
push
sub
adcb
dec
pop
or
add
in
dec
jg
xlat
xchg
je
fwait
dec
fildll
mov
ss
or
add
inc
sub
sbb
pop
xchg
repnz
pop
xor
lret
lret
jg
scas
jb
sbb
xor
jecxz
adc
mov
das
add
dec
dec
movsl
or
out
mov
mov
add
dec
clc
and
fcmovnb
sbb
dec
call
dec
mov
and
or
push
mov
pop
or
dec
das
inc
adc
loop
xor
and
pusha
jnp
add
mov
sub
mov
sbb
loopne
xor
sbb
push
mov
or
jb
pop
ljmp
jb
mov
scas
push
pop
fistpll
or
mov
scas
fisttpll
lods
sbb
sahf
in
stos
push
aas
and
ss
xorl
xchg
pop
or
mov
in
push
ud2
mov
es
rcrb
inc
dec
mov
xchg
insl
inc
push
and
mov
repnz
in
xchg
push
pop
pop
fimuls
jmp
mov
xchg
sub
jo
mov
fwait
mov
scas
rorl
cmp
or
out
mov
movsb
test
adc
faddp
xor
repz
std
call
mov
out
insb
adcb
jp
movsb
lret
lea
push
out
or
add
adc
lret
sbb
push
push
xchg
out
cmc
and
pop
lret
mov
sbb
addr16
sbb
mov
sbb
data16
mov
xor
inc
loopne
stc
arpl
nop
ss
push
inc
fwait
shll
add
mov
rcrb
jge
sbb
mov
loopne
idivl
xor
xchg
add
ret
push
fwait
roll
ret
scas
mov
or
mov
add
cmp
and
jnp
dec
gs
test
test
pop
push
inc
std
or
lret
sub
adc
repnz
lret
adc
into
test
popf
andb
mov
sub
cmp
push
sub
cli
rolb
outsb
icebp
push
fidivs
add
add
fs
fmul
out
popa
dec
jecxz
lds
mov
xor
fs
icebp
clc
mov
fcomps
xor
jg
addl
stc
xchg
ljmp
and
push
inc
outsb
inc
cmp
aaa
sbb
shrl
sti
es
mov
mov
xlat
cmp
and
inc
mov
jmp
cmc
test
sbb
adc
icebp
loop
loope
jp
push
mov
mov
in
mov
not
mov
and
push
jae
bound
shl
aad
or
mov
icebp
mov
gs
xchg
push
mov
loope
mov
les
and
sbb
mov
sarb
aad
adc
adc
les
pop
sbb
sahf
loop
sbb
mov
imul
sbb
popf
push
or
ret
cmp
push
inc
mov
outsb
add
pushl
enter
jns
xchg
into
jle
je
jo
fwait
inc
mov
andb
jb
mov
and
std
jns
stos
xchg
mov
push
lods
inc
xchg
insl
dec
fsubrl
or
enter
ss
sbb
xor
sub
jno
xchg
cmc
mov
xor
scas
in
ror
iret
push
pop
jecxz
aam
shlb
sub
mov
out
jns
pop
loopne
xchg
and
out
call
lret
xlat
or
mov
cltd
pop
nop
cwtl
xchg
cs
sarl
push
sbb
xchg
xor
jge
out
sahf
test
jae
sub
jne
call
fldl2e
sahf
and
cmp
or
xor
and
imul
repnz
jnp
cmp
out
fsubl
test
pop
mov
adc
sub
popf
dec
xchg
inc
enter
pop
out
inc
aad
cli
mov
dec
out
sbb
insl
add
scas
mov
dec
add
jae
sub
mov
adc
jbe
test
sbb
xor
dec
xlat
addr16
dec
lret
jb
in
dec
push
lret
loop
mov
add
es
pop
lods
clc
xchg
add
popa
movsb
mov
leave
cmp
dec
stos
or
push
mov
fisttpl
js
lahf
push
shrl
xor
pop
inc
mov
sbb
push
add
dec
dec
mov
daa
pop
lcall
jle
jnp
push
mov
push
movsl
push
out
mov
cmpsl
aas
and
notb
xor
push
jbe
popa
jns
push
popa
add
and
sub
shll
scas
imul
lcall
or
xor
mulb
push
jno
insl
in
and
mov
std
repz
sbb
push
push
mov
cs
insb
int3
cmp
adc
cmpsb
dec
and
jb
test
and
mov
inc
mov
addr16
rcrl
je
pop
in
fistpll
mov
aam
stos
lea
bound
scas
xor
xor
jns
ljmp
ds
mov
xlat
xchg
jo
aam
ja
and
push
cld
xchg
ret
rorl
mov
add
xorb
and
push
mov
inc
pop
sub
negb
cmp
pop
out
push
enter
inc
push
lods
xor
lods
inc
je
mov
pop
lcall
xchg
shl
imul
cwtl
cli
pop
cmp
stos
push
loopne
dec
mov
cmp
ds
shlb
jo
push
icebp
scas
dec
xor
negl
rcrl
and
das
push
js
iret
xor
jne
xchg
leave
stos
pop
jo
push
lret
push
push
cmp
push
push
cmp
pop
daa
ljmp
push
pushf
push
xchg
xor
dec
xchg
outsl
push
sub
add
xor
mov
fidivrs
or
xchg
pusha
ret
pop
pusha
and
pushw
lock
pop
mov
imul
lret
pop
or
dec
sub
cmp
pop
dec
push
insb
mov
mov
fsubrp
xor
iret
and
lock
adc
xchg
jg
push
out
inc
mov
xchg
mov
pop
leave
test
jbe
mov
push
aaa
xchg
es
mov
pop
mov
cmpsb
mov
inc
sti
inc
dec
push
popa
insl
dec
out
push
dec
loopne
hlt
mov
sbb
mov
test
call
rclb
rcrl
fisubrs
fistpll
and
push
xchg
mov
xchg
hlt
or
xchg
orb
fs
jno
cmp
xchg
adc
lods
hlt
inc
cmp
adc
jbe
ljmp
out
rclb
or
mov
outsb
push
mov
cmp
sbb
shll
scas
xchg
xchg
cmp
cmp
cwtl
add
cltd
scas
je
cli
cltd
stos
fs
idiv
cwtl
fsubl
stc
fnstcw
test
mov
testb
icebp
rol
cwtl
sbb
cmp
add
cmp
out
dec
cs
dec
aad
js
je
lds
loop
jae
in
cmpsb
xchg
stos
inc
dec
dec
js
shrl
fistpl
cmpsl
pop
mov
pop
sbb
pop
pop
ds
add
and
cmp
in
and
fst
imul
out
jns
adc
cmp
pusha
lea
pop
imull
jno
lret
mov
jmp
mov
push
in
popf
mov
jl
jns
cmc
clc
inc
ss
mov
jno
inc
movsl
pop
xchg
aam
dec
aam
sbb
and
add
test
outsb
cmp
sub
mov
data16
and
stos
nop
mov
and
jle
scas
scas
shrl
rcll
jno
mov
xchg
push
inc
jns
inc
or
jnp
ret
fs
sub
mov
xor
xchg
pop
iret
das
mov
sub
call
inc
or
jae
int
cmp
inc
inc
pop
jmp
mov
popf
aaa
jecxz
mov
ficomps
out
xchg
jnp
xchg
jb
sub
jno
push
lret
iret
push
call
int3
inc
in
fwait
mov
lcall
sub
push
into
outsl
jecxz
dec
push
mov
adc
pop
ja
lea
sti
inc
xchg
pusha
outsb
inc
mov
push
jae
shl
mov
aam
push
scas
cli
je
shl
inc
xor
iret
sub
mov
add
incl
imul
dec
cli
out
shlb
xlat
mov
shrl
xchg
roll
adc
mov
js
sarl
in
fwait
mov
cmp
jb
cld
outsb
or
das
cmp
popa
and
cs
sub
dec
adc
inc
sbb
mov
push
sub
sub
and
mov
bndldx
stos
or
xchg
out
push
inc
sbb
dec
gs
xor
stc
mov
push
xchg
pop
jno
cmp
frstor
inc
fdivs
and
loopne
cli
push
pop
repnz
mov
clc
dec
or
jecxz
rcll
mov
test
daa
cltd
push
jge
cmc
and
inc
call
cs
sbb
cltd
arpl
mov
jne
xchg
into
dec
mov
jbe
dec
enter
sti
mov
and
mov
shrl
pop
xchg
pushf
mov
pop
inc
test
jb
in
orl
pop
or
sbb
xchg
dec
and
rcr
aaa
inc
iret
jb
mov
mov
mov
jne
pop
fcomps
daa
jg
adc
xchg
pop
shlb
jbe
push
push
xchg
push
lret
lret
adc
and
test
xor
inc
cld
fimull
insb
jecxz
jle
and
inc
shr
jg
in
mov
dec
iret
push
dec
in
pop
popf
jb
xchg
rcrl
pop
pusha
fucomip
cs
or
int
or
jbe
adc
mov
das
or
sub
mov
push
xchg
push
pop
aaa
and
fbstp
in
imul
shll
jb
xchg
mov
sbb
cmpsl
sbbb
daa
clc
js
fisubl
pushf
sbb
pusha
testl
ja
mov
mov
and
repnz
mov
jb
pop
inc
jecxz
cltd
test
aaa
mov
jb
shr
or
adc
negl
test
mov
mov
push
nop
in
add
xor
mov
mov
mov
aad
xlat
mov
ja
imul
scas
aad
pop
lock
scas
pop
pop
pop
and
out
mov
ja
scas
loopne
add
lahf
mov
icebp
push
xor
mov
cs
jle
ss
int3
daa
inc
add
jmp
cmp
jmp
lcall
rcrl
enter
loopne
pop
xor
mov
mov
inc
cltd
mov
adc
enter
xchg
es
into
pop
inc
fnstsw
out
or
adc
add
nop
mov
sub
loop
orb
xchg
jp
imul
scas
or
dec
outsb
mov
push
faddl
data16
mov
addr16
out
mov
outsb
in
gs
pusha
mov
jmp
inc
jmp
jle
std
in
in
mov
xchg
out
imul
insb
ffreep
pop
aas
pusha
xlat
dec
xchg
repnz
es
pop
out
cli
cli
and
js
aad
loope
xor
aas
add
loop
inc
data16
mov
cmp
cmc
mov
jae
mov
adc
or
movsl
cmp
lcall
mull
imul
sub
mov
out
push
mov
sub
xlat
cmp
test
arpl
mov
mov
sub
cmpb
add
cmpsl
sbb
sbb
pop
adc
mov
or
data16
mov
out
data16
mov
inc
sbb
jo
or
nop
mov
sahf
add
shlb
clc
pop
loope
js
pop
cmp
pop
or
les
test
inc
cmp
push
es
mov
psubw
cmp
push
sbb
xor
mov
push
jbe
inc
push
or
sbb
pop
add
jne
and
jge
das
inc
xchg
ja,pn
pushf
xor
sbb
cmp
adc
rol
movsl
add
jmp
xchg
xor
pusha
aam
mov
sahf
insl
jne
adc
ss
jle
push
mov
pushf
ret
cmp
mov
push
mov
jb
pop
icebp
test
pushf
add
pop
jns
jge
push
in
jbe
fidivl
mov
push
mov
lea
movl
dec
pop
lret
ja
fistpl
dec
xchg
push
outsb
inc
fisttpl
das
jge
lods
repnz
pop
add
outsl
push
mov
movsl
mov
lds
push
call
xor
sub
out
lret
dec
add
dec
out
roll
hlt
aad
dec
mov
pop
jl
call
aaa
cmpsb
push
mov
cmc
or
ret
jae
xor
ficoms
lret
into
arpl
xor
dec
mov
push
xor
flds
xchg
add
bswap
and
imul
insb
clc
test
pop
xchg
add
pushf
ds
sub
stc
and
adc
cmpsb
inc
mov
jg
call
and
fiaddl
popa
mov
int
jno
cmp
scas
sahf
sbb
movsb
je
stos
inc
mov
jl
rcrl
sub
mov
pop
andb
scas
sub
push
cmpsb
and
fdivs
aas
movsb
sbb
push
cmc
mov
pop
mov
push
sub
mov
insl
and
or
aaa
mov
cmp
pop
out
fsts
xchg
fcmovbe
mov
or
mov
or
fbstp
pop
sub
sbb
sbbl
icebp
dec
lahf
sar
sbb
dec
sbb
adc
aad
ljmp
jb
mov
pop
repnz
jp
lret
pop
mov
sub
mov
dec
enter
pop
push
push
je
xor
or
dec
push
lcall
scas
loop
filds
cmc
icebp
mov
xchg
dec
in
clc
lods
repnz
cli
ljmp
popf
test
pop
nop
addr16
andb
into
daa
mov
aas
inc
adc
xchg
test
gs
jb
insb
dec
mov
push
sub
or
xor
sarb
test
pop
dec
xor
or
lods
adc
dec
in
das
jbe
sub
sub
mov
and
lret
ficoml
data16
lret
loopne
cld
pop
or
jne
loope,pt
rol
mov
shrl
fwait
mov
and
ret
hlt
push
xchg
arpl
mov
mov
add
inc
mov
add
mov
xchg
std
or
dec
in
pop
push
outsb
jge
nop
push
loop
fisttps
pop
and
inc
in
cmpsb
mov
sbb
hlt
xor
cmp
mov
sbb
sub
pop
push
movsb
int3
in
mov
adc
test
cmp
iret
xchg
mov
jg
je
adcl
cli
add
inc
xor
push
mov
in
testb
jle
pushf
es
orl
shlb
mov
push
js
dec
xlat
cli
rcrb
orl
jle
pop
sbbb
jae
xchg
push
das
xor
push
ljmp
inc
mov
jb
mov
jecxz
sub
ret
out
test
cwtl
push
mov
jae
lods
sub
sti
and
pusha
into
sbbl
inc
xlat
repz
cmpsl
nop
inc
and
jmp
xor
sti
andb
add
inc
ss
xor
aas
pop
push
cltd
div
lret
adc
arpl
push
jmp
or
rcr
aas
sarb
inc
sbb
mov
je
jb
sbb
in
les
cmp
repnz
pop
movsl
mov
cmp
jns
sbb
cld
cmp
cmp
or
jl
inc
mov
mov
inc
popf
jbe
push
jge
mov
add
pop
sbb
push
lcall
or
scas
nop
jmp
mov
je
inc
aam
cli
nop
xor
popf
lahf
ja
lret
mov
repz
or
ja
cltd
xor
daa
aas
roll
pop
clc
mov
movsl
ret
xor
inc
inc
divl
jg
sub
sub
jge
or
out
jbe
sbb
cmp
mov
mul
pop
dec
scas
js
and
mov
dec
ljmp
xor
movsl
inc
imul
loop
sub
push
imul
sbb
ss
mov
jb
sub
stc
or
pop
icebp
cmp
inc
leave
pop
jo
lock
cmp
sub
push
loope
inc
lcall
inc
popf
int
dec
in
or
shl
mov
repz
and
adc
cwtl
ss
aad
cmp
fidivrs
fst
in
push
mov
repz
aas
loopne
dec
lods
icebp
inc
cmp
dec
lret
ja
shlb
iret
int
push
int3
push
mov
sahf
clc
pop
or
cmc
je
scas
push
sub
popf
call
jno
xchg
xor
lods
cmp
xor
shll
push
push
sub
ss
dec
fs
pop
mov
dec
loop
jge
cmp
jbe
out
mov
ret
cmp
mov
rcll
dec
jns
movlps
rcrb
cmp
pushf
jecxz
adc
sbb
adc
adc
mov
xor
clc
mov
push
stc
pop
xchg
bound
cmc
cmp
mov
sbbb
rorb
sub
or
mov
or
cmp
sbb
pop
xchg
dec
leave
sbb
xor
daa
cmp
dec
xor
decb
in
add
scas
movsb
es
movsb
mov
pop
cmp
pop
mov
fistpll
dec
dec
add
cmpsl
sub
lods
ss
xor
into
mov
inc
xchg
cs
imul
and
jae
pop
mov
xor
xchg
and
sbb
xorb
xchg
stos
aas
shr
stc
aam
or
mov
or
stos
mov
aaa
push
xor
cmp
dec
adc
je
xor
cmp
mov
and
push
test
rcrl
jns
jl
shrb
mov
fcomi
dec
mov
cld
mov
pop
das
lods
xor
push
pop
lea
call
pusha
or
out
insb
or
dec
leave
sbb
push
fstps
cld
xor
cmp
mull
push
xchg
outsb
push
in
test
adcl
andl
cmp
pop
ljmp
mov
aas
sbb
fists
pop
mov
stc
or
jle,pn
mov
mov
pop
dec
push
jge
push
pop
and
dec
sub
enter
test
jge
and
and
fsub
scas
sbb
jb
pop
mov
into
pusha
shrl
mov
fincstp
fcoms
test
mov
dec
insb
rorl
mov
mov
hlt
xor
orl
ja
arpl
mov
popa
mov
scas
int3
jg
mov
iret
mov
adc
sbb
data16
es
iret
imul
inc
fsubrp
das
test
aas
lcall
sbb
cmpl
shrb
sub
add
in
add
push
mov
fisubrl
lret
sub
movsl
mov
cld
shll
adc
aas
jmp
bound
dec
xlat
dec
cwtl
lahf
mov
rorb
gs
das
lds
xchg
fcmovne
aad
gs
icebp
jp
xchg
insb
cmpsl
inc
sbb
dec
dec
jb
lds
into
cmc
insb
test
inc
pop
mov
add
jp
nop
popf
jbe
push
cmp
loope
pop
push
xor
das
adc
test
sbb
inc
mov
pop
mov
add
pushf
xor
dec
push
test
mov
loopne
scas
in
cli
daa
insl
sub
mov
arpl
loop
jbe
int3
mov
insl
in
adc
stc
cmp
and
dec
out
stc
adc
xor
mov
sub
jle
int3
xlat
cmpsl
push
pop
pop
call
cmpb
aas
imull
sub
cmpsl
or
cmp
sub
pop
loopne
jmp
pop
hlt
mov
fnstenv
jge
jp
repz
pop
pop
lods
or
dec
push
xor
ljmp
lret
push
jg
les
mov
mov
scas
jns
addl
sub
mov
fnstsw
adc
mov
pop
loopne
mov
mov
add
jg
les
dec
cmp
mov
dec
sbb
popa
xor
repz
cs
lret
xchg
nop
sbb
add
or
fcmovnbe
shl
push
cmpsl
mov
pop
cs
add
aaa
fs
lahf
test
lods
cmp
cmpsl
dec
xor
ss
in
jno
and
inc
dec
shrb
je
stos
pop
jb
inc
scas
stos
xchg
roll
dec
lret
lret
inc
fisubs
call
cwtl
xor
in
push
add
cmc
getsec
dec
or
mov
add
xchg
jg
mov
dec
pop
outsl
stos
pop
daa
neg
xor
stos
sub
icebp
in
loopne
push
repz
sbb
dec
and
sbb
or
and
mov
int
pop
mov
adc
into
push
jl
andnps
popf
jne
js
out
xchg
jge
inc
rcrl
call
iret
mov
in
je
adc
ss
jl
fdivrs
pop
mov
xchg
stos
fidivrs
std
mov
sbb
orl
aas
lock
add
mov
cmp
and
pop
sub
add
mov
xchg
ja
lock
mov
pop
push
fcmove
sbb
nop
roll
mov
jno
jae
add
mov
inc
cmp
pop
cmp
push
lods
punpckldq
or
test
fidivrl
lret
aad
and
faddp
inc
fidivrs
movsl
dec
or
and
lahf
sbb
movsb
cmp
push
ret
mov
mov
dec
dec
cmp
cmp
lds
shlb
lods
push
xchg
mov
imul
pushf
fisttpl
cltd
sbb
jmp
fisttpll
imul
add
sbb
fwait
xchg
xchg
xchg
or
inc
mov
cmp
icebp
addl
in
ficoms
fiaddl
xchg
insl
pop
mov
ss
lahf
out
cmpb
iret
icebp
jno
jo
mov
xor
mov
cwtl
sbb
fisubrl
mov
jle
push
or
cmp
or
xchg
scas
or
sub
in
les
xor
js
leave
loop
daa
out
pop
or
roll
mov
pop
ror
cmc
inc
cmp
sbb
pop
cwtl
jnp
pop
xchg
addb
fildl
sub
stos
push
cli
or
das
inc
jle
ja
mov
fwait
inc
jae
fiadds
xor
xchg
sbb
xchg
arpl
data16
fisubl
mov
push
out
fwait
jmp
in
adc
cmpsb
das
sub
jbe
mov
mov
sbb
inc
adc
or
cld
sbb
xchg
lahf
daa
hlt
stos
xlat
outsb
sub
leave
ja
jp
or
pop
push
scas
sub
or
je
pop
pop
hlt
cmpsb
faddl
fmull
jnp
jbe
push
btc
fnstcw
xor
iret
xor
pop
testb
sbbb
dec
jge
insb
scas
es
je
repz
xchg
enter
xor
popa
in
dec
xchg
adc
mov
leave
and
and
xchg
mov
ret
mov
pop
mov
jle
sub
pusha
mov
push
xor
push
data16
pop
lock
mov
fs
out
adc
jne
xchg
push
sub
push
inc
mov
adc
xchg
adc
hlt
aaa
arpl
popf
sbb
mov
cmp
pop
stc
lcall
hlt
movsb
jle
adc
jo
arpl
mov
inc
add
mov
push
js
test
gs
pop
add
repnz
and
and
push
in
mov
shll
lock
push
add
sub
push
push
mov
mov
dec
cmp
cwtl
insb
je
pop
push
test
loop
loop
push
jbe
rorb
push
insl
movb
ja
popf
or
sbb
jno
fs
aam
popa
pop
push
adc
or
cmc
push
pop
scas
or
js
jge
adc
or
outsb
rorb
stos
out
loopne
ja
movsl
mov
cwtl
ret
fbstp
fs
repnz
mov
jg
dec
subl
scas
cmp
pop
mov
es
test
ret
ret
sub
mov
xor
and
mov
mov
fisubl
xchg
cli
inc
enter
add
testl
pusha
addr16
popa
push
sbbb
or
mov
mov
das
pop
dec
push
repnz
icebp
dec
shrb
rcrb
push
lahf
pop
into
pop
inc
inc
adc
outsl
pop
insl
ret
mov
push
sbb
faddl
icebp
cs
stos
jl
rol
sbb
out
inc
and
shl
mov
fidivrs
sub
mov
in
inc
fbstp
push
jae
push
lahf
inc
mov
call
test
into
fdivrl
inc
sub
bound
xor
cli
push
imul
or
sti
cmp
jmp
jl
lds
stc
nop
nop
test
inc
out
daa
sahf
cmp
imul
imull
shlb
cltd
lds
les
push
imul
ret
xchg
lods
xchg
mov
into
repnz
iret
lcall
scas
push
stos
aas
xchg
stos
pop
jg
mov
cmpsb
outsb
pop
jno
xchg
outsb
push
adc
pminsw
mov
or
push
es
into
inc
cmp
dec
lds
sub
sbb
repnz
sbb
sbb
push
or
push
add
push
push
jno
scas
out
fldl
cmp
dec
rcrb
loopne
add
xchg
addr16
push
adc
je
cwtl
pop
bound
push
out
add
lahf
push
negb
rorl
jo
jecxz
xor
sahf
jns
push
call
sbb
jmp
addr16
lcall
aad
and
clc
sbb
inc
mov
rcrl
dec
dec
loope
shrb
lea
imul
sbb
sti
data16
outsl
xorl
sti
jnp
lods
mov
pop
add
and
cld
xchg
ds
enter
adc
and
and
enter
inc
rorb
out
es
push
mov
push
add
lods
xor
ja
sub
add
insl
imul
push
pop
movsb
mov
cmc
loop
pop
add
inc
adc
cs
jecxz
mov
jl
icebp
rcll
lods
data16
fisttpll
icebp
dec
add
test
sub
dec
pop
inc
clc
loopne
lock
jl
sbb
js
mov
mov
adc
mov
ffree
and
pop
in
xlat
mov
hlt
mov
popf
out
test
dec
sahf
xor
clc
adc
and
sub
test
into
inc
fincstp
cmp
ret
outsl
aaa
lret
lret
arpl
gs
add
ror
test
push
dec
subb
cmp
jmp
or
scas
pusha
test
ret
fs
outsb
int3
or
dec
jge
adc
in
cmpsl
arpl
ret
ret
loopne
cmp
mov
cmp
or
sub
mov
mov
int3
fstpt
je
inc
mov
mov
xchg
xchg
shrl
out
mov
loop
jg
in
mov
mov
rsm
xchg
sbb
xchg
inc
imul
gs
popf
mov
arpl
inc
xlat
outsb
fcom
addr16
xor
mov
xor
cmp
adc
cmp
outsl
je
mov
sub
int
add
pushl
fwait
push
mov
pop
xlat
dec
loop
div
xchg
push
xchg
inc
sbb
mov
xor
lea
pop
addr16
jl
test
aad
js
pop
lahf
cs
jae
mov
jle
add
std
out
sub
insl
add
jo
or
push
xor
pop
push
cs
push
in
cld
dec
xchg
in
or
filds
xchg
cmp
and
in
push
push
xchg
sbb
cltd
hlt
adc
mov
xchg
sbb
pop
loop
mov
adc
sbb
mov
mov
xor
into
enter
lahf
mov
cmp
divl
mov
sbb
push
in
dec
insb
sub
call
iret
jno
dec
fnsave
lock
dec
bound
out
pop
test
out
xor
nop
rcl
ret
ljmp
fs
mov
xor
ror
fincstp
test
test
testb
call
aaa
sbb
fidivrs
roll
jb
xchg
jae
movsl
sti
inc
sbb
push
inc
not
jp
movsb
loopne
push
inc
adc
mov
pop
sub
jl
std
push
or
pop
inc
adc
mov
inc
add
cmpsb
mov
cwtl
lret
rcr
orb
mov
dec
adc
dec
rorl
mov
adc
fwait
xchg
js
mov
pop
pop
inc
and
les
mov
lods
arpl
or
push
xchg
lahf
add
call
cli
or
push
fsts
aam
bound
out
sbb
mov
inc
lea
imul
shll
loopne
or
sbb
mov
mov
outsl
arpl
icebp
popa
adc
in
mov
jae
xor
dec
adc
or
xor
clc
mov
dec
fdivr
hlt
mov
pop
mov
shl
ljmp
jno
fwait
dec
xchg
adc
jns
lods
stos
sbb
mov
in
pop
dec
pop
mov
mov
lods
adc
push
jle
arpl
js
jg
aas
mov
mov
pusha
enter
inc
test
addr16
adc
push
sar
push
push
or
mov
enter
popa
fcoml
aaa
push
ljmp
pop
into
jmp
mov
jge
decl
sbb
mov
fdivrl
out
psubb
pop
mov
stos
loopew
aam
mov
js
ss
pop
mov
pop
ljmp
add
cmp
mov
out
and
cld
push
sub
pmovmskb
adc
dec
jmp
repnz
pop
mov
hlt
xchg
dec
loop
scas
cmpl
sub
xchg
add
out
jecxz
gs
data16
aas
cmp
out
adc
sbb
fistpl
movsl
icebp
pop
ret
call
xchg
xchg
mov
gs
xchg
or
popa
stos
mov
xor
mov
out
test
movsl
icebp
dec
lds
mov
scas
fnstenv
push
ljmp
inc
pop
icebp
dec
xor
notb
push
push
cmp
cs
sub
sbbb
sbb
outsl
test
inc
adc
push
pop
mov
jge
or
out
xchg
add
push
cmpsb
inc
pusha
icebp
fadd
insl
or
mull
outsb
cwtl
add
test
roll
mov
mov
iret
mov
pop
inc
icebp
push
cmpsl
sarb
imul
sub
nop
mov
lds
das
push
rol
push
js
pop
call
mov
idivb
xchg
sub
sbb
dec
mov
cmpl
test
jp
sahf
xor
xchg
bound
fsincos
jecxz
movsb
in
sbb
jb
jae
or
out
dec
fimull
mov
sub
rcl
repz
mov
std
cltd
sbb
sti
mov
cld
inc
jns
std
lods
aam
push
inc
fdiv
mov
jg
push
adc
dec
xchg
sub
mov
movups
mov
push
mov
sbb
jne
cmpsl
repnz
aas
sbb
testl
testl
cmp
xor
mov
rsqrtps
inc
fs
lret
inc
aas
and
lcall
pushf
icebp
push
inc
cmpsl
cmp
cmpl
out
in
xchg
sbb
sub
mov
pop
fwait
aaa
pusha
test
loopne
icebp
mov
inc
cmc
cmp
aad
sub
out
cltd
popa
cld
and
fs
inc
inc
test
stc
lock
aam
xor
push
adc
add
es
jbe
mov
cwtl
cmp
outsb
sbb
mov
jecxz
clc
xchg
addb
pop
mov
fsubl
in
rcr
jo
mov
xchg
adc
sbb
mov
lock
insl
ror
push
cmp
xor
shrl
push
movsb
fadds
xchg
mov
stc
push
mov
sub
jecxz
movsl
sub
dec
add
or
dec
pusha
mov
icebp
add
je
fstps
mov
mov
ds
fcmovne
add
es
andl
dec
bound
inc
sub
push
xchg
ljmp
out
or
mov
sbb
std
or
adc
inc
fisubl
xor
or
mov
mov
mov
ds
fstl
mov
mov
pop
xor
push
sarl
cmp
test
stos
xor
lahf
add
sub
xor
jmp
rcll
and
cli
or
dec
es
das
pop
push
sub
dec
jge
sbbb
sbb
jg
xor
enter
icebp
cmp
push
mov
and
out
and
add
jb
and
stc
cmp
jo
pop
xchg
in
jge
dec
pusha
lds
icebp
jp
inc
aad
adc
pop
arpl
mov
mov
adc
js
xor
xchg
adc
cmpsl
xor
pop
cli
pushf
mov
je
dec
mov
inc
inc
sub
dec
leave
int3
cmp
sub
ja
mov
xchg
pop
int3
imul
arpl
sub
enter
cmc
lock
adc
xchg
push
stos
and
dec
pop
push
inc
xor
aas
movsb
hlt
fistl
lds
aaa
pop
mov
sahf
xor
sbb
dec
adc
movsl
cmp
mov
mov
pop
rcrb
jle
mov
sbb
sub
or
adc
orb
push
dec
sbb
test
add
out
dec
jl
inc
leave
jb
jp
inc
pop
cli
aas
xchg
lret
lahf
js
fsubp
mov
adc
mov
inc
cmc
sub
in
mov
loop
jno
in
inc
or
pusha
ds
sub
jne
dec
pusha
sar
inc
add
adc
adc
push
lret
icebp
or
les
mov
mov
inc
scas
jbe
dec
xchg
cld
aaa
adc
jle
xor
js
adc
dec
jbe
in
lea
mov
adcb
std
xchg
pop
movsl
ss
adc
gs
addr16
fldt
mov
xor
test
int
add
pop
fnstcw
inc
scas
ja
jns
xchg
jnp
roll
mov
pop
ret
cmpsl
cmp
add
adc
test
fucomip
push
fwait
arpl
mov
sub
pop
mov
movl
out
scas
out
test
ss
mov
push
inc
jecxz
dec
jne
jp
push
sbbl
cmp
fadds
inc
add
leave
int
or
stos
inc
xchg
xor
es
mov
dec
fnstenv
lea
adc
mov
jmp
test
inc
aaa
jno
mov
shll
xor
adc
jne
aas
cmpsl
and
mov
test
fsubl
add
inc
mull
leave
add
rcll
cmp
out
jmp
lahf
es
add
in
test
outsb
mov
daa
pop
cld
and
loopne
lds
sub
and
jge
mov
mov
insl
or
jno
push
sub
mov
adc
test
jb
out
js
insb
jb
jo
fstpt
xchg
inc
loopne
push
jb
mov
push
aam
mov
int
sub
iret
pop
fbstp
enter
pop
ljmp
add
fadds
mov
pop
nop
pop
cmp
pop
ret
hlt
aas
push
les
xor
jae
pop
dec
nop
xlat
xchg
xchg
mov
cmp
std
pop
sbb
inc
ss
xchg
out
fisttps
inc
rcl
ret
scas
popf
jo
mov
sub
cltd
fistpl
sti
jno
xor
into
aad
shl
fisubl
xor
jecxz,pt
js
sbb
add
adc
ret
aaa
xchg
pop
popf
scas
repnz
call
insl
aam
inc
xchg
mov
les
scas
jmp
icebp
mov
adc
push
xchg
jo
dec
sbb
hlt
or
je
sti
imul
jge
xor
cmc
sahf
enter
xchg
sub
push
lcall
xor
sub
jg
push
inc
xor
pop
and
pop
pop
cwtl
and
jns
mov
xchg
mov
fisubs
adc
push
mov
cs
dec
outsl
ret
dec
dec
or
lds
add
cmpsl
imul
iret
jbe
or
or
mov
xor
imul
jp
adc
les
andl
mov
xchg
dec
mov
in
test
adc
test
sbb
push
sbb
in
popa
clc
frstor
lock
aam
loopne
or
push
int
shufps
fstpt
inc
and
addr16
aas
mov
std
sbb
pusha
into
dec
stos
add
xchg
out
rep
icebp
jo
xchg
outsl
rcrl
lock
and
test
enter
add
sbb
data16
int3
push
mov
bound
or
xchg
jo
dec
xchg
adc
subb
call
jbe
or
pop
inc
cmp
fucomp
and
in
xor
or
pop
mov
ja
subl
mov
daa
movsl
sbbl
xchg
test
pop
shl
push
push
lret
xchg
cmp
out
nop
cmpb
daa
mov
adc
sbb
pusha
xchg
testl
out
outsb
test
jl
repz
jnp
ret
push
adc
pop
pop
push
pop
loope
mov
sbb
adc
xor
mov
fimuls
fistpl
push
es
pop
bound
mov
push
lcall
incb
and
mov
add
in
cmpsl
shll
mov
pop
or
cli
es
adc
dec
jo
mov
jbe
xor
ds
addr16
inc
cmp
mov
push
ret
jp
jnp
aam
stc
int
inc
cmp
inc
sbbb
dec
fistl
leave
pusha
xlat
adc
out
jp
dec
ds
jge
push
xor
cmp
push
hlt
mov
and
jne
adc
and
call
mov
jo
aaa
lock
stos
jb
pop
pop
popa
sbb
sbb
xor
ss
movsb
aaa
mov
or
mov
in
and
push
iret
movl
cmp
pop
retw
pop
dec
pop
jns
mov
sbb
ds
popa
pop
or
fs
push
add
cmp
dec
xor
fs
mov
jle
pop
mov
push
sub
push
leave
ss
sti
scas
and
push
mov
sbb
push
imul
popa
dec
lahf
inc
into
push
cmpsl
inc
popf
aam
xor
mov
int3
lret
mov
pop
inc
fwait
mov
into
out
aaa
pop
push
bound
xchg
jp
or
lds
dec
cld
mov
les
add
pop
loopne
xchg
sbb
push
sub
push
jecxz
jle
push
sbb
lahf
inc
push
lods
pop
ja
pop
bound
arpl
pop
pop
nop
mov
imulb
in
lcall
and
arpl
nop
add
and
repz
rorb
sub
lods
popa
inc
sbb
ss
daa
or
mov
out
mov
jl
xchg
mov
inc
jp
sahf
popa
sbb
lret
je
stc
std
daa
data16
push
sbb
mov
mov
jnp
push
xchg
mov
inc
hlt
cmc
nop
pop
dec
add
test
xor
adc
mov
cmp
add
xor
pop
test
cmp
sarb
loope
cmpsl
testl
iret
add
mov
adc
lret
notl
sahf
in
std
sbb
dec
sub
lods
jmp
insb
dec
sbbl
mov
sub
shll
lods
xorb
mov
imul
lods
mov
mov
in
jge
adc
push
shll
cmpsb
stos
cmpsl
or
inc
xchg
sbb
and
dec
add
jg
in
push
xchg
in
cmpsb
inc
in
sbb
or
in
or
and
mov
pop
repz
mov
sub
adc
in
sub
pop
mov
cmpsl
push
and
sub
or
repz
repnz
mov
aaa
xchg
roll
cmpsl
mov
pop
in
jle
arpl
pop
test
and
jae
dec
out
aam
xor
sbb
add
ds
mov
iret
cmp
movsb
pop
push
test
cltd
dec
sbb
push
xor
cmpsb
cmp
rorb
push
out
dec
scas
inc
lret
push
lods
stos
daa
test
or
std
adc
aaa
push
aas
xchg
std
imul
xchg
loopne
fidivrl
loope
xor
xor
sub
imul
out
frstor
add
jmp
call
inc
adc
mov
pushf
clc
mov
loope
enter
and
pop
or
lea
aas
test
xor
lret
and
dec
jge
cmp
int
xchg
add
lods
ret
or
jnp
xor
mov
lcall
adc
cwtl
das
inc
sbb
mov
sub
push
jecxz
lods
repnz
fucomp
xchg
in
popf
inc
rcr
mov
les
clc
fbstp
push
gs
jno
mov
pop
sub
or
xor
adc
jns
sub
lcall
xchg
jno
fisubs
pop
xor
shlb
mov
popa
shrb
xchg
sbb
pop
ret
mov
xor
fimuls
push
push
mov
xlat
mov
xchg
cmc
movl
lret
lret
jbe
push
pop
sub
lahf
adc
inc
sbb
stc
sahf
jb
inc
push
popl
pop
int
add
adc
mov
and
fwait
lods
and
mov
sbb
and
loop
cmp
ljmp
pop
in
sbb
lods
jno
ja
inc
dec
dec
sarb
in
ja
ljmp
jno
neg
jg
scas
xchg
cwtl
insb
dec
rorb
mov
and
outsl
inc
mov
sbbb
leave
sahf
js
or
sub
and
iret
push
sub
sub
sti
outsl
dec
and
fiadds
andnps
push
add
das
sub
cltd
pop
pushf
inc
mov
movsl
fs
aad
add
add
test
sbb
push
cmp
lret
lea
mov
mov
mov
test
aas
add
jno
sbb
push
inc
pop
lea
xchg
ja
insl
hlt
inc
adc
loopne
lds
ljmp
xor
mov
pop
ret
loop
fstps
push
lahf
mov
aam
mov
inc
pusha
in
jnp
sahf
sub
xor
xor
loop
push
push
cmpsb
cmp
mov
test
imul
add
je
bound
xchg
xchg
pusha
xchg
push
mov
mov
jl
mov
sbb
inc
jns
sbb
dec
sbb
lcall
dec
mov
or
shlb
push
mov
fwait
mov
mov
stc
push
fstpt
lahf
lret
imul
xor
jns
jbe
pop
insb
roll
cmpb
or
cli
pop
shrl
jno
repz
mov
xchg
lret
nop
add
inc
out
out
mov
std
sbb
rcl
mov
inc
leave
fadds
push
adc
lret
sub
sub
mov
pop
push
jne
mov
pop
pop
pusha
mov
jno
or
aas
pop
xor
push
imul
sbb
imul
xor
loope
push
mov
rorl
push
loop
in
add
cmp
inc
cli
test
int
aaa
jb
imul
push
xchg
rcrl
pop
add
push
repnz
cmc
cwtl
bound
and
cmpsl
jg
mov
inc
in
jecxz
lahf
adc
ficompl
xchg
cmp
cmp
movsl
mov
xchg
mov
pop
jae
mov
pop
stos
jnp
dec
mov
adc
loopnew
aaa
dec
mov
and
and
cmp
dec
jnp
push
and
mov
test
out
out
shlb
shlb
sti
pop
jp
outsl
fisttpll
inc
jge
daa
inc
push
xchg
jo
lcall
loopne
xchg
jo
jecxz
int
jnp
data16
popa
inc
es
into
pop
mov
dec
cmp
mov
arpl
insb
mov
pop
aad
xor
fsts
mov
xchg
repz
mov
sbb
jb,pt
movsb
mov
lds
inc
gs
jno
loopne
xlat
push
rcrl
mov
adc
mov
adc
and
adcl
jl
mov
push
xor
sbb
popa
out
sbb
stos
or
xor
sub
popf
stos
out
in
xor
ljmp
sbb
out
or
push
jae
data16
int3
inc
sbb
andl
push
xor
fistps
add
inc
mov
cwtl
inc
insl
jnp
adc
shlb
jne
rorl
inc
cmp
outsl
lcall
in
shrl
mov
sub
pop
cld
adc
mov
les
pusha
sbb
mov
insl
dec
subl
and
pop
sahf
add
pop
scas
fmull
stos
inc
stos
jl
in
mov
inc
xor
and
and
push
cmc
sub
mov
push
in
xchg
in
sbb
cli
mov
cmp
sbb
inc
push
movsl
icebp
sub
add
adc
mov
mov
inc
loop
fldt
add
sub
loope
push
sub
rolb
ja
imul
xchg
mov
cld
es
mov
or
or
andl
inc
or
push
fstps
je
push
or
mov
out
or
sub
inc
push
mov
mov
int
mov
repz
jno
push
sub
dec
es
jmp
aad
mov
lahf
pop
add
ds
mov
cmpl
cmp
pop
or
lea
repz
loope
jae
mov
cmpsb
xchg
xchg
xchg
rclb
fidivl
fst
mov
stos
push
mov
js
xchg
adc
add
repnz
xchg
imul
hlt
in
fidivl
insl
data16
push
jmp
adc
or
dec
fstl
popa
addr16
sti
inc
ret
mov
mov
push
popa
ret
cmp
push
dec
dec
or
iret
push
pushf
and
mov
jp
add
out
mov
xchg
test
push
cltd
or
lret
xor
xor
sub
iret
pop
hlt
mov
into
push
mov
mov
pand
pop
xor
cmpsb
dec
adc
sub
dec
mov
mov
dec
xchg
test
push
inc
and
and
push
ss
xchg
inc
test
mov
ret
cmc
push
mov
jo
mov
pop
movsl
addr16
mov
pop
gs
cld
xchg
xchg
xchg
lds
ds
mov
xor
adc
andl
clc
xor
test
mov
les
and
js
mov
and
aam
leave
lret
push
push
imul
aas
push
mov
aaa
into
jo
testb
dec
push
out
call
scas
jne
shrl
jl
stos
and
clc
test
mov
test
dec
inc
mov
sbb
pop
adc
sbb
xor
mov
int
call
stc
sti
sub
jno
push
jge
lock
out
inc
xchg
sbb
pushl
loopne
inc
adc
movsb
xor
repnz
inc
jo
jb
jns
cmp
add
add
dec
pop
jg
jle
repnz
or
stos
int
fistpl
fstpt
je
xor
rcrl
sbb
xor
mov
jne
ja
out
pop
iret
dec
fmuls
pop
cmp
test
mov
rorl
adc
idivb
scas
bound
xor
nop
jmp
movsl
inc
andl
je
jmp
xor
inc
mov
jnp
js
fiadds
sahf
lcall
int
pop
fists
jecxz
mov
repz
dec
mov
and
adc
inc
arpl
jle
aaa
out
icebp
pop
cmp
xor
mov
iret
loopne
inc
loop
inc
shr
out
das
xchg
jns
ret
stc
test
xchg
fdivrl
data16
hlt
daa
pop
mov
pusha
adc
lods
xchg
int3
and
test
scas
mov
adc
xchg
enter
dec
add
imul
subl
push
dec
insb
popw
sbb
jne
cmp
sub
sbb
jns
mov
mov
mov
jecxz
test
cli
nop
xlat
xchg
scas
hlt
aad
sbbb
dec
mov
shll
mov
rdtsc
cmp
mov
mov
inc
in
adc
stos
inc
push
call
int3
and
fdivrl
int3
mov
arpl
cmc
popf
pop
in
push
int
push
out
lock
fnsave
xchg
sub
ljmp
test
ficoml
out
loope
das
xchg
inc
das
out
cli
loop
roll
mov
mov
inc
sti
jecxz
push
mov
cli
xor
push
xchg
pop
push
xchg
mov
loope
fisubrl
cmp
add
xchg
xchg
lods
pop
add
lods
cmp
adc
pop
mov
cmp
sub
add
dec
mov
adc
sbb
adc
pop
rcrl
mov
js
enter
cli
push
psubb
sbb
icebp
add
mov
adc
pop
mov
pop
push
lods
xor
lods
pop
out
fcmovnb
arpl
insb
lock
mov
push
insb
cmp
mov
std
mov
leave
mov
notb
es
pop
flds
and
jp
inc
rcr
daa
loop
outsb
daa
mov
push
lods
pop
imulb
inc
mov
into
and
dec
pusha
divb
mov
ds
das
js
adc
hlt
inc
pop
out
mov
sqrtss
xchg
cmp
dec
cmp
pop
mov
mov
push
into
pop
movsb
idiv
fdivrs
movsl
loop
mov
jns
cltd
dec
or
mov
fs
lock
icebp
and
inc
jg
mov
xchg
aas
adc
cli
inc
sahf
mov
adc
mov
cmpl
jge
or
pop
add
xchg
jp
dec
jb
jecxz
imul
clc
cwtl
sti
dec
mov
mov
imul
es
stc
nop
dec
push
sub
popa
int
cli
aam
jmp
add
das
xor
imul
gs
outsb
ret
xchg
mov
into
mov
iret
dec
add
lods
shl
fcompl
pop
push
mov
test
cli
or
xor
mov
arpl
jae
loop
push
fcomip
pushf
inc
add
fildl
rorb
rclb
imul
enter
popf
lods
jl
ficoms
dec
pop
jne
fwait
cmc
jb
cmp
aas
jl
data16
mov
inc
clc
imul
out
loopne
jp
inc
push
mov
cmp
and
xor
shll
push
cmpsl
jo
or
popf
pop
push
jp
jecxz
inc
out
inc
adc
xchg
in
rolb
and
mov
loopne
test
insl
lret
cltd
push
jnp
push
fcomps
aas
aad
call
fsubrs
and
mov
divl
lahf
cmp
repz
jle
mov
sub
jo
sbb
add
lock
add
jp
and
leave
in
xor
sti
mov
mov
push
sarl
sub
stos
inc
orl
jg
cmpb
cli
lock
push
mov
insb
or
adc
fsubrs
loope
sub
mulb
mov
aam
xchg
insb
mov
sub
push
or
pop
insb
and
lea
sub
stos
fldcw
fiaddl
fs
xchg
cmp
jg
jo
sub
inc
push
mulb
and
test
or
pop
popf
nop
dec
jmp
int
push
rorb
and
push
ficoml
arpl
fs
xor
out
sahf
and
mov
adc
pop
adc
lahf
stos
inc
mov
adc
insl
sbb
sbb
dec
cltd
mov
repz
pop
xchg
dec
dec
sub
pop
mov
cwtl
popa
sbb
aam
sahf
xchg
mov
mov
xor
xchg
xchg
sbb
push
xchg
insl
jae
shl
add
add
das
insb
sub
xchg
add
push
out
aas
scas
dec
scas
sahf
clc
sub
lea
pop
das
ljmp
push
or
jl
or
leave
cmpsl
sbb
enter
xor
xchg
pop
lock
adc
push
std
jge
sbb
jge
jge
jne
or
gs
mov
add
inc
into
or
test
push
add
xchg
mov
jg
mov
fmull
nop
negb
xchg
or
int3
enter
xchg
mov
xchg
pop
ja
sbb
imul
jns
push
sub
test
adc
cmc
movsb
jecxz
and
adc
stos
and
icebp
leave
test
mov
mov
pop
ljmp
push
scas
lcall
dec
mov
mov
icebp
xchg
mov
or
pusha
dec
aaa
adcb
add
and
and
insl
aam
mov
lret
mov
fsubrp
loop
test
pop
shlb
xchg
sub
sbb
mov
mull
inc
mov
mul
sub
shlb
aad
loop
rol
js
dec
pop
mov
lret
test
scas
je
mov
int
cmc
cld
pop
pop
insl
test
xchg
pop
out
or
push
jecxz
ja
fmull
arpl
sahf
xchg
test
adc
sub
inc
or
mov
add
inc
mov
sti
ffreep
loope
fldenv
or
pusha
pop
stc
nop
jns
mov
fimuls
stc
fwait
cmp
scas
add
fsubr
inc
xchg
push
dec
push
jne
cmp
outsl
xchg
mov
sbb
inc
inc
loop
xchg
add
ja
clc
jne
xchg
jp
adc
lret
loope
ss
fstpt
push
imul
push
cmpsb
test
dec
out
mov
data16
pushf
push
ss
jnp
scas
push
mov
fs
mov
jbe
filds
pop
std
decb
sbb
xor
push
xchg
lods
jl
das
lea
mov
arpl
sub
xor
out
or
mov
xorl
rol
jmp
mov
pop
inc
test
les
jo
pop
test
je
push
mov
pop
leave
sahf
add
pop
lods
or
xor
mov
das
mov
sar
out
add
loop
mov
lret
pop
jns
fs
dec
add
add
fldt
mov
sub
push
push
or
sahf
imul
sub
shl
and
pop
clc
sub
mov
mov
sbb
cltd
jns
mov
clc
iret
xor
xchg
pop
stc
iret
aas
push
add
loop
push
xchg
sbb
call
mov
enter
gs
or
negb
clc
ds
sbb
dec
inc
rcrl
addb
je
fidivs
shll
data16
cmp
fcom
cli
xchg
aam
fisubrs
ss
add
repnz
call
or
lret
sbb
popa
and
ja
loope
cmpsb
lock
out
mov
mov
sub
loope
mov
je
adc
test
test
pop
pop
lods
add
mov
movsl
icebp
cmovo
gs
lock
push
fbstp
mov
cwtl
pop
js
test
lds
lret
sbb
adcb
cmc
pop
in
cmpsb
adc
insb
dec
pop
xor
daa
cmp
movsb
enter
in
cli
cmpsl
sub
icebp
inc
pop
cmp
jecxz
inc
int
adcb
addr16
sbb
cmp
outsl
mov
mov
pop
out
sub
inc
rcll
push
jl
sbb
mov
pop
mov
stos
xor
mov
mov
out
sbb
jo
inc
add
xor
outsb
mov
popf
std
inc
xchg
out
sti
push
xor
jns
sub
lods
pop
pusha
cmp
hlt
xor
aas
push
lods
aas
push
pop
xchg
pop
dec
and
mov
ret
or
cmpsl
or
enter
aaa
repz
cmp
pop
popf
cmp
xor
push
fwait
jmp
loope
xchg
jle
mov
fisttpl
ret
mov
push
jne
add
std
js
mov
repz
int
xchg
jp
pop
cmp
std
fnsave
mov
mov
push
jae
jmp
mov
pop
xor
call
pop
mov
mov
clc
mov
rcrb
sahf
mov
inc
jmp
xor
inc
lods
jmp
add
ss
jle
xor
mov
pusha
jno
cmpsb
and
jb
push
shll
notl
inc
fcom
xchg
jecxz
xchg
and
movsl
xlat
or
mov
dec
lcall
popf
and
push
sti
iret
add
leave
dec
mov
je
jecxz
fbld
mov
mov
outsl
pop
icebp
dec
pop
out
xor
xchg
cmp
mov
or
mov
mov
dec
jae
cmp
jo
in
ds
lods
cwtl
add
dec
and
sti
ds
sub
leave
adc
lret
push
dec
outsl
jle
jno
and
dec
jbe
in
dec
outsb
out
mov
push
pop
sbb
fxch
pushl
dec
loope
aam
xlat
pop
xor
dec
xchg
cltd
adc
xchg
sbb
pop
fdivs
push
negb
xchg
and
jge
shr
or
jo
mov
fnstsw
jne
jmp
jmp
cs
inc
inc
pop
jne
pop
sub
fwait
and
mov
arpl
shlb
aas
push
loope
jo
and
es
add
inc
fwait
cwtl
inc
stos
ds
and
sbb
and
pop
mov
mov
sbb
push
ret
add
outsb
inc
push
call
and
add
push
pop
dec
jl
fbstp
dec
cwtl
shl
in
outsb
sub
in
dec
cmc
pop
mov
fimull
xlat
mov
test
mov
repnz
jno
rcl
mov
lahf
mov
into
sub
pop
xor
iret
mov
pop
das
aad
jecxz
in
push
inc
lret
daa
sbb
mov
addr16
lret
push
dec
fmulp
popf
cmpsl
in
bound
enter
xchg
pop
add
jo
jl
fsubs
sti
xchg
ljmp
loope
shlb
dec
movsl
jo
and
jl
fdivl
iret
dec
shlb
hlt
rolb
xchg
loope
mov
xor
cmp
loopne
dec
in
cld
inc
ja
js
dec
loop
sbb
fstpt
imul
jmp
xchg
rcrl
jecxz
mov
andb
jl
and
ret
pop
sbb
loopne
mov
sub
fimuls
jo
sub
rcrb
cmpsb
cli
clc
pop
fisubrs
sbb
das
es
out
inc
mov
jae
out
cli
inc
shrb
or
mov
popf
sub
and
dec
xchg
lret
ret
cmp
jecxz
lcall
stc
rolb
gs
stc
xchg
jmp
stc
pop
sahf
inc
push
ljmp
jno
xorb
lea
or
pushf
in
push
mov
inc
xchg
pop
jmp
push
cmp
sub
push
js
leave
test
fisubrl
rorl
sub
cmpsl
sbb
fcomp
add
pop
push
and
xchg
mov
aad
mov
rcll
mov
xor
adc
xor
jnp
arpl
ljmp
dec
movsb
mov
push
pop
mov
ja
sbb
outsl
or
jne
icebp
popa
fnsave
sbb
cmp
clc
mov
lds
cld
hlt
dec
pop
es
mov
dec
jmp
adcl
mov
jnp
int
icebp
movsl
xchg
lods
rolb
and
sub
rcll
push
xchg
mov
int
push
sbb
insl
scas
nop
outsb
add
inc
adc
out
clc
loopne
scas
and
fs
jl
pop
pop
lock
addr16
js
jg
push
ljmp
jno
mov
mov
test
sbbl
repz
xchg
inc
xchg
push
scas
je
xor
xchg
xor
mov
ja
int3
fs
int
inc
xchg
addl
fcoms
dec
shl
sbb
pop
or
test
inc
push
addr16
push
and
add
fwait
test
pop
add
negb
pusha
js
hlt
sub
ficomps
jp
dec
fildll
or
mov
ljmp
xor
mov
out
sbb
sbb
pop
notl
sub
repnz
movsl
cmp
gs
ss
sarb
xlat
dec
mov
in
jge
mov
sub
inc
fstpl
cltd
push
cmp
adc
pop
repnz
lret
sub
stc
pop
js
stos
mov
pop
mov
jl
lods
aas
dec
out
jns
dec
stos
sahf
test
insb
arpl
lods
pop
mov
loope
jle
out
add
aaa
sti
xchg
xor
frstor
aaa
add
mov
ret
mov
sbb
xor
daa
ss
test
pusha
adcb
push
xchg
and
mov
mov
fldcw
cmp
aam
ja
add
sbb
xchg
sbbb
xor
jp
add
adc
gs
js
inc
xchg
dec
cltd
mov
mov
push
sub
inc
push
imul
mov
gs
or
js
daa
mov
mov
dec
xchg
outsb
mov
sub
rorb
and
repz
bnd
addr16
mov
push
xor
jge
jmp
fwait
out
js
daa
mov
loop
fwait
loop
adc
sarl
clc
cli
push
sub
icebp
pusha
cli
jae
pushf
mov
pusha
sbb
fs
cmp
add
push
jmp
stc
mov
xchg
cmp
xor
jae
jp
add
loop
pushf
sbb
pop
sub
fwait
nop
add
pop
push
negb
cmp
jb
in
and
fs
fmull
mov
xlat
icebp
fcoms
out
jno
pop
shlb
sti
leave
repz
push
push
add
cmp
lea
lcall
call
repnz
xchg
test
sub
scas
cmp
ret
repz
into
gs
sbbl
push
xor
lret
je
stc
popf
in
aas
dec
mov
xor
cli
sahf
jne
push
sbb
jns
outsb
in
push
mov
fisttps
rclb
mov
fldt
in
gs
stos
cmp
xchg
cmc
lock
leave
test
inc
dec
and
mov
cld
mov
mov
sub
xor
lret
push
inc
movsb
xor
ss
pop
call
jbe
jmp
add
jl
sbb
dec
and
jg
sbb
push
imul
cmp
sbb
cld
push
and
out
inc
arpl
dec
lea
mov
sub
rcll
mov
je
or
adc
fiadds
mov
adc
push
cmpsl
gs
or
bound
in
ljmp
xchg
push
and
jp
lcall
sti
jge
sub
iret
fwait
cmpsl
jp
jp
fstps
iret
jp
xor
pop
rol
aam
scas
sbb
mov
insb
cmpsl
imul
jl,pt
sbb
sahf
mov
nop
in
icebp
and
outsl
xor
jecxz
movsl
outsl
sbb
sbb
mov
imul
cmpsb
mov
test
push
int
ficoms
mov
mov
mov
cltd
sub
xchg
xchg
xor
adc
sub
push
adc
push
sub
fldl2t
in
movsb
decb
xchg
mov
dec
leave
inc
push
gs
aad
idivl
gs
mov
cmc
sti
xor
cmp
jae
test
cmp
mov
mov
xchg
setnp
pop
jl
push
push
loop
lods
mov
inc
or
lds
jle
sub
enter
push
push
jmp
adc
adc
cld
mov
adc
jecxz
sbb
fsubs
or
sub
imul
out
in
cmp
mov
subl
pop
mov
subb
mov
rol
or
out
mov
pop
jbe
js
aas
or
cltd
inc
ljmp
xor
int
sub
orl
inc
mov
push
inc
fildl
aas
add
and
sti
adc
and
mov
and
inc
adc
outsb
adc
adc
pop
lret
test
push
je
adc
stos
xlat
or
inc
xchg
mov
mov
dec
mov
push
push
dec
adc
jo
lods
dec
fisttpl
add
adc
mov
pop
imul
fs
sbb
rorl
add
hlt
dec
add
lcall
jne
mov
pop
es
push
xor
rcrl
mov
add
lods
cmp
or
xchg
sbb
jnp
movsl
insb
inc
clc
inc
inc
xchg
aad
sbb
movsb
jns
sbb
sbb
cmp
je
inc
sahf
add
shlb
cmpsb
jae
pop
je
sub
xchg
pop
dec
xchg
call
or
lret
insb
ror
mov
mov
pop
and
and
add
adc
stc
cmpsb
lds
dec
mov
and
xor
loope,pt
jne
push
cmp
test
int3
pop
fdivs
fldenv
sbb
inc
mov
outsl
mov
mov
fwait
in
nop
mov
mov
pop
jg
shrl
mov
mov
push
pop
mov
jmp
adc
push
dec
cmpsl
sub
push
push
in
test
and
gs
jg
pop
sub
cmp
push
lods
out
mov
das
lods
mov
jnp
addr16
jle
inc
adc
adc
test
dec
in
mov
cmp
insl
push
lds
adc
sub
addl
popa
fdivs
sbb
aam
inc
or
adc
mov
push
scas
cmp
jg
movsb
cmp
xlat
cs
ret
imul
xchg
pop
cmp
xchg
test
stos
or
stos
ficoml
aam
sbb
stos
in
cmpsl
pushf
stc
cwtl
mov
sbb
ret
dec
sbb
lods
mov
loop
clc
mov
ds
jnp
mov
or
enter
iret
insb
push
xor
jle
lea
xchg
ja
push
movsb
enter
or
push
ret
fistps
and
shll
pop
pop
inc
fs
call
pop
aam
sahf
repz
and
jb
push
aad
cmp
repz
test
mov
addb
hlt
mov
lahf
pop
shrl
push
lea
pop
daa
lds
inc
repz
cmp
pop
jmp
xchg
sahf
mov
stos
mov
sahf
ljmp
push
call
mov
dec
pop
push
sbb
out
nopl
bound
cmp
out
sbb
movsl
lock
pusha
into
add
testb
pop
sub
mov
sub
movsl
xchg
sub
adc
dec
cs
mov
sub
popf
lods
and
push
fcmovb
outsl
push
idiv
adc
cwtl
int
add
jl
xor
fst
mov
roll
inc
jne
jle
sbbl
cmp
xchg
sbb
jmp
rclb
dec
dec
jge
jnp
push
add
dec
push
mov
push
test
jbe
je
icebp
mov
ret
movsb
repnz
sti
pop
testl
cli
fnstsw
clc
pop
mov
cmpsb
push
push
jge
or
pop
subb
mov
rol
or
shrb
hlt
mov
sub
sbb
inc
arpl
and
dec
push
popf
jle
mov
push
or
scas
adc
xor
lock
dec
xchg
test
xor
adc
adc
inc
icebp
insb
cmp
sti
push
or
vmovhpd
lret
sub
push
push
das
insb
inc
fstl
ss
pop
mov
in
fmul
out
xchg
push
or
nop
call
mov
xchg
sbb
inc
jno
aad
mov
outsb
outsl
inc
sbb
xlat
xchg
jle
jle
sbb
les
pop
leave
shr
les
gs
xchg
sbb
cwtl
ss
push
push
push
jno
xchg
dec
xor
addr16
in
and
xchg
adc
test
mov
xchg
stos
sbb
outsb
sub
lods
add
pusha
sub
repz
adcl
cmpsb
mov
mov
mov
pop
out
inc
push
add
inc
jno
imul
jb
mov
push
je
orb
fsubl
add
fisubs
jg
stos
jbe
sbb
stos
sbb
inc
popa
push
fsubrl
insb
subl
pushf
jae
lods
jne
mov
pop
faddl
iret
jne
xor
fsubrl
push
push
sarl
add
or
adc
adc
lods
fcmovnu
ret
sub
std
pop
dec
fbstp
int
push
nop
dec
mov
aam
jbe
dec
iret
adc
xchg
adc
jb
push
dec
ds
add
aas
xchg
xchg
lods
dec
repnz
cmpsl
add
fsubp
pop
loope
sub
in
out
ja
mov
dec
mov
fcmovne
out
loop
adc
lret
aas
lods
jmp
cmp
mov
mov
popf
jns
outsb
adc
rcl
and
xlat
movsb
pop
icebp
call
mov
mov
inc
jecxz
popf
dec
xor
jmp
arpl
cwtl
or
insb
push
sub
jbe
mov
push
push
fs
or
mov
xlat
divl
jp
movsb
aas
pop
xchg
sbb
mov
mov
inc
loopne
inc
adc
into
loope
int
sub
or
xor
xchg
sub
sub
iret
pop
lds
mov
stc
sbbb
data16
and
push
lods
add
pop
xchg
outsb
add
inc
shl
in
add
jmp
test
xchg
insl
ficompl
or
adc
and
inc
adc
lret
cmpsl
sub
fisttpll
shlb
repnz
fldt
lcall
and
std
pop
loopne
mov
mov
mov
addr16
sub
dec
dec
subl
inc
iret
fdivrp
in
add
or
pop
inc
pop
pop
jae
mov
cs
lods
cld
ret
ret
fnstsw
sub
mov
pop
pusha
ficoms
jno
add
jne
shlb
or
cld
inc
adc
loopne
std
pop
mov
inc
xchg
mov
push
and
xchg
pop
icebp
xchg
into
xor
dec
addr16
stos
xorl
jb
loope
push
or
dec
push
out
sub
loop
and
jmp
push
pusha
pop
xor
repnz
push
dec
in
mov
imul
movsl
push
in
push
lods
aam
pop
out
in
test
xor
fs
movsl
daa
cli
push
add
es
xor
inc
pop
or
clc
ds
xor
adc
shlb
pop
sub
add
pop
lret
pop
imul
xchg
cmp
push
stc
loop
cmp
inc
adc
shll
inc
cld
pop
sbb
into
or
aaa
jno
push
push
jle
mov
int
sbb
int3
dec
rorb
cmpsb
cmp
mov
test
or
clc
jle
or
jnp
add
push
cmp
inc
mov
inc
fsts
cmp
imul
mov
test
shrl
loopne
xchg
loop
and
ds
mov
sub
popa
inc
cmp
xchg
dec
jae,pn
inc
ret
dec
dec
jp
mov
sub
cmp
cmp
sahf
es
lcall
adc
push
std
inc
das
ret
lret
fadds
dec
sbb
test
repz
lret
in
pslld
push
dec
icebp
dec
lods
mov
jecxz
orb
mov
dec
add
adc
ficoml
insb
or
pop
into
fucomp
int3
jg
scas
les
jb
in
popf
add
lods
fwait
test
xor
push
sub
imulb
mov
shrl
pusha
mov
push
es
movsl
jp
xchg
cmp
sbb
adc
repnz
in
or
insl
jae
pop
nop
decl
loope
pusha
inc
repz
pop
xchg
or
in
stos
add
mov
ds
mov
scas
push
push
stos
std
out
ja
xchg
test
xor
mov
mov
insl
add
mov
mov
fwait
test
ret
call
lret
aas
dec
xchg
insb
push
dec
out
push
pop
scas
repz
clc
xor
mov
dec
xchg
add
cs
lea
out
or
jp
dec
push
and
cs
xor
mov
mov
test
pop
aam
mov
leave
ret
out
push
or
sbb
sti
mov
scas
rclb
lds
xor
xor
and
ds
cmp
sbb
jne
jg
jns
cli
sbb
dec
add
jae
rorl
loop
sub
fcoms
std
sub
xor
imul
push
dec
pop
pop
jno
inc
mov
push
fucomp
jnp
aas
call
das
adc
lret
dec
stos
and
dec
mov
add
movsl
mov
and
jns
orl
pushf
push
jns
fldl
into
sbb
fsubs
popf
int
mov
jo
pop
push
dec
cmp
loopne
mov
jle
cld
es
inc
gs
pop
insl
xchg
xor
xor
mov
cmpsl
mov
and
lea
jns
clc
pusha
xchg
and
ret
add
aaa
je
orb
mov
sub
fs
ret
ret
cltd
pusha
fisttpl
push
cmpsb
cmpsl
push
rcrl
test
iret
mull
scas
out
push
cmpsl
lret
jns
push
scas
mov
lahf
mov
xchg
lret
cmp
es
pop
sub
xor
cmp
and
pop
inc
cs
fadds
adc
mov
dec
sbb
mov
divl
jo
fisubs
call
jno
out
push
dec
rcrl
mov
push
ljmp
popf
roll
call
rcr
mov
sub
leave
add
push
xchg
cmp
jb
loop
push
enter
jno
lahf
sub
cmp
sbb
inc
inc
dec
xor
xchg
int
jbe
jae
push
and
cmp
movsb
lea
outsl
mov
adc
xchg
cs
add
or
fwait
cltd
lds
mov
sub
add
pop
cmpsb
push
lret
push
jecxz
and
in
inc
faddl
sahf
or
sti
push
mov
xchg
cmp
ss
scas
in
lods
xor
dec
stos
in
scas
and
inc
orb
shrl
lcall
add
inc
and
sbbl
pop
testb
cltd
dec
push
and
popf
mov
lds
pop
mov
test
push
mov
pop
jne
arpl
int
jp
mov
js
ret
xor
dec
shrl
test
push
add
inc
lret
xchg
pushf
popa
testb
push
mov
cltd
pop
scas
testb
lock
popf
push
dec
pop
inc
test
pop
repz
mov
sub
cli
lods
adc
adc
fldl
sbb
mov
inc
aas
dec
shrb
popa
in
sbb
push
sub
adc
pop
jb
in
shlb
xchg
mov
mov
sbb
jae
test
sti
and
push
fistpll
mov
cmp
mov
mov
stc
jno
in
clc
aaa
imul
mov
clc
xorb
xor
scas
mov
sbb
rcrb
rcl
insl
xor
xor
or
fsubs
movsb
or
mov
mov
divb
outsb
or
dec
lock
fimuls
ret
mov
dec
sub
imul
lret
mov
cli
or
jae
jbe
mov
notl
filds
mov
in
enter
xchg
mov
jp
jb
mull
les
stc
and
sub
push
dec
mov
jecxz
sti
push
jae
push
dec
mov
fsubrs
ret
fisttpll
into
mov
fidivl
cmp
mov
loopne
pop
xchg
xchg
mov
sub
and
push
push
leave
add
add
jg
push
pop
push
sub
mov
mov
ja
shl
mov
cmp
cltd
mov
ret
xchg
adc
xor
popa
xor
push
mov
add
sbb
sti
pop
push
cwtl
jne
jb
mull
out
js
sbb
jnp
daa
divb
inc
pop
in
lret
or
lds
inc
sahf
push
cld
aad
jecxz
and
ret
stc
fstl
rcrl
mov
sahf
mov
adc
ret
cmp
scas
test
and
push
fisttpll
mov
ret
dec
ljmp
add
pop
ss
push
ret
adc
cmp
test
notl
aaa
push
pop
shlb
or
add
mov
add
and
sti
ficoml
lock
inc
or
push
sbb
adc
adc
sti
xor
stos
dec
inc
xchg
std
jo
jmp
aaa
sbb
cltd
data16
insb
sbb
xchg
cmpsb
dec
call
pushf
xor
jbe
movsb
cmpsb
adc
push
dec
xchg
sub
stos
bound
gs
out
into
xor
sbb
mov
xchg
mov
imul
lret
push
mov
loopne
std
cltd
fildl
xor
pop
test
scas
movsb
mov
mov
sbb
std
sbb
or
shrb
or
adc
xor
cmpsl
test
lret
stos
mov
push
pop
lock
jp
pushl
and
add
lods
sub
fdivrl
ficomps
repnz
mov
jns
push
andb
inc
xlat
mov
popf
xorb
rorl
add
dec
or
xchg
dec
push
clc
rorb
add
pushf
jbe
inc
imul
adc
les
stos
push
push
out
inc
cmpsl
mov
push
leave
mov
jns
pop
mov
cli
mov
add
xchg
fldl2t
enter
dec
ljmp
sahf
xor
jecxz
mov
mov
popf
mov
pop
adc
sub
andl
push
fmuls
mov
mov
call
stos
jp
fcoml
rcll
cmp
addb
enter
jns
std
lcall
call
iret
fisttpl
out
inc
ret
adc
push
test
pop
jbe
pushl
dec
in
popf
iret
cmpsw
adc
xchg
xorl
and
sbb
rolb
pop
ss
and
iret
mov
fidivrl
jne
dec
jg
les
je
jae
mov
scas
pop
fiaddl
pop
inc
cmpsl
push
or
sbb
xor
xor
sub
add
xorb
cs
test
js
xchg
jmp
adc
loope
test
mov
pop
push
ljmp
fdivs
movsb
push
pop
mov
jl
cmpl
imul
fdivs
aad
out
push
icebp
rcrb
xchg
dec
out
mov
lahf
push
cmc
lcall
inc
or
mov
stos
mov
jmp
mov
push
cltd
sbb
push
inc
arpl
fmull
scas
arpl
push
xchg
test
jmp
adc
cmpsb
cmp
jmp
or
cmpsl
lock
adc
mov
cmp
sbb
popf
add
test
call
cmp
xor
sub
clc
pop
inc
cmp
lret
aam
adc
in
push
in
lock
mov
mov
into
or
sbb
dec
push
inc
pop
lea
sbb
adc
or
and
inc
pop
sbb
xchg
dec
jg
xchg
lea
mov
js
inc
adc
jmp
or
aaa
std
and
adc
mov
test
ljmp
mov
cmp
mov
fcmovnu
push
mov
adc
imul
subl
repz
negl
pop
pop
cmp
rcrb
inc
rcll
add
cli
test
and
xor
xor
xor
push
inc
adc
mov
push
daa
mov
fcmovu
imul
aaa
and
sbb
push
or
push
scas
jmp
fnstsw
test
lret
mov
adc
jg
in
mov
mov
cmp
xor
inc
sbb
scas
inc
fwait
push
cmp
inc
je
stc
xor
lods
inc
pop
fidivrs
rorl
inc
mov
outsl
jne
shlb
fisubrs
fcompl
fisttps
jnp
in
pushl
icebp
adc
in
rclb
xchg
xor
mov
loope
cmp
mov
pop
jbe
cmp
in
dec
cmp
addr16
xchg
dec
dec
mov
dec
cmp
jg
aaa
pop
fs
sub
dec
daa
add
addr16
pusha
and
lods
and
test
loope
stos
inc
cltd
lret
es
fadds
insb
hlt
idivb
inc
sub
sub
sub
mov
and
mov
jnp
mov
mov
lcall
mov
lods
sub
negb
rorb
push
cs
stos
dec
aam
clc
enter
ja
leave
cwtl
test
addl
lock
test
aas
push
aam
popf
or
inc
sub
clc
sbb
dec
loop
mov
rol
insb
lock
mov
jge
and
fsubrs
dec
add
testb
cld
nop
daa
add
inc
shll
adc
push
insb
xor
incb
bound
addr16
js
pop
push
repnz
insl
es
imul
inc
cmp
ss
pop
xchg
jb
ret
cli
sbb
cltd
adc
inc
dec
scas
fcoml
cmp
int
push
aam
bswap
int
jb
in
test
cmp
sbb
cmc
out
jbe
fcompl
ret
icebp
sarl
dec
xchg
fadds
data16
fistl
pop
test
fs
xor
test
enter
xchg
data16
insb
rcrl
xchg
cmp
xchg
lods
adc
in
loope
pushf
mov
fcomp
xor
mov
shrb
fisttps
mov
jno
fisubl
jb
or
aaa
sti
fcomi
ret
jno
imull
mov
push
call
mov
jg
in
add
test
cmpl
pop
and
lea
ret
adc
pop
inc
mov
adc
into
loop
jl
fwait
xor
fstpt
lock
xor
add
pusha
ljmp
aad
mov
xchg
sub
xlat
mov
push
test
mov
xchg
mov
dec
pop
das
jns
mov
cltd
xchg
sbb
and
adc
fmull
mov
movsb
test
or
push
mov
adc
cmp
cmp
mov
mov
push
aad
and
xchg
push
xor
call
cmc
mov
xchg
mov
xchg
jg
fcmovnb
notb
and
imul
int
outsb
in
sbb
adc
fdivrs
or
imul
negb
sarl
out
out
mov
inc
lods
mov
jo
sub
inc
mov
fldt
test
mov
shll
add
aas
outsb
inc
dec
gs
and
xor
adc
mov
adcb
or
lret
xchg
lods
or
jno
pop
sub
iret
xor
das
ret
icebp
cmp
cmc
out
or
cmp
add
nop
cmp
out
fmuls
jbe
out
push
adc
xor
in
sub
mov
mov
scas
es
dec
or
or
gs
dec
lret
imul
or
sub
pop
out
sub
mov
sub
jne
dec
jns
aad
shlb
mov
lds
sbb
dec
and
mov
out
jle
cmc
dec
add
sub
jmp
cmp
push
dec
aad
pop
dec
out
gs
dec
insl
jo
adc
inc
pop
test
mov
cmp
scas
repz
sub
mov
loope
aas
lret
add
push
ficoms
int
addr16
mov
ret
fsubp
inc
fcoms
in
mov
jmp
pop
add
andl
xor
repz
outsl
mov
lahf
xchg
lcall
inc
icebp
std
fsubr
push
mov
mov
in
sub
jl
push
jbe
mov
cmp
mov
lods
sub
mov
aas
fsts
mov
sub
out
dec
push
jbe
mov
aaa
or
cmp
mov
sbb
mov
les
outsl
lods
rcl
mov
into
aaa
std
xchg
mov
arpl
xchg
subl
ljmp
push
add
mov
xchg
mov
and
jl
or
cmp
jg
cmp
jle
icebp
cmp
ret
mov
pop
or
push
sub
lret
popf
cmc
mov
add
aam
sti
std
and
cmp
aaa
mov
dec
insl
in
mov
push
das
jmp
sbb
out
and
fldl
push
mov
add
fwait
out
sti
xchg
or
mov
xor
call
inc
fsubrp
jbe
mov
mov
jbe
fcmovb
aad
fstpt
mov
aaa
scas
push
pop
dec
add
test
cmp
lret
repnz
movsl
andb
add
lcall
in
insl
es
pop
jle
xchg
inc
leave
dec
pop
je
inc
mov
lret
inc
xchg
pop
cmp
bound
pop
or
fmuls
and
adcl
lret
mull
dec
leave
enter
xchg
shrl
dec
xor
mov
movups
xchg
ljmp
out
add
fs
test
nop
pop
inc
inc
push
icebp
pop
add
jno
pop
imul
repz
mov
mov
mov
jle
cli
rclb
mov
xorb
loopne
adc
les
fisubl
mov
xorb
adc
lods
fwait
das
cmp
ret
add
mov
mov
mov
fcomi
es
sub
inc
movsb
mov
jl
call
xchg
repnz
cmp
cmp
adc
lods
jo
dec
in
out
mov
xchg
jmp
ror
cmpsb
and
pop
sbb
insl
outsb
push
dec
dec
mov
sbb
mov
aas
xchg
in
aad
sbb
movsl
ret
jae
imull
adc
sub
pop
cmc
test
push
or
ds
push
mov
xchg
shrb
pop
or
js
es
cmpsb
push
and
in
loopne
pop
dec
jo
and
jge
out
xchg
xchg
mov
xchg
cmp
pop
or
sub
fwait
dec
push
cli
xchg
xchg
mov
sbb
insb
sub
sbb
adc
imul
mov
or
cmp
scas
add
test
mov
or
std
fwait
pop
lret
push
adc
cmp
adc
test
sbbb
repnz
je
loop
and
int
add
mov
fs
add
xor
dec
push
push
loopne
jl
std
mov
gs
sbb
dec
xchg
jne
aam
in
inc
fsubr
je
clc
or
jno
popa
outsl
out
jecxz
lock
mov
in
adc
js
pop
daa
mov
pop
mov
cld
and
inc
mov
dec
pop
add
pop
adc
in
add
loop
mov
add
test
in
movsb
lock
scas
push
or
mov
cmp
cmpb
cli
in
fmulp
lahf
push
cs
or
sbb
repnz
cmp
fstl
cmpsl
push
dec
add
fwait
jae
pop
mov
cmc
jno
push
into
xchg
loopne
movsb
cmp
loope
insb
test
pop
loope
dec
repz
imul
dec
dec
movsl
out
mov
push
xchg
mov
jl
aam
andl
mov
jl
sbb
insl
xor
adc
lret
bnd
push
adc
jae
das
test
in
rcll
in
sub
shl
mov
and
lock
xor
lahf
fbstp
xor
in
cmp
cmp
and
sub
ret
xlat
inc
pop
mov
dec
popl
shr
sbb
das
cmp
shrb
fnsave
xor
inc
mov
jle
psrad
dec
mov
pop
bound
jle
or
inc
xchg
ja
stos
push
mov
jle
jmp
pop
or
jmp
add
fstpl
ljmp
push
xchg
es
imul
addl
jecxz
cmp
pop
insb
adc
out
inc
test
rcrb
mov
sbb
scas
sub
push
cmp
icebp
call
jmp
mov
mov
mov
mov
sbb
jno
test
inc
stos
je
int3
out
lahf
stos
decl
or
inc
cld
xchg
pop
sub
std
popa
dec
xchg
inc
or
xor
out
adc
pop
je
push
iret
arpl
inc
xor
jb
jp
push
stc
inc
ret
cmp
lods
mov
popf
stc
insl
and
les
jae
test
dec
add
jno
cmp
out
call
push
insl
lds
cmp
dec
jmp
pop
xchg
out
dec
cltd
fistpl
inc
imul
xchg
ds
sarl
aad
fcmovnb
add
icebp
je
inc
nop
cmpb
enter
mov
test
adc
pop
xchg
mov
jmp
fdiv
mov
jno
lods
adc
data16
push
and
repz
imul
push
out
lods
hlt
sub
cmp
in
pushf
adc
push
sub
sbb
stc
or
pop
xchg
xchg
xor
add
mov
roll
pop
nopl
sahf
sub
shll
lods
pop
dec
and
mov
inc
mov
mov
push
sbb
addr16
cmpl
adc
lcall
cmp
cld
arpl
ffree
mov
mov
stos
aam
pop
sub
mov
shr
mov
push
mov
mov
cmp
inc
fsubl
mov
popf
adc
mov
push
adc
cmp
or
and
fcmovnbe
xchg
xor
movsl
in
cmp
dec
js
push
movsb
or
pusha
into
rcrl
sahf
in
outsb
mov
jmp
fimuls
out
sbb
xchg
mov
pop
cmp
iret
sub
loopne
push
sahf
or
inc
lock
jp
loope
cmpsl
pop
les
jmp
cmp
insb
sbb
lds
jmp
testb
shrl
sub
mov
mov
jno
bound
adc
lds
and
les
adc
out
fcoms
push
pushf
mov
loop
rcr
shlb
cwtl
fidivl
fisttpll
mov
pop
mov
lret
sbb
pop
jp
mov
gs
mov
jae
xchg
and
mov
and
outsl
mov
lods
loop
push
pmaxub
adcb
pusha
jmp
pop
das
mov
sbb
and
pop
sbb
push
mov
lods
xchg
pop
popa
aaa
mov
pusha
pop
mov
and
repz
pop
mov
mov
enter
call
in
bound
ret
xorb
mov
dec
loope
in
notl
xlat
loop
or
adc
jmp
jnp
mov
sbb
mov
frstor
in
stos
jp
divb
fstpt
into
mov
jbe
xchg
xchg
std
popf
push
roll
adc
add
mov
pop
fdivs
jns
cmpsl
mov
xchg
out
stc
jne
test
rcl
outsl
push
andb
ja
insl
xchg
pop
xor
mov
stos
orb
hlt
cltd
jbe
dec
jmp
mov
add
pop
int3
arpl
mov
add
mov
into
sbb
int3
dec
pop
or
popf
or
xchg
jbe
fwait
mov
sbb
mov
push
aad
xor
dec
add
pop
mov
gs
notl
pop
ret
repz
cs
add
testl
sub
mov
dec
cmp
iret
xor
push
test
scas
and
xor
adc
test
out
hlt
add
mov
test
pop
mov
sbb
gs
xchg
cmp
adc
and
data16
test
repnz
xor
and
or
fsubl
fldenv
aad
xchg
and
aas
cmp
out
sti
shl
in
and
xor
rcrl
mov
insb
sarl
shlb
jb
stos
ds
mov
add
scas
shl
xchg
mov
dec
pop
dec
xor
es
enter
jle
jmp
sbb
int3
add
fidivs
movl
adc
adc
mov
mov
jecxz
xor
pop
dec
dec
filds
cltd
mov
cmp
scas
in
movsb
inc
mov
pop
fstl
xor
jmp
dec
loopne
out
cmp
lods
cmpsb
inc
fmull
xchg
jge
dec
fnstsw
jb
inc
idivl
int3
arpl
push
aas
add
sub
cmpsb
pop
cltd
mov
movsl
xchg
inc
fildll
pop
pop
cwtl
dec
cmpxchg
ljmp
push
mov
cld
xor
outsb
lods
inc
stos
out
mov
or
mov
leave
int
jmp
inc
iret
bswap
int
out
mov
subb
dec
loopne
jb
sub
cmp
mov
mov
sbb
clc
cmpsl
xor
testl
pop
out
aaa
js,pn
cwtl
das
mov
ret
idivl
pop
ret
jle
test
cmpb
movsb
lea
icebp
mov
jns
mov
add
jns
mov
mov
rorb
and
sbb
scas
inc
mov
push
rcll
and
sbb
in
aad
mov
cmp
or
adc
subb
sti
or
cmp
xchg
gs
sbbl
cmp
pop
outsl
pop
into
jmp
stos
inc
arpl
or
test
fisubrl
sahf
imul
pop
aam
shrl
cli
dec
repz
xor
ret
call
cmp
in
jo
pop
sub
sub
icebp
popa
insb
sub
cli
push
inc
lods
jmp
pop
fldl2t
imul
fmull
hlt
aaa
lret
cmp
cmc
lcall
int
mov
imul
push
dec
push
stc
mov
dec
stc
pushf
push
nop
xchg
xchg
jmp
xchg
sbb
mov
pop
and
jno
out
and
dec
and
mov
cmpsl
add
xorl
and
fwait
xchg
pop
dec
neg
fldt
push
cmp
and
adc
fcomp
and
dec
cmp
add
repnz
mov
hlt
mov
add
adc
cmp
add
cwtl
push
xchg
xchg
outsl
sahf
jbe
sbb
and
insl
data16
jae
mov
push
mov
cli
sub
outsb
data16
fisttpl
or
adc
fcmovnbe
or
out
js
push
mov
pushf
stos
xor
jp
mov
xor
fldenv
montmul
cmpsb
push
arpl
or
mov
sbb
xchg
xor
mov
lock
adc
lods
mov
popf
xor
scas
mov
addl
xor
mov
sub
stc
or
add
sbb
add
dec
aam
mov
insb
mov
sub
dec
pop
cmp
mov
insb
pop
je
popa
imul
adc
and
loopne
add
mov
mov
and
in
aad
add
jns
lret
jb
jne
orb
push
jg
cmp
sti
dec
pop
adc
mov
cwtl
or
mov
xor
inc
lods
lcall
lock
orb
pop
hlt
clc
mov
addr16
push
clc
popl
xchg
sub
pop
notl
push
outsb
dec
add
jp
fsubrs
inc
sub
loopne
sbb
jno
jge
add
rorl
add
loop
sub
add
clc
xchg
mov
sbb
dec
cmp
cmc
mov
or
adc
adc
push
ss
into
addr16
xchg
sub
xchg
scas
inc
or
lods
test
push
mov
faddl
sub
bound
add
mov
mov
xor
ss
fsubrl
pop
std
enter
sti
mov
adc
ss
fisubl
fsubrl
sub
xor
xor
stos
aam
fdivrl
into
jb
stos
shrl
add
mov
cli
jb
sbb
push
mov
lret
das
test
mov
sbb
jbe
pop
cmp
sub
sub
add
call
cmp
insb
dec
loop
jo
stos
jo
rcll
sub
xchg
js
push
pusha
xlat
mov
lahf
pop
push
repnz
and
or
fisttpl
push
incl
inc
fsts
and
push
clc
pusha
test
mov
xor
add
push
in
insl
cmp
or
xchg
lret
rep
xchg
insl
adc
push
ror
push
add
xor
mov
jmp
xor
add
jle
aas
adc
icebp
stos
mov
push
rcrb
pop
mov
aad
lock
repz
xchg
mov
in
xchg
cmp
push
mov
push
popa
es
cmp
mov
addr16
fsubs
imul
inc
insl
int3
out
shl
rorb
mov
jp
rol
bound
adc
call
imul
jl
or
xchg
jns
add
inc
mov
lods
or
push
or
pop
xor
push
insl
ret
imul
imul
adc
stc
xchg
popf
test
movsb
into
ds
mov
mov
xchg
mov
inc
sbb
jmp
xchg
inc
gs
aaa
dec
and
mov
adcl
daa
jg
sub
add
orl
or
inc
cmpsb
add
outsl
jp
mov
cmpsb
push
insl
fisttpl
fistpll
pusha
mov
mov
sbbb
jecxz
ret
pop
push
add
in
mov
daa
test
mov
and
fsubrl
and
and
je
dec
outsb
inc
xor
loopne
in
inc
in
sti
shrl
idiv
push
in
mov
add
jne
test
les
push
in
xchg
cmp
lods
xchg
or
mov
sub
adc
bound
stos
lds
add
xchg
stos
mov
je
fists
in
mov
xor
push
push
movsl
push
xorb
mov
jmp
cwtl
ret
rorl
mov
movsl
repnz
pop
adc
mov
pop
insb
dec
lahf
cwtl
mov
ret
jb
jl
cmp
lahf
pop
stos
mov
bound
cmp
fisttpl
loope
inc
adc
push
sbb
mov
lea
subb
dec
mov
cli
sbb
mov
cmp
push
push
inc
and
dec
ljmp
mov
push
adc
pop
mov
xchg
lret
adc
xchg
adc
xorb
push
inc
addr16
fldl2e
fstpt
and
inc
scas
xor
into
ret
out
fistps
push
pop
sub
lcall
pop
mov
adc
dec
mov
aad
pop
push
loop
fsubrl
lds
add
outsb
rcrl
out
cmp
or
rcll
mov
jne
test
fcomps
pop
outsb
fnsave
mov
pop
mov
cmpsb
fdivs
imul
and
int
lods
mov
inc
or
jns
sub
test
adc
add
mov
mov
pop
xchg
mov
xchg
js
push
gs
mov
or
dec
pushf
mov
fidivrl
cwtl
push
dec
mov
pop
mov
nop
ror
cmpsb
and
int
pop
sub
fwait
push
sbb
das
rorl
pop
mov
and
cld
nop
hlt
test
loopne
out
mov
mov
fistpl
imul
test
aaa
scas
lret
jmp
add
push
mull
sbb
mov
jnp
xor
mov
adc
cs
sub
sbb
imul
test
mov
movsl
add
mov
jl
dec
aam
clc
std
adc
cmovnp
cmp
insl
xchg
jb
aas
inc
stos
insl
cltd
add
test
mov
mov
rol
xlat
add
xchg
popl
sub
adc
cmp
jbe
movsb
mov
loope
jbe
js
adc
sbb
rolb
mov
ret
cltd
arpl
adc
std
push
push
in
xchg
jl
loop,pt
dec
cmp
sarb
pop
pusha
lret
out
shll
ret
leave
xchg
stc
mov
fsubs
out
in
inc
xor
pop
out
dec
lret
rcl
mov
pop
adc
popa
mov
gs
clc
pop
aad
movsl
faddl
add
rorl
cwtl
cmc
and
daa
jmp
pop
sub
repz
dec
ds
add
xor
ljmp
ljmp
ret
cmp
mov
pop
pop
dec
mov
adc
insl
movsb
imul
aad
mov
or
mov
or
push
inc
xchg
ret
test
cs
jbe
js
and
sbb
push
mov
or
rcrb
out
sahf
xchg
mov
xor
cwtl
scas
aaa
into
loopne
gs
mov
mov
or
es
data16
mov
and
rorl
repnz
movsb
repnz
jle
insb
lock
ja
xchg
shrl
lret
sti
push
sub
or
xchg
jb
pop
mov
add
pop
insl
jae
test
push
inc
popf
lods
mov
lods
inc
jnp
outsl
jge
pop
dec
mov
shrl
ret
xchg
rcrb
stc
rcl
in
iret
leave
xchg
and
xchg
jns
mov
jb
out
adc
loope
pop
push
int
adc
sbb
push
adc
sub
jbe
fwait
jns
xlat
daa
into
or
in
push
mov
stos
arpl
dec
popa
cmp
ljmp
arpl
dec
imul
jno
mov
mov
mov
inc
sbb
cmp
dec
cmp
fistps
dec
dec
jbe
mov
adc
imul
roll
sbb
adc
push
aaa
jg
je
outsl
das
pop
fdiv
sbb
lds
mov
test
and
sahf
lea
xchg
sub
jo
pop
subw
jno
movsl
lds
aam
jae
movsl
mov
ficoms
rorl
sbb
dec
cmpsb
fs
sub
and
jb
xor
lds
xor
mov
push
mov
pop
push
outsb
mov
out
sahf
movsl
in
shrl
cmp
je
bound
jg
add
sub
pcmpgtd
cmp
add
mov
fsubs
cmp
pop
insb
inc
pop
cmp
aaa
insb
test
and
xchg
movsb
jns
cmp
inc
addl
popa
xor
push
decl
cmc
cmp
pop
ja
jae
cmp
push
sahf
gs
cmp
pop
mov
test
sbb
mov
and
pop
adc
xchg
push
inc
stc
mov
lds
cmp
xor
jae
fldcw
pop
ljmp
std
mov
sbb
push
jae
mov
js
decl
scas
push
shlb
mov
mov
cmp
scas
and
add
adc
rclb
repnz
insb
mov
jne
mov
iret
test
ja
push
decb
jle
popa
sub
subb
mov
cmp
in
and
cmpsl
adc
cmp
aaa
gs
cli
das
pop
xchg
adc
shrb
fs
add
sbb
cmp
mov
push
sub
ret
or
xchg
xchg
and
adc
adc
xorps
inc
sbb
jns
fldt
es
clc
add
push
jno
mov
fcomi
sub
nop
jne
mov
in
sub
std
or
in
ja
popf
daa
mov
push
ja
outsl
xchg
xchg
add
jae
or
pop
jl
mov
and
cmp
jg
inc
fnstsw
xchg
inc
and
fs
jno
and
cmp
dec
nop
daa
pop
movsl
adc
add
iret
push
mov
or
cs
add
testb
xlat
sbb
call
add
push
sub
or
add
shlb
cmp
mov
inc
in
cmp
popf
jno
adc
xchg
imul
cmp
in
sbb
mov
lret
insl
loopne
pop
push
mov
stc
or
mov
inc
cmp
jecxz
data16
arpl
inc
xchg
mov
jecxz
inc
sbb
or
adcb
aas
pusha
inc
jno
cmc
mov
aad
fdivp
mov
and
setp
mov
ja
arpl
loope
divl
int
es
cmp
and
or
jg
add
lds
xchg
xor
and
stc
add
movsl
push
jne
cli
in
dec
ret
imul
in
mov
hlt
or
lock
sbb
mov
lahf
xchg
push
mov
adc
sbb
sbb
and
mov
mov
andps
fistpl
in
mov
jno
push
mov
sahf
xor
dec
in
sbb
mov
xchg
mov
xchg
jne
push
stos
test
xchg
jne
adc
and
mov
mov
dec
pop
mov
aam
arpl
jnp
dec
pop
andb
ret
and
out
leave
pop
rol
cmp
clc
cli
out
lahf
in
lds
jns
add
sar
cmp
loop
sbb
mov
loopne
inc
push
mov
cwtl
mov
fcoms
mov
test
inc
popa
mov
aad
push
mov
xchg
push
sub
notl
cld
mov
lret
push
sub
sub
divb
xor
cmpsl
ds
iret
std
out
pop
jnp
in
enter
push
loope
sbb
mov
dec
pop
xor
xor
cmp
inc
mov
push
movsb
lret
and
pop
dec
in
xchg
cmc
sub
xor
sti
xchg
jge
test
xor
mull
sbb
fistps
outsb
inc
jo
adc
out
ret
mov
lahf
out
pop
dec
xor
jmp
fdivrp
js
lods
inc
inc
pop
int3
dec
fsubrp
js
and
movsl
cs
shl
push
fwait
cmc
mov
push
lret
push
jns
and
xchg
hlt
mov
sbb
gs
stos
pusha
sub
push
jg
fadd
xchg
mov
fisubrs
sbb
jbe
xchg
mov
jle
aaa
jae
bound
dec
stos
lahf
enter
xor
xchg
in
adc
rorl
scas
les
and
mov
dec
imul
adcl
push
call
stc
jns
push
sub
adc
mov
dec
ret
mov
idivb
in
adc
fstpt
sbb
addr16
inc
sbb
cmp
jp
dec
pop
inc
adc
inc
mov
fwait
mov
mov
add
cmc
mov
insl
in
scas
ljmp
cli
cltd
outsb
jne
sahf
scas
filds
cmp
lock
imul
sbb
jecxz
mov
sahf
pop
lret
add
xchg
and
xchg
fs
dec
add
fstl
loope
fwait
into
pop
icebp
je
push
inc
nop
inc
xchg
scas
jmp
inc
and
adc
add
sub
imul
sbb
mov
out
push
hlt
lods
stc
pop
cltd
test
adc
std
jge
xor
or
xorl
and
addb
lret
pop
dec
in
cmp
test
jp
pushf
dec
sbbl
fcom
out
mov
scas
push
add
add
inc
test
inc
cmpsl
mov
cld
sarb
imul
adc
movsl
fcomps
addl
jnp
pop
jne
loope
ret
sbb
cmpsb
in
and
hlt
loopne
inc
in
mov
dec
pop
xor
in
or
sbb
out
jge
stc
adcb
mov
and
pop
popf
stos
faddp
xor
pop
hlt
je
mov
xor
add
mov
shll
mov
and
dec
inc
fdivrs
fwait
orb
insb
mov
jge
jge
dec
inc
pusha
enter
push
pushf
add
mov
mov
insl
pop
scas
sahf
and
addr16
jo
pop
mov
xor
lods
in
sbb
dec
mov
mov
negb
fcmovnu
faddl
mov
sbb
push
push
inc
adc
ja
pushf
jecxz
inc
mov
fisubs
lret
and
into
loope
add
mov
in
mov
rcrb
ret
cmp
iret
ss
loope
cwtl
dec
cmp
sub
cmp
stc
or
mov
or
pop
popf
mov
negb
and
inc
and
jbe
cld
sbb
adc
dec
das
push
stos
or
xchg
sub
xor
mov
xlat
es
inc
pop
lds
jecxz
inc
movd
call
int
movsb
lea
int
aaa
and
adc
push
clc
adc
dec
mov
call
gs
adc
adc
mov
std
gs
jmp
sbb
cwtl
lds
fs
pop
xchg
les
mov
out
sub
inc
mov
jp
sbb
dec
jb
repz
rclb
dec
fdivr
mov
sbb
cwtl
mov
pop
xor
nop
cltd
lahf
in
roll
xchg
add
mov
adc
cmp
cs
jno
pop
mov
cmc
in
adc
rcrl
xchg
pop
pop
repnz
cmpsl
lods
jns
xchg
sbb
cmpsl
xchg
inc
in
scas
outsl
sbb
sbb
push
push
cmp
psllw
test
or
inc
jmp
pusha
and
sahf
jb
or
mov
and
inc
int3
cld
jb
dec
rclb
mov
pop
outsb
push
pop
cltd
add
mov
cmp
aam
xchg
sub
mov
scas
mov
aaa
jbe
pop
pop
mov
stos
aas
outsl
test
lea
into
push
sahf
int
fwait
test
daa
mov
outsb
xchg
mov
ds
in
mov
int3
push
jp
stos
inc
mov
push
xor
aas
rolb
sub
aam
hlt
and
jb
subb
or
loop
loope
out
sbb
mov
dec
dec
add
lds
sbb
cltd
sbb
jb
sbb
pop
cmp
or
aas
mov
jmp
sub
jno
dec
adc
xor
fbld
push
movsb
mov
cmp
and
jp
or
dec
fwait
orb
sar
push
mov
xchg
push
int3
pop
push
inc
xlat
push
pop
jae
xor
cmpsl
loop
cmp
loopne,pt
mov
dec
dec
dec
out
fdiv
lret
stos
mul
mov
dec
sub
lock
fsub
scas
pop
lret
inc
cs
repz
popf
xor
lods
push
mov
adc
daa
or
fidivrs
mov
iret
loope
outsl
repz
inc
frstor
imul
cmp
adc
ss
sub
std
cltd
or
cmp
mov
xchg
add
mov
and
jl
push
adc
mov
mov
lods
mov
cmpps
aas
in
push
xor
aad
icebp
mov
add
and
in
xchg
loope
pop
xchg
pop
lahf
cs
bound
addl
adc
jbe
sahf
lods
or
add
pop
push
fdivrs
dec
out
jp
or
cmpl
mov
sub
mov
lret
jno
cmc
int3
ret
sbb
push
jb
in
lret
aad
inc
mov
mull
mov
mov
dec
cmovno
pop
mov
xchg
sbb
sbb
lea
shrb
dec
add
ret
stos
je
lods
mov
push
pop
xchg
inc
mov
pop
sub
sbb
gs
fdivrs
adc
adc
scas
jl
mov
add
popf
or
xchg
outsb
in
cmp
lods
aad
pusha
dec
dec
lods
jmp
add
or
add
mov
stos
jbe
stos
adcb
cli
push
mov
and
dec
dec
push
int
arpl
push
mov
and
aaa
cmpsb
mov
in
stos
loop
lock
inc
mov
jne
push
lods
mov
adc
rorb
fdivrl
inc
adc
flds
mov
or
cltd
cwtl
ret
mov
push
inc
enter
mov
dec
pushaw
loope
jae
shlb
xor
mov
ret
movsb
and
test
pop
js
inc
and
xchg
pusha
mov
je
inc
sub
movsb
add
outsb
sub
ss
hlt
jae
jp
mov
mov
xor
inc
push
aas
xor
daa
fidivs
and
xor
das
icebp
imul
out
cltd
pop
mov
jl
mov
mov
andb
notb
icebp
adc
lds
stos
outsl
pop
xchg
in
bound
cmp
test
addr16
push
lcall
xor
test
outsl
add
jbe
lea
inc
rclb
fiadds
sahf
ljmp
sarb
lea
int
add
sbb
pop
in
push
int3
xor
mov
dec
mov
inc
pop
fs
inc
sbb
pop
imul
pop
pop
loopne
loopne
sub
repnz
dec
pop
ficomps
repnz
in
jecxz
mov
cmp
push
clc
mov
jns
sbb
xchg
incl
pop
insb
pop
std
inc
or
inc
fsubp
add
popf
inc
ja
lods
addr16
in
sahf
xchg
push
dec
cld
call
sub
adc
adc
and
insl
sub
cmp
xchg
fwait
in
shl
mov
dec
movsl
ja
push
adc
or
mov
adc
arpl
jae
sbb
pusha
stc
mov
test
outsl
dec
jle
sub
sub
jb
jmp
out
aad
mov
lcall
daa
cmpl
add
cmpsb
dec
pop
or
sub
push
and
out
cmpsl
xchg
arpl
jns
and
shll
fstpl
cmp
xor
dec
sbb
inc
test
inc
iret
fcomi
ss
iret
push
xchg
mov
jne
outsb
mov
sbb
fdivrl
pop
sbb
mov
repz
popa
lahf
inc
cmp
inc
imul
sbb
mov
xchg
fucomip
dec
pop
cs
or
fwait
mov
into
and
jae
sub
push
fimull
andl
and
out
stc
pop
mov
mov
mov
ja
fisubs
sub
add
mov
push
sbb
and
and
sahf
repnz
mov
push
inc
sbb
vunpcklps
dec
test
pop
push
push
jnp
inc
inc
pop
es
inc
add
adc
stos
jne
pop
lock
repnz
jp
aaa
movsb
cmp
dec
sbbb
aad
mov
dec
and
xchg
push
outsb
dec
jge
adc
fnstenv
xchg
sbbl
gs
mov
in
xor
pop
jmp
movsb
loope
jge
mov
dec
pushf
jmp
dec
jo
adc
cs
sbb
outsl
loopne
sbb
cltd
mov
mov
aas
cmp
cli
push
test
ret
pusha
movsl
ds
into
ss
daa
or
pop
inc
ljmp
jno
in
mov
in
test
mov
cmp
daa
or
sub
or
inc
and
sub
jnp
ret
sub
dec
jno
lcall
pop
int3
xor
jmp
push
mov
jae
cmp
fdiv
push
mov
cmp
es
aas
outsb
pop
cwtl
or
in
sub
push
or
sbb
push
adcl
xchg
lods
mov
loopne
mov
pop
shl
rorl
repnz
movsb
xchg
mov
inc
cs
cli
jle
std
pop
xchg
popa
adc
stc
xor
in
enter
insb
testl
jne
mov
mov
inc
test
xchg
cmp
add
xchg
mov
pop
mov
lds
es
add
lods
mov
push
out
test
imul
mov
xor
or
inc
fmul
repz
sbb
jle
lret
ds
sub
ret
mov
in
jmp
jae
cmp
pop
mov
ss
imul
add
aas
data16
imul
add
mov
or
in
push
dec
cmp
lock
xor
loop
ds
cmpsl
repnz
ljmp
lods
xchg
mov
je
jge
xor
pop
loopne
push
mov
and
xchg
gs
gs
push
lds
cmpsl
dec
pop
fnstcw
rep
xchg
dec
mov
sahf
outsl
inc
mov
shlb
pop
stos
push
call
pop
dec
or
and
inc
mov
js
int
xor
ret
loop
sarl
mov
jp
pop
inc
imul
xor
mov
dec
es
outsb
clc
lret
rorl
sub
sbb
jmp
xor
mov
ret
jbe
outsb
inc
add
push
ss
and
sbb
push
imul
pop
and
pusha
out
push
xchg
repz
or
mov
jl
fimull
cmp
call
fists
subb
sub
decb
in
cmp
dec
mov
cmp
pop
mov
mov
sbb
pushf
cmp
js
movsl
pusha
outsl
notb
cmp
jmp
dec
adc
call
or
loop
in
xor
rcl
mov
xor
adc
fs
xlat
sbbb
pop
push
enter
sbb
loope
mov
mov
xor
xchg
in
stos
es
stc
pushf
xor
fists
imul
out
mov
add
iret
xor
outsl
push
push
rcr
jmp
jmp
scas
add
cld
clc
adc
push
stos
mov
xorl
stos
imul
das
clc
sti
fldt
jl
int3
mov
leave
xor
leave
fsts
inc
inc
xchg
fcompl
loop
ss
sub
outsl
mov
punpckhbw
lret
icebp
enter
fucomp
jp,pt
jge
gs
ret
inc
lcall
pop
adc
pavgb
cs
push
adc
vmovhpd
aaa
repz
daa
gs
fnsave
scas
movsl
or
stos
dec
rclb
add
bound
jne
mov
fcos
xlat
or
adc
repnz
adc
sub
jbe,pn
mov
adc
movsl
or
pop
shlb
mov
lods
loop
outsw
cmp
push
mov
mov
mov
lret
insl
clc
ljmp
iret
xchg
cmp
stc
nop
pop
ret
jle
pop
sub
imul
jmp
xchg
adc
dec
mov
inc
fsubrl
dec
stos
sahf
add
test
andl
pop
ror
daa
inc
dec
add
insb
mov
ret
pop
hlt
push
or
mov
cld
push
lahf
mov
gs
and
int3
testb
mov
test
pop
mov
sbb
negl
lcall
dec
mov
mov
bound
mov
mov
xchg
test
movb
ds
popa
lds
fcompl
cmp
xorb
xlat
inc
fdivrs
ret
pop
and
or
cmp
int
out
jge
out
inc
fadd
mov
xchg
sub
stc
xor
inc
inc
add
xchg
xchg
in
dec
pop
dec
sbb
sbb
cltd
xor
ds
outsl
push
sbb
sub
xchg
lods
cld
and
dec
adc
sbb
sub
shrb
cmc
push
xor
rclb
test
mov
push
sub
xchg
loopne
out
subl
xorb
mov
xlat
and
ljmp
pop
or
pop
sub
jns
out
cmp
mov
adc
fimull
out
call
testb
mov
jnp
mov
movsl
inc
sbb
mov
inc
incl
xor
icebp
adc
imul
dec
lock
cmc
mov
mov
fistps
xchg
mov
dec
sub
call
sarl
jb
add
ss
inc
push
sub
loope
stos
mov
jmp
sahf
fdivrp
incb
mov
xchg
push
ret
cmpsl
xchg
arpl
push
xor
rorb
sarl
cmpsb
movsl
xor
sbb
out
push
adc
mov
or
test
idivb
inc
cmp
cmp
push
jo
push
cmc
push
ss
in
or
sbb
fbld
xor
stc
jne
je
push
xlat
iret
scas
push
mov
les
shl
cwtl
jp
lret
sbb
gs
das
adc
mov
jl
or
push
addr16
pop
xchg
push
das
push
icebp
jmp
xlat
loope
dec
and
and
scas
mov
adc
std
mov
mov
out
pusha
inc
push
cmp
cltd
sub
frstor
push
stc
popf
rclb
leave
pop
inc
jle
ja
xchg
sub
loope
in
pop
mov
int3
rcrb
shlb
push
movsl
in
inc
pop
int
sub
xchg
or
iret
js
in
rcll
js
sub
add
push
jbe
fstl
cmpsb
mov
push
and
push
aaa
jne
jo
addr16
xchg
push
out
cwtl
sub
iret
mov
push
out
mov
popf
pop
clc
imul
mov
mov
inc
pop
loope
jnp
cmc
add
pop
enter
jmp
push
and
cmp
xchg
das
cmp
scas
ret
roll
xchg
mov
sub
lods
or
adc
test
inc
push
pop
push
pop
hlt
pushf
inc
inc
push
jmp
jnp
mov
sbb
xchg
cmp
bswap
pop
inc
jmp
xchg
pop
inc
andb
mov
push
out
mov
xchg
imul
sbb
sub
inc
lods
mov
vpshab
mov
nop
popf
lret
pop
mov
mov
imul
sub
repz
scas
inc
jecxz
xchg
test
adc
or
sub
mov
pop
outsb
imul
aam
or
sbb
push
mov
dec
fwait
aas
push
popf
sub
test
cmp
out
add
mov
sahf
mov
test
ret
inc
mov
shrl
in
ret
into
xchg
les
js
mov
mov
xchg
divl
push
rol
test
pop
mov
lock
scas
aam
subl
mov
push
stc
push
jns
sti
jne
scas
xchg
clc
sarb
into
dec
mov
sti
push
jecxz
les
mov
jge
sub
mov
xchg
cli
stc
and
pop
adc
mov
or
xchg
stos
dec
out
mov
pop
repnz
add
jo
das
push
mov
sbb
inc
nop
xchg
aaa
stos
nop
xor
test
adc
ds
xor
jmp
lods
dec
adc
push
push
lcall
sub
aas
fidivrl
pop
adc
jo
and
xchg
mov
bound
into
bound
mov
popa
popa
lods
rclb
pusha
push
ss
cwtl
shlb
jo
fisttpll
xchg
orb
mov
push
ja
ret
mov
push
mov
xor
jmp
jns
popf
cli
add
pushf
or
test
inc
add
cwtl
cmp
fldenv
and
dec
jle
pushf
mov
xchg
out
aam
cmp
negb
stc
fnstsw
pop
dec
fwait
mov
stos
xchg
xor
mov
or
mov
lea
mov
push
adc
dec
push
mov
xorb
mov
jns
in
xchg
push
mov
shr
add
dec
fstps
inc
add
sub
jne
push
dec
and
aad
add
jo
jge
mov
add
sbb
mov
int
outsl
cmp
imul
cwtl
xchg
push
jns
or
bound
add
pop
out
mov
push
jle
sub
pushl
jo
xchg
mov
enter
sarb
out
mov
inc
lret
repnz
movsb
cmp
add
or
paddq
sbb
sahf
mov
subb
sbb
adc
push
leave
fstps
mov
stos
in
out
sub
add
mov
fdivrs
aad
mov
jmp
fwait
jns
mov
inc
imul
xchg
int
and
xchg
add
into
push
nopl
push
jle
ficoms
std
mov
mov
in
fxch
or
aad
ficompl
mov
arpl
lods
testl
fidivrl
mov
ja
cmc
mov
pop
jnp
push
dec
jp
cld
and
fnsave
mov
mov
push
aad
and
aam
xor
mov
aaa
repz
popa
mov
ja
mov
paddd
mov
mov
push
sbb
push
sar
cld
xor
push
imull
pop
push
insb
lea
out
dec
fstpl
fbstp
inc
sarl
cli
leave
add
jge
sub
test
adc
scas
or
leave
pushf
pusha
out
mov
push
icebp
jo
fstps
outsb
fidivl
sub
fcomps
pop
mov
mov
cli
and
xor
stos
mov
pop
pusha
outsl
es
xor
push
xchg
xor
mov
iret
pop
adc
mov
lret
mov
cmpsb
add
adcb
es
fwait
push
add
push
unpcklps
cmp
leave
dec
std
adc
mov
shll
addr16
and
push
cwtl
dec
xchg
lret
jbe
push
fcompl
sub
mov
add
add
and
cmc
in
jns
push
pop
cmp
pop
fs
add
jle
aas
jge
pop
and
mov
lahf
dec
fistpll
adc
jo
stos
cmp
loope
ljmp
shll
imul
jae
clc
ljmp
scas
sub
xchg
stos
test
jbe
sahf
std
repnz
xor
mov
aad
loop
lret
cmp
jge
lds
jnp
aas
xchg
mov
inc
loop
mov
repz
xchg
lea
mov
js
mov
fiaddl
cmpsl
and
fs
test
popf
and
stc
loope
fistps
pop
aad
inc
mov
xor
or
jge
lea
stos
push
or
das
jmp
dec
int3
lret
cs
sbb
add
cmpsl
xchg
and
adc
stc
jbe
jb
xchg
inc
rolb
int
loope
dec
pop
mov
aad
and
repz
lock
in
xchg
sbb
out
mov
fcmovbe
outsl
arpl
das
rcrb
mov
pop
adcl
ljmp
mov
dec
repnz
lods
insl
push
mov
int
adc
cli
lds
sbb
inc
push
mov
add
leave
lahf
cmp
or
dec
cltd
roll
xor
jle
cmp
es
dec
fstl
std
out
negl
inc
fucomi
lods
adc
mov
fildl
cwtl
or
cmp
xchg
push
jmp
sbb
push
adc
and
add
int3
jbe
arpl
movsl
push
ljmp
jno
xlat
popa
clc
mov
cli
sbb
je
xchg
push
dec
fistps
cmpb
mov
pop
sbb
xor
mov
push
gs
and
iret
jg
dec
pushf
add
xchg
stc
icebp
insb
fdivrl
rcrl
push
je
pop
mov
push
push
test
ret
xchg
jg
add
push
and
adc
cmp
jne
xchg
jo
shll
xchg
nop
jae
aas
push
in
inc
not
mov
dec
xchg
leave
cs
data16
clc
lret
pop
dec
sub
mov
cmp
ss
out
mov
push
ljmp
inc
pop
pop
cmp
stos
and
add
push
out
push
adc
fldt
rorl
repz
inc
inc
adc
enter
dec
loope
repz
ret
call
cmc
bound
popf
xchg
test
mov
leave
xchg
push
or
icebp
sub
cli
inc
inc
fnsave
xchg
decb
push
call
ret
pop
push
jne
push
in
loope
call
dec
lods
divl
sahf
ret
sub
daa
or
mov
add
aam
fdivl
cmp
cwtl
pop
xor
andb
aam
repz
mov
dec
xchg
push
roll
cmpsl
jno
sub
mov
jge
sbb
je
jmp
mov
push
aaa
sbbl
adc
fwait
lods
aaa
push
test
movsl
push
enter
jge
dec
mov
dec
jge
push
stos
outsb
xor
fiadds
push
cltd
sbb
push
or
test
sbb
push
push
imul
ret
data16
aas
sti
or
mov
jmp
decb
push
push
sbb
repz
call
cmc
jo
xchg
or
push
dec
pushf
je
hlt
rcl
mov
lret
aaa
scas
add
sbb
outsl
and
dec
addr16
jne
add
push
sbb
out
inc
aam
inc
popf
cmp
fdivrl
rclb
fs
pusha
fpatan
xchg
cwtl
std
cltd
mov
jle
int3
mov
sbb
xlat
inc
bound
sbb
cltd
ret
out
or
fdiv
or
mov
fwait
testb
out
pop
lahf
stos
dec
mov
sub
lock
pop
add
push
jl
stos
mov
mov
push
sarl
and
pop
pop
push
cltd
xchg
mov
cli
leave
push
insb
fs
and
int3
out
add
mov
mov
rorb
pop
mov
pop
mov
add
xor
push
mov
les
inc
sbb
jnp
js
pop
sbb
add
outsl
imul
outsl
cmp
test
jecxz
leave
xchg
pop
pop
movsl
jle
xor
adc
or
fldenv
jmp
pop
imul
push
inc
dec
mov
inc
cmp
or
push
sahf
cmp
jbe
push
insb
ret
fsin
or
fcomps
add
lahf
cmp
out
jge
fistpl
incl
mov
out
dec
xchg
mov
cmp
cmpsb
cmp
xchg
jae
or
jb
rolb
push
push
inc
gs
cld
sti
xchg
insl
add
jns
jbe
jg
mov
jno
movsb
xchg
insl
xchg
cltd
mov
nop
mov
sbb
inc
shr
mov
jbe
xchg
cwtl
push
in
leave
dec
enter
jae
stos
xchg
ljmp
data16
lret
fcmovnu
iret
xor
and
outsb
in
cmp
jg
sbb
mov
xchg
fs
jns
enter
cli
or
cmp
jno
push
cli
or
rcl
rcll
insb
pop
xor
inc
in
mov
loopne
scas
jmp
xchg
lods
xchg
ss
mov
enter
ss
cmp
xchg
sti
push
mov
rcr
pop
insl
imul
fs
xor
xor
jo
cmc
aas
imul
jb
nop
test
adc
stos
push
mov
sti
test
mov
inc
daa
xor
add
out
and
inc
adc
int
popa
and
jmp
insb
pop
inc
mov
mov
push
leave
xchg
icebp
push
pop
pushf
adc
lret
xchg
nop
inc
dec
inc
sub
nop
les
cs
ret
nop
daa
xchg
add
jbe
add
jo
jb
xor
aas
jmp
gs
aad
xchg
mov
lret
loop
push
out
cld
and
ror
push
push
imul
xchg
inc
sbb
idivl
aam
adc
mov
imul
idivl
pop
cmpsb
mov
fpatan
jo
mov
jp
enter
jbe
push
and
cmp
sbb
cmp
ffreep
xor
fdivrs
je
inc
xor
shrb
mov
xor
mov
cld
outsl
enter
ss
fsub
ljmp
jg
dec
fidivrl
jns
cmc
push
fcomps
lods
aam
lods
mov
sub
dec
fldenv
inc
push
pop
pop
and
inc
xchg
add
in
jnp
call
ja
dec
das
mov
mov
jnp
sub
mov
cwtl
int3
sub
shll
dec
aas
je
inc
frstor
mov
cmp
ret
clc
mov
scas
out
xor
add
imul
orb
stos
fwait
arpl
fsubrs
frstor
mov
jmp
pop
fidivrl
or
mov
imul
adc
mov
and
loop
nop
ljmp
lock
fistps
out
sahf
jg
xchg
fildll
add
lods
les
leave
adc
lods
or
jecxz
cli
add
icebp
daa
outsb
cmp
inc
cmp
test
xchg
jae
inc
jl
cmp
pushf
rcrl
xchg
pop
in
push
aaa
popf
iret
loopne
pop
push
xchg
lahf
push
sub
mov
cmp
fidivl
pop
jmp
or
cmp
sbb
out
shlb
mov
xor
rol
pop
add
push
test
mov
add
test
rclb
xorb
xchg
xchg
xor
dec
mov
mov
mov
or
sub
pop
sub
idivl
pop
mov
dec
aam
push
sub
js
adc
xchg
jns
xor
mov
stos
sub
pop
movsl
ret
dec
xor
dec
inc
stos
push
cmc
inc
add
xchg
cwtl
fisubs
test
push
mov
or
push
int3
and
xchg
scas
xchg
add
mov
fsubs
lret
divl
out
nop
cmp
mov
sbbl
int
jno
scas
ljmp
push
mov
dec
wrmsr
xchg
sub
fs
mov
jmp
lea
scas
and
int
ljmpw
cmpsl
mov
dec
int3
in
jecxz
xchg
add
outsl
adc
xchg
cmpsb
jg
mov
add
jno
adcl
or
ljmp
mov
pop
or
aas
lret
pop
xlat
jae
lock
ss
cmc
sbb
lcall
imul
fbstp
xor
inc
scas
pusha
std
adc
sub
jae
ds
bound
or
sub
or
lds
xchg
adc
or
mov
rorl
jl
cmp
orl
and
repz
in
and
push
nop
dec
pop
add
fs
sub
xchg
subb
imul
dec
mov
movsl
or
sub
in
jnp
mov
jns
vmread
nop
or
sarb
add
jb
sbb
jb
stc
int3
lds
cmp
outsl
and
mov
push
fnstsw
sbb
int
push
mov
cmc
hlt
imul
sbb
shrb
popa
lock
inc
cmpsl
ss
sub
icebp
and
sbb
xor
inc
lahf
adc
xchg
jle
js
mov
push
iret
outsl
xchg
scas
dec
mov
jo
sti
xchg
fmul
ja
or
lcall
dec
pop
arpl
xchg
fcompl
dec
ret
outsl
fsubr
xchg
aam
notl
js
sbb
jnp
in
xor
add
xor
cmp
jecxz
adc
dec
pop
pop
scas
adc
psrld
mov
adc
sub
pop
jne
dec
jge
fisubs
shll
hlt
jle
mov
xchg
jle
mov
enter
test
incl
adc
test
sub
out
mov
and
mov
mov
push
mov
sbbl
sub
scas
repnz
dec
sbb
fimull
sub
inc
mov
mov
inc
testl
lods
movsl
jge
sbb
js,pt
mov
jp
pop
add
rclb
cmpsb
pushf
mov
rep
lret
scas
push
mov
int
fwait
into
push
sub
rcll
rcrl
test
call
stos
pop
hlt
inc
push
inc
mov
fs
imul
pop
ss
rorl
sbb
sub
or
negb
pop
notl
js
outsl
xchg
sbb
add
js
or
xor
mov
and
data16
jg
test
add
psubq
jae
es
mov
test
imul
mov
mov
dec
mov
iret
sub
cmp
out
repz
mov
sbb
inc
cmp
inc
movsb
aam
je
inc
mov
test
xchg
jae
mov
inc
bound
inc
out
jbe
pop
testl
sbbl
or
int3
in
popf
sbb
pop
pop
lds
sub
data16
lods
xchg
imul
jp
pop
and
nop
insb
mov
sahf
cmpsl
jne
cmp
out
pop
adcl
fists
addr16
adc
xchg
div
popa
nop
xchg
mov
mov
dec
mov
aam
and
push
shl
rcrb
push
iret
mov
sub
cmpsb
lea
push
xor
dec
ss
call
pusha
fsubrl
or
mov
inc
in
push
jmp
andl
ret
stc
clc
add
mov
sahf
fisubl
add
xlat
add
xor
mov
jb
or
mov
mov
xlat
dec
mov
shrl
sti
mov
fildl
inc
fcoml
adc
pop
mov
lock
or
xlat
or
in
or
mov
fidivs
repz
out
lahf
ret
adc
ja
cli
sbb
enter
add
add
lea
scas
aaa
push
sbb
or
push
insb
cmp
xor
gs
mov
xchg
stos
push
push
call
stos
repnz
popf
push
fisubrs
sbb
nop
gs
shlb
xchg
and
dec
sbb
add
push
call
lock
push
mov
dec
pop
ret
rclb
nop
ss
in
cmp
pop
sub
push
imul
pop
pushf
and
mov
adc
xchg
jne
jns
mov
clc
fldcw
sbbl
mov
sub
cli
or
je
daa
jp
imul
loopne
movsl
dec
jb
cmc
lods
jecxz
test
cmpsl
xchg
sub
adc
das
push
fs
das
into
jg
test
lret
call
scas
mov
xchg
pushl
movsl
mov
cmp
mov
push
out
cmp
clc
inc
xchg
pop
jbe
xchg
inc
mov
sti
test
iret
dec
xor
inc
icebp
shll
incl
stc
lds
pusha
mov
dec
or
addr16
cld
push
ljmp
cmpsl
and
cmpsb
xchg
arpl
xor
xchg
mov
mov
and
pop
push
jecxz
subl
cmpb
stc
mov
push
pop
push
or
movsl
idivl
lock
nop
inc
lods
lods
imul
js
push
inc
rcrb
dec
out
cmp
fimull
insl
sub
enter
repnz
hlt
cmp
nop
jp
pop
jl
push
in
jb
jle
mov
popa
shl
repz
xchg
pop
lock
push
xor
jp
aas
dec
mov
lods
mov
sub
stos
sbbl
jge
push
jo
out
inc
shlb
test
call
lds
sbb
push
in
out
pop
mov
sbb
outsb
popf
inc
sbb
stc
mov
sbb
stos
std
jno
or
or
subb
mov
lock
movsb
or
orb
xchg
scas
adc
jo
mov
push
add
lea
lea
xchg
jnp
cmpsb
lods
test
adcb
mov
imul
xchg
addr16
std
push
int3
ljmp
sti
or
jne
jbe
mov
arpl
mov
push
jae
rcll
lcall
and
es
lock
sub
sbb
pushf
adc
cmp
int3
jecxz
mov
cmp
int3
jns
push
stos
lods
test
icebp
mov
cld
aam
addr16
cltd
cs
popa
mov
sar
pop
loopne
cwtl
xchg
push
push
not
pop
mov
xchg
decl
shlb
dec
mov
fmul
pusha
cld
enter
clc
out
scas
es
rorb
adc
popf
mov
cmp
push
aam
hlt
pop
in
aaa
test
cmp
ds
in
sbbl
add
scas
in
int3
shll
mov
push
inc
decb
aas
push
ljmp
jne
add
cmpl
pusha
mov
adc
ja
push
sbb
stos
dec
shrl
push
scas
ljmp
imul
and
cmpsb
inc
test
clc
lret
data16
add
adc
arpl
pop
sbb
loop
push
dec
scas
ljmp
loop
xchg
test
mov
outsb
jl
jecxz
xor
add
adc
rorb
mov
add
mov
jbe
roll
add
mov
xor
mov
pop
insl
add
ds
sbb
fbld
lahf
lods
mov
mov
mov
adc
xor
mov
or
mov
inc
loop
inc
fnstsw
mov
sti
dec
sbb
xchg
les
inc
xchg
xchg
and
mov
and
in
inc
jmp
and
test
sub
out
push
lahf
shr
cmpsl
in
loop
aaa
xchg
mov
scas
inc
jge
leave
push
xchg
xor
movsl
repnz
sbb
pop
andb
fmul
incl
test
pop
lock
fbstp
mov
mov
cmp
or
and
aaa
data16
pushl
ss
lcall
out
out
imul
jg
mov
aas
mov
push
fimuls
jb
lods
cmp
gs
lods
mov
xor
pop
sbb
lret
or
dec
icebp
xor
shl
mov
flds
out
movsb
push
jae
xor
and
in
jp
push
and
aas
push
jbe
andl
mov
push
icebp
lret
xor
mov
and
lods
inc
lcall
cld
inc
cmp
jbe
mov
mov
mov
xor
imul
jmp
inc
adc
add
sbb
jb
daa
lock
pop
sub
xor
lcall
and
jo
mov
test
mov
imulb
add
shrb
ret
jne
xor
inc
shrl
adc
js
cmc
jns
daa
jmp
xchg
sbb
lcall
xor
out
pusha
inc
test
repnz
sbb
fldcw
orl
gs
fistl
mov
push
xor
sbb
sbb
or
shlb
sbb
cltd
sbbl
dec
sahf
sahf
addb
dec
sbb
xor
fsubrl
arpl
add
mov
out
push
les
ret
dec
in
mov
test
sbb
xchg
testb
mov
sbb
fnstsw
fisubl
stos
xchg
mov
outsb
data16
cwtl
shll
sbb
je
xchg
mov
incl
sahf
xor
cmc
sub
aam
sbb
inc
mov
jne
xchg
mov
lods
mov
mov
mov
push
adc
jns
adc
jp
icebp
movsl
and
mov
ficomps
add
mov
jmp
mov
je
sbbl
lds
sahf
bound
push
xor
jae
xchg
out
inc
mov
inc
xor
mov
pop
in
rcll
lods
push
sbb
dec
loopne
jge
adc
push
divl
pop
and
dec
push
lret
stc
or
lret
pop
ucomiss
fdivrl
adc
lahf
nop
sbb
sub
mov
dec
insl
das
inc
sbb
add
jg
push
adc
incl
pop
xor
cmp
adc
sbb
mov
outsb
cmovbe
mov
adc
push
popf
fisubl
add
call
pop
pusha
jp
pop
ret
sbb
cmpsb
inc
dec
push
or
pop
mov
loope
xor
lock
loopne
push
sub
push
adc
mov
mov
ds
mov
adc
cmpsl
inc
mov
push
lock
xlat
cmp
mov
hlt
data16
cmp
xlat
fbstp
nop
sbb
mov
inc
add
and
cs
fstl
adc
test
xor
pop
push
les
mov
hlt
movsb
cld
push
jl
nop
andl
adc
pusha
jmp
rcll
leave
test
push
mov
sub
mov
lods
loopne
js
mov
shlb
pop
or
pop
in
fwait
lahf
outsl
pop
cmp
push
cli
and
sbb
pop
loopne
into
jg
mov
jle
div
mov
inc
or
jbe
mov
jl
mov
lock
or
inc
fidivrl
repz
sub
popa
outsl
xor
push
ljmp
jb
clc
dec
add
ret
add
aaa
push
xor
sbb
pop
aas
push
sub
adc
jge
movsb
sub
paddq
daa
jb
jns
insl
cmpsl
cmp
lds
cwtl
loopne
xchg
pop
hlt
inc
cmp
call
test
add
sbbl
std
pop
cmp
pop
pushf
repz
pop
xor
int3
dec
movsb
mov
mov
xchg
sub
lods
movsb
push
xchg
jo
outsl
or
dec
into
test
push
add
pcmpeqw
sti
stos
mov
mov
push
fcompl
push
xor
fdivrl
sbb
out
mov
stc
rol
aad
cmp
enter
jl
cwtl
xor
xchg
lcall
fs
insl
sbbl
pop
and
inc
bound
pop
in
sbb
mov
sarl
mov
inc
mov
cmpsb
loopne
int3
adc
jo
outsl
push
pushf
mov
cmpsb
mov
xchg
gs
outsb
jg
dec
aam
addr16
pop
push
mov
sub
movsl
xor
sbb
je
cmp
pop
cs
adc
icebp
cs
push
mov
inc
movsl
cmp
test
xlat
dec
gs
xchg
imul
repz
fwait
xor
pushf
sub
adc
xchg
ret
or
scas
or
andb
dec
xchg
sub
pop
sub
jnp
je
jns
movsl
xchg
ljmp
ret
jnp
jnp
jae
adc
or
mov
pushf
popa
in
test
shl
push
sub
pop
iret
out
int3
sbb
sub
mov
add
stos
mov
fbstp
enter
rcrb
cmpsl
cs
clc
pop
imul
aaa
mov
push
add
shll
push
dec
mov
xchg
test
lret
and
mov
mov
jecxz
sbb
push
das
inc
cmp
mov
xchg
jp
mov
test
lahf
mov
shll
mov
jecxz
ds
or
repnz
lods
pop
lods
push
jp
lret
sub
sbb
jl
ja
pop
scas
mov
out
add
fisttps
or
sbb
xor
insl
mov
hlt
lea
int
adc
enter
push
les
xchg
stos
mov
pushf
jae
mov
xorb
lea
and
call
outsl
je
sbb
xchg
cmp
dec
aam
lock
inc
gs
ret
jae
mov
pop
pop
push
jno
fsubrl
xlat
mov
test
movsb
fisubrl
das
mov
and
mov
gs
arpl
push
mov
ljmp
pop
mov
aad
and
rcrl
in
popa
rorb
mov
addl
jmp
mov
imul
jmp
sub
lret
hlt
push
xor
subl
mov
dec
out
sub
push
pop
jle
push
mov
fldl
pushf
xchg
and
push
push
mov
mov
push
xchg
ss
sarb
test
cmc
cltd
sub
mov
ror
daa
clc
mov
inc
imul
pop
push
stos
add
js
stos
inc
fsubrp
outsb
ja
push
and
mov
mov
bound
fdivr
or
mov
mov
pop
out
movsl
sbbb
mov
adc
stos
sbbl
push
sarb
icebp
push
dec
sub
dec
shrb
sub
cmp
arpl
repnz
add
sbb
fbstp
push
xor
ss
pop
mov
jnp
xor
les
call
outsl
repz
fisubrs
mov
jg
test
popf
mov
lret
lahf
in
adc
pop
and
jecxz
ss
test
cmp
push
mov
pusha
mov
xor
cmp
jge
xchg
cld
mov
cmc
cmp
xchg
mov
mov
xlat
push
adc
mov
sbb
xor
jge
imul
mov
lea
push
xor
aas
adc
int
test
int
sti
or
xchg
test
pop
add
add
std
xor
das
imul
jne
jmp
jp
addr16
mov
fists
into
mov
jne
sbb
adc
push
push
call
push
sahf
adc
adcl
adc
dec
dec
add
push
jmp
scas
inc
shll
loop
test
movl
pushf
dec
jmp
sahf
subl
scas
jg
mov
mov
adc
gs
sbb
add
mov
out
mov
test
pop
lock
cs
inc
xor
push
insb
xchg
and
mov
sub
out
pop
movsb
ss
filds
mov
mov
cmpsl
jmp
mov
mov
rcrl
mov
fldcw
push
in
mov
bound
in
add
sbb
stc
add
add
mov
insb
mov
fiaddl
repnz
xlat
push
lods
pop
and
scas
cmpl
mov
jp
pop
imul
dec
xor
mov
cmp
mov
adc
sarb
inc
xchg
jno
adc
dec
xor
add
mov
rol
pop
jne
hlt
add
addr16
cltd
xor
or
inc
dec
push
or
mov
jb
bound
push
inc
inc
gs
mov
out
out
stos
dec
mov
inc
data16
bnd
pop
test
aad
pop
pop
push
loop
mov
xor
arpl
adc
dec
inc
xchg
mov
gs
test
push
leave
pushf
mov
xor
int3
pushf
repnz
cwtl
mov
sarl
out
pop
das
push
pop
inc
lahf
add
push
loopne
add
mov
repnz
xlat
out
rolb
dec
jecxz
daa
or
lret
xchg
lods
lcall
push
mov
pop
fucomip
and
jge
jp
nop
lds
mulb
mov
mov
or
movsl
mov
push
popf
mov
fldcw
outsl
fdivs
mov
mov
outsl
mov
jo
nop
sub
push
sub
mov
xchg
lret
fmul
pop
add
or
in
pop
cmp
sbb
ret
lahf
adc
mov
jge
aas
in
daa
or
xor
xchg
sub
dec
adc
cld
inc
push
mov
repnz
fsubrl
or
or
into
mov
out
push
popf
sub
adc
jb
outsb
sub
mov
inc
or
insl
rclb
test
jle
mov
les
shlb
or
xlat
push
xchg
mov
pop
adc
ja
out
insb
and
imul
add
sub
jecxz
adc
mov
enter
inc
jmp
sbb
enter
and
jo
inc
addr16
out
pop
mov
xchg
aas
sbb
js
pusha
jnp
pop
jns
sti
sub
or
jl
cs
jmp
mov
cmc
jnp
sub
cltd
xor
sub
dec
and
inc
aam
js
add
fmulp
movsb
ds
popa
jecxz
adc
and
enter
pop
incb
mov
in
in
cmpsl
inc
mov
in
enter
outsl
mov
mov
mov
fwait
sbb
sbb
sbbl
cltd
gs
xor
cmp
nop
das
mov
push
xor
dec
movsl
inc
nop
push
rorl
xorb
pop
or
mov
mov
mov
lock
push
and
and
out
pop
ja
jns
dec
mov
dec
push
inc
pop
jge
nop
jg
cmpsb
mov
ret
cltd
sbb
ja
call
or
sbb
xchg
lcall
stos
rcrl
test
jmp
xor
sub
jno
sub
mov
iret
test
jbe
and
bound
sbb
lret
aad
in
pop
fstp
dec
loopne
jmp
adcl
cmp
adc
hlt
bswap
jl
jb
sub
inc
test
inc
or
cmp
jecxz
leave
add
mov
filds
xchg
add
push
nop
pop
inc
mov
and
pop
dec
addr16
mov
int
sti
ds
es
negl
mov
mov
rcll
cs
pusha
loop
shlb
push
add
test
daa
push
push
xor
sub
jg,pn
and
jle
cmp
dec
inc
repnz
sbbb
mov
outsl
push
push
or
dec
or
ljmp
insb
bound
lahf
push
repz
adc
test
xor
pop
sahf
add
and
xchg
dec
and
fbld
or
in
std
lock
cld
mov
imul
jp
call
mov
and
inc
fwait
xor
push
jo
inc
fsub
xchg
or
jp
push
sbb
or
add
mov
stos
aas
sub
mov
shll
shrl
nop
mov
push
push
es
arpl
cmpsb
xchg
cmp
jge
std
sub
arpl
dec
subl
mov
cmp
cmp
xor
ret
hlt
xchg
addr16
dec
and
mov
out
cmp
pop
push
fimull
jne
out
push
pop
push
loop
out
fistpl
push
add
cmp
dec
push
pop
rcrb
add
nop
dec
in
stos
lret
fisttpl
mov
push
and
out
push
loopne
movsl
xchg
pop
fldenv
dec
pop
and
xchg
outsb
cmc
test
pop
icebp
int3
ss
iret
ret
shll
push
test
testb
pop
test
jge
cwtl
jecxz
fldenv
jp
cmc
stos
inc
pusha
xchg
repz
jl
jne
or
dec
pop
jg
adc
cmc
es
inc
mov
out
ds
or
mov
in
mov
addr16
movsb
addr16
jl
scas
push
add
sub
aas
stos
adcl
pop
and
loop
clc
rcrb
adc
cmp
in
sbb
pop
xchg
mov
and
addr16
push
pushf
xor
bound
fildll
adc
inc
adc
icebp
mov
xchg
add
cmpsb
sbb
sbb
mov
into
fdivl
scas
dec
add
dec
xchg
hlt
jnp
inc
lea
jle
bound
jne
and
dec
add
mov
dec
mov
mov
dec
push
sbb
lcall
lcall
jg
dec
sub
sub
movb
clc
pop
mov
test
cli
inc
into
movsb
adc
xchg
dec
jge
mov
in
scas
sbb
pop
jo
push
push
inc
icebp
arpl
pop
lock
push
mov
js
std
cmpb
sbb
nop
pop
insl
sub
loopne
push
xor
dec
dec
pop
mov
sbbl
and
fiaddl
loope
and
mov
dec
lcall
int
aas
pop
out
scas
mov
jns,pn
push
mov
mov
testl
sbb
mov
pushf
out
jae
mov
into
cmpsb
sbb
cmp
jle
mov
cli
rolb
xor
xor
push
subl
mov
lret
int
sub
dec
cmp
shll
mov
pop
test
xchg
out
fstpt
fldcw
insl
add
nop
pusha
incl
or
int3
pop
cwtl
std
cltd
cwtl
ret
sbb
int
dec
lea
out
lock
or
mov
xor
adc
in
push
outsl
test
outsb
daa
pop
push
ja
pop
test
mov
xor
jg
cwtl
cmp
lcall
shll
inc
fisubrs
cltd
and
stc
gs
daa
push
fistl
sub
bound
movsb
push
pop
icebp
movsl
lds
ret
shlb
sub
adc
mov
jae
jl
arpl
add
pushf
enter
add
hlt
add
dec
adcl
sti
sub
inc
mov
nop
int3
sub
sbb
adc
jb
and
jb
inc
lahf
push
popa
test
sub
xor
fcmovbe
mov
movsl
xor
push
daa
or
stc
aas
sub
lock
push
loope
loope
push
or
or
pop
lods
cmpsl
cli
inc
xor
or
outsl
lock
push
jne
jecxz
sub
jle
add
mov
lock
in
jmp
lock
and
lods
mov
in
pusha
jno
push
xchg
mov
rcll
jle
lods
faddl
js
xchg
xchg
mov
in
add
push
notb
in
dec
or
dec
pop
outsl
fcomi
enter
jb
xor
push
xlat
mov
fildll
inc
fwait
sarl
lret
jb
add
sbb
cld
sbb
fdivrl
test
xchg
sub
ljmp
xor
sub
sbb
sbb
jnp
pusha
cld
push
mov
movsl
pop
jmp
and
jb
or
jne
popf
aad
xchg
cmp
ret
test
fists
aas
adc
fisubrl
iret
xchg
popa
loope
sbb
push
lock
mov
fucomi
sti
mov
jns
comiss
adc
inc
push
aas
pushf
xor
dec
lock
or
xchg
mov
out
and
sti
int3
or
jno
jne
push
dec
push
cli
or
jge
pop
lods
fwait
jne
frndint
and
cmp
adc
popf
bound
ljmp
and
fstpt
push
mov
inc
orl
cmc
push
das
rclb
cmc
jl
cmpsl
inc
stos
jle
jmp
cli
lea
insl
adc
sbb
lods
dec
sbb
push
ret
or
loop
inc
ret
adc
cmpsb
cmp
and
jle
repz
lretw
test
sub
dec
out
mov
jge
adc
mov
push
mov
pop
xchg
mov
out
imul
mov
test
and
hlt
dec
ds
stos
inc
lret
enter
out
ficoml
insl
xchg
add
clc
mov
idivb
jge
mov
iret
xchg
xor
xchg
xchg
js
or
adc
jle
jae
cmpsl
sti
mov
das
icebp
decl
or
mov
push
or
cld
jae
sahf
xor
cmp
arpl
stos
fcoms
push
bound
pop
fdivrl
sub
pop
out
xor
jb
sub
jb
stc
nop
push
mov
test
orl
ror
into
mov
imul
jg
sub
aam
test
daa
das
add
pop
mov
mov
xchg
pop
dec
lahf
lods
mov
fbstp
dec
pop
cs
ljmp
cltd
decb
sbb
jmp
int3
mov
mov
xor
aaa
sbb
daa
cs
nopl
sub
cmp
iret
push
sti
jecxz
ss
xchg
adc
push
mov
pop
repnz
aam
fwait
push
sahf
mov
lcall
lds
pop
adcl
out
sahf
cmp
or
jecxz
insb
sub
rclb
leave
xor
leave
in
lds
and
inc
and
call
jge
pop
add
dec
stos
push
add
or
or
das
or
add
out
mov
sbb
add
cld
test
stos
sbb
ror
cltd
mov
frstor
adc
or
push
mulb
push
bound
dec
pop
test
gs
or
inc
test
mov
jg
mov
cmp
inc
cmp
test
gs
sub
mov
repz
pop
das
push
jo
sbb
jge
xchg
scas
inc
fwait
insl
ljmp
jne
xchg
ja
neg
add
mov
mov
into
add
xor
jns
inc
and
xor
aad
cmp
inc
in
xlat
arpl
clc
jae
test
dec
and
ja
dec
cmp
sbb
jp
bound
add
les
dec
jno
push
adc
cmp
xor
pop
sbb
cwtl
nop
into
popa
clc
pushl
adc
iret
cmp
ja
push
loope
lea
nopl
int3
jp
pop
movsb
and
movsl
push
jge
jns
into
lods
and
xor
xor
in
dec
xchg
sub
push
mov
or
xorb
inc
cltd
xlat
and
xchg
pop
xlat
dec
push
xchg
lcall
mov
mov
xchg
adc
cmpsb
inc
lock
rclb
inc
fsubrp
scas
outsb
jl
rcr
xor
rorl
inc
sbb
mov
insb
aaa
nop
mov
cmp
jge
mov
outsb
aad
es
int
insb
cmp
dec
xchg
outsb
cmp
or
cmpsl
call
inc
imul
jb
mov
or
mov
inc
pop
fisubs
cmp
push
fsubrl
or
pop
xchg
jns
push
lahf
ret
leave
xor
pop
mov
lret
cmp
sbb
cs
fsubrl
stc
cs
cmp
pop
sbbl
lcall
pushf
sub
out
outsl
inc
or
xor
mov
test
inc
mov
xor
xchg
fidivl
sub
mov
out
xor
jmp
jo
ja
lock
cwtl
or
xchg
xchg
rorb
out
add
dec
mov
imul
xor
jl
cmc
mov
sub
insl
and
mov
sub
adc
mov
adc
or
cs
dec
inc
xlat
inc
sbb
push
adc
sub
add
push
jo
and
iret
sbbl
dec
jge
ja
in
shrl
cmpsb
mov
cmpsb
pop
lcall
push
mov
sub
or
jb
int3
pop
xlat
jnp
sbb
mov
jecxz
xchg
les
jecxz
stos
outsb
xor
mov
xchg
jp
xchg
sbb
scas
scas
inc
loopne
mov
fnstcw
idivl
jecxz
notl
dec
add
movsl
mov
push
inc
cmpsl
cmp
jp
add
mov
xchg
xor
cli
lods
mov
shlb
jle
repnz
and
xchg
cmp
push
movsl
fcoms
test
adc
inc
sub
movb
std
mov
movsb
push
jge
add
cmpl
jge
push
inc
pop
int3
cmp
movsl
divl
push
mov
pop
push
mov
inc
cwtl
fisubl
je
fwait
in
iret
jbe
adc
mov
ficoml
mov
push
push
iret
dec
sbb
cmp
push
mov
xor
push
mov
aas
lahf
aas
iret
mov
sbb
popa
stos
dec
loop
mov
pop
mov
mov
fidivs
repz
xchg
add
inc
pushf
xchg
stos
jne
jg
inc
jbe
mov
mov
push
shr
xchg
inc
repz
bound
mov
jnp
mov
lea
mov
out
jne
mov
xchg
mov
mov
sub
rclb
add
sbb
or
sahf
push
cmp
insl
daa
bound
add
loope
adc
addr16
adc
popf
mov
ss
cli
popa
cmp
arpl
add
jl
leave
pop
scas
pop
in
pop
add
add
repnz
cmp
pop
or
jb
insl
xor
hlt
mov
mov
popf
dec
test
push
mov
fs
call
mov
hlt
adc
mov
xchg
lret
pop
pushf
pushf
int3
jg
in
scas
xorl
pop
pop
mov
jecxz
sub
fsubrs
inc
push
push
jne
xchg
scas
xor
push
sti
inc
fiaddl
mov
ja
or
cmp
ds
dec
mov
repz
inc
fists
lahf
out
es
outsl
add
dec
repnz
sub
movsl
pop
xchg
mov
inc
mov
mov
movsl
sbb
out
fsubr
or
cli
daa
int
xchg
js
ds
lock
sbb
repz
cmc
push
sub
popa
andb
orb
jmp
gs
push
ret
les
sti
jecxz
out
adc
ss
outsb
pop
mov
sti
mov
xor
js
dec
cmovg
cmp
test
call
into
inc
mov
test
mov
cld
xor
es
mov
je
mov
xchg
mov
ret
popf
jb
or
jb
adc
popa
mov
dec
adc
ja
fs
pop
push
xor
loope
sbb
movsl
push
call
outsb
lock
jecxz
inc
mov
add
cmpb
mov
nop
das
inc
or
and
sub
movsb
jp
dec
and
outsl
mov
in
loope
mov
inc
out
sbb
shlb
imul
mov
jae,pt
stos
enter
push
scas
out
sbb
out
adc
mov
movsb
or
mov
dec
adc
mov
inc
xor
sbb
sbb
jo
mov
testl
inc
dec
pop
xor
and
shlb
dec
pop
ja
pop
xorl
or
or
lods
jl
sbb
lods
pop
fcmove
into
in
cmpl
aas
mov
mov
rcrb
and
shrl
push
aam
jo
push
push
popf
dec
push
iret
xor
repnz
lret
mov
sub
cmp
and
add
leave
sbb
or
sub
dec
test
push
jl
mov
into
adc
out
jo,pn
clc
adc
inc
sbb
mov
inc
sahf
xor
mov
adc
inc
jns
leave
inc
xchg
adc
mov
out
push
out
dec
mov
dec
nop
repz
insb
push
mov
inc
loopne
cwtl
jno
movsb
and
in
sti
repnz
iret
mov
aad
pop
jo
divb
dec
cmp
int
gs
pop
pushf
cmpsb
shrb
pop
jbe
ret
cmpsl
jns
mov
outsb
lret
je
cmp
stos
push
frstor
lds
and
push
cli
and
add
xor
insb
shlb
fwait
icebp
and
cmp
fsubr
jae
shll
popa
jns
lret
pop
repz
inc
stos
mov
test
lea
shlb
mov
test
mov
scas
jge
lea
mov
cmc
cmp
add
mov
out
int3
fcompl
mov
loop
pop
adc
mov
rorl
sub
inc
cmpsl
or
sarb
push
inc
sbb
mov
mov
dec
cwtl
loope
mov
and
hlt
sbb
scas
fwait
xchg
mov
std
mov
imull
jns
pushl
xor
and
xchg
adc
push
xchg
cmc
push
pop
mov
fldenv
push
or
insb
out
jns
fs
aad
movsl
mov
xor
fldl
push
adc
in
test
iret
fwait
leave
push
popf
adc
std
clc
in
mov
push
call
or
jp
shlb
iret
mov
push
lods
adc
dec
push
mov
stc
sarl
fdiv
jns
fnstenv
imul
je
out
ds
push
lea
cmp
icebp
and
xchg
js
adc
cmp
and
inc
jge
arpl
cli
xchg
inc
dec
rclb
mov
jo
jmp
mov
orl
mov
xchg
mov
pxor
js
mov
xchg
dec
add
sbb
cmp
mov
push
lea
shlb
sub
sarb
mov
xchg
sbbl
lods
jnp
mov
or
mov
testl
leave
stos
aas
imul
push
ljmp
out
bound
xchg
add
mov
sahf
sbb
mov
stos
outsb
or
cmpsl
add
repnz
fldl2t
lcall
fidivl
pop
repnz
xor
arpl
insl
add
push
lock
testl
faddp
add
stos
scas
mov
pop
je
push
out
idivl
nop
fwait
add
int
xor
dec
test
dec
pop
and
ljmp
pushf
aaa
push
enter
and
fcoms
jae
inc
sub
pop
ds
cmp
aad
call
pop
cmp
sarl
daa
dec
jecxz
xchg
js
hlt
cmp
xchg
fdivp
add
push
imul
or
mov
pop
rolb
daa
sbb
or
lods
mov
pop
out
sub
mov
into
addr16
ljmp
sub
subl
xchg
sub
push
movsb
push
add
and
dec
test
sub
mov
adc
pop
das
rcll
mov
mov
les
pop
cld
jno
pop
xor
mov
mov
jns
add
adc
push
in
xlat
fwait
sbb
mov
push
push
dec
pop
fwait
fidivs
dec
and
pop
cmpsl
les
jl
xchg
mov
jns
ss
and
mov
push
cmp
cmp
gs
ja
xchg
mov
lret
out
inc
mov
mov
mov
shrl
sahf
mov
jne
mov
test
cmpsb
cmp
daa
cmp
repnz
mov
sbb
call
mov
xor
push
in
sarb
and
pop
imul
es
sub
hlt
mov
push
aad
in
outsl
and
xchg
pop
sti
adc
mov
pop
or
pop
xchg
sub
leave
jl
mov
idivl
aad
sub
outsb
pusha
xchg
mov
enter
mov
push
icebp
lret
add
add
sbb
pop
ret
cmp
subb
cwtl
lds
mov
sub
jns
out
sub
sub
aad
sub
xchg
sarl
dec
dec
leave
ret
inc
sub
pop
jecxz
cmovge
push
dec
xchg
pop
test
mov
inc
loop
push
test
mov
fxch
lcall
call
inc
rcrb
pop
jns
mov
dec
xor
mov
pop
push
push
subb
jg
xor
dec
cmp
in
sbbl
shl
mov
loope
inc
cmp
push
daa
cld
cmp
aam
sbb
xchg
or
outsb
and
ret
popf
mov
les
or
fbld
mov
jge
push
jno
sahf
and
test
inc
out
push
shlb
sub
mov
out
push
jne
mov
mov
push
push
loopne
push
push
xchg
movsl
call
inc
sbb
xor
mov
dec
and
mov
insb
and
subl
pcmpeqw
mull
mov
jecxz
in
xchg
pop
movsb
xlat
dec
cmp
notl
or
push
xchg
pop
mov
adc
xor
ljmp
xchg
shrb
lods
pop
repz
pop
mov
and
push
out
inc
adc
cmp
push
pop
mov
pop
repz
inc
fdivl
add
mov
sbb
sbbl
xchg
mov
shl
fcomip
lret
icebp
mov
pop
fbstp
adc
cld
int3
mov
cmp
lret
lret
call
or
int3
cmp
xor
pop
add
lcall
sub
iret
dec
adc
mov
outsb
lock
xchg
dec
loope
jle
out
int3
into
add
pop
loop
xor
cmpb
add
adc
adc
sti
push
lock
jge
xor
dec
aad
inc
push
sub
mov
mov
mov
dec
in
dec
push
inc
nop
shll
test
xchg
push
cli
in
out
sub
xchg
cli
sbb
fsubr
pusha
adcb
das
stc
insl
push
dec
cmpsb
jp
mov
or
pushf
imul
pushf
jmp
dec
rcr
stos
out
push
or
test
out
xchg
mov
imul
jno
jns
daa
sbb
xchg
enter
xchg
bound
out
test
xor
xchg
push
cmp
pop
or
sub
aaa
loopne
out
xor
imul
xor
popa
repz
stos
inc
xchg
adc
xchg
inc
enter
in
sub
mov
xchg
jo
shlb
sbb
test
jae
mov
inc
xchg
sbbb
js
mov
mov
push
mov
cs
jno
xor
sbb
cltd
xor
test
push
fwait
movb
daa
icebp
movsb
fwait
pop
mov
mov
pop
enter
arpl
push
jno
fwait
sub
add
shll
addr16
aas
push
and
movsb
imul
inc
dec
ret
cmp
imul
rorb
or
push
sub
mov
lods
fs
jecxz
inc
stos
and
sahf
lea
jmp
dec
or
jnp
adc
decl
cmpsl
inc
outsl
sbbl
adc
and
idiv
push
mov
ret
xchg
xlat
cmpsl
mov
shll
out
pop
add
or
dec
fs
lods
cmp
mov
sti
xor
mov
jmp
xor
int
push
js
mov
dec
mov
xchg
lods
jmp
out
and
fiaddl
lahf
jb
add
cwtl
data16
pop
xor
movsl
mov
test
inc
scas
adc
mov
jle
mov
neg
jmp
inc
fs
aad
jg
mov
or
idivb
pop
mov
xor
insb
add
sbbl
fwait
add
jno
mov
cwtl
or
jb
icebp
fs
dec
mov
out
mov
cmp
xchg
fcompl
mov
and
mov
ds
mov
push
dec
dec
aam
xor
and
push
push
push
aam
mov
out
insl
sahf
sub
stos
jns
mov
add
mov
mov
cmp
hlt
imul
dec
mov
adc
inc
add
jg
loope
push
out
jb
jo
add
jl,pn
mov
push
jno
jg
push
mov
mov
dec
mov
mov
lcall
cmp
xor
dec
cmpsb
data16
call
cwtl
repz
shll
cmpb
xchg
sarb
movsb
cmp
movsl
cmp
pop
test
out
mov
cmp
jne
imul
inc
fs
fwait
and
shrl
lahf
xchg
jnp
mov
mov
addl
dec
push
jns
subl
xchg
add
adc
ret
fadds
mov
push
loop
outsl
insb
cmp
test
push
mov
ss
xlat
push
out
mov
xchg
and
rcl
push
adc
cmpsb
movsl
aam
sbb
or
mov
pop
sub
dec
movsl
fsubrs
repnz
inc
jecxz
sbb
sbb
scas
sub
sub
dec
out
shlb
lods
scas
inc
and
mov
xor
sbbl
negb
repnz
clc
insb
adc
lret
dec
pop
scas
cmp
enter
mov
adc
dec
and
cmp
push
jno
adc
lret
inc
test
loopne
stos
mov
bound
bound
jbe
sub
mov
nop
es
mov
sbb
popf
dec
xorb
test
mov
sbb
jge
pop
fists
aas
adc
stc
and
sbb
inc
fidivl
rcl
scas
jmp
adc
dec
sbb
xchg
pop
lea
add
push
ss
mov
insb
xchg
mov
insb
jle
outsl
test
ffreep
loope
test
adc
xor
fsubr
xchg
xchg
ficomps
and
jge
add
cli
int
mov
cmp
std
and
cmp
or
dec
daa
xor
push
pop
cli
adc
mov
pop
call
je
push
out
mov
dec
decb
fsub
adc
mov
jg
je
push
xchg
negl
mov
mov
cwtl
aas
mov
imul
fdivrs
sbb
pop
jne
ret
daa
xor
push
in
dec
pop
fisttpll
jecxz
cs
xchg
xor
mov
fs
cld
sbb
fcomps
aas
lahf
in
fsubrs
add
ljmp
stc
lock
xchg
rorb
mov
sar
lods
and
push
neg
jo
lods
andl
iret
aaa
jp
dec
push
adc
iret
sub
gs
or
hlt
fucomp
adc
cmc
mov
les
fidivl
xor
orl
imul
adc
mov
sbb
imul
out
and
mov
lods
ljmp
jno
lods
lods
sub
dec
not
insl
add
push
hlt
mov
imul
mov
mov
seta
and
ss
call
imul
xchg
push
stos
nop
call
lods
int
and
int
xchg
arpl
daa
lret
push
cmc
shlb
adc
lods
cmp
int
push
or
clc
pop
dec
jns
jge
xor
outsl
xchg
cs
jno
nop
scas
push
movsb
dec
jmp
fnstenv
xor
testl
jge
fstpt
sahf
xchg
dec
jo
add
xchg
xchg
cmp
add
scas
rolb
hlt
hlt
repz
and
inc
mov
push
rolb
push
lods
loope
xor
loopne,pt
push
stos
inc
popa
xor
xor
test
adc
push
leave
mov
lahf
mov
shll
add
pop
or
test
shrl
jg
enter
lds
jno
push
sub
mov
mov
xchg
mov
sarl
mov
adc
jmp
sbb
xor
and
bound
sub
add
push
sub
cmpsl
push
les
or
push
add
jb
push
mov
push
cmpsb
inc
pop
aaa
aad
xlat
jnp
idivb
mov
cmc
pop
jecxz
mov
lahf
rol
jmp
lea
or
cli
fldl
xor
push
inc
cmpsl
lahf
xchg
jbe
xchg
das
mov
fdivl
cmp
xor
cli
xchg
aaa
jns
mov
push
mov
mov
cmp
xchg
imulb
mov
repz
xor
jmp
es
mov
push
outsb
aaa
sbb
nop
jmp
mov
stos
xlat
outsb
fsubl
or
add
xor
mov
mov
sub
divl
dec
mov
pop
jmp
mov
jp
mov
in
sub
mov
push
mov
cmp
push
mov
dec
loopne
jle
and
pop
cwtl
xlat
cs
test
orb
outsb
mov
ret
lods
push
jne
fwait
pop
cmc
enter
push
mov
test
cltd
shll
imul
fwait
shll
sti
xchg
cmp
popf
stos
loope
sub
popa
andl
test
adc
nop
cmc
das
jo
mov
xorl
mov
enter
mov
add
add
xchg
pop
repz
sbb
sahf
mov
xor
cmp
inc
test
inc
in
mov
iret
aad
out
mov
xchg
into
cld
xor
and
pushf
icebp
pop
cmpsb
or
cltd
mov
negl
bound
jbe
mov
mov
outsl
pop
fs
mov
out
fisubs
sbb
loopne
adc
sahf
cwtl
push
lds
inc
mov
sarb
mov
lock
ja
adc
cwtl
stos
shll
mov
adc
sub
cmpsl
cmp
lret
decl
pop
stos
or
or
push
jecxz
cmc
adc
jo
enter
mov
pand
add
xor
push
sub
jl
cmp
loopne
mov
lds
inc
cmpsl
gs
sub
mov
jecxz
int
insb
add
daa
filds
in
ficoms
stos
invd
loop
mov
jnp
jmp
dec
sbb
mov
pop
sub
fwait
pop
sub
mov
jbe
lds
in
xchg
in
dec
dec
pop
fisubl
pushf
jle
clc
es
xlat
cmc
push
outsl
outsl
imul
jge
add
cmp
les
xor
cltd
dec
loop
cmpsb
xchg
xor
repnz
ss
subb
or
mov
jb
jge
mov
pusha
jnp
mov
mov
fistl
jno
xor
xlat
mov
cmp
popa
add
mov
push
subl
jbe
lock
nop
jae
les
xchg
adc
pop
pop
and
fisubrl
les
xor
ss
pop
icebp
out
lret
xchg
mov
xchg
dec
adc
dec
or
mov
out
das
xchg
jne
push
int
hlt
das
jb
sub
mov
inc
ret
ss
lock
push
icebp
mov
insl
add
test
push
fistl
mov
lods
lods
lahf
mov
sub
jns
or
ja
inc
xchg
insl
and
cmp
fcomip
pop
test
mov
and
jecxz
mov
faddp
xchg
fcomps
xlat
loope
sub
mov
sub
push
xchg
pusha
sbb
mov
mov
rclb
cld
push
jo
stos
cmp
pop
sbb
lea
rclb
dec
fwait
cmp
dec
fwait
push
cs
arpl
loopne
add
mov
in
add
push
jle
popf
pop
test
xchg
jp
and
sub
subl
pop
bound
dec
add
rolb
sahf
jecxz
pop
fwait
lock
inc
push
jae
pop
adc
jo
xchg
jle
test
mov
pop
out
sbb
lods
ljmp
das
cwtd
add
test
cmc
push
jne
shl
out
fwait
xchg
fldcw
jp
in
add
mov
xor
xor
cmp
maxps
js
jnp
cltd
jb
add
cltd
or
xchg
jne
in
mov
fmuls
lahf
or
push
jge
andb
sbb
dec
pop
xor
add
arpl
xor
mov
push
jnp
fwait
ret
pop
test
lcall
outsb
dec
or
into
inc
daa
mov
in
cmp
lock
imul
lds
decl
push
int3
mov
push
das
or
in
jecxz
movsl
cmp
or
insb
call
addb
inc
lods
inc
jae
out
jecxz
lret
lahf
push
push
pop
mov
xorb
add
sbb
add
dec
xchg
in
xchg
jge
leave
insb
into
enter
sub
int3
xchg
mov
lcall
xchg
aas
add
fistpl
push
inc
sub
add
xchg
inc
adc
xor
fidivs
addr16
movsb
inc
pop
icebp
data16
lds
mov
fcmovbe
out
add
cld
sahf
inc
cmpsb
sub
mov
fistpll
sub
leave
xchg
mov
ds
push
divb
cmp
in
enter
pushf
js
cs
lods
pop
adc
repnz
push
dec
enter
ud2
fcoml
dec
xchg
jae
pop
cmc
ret
lcall
pop
jns
inc
stos
sub
in
mov
inc
aaa
cmp
jnp
sbb
pop
insb
add
test
inc
insl
and
leave
pusha
mov
jl
adc
jae
sub
gs
js
sub
adc
jns
cmp
jmp
fsin
xchg
mov
movsb
pop
lret
shll
das
push
mov
sbb
push
daa
pop
lods
jle
ret
cmp
xlat
sbb
movsb
lods
clc
push
push
and
int
pop
push
jbe
scas
icebp
out
jmp
jns
xchg
data16
imul
mov
pop
orl
popf
stos
xchg
dec
lahf
pop
lahf
shrb
testl
test
pop
sarb
or
and
push
mov
popf
js
nop
add
ret
shll
mov
or
mov
pop
lods
hlt
cmp
mov
aad
dec
push
ljmp
xchg
mov
push
push
adc
sbb
rcrb
pop
add
lods
aaa
sbb
repnz
jo
ds
loopne
aaa
cmovp
xor
add
mov
inc
mov
int
mov
sbb
mov
pusha
cli
in
shl
ds
and
dec
test
mov
cmp
push
notl
xchg
inc
fbstp
movsb
stc
xor
jnp
rcr
popf
jl
sub
sub
push
pop
mov
mov
out
ss
or
xchg
fsubs
pop
and
lcall
dec
jne
aam
jl
and
cmpsl
lods
pop
dec
inc
mov
cwtl
inc
mov
pusha
ljmp
cmp
jae
fsub
out
test
xchg
popf
nop
xchg
insl
push
and
cmp
xchg
sbb
xor
cld
pop
icebp
sbb
inc
xchg
jbe
js
jecxz
or
inc
aas
xlat
cmc
xchg
pop
or
cltd
daa
movb
sbb
imul
mov
and
inc
push
divb
scas
push
mov
cmc
cmp
pop
insl
leave
pop
push
cmc
popf
lods
sub
out
movsb
mov
jne
jbe
inc
mov
das
sti
lock
fcoml
mov
pop
cmpsb
mov
mov
shll
dec
out
sti
xchg
mov
sbb
inc
inc
repz
clc
mov
and
adc
rcl
mov
fs
jl
adc
mov
mov
dec
and
cmpsl
xchg
jecxz
mov
rorb
lds
inc
addl
jg
fistpl
pop
xchg
pusha
push
fmuls
lcall
mov
xchg
lods
dec
into
push
decl
cli
mov
mov
and
testb
push
sahf
xor
sbb
sbb
mov
jno
adc
test
and
rclb
nop
jle
lds
js
cmpsb
test
inc
mov
repz
and
in
add
in
mov
cmp
xor
lret
out
arpl
or
jmp
jb
jbe
lcall
lcall
adc
int3
stc
mov
sub
pushf
xor
ja
mov
inc
pop
setae
loop
pusha
nop
jg
mov
fsts
and
imul
repnz
shll
les
js
in
test
aas
or
jns
cmp
or
adc
insb
out
adc
and
imul
movsl
int3
jne
push
lods
rolb
fstps
lret
popa
enter
outsl
std
rcrb
enter
pop
filds
std
fcom
jmp
jae
repnz
movsb
and
xchg
push
xor
je
inc
mov
aad
cs
mov
mov
dec
ror
repnz
sbb
mov
mov
orps
jno
jle
jg
imul
jl
inc
pushf
xor
sub
int
iret
cltd
cmpsl
mov
das
add
or
test
or
mov
cmp
das
popa
inc
popa
xchg
push
xchg
push
cs
insb
ja
and
cmp
insl
cmp
mov
mov
hlt
fdivr
or
repnz
push
sub
inc
xchg
jbe
insb
adc
out
movsl
dec
or
cmp
lods
es
adc
bswap
or
and
in
mov
or
mov
push
ljmp
mov
and
out
lcall
push
sbbl
mov
movsb
push
fs
lds
repz
hlt
pop
mov
cmp
jl
sub
mov
insl
into
adc
lds
hlt
cmp
ret
xchg
or
jmp
pop
filds
rclb
test
pop
mov
push
xlat
fucomi
xchg
mov
imul
sti
mov
repz
rorb
bound
aad
rolb
das
scas
pop
popa
pop
xchg
sbb
or
adc
mov
mov
fdivl
adc
dec
inc
adcb
fwait
dec
xchg
xor
nop
rcl
xor
mov
xor
shll
jmp
outsb
std
fsubrl
rclb
mov
ficompl
loope
mov
mov
inc
insl
stos
cmp
adc
jb
imulb
dec
xchg
jp
mov
inc
and
push
inc
adc
cmp
pop
mov
loopne
pop
xor
push
fisubrl
leave
popa
je
das
test
inc
xchg
addr16
jne
loope
and
mov
lahf
nop
cmp
push
out
fdivrp
lret
js
rcrl
add
dec
pop
cld
pusha
mov
add
outsl
jns
jns
lcall
scas
jmp
mov
fiaddl
out
or
mov
add
or
or
arpl
mov
and
fcomi
pop
imul
icebp
addr16
or
xor
xchg
mov
inc
xor
jbe
mov
ficompl
lret
sti
mov
mov
test
imul
pop
imul
cs
imul
call
inc
cli
outsl
push
push
sbb
lea
flds
insl
sub
cmp
xchg
ret
cld
loop
fstps
lods
in
mov
lret
mov
mov
add
fwait
xor
dec
lods
test
mov
inc
pop
into
pop
push
ljmp
adc
inc
sbbl
flds
jecxz
popa
pusha
jae
jae
sti
movsb
inc
in
xchg
jno
xchg
aam
and
dec
ja
repz
es
je
sub
repz
mov
test
aad
lods
push
dec
pop
and
je
mov
inc
pop
adc
push
and
mov
mov
sti
jo
cmc
mov
jl
xor
inc
mov
test
aad
pop
out
sti
cmc
jl
xor
popf
popf
push
in
outsl
mov
imul
jno
or
and
filds
pop
fildll
and
xor
mov
sub
dec
sahf
sub
inc
adc
push
mov
and
popa
aam
dec
in
mov
mov
shll
xchg
out
mov
into
cs
add
in
jge
jo
addr16
mov
outsl
cwtl
inc
pop
test
stc
ss
mov
and
pop
stos
mov
enter
rcrb
cltd
in
nop
negb
mov
push
loop
pop
popf
aam
sbbl
pop
fbld
cmp
push
cld
movsb
dec
jb
loop
jns
rclb
sbbl
mov
adcb
mov
adc
int3
out
data16
adc
pop
push
jo
std
inc
data16
or
dec
xchg
dec
icebp
pusha
stc
or
aaa
cmpl
cmpsb
lds
jno
fidivl
xchg
fsubr
dec
mov
push
insb
and
cmp
mov
jl
loopne
mov
scas
adc
test
inc
test
outsl
nop
xor
ss
testb
lahf
mov
push
ds
mov
jo
mov
push
and
je
out
cs
xchg
aaa
adc
imul
fwait
and
inc
mov
add
lods
dec
jb
std
into
addw
lea
lahf
rorb
add
es
out
std
cmp
sub
mov
dec
add
cmc
jb
sbb
sbb
or
loope
jbe
add
sub
icebp
cmp
lcall
or
inc
call
mov
scas
mov
and
mov
insl
add
sub
xor
pop
mov
cmp
nopl
arpl
push
into
cmp
xor
cwtl
stos
and
cmc
daa
push
pop
jl
into
adcl
test
fld
scas
xor
insb
add
add
push
cmp
push
lcall
das
cld
xchg
popa
addb
cmp
rorb
sub
sub
je
aaa
mov
adc
push
out
cmpsb
xlat
addr16
popf
mov
push
aad
hlt
lahf
adc
inc
sarb
jmp
mov
out
inc
push
jmp
and
daa
ss
dec
mov
dec
lcall
jne
push
push
jae
mov
ret
jg
mov
movsb
popf
mov
movsb
stos
arpl
stos
jp
pushf
scas
gs
js
push
jno
sbb
cmpsb
mov
insl
cmp
addr16
cmpb
shrb
xlat
add
sub
nop
push
in
mov
add
cmp
mov
push
sbb
dec
nop
pusha
jg
mov
sub
inc
dec
loope
adc
mov
es
mov
fbld
lret
inc
out
sub
mov
test
ds
in
aad
ljmp
fs
push
jae
lds
sub
or
rolb
mov
push
lahf
fidivs
xor
in
jmp
adc
push
mov
jge
sahf
push
jmp
push
cmp
adc
lahf
push
sub
cmp
cld
imul
dec
xchg
jae
mov
jg
xlat
in
add
adc
pop
and
adc
sarl
xchg
pushf
jae
dec
push
outsb
jg
ja
push
sbb
or
jae
es
adc
inc
out
shlb
lcall
or
mov
insb
add
jno
test
xchg
pop
mov
dec
mov
stos
sub
cmc
cmp
daa
pop
insl
jge
or
pop
movb
out
jge
test
repz
aaa
sbb
sub
add
mov
or
inc
or
inc
mov
scas
xchg
int3
inc
movsl
inc
test
jle
out
fldt
mov
rcll
std
fcompl
rclb
cs
push
jle
fbstp
aaa
mov
aas
test
mov
jmp
movsb
add
sub
iret
inc
push
add
mov
push
ret
and
xor
subl
jo
repnz
pop
icebp
fwait
pop
jae
adc
pop
sahf
adc
inc
mov
sub
les
lods
mov
pusha
bound
push
xchg
lock
xor
hlt
repz
mov
ljmp
adc
cwtl
cmpsl
push
lret
xor
lret
cld
cmpsb
fs
mov
cmp
adc
adcl
incb
pop
insl
xchg
jns
std
sbb
es
add
pop
mov
or
mov
dec
mov
popf
bndstx
pushf
push
aas
mov
lret
lret
test
pop
movsl
and
mov
cmc
sbb
pop
pusha
aam
cltd
pop
inc
pushf
sbb
movntps
pop
sahf
cltd
cmp
pushf
lods
ljmp
mov
mov
pop
daa
mov
jmp
inc
push
or
mov
aam
inc
mov
pop
add
int3
pop
cmp
in
pop
aaa
dec
jp
or
mov
mov
lods
aam
ljmp
ds
loopne
daa
cli
jae
push
inc
sbb
cmpb
or
or
or
fdivrs
push
test
adc
ja
repz
enter
shl
je
out
in
push
dec
call
cmp
loop
fcomp
push
push
xchg
push
sarl
jae
pop
lahf
jne
pop
and
scas
scas
enter
into
mov
mov
addl
out
fcoml
jl
lret
mov
hlt
push
testl
js
ret
mov
jecxz
add
cli
and
outsb
fistps
inc
inc
ja
mov
adc
daa
cmp
xor
hlt
mov
test
mov
mov
push
jmp
in
push
sbb
dec
pop
stc
cmp
arpl
mov
into
fistps
in
and
fdivrs
scas
das
outsb
sbb
clc
cltd
xor
mov
dec
sbb
push
ss
push
push
cmp
add
call
or
mov
fstpt
outsl
adc
mov
xor
cmp
pop
adc
mov
cmp
pusha
nop
daa
xchg
jno
and
sub
xorb
sub
add
lcall
shrb
sub
push
sbb
in
adc
mov
inc
movl
jb
daa
aas
pop
xchg
stc
subl
pop
xchg
sbb
pop
popa
shl
jl
repnz
in
and
inc
jns
jbe
scas
push
dec
adc
pop
lods
insb
fldz
push
lea
mov
sub
sbb
xor
pop
cmc
outsl
inc
aaa
mov
mov
add
lds
inc
fsubl
insb
jns
lret
arpl
cld
lahf
lods
ret
and
loopne
in
adc
or
hlt
pushf
cmpsl
scas
jns
xchg
lahf
sbb
les
std
test
xor
sbb
ljmp
and
shlb
push
lcall
adc
rcll
cmc
dec
xor
arpl
aaa
cli
ds
stos
jmp
sbb
jp
pop
cmp
sbb
sbb
loop
sub
lock
nop
int3
enter
and
out
pop
out
adcl
push
add
jmp
ds
xchg
or
testb
es
and
scas
and
xor
int3
adcb
out
aas
fwait
xchg
sahf
pop
mov
lods
cmp
mov
pop
pop
sub
adc
dec
pop
cmp
das
bound
jnp
mov
rcr
add
in
mov
xchg
mov
xor
cmp
dec
pop
ja
call
push
mov
fildll
adc
dec
enter
inc
ljmp
mov
enter
mov
adc
insl
xchg
hlt
aaa
dec
and
cmp
xor
pop
in
fisttpl
mov
insl
les
movsl
pop
cltd
daa
dec
in
ja
xchg
lock
or
mov
add
push
ret
jno
mov
pop
jp
clc
lret
lret
push
cld
out
jecxz
adc
out
shl
add
call
sbb
xchg
mov
fsub
mov
mov
cmpsl
mov
cs
sbb
xchg
insb
or
fbld
movsb
decl
ficoms
jno
iret
lock
xor
sti
dec
xchg
and
mov
jmp
push
std
aas
or
fs
mov
bnd
add
mov
mov
add
jge
dec
mov
and
stos
adc
xor
fldl
push
cltd
or
loop
xchg
xchg
jbe
insl
cmp
jnp
ja
xchg
mov
sbb
js
sahf
lods
cmp
xchg
jae
imul
cli
mov
sub
pop
repz
dec
ja
into
dec
jp
and
cltd
es
test
push
dec
lods
cmp
iret
push
fnsave
shll
pop
push
out
dec
jg
js
push
mov
loop
add
and
pop
lods
adc
pop
imul
popf
outsl
xor
lods
push
cld
int
fst
imul
stc
lods
fisttpl
mov
pop
cmp
dec
jecxz
shrl
push
js
push
cmpl
push
dec
sub
push
mov
test
outsb
push
ret
pop
xor
inc
pushf
je
cmp
jbe
sti
or
jno
and
mov
stos
mov
lret
sub
bound
ds
pusha
lds
dec
iret
shl
imul
push
lods
ffreep
fmulp
lret
movsl
jp
mov
mov
outsb
movl
and
dec
bndstx
or
mov
adc
xchg
movsl
mov
test
inc
andl
sahf
pop
sub
mov
pop
mov
fidivl
xchg
xlat
insl
jno
sbb
ds
add
mov
subb
jo
scas
pop
or
push
cltd
test
mov
lret
imul
stc
andl
clc
imul
mov
stc
xchg
movsl
addl
and
add
ftst
repz
rcll
sub
pop
lods
imul
mov
dec
mov
call
enter
adc
ficomps
mov
out
xor
mov
ljmp
enter
xor
scas
out
pop
dec
xor
or
inc
gs
pop
fsubr
lret
scas
add
fsts
das
call
jmp
jne
icebp
subl
je
mov
dec
sbb
aad
pop
sub
adc
inc
mov
scas
movsl
out
xchg
aaa
xor
daa
mov
es
cmp
dec
pop
sub
cmpb
pop
jecxz
aaa
jecxz
test
jp
xchg
out
hlt
push
add
cmp
and
aam
cltd
inc
dec
adc
xchg
adc
jnp
push
int
mov
push
mov
push
sbb
aas
popa
call
pop
imulb
mov
outsl
or
inc
xchg
cmpsb
cmpsl
leave
ja
cmp
cmp
loope
push
test
and
mov
pushf
insb
cmp
xor
jmp
xlat
sbb
pop
iret
or
lods
dec
and
xchg
shrb
test
cmp
pop
hlt
inc
pushf
scas
test
shlb
bound
or
jne
jmp
or
mov
fidivl
fs
loopne
mov
and
js
sub
mov
lcall
mov
sub
cmc
test
cmp
dec
pop
lcall
mov
and
fdivl
push
test
xchg
push
push
fdivp
addl
clc
xchg
lahf
hlt
adc
ss
in
bound
adcb
dec
movsl
push
loop
mov
pop
pop
mov
leave
popa
jo
fnstenv
aam
test
push
inc
cmp
test
push
add
sarb
cmp
cltd
or
push
jno
cmp
cmp
iret
sub
es
inc
xchg
ret
fmul
fs
popf
xchg
in
xchg
xchg
ja
lods
add
mov
jbe
sbb
inc
xchg
sub
iret
outsw
dec
dec
out
sub
or
mov
lods
dec
inc
lods
les
cli
sub
subb
repnz
lock
lods
dec
mov
enter
repnz
rcll
jb
insl
xor
mov
fcompl
in
lds
mov
lods
cmp
outsb
sub
popa
lods
hlt
xlat
sbb
enter
bound
mov
scas
test
push
scas
into
jb
mov
lock
mov
inc
cmp
push
scas
pop
mov
adcb
movsl
push
inc
mov
inc
mov
stos
outsb
add
jne
mov
in
test
or
inc
xor
sbb
sti
pop
ret
sbb
inc
arpl
push
mov
mov
ret
push
mov
and
lea
je
mov
aas
fisubs
sub
mov
scas
nop
pop
cmpsl
xchg
cs
jle
loope
shrb
sbb
fiadds
pop
lahf
jns
and
pop
jns
sahf
mov
pop
mov
pop
sbb
std
fidivrs
mov
jge
jns
xchg
daa
pop
fwait
push
lcall
push
lock
fistpll
sbb
ficoms
ss
xor
xor
cmp
fwait
push
inc
xchg
ljmp
in
sub
fsubl
mov
es
push
xor
cmp
popa
mov
sub
insb
adc
add
add
sub
add
pop
loope
mov
sbb
or
add
in
push
jb
mov
push
jecxz
bound
cmpsl
sub
nop
or
xchg
sti
out
add
xor
inc
and
add
fsubrs
stos
int3
and
ja
add
lret
aaa
sub
mov
out
jb
nop
mov
ja
pusha
jge
test
pop
popf
rcrl
mov
mov
push
cmp
stos
cs
jle
lret
pop
decl
sbb
xchg
shl
sbb
js
rcll
std
mov
adc
sbb
push
out
add
sub
push
popf
cli
int3
sbbl
add
add
stos
jae
mov
or
and
xor
xchg
pop
sti
add
mov
enter
cmp
mov
mov
inc
push
xchg
cmp
bound
inc
hlt
fidivrl
iret
mov
and
push
je
mov
xchg
addr16
lret
subb
xchg
insl
movsl
std
nop
js
shl
pop
test
and
xchg
adc
cmpsl
ds
test
inc
sbb
mov
mov
fdiv
jnp
cli
stos
aas
xchg
mov
into
roll
xor
xchg
iret
dec
pop
push
sub
inc
rcll
ljmp
pop
or
xchg
jb
test
add
fdivrl
divl
add
ret
scas
call
js
sahf
jno
andb
cmp
sub
je
mov
testl
push
and
sbb
jmp
shl
nop
xor
sub
cli
cmp
icebp
insl
sbb
sarl
mov
sbb
icebp
ret
std
hlt
sbb
outsl
sub
push
adc
ds
xor
inc
mov
ds
push
call
xchg
fwait
jo
int
testb
push
or
jae
and
jle
stos
lret
call
es
jno
leave
pusha
nop
vprotb
mov
adc
lret
or
and
jge
es
add
mov
sti
mov
jl
and
or
sbb
out
mov
addl
clc
cmp
jecxz
je
or
push
sbb
jno
std
ret
clc
int3
push
sub
sbb
inc
dec
mov
or
sbb
clts
lds
movsl
xor
test
shlb
mov
mov
xchg
sahf
mov
inc
mov
cmp
cmc
test
int
and
add
pop
mov
jnp
xchg
push
jp
dec
cmpsl
leave
pop
push
mov
popf
rolb
mov
insl
sbb
pop
inc
pop
mov
push
fidivs
adc
loopne
and
das
jbe
movsb
cmp
push
jne
stos
push
xor
or
xor
adc
fiadds
pop
sahf
mov
sarb
and
in
cmpsl
add
test
clc
sbb
movsl
das
adc
pop
add
notb
aam
out
pop
cmc
fwait
popa
fdivs
lret
gs
pop
fbld
adc
jge
stc
jge
int
fucomip
add
pop
cwtl
sbbl
shr
jmp
jp
outsl
push
mov
pusha
popf
jg
rol
pop
inc
nop
lock
in
mov
lea
stos
mov
iret
jmp
pop
mov
int3
push
call
int
outsl
xchg
addl
xchg
lea
mov
sub
add
fimull
lret
sbb
ret
call
jl
repz
mov
movnti
jmp
xchg
cmp
mov
orl
push
and
xchg
lcall
loope
mov
dec
aaa
xchg
jb
jp
jp
lods
sbb
push
push
or
fsubs
jns
fdivrs
sar
dec
test
sbb
pop
std
clc
xchg
or
lahf
xor
mov
push
cmpsl
jmp
mov
inc
icebp
cmpsl
cmc
stos
cmp
in
enter
pop
jae
outsl
es
mov
mov
push
jle
shlb
sub
pop
addb
sub
mov
dec
lea
mov
nop
daa
loopne
fwait
sbb
into
xor
negb
sub
and
pop
shlb
in
xor
or
hlt
lret
jecxz
push
mov
adc
mov
lret
stos
jae
jg
pop
enter
jl
sbb
popa
jle
jnp
scas
lods
in
mov
push
enter
imul
jge
or
jg
ss
and
push
or
and
inc
icebp
dec
pop
repz
sbbb
jp
incl
add
push
int3
dec
cmp
mov
test
loopne
aad
sub
jbe
mov
sti
pop
paddsw
gs
inc
mov
add
mov
sbb
lds
das
fwait
xor
loope
inc
sahf
lret
xchg
jo
push
cmp
stos
stos
jg
pop
jmp
out
fimull
dec
and
repnz
mov
xchg
jmp
inc
add
dec
push
dec
aaa
fadds
stos
and
mov
mov
inc
jbe
repnz
or
aas
mov
mov
and
jae
pop
add
enter
iret
sbb
ds
pop
addl
mov
sub
pop
mov
jnp
mov
sub
xor
xchg
xor
imul
sub
cltd
test
xchg
call
jns
and
call
sbb
dec
dec
dec
lock
pusha
pop
loop
inc
push
sbb
arpl
push
outsb
or
adc
cmpsb
lds
adc
int3
xor
inc
hlt
dec
repz
rorl
pusha
xor
cmp
ss
jp
sti
stc
ror
and
xchg
push
mov
les
and
imul
mov
push
cmp
xor
mov
push
xchg
lods
xchg
jns
xchg
pop
xor
cld
mov
data16
ret
enter
bound
xchg
pop
into
sbbl
xor
or
push
in
in
push
push
sahf
dec
and
mov
fdivrs
dec
pop
mov
les
push
faddl
sub
push
ja
aam
sub
enter
pop
mov
mov
adc
add
out
rcrl
cmc
jge
mov
cmp
or
dec
pushf
in
fsts
sub
jae
mov
jbe
mov
stc
in
xor
xor
add
pop
push
lea
adc
data16
pop
jge
gs
popf
mov
mov
push
cmp
pop
mov
inc
addl
icebp
scas
in
ja
cwtl
xor
xchg
outsb
jmp
pop
sbb
and
push
stos
jno
jno
int3
arpl
mov
mov
xchg
xchg
fwait
enter
push
adc
pop
xchg
aad
fcom
or
adc
push
dec
add
jge
mov
jne
out
xor
or
lds
std
mov
xchg
inc
sarb
stos
sti
xor
leave
sub
orb
loope
xor
clc
adc
sti
ret
repz
lods
shll
cmp
fistps
sbbb
shrb
inc
pop
adc
sub
jmp
jl
imul
mov
lds
outsb
mov
insl
ds
add
fidivl
sbb
jg
mov
xchg
and
push
aaa
xor
or
movsl
inc
sub
mov
subb
push
add
test
push
call
and
dec
push
jae
loop
jns
or
adc
dec
jmp
or
pop
pop
jmp
adc
je
je
mov
popa
fs
push
push
pop
lea
jge
dec
decl
xlat
xchg
in
es
xchg
xor
pop
cmpsb
cmp
jl
in
pop
ss
pop
pop
repz
loope
imul
decl
stc
jp
shrb
sarl
es
jmp
ja
add
mov
and
dec
pop
aam
je
pop
or
cmp
das
stos
add
xchg
push
icebp
mov
dec
cmpsb
add
mov
xchg
xor
xchg
mov
mov
dec
jg
pop
mov
adc
mov
fsubr
aaa
inc
fwait
insb
sbbb
mov
pusha
sub
dec
aad
pop
and
fistl
lcall
cli
imul
xor
icebp
les
mov
xor
dec
mov
aad
add
dec
cltd
and
dec
inc
adc
into
add
pusha
idiv
and
dec
scas
lret
adc
mov
jmp
test
aaa
loop
pop
adc
mov
inc
ss
and
mov
sub
pop
jmp
sub
pop
sub
xchg
pop
dec
stc
mov
loop
push
pop
cmp
jg
aas
ret
cld
into
in
sub
int
pop
xor
loope
test
out
jae
push
insb
rcl
cmp
outsb
mov
pop
xchg
pop
out
fcoml
pop
cmp
or
sub
and
insb
push
sbb
movsb
add
pop
mov
inc
sbb
rcll
cmpb
pop
andl
push
mov
call
outsl
dec
out
ss
scas
mov
adc
aas
pop
icebp
repnz
mov
cmp
icebp
adc
dec
lahf
mov
inc
push
jns
scas
jne
dec
sub
lret
pop
sub
jg
aas
sub
mov
out
test
aam
sub
cmc
or
es
mov
dec
pop
fisubs
and
cmpsb
push
fadds
cmp
lret
fwait
add
inc
adc
mov
sbb
dec
mov
push
cmp
mov
adcl
cmpsb
or
dec
lret
lods
xor
ret
bound
in
push
pop
and
cmpsb
mov
or
scas
clc
adc
xchg
shrl
call
mov
lds
jnp
mov
shll
mov
pop
fdivrl
scas
cmp
fisubrs
or
mov
lahf
mov
subb
mov
pop
jecxz
pop
inc
lahf
cmp
lods
out
addr16
adc
push
notl
daa
outsl
sbb
out
les
insb
andb
jne
fistpll
cld
mov
xchg
aas
pop
aas
xchg
movsl
adc
cltd
mov
fs
and
cmp
push
in
jb
idivb
cmp
popf
sub
out
stos
xchg
leave
test
jbe
gs
cltd
jbe
cmpsb
push
xor
cmpsl
dec
negl
jmp
and
fxch
test
roll
add
push
sbb
xor
xor
fwait
sbb
dec
dec
sub
jp
orb
dec
xchg
cltd
std
push
push
pop
cmpsb
mov
mov
dec
in
inc
inc
sub
push
hlt
out
mov
scas
andl
in
lea
mov
push
fstpl
pop
leave
inc
push
jo
and
mov
ret
cmc
push
popa
mov
repz
or
jmp
or
ljmp
mov
mov
inc
movsl
ficoms
movsb
test
sub
sahf
sahf
decl
call
xor
je
pop
ret
mov
cmp
clc
cmp
movsl
hlt
xor
sub
rclb
stc
popa
pop
mov
leave
imul
ss
cmp
adc
outsl
movsl
dec
and
cld
pushf
inc
push
ficompl
ljmp
fcomps
out
cmp
sbb
mov
jl
push
xorl
fdivs
mov
stos
mov
popa
inc
lret
inc
in
outsl
xchg
xchg
fldcw
les
xchg
ret
mov
jne
in
push
stos
jl
mov
icebp
adc
insl
sub
mov
in
iret
inc
or
mov
sbbl
lock
loopne
mov
movsb
mov
jp
xlat
cmpsl
sbb
int
test
fistpl
mov
cmp
jae
iret
mov
popa
mov
xchg
daa
and
and
mov
sub
rcr
rol
ret
pop
mov
push
dec
in
hlt
pop
movsb
and
lods
ja
push
gs
jmp
or
scas
cmp
cmpl
push
mov
call
ds
stos
mov
mov
ljmp
bound
mov
in
mov
jg
pusha
lock
mov
pop
adc
jbe
mov
dec
stos
cld
xchg
adc
andl
bound
ja
addl
subl
jg
mov
add
sub
sahf
jg
sbb
mov
or
push
popa
jnp
aas
popf
lods
push
fnstsw
inc
inc
lahf
in
nop
inc
jge
out
lock
adc
push
jnp
repnz
push
arpl
scas
pop
int3
lcall
xchg
mov
and
jnp
sub
scas
adc
cli
jmp
fnsave
mov
mov
and
jne
lods
stos
iret
das
inc
sbb
call
int3
arpl
cli
xchg
and
clc
pop
sbb
mov
in
arpl
sub
push
jo
mov
sbb
mov
push
lods
fwait
inc
push
fadds
in
aad
lcall
loope
pop
adc
ds
xor
sbb
mov
or
sub
or
mov
mov
fbld
push
popf
gs
inc
into
sbbl
fs
sub
int3
pop
mov
enter
inc
aas
add
test
mov
mov
jl
cmp
sbb
mov
std
aam
sbb
adc
cltd
and
push
icebp
jae
js
push
dec
add
jb
imul
pop
sub
push
or
xor
movsl
lds
xchg
add
out
adc
cmp
and
addb
adc
popa
xchg
mov
hlt
add
rcr
insl
adc
sbb
fs
es
xchg
push
mov
gs
int3
les
repz
xor
imul
jno
push
push
fwait
aaa
jmp
rclb
bound
mov
xchg
lds
push
inc
shrl
sbb
pusha
and
jl
sub
cld
subl
shll
pop
xchg
mov
xchg
mov
sub
hlt
sub
pushf
cli
std
pop
adc
cltd
cli
xchg
xchg
adc
sub
or
cltd
cmp
jno
mov
dec
mov
int3
pop
out
adc
push
das
in
outsb
clc
inc
lret
mov
stos
and
push
and
mov
pop
outsb
push
mov
lret
inc
adc
xchg
stos
test
movsb
repz
loop
mov
jno
sahf
ds
and
sbb
sub
int3
cmp
inc
xchg
jbe
mov
test
stos
jo
clc
xchg
and
shl
adc
popa
rorl
es
ja
push
xor
movsl
nop
push
mov
sbb
adcb
or
mov
movsb
fisubs
rcll
xor
jae
sub
in
sub
dec
mov
stc
das
lods
ja
test
ja
movsb
test
mov
inc
js
mov
out
or
pop
mov
mov
fstpt
fdivrl
mov
popf
dec
cmp
fsubr
addr16
cwtl
or
pop
add
mov
mov
cli
test
inc
sbb
and
icebp
and
outsl
xchg
shll
jno,pt
and
push
push
or
mov
xchg
imul
mov
int
mov
in
cmp
cwtl
sub
leave
sub
movsl
ja
pop
inc
loope
push
pop
pop
enter
and
outsb
add
push
test
push
cmp
push
and
mov
and
lret
mov
cli
xchg
inc
out
sbb
adc
mov
sahf
hlt
mov
sbb
adc
cmp
fucomp
mov
add
js
mov
push
in
das
loopne
cmp
jns
iret
push
cmpsl
push
aas
pop
mov
xor
fs
mov
shlb
daa
jns
scas
stos
das
loopne
add
cmp
inc
mov
rorl
or
out
dec
jne
in
lahf
fldl
dec
in
in
arpl
rorl
mov
iret
sbb
fsubs
mov
into
jbe
mov
xchg
mov
xor
sbb
xchg
dec
inc
cltd
test
sbb
pop
outsb
lret
sbbl
ljmp
xor
push
pop
in
xchg
xor
pop
cmp
std
fistpl
rorl
inc
xor
push
lahf
imul
push
lcall
sub
cmp
push
push
dec
lret
push
ret
loop
fsts
inc
stos
in
out
pop
inc
mov
cmpsb
lcall
xchg
mov
cmpsl
push
pop
call
jecxz
mov
mov
xor
cmpsl
shl
mov
jns
dec
cmpsl
into
sti
scas
push
rol
xor
fsubrs
movb
decl
push
cltd
inc
lea
add
xor
and
pop
add
es
push
jl
aaa
cmpsb
inc
fcoms
mov
inc
outsb
adc
sub
jle
ds
pop
jecxz
xchg
jl
pop
jp
xor
frstor
jge
pop
push
xchg
mov
or
jne
inc
xlat
dec
das
or
js
sub
fcomps
add
lds
aam
aad
fiaddl
fwait
out
divl
fdivrs
clc
stos
lods
and
scas
aas
mov
faddp
pop
adc
mov
add
arpl
inc
push
push
mov
fistl
in
xor
leave
int
mov
push
addr16
xchg
mov
sarl
rorl
test
push
sbb
sub
nop
mov
mov
jns
jno
dec
sar
data16
in
adc
jmp
fistl
pusha
sbb
fisubl
cltd
cmp
andb
fidivl
lock
or
lret
imul
lods
fidivrl
shrl
mov
test
mov
pop
pop
testb
daa
jge
mov
and
jo
fists
fidivrl
icebp
mov
scas
pmaddwd
hlt
test
xchg
repz
mov
cli
push
call
cli
out
rcrb
sbb
or
push
jp
divl
repz
pop
loopne
xchg
sub
push
mov
loope
xchg
mov
mov
fisubs
mov
inc
mov
es
xlat
cltd
shll
cltd
mov
insb
xorb
shl
add
and
mov
mov
lret
mov
adc
mov
xor
lock
push
out
cmp
cmp
aas
ret
imul
mov
fdivr
xchg
nop
pop
push
je
add
rcl
pop
insl
mov
jmp
cmp
mov
pop
jns
frstor
push
xchg
cmp
mov
push
pop
rcll
fimuls
sbb
sbb
mov
xchg
in
out
and
mov
jl
mov
fs
mov
cmp
outsb
jl
sbb
and
mov
inc
imulb
xor
mov
call
jge
out
out
or
gs
es
mov
sub
dec
test
filds
in
fldt
and
dec
mov
pop
lahf
add
jg
subb
scas
repz
adc
leave
cltd
cwtl
insl
and
sahf
xor
jmp
jg
mov
or
repnz
shll
dec
push
test
dec
inc
into
pop
sbb
out
into
and
je
enter
lret
cmc
push
bound
mov
jae
es
adc
mov
mov
fdivl
pop
adc
pop
nop
mov
push
xchg
clc
jbe
divb
xchg
jl
mov
mov
imul
xor
clc
jle
add
xchg
or
mov
push
push
jmp
movsl
add
fdivrl
or
push
jge
xlat
cmp
pop
inc
mov
pop
and
xor
mov
jmp
and
mov
or
cmpsb
jmp
aam
movsl
and
lea
shrb
lea
push
out
mov
cmc
pop
jno
hlt
mov
xchg
mov
fldcw
lods
mov
testb
repz
loop
or
mov
pop
cmpsb
cmpsb
push
fdivrs
subl
cmp
inc
pop
into
or
and
fimull
xchg
cli
or
cwtl
add
addr16
std
outsl
int
lods
into
mov
dec
clc
ret
xchg
sbb
aas
push
insb
jae
lcall
out
dec
aam
jle
outsb
add
mov
negb
imul
jo
pop
scas
leave
cmp
mov
faddl
jmp
adc
ja
int3
lods
push
adc
int
jbe
and
imul
enter
sub
xor
ljmp
out
std
jo
xor
sub
out
dec
cld
cmp
outsl
shl
fdiv
mov
push
push
xor
jo
sbbl
std
rol
cld
gs
xchg
mov
bound
rclb
add
rorl
cmp
inc
in
jnp
mov
flds
fsubs
aad
aaa
orl
mov
jns
in
push
aam
cmc
shl
adc
lahf
ret
fisttps
mull
leave
lods
pop
xlat
rorl
pop
imul
mov
add
repnz
out
push
js
insb
int3
cmp
sub
sbb
push
lret
cmp
sub
cmp
mov
aas
into
mov
std
xchg
or
push
daa
loope
outsb
roll
pop
mov
sbbl
sbb
lahf
xor
rclb
mov
sub
mov
pop
mov
xchg
repnz
mov
sub
jne
lahf
popa
mov
fwait
jno
loopne
push
call
mov
sub
push
mov
mul
cmp
les
scas
inc
push
enter
and
and
mov
mov
sub
xchg
leave
dec
sub
int
imul
shrl
test
scas
lea
roll
or
dec
jnp
adc
adc
sub
inc
aas
mov
cs
or
cs
rcrb
mov
inc
stc
jo
sub
call
jo
js
adc
and
stc
fmull
cmp
hlt
loop
cmp
xchg
test
push
fisubrs
mov
aam
daa
and
xchg
mov
push
dec
inc
push
sbb
mov
xlat
push
and
nop
imul
arpl
jns
and
test
xchg
mov
or
and
fwait
and
push
cmp
adcl
dec
push
popa
mov
mov
fs
xchg
push
and
test
push
mov
and
cmpl
xchg
mov
ret
js
lea
jbe
xor
test
xchg
sarl
add
xchg
sub
incb
arpl
xchg
fdivrl
cmpsl
fldz
cmc
mov
shrl
lds
adc
addl
loope
or
wbinvd
mov
or
mov
push
es
jae
ror
inc
sbb
stos
fbstp
jmp
xchg
dec
dec
fnstenv
or
popa
xorb
pop
push
outsl
fdivs
sub
subb
sahf
mov
movl
fdivrl
jg
js
add
or
test
imul
cmpl
es
popa
push
pop
push
jg
adc
pop
mov
stc
mov
mov
call
mov
outsb
add
fdivl
sbb
mov
sarb
xchg
xchg
test
jmp
inc
xchg
hlt
mov
push
sub
shlb
xchg
inc
mov
outsl
into
pop
dec
dec
scas
roll
push
ljmp
push
addr16
out
mov
outsl
scas
int3
xchg
xchg
nop
pop
sub
and
mov
pop
lock
sarl
pop
pusha
pop
scas
inc
popl
aas
add
pop
gs
addr16
jmp
mov
jno
mov
js
inc
push
scas
test
pop
sbb
mov
xor
jmp
jno
adcb
inc
push
out
jbe
je
pop
stos
cwtl
das
sbb
push
outsl
push
cmp
pop
fimull
sbb
adc
ret
or
push
cmp
das
xlat
mov
mov
push
incb
pop
adc
mov
adc
jge
cmp
jb
fiaddl
pop
icebp
jb
xchg
push
scas
xchg
sub
jo
mov
xor
ret
test
add
test
pop
cmp
or
mov
pushf
fdivrs
pop
jo
xor
fadds
cmp
jl
pop
outsl
in
pop
out
push
xchg
in
lahf
add
outsb
into
jno
out
out
cmc
mov
outsb
lods
inc
ficompl
sahf
xor
icebp
sub
fwait
pop
fdivl
jae
stos
movsb
outsb
cli
pushf
ret
jae
pop
aad
dec
stos
sub
fsubrl
mov
cmp
fisttpl
call
clc
cmp
in
dec
cmpsl
cmp
fdivrs
ret
dec
loop
into
dec
loopne
mov
add
sub
pop
adc
pop
dec
sarb
add
mov
pop
mov
xchg
mov
jl
into
fs
sub
sbb
shrl
cmp
vphaddbw
pop
cwtl
dec
jnp
jnp
loope
jmp
cltd
xor
cmp
imul
xchg
sub
xor
dec
sub
or
pop
mov
ret
test
inc
sti
xchg
jb
add
out
and
cmp
sbbl
cmpb
fidivl
mov
rcll
pushf
xor
pop
sahf
sub
jle
in
dec
and
xor
lahf
sbb
jg
arpl
mov
sbbl
and
fbstp
in
xor
push
inc
std
xchg
js
push
call
lret
mov
cmp
je
sbbl
ret
inc
adc
and
sub
adc
dec
jecxz
cwtl
xor
leave
jns
and
test
call
mov
sub
out
xchg
dec
test
xor
mov
ret
shlb
pop
lock
ss
push
mov
lcall
dec
out
lcall
fsts
and
inc
sbbl
fwait
pop
test
jg
aam
lods
inc
test
bnd
jnp
iret
test
jo
push
and
js
popa
clc
iret
mov
dec
out
dec
pop
scas
jns
insl
add
mov
push
call
andb
int3
inc
cltd
xor
jne
mov
push
push
std
xchg
nop
mov
in
mov
nop
mov
imul
jecxz
add
cmp
loop
pop
insl
nop
mov
in
push
movsl
les
mov
sub
out
xor
rolb
or
pop
jp
mov
lods
inc
sbb
xchg
sub
add
jb
pop
mov
lock
enter
sub
lds
dec
rcrl
dec
jecxz
mov
add
mov
imul
aas
cmp
insl
mov
xor
mov
xchg
sub
fdivl
mov
xchg
sub
cmp
adc
shrl
xchg
sub
xor
movsl
arpl
or
jg
push
jmp
fidivs
outsl
push
test
sahf
xor
mov
lods
out
mov
xchg
insl
insl
cwtl
arpl
int3
shr
cmc
pop
imul
sub
int
popf
ret
pop
ror
push
movsl
std
inc
mov
jb
dec
loope
mov
repnz
inc
jae
jbe
test
pop
movsl
aaa
into
xlat
lret
sti
inc
scas
inc
ja
outsb
add
leave
xchg
sub
ja
mov
jp
mov
and
xchg
xorl
xor
shll
xor
xchg
mov
xor
push
add
sub
scas
xchg
fists
mov
adcl
decb
fwait
sbbl
mov
mov
rclb
popa
clc
jl
hlt
mov
fwait
mov
push
test
setne
sbbb
dec
cmpsl
cmpb
nop
iret
lds
mov
jp
xor
mov
call
mov
adc
mov
fnstenv
addl
std
test
jge
outsl
mov
mov
lgs
dec
out
jl
test
sti
jg
adc
popa
scas
inc
xchg
stos
test
jnp
push
leave
pusha
xchg
lahf
jl
or
jecxz
in
test
lods
inc
xchg
sar
xchg
add
mov
rorl
push
ljmp
pop
lock
mov
adc
je
pop
mov
out
je
repnz
and
xor
insl
scas
cmp
pop
rcll
int3
andl
lret
mov
lret
jae
adc
dec
xchg
sub
mov
popf
mov
push
in
cmc
testb
dec
inc
outsb
add
movsl
cltd
xchg
iret
lds
adc
adc
cwtl
scas
jae
pop
jae
xchg
cs
mov
int3
arpl
xor
or
cmpsl
icebp
pop
stos
inc
mov
mov
pop
xchg
jnp
ret
ret
repz
push
ljmp
jno
int
sahf
xor
test
xchg
sub
lret
roll
push
adc
or
push
sarb
and
jnp
clc
mov
jnp
mov
test
test
jae
push
mov
jns
mov
iret
js
stos
lods
push
and
lcall
xchg
pop
dec
lods
inc
jg
add
mull
cmp
push
inc
add
imull
mov
push
dec
fnsave
add
and
push
push
loope
test
mov
shrl
rcrl
inc
fimuls
sbb
je
inc
dec
loop
fdivrl
push
xchg
imul
in
out
mov
mov
fcoml
or
addr16
pop
loope
ficoms
andb
xlat
or
mov
mov
push
aad
ljmp
inc
fcomps
add
jbe
push
adc
dec
int3
sti
adc
imul
or
add
mov
inc
movb
and
aaa
pop
lea
sub
xchg
rclb
and
mov
popa
push
push
sbb
mov
fidivs
int
xlat
push
push
xor
sbb
dec
test
xor
push
dec
pushf
mov
out
out
push
fstpt
vmread
loop,pt
xlat
adc
lret
xor
je
xor
sub
xchg
push
mov
fdiv
mov
cs
hlt
pop
sub
cld
scas
jge
push
stos
into
dec
loopne
lret
add
cmp
push
and
shrl
int3
arpl
lret
cld
and
adcl
loopne
or
lds
pop
icebp
pop
push
sbb
imul
xchg
sbbb
mov
in
iret
push
repz
jne
mov
cld
pop
ret
sub
cld
leave
cmp
adc
in
in
lret
mov
stc
nop
data16
mov
pop
pop
test
xchg
push
shll
pushf
push
call
inc
inc
sub
or
sub
or
das
call
das
xchg
repz
iret
mov
fs
shrl
sahf
xchg
ficoml
nop
imul
jns
psrlq
call
lahf
ret
fdivr
inc
int3
mov
mov
sub
sbb
lock
in
inc
mov
sbb
cmp
mov
xchg
jne
in
mov
dec
add
scas
mov
dec
inc
scas
cmp
pop
inc
mov
in
sub
lcall
jg
mov
repz
ret
jge
cmp
rcl
outsb
add
dec
pop
xchg
mov
pop
stos
aas
mov
aas
push
or
out
pop
loope
data16
or
das
and
ja
ds
mov
cmp
sub
jle
lock
pop
in
pop
dec
sbb
cmp
jns
sub
sub
or
insb
cmp
ss
add
mov
jmp
adc
cmpsb
pop
or
pop
repz
mov
adc
lods
sahf
sub
add
xor
fwait
andb
stos
cmpsl
dec
orb
inc
sbbl
cmpsb
sbb
adc
repnz
adc
sbb
popf
out
sbb
add
mov
pop
rsqrtps
sbb
sub
push
popf
push
mov
push
lods
fwait
mov
xor
xchg
push
mov
lods
nop
test
jl
sbb
mov
loop
mov
cltd
xor
xor
addr16
scas
adc
testl
push
or
sub
imulb
add
in
inc
mov
je
sbbl
mov
fdivrs
fdivrl
movsb
insl
rorl
xchg
mov
sub
insl
push
leave
dec
out
testl
insb
sub
or
cli
xchg
cmpl
pop
or
icebp
rorb
in
ret
insb
xlat
call
mov
lods
push
mov
aam
pop
jecxz
push
jmp
xchg
xchg
inc
fcoms
add
fldl
adc
hlt
xchg
gs
add
mov
sub
or
xor
mov
nop
insl
cmpl
xorl
icebp
pop
jb
cltd
xorb
mov
js
test
jmp
mov
js
hlt
cmp
pop
jnp
insb
fnstcw
mov
repz
icebp
and
fidivl
or
loop
cwtl
sbbb
outsb
add
cs
fcoms
imull
inc
mov
sarl
cmp
add
jmp
leave
gs
push
mov
sbb
test
sahf
jp
sbb
popa
fwait
ljmp
jnp
in
shrb
and
std
jge
mov
sahf
xor
mov
sub
daa
in
lock
adc
or
and
dec
jge
testb
std
stos
bound
sbb
rorb
add
sbb
dec
cmp
jle
nop
push
jae
mov
mov
mov
fistpll
imul
xor
sahf
das
jns
mov
cmp
jge
jge
test
fldenv
cltd
xchg
repz
es
mov
pop
clc
daa
mov
jp
add
daa
sub
out
cmp
dec
mov
sub
mov
inc
push
pop
out
cli
addr16
mov
mov
jg
lds
mov
inc
pop
jnp
cltd
inc
push
adc
xor
xor
int3
sbb
xlat
push
and
push
je
cmp
fcoms
in
ja
lcall
ljmp
add
pop
xor
testl
pop
xor
decl
or
fidivs
in
xor
inc
mov
pop
dec
adc
nop
jle
cmp
mov
and
lret
or
sahf
pushf
ss
adc
adc
loope
add
mov
loopne
out
add
daa
cwtl
ror
out
lret
or
dec
stos
inc
lods
jo
ljmp
mov
sarb
or
dec
in
mov
mov
sub
sub
mov
ljmp
dec
fsubr
orl
cs
or
inc
jmp
sub
rclb
pop
in
fs
fsubl
sbb
roll
inc
and
xchg
sub
enter
repz
in
aaa
into
push
fbstp
out
mov
pop
jb
jo
rclb
pop
dec
in
jge
aaa
inc
lock
int
leave
inc
gs
adc
and
jns
inc
pop
cwtl
dec
aad
pop
mov
arpl
fildll
jg
and
ja
fwait
xchg
jns
call
fwait
stc
lret
bound
or
jno
xchg
jle
xor
mov
pusha
mov
subb
sti
xchg
rorl
mov
xor
pop
jo
pop
lds
in
pop
jb
pop
aad
ljmp
jno
mov
or
aaa
jmp
mov
cli
ja
mov
sti
icebp
fsubs
jae
int
jle
movsbl
scas
xchg
xchg
sbb
dec
popf
imul
adc
push
test
cli
sub
add
and
xor
bound
dec
movq
scas
mov
rorl
push
mov
dec
repnz
inc
pop
imul
sbb
pop
mov
add
in
pop
xor
dec
lcall
inc
popa
loop
push
fdivl
dec
push
mov
push
in
fs
add
sub
sbb
mov
cmp
and
adc
pop
aad
adc
cmp
fists
xchg
add
xor
movsb
mov
icebp
loope
dec
mov
bound
jmp
mov
push
push
jecxz
add
xchg
inc
sub
jmp
jb
cmp
fwait
cmp
lds
loop,pt
mov
push
loop
aas
and
mov
jmp
xchg
push
xchg
outsl
and
mov
pop
out
or
cltd
loope
jb,pn
in
dec
lods
push
push
push
and
pop
jns
dec
push
pop
jle
mov
cmp
scas
lret
xchg
aad
sub
fbstp
dec
mov
push
fwait
mov
cmp
arpl
das
cmp
js
call
mov
mov
movsl
and
mov
add
lock
es
adc
fistpl
cmc
cmpb
aaa
stos
fstl
fs
push
add
xchg
push
mov
int3
subb
addr16
sub
xchg
rcr
fiaddl
pop
xchg
iret
fstl
in
jo
mov
mov
mov
ss
mov
lds
int3
hlt
pop
cli
and
sbb
enter
or
pcmpgtd
inc
xchg
and
push
mov
xor
scas
cmpb
dec
or
adc
dec
xchg
xor
sbb
jne
sahf
xor
sub
fwait
das
cmp
test
jp
sbb
mov
xor
or
pop
out
test
mov
or
inc
xchg
add
sub
rcrb
fnstenv
cmp
mov
xor
adc
cs
jecxz
shlb
push
sahf
shll
jae
mov
std
jle
les
jge
ret
dec
or
sub
out
xchg
cmpsb
cmp
adc
xchg
cwtl
add
and
lock
and
nop
cmc
pop
mov
mov
or
mov
push
inc
test
lea
scas
aas
sbb
pop
dec
mov
divl
daa
outsl
mov
fidivl
adc
scas
jp
stc
jp
int
xchg
pxor
jmp
cwtl
repnz
out
fld
jnp
dec
pop
loop
jb
inc
ret
inc
aas
shll
insl
and
inc
jg
popf
jb
xor
mov
pshufw
xchg
adc
ja
cmp
outsl
mov
aam
movsl
rcl
aaa
pop
les
aam
inc
in
or
inc
ja
nop
jnp
es
mov
add
cmpsl
ds
fisttps
adc
loope
pushf
mov
dec
and
ja
jno
test
mov
xorb
pop
xchg
clc
and
test
sahf
mov
repnz
fstps
shlb
cmp
mov
xchg
and
cmp
std
std
inc
fnstsw
push
ret
sbb
xorl
js
cmpsb
adc
aaa
mov
out
in
fneni(8087
fisttpll
fcmovbe
push
jmp
mov
in
or
push
xchg
mov
mov
inc
mov
cmc
cmp
mov
lret
inc
clc
adc
lcall
push
int
xchg
xchg
sub
out
xor
jae
enter
or
push
leave
roll
inc
lret
inc
stos
aam
xor
lock
xor
lret
mov
or
das
inc
mov
loope
jnp
lds
pop
aas
lds
jg
fildl
cmp
mov
loop
loope
cmp
aaa
cmp
push
dec
sbb
cltd
sarl
ficoms
cmpsl
mov
fimull
sti
out
or
lods
adc
jmp
adc
push
adc
xor
call
adc
push
mov
dec
mov
fcmovnbe
aaa
in
sub
daa
mov
dec
jmp
cmp
jmp
mov
cli
scas
and
lods
roll
push
mov
loop
mov
in
push
and
test
idivl
leave
clc
roll
into
dec
loopne
mov
pop
push
push
arpl
cs
lds
imulb
fst
into
jge
rol
xor
mov
ljmp
nop
js
adc
sbb
or
mov
jl
dec
shll
rcrb
mov
sub
mov
dec
out
pop
or
jl
cmp
aam
cld
and
adc
and
adc
mov
lods
inc
mov
sub
pop
shll
mov
repz
cmp
push
mov
push
aad
inc
jecxz
addr16
xor
mov
push
jae
cmp
fadds
sbbl
inc
mov
sarl
insb
mov
sub
in
sbb
bnd
jg
mov
jmp
test
mov
cmc
aam
mov
in
fsubs
fcmovnbe
mov
xor
pop
in
and
inc
mov
pushf
mov
imul
aad
lcall
cmpb
mov
in
pop
repnz
push
add
mov
loope
in
add
call
loopne
or
lcall
sbb
cmp
mov
xor
ljmp
jns
cmp
pop
ljmp
or
push
mov
and
xchg
mov
insl
pop
cwtl
out
push
push
test
xchg
sbb
pop
dec
mov
sub
jne
fwait
imull
ljmp
push
and
xchg
repz
pop
sti
ficoml
push
jmp
push
stc
adc
ret
idivl
in
cmp
mov
std
adc
lds
lcall
pusha
stos
notb
mov
inc
outsl
sub
inc
push
mov
add
adc
push
cmp
popa
sub
jb
jl
hlt
mov
pop
adc
adc
jge
xor
adc
push
mov
das
cwtl
or
pusha
mov
adc
cld
cmc
scas
jb
mov
xchg
xchg
cli
mov
shl
movsb
push
mov
and
push
enter
mov
mov
adc
pop
mov
dec
mov
and
push
ljmp
call
jge
sti
push
adc
and
je
test
repz
and
dec
cmpsl
push
int3
repz
or
pop
xor
ret
add
jecxz
ret
cmc
daa
pop
iret
sbb
dec
jne
add
add
and
mov
lods
mov
mov
andb
dec
aad
loope
pop
mov
lds
mov
and
out
add
dec
mov
inc
hlt
pop
inc
les
mov
enter
pop
outsb
scas
lcall
add
fs
mov
mov
jbe
les
pop
stos
ret
shl
rclb
in
cmp
and
adc
lods
mov
ljmp
push
stos
add
call
test
pop
les
fs
out
ret
mov
or
pop
xchg
sub
xchg
jnp
pop
repnz
movsl
popa
mov
lock
inc
xor
mov
insl
lcall
stos
out
sbb
int3
sbb
cmpl
in
jbe
pop
rol
cmp
add
and
jmp
xor
fs
sbb
scas
test
dec
lcall
insl
mov
aam
jbe
xchg
pop
mov
repnz
pop
lods
test
nop
jb
xchg
cmp
lock
xor
std
call
push
fsub
jnp
add
mov
out
add
sub
mov
out
ljmp
outsl
enter
mov
mov
lods
pusha
jle
push
lret
mov
add
mov
call
and
or
insb
sbb
adc
orl
pop
add
jo
je
pushf
sarb
outsl
stos
pop
xor
hlt
sub
jae
outsl
xor
xchg
sub
sbb
add
add
cli
inc
shll
sbb
in
xor
movl
pop
sahf
lea
gs
xor
mov
ja
movsl
dec
dec
dec
mov
inc
push
ljmp
inc
enter
leave
inc
cltd
and
inc
xor
jb
cmp
pop
daa
gs
jne
stc
nop
mov
mov
mov
cltd
icebp
aaa
popa
sahf
je
ja
ljmp
push
or
stc
das
repnz
and
loop
cmp
loop
repz
cmp
jnp
je
mov
mov
push
mov
cmp
gs
add
fiadds
mov
pop
xchg
push
ljmp
inc
int3
pop
jo
iret
xor
xor
mov
lret
test
xchg
dec
das
add
loop
outsl
inc
fcoms
jmp
push
lar
xor
or
into
cmp
stc
fldl
icebp
adc
push
leave
movsl
cmp
daa
ljmp
mov
iret
push
mov
orl
sub
jmp
inc
gs
inc
pushf
dec
and
pop
pop
mov
push
jge
stos
inc
inc
fwait
jno
dec
jo
popf
mov
push
sub
jecxz
je
pop
xchg
xchg
shrb
sbb
xchg
sub
mov
dec
adc
mov
sahf
das
dec
mov
adc
push
shrb
aaa
jmp
xor
cltd
inc
push
addb
sub
jne
stc
inc
xchg
pop
sub
inc
movsb
arpl
lret
push
popf
lret
stc
inc
cmpsb
in
movsb
push
adc
pushl
vpaddw
mov
pushf
nop
movl
imul
adc
pop
sarb
mov
fldenv
mov
jecxz
adcl
cli
cld
ljmp
jmp
jns
mov
adc
ds
sbb
cli
and
push
repz
push
test
and
mov
addb
push
xchg
mov
cmpb
add
mov
push
das
addr16
cmp
test
shll
pop
outsl
push
popa
push
int3
cmp
pop
lret
inc
fdivl
iret
mov
outsl
pop
test
mov
jl
sub
adc
mov
sti
adc
insb
bound
lods
lea
fadd
cmpb
sbb
fildll
sbb
add
sub
insb
pushf
xchg
pop
pop
mov
outsb
cwtl
subl
xchg
push
ljmp
mov
aaa
out
ret
xlat
loope
lock
sub
dec
sub
sub
call
cld
inc
fadd
out
mov
aad
aam
leave
jne
sarl
dec
shr
popa
pop
mov
or
popf
adc
test
test
in
or
add
add
sub
cmc
rorb
lods
cli
or
add
adc
sub
fsts
sub
sub
mov
jmp
jecxz
push
ret
or
xchg
ret
test
push
rclb
ja
add
sub
outsb
xchg
ja
insl
dec
add
dec
negb
ret
mov
push
mov
jle
jno
cltd
dec
rorb
push
sub
jnp
les
mov
ret
or
jecxz
mov
xor
shrl
xor
mov
inc
pop
sbb
cmpsl
fwait
sahf
xor
aam
movsl
addr16
jnp
or
xchg
nop
sahf
mov
push
or
cmp
outsb
mov
push
xor
xchg
pusha
push
lret
aas
push
aas
push
pusha
and
push
daa
or
test
mov
cmc
bound
xor
stc
cmpsl
push
lahf
xchg
imul
ja
jns
or
pop
push
dec
mov
and
pop
fildl
jmp
push
cmp
adc
push
adc
sbb
and
xchg
adc
xor
push
popf
mov
bound
call
dec
ljmp
jno
xor
mov
pushf
test
xor
lds
sub
mov
fcompl
test
fisttpl
lret
xor
stc
and
mov
mov
xlat
enter
pop
div
rcl
dec
les
push
mov
inc
ret
lods
jne
add
mov
mov
sub
dec
jp
push
pop
pop
mov
mov
leave
outsb
insb
scas
dec
int
inc
dec
dec
aad
ret
lods
outsl
ret
mov
les
xchg
mov
mov
jo
in
and
sub
xor
inc
mov
mov
push
bnd
sbb
cli
jne
stc
sub
xor
out
sub
pop
inc
mov
pusha
imul
xor
scas
pop
lahf
or
mov
pushf
js
xor
shlb
shll
inc
or
push
adc
test
xor
out
push
inc
cli
mov
int
mov
xchg
cli
jp
fcoml
dec
mov
mov
jmp
shlb
xchg
sub
sbb
movsb
cltd
xchg
out
and
fdivl
icebp
mov
ret
lods
pop
lret
xchg
sub
ret
rorb
dec
enter
mov
mov
push
adc
xchg
pushf
cmpb
push
jg
cmpsb
cmp
mov
out
repz
push
mov
fistps
imull
mov
inc
int3
je
je
ret
daa
and
jg
jns
push
mov
fisttps
cltd
enter
mov
dec
pop
jo
and
adc
sbb
popf
xor
push
icebp
sbb
sbb
sbb
cli
add
mov
call
cs
fbstp
retw
aam
mov
aam
nop
mov
push
lods
jnp
mov
push
push
xchg
iret
dec
push
or
in
pop
mov
outsl
xor
xchg
movsb
bound
dec
jmp
dec
leave
sub
cmp
mov
out
add
push
or
cmp
in
shlb
jnp
mov
push
dec
jb
push
push
mov
adc
pop
popf
andb
insb
mov
cmp
pop
mov
cmp
jo
xchg
out
test
stos
push
add
ljmp
dec
add
xor
adc
cltd
xor
jb
xor
mov
jno
scas
mov
ret
xor
fcmovnu
pop
lock
sbb
call
testl
push
dec
int
inc
int
inc
lret
movsb
cmp
inc
sub
pop
and
sbbl
in
mov
or
repnz
enter
mov
sti
out
addb
sub
stos
xchg
js
sub
dec
dec
iret
imul
inc
ficomps
call
mov
adc
sbb
adc
adc
adc
rolb
jle
push
cli
cmp
pop
mov
sbb
sbb
xor
mov
cmp
loope
push
in
mov
rol
test
xchg
lret
rcrb
push
adc
repz
push
mov
hlt
lods
inc
es
mov
pop
test
cltd
xchg
popa
mov
or
xor
xchg
add
fsubl
out
fidivs
xor
ret
repnz
mov
jg
pop
add
push
lds
loope,pt
inc
sub
or
push
repnz
add
lcall
jns
ds
push
mov
jecxz
inc
fsts
mov
mul
push
ret
pop
mov
loope
fcompl
xor
std
call
ficoms
mov
fnstenv
mov
testl
xlat
inc
ja
jns
xor
sub
push
call
and
shrl
lock
xchg
out
xchg
inc
stos
inc
jne
or
pusha
leave
cmp
ret
out
sbb
dec
loopne
cmp
addr16
adc
test
loop
fcoms
test
mulb
rcrl
jge
mov
ficompl
xchg
mov
mov
mov
adc
rclb
cmc
mov
cmp
dec
fcmove
pop
cld
and
jno
mov
ja
push
test
push
inc
lock
mov
mov
add
xor
push
movsl
cmp
jnp
loop
test
push
mov
enter
xor
jnp
sbb
add
mov
fwait
sti
imul
data16
and
dec
mov
jp
rol
add
fs
push
stc
ds
jne
stc
cmpsb
dec
xor
jl
adcb
popf
dec
cmpsb
sarb
xor
and
mov
jecxz
push
sbb
xchg
cmp
pop
test
sub
push
es
xor
fwait
call
or
mov
imul
and
aaa
dec
inc
inc
lcall
and
lea
and
inc
and
out
es
and
jnp
jb
sbb
mov
mov
cmpsl
jo
enter
leave
and
mov
mov
inc
mov
mov
push
pushf
jecxz
or
mov
cltd
decl
stos
jnp
test
dec
push
adc
mov
mov
lret
and
jge
pop
mov
xor
adc
movsl
mov
mov
sbb
daa
pop
or
or
in
and
mov
lahf
push
dec
jb
je
sbb
xchg
fcoml
lea
cmp
add
hlt
push
jmp
xor
into
cltd
sub
les
lea
push
sub
adc
mov
jo
testb
add
cmp
stos
cmpsb
pop
pop
ja
sbbl
lcall
inc
pop
jne
jge
popa
ficoml
jb
into
or
movsw
inc
sub
jl
loop
mov
lds
mov
fisttps
cltd
cmp
popf
lods
push
enter
mov
pop
mov
rcr
mov
mov
sub
ja
pop
movsb
loope
cmp
lock
xor
inc
outsb
sub
mov
cs
gs
mov
cmp
lea
lahf
minps
add
jns
jmp
dec
rclb
ja
dec
inc
xchg
jne
ljmp
adc
sub
cmp
xor
adc
jbe
aam
lahf
aaa
jge
es
fs
pushl
jbe
xchg
aas
jb
inc
and
sub
testl
mov
fidivrs
xchg
xor
lock
test
and
cmpb
xchg
imul
push
adc
inc
mov
cmp
stos
stos
ss
pop
cmp
loope
out
sahf
inc
lea
sub
pusha
pop
or
or
jl
rcr
fstp
pop
xchg
or
fistpl
icebp
inc
dec
mov
pushf
sbb
fmull
sbb
out
shrb
icebp
mov
xchg
hlt
xchg
jl
fsubrs
sahf
sbb
bts
mov
mov
mov
mov
jecxz
ret
mov
dec
in
pop
and
dec
out
test
roll
and
insl
fwait
out
or
cmpsb
nop
daa
sbb
push
lods
xorl
aas
lahf
lret
loopne
mov
push
stc
inc
inc
mov
xor
rclb
pop
icebp
into
mov
lods
cld
addr16
das
pop
shll
shll
scas
sbb
ds
mov
shll
dec
jecxz
lret
mov
push
jbe
dec
mov
mov
fstpt
mov
xor
mov
inc
fdivrl
jp
mov
cwtl
das
loope
sbbl
shll
mov
xlat
sbb
mov
in
ret
push
nop
iret
retw
sahf
pop
and
data16
cmp
push
or
fnstcw
cmp
std
pop
in
je
cmp
leave
mov
test
inc
push
or
add
repnz
ret
and
adc
lds
push
or
xchg
cli
mov
jb
rclb
pop
mov
mov
ficompl
or
popf
inc
cmpsl
scas
dec
push
lds
fiaddl
lea
repz
jp
xchg
gs
jne
stos
sub
leave
mov
push
cli
idivl
movsl
sub
fmul
xchg
push
cltd
scas
xor
movsl
cmpsl
cwtl
inc
int
addr16
sub
mov
inc
or
aam
leave
mov
in
cmpsl
and
add
movsbl
test
sahf
aam
jnp
or
and
cmpsl
cwtl
or
aad
pop
add
adc
test
arpl
fcmovu
jnp
test
hlt
pop
fdivr
pusha
cmpsb
push
orl
movhps
mov
imul
jnp
add
negl
push
push
clc
mov
push
int3
inc
movsb
push
negl
xchg
psrlq
dec
sub
ret
rdmsr
adc
test
adc
fldcw
mov
ret
pop
pop
cmp
inc
mov
sub
xchg
pop
mov
and
xchg
xor
mov
rcr
adc
sbb
adc
jne
mov
cmp
mov
or
push
mov
rcr
dec
adc
or
shlb
push
lods
add
icebp
xchg
sub
cmp
mov
xchg
add
daa
ljmp
cmc
or
pop
cwtl
inc
xlat
mov
enter
mov
or
mov
inc
hlt
push
nop
sbb
or
inc
jae
or
lret
push
lcall
add
in
leave
jmp
mov
dec
pop
inc
push
mov
fidivrl
pop
add
scas
js
push
in
cmp
and
into
roll
out
push
adc
mov
pop
stc
pop
and
cmpsl
das
jno
push
in
mov
movsl
xchg
xlat
aas
addr16
jo
movsl
cmp
xchg
mov
es
mov
push
mov
sbb
fwait
inc
mov
aam
inc
test
xor
xchg
xchg
cmp
cld
xorl
mov
aam
jp
data16
repz
lods
mov
pop
das
mov
add
xchg
popa
addr16
mov
mov
fimuls
shll
movsb
cmp
or
iret
repz
cmpsl
sub
and
gs
fiadds
leave
xor
mov
adc
lret
lahf
inc
mov
out
pop
adc
popl
xor
fidivrs
lahf
jecxz
xlat
jl
repz
mov
jg
add
pop
mov
sub
xchg
inc
iret
xchg
int3
dec
fidivrl
pop
clc
popa
adc
inc
in
jbe
and
mov
adcl
shll
ficomps
fs
mov
insb
testb
leave
ss
flds
sbb
int3
xchg
mov
mov
popa
fs
fucomi
outsl
stc
cmp
inc
out
sarb
xchg
pop
add
push
rorb
xchg
jbe
sbb
in
add
push
dec
adc
scas
xor
mov
adcb
fst
je
or
jge
inc
pop
push
std
cmpsl
xchg
orb
push
cld
xor
xchg
cmp
es
mov
or
imul
inc
or
push
addl
jo
call
cmp
test
test
cmp
imul
jne
popa
jnp
test
outsb
lods
xor
sub
cmp
imul
cmc
test
idivb
fiadds
in
and
mov
pop
add
in
fstl
push
enter
pop
and
xchg
inc
nop
lock
inc
mov
mov
jg
mov
mov
repz
inc
push
in
sti
pop
push
bswap
lcall
daa
stc
mov
mov
idiv
rclb
in
mov
xchg
cld
test
mov
andl
cwtl
stc
mov
stos
sub
bswap
lea
fdivrl
cmpsl
xor
pop
lods
sub
stos
mov
jle
xor
mov
test
mov
xor
mov
mov
movsb
xor
xchg
jno
sbb
test
or
push
lods
sub
sbb
mov
inc
movsl
xor
cld
xchg
lock
jmp
movsl
xor
xchg
push
xor
inc
inc
movsl
xor
test
mov
sub
inc
movsb
das
cmp
sub
push
mov
pop
test
cmp
pop
mov
mov
out
shrl
andl
aas
dec
pop
xor
cmpsl
mov
mov
and
clc
xchg
inc
push
lock
xchg
notb
inc
in
xor
cmc
jg
mov
rolb
enter
mov
call
fsubrs
clc
pop
and
dec
or
pusha
inc
mov
jg
movsb
jl
call
mov
lods
ja
in
xor
leave
mov
pop
shl
mov
lock
jbe
imul
out
push
stos
sub
pop
cld
cmp
dec
or
xchg
ja
dec
test
jl
fucomi
push
mov
mov
int
jb
pop
iret
std
outsb
mov
jecxz
jl
in
jmp
xor
sub
adc
dec
in
push
xchg
andb
mov
or
setns
pop
xlat
pusha
jns
test
mov
icebp
mov
adc
add
call
repnz
jo
xor
sbb
fadds
adc
mov
std
xchg
pop
int3
mov
mov
mov
jnp
lock
inc
bound
loop
rclb
int3
sub
mov
test
loope
adc
popf
in
sbb
stos
mov
mov
rolb
or
mov
push
fidivrs
pusha
repnz
call
fnstsw
imul
add
pop
dec
or
jo
or
xchg
or
fcmovne
adc
xchg
pop
fistpll
shr
imul
jnp
or
add
jge
stos
pop
rolb
repz
fsts
insl
ljmp
aad
orb
fidivrs
mov
jge
cld
pop
or
mov
cmpsb
push
in
xlat
push
in
test
jae
lcall
jl
mov
xlat
out
xchg
mov
jo
sti
popa
cmp
pop
mov
loope
icebp
pop
add
test
nop
cmp
repnz
xchg
add
or
xchg
inc
imul
insb
jp
inc
pop
jg
scas
dec
mov
xor
fildl
inc
push
daa
cs
xorb
cmpsl
lock
xchg
cs
sarb
or
out
lea
lea
push
cli
movsl
mov
out
dec
mov
testl
scas
pushf
cmp
fcomps
push
mov
cmc
fistl
pop
stc
fsubrp
adcl
insl
aaa
mov
mov
mov
xchg
hlt
push
push
mov
sarb
pop
ret
aad
or
push
fstpt
les
mov
cmpsb
test
or
cli
lahf
inc
cmpb
cmp
mov
mov
xchg
inc
jne
cs
call
and
mov
mov
mov
or
and
in
xchg
shrl
jns
xor
test
lock
sub
stos
and
inc
in
fildl
cmp
lahf
nop
pop
push
stc
mov
mov
roll
repnz
pop
cltd
add
sbbl
daa
jno
mov
ret
enter
push
sbb
nop
xor
sub
fs
cmp
ret
sub
jnp
dec
inc
push
clc
stos
mov
pop
mov
pop
xor
push
jno
or
fwait
pop
movb
mov
out
push
lods
in
imul
cmp
sbb
or
ja
loopne
push
outsl
and
xor
pop
clc
inc
cs
jns
adc
cmp
out
jnp
bound
mov
dec
push
cwtl
cmpsl
pushf
cmp
or
imul
push
ret
xchg
sub
cmp
les
adc
stos
sub
mov
setg
cmp
sahf
inc
cs
arpl
push
stc
dec
adc
enter
fiaddl
dec
jecxz
cmpb
movsl
sub
out
sbb
ret
cmc
pop
mov
mov
xchg
cmpsl
cmp
add
add
xor
rcll
ret
fdivs
imul
xchg
sub
rorl
das
into
mov
lods
ss
cmpsl
sub
mov
jne
pushf
les
sub
xor
mov
xorb
seto
aam
loope
add
push
scas
repnz
mov
insl
jmp
mov
fs
jge
jg
mov
pop
push
add
js
adc
dec
dec
pop
mov
mov
mov
mov
mov
gs
test
sbb
inc
push
jecxz
jb
dec
push
out
imul
and
pop
cltd
cmp
into
add
mov
pop
std
add
and
inc
lret
push
xchg
popf
adc
dec
ret
arpl
and
mov
shrl
aaa
pop
clc
sbb
enter
rdseed
shlb
add
dec
in
and
insb
repz
mov
cltd
cltd
cmp
je
lret
adc
dec
adc
inc
nop
cmp
xor
outsb
in
sub
inc
adc
xor
insb
jg
imul
jnp
pop
cli
mov
mov
mov
push
ljmp
mov
and
xchg
inc
xchg
pusha
xchg
inc
jne
sarb
jo
bound
adcb
inc
adc
pop
mov
mov
fstpt
fstpt
out
add
push
mov
arpl
jge
xchg
xchg
into
sub
dec
or
cmp
imul
icebp
jmp
loop
clc
cld
pop
mov
push
bound
leave
jmp
cli
scas
xor
pop
and
adc
dec
dec
push
cmp
movsl
sub
pop
ret
jmpw
repz
mov
lods
add
vmread
test
pop
sarl
ljmp
insb
jmp
ret
mov
cmp
push
adc
inc
mov
addr16
pusha
inc
or
dec
pop
stc
jae
push
add
insb
dec
or
pop
mov
and
dec
mov
mov
data16
xchg
cmp
or
adc
pop
jne
mov
imul
cmp
jnp
mov
jle
xchg
dec
or
scas
stos
sub
inc
repnz
sbb
cmpsb
daa
mov
aaa
cmpsb
or
mov
je
push
idivl
call
clc
or
pop
mov
mov
fcompl
or
pop
daa
scas
add
push
xchg
push
lahf
inc
in
lds
jg
test
outsl
jbe
out
mov
scas
jno
sub
inc
or
lret
inc
sbb
mov
xchg
cmpsl
mov
fdivrs
mov
pop
std
adc
lea
and
mov
and
ds
in
movsl
das
aad
mov
mov
dec
or
scas
mov
sti
outsb
loope
mov
inc
adc
scas
leave
pusha
loopne
cwtl
das
jno
les
popf
push
enter
orl
je
rclb
iret
dec
insb
negb
sahf
inc
int3
lea
rcll
in
insb
add
cmp
cmpsb
sbb
int
mov
es
push
xor
insl
or
add
daa
lcall
cmp
clc
jns
lret
mov
bound
stos
stos
jecxz
jae
mov
xchg
mov
test
fcompl
cs
xchg
mov
mov
stos
fs
fistpl
ret
or
and
xchg
data16
pop
ret
imul
mov
sub
daa
stos
cltd
inc
dec
adc
imul
dec
and
and
addb
jo
mov
mov
scas
sub
add
sbb
lods
and
int
mov
mov
out
pop
cld
jl
mov
sbb
dec
or
imul
cmc
ror
out
push
jmp
in
pop
mov
movsb
dec
mov
push
push
iret
jg
push
dec
or
xchg
out
pop
xchg
xor
les
call
and
je
sti
xor
leave
xlat
and
in
push
inc
or
ljmp
mov
in
jbe
cli
sub
fwait
inc
ljmp
dec
sbb
test
cwtl
pop
out
jno
int
cmp
xor
in
fsubrl
orb
or
jnp
filds
or
pop
call
push
add
mov
mov
inc
or
movsb
pop
push
adc
flds
inc
mov
mull
xor
mov
fstpt
pop
jp
mov
xchg
shll
lret
sbb
xchg
sbb
mov
dec
jnp
push
sarl
test
pop
cmp
fstps
dec
loopne
div
cmc
fs
loop
lods
cmpsb
pop
ret
mov
das
lods
push
sub
mov
inc
dec
push
stos
repz
ret
mov
mov
jnp
pushf
mov
xor
xor
adc
cmpsb
add
inc
sbb
cld
fs
dec
mov
rol
orl
sbb
sbbb
xchg
pop
rorb
rorl
testb
out
imulb
mov
cld
jl
icebp
push
in
outsl
push
test
cmp
or
fsubl
sub
out
dec
in
fwait
clc
ja
mov
mov
scas
out
mov
adc
das
aad
pop
mov
outsl
jmp
pusha
jb
mov
test
add
xor
and
bound
or
outsl
call
mov
test
pop
int
push
add
adc
adc
mov
mov
out
mov
clc
cltd
inc
lcall
out
cmpsb
cwtl
inc
sbb
das
scas
hlt
xchg
stos
jl
pop
ret
in
andl
sub
adcb
cmp
cltd
lcall
bnd
or
call
out
imul
fs
sti
xchg
ret
data16
and
lea
fisttps
loop
stos
cltd
leave
nop
pop
mov
mov
sub
sbb
aam
push
xchg
add
out
aad
sub
sahf
inc
sbb
lret
test
mov
cmpsb
negb
mov
dec
and
xchg
cmp
ss
add
sub
mov
jp
fistpll
outsl
xchg
cmp
iret
sahf
sti
arpl
lret
pop
pushl
imulb
in
xchg
jb
or
cwtl
addl
je
sbb
mov
movsl
movsb
xor
push
cmpsl
xor
lea
lret
sbb
mov
adc
jb
adcb
adc
lahf
inc
mov
cwtl
cmp
sub
push
dec
in
lahf
mov
mov
shl
push
xlat
sbb
pop
std
frstor
jp
xchg
adc
movsl
pop
sub
arpl
loopne
shll
fsts
sarb
out
fnsave
dec
in
sbb
add
xorl
arpl
sti
mov
and
or
fwait
xchg
addr16
sbb
xor
jns
sbb
sbb
push
mov
fnstsw
jg
enter
lcall
leave
xchg
jg
lahf
ds
imul
push
popa
inc
sub
push
add
scas
mov
cmpsb
jle
lea
gs
or
std
lahf
xor
shl
and
push
xchg
movsb
cmp
fsubrl
xor
je
lods
push
jmp
sbb
xchg
dec
lods
ds
inc
pop
pop
xor
jp
mov
int3
das
lea
cmp
jb
inc
test
lods
sub
mov
clc
pop
test
lahf
cwtl
test
xchg
mov
rolb
or
aad
push
dec
or
sbb
cmp
cld
stc
adcb
xor
jae
aad
mov
lea
fnstsw
cmpsb
das
xchg
sub
rcrl
scas
inc
and
movsb
sub
aad
in
hlt
pop
outsb
divb
jg
ret
les
and
loope
mov
add
pusha
sub
push
jae
xchg
movsl
pusha
xchg
aaa
sahf
mov
lods
xor
outsl
dec
cmpsb
sub
ss
sbb
mov
les
jo
pop
xchg
adc
int3
imul
or
fstpt
sub
dec
push
aad
add
pop
or
sub
mov
xchg
lock
sub
fsubrs
and
xor
cmpsl
push
nop
cmp
mov
xchg
push
das
ljmp
popa
mov
nop
es
lds
into
mov
ret
movsl
mov
xchg
out
cmc
shrl
add
push
ret
jnp
jp
push
cli
xchg
flds
flds
ljmp
pop
add
mov
sti
gs
stos
and
scas
or
sub
or
mov
dec
lock
sub
int3
mov
or
sahf
lret
repnz
adc
test
push
in
mov
mov
add
ficomps
int3
lcall
aam
cmp
jo
push
mov
mov
dec
aaa
jp
cmpb
inc
insb
ja
adc
sti
pop
jle
aaa
movsl
mov
pop
dec
stos
jne
cmp
pop
sti
mov
mov
popf
cmp
push
jne
aad
test
arpl
pop
dec
jle
and
movsl
sbb
int
push
imul
push
rorl
dec
jae
xor
xor
loope
push
lret
rcrl
sub
xor
sbb
lahf
xor
es
and
movsb
sub
sbb
test
loope
mov
jle
mov
ret
cmpsb
jg
dec
or
sbb
inc
push
pushl
jb
mov
mov
scas
inc
jae
out
test
xchg
mov
ja
ficoms
dec
das
jae
loope
push
mov
add
lcall
mov
inc
data16
and
lcall
fimull
insl
push
add
fbld
mov
mov
fwait
cmp
jmp
in
addr16
cmpsb
das
iret
imul
pop
push
push
add
inc
mov
je
pop
test
sti
xchg
mov
mov
stos
pop
dec
mov
je
push
push
std
insl
mov
and
adc
pushf
inc
jnp
in
outsl
stos
imul
xor
sti
push
and
cltd
addb
movsl
int
jns
mov
or
xlat
test
in
sbb
arpl
lret
jbe
xor
scas
and
sub
dec
mov
push
cmp
dec
stc
insb
add
xchg
ret
dec
mov
jle
nop
cmp
mov
xor
and
lret
xor
lcall
cmp
loope
xchg
cmp
or
sbb
cli
pop
push
fwait
adcb
push
push
lea
pop
inc
pop
stc
nop
test
mov
adcb
fsub
insl
or
xchg
cmp
iret
imul
add
sbb
rorl
xor
jp
or
iret
lea
push
mov
dec
or
xor
xor
mov
mov
aaa
psrld
cwtl
push
les
mov
mov
scas
adcb
adcb
lods
daa
cmc
mov
das
test
push
mov
mov
lahf
enter
cmp
pop
idivl
mov
cmp
mov
test
ficoml
mov
and
pop
add
pop
add
add
out
sub
dec
shld
jbe
mov
ss
and
pop
insb
jecxz
stc
jmp
adc
out
int3
jns
sti
add
icebp
pop
hlt
push
mov
cmpsb
and
inc
or
mov
cmpsl
ljmp
inc
icebp
inc
or
out
jb
dec
or
bswap
cmp
push
rorl
xor
xor
adcb
or
inc
aas
xchg
sub
sti
or
push
leave
aam
inc
rcrb
add
or
inc
fldenv
call
clc
mov
lods
in
cmp
ds
mov
cmpsl
scas
sub
ss
pop
in
jmp
test
aad
stos
add
cmp
sbb
jle
or
mov
mov
jns
adc
and
sahf
adc
rcrb
jbe
mov
sbb
sarb
cmp
jge
sub
adc
lcall
loop
std
pop
idiv
push
clc
loope
test
out
mov
ds
imul
push
add
and
adc
shrl
mov
or
cli
pop
mov
mov
test
insb
aad
adc
mov
dec
cltd
cmp
fnstsw
sbb
test
icebp
cltd
adcb
add
iret
pop
xchg
or
xor
adc
jno
xor
das
inc
jns
rcrl
mov
xchg
xchg
jmp
int
or
leave
mov
imul
xor
xchg
lds
arpl
xor
xchg
pop
lcall
mov
aad
adc
xorb
test
lahf
movsb
lods
pop
ffreep
ret
adc
jnp
inc
inc
push
adc
inc
cmp
dec
or
test
push
dec
cld
gs
lahf
mov
orl
add
dec
enter
fstpl
testl
push
stc
popa
or
jae
popa
pop
daa
stos
lock
cmp
in
mov
sbb
mov
mov
cmp
push
popf
cmp
jmp
adc
inc
dec
adc
and
aas
xchg
inc
icebp
pushl
sti
es
imull
cmp
enter
push
idivb
outsb
jmp
cli
aam
lds
out
pop
pushf
inc
fidivl
std
arpl
and
jbe
repz
push
imul
mov
movsl
cs
cmp
rep
jle
and
aaa
adc
inc
lahf
push
stc
gs
ss
push
jb
xchg
xor
in
mov
lock
scas
movsl
into
popl
xlat
fwait
xchg
mov
adc
push
dec
jg
cmp
mulb
insb
add
out
insl
sub
leave
js
cmp
jmp
adc
sbb
sub
leave
mov
cmpsb
dec
or
push
rolb
out
sub
jno
repnz
adc
xchg
inc
pmullw
aas
movsb
pushf
pop
sbb
jge
cs
out
cmp
out
imul
mov
aas
aaa
inc
or
xor
jno
dec
jne
dec
pop
pop
sub
inc
fmul
xor
bound
imulb
mov
cmp
mov
cmp
cmpsl
imul
jnp
or
dec
sub
sahf
stc
sbb
repnz
inc
or
mov
cmc
pop
cmp
insb
push
addb
shll
stos
mov
or
pop
xorl
in
stos
out
sbb
cmpsl
icebp
test
mov
stos
or
mov
cwtl
pop
dec
adc
repz
test
fs
add
hlt
xor
lret
in
pop
mov
jae
push
pcmpeqb
testb
inc
push
orl
and
lds
lcall
repz
jns
jmp
sbb
bound
mov
ror
lret
jnp
sub
test
xor
mov
mov
mov
outsb
les
push
ja
fadd
mov
xchg
pop
ret
iret
jae
dec
out
outsb
jl
mov
insl
cmpsb
mov
add
adc
adc
imul
stos
jae
jecxz
mov
out
gs
pusha
aas
daa
mov
jp
rsqrtps
push
fisttpl
lds
xor
mov
push
pop
popa
ds
orl
sbb
fwait
pushf
aad
cmp
lret
lds
dec
adcb
out
out
xor
jmp
cli
xchg
adc
outsl
ds
movsl
cmp
pop
testl
jl
jae
xchg
jo
ret
cs
sub
add
cltd
cmp
xchg
cmp
aas
sbb
rorl
jbe
sbb
or
jp
pop
not
test
add
pop
mov
scas
sub
lcall
push
ds
xchg
xchg
lds
repz
sub
icebp
xchg
cmp
push
fs
repz
add
pcmpeqd
data16
stc
ret
shll
aas
sub
in
or
and
dec
dec
adc
jbe
mov
outsb
imul
push
lods
adc
sub
roll
popf
dec
mull
mov
cmp
xorb
add
jno
sbb
mov
test
mull
fidivl
and
rolb
xor
into
xchg
sub
jae
insl
jmp
ja
push
add
data16
jno
jp
aam
nopl
lods
pop
lods
xor
mov
filds
and
xor
mov
fbld
loop
xchg
push
mov
ret
xchg
sub
jb
enter
fldenv
scas
add
xchg
or
sbb
adc
daa
mov
dec
xor
in
in
outsb
xchg
jmp
mov
iret
mov
add
into
jge
lret
sarl
das
int
out
jb
and
mov
in
imul
and
lds
mov
jnp
or
in
loopne
push
into
inc
repnz
jnp
in
jne
imul
int
test
pop
out
aas
std
pusha
dec
imul
pop
popf
stos
ss
lea
pop
lret
pop
call
std
push
stc
sti
cld
pop
add
rorl
orl
mov
int3
mov
scas
fisttpll
sub
movsb
mov
jg
mov
pop
inc
fwait
jo
pop
xchg
xchg
in
jb
jmp
mov
imulb
ds
call
icebp
orb
in
sub
sub
pop
lea
int
adc
ret
test
ljmp
cmp
popa
repz
mov
outsl
call
jne
cmp
dec
fadd
pop
or
iret
scas
pop
jecxz
std
mov
adc
adc
mov
xchg
inc
fwait
inc
leave
enter
sbb
dec
int
das
mov
and
insl
ffreep
orl
jp
inc
into
orb
and
pushf
fstpt
cmp
arpl
push
sub
cmp
push
pop
cwtl
repnz
roll
pop
imul
add
aad
cmpl
and
gs
out
popa
rol
mov
clc
adc
addb
jmp
mov
adc
stos
fiaddl
cs
sub
mov
negl
movsb
fistpll
js
sbb
cmp
mull
and
imul
ds
test
insb
lea
mov
mov
push
xor
idiv
lea
jmp
clc
jg
fwait
add
sahf
fcmovb
nop
inc
add
stc
pop
mov
cmpsl
out
fsubrs
stos
test
mov
xor
jmp
push
in
repnz
les
adc
xchg
push
fldcw
clc
push
psrlw
push
std
gs
icebp
sbb
jno
xlat
jns
stos
movsb
dec
std
pop
cs
sbb
dec
ud1
push
std
ljmp
fildl
addr16
jae
stos
mov
sbb
pop
stc
ds
sbb
push
pop
inc
fmull
push
sbb
jae
cmovnp
sahf
pop
jmp
lret
jp
imul
pop
pop
orb
aam
out
mov
movsl
mov
and
jae
mov
movsl
xchg
sub
add
mov
push
in
hlt
mov
daa
test
loopne
sti
lods
idivb
push
mov
into
mov
daa
mov
push
test
test
ja
xchg
popf
lods
jecxz
mov
movsl
inc
mov
gs
clc
neg
addl
push
inc
or
mov
lcall
arpl
dec
imul
jbe
lahf
jl
dec
out
das
mov
mov
movsb
sbbb
and
fbstp
push
leave
dec
add
cmp
xchg
jns
nop
pop
or
sti
bound
pop
sbb
int3
sbb
jecxz
inc
es
lds
scas
inc
cmp
add
dec
sub
sahf
call
jge
fsubrs
fdivs
push
popf
xor
mov
mov
clc
divb
out
dec
or
adc
dec
pop
xchg
cmpsl
rolb
and
fdivrl
jl
inc
jbe
test
outsl
push
aad
out
pop
call
repnz
push
jp
insb
sbb
cmp
ds
daa
outsb
out
add
mov
or
aad
fidivl
adc
jnp
sub
xchg
inc
xlat
sbbl
inc
adc
mov
repnz
in
outsb
in
jp
gs
inc
bound
inc
or
mov
rcrb
xor
pop
mov
lea
mov
roll
xchg
mov
xchg
je
adcb
sbb
ljmp
ret
iret
xchg
dec
paddb
fwait
lods
cs
clc
adcl
and
imul
popf
fldcw
or
in
andl
addr16
dec
aad
fisttpl
inc
jae
xchg
aaa
clc
bound
call
mov
mov
daa
mov
xchg
lret
mov
pusha
insb
ljmp
dec
pop
mov
cmpsl
ret
xchg
sub
test
aaa
dec
or
add
mov
or
sbb
pop
lods
dec
loopne
fcmovu
jae
add
mov
cmp
orb
xchg
lea
mov
mov
mov
push
or
and
dec
xor
cmp
pop
and
call
std
outsl
repnz
jno
pop
add
data16
pop
mov
cmp
cs
jge
arpl
jbe
call
sarb
inc
push
cld
xor
push
jmp
push
xor
pop
data16
mov
mov
ret
adc
dec
push
les
sbb
stos
sub
xor
icebp
daa
insl
cmc
loopne
out
jae
hlt
add
popf
mov
hlt
dec
iret
fldl
pop
lret
mov
movsl
mov
ja
sub
sbb
int3
call
adc
mov
push
mov
popf
xor
adc
outsb
inc
cmp
mov
mov
stos
call
or
leave
cmp
out
xchg
lret
outsb
add
or
lea
sub
pop
push
stos
inc
xchg
and
test
pusha
fcmovbe
stos
inc
add
out
cs
pusha
push
dec
add
jle
mov
add
fsubs
pop
divb
inc
fldenv
shll
ljmp
inc
cmp
popf
xor
nop
xlat
outsb
ret
push
in
jecxz
mov
adc
xchg
mov
enter
lods
in
dec
out
pop
xor
add
pop
push
ljmp
jno
fst
test
xor
pop
pop
push
lods
inc
test
jl
movsl
lret
xlat
int3
add
sub
and
jl
inc
xlat
mov
ret
pop
cmc
hlt
out
inc
fisubl
push
jge
dec
inc
popa
clc
jb
fwait
xor
mov
popf
xor
adc
outsl
inc
cmp
lea
mov
stos
out
testl
arpl
call
mov
outsl
push
push
call
xor
outsl
push
pop
push
lods
inc
xchg
and
cmpsl
lret
into
stos
inc
add
call
pusha
push
dec
push
popf
jg
out
cmpsl
mov
add
fldenv
sbb
dec
inc
pusha
divl
inc
fstps
mov
pushf
xor
adc
inc
cmp
push
outsb
gs
xor
fsubrs
mov
testb
xor
clc
xchg
xchg
leave
mov
fsts
or
outsb
add
mov
and
shrl
es
and
lods
inc
cmpb
stos
mov
add
cld
imul
subb
and
jp
inc
fsubs
ret
repz
inc
ficompl
adc
popa
clc
jo
pushf
xor
mov
popf
xor
psubusw
aaa
mov
mov
adc
mov
or
cmp
adc
jmp
mov
jo
push
call
xor
outsl
push
pop
push
lods
inc
test
and
cmpsb
lret
fmul
stos
inc
stc
jmp
popa
push
dec
pop
sahf
jge
call
mov
div
inc
fisubl
sbb
clc
jae
inc
ficompl
popa
clc
out
out
xor
adc
push
insb
arpl
jo
mov
push
call
or
jb
xor
nop
popl
pop
scas
loope
push
call
xor
outsl
push
pop
push
push
jmp
jl
and
cmpsl
jb
fxch
stos
inc
add
nop
daa
sub
dec
scas
inc
xorb
test
int3
arpl
leave
add
andl
inc
or
lahf
cltd
es
icebp
jmp
fistpl
jg
inc
cmp
popf
xor
popl
push
jmp
sahf
xor
aas
xor
clc
xchg
mov
jno
mov
lods
in
clc
or
cs
lods
pop
pop
push
ljmp
jno
push
jmp
xor
lods
inc
cmpl
stos
movsb
lret
lret
lods
inc
std
imul
subb
lret
bound
pop
sahf
jnp
jmp
mov
imul
inc
ficompl
sbb
mov
jno
inc
fistpl
mov
popf
xor
jno
push
push
lahf
ss
mov
jo
mov
push
out
testl
bound
mov
sbb
push
add
into
xor
outsl
push
pop
push
push
in
test
and
cmpsb
jae
fmul
stos
inc
stc
xchg
sub
and
popa
push
dec
scas
inc
jle
call
fs
push
popf
clc
bnd
and
and
mov
popf
xchg
daa
mov
out
jmp
adcb
cmp
insb
fs
xor
mov
loopne
adc
xor
nop
nop
xchg
jb
mov
scas
loop
stc
nop
or
int
sub
scas
pop
push
push
jmp
jle
int3
scas
test
or
rclb
add
nop
daa
and
push
dec
scas
inc
xorl
arpl
leave
lods
inc
sti
cmc
ljmp
dec
or
mov
ret
or
sbb
ds
stc
outsl
push
adcb
mov
sahf
xor
aas
ss
aaa
xchg
mov
jno
mov
push
in
clc
push
pop
fnsave
push
lods
pusha
pop
sti
xchg
mov
sbb
add
cmp
xor
push
in
cmpl
stos
movsb
je
lret
lods
inc
std
notl
bound
mov
jl
jmp
gs
lds
sahf
div
in
andl
es
je
inc
fistpl
mov
inc
fstpl
jno
sti
push
lahf
ss
mov
push
out
mov
jae
xor
xchg
mov
scas
loopne
cli
xchg
or
aaa
into
xor
sbb
test
lods
cmpsb
jae
fmul
push
jmp
stc
xchg
sub
and
push
dec
scas
inc
jle
xchg
sub
scas
inc
stc
bnd
and
into
gs
inc
or
mov
rorl
bnd
sub
inc
cmp
insb
inc
ficoms
mov
lahf
adc
test
cmp
pop
mov
jb
mov
push
jecxz
stc
nop
or
pop
scas
pop
pop
std
xchg
mov
int3
scas
stos
sbb
add
cmp
das
and
push
push
push
out
xorl
or
leave
lods
inc
sti
cmc
xchg
sub
sbb
mov
jp
ljmp
ret
or
and
daa
mov
jb
inc
fcompl
mov
inc
ficoms
or
gs
push
mov
push
in
mov
je
das
mov
xchg
mov
sbb
pop
add
iret
xor
sbb
cmpl
stos
movsb
je
int3
push
in
std
notl
or
mov
jl
xchg
sub
mov
div
in
andl
iret
dec
inc
or
sahf
xchg
sub
lock
fstpl
adc
roll
sti
push
dec
fists
mov
std
out
mov
sbb
xor
cmp
scas
rcrl
cli
xchg
or
loopne
xor
push
xchg
mov
lods
test
push
jmp
sti
cmp
sub
jae
push
dec
pop
out
jle
xchg
sub
scas
inc
stc
repnz
sub
into
gs
inc
mov
ja
in
andl
or
sbb
ds
outsl
inc
ficoms
mov
dec
fists
or
gs
mov
sbb
fldenv
jbe
sub
push
pop
pop
std
xchg
mov
jne
stos
sbb
add
cmp
das
sbb
cmpl
or
lret
sti
cmc
xchg
sub
sbb
mov
jp
xchg
sub
ret
mov
cmc
out
in
test
pop
shlb
inc
or
pushf
xchg
sub
les
inc
ficoms
adc
ret
gs
push
mov
in
mov
sbb
popa
pop
movsb
cmp
ret
aad
xchg
pop
add
js
sub
mov
push
call
stos
cmpsl
sbb
in
std
stc
cmp
sub
je
push
dec
pop
lock
xchg
sub
mov
div
xchg
sub
sbb
dec
inc
mov
jne
in
test
mov
out
xchg
adc
roll
movsb
insl
fs
fists
mov
std
out
dec
loopne
or
arpl
mov
pop
loope
mov
ja
sub
pop
pop
push
xchg
mov
jbe
test
std
xchg
add
cmp
sub
dec
pop
out
jg
cmp
cmpsl
mov
push
out
stc
repz
sub
inc
mov
js
xchg
sub
shll
push
adc
or
jo
out
xchg
mov
dec
fists
sub
aas
xor
dec
loope
xchg
jecxz
mov
push
aaa
sub
movsl
cmp
sbb
mov
ret
pop
fst
cld
xchg
add
daa
sbb
test
iret
stos
movsl
sbb
in
cld
idivl
shrb
push
jne
push
dec
pop
lock
xchg
sub
les
sub
sbb
addr16
inc
mov
jae
out
test
mov
out
xchg
adc
ret
or
loopne
mov
ret
addr16
out
dec
loopne
or
popa
pop
movsb
cmp
scas
ret
aad
cmp
add
js
sub
pop
pop
push
call
lods
test
mov
into
std
xchg
add
cmp
sub
sbb
jle
cmp
movsl
lahf
ja
rol
push
out
div
xchg
sub
sbb
dec
inc
mov
ja
xchg
sub
mov
out
xchg
ds
xchg
mov
dec
loopne
or
ret
cmp
pop
dec
loope
xchg
jmp
fldenv
push
xor
push
movsl
cmp
jg
jbe
test
std
xchg
add
loope
das
sbb
cmpb
test
lret
sti
cmc
cmp
es
pop
lock
xchg
sub
ret
mov
cmc
in
xchg
sub
pop
shrl
aas
mov
jno
out
xchg
or
xchg
adc
inc
cmp
loope
mov
ret
push
loopne
pop
xchg
cmp
addr16
pop
pop
movsl
cmp
addb
mov
jns
rcrl
add
stos
cmpsb
push
mov
int3
std
xchg
clc
cmp
sub
sbb
push
dec
pop
icebp
jnp
cmp
mov
les
cmc
out
xchg
sub
dec
inc
mov
je
xchg
sub
xchg
shrb
mov
lock
adc
imul
lock
mov
movsl
call
or
jmp
dec
loop
addl
loopne
movsb
cmp
add
pop
pop
push
cmpsb
cmp
scas
test
pop
fcmove
xchg
add
loop
and
push
dec
add
cmpsb
mov
pop
out
clc
repz
and
ja
dec
inc
pop
icebp
jbe
xchg
sub
xchg
js
leave
shlb
sbb
shrb
cmp
lock
mov
lock
ss
movsl
addr16
dec
loop
mov
mov
fimull
or
push
cmp
mov
les
shll
xor
add
stos
movsb
push
mov
lret
xchg
std
idivb
daa
pop
sbb
icebp
jns
cmp
mov
ret
pop
lock
in
xchg
sub
dec
inc
mov
jb
xchg
sub
lds
xchg
adc
push
cmp
movsl
push
icebp
mov
mov
cmpsb
out
dec
loope
or
lds
das
push
jecxz
addl
cmp
add
pop
pop
push
cmpsl
xchg
ja
cmpsl
lds
xchg
cli
jecxz
sub
sbb
cwtl
jle
cmp
movsb
lahf
pop
mov
lds
div
cmp
cmovp
bnd
xchg
sub
mov
xchg
sbb
shrl
cmp
mov
mov
icebp
mov
or
lds
gs
dec
jecxz
xchg
add
fmuls
or
mov
xor
push
cmpsl
mov
push
scas
test
movsl
cmp
std
jecxz
das
and
pop
push
push
add
test
lret
cld
hlt
cmp
mov
inc
pop
bnd
cmp
mov
ret
repz
cs
ds
jo
xchg
cs
dec
in
in
mov
paddq
aaa
push
mov
cmpsl
out
dec
loop
or
cmp
dec
in
addb
movsl
cmp
add
pop
pop
push
test
test
js
cmpsb
pop
fmul
call
sub
push
mov
dec
add
mov
les
cmc
lock
pop
jns
dec
inc
pop
repz
xchg
cs
xchg
jp
mov
cwtl
das
sbb
aam
inc
cmp
mov
mov
cmpsl
call
or
cmp
adc
lea
imul
xlat
dec
jecxz
add
add
test
xchg
scas
test
pop
fcmove
cmpsb
cmp
cs
pop
push
dec
add
test
and
cli
repz
sbb
mov
inc
pop
repz
cmp
adc
rcrb
ljmp
inc
cmp
cwtl
das
cwtl
nop
aam
ret
dec
jmp
repnz
adc
xchg
mov
lds
fimull
push
xor
aaa
sub
add
dec
in
jg
pop
mov
insb
add
shlb
and
les
push
test
cmpl
stos
movsb
pop
int3
add
sub
pop
mov
dec
add
mov
ret
pop
repnz
out
ds
push
jp
dec
inc
pop
repz
cwtl
das
fwait
xchg
jp
les
das
pop
adc
insb
inc
cmp
mov
mov
test
fdivp
mov
or
cmp
adc
mov
insb
add
aad
jecxz
add
add
test
pop
lods
cmpsl
pop
fxch
cmpsb
cmp
sub
lds
add
cmpsb
lahf
and
clc
icebp
aas
and
and
je
ds
xchg
jnp
mov
cltd
xor
adc
inc
cmp
xor
mov
dec
jmp
or
insl
cmp
pop
hlt
mov
mov
test
or
enter
add
out
jge
and
shlb
and
and
pop
push
dec
test
jp
mov
add
daa
sbb
add
mov
rcrl
aas
sbb
ds
hlt
outsl
addr16
xor
mov
cltd
xor
ss
push
mov
insb
mov
fdiv
mov
pop
xor
cmp
adc
mov
insl
add
rorl
add
mov
xor
imul
push
test
and
int3
cmpsl
ds
clc
in
sub
pop
push
dec
add
movsl
popf
and
imul
aas
and
and
jb
aas
pushf
xchg
jnp
lds
cltd
xor
adc
cmp
xor
mov
dec
call
or
outsb
cmp
adc
popl
stos
loope
dec
in
add
leave
xor
imul
push
push
out
jnp
and
into
cmpsl
ds
mov
sub
dec
stos
inc
xorb
cmpsl
mov
add
sbb
mov
inc
add
js
ds
cltd
and
lock
xlat
sbb
jnp
inc
cmp
cltd
xor
mov
lcall
xor
hlt
mov
mov
test
or
adc
mov
insl
add
rorb
add
mov
das
and
test
and
lret
test
std
mul
jl
pop
pop
push
dec
add
movsb
fwait
and
imul
aas
push
sbb
mov
jo
inc
xlat
fwait
xchg
jnp
ret
mov
cltd
xor
adc
aaa
mov
imul
insb
mov
mov
or
outsl
cmp
adc
mov
adc
loopne
dec
in
add
lret
imul
push
push
call
stos
cmpsb
outsl
push
fmul
cmpsl
ds
stc
lea
and
pop
push
dec
stos
inc
jle
in
movsl
lahf
leave
pusha
rol
add
and
and
jbe
aas
pushf
xchg
and
out
jmp
jl
inc
cmp
insb
arpl
adc
mov
dec
call
or
outsb
cmp
mov
mov
mov
stos
loope
cmc
mov
add
leave
xor
adc
xchg
enter
add
add
mov
sub
dec
stos
inc
xorb
test
enter
test
jge
sbb
add
js
out
mov
ret
add
hlt
jmp
xlat
sbb
and
outsb
push
jl
sarl
xor
mov
xor
mov
push
in
hlt
mov
adc
mov
adc
in
add
xor
add
push
jmp
test
lret
cld
testl
inc
jl
in
mov
les
lcall
and
je
inc
xlat
lcall
cmc
in
out
fstps
push
jge
inc
cmp
push
fwait
xor
mov
push
out
pushf
xor
or
outsl
cmp
mov
lea
scas
adc
testb
sub
pop
push
push
call
add
sti
imul
xchg
add
inc
sahf
xlat
mov
lods
scas
adc
jg
add
adc
pop
fs
xchg
jno
inc
xor
xchg
dec
fs
jmp
jg
frstor
stos
sub
xor
mov
mov
mov
test
sbb
mov
and
mov
dec
jmp
and
add
ljmp
test
iret
hlt
mov
dec
jne
cmp
cmp
filds
or
inc
pop
push
and
push
mov
clc
mov
addb
faddp
mov
mov
fnstsw
push
sbb
out
outsl
xchg
in
testl
sub
mov
lret
ds
xchg
xchg
leave
mov
cwtl
cmc
xchg
and
jecxz
push
dec
sbb
cli
int3
pop
pop
out
shrb
jb
lret
jns
pop
int3
stos
loope
fisttpll
nop
add
jno
cmpsb
dec
scas
xchg
jp
mov
out
dec
pop
mov
pop
mov
in
push
push
fists
js
in
jmp
dec
mov
repnz
iret
fists
xor
test
stos
dec
je
xchg
sarl
in
mov
mov
inc
xchg
in
add
inc
stc
push
clc
repnz
mov
aaa
xchg
repz
aad
in
sub
and
sbb
or
push
cmc
aad
cld
mov
stos
inc
push
mov
add
outsl
jl
push
add
aas
sub
xchg
inc
repz
lods
pushl
inc
pop
sub
pop
jp
mov
gs
test
test
xchg
xor
rcll
outsb
sub
inc
adc
inc
or
push
stos
sbb
add
cwtl
dec
cmpsb
out
cmpsb
jno
sbb
mov
outsl
mov
push
imul
add
and
add
add
add
add
add
adc
add
add
add
add
add
or
add
add
and
loopne
add
add
add
add
sub
inc
xchg
leave
xchg
leave
js
sub
cs
cmpsl
sbb
aas
xor
inc
int
mov
xchg
inc
jmp
lahf
jmp
testb
lret
sbb
scas
xor
fidivs
jne
sub
sub
jnp
stc
cli
test
add
in
push
push
in
aad
inc
and
push
and
add
push
inc
inc
fidivrs
push
mov
cs
xchg
loope
push
inc
sub
loop
push
pusha
push
ja
mov
adc
push
mov
out
ds
in
mov
jbe
mov
push
es
push
add
dec
cmp
pop
pop
push
sub
adc
jle
inc
sbb
mov
mov
sbb
mov
sbb
lahf
das
xor
fdivs
fsub
insl
and
mov
mov
pop
inc
mov
sub
dec
jmp
rol
shlb
jmp
sbb
in
in
movsb
hlt
test
into
hlt
jmp
or
les
xor
shlb
scas
pushf
outsl
xor
out
xor
jae
and
add
sub
mov
lret
jecxz
ljmp
fisubrs
xor
add
imul
jo
mov
shll
stc
push
in
sbb
pop
stc
pop
or
inc
int3
aas
or
xchg
pusha
adc
arpl
sbb
mov
inc
fcomps
js
pop
or
ljmp
jnp
fldt
pop
dec
nop
adc
aad
lret
pop
xchg
pop
mov
scas
dec
mov
test
loop
push
test
enter
cmpsl
ret
sub
loope
mov
sub
sub
orl
shll
int3
ret
or
cmp
or
jge
dec
cmp
dec
dec
ret
les
insl
rorl
cmpsb
add
cmpl
dec
cmp
dec
lds
pop
mov
mov
inc
dec
sahf
pushf
dec
dec
shrl
cld
pop
in
cmp
mov
loop
stos
stos
int
cltd
inc
rorb
lcall
lret
xor
mov
je
stos
je
xor
pop
pop
test
mov
dec
ss
test
rcl
pop
movsb
iret
dec
mov
lcall
in
xchg
aas
push
xchg
adc
mov
adc
fistpl
sbb
jo
popa
dec
dec
popa
addb
add
std
add
cltd
cld
stos
xchg
fildll
lods
fwait
rcrb
stc
dec
jmp
cmp
mov
dec
mov
addr16
xchg
fcomp
add
mov
pop
stos
xchg
aas
inc
sbb
mov
adc
push
jge,pn
ds
mov
sub
sub
ret
cmpsb
cmpsl
sarl
pop
push
shll
fidivrl
sbb
ror
xchg
adc
xlat
out
mov
jne
mov
rcl
jae
dec
push
inc
popf
mov
fldenv
push
xor
push
pop
xor
call
mov
pop
pop
pop
jp
movsl
cmpsb
mov
or
mov
lret
jo
or
out
arpl
and
nop
sub
jg
and
pushf
lahf
mov
scas
arpl
fisubrl
fsubl
stc
add
xor
mov
add
pop
fistpl
xor
adc
inc
aam
jae
xor
int
in
in
call
adc
mov
out
dec
movhps
cmovp
mov
call
fnstenv
push
sbb
decb
xchg
dec
dec
fnsave
js
xor
dec
dec
xchg
inc
ljmp
adc
fisttpll
xchg
arpl
jo
xchg
push
push
fstl
ficoml
push
push
xchg
daa
shrb
push
push
fstl
insb
call
pop
scas
mov
pop
adc
dec
xchg
outsb
cmp
cmp
adc
cmp
sti
mov
ds
xor
xchg
int3
mov
xor
pop
pop
loop
adc
sbb
adc
rol
std
jg
xchg
cwtl
ror
rolb
lcall
jno
sub
call
hlt
add
dec
fs
xor
fs
and
jne
xor
fmull
mov
add
cmc
ret
loopne
inc
data16
jbe
cmp
andl
lds
jg
dec
pop
dec
mov
addr16
xchg
dec
push
xchg
out
xchg
mov
jle
rolb
push
pop
xchg
fisttps
adcb
or
push
jl
dec
cmp
rolb
adc
add
addb
icebp
std
js
xchg
xchg
pop
sbb
pushf
js
pop
sub
aad
loop
mov
mov
adc
enter
mov
sbb
stos
ret
subl
push
out
mov
lea
add
add
cli
mov
test
flds
cmpsb
mov
fists
sbb
test
adc
mov
inc
sub
and
mov
and
enter
push
inc
adc
ret
mov
fwait
add
pop
idivl
adc
pushf
mov
adc
aaa
sbb
loop
in
jns
lods
xchg
fwait
nop
xchg
cmpsl
sahf
sbb
jmp
pop
and
pop
mov
and
inc
mov
pop
and
xor
mov
lds
push
lea
sahf
push
and
adc
rclb
cmp
xor
sbb
test
mov
cmp
pop
fisttpll
std
cwtl
xchg
es
cmpsb
xchg
fwait
mov
daa
int3
jb
mov
fmuls
aad
mov
rcrb
xor
loopne
rol
pusha
or
xor
xor
stc
divl
in
data16
stc
xchg
or
xor
add
xchg
inc
movsb
pusha
xchg
xor
jg
xchg
sub
outsl
cltd
mov
enter
in
mov
jge
sbb
loopne
in
xchg
dec
ss
sbbb
xor
loopne
cltd
cmp
mov
xchg
fnsave
mov
mov
cltd
or
cs
cmp
nop
dec
cmp
pop
cmp
xchg
dec
cmp
sbb
dec
xchg
xchg
dec
cmp
sbb
dec
xchg
xchg
dec
cmp
out
dec
xchg
xchg
jg
out
add
adc
int
jne
clc
leave
lods
pop
stos
sbb
cmpsl
lret
aad
out
out
cmpsl
call
shrl
xor
fisttps
