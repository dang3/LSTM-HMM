sub
js
pusha
das
push
add
dec
insb
lea
cmp
xchg
or
push
dec
addl
jl
sbb
jmp
fwait
mov
leave
icebp
mov
cmp
cs
dec
lock
shll
jle
cmp
scas
xor
stc
scas
push
or
cmp
push
sti
outsb
mov
orl
mov
mov
jb
jmp
add
loop
pop
dec
arpl
pop
cmp
push
xchg
xor
lock
mov
mov
inc
mov
scas
roll
mov
adc
sub
hlt
mov
jno
jmp
sub
adc
xchg
ficoml
xchg
bound
add
jno
aas
adc
pop
sub
out
jbe
sub
xchg
dec
hlt
push
jmp
scas
or
jmp
test
jbe
je
adc
jb
sub
mov
and
dec
aaa
mov
ljmp
push
xchg
xchg
les
add
mov
jae
mov
cltd
test
int3
scas
roll
dec
leave
xchg
in
jae
pushf
loop
adc
push
adc
push
and
xchg
add
mov
jno
aad
xchg
inc
jg
negb
dec
jno
movl
dec
push
cwtl
ljmp
xchg
scas
and
inc
and
and
xor
addr16
not
inc
jns
push
cwtl
sub
jns
xor
cmp
outsb
xchg
movsb
sub
xor
call
lahf
and
ljmp
test
outsl
sub
push
jg
ljmp
rcr
dec
out
lea
daa
add
inc
adc
lret
mov
sahf
mov
push
call
inc
adc
lret
xchg
push
and
scas
push
add
adc
lret
scas
adc
jns
adc
aaa
push
inc
fwait
lods
xchg
movsb
xchg
test
dec
test
push
adc
lods
into
sub
test
lds
sub
ljmp
push
std
movsl
loopne
lock
mov
sub
daa
ja
xor
mov
stos
mov
add
dec
mov
push
sub
into
cmc
or
mov
or
sbb
movsb
orl
add
mov
mov
sub
mov
sbb
dec
pop
lret
jno
jmp
dec
das
dec
jo
outsl
lea
scas
inc
roll
and
sub
fdivl
test
jae
xchg
mov
fs
mov
lcall
pop
inc
jns
adc
mov
mov
lahf
pop
stos
mov
outsl
push
xchg
and
xchg
xchg
dec
add
adc
xlat
mov
stc
call
les
arpl
sub
mov
or
pop
movsl
or
pusha
stc
js
ja
bound
xchg
push
adc
mov
mov
inc
mov
orb
stos
push
nop
push
mov
mov
mov
lds
adc
out
insb
cmpsl
divl
cwtl
inc
scas
push
xchg
and
adc
dec
xchg
and
aas
je
outsb
stos
adc
call
out
adc
sub
jbe
outsb
lods
push
jmp
addb
xchg
out
xchg
cli
sub
xor
and
adc
dec
outsl
pop
lea
jbe
addr16
test
pop
sahf
jle
mov
cmpsl
bound
divb
push
sub
dec
adc
js
push
push
push
sti
sub
jbe
xlat
xor
and
adc
imul
push
mov
adc
outsb
stos
ror
or
adc
outsb
dec
adc
js
push
push
lret
lods
aad
xchg
push
xchg
stos
sbb
movsb
sub
xor
hlt
in
sub
hlt
insb
imul
scas
and
mov
call
or
dec
call
push
adc
ds
xor
outsl
adc
pop
add
push
lret
xchg
call
dec
sub
aad
push
jbe
stos
add
into
xor
jno
sub
xchg
jbe
adc
cmpsb
imul
pop
xor
sub
cmpsb
sub
dec
test
inc
push
lock
addr16
repnz
push
pop
xchg
in
push
xchg
adc
cmpsl
adc
outsl
adc
dec
mov
or
sub
adc
jle
jbe
pop
imul
mov
dec
ss
jno
imul
pop
push
cmpsb
stos
ss
mov
ss
mov
add
test
scas
cmpsl
fwait
inc
outsb
sbb
pop
lds
ret
and
inc
pop
push
inc
dec
and
pushf
sub
sub
jl
push
jge
xor
inc
out
add
outsb
sbb
cmp
push
dec
sub
xchg
mov
test
arpl
fimull
loopne
int3
cmp
push
push
xchg
mov
dec
sub
xchg
aam
xchg
stos
adc
adc
xchg
dec
dec
call
push
adc
shrl
push
andl
jmp
outsb
mov
and
push
dec
jno
jnp
xor
dec
lcall
pusha
data16
xchg
outsl
adc
jno
adc
cltd
mov
lods
lods
imul
and
inc
sbb
mov
mov
into
jl
ss
mov
dec
or
je
clc
jo
jmp
shlb
adc
mov
aad
push
jbe
add
jae
jge
sbb
push
mov
cmpsl
je
cmp
insb
and
and
lret
mov
jo
xchg
movsb
mov
jno
sub
pop
je
sub
and
sbb
insl
push
sub
jb
sub
or
aaa
hlt
xor
mov
fwait
xchg
dec
push
adc
std
or
ret
sahf
jp
mov
mov
sub
xchg
insb
fwait
inc
lock
mov
in
stos
pushf
mov
iret
mov
pop
xchg
movsb
and
xchg
sbb
xlat
call
jno
and
pop
mov
in
jne
dec
ja
mov
leave
xor
sub
mov
cwtl
push
repz
fists
lock
dec
das
lahf
pop
dec
sub
xor
sub
sbb
sub
mov
nop
es
popa
nop
lock
int
push
pusha
push
aaa
mov
push
movsl
jae
lds
mov
ret
divl
ret
test
cmp
push
adc
pushfw
fisttpl
sub
push
jmp
popf
daa
sti
dec
xchg
dec
pop
dec
inc
mov
dec
lock
adc
xor
inc
sbb
mov
sbb
loop
push
xchg
or
clc
cmc
pop
inc
scas
sub
inc
or
popl
cmpsl
out
mov
sbb
popf
xchg
loopne
pop
jns
sub
mov
test
mov
xchg
push
adc
inc
pusha
push
xor
xchg
xchg
movsb
leave
aad
and
push
stos
lret
andb
dec
pop
mov
lods
sbb
mov
dec
das
push
xchg
je
andb
test
out
jp
or
ficoms
arpl
outsl
sahf
divb
and
cmp
inc
das
je
jno
popf
outsl
ja
jnp
cld
jne
fwait
jno
ret
in
shlb
pop
fcompl
movsl
sub
mov
imul
adc
pushf
cli
fs
inc
add
repz
shrb
not
mov
xchg
cltd
sub
int3
or
outsl
xchg
xlat
popf
sub
jo
out
push
dec
mov
lock
sbbb
inc
sbb
cmp
pop
lods
push
lret
cmp
fmull
mov
cs
int
mov
psllq
mov
out
xchg
loopne
pop
inc
pop
xor
clc
ljmp
jmp
adc
xchg
dec
and
icebp
int
in
js
arpl
xchg
cmp
jbe
sub
xchg
adc
lret
xchg
in
insl
jp
mov
inc
aad
shr
ss
enter
xchg
jmp
cmpsl
or
inc
inc
mov
mov
outsl
inc
adc
jge
jns
jmp
sbb
pop
cli
pop
xor
mov
lcall
cwtl
mov
push
mov
inc
cmpsl
shl
or
inc
cwtl
xchg
lds
fsubs
xor
insl
add
shl
sti
push
xor
int3
push
and
push
cmpsl
loop
pushf
mov
scas
outsl
jo
mov
inc
cmp
outsl
jb
pop
shrb
add
push
pusha
dec
jno
mov
jge
enter
add
push
test
inc
xor
xor
xchg
les
or
shll
out
sub
sti
fnsave
mov
addr16
mov
out
xchg
pusha
push
xor
and
and
or
dec
lods
or
js
mov
shlb
filds
jns
in
and
mov
mov
or
pop
push
fistl
mov
inc
mov
test
add
sbb
int3
sub
add
sbb
repnz
mov
ret
ret
lahf
jnp
mov
nop
dec
stos
shlb
test
xchg
aaa
adc
add
adc
lods
es
test
add
ljmp
lea
imul
in
filds
bound
and
pop
sub
arpl
sub
sbb
push
pmaddwd
pop
mov
call
xor
into
pop
loop
loopne
or
arpl
cli
xor
daa
insl
dec
gs
cli
das
loopne
or
lcall
dec
xlat
das
adc
push
repz
cltd
mov
mov
mov
test
fwait
outsb
push
popl
jnp
ror
das
fcompl
jp
or
or
jne
cmp
mov
push
jbe
push
das
outsl
jae
cltd
test
aas
loope
movsb
jl
lods
mov
sbb
xchg
dec
arpl
insb
movsb
stos
mov
andl
sarb
scas
mov
rol
hlt
sti
adc
iret
mov
mov
clc
and
mov
sbb
out
js
cmp
push
loope
negl
add
sub
shlb
sub
scas
adc
outsl
mov
test
xor
mov
fdivp
xor
stos
sbb
pop
jne
scas
and
push
jbe
gs
xchg
sbbb
cmp
cmp
xchg
aad
into
pop
xchg
jb
xchg
jno
test
aam
pop
scas
ret
aas
js
pop
push
sbb
aaa
push
mov
jbe
fldcw
cli
mov
insl
mov
mov
fists
pusha
push
pop
pop
mov
mov
inc
sbb
pop
mov
cld
cwtl
clc
mov
call
outsl
xchg
inc
jl
xchg
lea
fcomps
mov
icebp
push
inc
bound
or
shl
lock
mov
jae
push
mov
pop
dec
jg
cmp
test
fisttpll
and
inc
jne
ljmp
out
fistpll
hlt
pop
sub
xchg
jle
lea
ljmp
adc
push
or
idivb
sub
lret
and
inc
daa
lahf
outsl
scas
addl
or
gs
std
mov
aad
push
sub
int
push
dec
cmp
jmp
bnd
hlt
lock
xchg
jno
xchg
dec
scas
mov
jbe
lret
mov
movsb
cmp
call
aas
inc
inc
scas
call
ds
sub
rorb
xorl
scas
out
xchg
cmp
xchg
pop
sub
mov
fcoml
jg
repnz
mov
dec
push
mov
test
and
imull
jl
push
xorb
lods
ja
sub
insl
or
or
pop
int3
mov
mov
daa
xchg
insl
mov
and
xchg
and
stos
add
xchg
jb
xor
lcall
fidivrl
das
cmp
dec
gs
scas
ret
movsl
dec
and
fsubrp
push
repz
rclb
inc
push
rol
jb
fdivs
jae
mov
jnp
fs
outsl
mov
add
xchg
xor
imul
popa
adc
pop
stc
pushl
test
outsl
mov
ficoml
stc
push
mov
mov
adc
inc
cli
sub
push
outsl
loop
aas
arpl
dec
in
dec
inc
and
sbb
ljmp
movsl
aad
and
mov
mov
outsl
pushf
shll
test
enter
and
fsubl
sbb
scas
negb
test
lock
int3
call
inc
jb
lahf
js
scas
jle
sub
popf
aam
popa
cmc
lock
lock
sahf
sub
xchg
pop
outsl
mov
mov
inc
aad
xlat
sub
jg
ja
out
and
dec
test
popl
lea
orl
adc
pop
xchg
mov
inc
jmp
cmp
pop
inc
add
loop
test
mov
push
xor
xchg
aas
xlat
inc
and
sub
pop
push
add
iret
xor
test
sbbb
xchg
fnstenv
das
inc
add
je
inc
or
or
sub
adc
jno
aaa
add
and
pushf
lock
inc
cwtl
roll
pop
ds
nop
xor
or
jns
outsl
movsb
call
mov
jbe
lahf
and
pop
mov
jle
movsb
aaa
mov
inc
push
push
sarb
test
mov
pop
mov
and
nop
rorl
sbb
stos
xchg
adc
xchg
jmp
xchg
xor
xor
mov
nop
sbb
dec
and
rcr
in
call
mov
mov
or
call
xor
rcll
and
je
cs
es
xchg
insb
out
cmp
cmp
dec
inc
cmp
mov
push
cwtl
jmp
hlt
push
test
xchg
dec
ror
jbe
mov
xor
icebp
pushf
xchg
pop
shll
pop
fxch
inc
pop
xchg
jge
pop
cmp
enter
sarb
xor
loope
popf
xchg
cmovno
adc
out
mov
mov
or
xchg
xchg
jp
das
mov
mov
out
fcmovne
xchg
loop
sub
adc
jg
xchg
push
out
popf
jg
xchg
jb
mov
and
jbe
jne
out
in
scas
xor
clc
adc
fs
lods
imul
movl
adc
xor
push
xchg
push
ret
inc
inc
xor
add
pop
jb
inc
in
shrl
mov
popa
sarb
mov
mov
mov
xchg
sub
jne
jnp
pop
mov
add
ss
int
push
enter
cli
mov
lds
push
cmp
jl
rcrl
xlat
xor
imul
dec
lods
call
repnz
dec
cld
push
adc
add
cmpsb
push
jmp
jp
scas
lods
mov
lret
mov
adcl
pop
cltd
cmpsb
pop
pop
mov
pop
xlat
test
fwait
xchg
lods
add
or
aaa
xchg
fstps
mov
dec
inc
ds
dec
stc
push
cmp
pop
xchg
mov
or
xlat
cld
outsl
jmp
imul
sub
xor
incl
imul
dec
clc
xlat
cmp
inc
popf
pop
cmpsl
test
pushf
ret
pop
inc
dec
jb
movsl
lods
or
rorl
lret
hlt
xor
cmc
push
cld
int3
jae
and
xchg
push
out
sbb
xchg
xor
adc
stos
adc
fcompl
xchg
jecxz
or
xchg
inc
cltd
ret
mov
lcall
lods
lods
cmp
loopne
mov
ret
outsb
xor
xlat
sub
popf
dec
push
ret
cmc
dec
lods
pop
pushf
lods
xchg
xchg
lret
loop
and
pop
push
inc
push
or
icebp
mov
inc
popf
mov
test
outsl
lret
xchg
push
mov
pop
enter
pop
repnz
xor
movsb
out
xchg
test
stc
cmpsb
pop
outsl
dec
movl
push
jo
inc
mov
push
int3
ds
adc
cmp
sub
cltd
mov
lret
iret
fidivs
in
mov
push
outsb
movsl
jmp
or
add
pusha
sub
xchg
jnp
les
jmp
fdivp
in
pop
and
clc
jae
sbb
out
cli
negb
pushf
and
fldl
les
rcrl
sub
dec
rcl
movl
mov
inc
out
mov
jle
jle
adc
mov
lds
xchg
lahf
add
inc
rcrl
sub
or
xchg
jae
pop
jge
jae
inc
inc
movsl
scas
mov
jns
xor
or
mov
jbe
cmpl
insl
ss
or
xchg
and
dec
xor
adc
push
out
inc
xor
andl
scas
and
outsw
adc
and
jge
imul
loope
dec
xor
lds
cmpsb
sbb
pop
inc
or
push
scas
dec
mov
fmuls
xor
xchg
iret
pop
cmpsb
jnp
cwtl
outsl
add
lds
inc
test
jecxz
aaa
loop
movsb
sub
cld
cmpsl
lahf
out
jns
test
cmp
xchg
std
out
pop
push
mov
lret
mov
adc
push
mov
and
adc
adc
pop
cld
sub
or
movsl
mov
std
jg
and
call
scas
orb
adc
jne
ja
in
int
mov
adc
psrad
pop
jne
adc
je
mov
gs
out
push
lahf
call
outsl
fisubrs
jl
lods
cmp
and
jecxz
mov
sub
aad
mov
and
notb
adc
xchg
xchg
inc
mulb
lock
xchg
arpl
mov
inc
xor
cwtl
mov
daa
out
inc
adc
mov
movsl
adc
adc
sub
stos
std
lock
cmp
das
data16
inc
pop
mov
cmp
mov
les
into
aas
pavgb
jae
push
fdivs
adc
and
dec
es
push
arpl
xchg
les
push
mov
daa
lret
and
es
xchg
sub
lret
enter
scas
pop
sub
pop
inc
xorl
xchg
and
or
sub
cltd
test
addb
push
dec
scas
lret
cs
mov
outsl
xor
loop
jnp
jbe
shr
sbb
or
adc
out
xchg
movsl
xchg
pop
pop
sbb
sub
push
lret
mov
stos
sbb
mov
xchg
and
xchg
std
enter
and
add
jecxz
mov
fcmovnu
xor
out
cld
or
ljmp
int3
in
ljmp
xchg
jo
adc
imul
push
pop
lods
dec
inc
add
jle
mov
iret
insl
adc
push
and
dec
xchg
xchg
stc
es
lods
test
inc
sar
jae
jge
dec
lcall
test
jns
dec
xor
outsb
push
adc
cmp
in
popf
pop
lods
mov
sbb
or
jne
jnp
push
cmp
mov
xorb
mov
pop
stos
pop
imul
xor
mov
xor
clc
push
mov
lcall
cli
stos
ja
push
pop
and
xchg
inc
sub
lcall
fisubrl
ret
shll
fsub
jno
xchg
int3
cmp
mov
call
je
mov
cmp
out
jmp
mov
dec
faddp
inc
pop
lods
scas
pushf
xchg
data16
sahf
sub
movsl
fwait
mov
pop
push
xchg
or
aam
adc
push
imul
pushf
pop
decl
popa
inc
adc
je
mov
repz
cmp
int
fiaddl
xchg
jle
out
aas
aaa
dec
lock
ret
xor
dec
pop
enter
adc
add
jg
pop
mov
in
cmp
cmp
push
imul
sbb
dec
dec
bound
aaa
mov
mov
cmp
mov
int
xchg
mov
fwait
pavgw
inc
inc
outsl
lds
pop
xchg
mov
mulb
clc
jns
mov
inc
cmc
mov
mov
std
xchg
fwait
rclb
inc
scas
mov
push
out
xchg
fdivl
push
mov
push
jne
outsb
ds
movsl
test
fsubrs
jle
fidivs
or
xor
push
mov
sbb
repz
mov
sti
mov
mov
jbe
push
sbb
and
lods
sbb
sub
sti
add
out
outsb
adc
sbb
int3
pop
sarb
imul
jmp
dec
outsl
outsl
in
xchg
test
filds
xchg
xchg
jg
mov
ror
inc
inc
add
fwait
sub
pushf
std
sub
call
adc
fadd
pop
mov
push
xchg
sub
pop
leave
sub
push
xbegin
mov
cmpsb
sub
and
insb
outsl
addr16
ret
cli
sub
orl
jmp
xor
adc
jae
stos
inc
je
xchg
xor
dec
dec
cmp
pusha
push
jmp
pop
and
pop
xchg
dec
dec
mov
xchg
jmp
xor
movl
stc
lret
lock
push
outsl
addr16
dec
and
popf
out
rdtsc
sarl
daa
inc
data16
loopne
or
movntq
out
sbb
andb
jo
pop
stos
out
add
imul
push
mov
in
cld
pop
icebp
and
mov
lret
cmpsl
and
adc
push
pop
outsl
mov
or
movsb
clc
clc
dec
out
das
jo
mov
arpl
add
sub
imul
xchg
sbb
mov
adc
add
jns
je
push
fadd
xlat
push
mov
push
xchg
sar
and
fistpll
fstpt
xchg
mov
mov
sub
mov
and
jle
lock
sbb
xchg
ret
mov
pop
jo
inc
and
sbb
push
or
jnp
mov
jno
push
jae
and
inc
int3
sub
add
jb
in
pushf
mov
push
xor
scas
aad
outsl
stos
enter
sub
xchg
daa
loope
sub
inc
loopne
sti
fs
jb
xchg
and
push
aad
icebp
or
xchg
fists
xchg
push
mov
pusha
xchg
dec
loopne
xchg
or
adc
mov
fs
dec
cmpsl
ljmp
out
xchg
mov
cmpb
add
xchg
dec
shlb
dec
lcall
pop
insb
scas
jmp
sbbb
mov
and
mov
dec
mov
lock
sbb
out
jnp
ja
test
pop
ret
push
dec
xor
and
out
jno
iret
sahf
shll
xchg
sbb
pop
pop
ds
stos
or
cs
imul
adc
inc
sbb
rorl
daa
fimull
push
cmp
jnp
scas
mov
mov
add
mov
scas
hlt
mov
scas
call
mov
das
aad
dec
les
fcomps
in
sbb
movl
xchg
cltd
out
lcall
mov
push
jle
cmp
bound
pop
outsl
push
js
js
daa
popf
das
addb
mov
ds
pop
lahf
push
mov
dec
subb
jnp
mov
add
cmpb
and
push
push
and
sub
das
lahf
jl
and
mov
and
lret
fwait
call
scas
pop
int
cs
test
cwtl
push
xlat
push
jle
cmc
dec
inc
push
mov
and
test
nop
cwtl
cmp
fisubrs
cmpl
insb
xchg
outsl
sub
cli
xchg
popf
cmp
mov
cwtl
pop
jmp
or
cs
int3
arpl
movsb
pusha
dec
xor
and
rcll
jl
add
sub
or
mov
popf
test
push
pop
scas
loop
sahf
or
and
or
adc
push
outsl
jmp
mov
add
xchg
and
lods
adc
imul
call
sbb
jecxz
inc
lret
shll
testl
jecxz
xchg
scas
daa
or
xor
and
call
jns
les
and
push
mov
scas
push
fcomps
ja
aam
imul
pop
stos
inc
repz
sbb
mov
loopne
bound
dec
jo
lahf
push
fisubs
nopl
inc
push
mov
loop
call
das
lods
icebp
push
les
inc
xchg
xor
test
xchg
or
sti
inc
xchg
shrl
adc
scas
push
outsl
insb
push
mov
inc
cmpsb
sub
pop
sub
push
cltd
daa
pop
xchg
xchg
jno
daa
mov
lock
sub
xor
fsubl
jae
mov
push
scas
shrl
push
mov
push
lcall
insl
mov
negb
add
inc
daa
pop
dec
and
mov
push
add
call
jle
dec
scas
scas
dec
ret
movsb
mov
jecxz
stc
aaa
clc
scas
xchg
call
in
sub
cmp
xor
lcall
cmp
addl
cmp
fisttpl
push
mov
sub
rol
or
push
pop
mov
mov
mov
out
mov
in
jb
xchg
mov
inc
pop
dec
cmp
jecxz
pop
orb
aaa
std
xor
jne
push
xor
xor
ss
filds
imul
jae
push
push
clc
pop
adc
gs
movsl
mov
push
jno
push
out
fldenv
sbb
mov
cmp
push
aam
out
xor
dec
in
test
adc
imul
pop
push
add
inc
lcall
testb
pop
pop
out
test
mov
adc
outsl
adc
inc
movsl
mov
bound
pop
adcl
add
lds
mov
and
pop
and
mov
shll
lea
aaa
xor
hlt
xor
das
jge
inc
test
das
ljmp
pop
cmpsb
lods
ljmp
mov
jnp
mov
movb
mov
in
and
fadds
arpl
xchg
jnp
adc
jne
repz
notb
scas
fsts
dec
in
addb
cmpsb
xchg
jno
jp
push
or
xor
cld
out
idivl
pop
scas
jbe
jp
xchg
push
cltd
jae
jbe
cwtl
push
inc
in
outsl
adc
mov
adc
call
scas
lds
loop
jo
xor
mov
nopl
dec
mov
test
pop
pop
mov
mov
sub
adc
outsl
mov
ja
repnz
lods
loop
xchg
or
orl
adc
mov
in
nop
dec
loope
or
xchg
sub
insb
fsub
enter
xor
xor
and
popa
nop
test
inc
test
scas
push
lcall
xchg
push
int
xor
aaa
sub
jp
loope
cmpsb
call
scas
and
lret
xchg
jne
mov
add
pop
fs
push
test
xchg
xchg
sarl
ds
repz
and
cmp
sbb
out
outsl
test
test
push
pop
not
lods
add
jbe
or
test
ljmp
mov
jle
pop
popf
adc
mov
and
add
mov
jns
and
push
test
and
and
or
sub
mov
push
loop
fsubr
ljmp
pop
adc
xchg
lock
push
dec
iret
ds
add
nop
into
cmp
mov
testl
inc
rcll
cmpsl
scas
jb
mov
sub
jp
ljmp
leave
das
xor
fwait
in
cmp
dec
push
mov
sub
sub
insl
fldt
push
sbb
lock
jg
stos
outsl
dec
outsl
ficomps
xchg
cmp
add
shrb
xor
cmp
repz
cmp
push
mov
cmp
std
xchg
js
daa
aaa
add
mov
out
lock
dec
outsl
stos
xchg
dec
jp
pushf
movsb
pop
pop
cmpsl
out
movsl
ret
test
sahf
dec
insl
inc
sbb
bound
mov
mov
out
mov
loopne
mov
jb
rcrl
or
mov
int
push
inc
and
sub
sar
outsl
jb
orb
nop
int3
test
mov
mov
sar
dec
pusha
inc
sahf
imul
mov
inc
mov
xorl
pop
xchg
push
mov
mov
fwait
rorl
sbbl
mov
insb
lahf
and
fstpt
je
pop
push
adc
cmp
scas
push
inc
mov
xchg
xchg
adc
outsl
or
iret
and
lea
push
popf
push
mov
addr16
mov
outsl
push
ret
or
inc
mov
xchg
jecxz
cmovs
inc
jo
shr
mov
or
and
dec
mov
xchg
push
jo
lds
xchg
test
aad
outsb
and
inc
push
movsb
test
sarl
mov
cmpsb
outsl
addl
iret
nop
adc
sbb
pop
pop
mov
or
lds
xor
orb
cs
movsb
push
pusha
ror
int3
fcmovbe
scas
decb
sbb
pop
inc
xorb
jbe
jbe
call
scas
imul
out
xor
out
pop
popa
xlat
movsb
cwtl
or
pop
shr
loop
cmpsl
adc
cmp
out
cmpsb
xor
sbb
fists
xchg
mov
push
pop
jno
call
push
jnp
push
mov
jp
dec
nop
adc
xchg
or
sbb
test
ljmp
mov
cwtl
pop
mov
inc
sahf
js
sarl
addr16
dec
inc
mov
std
mov
test
or
add
jno
cld
or
bound
jmp
jl
lret
outsl
push
mov
sub
xchg
and
jns
and
iret
xor
ss
shl
test
call
mov
mov
jnp
cmp
fists
pop
pop
pop
ljmp
push
cmp
xor
mov
jo
or
cmp
in
lock
shll
dec
movl
xor
popf
movsl
gs
adc
dec
gs
fwait
add
mov
xorl
sub
daa
add
xor
out
jp
xchg
ret
rcl
insb
imul
add
stc
mov
stos
scas
push
outsl
pop
icebp
lods
ret
loope
lods
jnp
das
cwtl
outsb
xor
cmp
pop
ret
fists
scas
lods
aad
or
mov
xor
jg
add
jle
xor
in
scas
pop
das
pop
dec
push
push
pop
cli
addb
jbe
cmp
movsb
adc
dec
sub
xchg
jmp
int
inc
std
push
push
cwtl
xchg
lret
mov
dec
aad
jp
fimull
icebp
in
push
inc
sbb
lret
sbb
cmp
les
mov
push
popa
das
outsb
int
jnp
sahf
push
add
lea
aaa
sub
gs
mov
jle
cmpsl
js
inc
lods
test
xor
das
cmpb
cwtl
mov
js
or
lods
jno
cmp
or
cmp
cmc
xorl
in
shr
sub
lods
cli
push
scas
and
cwtl
pop
lock
push
cmp
cmpb
add
jg
in
pop
mov
dec
dec
pushf
sti
dec
adc
sub
fldl
jb
xchg
lcall
jg
xchg
out
sahf
stos
cmpsb
aam
xchg
add
xchg
jge
adc
pusha
xorb
jo
cli
scas
sbbl
fucom
das
mov
cltd
lret
push
ja
sbb
and
scas
push
ret
mov
dec
loope
out
push
arpl
xchg
dec
cmpsl
add
arpl
stc
sbb
add
out
mul
lock
stos
test
push
js
out
xchg
adc
mov
cwtl
std
mulb
pop
mov
sarb
shl
add
popf
call
scas
sahf
rorl
pop
xor
bound
in
outsb
mov
pop
and
adc
jl
mov
outsl
or
or
and
add
stc
jge
mov
in
mov
outsl
inc
sahf
imul
jle
or
mov
push
repz
lea
pushf
jl
inc
push
in
lret
push
cmp
add
call
dec
test
in
lcall
adc
jg
push
xor
adc
insb
add
mov
jl
xchg
mov
jmp
adc
aad
add
mov
imul
mov
andl
scas
and
push
data16
xrelease
outsl
sub
jbe
pop
sbb
andb
in
es
pop
adc
xchg
ret
xchg
mov
outsl
jecxz
cltd
out
cmpsb
cld
xchg
sbb
cmpsb
ljmp
dec
sub
sbb
mov
pop
hlt
xchg
xchg
lahf
ds
in
xor
imul
mov
movsl
cmp
fmuls
out
cmp
pop
lahf
xchg
repz
scas
inc
sub
cmp
pop
xchg
mov
ja
lret
shl
pop
sarb
aaa
imul
sbb
hlt
ljmp
cmpsl
iret
cld
jg
pop
test
js
xor
jmp
jno
scas
push
cmpsl
test
cli
stos
adc
or
pop
inc
push
sub
outsl
sbb
dec
bound
stos
ljmp
jb
fs
js
ja
lods
jne
jno
adc
and
aas
xchg
popf
inc
push
into
xchg
test
cmpsl
adc
add
jmp
xchg
push
sahf
fidivs
mov
sbb
fisubl
dec
daa
jno
pushl
jecxz
and
xchg
xchg
and
pop
pop
dec
cmp
xor
mov
sub
ss
sub
imul
test
mov
xor
fwait
add
sub
cs
pusha
ljmp
adc
outsl
out
shrb
repnz
pop
mov
sbb
outsl
push
adc
outsl
mov
inc
cmp
loopne
and
mov
movl
outsb
mov
or
pop
lret
adc
jne
test
cmpsl
add
imul
das
or
jg
insb
mov
test
and
push
filds
xor
inc
cs
aaa
fisubrl
rep
sub
outsb
out
sbb
icebp
jmp
mov
jae
sub
mov
sahf
das
incb
mov
xorl
fs
aam
adc
lods
inc
ss
outsl
into
addr16
test
mov
push
test
arpl
cmp
sbb
jb
out
nop
outsl
lea
mov
add
scas
xchg
sub
cmpsb
inc
xchg
clc
icebp
sbb
push
lret
xlat
fs
sti
push
insl
lods
and
push
sbb
mov
shrl
das
das
xor
jae
cmc
imul
imul
push
data16
push
cltd
push
pop
add
jl
adcl
inc
pop
into
sti
mov
xchg
addr16
pop
orb
cmpsl
or
insl
in
dec
loope
push
test
inc
pop
lds
jp
daa
cmpsb
es
adc
loope
inc
mov
and
in
dec
cltd
popf
mov
ret
call
scas
lret
dec
mov
jnp
sbb
fidivl
test
sbb
aas
scas
clc
xchg
jle
stos
in
xchg
imul
call
scas
decl
jmp
sbb
ret
mov
sub
jb
inc
adc
mov
xor
je
and
adc
jne
push
jle
nop
imull
scas
loopne
iret
subl
jne
outsl
call
dec
fwait
xor
pcmpeqd
mov
push
push
cmp
push
das
fnstsw
int
lock
cmp
dec
repz
mov
mov
bound
dec
pop
jne
and
push
pop
mov
ss
jle
andb
ljmp
imul
push
sub
lods
fdivs
add
fdivs
adc
das
mov
bound
out
fbld
push
push
push
dec
iret
adc
das
jg
sub
mov
push
cmp
aas
ret
dec
pop
sahf
mov
sbb
cmp
mov
and
fistpl
jge
jae
jno
je
inc
incb
xchg
dec
pop
or
scas
or
mov
cmpsl
pop
test
and
and
das
and
loop
lods
fisubrs
dec
xlat
js
jnp
xlat
sbb
or
mov
hlt
jnp
sbb
mov
sub
jmp
mov
mov
jae
jmp
add
pushf
test
xchg
out
mov
or
pop
nop
cmp
or
maskmovdqu
in
dec
movsl
adc
call
adc
adc
test
xor
mov
xchg
jge
push
and
cmpsb
test
xor
push
scas
pop
and
xchg
xchg
loop
sub
loop
insb
cmp
jne
xor
xor
dec
pop
lods
fdivr
fdivs
inc
in
jge
mov
jle
in
outsl
inc
iret
mov
pop
addr16
push
or
push
xor
mov
cmpsb
fld
cltd
mov
push
addr16
repz
xor
mov
es
xchg
and
inc
cltd
jno
mov
loopne
pop
pop
mov
cmp
movsb
xchg
push
inc
in
std
int3
mov
jmp
inc
sub
cltd
push
mov
xor
mov
sub
xor
mov
ja
sub
int
pop
mov
lock
jo
mov
sub
sbb
mov
sub
sub
add
jae
dec
gs
push
sbb
or
mov
xchg
xchg
repz
sar
mov
imul
and
and
icebp
sub
rcrb
scas
pop
cmpsb
mov
inc
cmp
cmpsb
mov
pop
or
js
test
sbb
pop
test
inc
lea
mulb
dec
and
pop
arpl
enter
jge
pop
outsl
aaa
into
sub
pop
lods
xchg
fdivs
imull
gs
movsb
push
pushf
cmp
adc
push
mov
iret
bound
jns
sbb
mov
loop
inc
ja
inc
xorb
sub
shrb
out
push
outsb
outsl
ret
adc
push
sbb
mov
sbb
xor
arpl
adc
rorb
and
inc
add
imul
dec
jno
dec
push
push
push
mov
push
cld
sbb
dec
cmp
xor
js
push
push
add
addb
jnp
das
cmp
cltd
dec
leave
sbb
sbb
pop
add
dec
xchg
sub
inc
sbb
lret
insb
rcrl
mov
xchg
jno
dec
aad
pop
or
cmpsl
ret
mov
or
test
js
adc
jle
sbb
stc
shrl
stos
lea
lock
pop
enter
test
inc
test
call
jae
imul
aad
movsb
sbb
sbb
xor
dec
fsubrs
push
jle
inc
dec
adc
lahf
inc
pop
insl
push
jb
push
lea
mov
add
add
add
add
adc
add
and
or
add
pusha
adc
and
adc
add
push
mov
inc
arpl
movsb
add
or
pop
pusha
addb
xor
and
inc
inc
adc
add
xor
mov
or
addb
add
or
add
or
and
leave
nop
and
add
mov
add
add
adc
movsb
add
or
xor
loopne
mov
pusha
sbb
adc
add
xchg
jge
xor
pop
push
sub
cmp
add
popa
inc
subb
add
and
dec
test
inc
aad
lods
rolb
mov
adc
add
fs
and
cmp
inc
and
test
add
sbb
dec
add
sub
mov
add
rolb
add
xor
add
adc
adc
adc
xchg
inc
mov
lcall
add
add
jno
add
adc
sub
add
adc
jns
inc
add
add
adc
pop
sub
xchg
sub
lock
add
sub
sbb
adc
adc
inc
add
sub
and
les
add
lea
add
adc
or
add
xchg
mov
addb
add
arpl
push
popa
or
add
add
xor
add
push
add
roll
pusha
add
add
mov
add
mov
xchg
shll
sub
and
or
sub
nop
orb
or
push
inc
add
pusha
and
or
add
movsb
add
jo
and
dec
sbbl
add
add
adcl
add
add
add
add
inc
popa
add
push
add
or
ljmp
add
add
push
sbb
inc
and
sub
add
add
sbb
or
inc
xchg
rorl
xchg
mov
dec
and
inc
add
add
addl
and
sub
add
adcb
adc
mov
add
add
add
orb
push
add
push
or
add
or
add
adc
add
mov
add
add
or
add
and
adc
and
mov
inc
mov
adc
cmp
sbb
mov
or
addb
hlt
add
push
addl
add
xchg
and
cwtl
jae
or
adc
xor
adc
rolb
lods
adc
adc
add
cli
adc
and
pop
mov
push
add
push
xchg
push
mov
inc
sbbb
add
adc
xor
dec
push
adc
sbb
test
add
adc
sbb
mov
xor
inc
add
inc
xchg
dec
add
sbb
push
xchg
or
sbb
push
add
movsb
add
xchg
adc
addb
adc
add
add
orb
addb
add
rolb
add
inc
inc
add
orb
sbb
sub
pop
sub
add
shlb
test
add
sbbl
clc
adcb
add
andb
inc
mov
and
xorb
orb
nop
inc
sub
inc
inc
xor
add
adc
add
or
and
dec
nop
addb
xchg
push
add
test
ret
or
or
addb
dec
inc
imul
adc
adc
jo
adc
or
cmp
dec
or
add
rolb
or
xor
and
push
or
and
sahf
addl
adc
and
add
shlb
add
add
push
repnz
add
or
and
test
dec
enter
mov
adc
jo
or
push
inc
rclb
mov
addb
mov
lcall
wbinvd
or
int3
push
add
add
dec
inc
xor
adc
pop
add
test
add
add
adc
push
add
add
cmp
pop
inc
call
test
and
or
adc
and
pop
add
sbbb
add
setb
add
mov
sbb
add
and
mov
mov
add
or
adc
and
adc
add
pusha
add
cltd
inc
add
add
add
cmp
push
add
mov
addb
push
dec
add
push
inc
or
addl
push
add
and
add
adcl
and
add
or
cwtl
pusha
pop
inc
sbb
or
add
dec
add
inc
inc
dec
sbbl
imul
xorl
les
sbb
add
inc
imul
add
xor
andb
pop
add
xor
and
add
add
and
sub
add
test
adc
xorb
adc
xor
adc
xor
rorl
adc
mov
enter
adc
orb
cltd
push
pop
and
add
push
sbb
pusha
sbb
or
dec
push
movsb
xor
adc
test
inc
adc
push
inc
dec
rolb
push
test
inc
add
add
add
or
add
sbb
push
cwtl
push
add
xchg
or
add
adc
orb
sbb
and
aam
push
or
adc
inc
mov
pop
popa
mov
leave
lods
add
inc
add
add
add
or
add
mov
or
pusha
add
orb
push
inc
dec
and
inc
rcrl
xchg
add
push
and
add
and
adc
adc
enter
andl
add
bound
add
add
and
inc
rolb
enter
xchg
adcb
or
add
test
and
add
and
cmp
or
mov
adc
sub
lret
adcb
addl
mov
add
mov
popa
push
add
jne
imul
adc
xchg
inc
bound
add
add
js
mov
and
add
and
xor
inc
mov
sbb
adc
add
pusha
or
sub
add
adc
adc
adc
sbbl
push
xchg
push
add
add
cmpsl
inc
pusha
call
dec
mov
and
add
xor
and
add
es
adc
das
daa
add
add
test
call
dec
inc
rolb
or
dec
or
mov
inc
add
pusha
or
and
dec
inc
add
sbb
mov
inc
rolb
test
inc
inc
inc
or
adc
or
adc
cmp
and
push
and
push
add
adc
inc
add
adc
sub
jo
sub
popa
xchg
inc
add
add
add
and
inc
inc
inc
adc
inc
and
nop
movsb
adc
mov
pminsw
das
inc
add
inc
pop
addb
mov
andb
or
push
adc
push
pop
mov
push
and
add
and
and
add
and
addb
add
adc
pop
or
inc
and
add
sbb
add
and
lds
addb
test
mov
or
push
and
add
adc
add
test
dec
dec
add
add
add
shl
inc
addb
add
add
inc
xor
inc
int3
add
rorb
dec
add
inc
sldt
add
dec
add
add
add
addb
add
adc
or
sbb
cltd
sub
cmp
jb
xchg
push
or
adc
sbb
push
and
or
add
add
add
pusha
adc
add
xchg
or
add
andb
add
pop
rolb
add
or
sbb
add
mov
cmp
movsb
andb
add
or
adc
daa
pusha
push
add
inc
inc
add
adc
inc
and
or
xor
pop
aaa
push
adc
inc
addb
jl
inc
daa
mov
and
mov
push
jb
or
mov
adcb
add
add
xchg
adc
push
and
add
adc
mov
and
sbb
mov
or
add
popa
add
mov
rorb
push
push
pusha
adc
adc
dec
and
add
add
lds
mov
inc
push
adc
addb
nop
push
or
inc
and
push
ret
and
or
movsl
sub
or
inc
pop
add
dec
and
andb
inc
xchg
xor
add
add
adc
sub
add
inc
adc
sbb
test
pop
and
push
or
ficoml
add
push
ret
push
add
add
adc
ds
rolb
sbb
in
inc
and
cmp
in
add
cwtl
pop
push
and
or
mov
add
adc
push
mov
orl
or
nop
sbb
rolb
movsb
mov
dec
inc
add
add
sarb
ds
xor
or
les
add
xor
adc
add
add
and
adc
add
sbb
xchg
sub
push
test
xchg
pop
mov
or
fwait
adc
loopne
add
add
mov
push
add
dec
add
push
xor
add
add
add
mov
xor
adc
sub
and
or
and
add
and
or
adc
roll
test
mov
rorb
add
inc
add
dec
pusha
add
xor
mov
add
or
inc
test
or
rorl
scas
adc
test
add
fs
pop
inc
jl
pop
add
add
mov
adc
dec
or
and
nop
addb
test
inc
mov
addb
push
add
test
add
mov
loopne
xchg
add
inc
sub
add
mov
sub
dec
sub
addb
adc
xor
or
inc
adc
movsb
or
push
lods
inc
mov
or
adc
add
add
or
fmuls
add
add
sub
mov
adc
push
adc
or
add
push
add
inc
add
push
or
add
pop
add
inc
add
or
or
add
push
or
and
adc
or
add
addl
or
inc
add
cmp
aam
rol
test
xor
push
add
adc
push
fsubs
and
add
add
and
xchg
sarb
and
add
or
add
cwtl
or
and
or
add
loopne
push
nop
add
xor
adc
inc
addb
sub
adc
xor
test
adc
addl
add
adc
add
add
or
sub
nop
mov
cmp
rolb
inc
shll
add
add
mov
and
enter
add
or
add
mov
and
push
adc
inc
repz
ret
sub
add
add
fs
inc
xchg
add
inc
add
add
sbbb
push
and
movsl
inc
push
nop
les
xor
fs
add
popa
addl
or
sbbl
and
nop
jo
push
sub
or
dec
adc
inc
sub
add
add
mov
and
xchg
aam
add
sub
inc
sbb
xor
mov
xchg
or
sbb
add
adc
rolb
adc
push
imul
or
or
and
adc
cld
orb
add
test
insb
xchg
pop
add
cltd
add
add
sub
adc
mov
mov
test
les
add
mov
inc
add
push
add
xchg
rorb
movsl
add
add
add
inc
add
ret
push
imul
adc
dec
push
add
add
pop
or
and
js
add
or
add
add
push
inc
addb
rolb
add
add
nop
sbb
and
cmp
inc
inc
add
sub
adc
sbb
or
adc
addb
and
popa
inc
add
or
mov
addl
push
pop
and
orb
inc
sbb
sub
inc
inc
push
adc
inc
add
adc
cmp
add
or
dec
add
sbb
cmpb
addb
add
nop
add
add
xchg
sub
push
inc
sbb
dec
add
inc
add
xor
add
inc
test
mov
adcb
mov
push
or
test
add
push
add
add
orl
inc
pop
addb
inc
ret
sbb
adc
add
or
inc
pusha
adc
cmp
push
jp
xor
add
adc
sbb
or
lret
movsb
xchg
sbb
rolb
out
and
xor
add
inc
sub
ret
and
add
andb
add
pusha
test
adc
nop
push
adc
and
xadd
add
and
cwtl
add
or
add
add
push
mov
addl
test
movsb
push
sub
and
add
pop
and
and
mov
add
adc
daa
inc
sub
add
fs
pusha
mov
adc
and
push
andb
mov
push
and
add
dec
add
inc
and
adc
data16
adc
cmp
or
add
mov
mov
rolb
adcb
xor
subb
andb
add
pusha
pusha
or
sbbl
jo
inc
mov
and
inc
rolb
adc
push
enter
adc
popa
or
adc
xor
or
ret
push
xchg
xor
cmpb
add
add
xorb
lret
sbb
inc
sbbl
ret
inc
cmp
and
ret
xchg
enter
add
addb
add
xchg
orb
mov
sub
and
add
ss
aas
adc
lea
inc
add
add
or
adc
adc
xchg
shr
xor
enter
add
loopne
xor
xchg
adc
add
add
adc
orb
and
sbb
cmp
addb
and
add
pop
inc
inc
push
jo
xor
movsb
add
push
mov
add
add
add
inc
sbb
addl
or
mov
pop
pusha
push
add
xor
pop
and
add
inc
xor
add
mov
adc
push
inc
push
loope
add
add
or
sub
or
pop
inc
or
add
xor
adc
mov
inc
push
adcb
dec
adc
add
add
push
xchg
push
or
adc
addb
xor
and
xchg
dec
dec
add
addl
roll
pop
test
das
xor
adc
mov
adc
mov
and
adc
add
mov
mov
and
sub
add
or
add
add
or
add
add
loop
and
add
mov
xor
and
mov
xor
nop
inc
xchg
inc
or
or
add
adcb
push
add
adc
pop
mov
and
adc
addl
and
xor
inc
loop
sub
rolb
add
adc
add
shlb
push
dec
inc
add
or
add
xor
or
push
add
add
xchg
inc
push
xor
add
add
sbb
inc
or
or
add
add
andb
add
add
add
jo
es
pusha
push
add
or
mov
add
add
add
in
push
push
pushf
aam
and
mull
mov
add
or
and
inc
inc
push
inc
test
add
or
push
nop
movsb
inc
data16
adc
mov
addb
enter
add
or
inc
mov
add
adc
add
orb
inc
subb
or
add
enter
dec
mov
inc
pusha
sbb
dec
inc
leave
and
mov
pushf
inc
sub
nop
mov
and
adc
andb
and
test
add
inc
sub
adc
inc
mov
xchg
push
push
jo
add
push
roll
and
push
adc
push
add
push
or
adc
sbb
push
and
or
add
add
add
push
add
adc
adc
add
sbb
mov
enter
adc
sbb
xchg
push
mov
add
push
adc
inc
add
adcb
adc
and
add
dec
andb
or
inc
adc
xchg
into
adcl
and
or
add
adc
add
add
push
or
inc
add
add
push
inc
add
push
mov
inc
add
adc
addb
add
mov
shrb
rorb
add
orb
dec
cmp
mov
mov
ret
or
adcb
sbb
and
sbb
sbb
inc
mov
mov
add
es
shlb
orb
inc
or
and
cwtl
push
rolb
xor
inc
push
subb
bound
xor
adc
orb
xchg
or
or
nop
xor
inc
inc
and
addb
add
add
sub
jo
pop
adcl
adc
or
andl
xchg
dec
dec
inc
add
test
mov
arpl
mov
sbb
and
sub
pusha
xor
and
inc
orl
sub
dec
sbb
add
or
pusha
pop
and
add
add
add
dec
add
add
inc
fmuls
adc
nop
mov
test
or
pusha
cmp
dec
xor
add
push
add
adc
add
push
add
adc
add
shrb
inc
sbb
push
sub
add
mov
add
add
and
sbb
add
add
or
addl
push
sub
or
dec
add
add
push
inc
pop
nop
andb
jno
mov
test
and
add
add
and
inc
inc
inc
mov
and
mov
or
inc
dec
sub
inc
inc
add
adc
push
add
add
pop
rolb
and
mov
add
push
add
ret
add
push
shlb
mov
inc
xchg
and
add
add
sbb
fs
cmpb
add
das
add
xor
sbb
push
adc
adc
loop
and
adcb
adc
dec
add
add
add
mov
aaa
push
add
add
add
push
rorl
add
sub
push
adc
or
or
add
adc
push
adc
data16
loope
add
inc
dec
and
adc
andb
and
or
xchg
adc
add
push
add
add
add
insb
add
test
cmpsb
cwtl
and
add
adc
or
xchg
orl
mov
add
add
and
or
mov
and
pusha
xor
push
sub
lock
loopne
mov
add
and
pusha
nop
add
adc
adc
outsb
fimull
add
and
jo
add
sub
addb
push
sbb
add
add
inc
lods
cmpsb
shlb
jno
and
xor
add
xchg
dec
subb
sbb
mov
sbb
inc
aam
push
add
nop
add
addb
nop
add
mov
add
popa
add
add
mov
add
adc
push
add
add
mov
add
add
pop
subb
add
inc
inc
arpl
or
bound
adc
or
add
xor
jo
inc
loop
addb
add
and
cmp
leave
inc
stos
or
les
dec
add
add
add
andb
add
adc
sub
pop
adc
add
or
inc
and
roll
add
les
add
xor
test
test
or
and
and
and
popa
stos
call
addb
enter
scas
les
andl
sbb
push
add
adc
adc
push
adc
add
add
dec
or
inc
xor
add
mov
and
push
sbb
or
add
imul
add
addl
mov
stos
add
adc
js
dec
mov
add
and
add
adc
xor
xor
push
push
add
xor
addl
adc
and
or
mov
inc
and
sub
add
and
add
add
adc
test
addb
cmpl
push
or
mov
or
or
add
or
mov
rcll
and
add
inc
or
or
sub
inc
adc
adc
xor
add
or
add
cmp
jo
or
shlb
inc
add
add
adc
and
and
add
inc
inc
and
add
ret
mov
inc
dec
or
mov
push
add
addb
popa
rcll
inc
adcb
add
add
mov
or
mov
inc
inc
push
and
push
xor
add
add
add
add
add
inc
add
mov
adc
add
xor
addb
or
inc
adc
add
add
dec
daa
dec
and
pusha
and
and
or
add
sub
popa
xorb
les
mov
sub
add
and
sbb
add
adc
sbbb
rclb
and
sub
rorb
add
sbb
rorb
sbb
add
adc
jne
add
xor
add
int3
add
inc
sbb
add
xchg
loopne
and
inc
loopne
adc
andb
mov
add
addb
add
inc
push
push
and
dec
scas
add
add
or
fidivs
push
push
add
add
mov
inc
add
push
adc
add
xor
or
mov
inc
wrmsr
and
mov
or
adc
add
lcall
adc
push
add
sbb
push
add
sbb
and
cwtl
add
sub
pusha
inc
loop
dec
adc
add
add
add
xchg
cmp
add
add
push
adc
rolb
inc
or
mov
cltd
push
and
jbe
mov
mov
adc
push
mov
dec
or
inc
add
add
mov
rclb
daa
and
add
pusha
subl
pop
sub
adc
pop
sub
mov
ljmp
add
enter
adc
and
or
sbb
adc
add
sbb
dec
cmp
cwtl
jno
pusha
or
xchg
add
call
push
add
loope
xchg
adc
xchg
inc
call
and
add
adc
dec
les
xor
or
add
test
movsb
subb
jmp
jo
adc
inc
pop
add
fadds
pusha
orl
add
inc
or
pusha
pusha
or
add
or
add
pusha
and
or
add
inc
adcb
js
adcb
adc
sbb
or
add
or
or
addl
dec
add
mov
jo,pt
push
nop
inc
addb
in
and
adc
add
or
inc
add
mov
adc
and
pusha
mov
or
inc
or
and
or
and
jmp
call
nop
andl
inc
pop
fs
sub
add
or
add
adc
ret
add
mov
dec
sub
add
add
and
adc
addb
jle
add
and
add
add
inc
add
sbb
adcb
push
adc
mov
or
add
adc
add
nop
push
sub
test
jnp
adc
sbbb
inc
and
add
test
add
add
adc
addb
and
orb
push
sbb
and
or
add
dec
add
adc
inc
add
add
add
adc
or
add
or
or
add
add
add
test
test
pop
and
add
or
or
js
adc
sbb
and
and
add
dec
adc
and
add
ret
pop
add
sub
mov
rclb
push
rolb
dec
or
adc
add
addb
and
sub
add
xor
add
xor
mov
add
add
sbb
add
pusha
adc
or
and
cwtl
add
add
add
mov
adc
inc
add
add
and
add
dec
wrmsr
add
mov
add
cmpb
add
add
add
add
add
movsb
inc
or
add
add
or
rclb
loope
or
andl
and
inc
add
add
adc
inc
mov
add
sub
lods
sub
add
adc
movl
pop
or
xchg
or
or
or
pop
inc
dec
and
add
add
adc
xchg
push
add
and
add
add
adc
dec
test
add
orb
and
xor
movsb
xchg
adc
and
sub
push
test
xchg
test
mov
shlb
add
rclb
add
adc
adc
ret
push
add
push
pop
sub
subb
loop
or
add
xor
or
add
adc
inc
inc
popf
xchg
dec
inc
mov
add
das
inc
and
adc
inc
dec
adc
add
add
test
or
add
inc
test
fiaddl
inc
rcrb
add
jo
adc
rolb
add
push
and
add
cmp
dec
dec
pop
add
add
pusha
inc
and
rclb
and
xchg
orb
pusha
add
inc
mov
add
add
push
add
rolb
lret
add
inc
xchg
add
add
or
sub
and
adc
add
sub
enter
and
lods
xor
pushf
shlb
or
add
add
push
leave
add
data16
sbb
and
push
add
adc
cmp
add
cwtl
test
pop
adc
sbb
xor
adc
addb
nop
inc
add
cmp
andb
movsl
sub
add
push
dec
or
es
and
or
add
bound
adc
inc
inc
inc
or
mov
orb
addb
add
addb
add
mov
or
test
or
mov
addb
add
add
inc
call
adc
inc
add
inc
sbb
add
jo
add
add
add
les
addb
xor
outsb
shlb
add
or
mov
add
in
ljmp
push
mov
mov
and
adc
sub
mov
rcll
push
inc
push
sub
inc
lret
or
push
sbb
andl
nop
push
sub
rorl
inc
adc
sbb
sub
add
or
add
or
adc
or
add
xchg
add
adc
mov
sbb
and
inc
add
xor
mov
inc
movsb
sbb
inc
add
xor
add
add
or
jo
test
nop
or
add
andb
mov
or
or
or
addb
nop
in
and
and
adc
push
and
inc
dec
add
mov
adc
sub
mov
inc
or
add
pop
adc
pusha
pusha
pusha
and
add
adc
sub
push
sub
inc
inc
nop
inc
or
inc
les
and
es
mov
xor
add
inc
addb
sbb
add
or
inc
push
addb
adc
or
ret
dec
inc
pop
mov
loopne
push
daa
add
add
add
or
add
inc
test
add
addb
add
and
and
arpl
dec
movsb
adc
inc
insb
or
arpl
sbb
fwait
mov
add
add
inc
inc
sbb
inc
or
adc
lock
adc
add
xchg
addb
or
pushf
imul
sbb
or
add
or
or
inc
add
cmovb
enter
dec
adc
or
add
add
inc
add
push
adcb
orb
adc
nop
enter
arpl
add
adc
les
sbb
or
or
ror
addb
je
pop
adc
inc
add
adc
sub
add
xchg
or
add
adc
pushf
and
inc
fwait
and
add
xor
xor
adc
and
add
add
add
and
or
and
mov
sbb
addl
xor
adc
mov
inc
dec
adc
push
add
adc
fcoml
rolb
and
inc
nop
inc
and
movb
add
inc
add
and
or
xor
mov
dec
sbb
add
sub
test
lds
nop
rclb
push
adc
dec
adc
rolb
loopne
subl
xor
xor
adc
add
and
inc
inc
add
xchg
mov
inc
or
inc
roll
rclb
or
mov
inc
and
add
les
mov
cwtl
les
subb
sub
adc
movsl
add
dec
add
xor
lret
jb
and
add
or
add
pusha
sbbb
and
mov
adc
adc
inc
out
sub
add
sbb
or
aam
addb
adc
and
jno
imul
sbbl
adc
add
adc
or
or
test
or
xchg
push
and
add
inc
add
arpl
and
push
dec
push
or
cmpb
add
addr16
or
dec
test
or
es
sbb
and
addl
add
add
or
add
inc
call
mov
and
add
add
add
mov
inc
adc
orl
and
adc
cwtl
adc
inc
adc
dec
or
add
loopne
mov
out
add
inc
movsb
or
add
mov
add
addl
xor
in
adc
es
pop
orb
and
xor
test
mov
or
inc
dec
add
add
add
pop
mov
or
jb
inc
mov
adcb
xchg
mov
fadds
jbe
sub
dec
add
add
sub
xchg
orl
xchg
dec
add
or
mov
or
sbb
pop
add
adc
jae
adc
in
adc
inc
lea
or
adc
add
pop
addl
add
add
add
or
xor
inc
or
inc
and
sbb
adc
add
adc
add
or
add
or
add
inc
pop
mov
inc
add
orl
add
cmpb
xor
addb
sub
and
test
sbb
push
inc
loopne
or
cmc
push
or
and
sbb
push
inc
xchg
add
mov
xchg
rolb
inc
add
test
and
inc
nop
inc
and
adcb
or
add
adcl
or
in
inc
push
add
enter
addb
jno
mov
pop
add
mov
pop
add
or
inc
add
add
and
and
add
add
popa
add
xor
or
nop
movsb
mov
and
js
push
or
popf
add
add
xor
add
adcl
inc
push
or
add
inc
add
mov
mov
add
mov
inc
add
add
push
loopne
add
or
ret
adc
xorb
inc
add
sub
sbb
sub
push
xor
add
mov
inc
cmp
imul
and
jb
add
sub
or
loop
and
mov
and
push
mov
and
je
sub
xchg
sub
rolb
cmpltps
adc
lock
inc
inc
add
dec
push
pushf
dec
sub
inc
inc
inc
mov
add
dec
mov
inc
inc
or
or
or
inc
mov
add
or
sub
adc
or
cmp
es
or
sbb
mov
pusha
mov
test
add
push
sbb
inc
flds
enter
rolb
or
push
add
inc
adc
add
add
xchg
add
inc
and
mov
add
test
push
add
adcb
and
add
add
or
inc
and
xor
and
inc
ret
and
xchg
add
add
and
adc
add
adc
or
inc
add
add
add
dec
subb
lret
mov
inc
adc
adc
and
push
mov
xor
and
adc
test
sub
add
or
adc
adc
adc
sbb
or
mov
orb
push
ret
add
mov
subb
add
or
or
add
sbbl
cwtl
roll
adcb
add
inc
pusha
adc
sbb
add
dec
or
and
push
adc
nop
or
add
add
sbb
nop
and
or
ret
nop
add
sbb
dec
adc
xor
add
add
sub
or
sbb
mov
adc
or
adcb
add
and
xor
add
fdivrs
adc
inc
aad
addl
test
movsl
imul
rolb
add
or
sbb
xchg
or
inc
rcll
add
add
and
dec
add
adc
add
addb
xor
xchg
and
lret
adcb
or
xor
dec
push
test
test
add
sbb
add
popa
rol
test
or
loopne
dec
add
add
pop
lahf
add
add
pop
inc
mov
add
add
or
or
sbb
add
add
or
adc
or
xor
xchg
add
add
add
stos
nop
or
orb
sbb
sub
adc
adc
add
inc
add
cmpl
or
or
xor
adc
es
add
and
inc
and
or
add
xor
add
dec
add
or
or
and
roll
sub
push
jo
xchg
sub
add
and
push
addb
adc
adc
addb
mov
sub
dec
xchg
and
add
add
mov
sbb
adc
xchg
add
andl
inc
and
dec
inc
adc
sub
mov
adc
push
add
add
add
dec
add
add
mov
nop
dec
adc
dec
or
mov
add
add
mov
add
or
add
sub
inc
test
add
push
xchg
test
push
ret
xchg
mov
and
xorb
sbb
flds
dec
or
pusha
add
or
dec
and
sub
sahf
pop
add
rolb
add
xor
add
mov
dec
enter
or
dec
or
sub
nop
add
adc
add
and
addb
or
add
movsl
pushf
inc
fs
adc
cmp
adc
ret
xchg
and
adc
adc
mov
or
and
mov
dec
add
add
adc
inc
pusha
xchg
adc
dec
dec
add
mov
sub
adc
xchg
adc
add
adc
xor
and
push
add
adc
pusha
bound
and
add
push
or
movsb
push
adc
add
add
add
or
add
sub
inc
movsb
bound
mov
mov
sub
add
sub
sub
mov
adc
adc
push
add
and
push
add
or
add
add
or
add
mov
sbb
nop
and
adc
inc
and
add
add
stos
or
dec
fs
adc
pop
subl
or
push
push
or
or
inc
jo
addb
push
adc
adc
push
and
or
and
add
xor
add
add
add
add
rolb
mov
add
cmp
inc
push
pop
pusha
add
add
add
add
add
push
mov
add
xor
andb
and
or
mov
add
or
add
add
add
or
or
xchg
jae
xchg
push
add
mov
and
and
or
push
fs
and
addb
xor
add
add
push
and
mov
add
adc
dec
nop
inc
and
popa
add
add
andb
push
and
inc
add
inc
add
add
inc
add
popa
add
add
or
sub
add
addb
and
inc
or
add
andb
xchg
mov
push
adc
sidtl
mov
push
inc
or
or
push
add
subb
test
add
add
roll
and
push
or
add
inc
adc
into
inc
push
add
add
push
add
mov
addb
sub
add
or
add
add
adc
xchg
add
in
xchg
add
and
mov
popa
sbb
add
or
inc
and
inc
cmp
subb
adc
mov
add
and
sbb
pop
adc
bound
and
subl
sbb
popa
push
or
inc
push
add
ret
ret
pop
and
add
inc
and
add
pop
adcb
cmpb
and
inc
or
sub
mov
lds
add
add
sub
or
nop
or
sub
lock
add
and
or
outsl
adc
addb
and
xchg
add
adc
pop
sbb
pop
mov
sbb
adc
add
and
in
or
mov
mov
adc
mov
sub
test
rolb
xchg
adc
cmp
add
push
add
add
inc
xor
inc
andl
or
and
adc
xchg
add
push
inc
and
inc
and
inc
and
add
lea
mov
add
add
push
xor
and
hlt
add
or
inc
xchg
call
arpl
enter
add
sub
xor
sub
push
cmp
and
push
push
sub
or
adc
add
xchg
shlb
add
inc
or
pop
sbb
faddl
test
add
inc
inc
and
dec
add
add
or
add
andl
push
add
xchg
inc
push
push
add
xchg
add
inc
adc
add
add
push
add
adcl
aaa
inc
stos
add
rolb
add
push
push
push
pusha
add
add
inc
sub
or
adc
or
fsubl
roll
add
and
add
push
add
add
add
inc
push
jnp
imul
addl
sbb
inc
movups
add
inc
mov
and
add
or
mov
inc
push
add
adc
xor
add
mov
addr16
nop
rolb
adc
mov
daa
dec
add
adc
mov
inc
add
cmpsb
mov
adc
addb
xor
add
inc
xchg
inc
add
out
push
dec
push
andb
sub
and
or
adc
sbb
add
adc
addb
inc
or
nop
sub
or
add
or
add
lea
add
cmp
sub
inc
adc
mov
and
push
adc
dec
push
mov
add
inc
add
sub
subb
addb
inc
add
mov
or
lea
pushf
add
leave
or
add
xchg
mov
shrb
rorb
or
add
add
add
call
rolb
addl
loopne
xor
xchg
adc
mov
testl
rolb
push
test
inc
sub
enter
add
add
stc
inc
add
adc
add
adc
adc
push
add
mov
jae
pusha
cs
push
loop
xor
and
test
sbb
or
or
addb
add
push
adc
add
adc
inc
sub
addb
shll
andl
inc
adc
shll
and
add
and
and
pushf
test
sub
xchg
or
adc
subb
xor
cwtl
adc
and
or
adc
inc
push
and
and
inc
or
push
inc
inc
roll
dec
test
inc
ret
and
inc
scas
push
rolb
inc
stos
adc
inc
dec
inc
movsl
inc
add
fcoms
and
add
xor
or
add
add
and
add
mov
xchg
add
lcall
add
or
ret
add
cmp
inc
adc
and
or
mov
mov
add
add
xchg
and
gs
inc
and
adc
mov
push
mov
or
add
add
mov
mov
adc
inc
add
and
test
mov
inc
or
addb
add
cwtl
orb
andl
js
or
sub
mov
mov
lock
inc
add
inc
pusha
or
rolb
and
adc
and
add
xor
inc
sbb
addl
and
adc
or
mov
add
jl
sbb
add
inc
mov
dec
or
addb
add
adc
addl
add
add
push
add
or
orb
add
push
inc
pop
add
andb
add
add
add
fadds
addb
inc
push
inc
add
mov
mov
push
andb
sbb
add
cmp
add
add
add
add
adc
add
sub
sub
nop
mov
add
mov
and
push
test
pop
add
or
bound
inc
add
adc
sub
mov
popa
adc
inc
add
add
add
inc
or
sbb
adc
adc
adc
inc
add
enter
mov
xor
sub
push
test
and
dec
push
data16
test
pusha
dec
push
mov
or
mov
add
adc
adc
add
test
es
addb
adc
rolb
push
mov
add
add
orl
arpl
dec
mov
add
sbb
adc
inc
nop
mov
pop
and
add
nop
loopne
add
addb
add
mov
pusha
add
inc
or
andb
add
or
and
add
add
jb
adc
mov
push
or
xor
push
add
inc
sahf
pop
pop
add
push
imul
and
fadds
add
inc
scas
test
add
pop
or
add
and
adc
add
insb
or
stos
add
add
inc
nop
or
mov
or
sbb
add
add
add
add
mov
sbb
mov
sbb
mov
sub
and
add
add
add
xor
add
add
sbb
cwtl
mov
add
add
add
add
xor
nop
inc
add
lret
xor
push
add
jnp
popa
add
ja
add
cmpb
or
dec
add
inc
push
addb
push
mov
or
add
add
push
add
add
add
add
adc
jmp
ljmp
or
pop
add
add
xchg
and
mov
adc
xchg
mov
add
and
add
add
mov
xchg
cwtl
cmpb
sub
add
and
adc
pop
add
inc
adc
add
pop
inc
addb
inc
pop
and
or
lcall
xor
adcb
push
xor
and
add
movsb
rolb
pusha
add
adc
mov
adc
add
sub
sbb
add
or
adc
and
and
add
or
mov
and
and
add
dec
pusha
add
or
add
and
mov
test
or
mov
addb
add
inc
push
xor
xor
add
and
enter
add
add
inc
or
fmuls
addl
mov
and
add
add
and
add
add
andb
mov
push
add
and
or
mov
add
sbb
loop
add
adc
dec
inc
xor
addb
add
xorb
dec
mov
add
adc
push
add
and
add
and
adc
mov
adc
nop
sbb
sub
rorb
bound
pushf
push
add
inc
add
adc
jo
add
sub
add
add
xor
or
or
add
add
and
push
addb
nop
nop
and
and
inc
add
adc
inc
add
and
or
sbb
repnz
test
xchg
es
inc
or
sbb
rolb
and
dec
and
inc
add
and
or
addb
add
add
add
add
inc
add
push
sub
fs
add
xchg
or
cmc
cmp
pusha
test
shlb
nop
jbe
or
push
add
adc
adc
test
xchg
popa
inc
adc
and
and
mov
add
and
adc
xchg
jo
and
adc
mov
nop
jno
sbb
nop
add
mov
add
sub
add
pusha
xchg
inc
add
test
xchg
enter
nop
add
movsl
add
add
or
dec
dec
add
movsb
push
inc
add
push
inc
or
test
mov
es
add
rcll
inc
push
roll
add
js
push
inc
xchg
ret
and
cmpsb
push
test
xchg
push
adc
inc
add
add
and
xor
inc
sub
push
push
xor
inc
sub
add
ret
adc
test
adc
or
and
cmpsl
adc
adc
mov
push
addb
addb
inc
add
push
and
pop
test
int
xor
mov
and
loopne
add
add
or
add
or
ret
add
inc
push
adc
loopne
cmp
sbb
mov
cmp
inc
inc
adcb
mov
and
addl
xchg
push
and
or
xchg
add
add
add
and
dec
mov
sbb
add
adc
dec
add
jo
add
mov
or
add
popf
push
adc
and
dec
sbb
ret
adc
dec
or
and
adc
sbb
mov
add
mov
add
push
subb
add
sub
xchg
das
add
inc
add
inc
add
and
or
sub
inc
add
test
push
inc
pusha
adc
add
push
inc
inc
mov
add
mov
xor
test
add
add
push
xor
inc
and
add
or
add
add
addb
sbb
inc
add
xor
or
push
movsb
dec
sbb
add
add
test
and
fwait
add
adc
push
aam
push
and
add
rolb
push
adc
sub
push
add
add
sub
and
or
sub
mov
and
or
dec
xor
addb
fs
insl
or
xor
sbb
pop
add
add
add
pop
add
or
inc
or
add
pusha
orl
mov
add
pusha
cwtl
cs
add
inc
addl
add
or
and
inc
add
or
adc
add
adc
adc
push
dec
arpl
and
add
pop
or
adc
push
mov
mov
sbb
les
xor
add
sbb
adc
add
jecxz
ret
sub
and
pushf
add
inc
inc
addb
and
add
inc
and
add
add
xor
add
add
add
les
and
xchg
rolb
add
xor
cmc
adc
add
enter
hlt
add
add
add
mov
add
and
sarl
add
add
test
push
adc
nop
add
pop
or
adc
and
xor
mov
add
push
add
rcrb
sbb
mov
pop
and
or
add
addb
addb
adc
or
addb
pop
add
sbb
rcll
rolb
inc
adc
add
or
adc
inc
adc
add
or
adc
enter
test
xor
addb
inc
adc
add
das
add
xchg
push
test
add
xchg
mov
inc
dec
adc
xchg
or
add
les
add
adc
addb
dec
shlb
add
sub
addb
sbb
adc
sub
add
loop
pushf
xor
inc
add
xor
addb
nop
sub
add
add
or
or
dec
and
pusha
inc
and
add
push
add
or
sub
add
rclb
adc
and
add
inc
adc
and
pusha
add
push
lcall
and
or
or
adc
add
add
sbb
mov
push
sbb
or
inc
push
push
add
push
add
sbbb
mov
push
inc
inc
sbb
push
push
dec
pusha
add
push
jb
add
addl
sub
add
xor
and
sub
dec
mov
add
cmp
push
add
addb
sub
and
out
lock
or
mov
add
inc
inc
dec
je
add
xchg
or
xchg
and
xor
pusha
add
add
test
and
mov
add
inc
inc
or
and
or
mov
or
add
add
add
add
sbb
xor
add
dec
or
adc
andb
or
add
add
andb
orb
add
femms
and
rolb
test
and
loopne
pusha
add
add
inc
cwtl
or
or
sub
test
mov
addr16
or
addb
add
or
inc
add
enter
pop
inc
pusha
mov
pop
and
ret
mov
adc
inc
or
or
and
daa
dec
adc
addb
and
sbb
and
and
pop
or
pop
mov
add
add
orl
inc
movsb
inc
add
orb
and
fldcw
test
movsb
add
adc
or
add
addl
add
add
add
or
inc
and
addb
adc
push
push
inc
cmpsb
push
inc
test
sbb
cwtl
rclb
push
add
or
adc
aaa
add
push
inc
and
bound
dec
adc
sub
sub
adc
sub
nop
add
or
nop
add
add
add
addb
inc
bound
adc
inc
mov
stos
pshufw
and
add
add
push
int3
pop
add
and
and
rcrb
dec
or
adc
add
add
xor
mov
cmc
rolb
or
addb
inc
inc
or
add
sub
add
sub
xor
in
mov
adc
xchg
sub
or
inc
add
and
mov
push
add
add
add
or
xchg
xor
dec
adc
adc
push
and
and
cmpsb
add
inc
jo
or
pusha
rolb
sub
adc
or
adc
add
add
inc
bound
hlt
adc
adc
bound
or
add
or
dec
shlb
add
lds
mov
adc
mov
or
add
add
sub
or
loope
add
mov
popa
test
mov
and
inc
adc
push
mov
sub
sub
mov
inc
lsl
mov
adc
mov
and
pop
pop
addl
rorl
rolb
add
and
add
cmp
adc
cwtl
nop
add
dec
mov
call
inc
or
adc
andl
add
and
mov
push
add
nop
nop
or
add
and
mov
add
add
add
adc
or
inc
push
adc
push
add
or
sub
xorb
call
add
fmuls
sub
inc
inc
adc
mov
and
add
and
inc
add
inc
push
or
sub
add
inc
rol
popa
add
sbb
and
call
or
or
xchg
sub
xchg
test
and
sub
xor
addb
adc
add
rolb
mov
movl
and
add
sub
fs
dec
jae
push
pusha
adcb
adc
or
add
push
add
orl
inc
aam
adc
adc
test
add
mov
mov
add
and
adc
add
adc
xor
push
aaa
push
pop
xchg
test
push
or
sbb
add
inc
cmp
add
imul
inc
inc
pop
adc
add
xor
adc
addb
add
sub
and
inc
sub
push
movsb
or
push
adc
adc
add
dec
push
add
sub
inc
add
inc
mov
adc
xchg
sub
cmp
xchg
add
and
add
add
adc
add
cmp
addb
aad
test
popa
xchg
and
and
sbbb
push
or
adc
add
sub
xorb
rolb
sbb
inc
xor
fwait
scas
and
sub
xor
addb
clc
dec
or
add
add
pop
dec
cltd
push
or
xchg
add
inc
cmpsb
add
add
adc
xchg
fs
and
push
add
xor
push
xor
add
add
adc
test
pop
cld
inc
or
add
inc
adc
push
inc
data16
mov
inc
inc
add
or
dec
rolb
cmp
add
inc
and
mov
mov
inc
inc
nop
adc
unpckhps
or
pop
push
adc
add
dec
or
push
mov
add
adc
sub
nop
dec
and
push
add
xor
add
loopne
add
add
addl
xorb
add
add
push
inc
mov
xor
dec
or
xor
add
adc
add
or
loopne
pusha
push
xor
aad
sub
adc
or
add
inc
pusha
and
adc
add
add
add
add
adc
xchg
and
addb
add
xor
add
adc
addb
test
add
dec
add
and
or
push
dec
and
and
inc
add
add
adc
add
or
ret
or
and
add
add
pusha
xor
add
add
inc
and
add
add
xor
sbb
add
add
and
les
pusha
pushf
and
jp
inc
add
add
add
add
cmp
xor
or
or
and
sbbl
add
inc
or
or
add
nop
or
or
add
mov
push
and
adc
add
push
add
and
cmp
andb
add
or
inc
push
jmp
mov
test
sub
inc
adc
and
inc
add
push
add
xchg
jns
mov
adc
inc
add
dec
enter
push
adc
sub
xor
orb
adc
adc
inc
adc
adc
test
add
add
movsl
inc
lods
push
push
pusha
adc
add
movups
daa
test
or
adc
xchg
or
add
add
push
and
cmp
orb
addl
insb
pusha
add
sbb
xchg
or
dec
add
insb
inc
push
add
inc
push
adc
fistl
and
adc
orb
or
js
and
xor
inc
or
adc
and
add
sbb
add
add
mov
sbb
movsb
sbb
push
xchg
or
cmp
sub
sbb
rol
mov
rcll
and
pop
and
add
add
and
pop
inc
movb
xchg
dec
and
cwtl
mov
push
and
add
inc
mov
inc
pusha
dec
addb
add
or
or
inc
add
adc
inc
adc
and
or
addb
push
andb
inc
add
je
adc
xor
aam
add
and
rolb
adc
push
add
add
adc
inc
movsb
adc
inc
add
add
addb
pop
mov
xor
adc
or
xchg
inc
add
inc
xchg
inc
sbb
add
push
or
add
add
adc
and
inc
add
sbb
adc
xor
adc
or
or
addb
test
or
pusha
popa
adc
push
movsb
mov
and
daa
add
mov
add
mov
xchg
xchg
adc
sub
addb
xchg
adc
loopne
and
xor
cwtl
xor
and
popa
add
mov
push
adc
and
xor
add
sub
addb
imul
loope
and
xchg
adc
add
inc
mov
add
and
push
dec
add
push
or
push
add
push
addb
sbb
andb
add
syscall
sbbb
add
dec
push
adc
add
and
orb
inc
movb
pusha
test
add
add
and
and
adc
or
add
sub
inc
adc
or
push
add
mov
push
and
jp
add
dec
add
nop
and
add
dec
addb
mov
popa
and
subb
add
xchg
inc
inc
add
add
or
add
and
orb
adc
addb
das
mov
add
cmp
dec
adc
inc
add
inc
and
and
inc
orb
adc
js
xchg
add
arpl
add
adc
sub
add
add
nop
sub
das
add
pusha
add
add
xor
adc
lea
mov
push
and
dec
dec
xor
xchg
push
dec
add
add
or
addb
cmp
and
push
inc
orb
push
pop
and
add
dec
add
inc
pusha
fadds
mov
fcoms
or
add
adc
add
xchg
inc
add
es
adc
inc
sbb
add
test
add
add
movsb
add
xchg
inc
shlb
and
and
inc
add
sbb
rorb
and
add
add
pop
add
jp
or
inc
nop
inc
push
sub
fs
add
addl
add
test
xchg
add
nop
fwait
pusha
add
and
and
sub
hlt
push
or
or
jo
push
sub
add
add
inc
roll
pusha
jmp
or
add
adc
add
add
add
or
push
rclb
adc
dec
daa
sub
jo
add
or
or
and
or
mov
sub
mov
add
push
push
push
push
push
call
add
push
mov
mov
push
push
push
push
call
add
push
mov
add
cmp
jne
mov
mov
test
jne
cmp
je
mov
xor
mov
cmp
je
or
push
call
add
mov
mov
mov
push
push
push
push
call
add
mov
mov
push
push
push
call
xor
cmp
jne
mov
mov
mov
add
mov
lea
push
call
mov
push
push
call
add
push
push
call
add
mov
xor
cmp
jne
and
cmp
jne
cmp
jne
cmp
jne
sub
push
push
push
call
add
mov
mov
or
mov
mov
add
push
call
add
mov
push
push
push
push
push
call
add
cmp
jne
mov
push
push
call
add
mov
mov
cmp
jne
mov
add
mov
test
jne
add
push
push
call
add
mov
push
push
call
add
cmp
je
mov
cmp
je
mov
sub
cmp
jne
mov
sub
push
push
push
push
push
call
add
xor
mov
mov
mov
mov
sub
mov
mov
cmp
je
mov
mov
mov
mov
test
jne
push
push
call
add
sub
mov
cmp
jne
sub
mov
cmp
je
mov
mov
add
mov
mov
sub
push
push
call
add
add
mov
cmp
je
mov
and
mov
cmp
jne
sub
mov
cmp
je
cmp
jne
push
call
add
push
call
add
mov
push
push
push
push
push
call
add
lea
sub
mov
cmp
je
mov
cmp
je
or
mov
mov
mov
cmp
jne
cmp
je
add
cmp
je
cmp
je
add
cmp
je
mov
mov
mov
or
mov
mov
test
je
xor
mov
mov
cmp
je
mov
xor
mov
mov
cmp
jne
add
test
jne
mov
cmp
jne
xor
mov
push
call
push
mov
push
push
call
add
call
sub
test
jne
cmp
jne
mov
cmp
je
cmp
je
mov
mov
mov
add
mov
cmp
jne
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
shr
mov
mov
cmp
jne
mov
xor
push
push
push
push
call
add
push
push
push
call
mov
mov
mov
mov
push
call
add
mov
cmp
je
mov
add
mov
sub
mov
cmp
je
and
mov
test
je
sub
mov
mov
cmp
jne
cmp
je
mov
sub
mov
cmp
jne
mov
cmp
je
sub
mov
cmp
je
mov
mov
mov
cmp
je
sub
mov
cmp
je
cmp
jne
cmp
jne
add
cmp
jne
mov
mov
add
mov
mov
mov
mov
pushl
push
pushl
call
sub
cmp
jne
cmp
je
add
mov
mov
mov
push
call
add
cmp
je
mov
push
push
call
add
mov
push
push
push
push
call
add
cmp
je
mov
sub
cmp
je
mov
sub
mov
mov
addl
cmp
jne
mov
mov
mov
sub
cmp
je
add
mov
test
je
cmp
jne
mov
sub
test
jne
xor
cmp
jne
add
mov
cmp
je
mov
mov
cmp
jne
add
mov
mov
mov
mov
call
push
push
push
push
push
call
add
sub
mov
push
call
add
mov
mov
mov
push
push
push
call
add
mov
mov
push
push
push
call
add
pop
mov
pop
mov
cmp
je
mov
xor
cmp
jne
xor
mov
cmp
je
call
pop
cmp
jne
add
push
push
push
push
push
call
add
leave
ret
push
call
add
mov
cmp
je
or
mov
push
call
push
call
add
push
push
push
push
push
call
mov
push
push
push
push
call
xor
call
mov
mov
mov
push
push
push
call
mov
push
call
add
mov
push
push
call
mov
push
push
push
push
push
call
sub
cmp
jne
push
push
push
push
push
call
add
sub
mov
push
call
push
push
push
push
call
add
push
push
push
push
call
mov
push
call
add
push
call
add
push
push
push
push
push
call
test
jne
add
mov
push
push
push
push
push
call
add
mov
push
call
add
mov
push
push
push
push
push
push
call
sub
mov
mov
call
and
test
jne
mov
pop
push
call
add
pop
mov
mov
mov
push
push
push
push
push
call
add
pop
mov
test
jne
add
mov
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
push
call
add
push
mov
push
push
push
push
push
call
add
push
mov
mov
xor
cmp
je
mov
sub
cmp
jne
mov
xor
mov
mov
movl
xor
cmp
je
add
push
call
add
call
sub
cmp
je
add
mov
cmp
je
mov
mov
xor
mov
test
je
mov
mov
cmp
je
xor
cmp
jne
mov
xor
cmp
je
push
call
add
call
mov
cmp
je
push
push
push
call
add
call
mov
add
mov
cmp
je
mov
call
mov
add
mov
add
and
mov
cmp
jne
mov
mov
mov
test
jne
add
mov
cmp
je
mov
add
cmp
jne
mov
cmp
je
xor
cmp
je
mov
cmp
jne
sub
mov
mov
cmp
jne
add
mov
mov
mov
mov
mov
cmp
je
mov
mov
sub
mov
cmp
je
cmp
je
sub
mov
mov
cmp
jne
mov
mov
mov
push
call
test
je
cmp
je
mov
mov
or
je
mov
addl
cmp
jne
add
mov
cmp
jne
mov
mov
mov
xor
mov
mov
lea
mov
cmp
je
mov
and
mov
cmp
jne
sub
test
jne
mov
mov
add
mov
inc
mov
mov
xor
mov
mov
cmp
je
cmp
je
mov
mov
test
jne
mov
mov
sub
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
mov
mov
cmp
je
mov
push
call
add
sub
mov
mov
xor
cmp
je
mov
push
push
push
call
add
xor
cmp
je
mov
push
push
push
push
call
add
and
mov
push
call
add
mov
mov
xor
cmp
je
mov
sub
push
push
push
call
add
call
push
push
push
call
add
mov
push
call
add
push
push
push
push
call
add
mov
mov
mov
mov
mov
or
cmp
jne
add
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
test
je
mov
xor
mov
mov
test
jne
sub
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
add
pop
test
je
mov
pop
mov
push
push
push
push
call
add
pop
add
mov
mov
cmp
je
mov
mov
mov
push
push
push
push
call
add
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
push
mov
push
mov
mov
add
mov
mov
sub
mov
rdtsc
mov
mov
cmp
je
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
add
cmp
jne
mov
mov
mov
xor
mov
mov
or
mov
mov
mov
cmp
je
mov
cmp
jne
xor
mov
mov
push
push
push
push
call
add
mov
push
push
push
push
call
add
mov
push
push
push
push
call
add
mov
push
call
add
call
sub
mov
mov
cmp
jne
mov
xor
mov
rdtsc
mov
mov
sub
mov
mov
add
mov
mov
cmp
jne
sub
mov
mov
test
je
xor
mov
mov
mov
mov
mov
mov
test
jne
mov
pop
cmp
jne
mov
mov
mov
or
mov
mov
pop
sub
mov
mov
pop
mov
and
test
je
cmp
je
mov
mov
cmp
jne
xor
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
add
mov
cmp
jne
push
push
call
add
push
push
push
push
push
push
call
add
push
mov
push
push
push
push
call
add
push
push
push
push
call
add
mov
add
mov
mov
cmp
je
mov
cmp
jne
xor
mov
mov
mov
mov
cmp
jne
cmp
jne
cmp
jne
mov
test
jne
sub
mov
cmp
je
mov
mov
cmp
je
cmp
jne
cmp
jne
mov
mov
mov
cmp
jne
add
mov
cmp
je
cmp
je
xor
mov
mov
mov
cmp
je
mov
decl
mov
sub
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
sub
mov
rorl
mov
xor
cmp
jne
cmp
jne
add
mov
cmp
je
mov
mov
add
cmp
jne
mov
add
test
jne
cmp
jne
mov
xor
test
je
xor
cmp
je
mov
sub
mov
mov
mov
mov
rorl
or
mov
cmp
jne
add
mov
mov
add
mov
mov
mov
jmp
mov
mov
sub
mov
xor
push
call
add
cmp
jne
mov
push
push
push
push
call
add
xor
push
call
add
cmp
jne
xor
cmp
je
cmp
jne
mov
xor
test
jne
mov
call
mov
push
push
call
add
sub
mov
pop
mov
cmp
jne
test
jne
mov
test
jne
cmp
jne
add
mov
pop
sub
mov
push
push
call
add
mov
pop
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
mov
mov
cmpl
je
mov
mov
add
mov
mov
add
mov
jmp
mov
push
lea
push
call
lea
push
call
mov
mov
push
lea
push
call
lea
push
mov
push
call
mov
movl
movl
movl
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
cmpl
je
mov
mov
mov
movl
jmp
mov
add
mov
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
je
mov
movzwl
mov
movzwl
cmp
jle
mov
mov
mov
cmpl
je
mov
test
je
mov
mov
mov
movsbl
cmp
jl
movsbl
cmp
jg
movsbl
add
mov
mov
mov
mov
movsbl
cmp
jl
movsbl
cmp
jg
movsbl
add
mov
movsbl
movsbl
cmp
je
jmp
movsbl
test
jne
mov
mov
jmp
mov
add
mov
mov
add
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
cmpl
je
cmpl
jbe
mov
movsbl
test
je
mov
mov
mov
mov
add
mov
mov
cmpl
je
mov
cmpl
je
mov
mov
mov
cmp
jae
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
ja
mov
mov
cmp
jb
mov
mov
mov
add
cmp
jae
mov
mov
sub
mov
mov
add
mov
jmp
jmp
movl
jmp
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
add
mov
mov
movsbl
mov
movsbl
cmp
jne
mov
movsbl
test
jne
mov
mov
movzwl
mov
mov
add
mov
jmp
mov
add
mov
mov
add
mov
jmp
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
cmpl
je
mov
mov
mov
mov
mov
test
je
mov
movsbl
mov
movsbl
xor
mov
movsbl
add
mov
mov
mov
movsbl
test
jne
jmp
mov
add
mov
mov
add
mov
jmp
mov
sub
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
push
mov
cmp
je
mov
cmp
je
sub
mov
cmp
je
mov
push
mov
or
cmp
jne
mov
cmp
jne
sub
mov
cmp
je
mov
mov
mov
mov
cmp
jne
mov
mov
sub
mov
mov
mov
xor
cmp
je
sub
mov
cmp
je
or
mov
mov
xor
cmp
jne
mov
pop
sub
cmp
je
sub
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
mov
mov
mov
pop
sub
test
je
mov
sub
mov
mov
mov
pop
mov
cmp
je
xor
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
mov
push
add
mov
push
mov
mov
add
mov
mov
mov
mov
cmp
je
mov
mov
and
mov
mov
cmp
jne
cmp
je
mov
xor
mov
cmp
jne
mov
cmp
jne
xor
mov
pop
cmp
je
sub
mov
cmp
je
add
mov
mov
mov
mov
mov
cmp
jne
mov
pop
sub
mov
mov
cmp
jne
mov
mov
test
je
mov
pop
mov
test
je
mov
mov
xor
mov
cmp
jne
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
mov
push
add
mov
cmp
jne
mov
mov
add
mov
mov
push
cmp
je
add
mov
mov
mov
cmp
je
mov
cmp
je
sub
mov
mov
mov
mov
cmp
je
cmp
je
cmp
je
mov
sub
cmp
je
cmp
jne
xor
mov
cmp
je
mov
or
mov
mov
add
mov
add
mov
mov
cmp
jne
cmp
jne
cmp
je
add
test
jne
xor
mov
mov
mov
mov
pop
mov
pop
mov
sub
cmp
jne
mov
xor
mov
mov
cmp
je
mov
xor
cmp
je
xor
mov
pop
cmp
jne
mov
leave
ret
add
add
add
arpl
jbe
bound
adc
xor
nop
icebp
or
cs
call
jmp
fisubrl
inc
dec
pmulhw
aaa
dec
jecxz
cli
nop
push
scas
rolb
std
outsb
mov
mov
adc
sub
out
sbb
jge
test
push
pop
loope
mov
pop
out
das
jmp
pusha
mov
xor
shr
jge
jle
or
ror
cmp
mov
inc
aas
out
mov
adc
negb
int3
gs
adc
adc
push
pop
xor
jnp
add
int
popl
push
cmpsl
test
int
mov
mov
inc
aam
xchg
adc
inc
xchg
adc
cmp
xchg
popa
add
faddp
sub
xor
and
mov
inc
nop
scas
xchg
xchg
and
adc
imul
cld
pop
es
insb
mov
mov
insb
push
clc
addr16
lds
cmp
inc
pop
cmp
and
sub
mov
mov
adc
and
xor
jl
mov
iret
jns
popa
jmp
pop
xchg
mov
push
dec
paddusw
pop
push
xchg
mov
in
hlt
push
rcrb
sub
mov
cmpb
insb
sub
pop
loopne
iret
and
push
ja
cmc
rolb
cltd
ror
aam
jg
les
push
pop
push
mov
inc
lock
stos
sub
adc
mov
push
mov
rcrb
push
das
dec
sub
jecxz
pop
or
xor
orl
pusha
ds
movsl
daa
xchg
and
iret
shlb
cmp
loope
adc
cmpl
sub
pop
bound
push
lea
xchg
clc
jb
jp
lods
popf
scas
cmp
es
fs
pop
cld
and
mov
clc
popa
int3
push
sub
inc
lahf
mov
mov
stc
adc
out
test
outsb
mov
push
bound
xchg
aam
in
adc
das
and
ret
sub
push
nop
add
stos
test
cmp
adc
dec
mov
in
mov
imulb
aam
mov
jp
popf
cmp
hlt
outsl
stos
xor
outsl
or
mov
cmc
cmp
enter
jae
mov
xor
cmp
out
inc
mov
loop
mov
scas
shll
xchg
mov
loopne
xorl
call
out
shr
xchg
ja
ljmp
push
rcrl
shll
mov
ja
call
das
aam
je
sbb
pop
sbb
inc
mov
fwait
mov
into
lahf
div
or
pushf
scas
mov
xchg
scas
add
outsb
sub
lcall
pop
jo
or
repnz
cmpsl
or
pop
dec
sbb
sub
dec
das
pop
and
scas
inc
lock
jo
cmpsl
push
test
nop
jmp
sub
mov
and
xchg
cltd
test
xor
orl
dec
into
fsubs
loopne
adc
push
scas
repz
cmc
js
xchg
rcrl
inc
xchg
test
jb
xchg
sub
xor
sub
outsl
and
mov
jle
jp
repnz
mov
sbb
js
xor
jmp
xor
int3
dec
fsub
cltd
push
push
xchg
adc
outsl
pop
cld
inc
neg
insl
pop
outsb
sub
inc
mov
test
sub
jno
jne
jl
outsb
aam
jp
cs
lods
mov
and
es
das
mov
shlb
xchg
call
into
mov
ret
push
and
add
jne
mov
fmuls
incb
jb
cmpsb
aas
dec
pop
cmp
xor
or
cmp
dec
push
pop
addr16
push
inc
lods
cmp
dec
pop
sbb
notl
dec
xor
cmp
enter
lcall
shrl
inc
ret
lock
add
enter
pop
mov
sbb
jmp
fsub
sub
pop
lahf
out
frstor
xor
insb
das
data16
lods
jbe
cmp
jl
push
and
sub
xor
das
movsb
cmpsl
sbbb
lods
mov
stos
repz
das
mov
adc
mov
sar
mov
xlat
fcmovnbe
mov
xor
movsl
inc
jp
lcall
cltd
nop
mov
cmp
adc
push
and
and
int
inc
in
mov
adc
adc
mov
jbe
xor
and
push
leave
fsubr
mov
outsl
shl
cmpsl
cltd
je
pop
cmp
pusha
xchg
push
fsts
test
push
cmpsl
xchg
mov
fucomip
adc
inc
lea
in
jo
lods
cmp
mov
test
push
push
das
xchg
shlb
in
mov
sub
lds
into
cmpsb
ftst
mov
cwtl
insb
jae
mov
aas
add
jne
xchg
lea
mov
xchg
xchg
idiv
mov
sub
xor
pop
adc
or
xchg
and
cmp
pop
mov
insb
or
lds
inc
cmp
and
and
mov
stos
mov
jb
scas
sti
inc
adc
add
inc
xchg
mov
adc
xchg
sbb
call
inc
adc
lea
cmp
iret
movsl
or
mov
xor
and
xchg
repnz
or
jb
stos
rcrl
test
gs
idivl
scas
cmp
mov
nop
and
jnp
jb
add
out
ja
insb
push
imul
xor
and
sbb
out
enter
sub
movsl
or
xchg
lahf
outsl
dec
jne
roll
mov
fdivrl
dec
xchg
loop
shll
and
push
pop
sarb
in
sbb
mov
inc
pop
fcomps
push
or
or
rorl
cmpsb
add
je,pt
xor
fxch
sub
call
mov
roll
pop
les
scas
push
scas
in
in
lahf
les
outsl
sbb
lods
mov
push
cmp
mov
stos
fiaddl
into
cltd
sbb
movsl
adc
int
jbe
sahf
stos
js
inc
stc
fiadds
loop
inc
add
mov
leave
jmp
test
inc
adc
mov
dec
jbe
and
cmp
in
pop
fcmovnu
int
outsl
pop
pop
jl
outsb
jbe
adc
stos
ret
push
mov
push
cmpb
pusha
jle
in
mov
enter
xor
dec
inc
icebp
jmp
lea
outsl
jmp
jg
sbb
mull
fs
in
popf
popa
stos
shll
add
not
jmp
mov
jo
push
loop
xchg
test
pusha
sub
insl
into
cwtl
dec
call
cmc
pop
jecxz
popl
fstpt
mov
push
xchg
cwtl
test
mov
xor
add
cmp
push
adc
sbbl
shrl
xchg
imul
aaa
and
push
pop
loopne
js
mov
jno
jo
pop
jl
mov
stc
pop
call
push
xchg
sub
xor
push
ret
dec
testl
mov
dec
data16
loop
dec
jo
xchg
xchg
dec
jecxz
cltd
xchg
popf
outsl
sbb
cmp
push
xchg
push
test
fwait
mov
in
xchg
push
push
loopne
roll
inc
pop
add
mov
orb
and
push
and
and
or
add
add
push
push
add
push
add
or
pop
add
push
add
add
movsb
nop
and
pop
add
add
shlb
dec
xor
outsb
add
adc
add
add
add
add
lods
add
test
inc
adc
xor
add
add
inc
enter
add
add
and
add
addb
inc
add
inc
add
add
add
adc
add
add
add
jb
inc
add
dec
andb
add
add
add
add
or
inc
test
andb
cltd
add
add
xor
add
add
push
inc
test
mov
dec
push
add
inc
adc
add
rolb
add
dec
add
sub
imul
add
adcb
pop
clc
add
add
addl
rclb
addb
mov
and
inc
add
add
add
adc
sbb
add
or
or
jo
push
adcb
add
adc
adcb
add
adcb
add
and
pop
or
test
adc
add
add
inc
add
add
adcb
add
add
or
add
js
addb
andb
jb
subl
or
add
add
adc
add
dec
andl
inc
out
adc
addb
add
adcb
add
addb
orb
adc
and
inc
adc
add
pop
add
add
pusha
add
andb
or
push
nop
inc
adc
xor
adc
xchg
add
adc
xchg
inc
add
push
add
dec
and
add
adc
inc
dec
fadds
lock
add
add
add
inc
add
add
push
inc
add
add
or
adc
xor
add
add
or
and
and
add
dec
js
dec
add
sub
add
add
add
add
adc
inc
sub
add
dec
jo
pop
cwtl
inc
dec
add
test
addb
add
or
adc
add
xchg
add
nop
addb
add
adc
imul
or
cmp
adc
inc
add
xor
add
inc
adcb
addb
add
inc
add
mov
add
dec
inc
add
add
adc
and
inc
addb
inc
inc
add
or
add
add
inc
mov
dec
sbb
stos
inc
add
addb
or
adc
add
inc
dec
inc
and
add
leave
test
add
adc
mov
push
add
or
shrb
adc
adc
add
add
dec
and
inc
add
add
add
adc
and
inc
adc
and
rorb
add
add
addl
adc
inc
add
push
addb
mov
adc
adc
test
adc
movsb
test
mov
cwtl
adc
inc
add
addb
add
and
add
inc
or
add
add
fs
add
adc
push
cmpsl
add
and
add
inc
adc
pushf
xor
andb
add
add
or
add
add
or
adc
add
dec
rolb
test
adc
add
add
add
add
add
inc
add
inc
add
inc
add
add
add
inc
inc
adc
adc
add
add
inc
add
add
push
add
add
nop
pusha
and
adc
adc
add
adc
and
add
add
add
dec
push
scas
inc
mov
add
or
add
mov
and
add
sub
orb
rcll
addb
add
add
mov
inc
test
nop
add
int3
mov
imul
add
add
lds
adc
add
inc
adc
inc
add
push
and
or
add
addb
add
xor
xchg
add
enter
andb
movb
adc
adc
add
mov
or
or
push
sbb
add
add
add
add
nop
inc
ror
addb
push
xor
add
add
add
inc
add
rorb
xchg
inc
adc
or
and
sub
add
push
add
push
or
add
test
add
add
add
xor
add
add
or
add
and
addb
push
add
add
lds
and
dec
addb
mov
add
add
add
add
add
sub
add
add
mov
adcb
add
add
adc
adc
add
pop
imul
add
add
add
or
adc
add
inc
add
add
inc
add
or
inc
add
or
mov
fadds
inc
add
add
push
inc
xchg
add
inc
mov
adc
add
add
movsb
and
add
and
add
nop
add
add
and
or
adc
add
add
add
xchg
add
add
inc
or
add
inc
add
add
adc
and
or
and
add
call
add
adc
dec
add
and
inc
add
add
add
addb
and
add
jb
or
adcb
bound
xchg
or
sbb
ret
xor
mov
add
add
and
and
add
dec
inc
inc
adc
sub
add
cs
add
sub
adc
inc
add
add
lock
add
inc
adc
pop
subb
inc
dec
inc
sbb
add
xor
add
add
mov
or
add
and
mov
inc
inc
nop
push
mov
or
adc
adc
les
aad
add
dec
inc
nop
xor
xor
sub
addb
add
inc
inc
add
add
add
inc
add
les
adc
add
dec
add
add
inc
inc
inc
push
rolb
loope
xor
add
add
push
add
rorb
and
add
push
or
and
sub
adc
adc
mov
mov
push
sbb
mov
adcb
add
mov
dec
test
dec
add
add
add
inc
push
dec
add
add
or
sub
add
add
add
sbb
push
adc
add
je
add
adc
sub
addb
add
add
sbb
addb
inc
push
push
or
and
inc
loop
add
test
add
add
adc
or
dec
dec
add
add
add
add
add
adc
add
push
or
add
mov
sub
add
or
add
addb
nop
or
inc
add
add
rolb
inc
add
pusha
add
adc
inc
add
add
jp
add
add
push
add
rcll
dec
adc
nop
sub
and
sahf
add
or
test
and
mov
sub
add
add
mov
add
inc
adc
nop
addb
inc
sbb
sbb
add
add
pop
add
add
movsb
adc
add
add
and
inc
inc
and
and
add
inc
add
add
add
or
mov
add
add
add
add
addb
add
add
add
add
inc
adc
and
add
mov
add
dec
push
or
ret
mov
add
add
adc
add
add
and
adcb
adc
add
adc
inc
add
and
inc
add
mov
add
addl
add
mov
test
add
push
add
rolb
add
or
pusha
and
roll
add
add
pusha
enter
test
add
add
push
les
popa
lock
add
add
mov
pusha
loopne
add
add
dec
add
or
addb
inc
add
pop
add
add
cmpb
add
dec
and
addb
jno
xchg
and
mov
and
dec
dec
add
add
push
add
mov
adcb
add
or
xor
and
push
add
add
add
or
add
and
popa
addb
add
ror
mov
add
add
addb
add
adc
add
aam
add
addb
adc
je
push
add
xchg
pop
ljmp
nop
or
adcb
mov
nop
mov
adc
xor
and
add
add
add
adc
add
addb
add
adc
adc
add
add
adc
or
inc
xchg
add
add
dec
add
or
add
or
inc
clc
pop
inc
popa
popa
add
adc
add
inc
jo
add
add
dec
rcll
or
inc
push
add
addb
xor
ret
inc
add
add
mov
add
add
add
inc
add
add
add
or
adcl
or
cmpsl
or
sub
inc
inc
add
sbb
add
add
add
addb
add
adc
xchg
adcb
add
or
and
add
add
inc
or
addb
adc
add
sbb
addb
add
add
inc
stos
add
lds
add
add
add
addl
add
add
add
add
cmpsb
adc
add
and
xor
add
add
push
inc
inc
inc
addb
nop
sbb
add
add
add
add
roll
cmp
add
add
inc
sbb
push
add
or
stos
add
add
and
jo
add
add
or
dec
add
add
and
push
adc
add
add
inc
or
add
dec
mov
add
sub
add
or
adcb
mov
add
inc
addb
adc
add
bound
inc
add
adc
add
andl
or
inc
add
adc
cmp
or
mov
add
mov
test
addb
inc
addl
add
mov
andb
inc
or
inc
push
mov
push
movb
popa
adc
mov
sbb
add
add
test
adc
and
and
add
inc
or
test
xchg
addb
add
inc
push
adc
or
add
adc
sub
add
arpl
inc
and
adc
add
inc
inc
sub
sub
inc
and
add
add
mov
add
roll
inc
shlb
les
adc
sub
rolb
or
add
adc
movb
addl
adc
push
push
rclb
sbb
add
mov
add
rolb
and
adc
add
aad
add
add
shlb
or
xor
add
mov
add
mov
inc
inc
add
add
or
add
adc
adc
bound
adc
nop
add
sbb
rorb
addb
add
add
xchg
and
add
add
inc
add
push
orb
or
add
or
mov
pusha
mov
or
pop
add
rolb
addb
or
add
stos
inc
or
mov
mov
enter
sub
dec
inc
adc
add
add
and
add
add
add
pusha
add
adc
add
orb
add
pusha
lret
pushf
nop
pusha
add
and
dec
add
add
inc
enter
and
enter
add
adc
xor
add
add
inc
add
inc
adc
sub
sbb
notb
inc
add
and
or
or
rolb
add
add
adcb
or
jl
adc
or
add
xor
xorb
adcb
and
or
adc
addb
push
rolb
add
mov
add
adc
or
or
mov
add
add
adc
or
add
test
adc
add
and
addb
add
inc
and
add
adc
and
add
add
adc
add
test
add
push
add
add
or
dec
and
dec
sub
or
add
or
inc
pshufw
xchg
jecxz
add
sub
add
test
add
add
inc
adc
add
xchg
add
dec
and
leave
cwtl
adc
mov
sbb
add
or
inc
and
add
add
add
orl
or
adc
add
add
add
add
and
and
sub
inc
add
add
adc
cmp
aam
add
addb
inc
add
fadds
add
add
add
test
add
inc
add
int3
inc
add
inc
inc
add
inc
inc
add
sub
add
add
loop
add
mov
inc
add
pop
inc
add
movsb
inc
add
adc
add
inc
add
js
add
mov
add
mov
add
inc
add
in
add
or
add
inc
add
clc
inc
add
add
add
out
inc
add
ljmp
add
inc
add
sahf
inc
add
loopne
add
dec
inc
add
mov
add
mov
add
cmp
add
inc
add
addb
push
inc
add
adc
add
sub
add
inc
add
xchg
inc
add
sbb
add
incb
cmp
add
fs
add
add
add
mov
add
add
inc
add
xor
add
inc
add
and
add
add
and
add
add
add
aam
add
push
inc
add
nop
dec
add
movsb
inc
add
call
dec
add
add
add
mov
dec
add
dec
add
add
add
or
add
pop
dec
add
aam
add
testb
insb
dec
add
xchg
add
dec
add
sub
add
add
add
dec
add
int3
dec
add
loop
add
out
add
mov
add
dec
add
into
dec
add
lcall
add
dec
add
sub
add
add
es
add
ds
add
test
add
dec
add
pusha
dec
add
push
dec
add
test
add
sbb
add
pop
dec
add
pop
dec
add
dec
dec
add
add
add
dec
add
rorb
dec
add
lret
add
dec
add
and
add
dec
add
mov
add
dec
add
scas
dec
add
dec
dec
add
add
add
pop
cmp
rol
xlat
push
cmpsb
fcompl
mov
mov
orl
xchg
push
sbb
test
stos
scas
lods
push
push
sub
mov
lcall
jb
mov
es
aaa
sbb
movsl
dec
xchg
xor
in
fldt
push
add
jbe
js
adc
test
js
popf
add
pop
in
sahf
inc
xor
dec
cmp
pop
xor
push
popa
leave
loop
adc
push
fisubl
and
mov
mov
xor
lock
or
cmp
ljmp
lcall
adc
inc
jne
or
pop
stos
imul
mov
cltd
sub
sbb
das
jne
call
mov
xchg
cld
addb
ror
mov
sbb
inc
out
les
dec
jle
lods
das
mov
movsb
lcall
or
push
xchg
pop
dec
in
out
out
xor
sahf
pushf
jp
sti
push
push
es
in
movsb
inc
mov
hlt
pushf
out
cli
add
in
out
mov
shrl
scas
lea
xchg
inc
call
push
dec
lods
mov
pop
sahf
test
and
addr16
sub
sahf
das
sbb
out
loop
mov
jno
mov
lods
scas
mov
data16
aaa
adc
lods
push
fstpl
bndldx
jns
dec
mov
pop
out
pop
bound
stc
push
mov
sub
jge
pop
fmul
xchg
add
mov
or
push
inc
sub
xchg
sub
jg
out
out
push
ss
imul
push
xchg
out
push
test
test
or
ss
add
inc
fcompl
or
test
sbb
je
icebp
inc
xor
decb
dec
sbb
sub
dec
push
out
sub
jne
lea
adc
push
and
and
mov
mov
inc
pop
out
out
jge
sub
ret
test
pop
pop
adc
jo
lods
daa
mov
sbb
dec
sbb
iret
mov
orb
out
pop
je
cmc
outsl
push
sub
add
jmp
sbb
sub
pop
cmpsl
insb
pop
jo
mov
orb
nop
mov
je
rcr
mov
mov
xchg
mov
movsb
cmp
jle
lods
sub
jecxz
scas
xor
out
and
jnp
push
jg
lahf
inc
push
add
adc
lds
fidivs
sub
test
out
je
outsl
scas
outsl
test
jl
popf
out
pop
jo
shll
xchg
ss
adc
incb
adc
push
push
add
daa
xchg
cmp
stos
sub
les
test
xchg
int
fisttpl
adc
jmp
jg
push
clc
out
xchg
out
out
addr16
insb
clc
data16
lcall
popa
je
adc
inc
add
rclb
push
xchg
lods
imul
add
pop
and
daa
aad
sub
pop
dec
pop
dec
cmp
xchg
bound
or
enter
jmp
mov
pop
dec
ret
push
imull
clc
mov
lock
iret
das
mov
add
outsl
rolb
push
and
mov
xchg
popf
loopne
insb
xchg
mov
imul
in
dec
in
ret
add
mov
pop
dec
mov
jecxz
add
sub
xchg
push
xchg
mov
jge
shrl
and
rcrl
dec
shlb
xor
movsl
adc
mov
xor
jecxz
pop
and
add
out
test
je
out
inc
ret
xchg
insb
sub
dec
xchg
sub
mov
xchg
push
out
into
scas
cltd
xchg
jb
lsl
cmp
and
hlt
lods
pop
jge
cmc
pop
ja
mov
jb
mov
test
mov
jge
adc
sahf
add
int
lock
dec
pop
adc
dec
mov
lahf
xchg
mov
dec
mov
fs
xor
xchg
bound
xchg
cmp
lahf
int
adcl
mov
inc
mov
cmp
mov
das
and
mov
stos
mov
test
jae
sub
in
pop
jo
ret
inc
push
jae
xor
stos
inc
rolb
lahf
out
cwtl
mov
fisttps
mov
xchg
les
and
ret
and
daa
pop
pusha
fistl
imul
mov
test
mov
push
cmp
pop
icebp
adc
xorl
clc
xor
movsl
enter
mov
negl
iret
mov
mov
add
xor
xchg
xchg
sbb
add
lods
adc
xchg
xor
dec
scas
inc
inc
jecxz
xchg
and
jb
dec
aad
and
sti
adcl
hlt
imul
adcl
mov
xchg
mov
aam
shrl
inc
mov
iret
arpl
dec
pop
add
xchg
mov
test
xchg
mov
add
or
dec
pop
mov
idivb
or
das
daa
xor
nop
dec
inc
clc
cbtw
adc
push
dec
out
add
mov
push
out
test
cmpl
call
or
lret
movsl
out
cltd
push
ret
sub
and
jo
jo
sbb
lret
xor
ret
shlb
add
cmp
sbb
adc
js
loope
repz
jae
mov
shr
out
xor
mov
outsb
lods
mov
mov
and
insl
mov
adc
xchg
or
mov
orl
nop
gs
sub
mov
mov
into
mov
es
lret
sub
mov
mov
add
inc
imul
lds
imulb
stc
divb
and
adc
sbb
pushf
push
outsl
dec
iret
push
ficompl
or
dec
jmp
insl
gs
out
repz
mov
lcall
addr16
insl
add
push
inc
xchg
cmp
inc
dec
in
into
mov
jmp
mov
lea
test
pushf
shrl
mov
xchg
inc
add
lods
bound
mov
push
cwtl
inc
std
pop
jp
cmpsl
adc
bound
cld
push
fdivs
ror
push
inc
int3
imul
inc
mov
lret
jecxz
pop
ja
push
lods
outsl
dec
adc
push
scas
jns
stc
or
inc
xor
xlat
lods
stos
outsl
pop
push
jmp
dec
xchg
lds
push
pusha
das
out
fcmovnb
push
aam
bound
in
inc
fsubr
xchg
sahf
inc
addr16
insb
mov
mov
aas
dec
pop
dec
push
int3
jp
xor
repnz
fcompl
sahf
out
mull
test
adc
outsl
lret
stos
imul
sbb
xchg
in
jo
leave
sbb
cmp
rclb
std
sbb
fcmovb
in
pop
and
test
test
push
vmwrite
and
or
inc
je
inc
sub
int3
adc
mov
in
je
mov
push
sub
daa
daa
inc
clc
push
inc
adc
xchg
call
das
dec
xchg
sub
mov
push
and
mov
inc
pop
ss
pusha
pop
in
aas
icebp
sbb
popf
sahf
in
adc
mov
and
jge
ret
into
mov
divl
push
cmp
cmpsl
lcall
sub
cwtl
movsl
int3
ljmp
lahf
mov
jge
push
test
test
or
mov
mov
add
push
inc
pop
inc
mov
sbb
outsl
incb
popf
fstl
vphaddubq
addl
pop
cwtl
sbb
xchg
sub
xchg
mov
or
pop
mov
movsl
xor
jno
movsb
push
out
xchg
mov
inc
lcall
test
test
xchg
jle
jl
sub
aad
cmp
sub
scas
shl
jge
ljmp
movsl
ja
mov
addr16
or
jle
mov
aaa
adc
fsts
and
outsl
adc
movsl
mov
mov
in
nop
sahf
mov
push
data16
pop
aad
adc
cmp
mov
xchg
mov
roll
mov
test
adc
cld
jo
mov
js
and
aam
sub
out
lcall
imul
fwait
and
int3
add
stos
fcomps
mov
shrl
jl
jne
push
test
cmp
lcall
adc
outsl
pop
clc
xchg
pushf
add
xchg
inc
lcall
push
pop
pushf
jnp
dec
jmp
xchg
test
push
pop
mov
add
mov
dec
mov
stos
mov
mov
xor
mov
inc
mov
data16
cmc
hlt
sub
ja
push
jo
fisubrs
repz
inc
jbe
push
xor
jmp
je
push
loope
sahf
lahf
mov
nop
push
push
in
and
adc
psrad
mov
scas
adc
jmp
fs
shlb
push
cmp
jnp
adc
push
out
mov
incb
push
or
push
mov
ret
mov
fisubs
push
out
xchg
sti
jo
inc
rcl
mov
push
lahf
ja
xchg
add
dec
inc
int3
out
inc
xchg
aad
and
or
xor
sarl
sbbb
scas
or
pop
mov
iret
ljmp
xchg
push
mov
lret
shlb
adc
xchg
fs
lock
push
sub
mov
ja
adc
loop
fwait
out
jp
cmp
das
es
ja
leave
je
pop
insb
sub
cmpsl
sarl
xchg
pusha
aaa
dec
stc
fbstp
xchg
ds
push
test
mov
pop
nop
mov
mov
sbbb
lds
dec
and
sti
insb
popa
xor
mov
out
daa
push
inc
xor
test
push
adc
mov
sbb
jo
xlat
ss
add
xchg
adc
insl
mov
inc
adc
add
jecxz
mov
dec
outsl
rol
jl
xchg
pop
and
mov
out
roll
sbb
icebp
sub
test
inc
in
jmp
dec
es
mov
loope
sarb
add
jl
fcomps
repnz
push
pop
push
gs
cltd
mov
cmp
mov
mov
outsb
add
pop
mov
mov
test
in
jmp
stos
add
push
push
aaa
adc
adc
adc
divb
incb
cwtl
insb
jmp
xor
mov
adcl
or
xchg
sub
lcall
pop
imul
sbb
insb
push
mov
add
in
outsl
lsl
push
and
popf
mov
out
adcl
shrl
in
xchg
sarl
dec
xchg
arpl
ja
pop
leave
and
into
aaa
mov
lock
test
jne
sub
outsl
sub
in
xchg
fsubrl
pushf
pop
mov
or
orl
fsubl
ljmp
mov
sub
dec
jo
scas
add
jns
xchg
sub
push
cmpsl
add
adc
xchg
jo
jp
scas
adcl
mov
and
sbb
jle
mov
test
pusha
popf
sub
sbb
mov
out
xchg
mov
jmp
sbb
mov
xchg
hlt
xchg
shrb
lret
loope
aas
xchg
dec
fiaddl
adc
mov
add
mov
das
icebp
jecxz
sbb
or
push
pop
incb
xchg
push
xchg
je
addr16
mov
push
fsubr
clc
mov
mov
jmp
inc
and
stos
into
sar
cs
jb
push
jmp
stos
xchg
cmp
lods
mov
ret
call
leave
mov
dec
xor
sbb
ret
rol
mov
mov
loop
out
pop
adc
shrl
cltd
hlt
add
ret
aad
push
adc
jns
xchg
cs
hlt
cmpsb
clc
daa
xor
inc
loopne
push
outsl
mov
jne
scas
outsb
in
pop
aam
and
scas
cli
push
mov
adc
sbb
mov
shll
sub
push
fildl
imul
push
daa
mov
add
inc
jbe
pop
xchg
outsl
test
lcall
jle
loopne
mov
jne
mov
pop
sarl
inc
pop
insb
cmp
rorb
xor
mov
loop
div
mov
in
lock
mov
loop
popf
sub
cmpb
add
push
mov
jns
je
dec
pop
mov
pusha
lahf
push
pop
daa
imul
or
mov
sbb
push
popf
inc
imul
test
pop
cmp
inc
es
dec
sahf
popf
dec
sub
or
lahf
inc
jge
push
mov
inc
lahf
stos
xchg
ds
movsl
adcl
hlt
xchg
int3
dec
in
xor
call
scas
add
test
lret
and
bound
add
push
ss
pop
push
test
sub
xor
cmpsl
dec
push
push
jbe
xor
test
xchg
and
inc
or
rorb
dec
in
mov
mov
jns
scas
add
mov
inc
mov
scas
pop
leave
jl
push
inc
pop
pop
mov
popa
mov
jno
sbb
xchg
cmpsl
jo
call
enter
int
lahf
pop
pop
sbb
mov
and
icebp
cmp
mov
mov
xor
jne
jge
rclb
inc
pop
fistl
imul
push
pushf
push
cmpsl
inc
mov
cs
xchg
jl
cmpsb
test
fidivl
in
dec
dec
jg
push
cli
jno
xorb
mov
push
addr16
dec
xlat
xor
add
imul
pushf
scas
push
dec
inc
xor
sbb
stos
mov
or
dec
mov
sbb
jg
adc
xchg
loope
cs
dec
pop
out
pop
add
ficompl
test
adc
call
xor
inc
cmpsb
cmp
xor
mov
push
pop
sub
dec
imul
adc
xlat
mov
jl
push
jnp
pop
push
push
jae
std
call
imul
rcll
mov
clc
aad
jo
outsl
or
adc
xchg
out
fldt
jo
sbbl
test
jne
pop
sub
xchg
pop
stos
mov
mov
ds
mov
sub
enter
popf
jae
or
mov
fiaddl
push
cmp
lods
cmpsb
inc
cmc
inc
bound
lcall
jl
aad
into
xchg
jl
pop
and
mov
movsl
mov
aaa
mov
outsl
shlb
cmpsb
cmp
jecxz
dec
and
in
popa
gs
fwait
lods
jecxz
jne
add
mov
or
inc
pop
scas
lock
loope
imul
xor
xchg
pop
mov
cmp
das
lret
cltd
lcall
lods
lret
cmp
jo
and
push
xchg
icebp
inc
das
ret
mov
xor
push
cmp
in
mov
scas
or
push
jae
xor
das
fbstp
dec
pop
insl
leave
pop
cmp
jbe
mov
xchg
xchg
das
or
jmp
pop
pop
ja
adc
shl
inc
out
in
sbb
mov
push
push
stos
call
out
lods
iret
xchg
adc
shl
popf
adc
mov
pop
xchg
sub
mov
mov
mov
jo
int
push
jno
sub
lds
xchg
jno,pt
xchg
test
je
push
inc
flds
push
orl
dec
pop
rclb
imull
cmp
testb
std
push
mov
movsl
mov
jmp
mov
int
outsb
shl
out
push
pop
lods
jns
dec
cmp
mov
lret
fwait
aad
loope
rorl
jle
sbb
std
inc
insl
add
add
pop
and
imul
cld
xchg
cltd
jbe
xor
xchg
jns
dec
scas
insb
jecxz
dec
stc
cmpl
mov
jns
pop
stos
cld
fbstp
leave
and
loopne
outsb
dec
push
repnz
mov
xor
mov
mov
test
lods
test
inc
jo
gs
sarl
mov
or
gs
xor
jle
pmullw
outsl
cmpsb
push
mov
jge
fwait
cmp
dec
adc
jns
xchg
mov
mov
jo
push
nop
sub
mov
xchg
mov
jecxz
repnz
sub
fsub
or
insb
outsl
in
ss
arpl
rcl
movsl
jns
jge
pop
mov
xor
lahf
rcll
gs
inc
addr16
mov
dec
fcomps
push
xchg
mov
pop
xchg
dec
icebp
xor
or
and
mov
mov
mov
sarl
inc
loop
call
das
sub
jne
mov
lock
push
mov
iret
imul
fstl
and
test
mov
pop
mov
jns
jg
inc
push
mov
add
mov
mov
call
das
popf
mov
xchg
dec
cmpsl
push
aam
and
es
and
lcall
dec
lea
push
imul
add
jne
mov
jmp
xor
pop
xchg
cmp
add
std
jecxz
subl
inc
ja
push
sub
daa
sub
lret
jge
push
dec
lods
sub
out
jo
pop
lock
or
inc
jmp
test
mov
ss
cmp
push
sub
jne
adc
outsl
in
inc
mov
or
fildl
push
add
mov
inc
ds
lods
fmuls
fcomp
mov
xor
scas
call
and
xchg
mov
roll
xchg
sbb
sbb
outsb
sbb
int
sbb
dec
pusha
push
divl
lret
and
sbb
lods
push
sbb
iret
xor
dec
ja
jno
out
lods
push
clc
xchg
push
fsts
mov
or
push
sbb
lea
xlat
mov
and
mov
mov
dec
out
mov
inc
pop
or
add
push
cs
test
push
das
es
daa
sti
incl
push
inc
add
aaa
movsl
subb
mul
dec
repz
cltd
mov
mov
cmp
into
pushf
xor
mov
mov
lea
inc
mov
or
add
pop
push
cli
pop
sahf
sub
mov
out
sarl
mov
mov
jno
push
cmc
and
mov
inc
mov
inc
inc
adc
dec
pop
xchg
movsl
stos
repz
insl
mov
and
shl
call
push
xor
push
sbb
adc
xor
pop
mov
sbb
push
lret
add
sbb
test
rol
and
xchg
outsl
scas
test
mov
test
nop
daa
jns
mov
sub
mov
std
addb
xor
loopne
or
in
pop
sbb
add
outsl
inc
mov
or
out
pop
pop
mov
mov
push
iret
push
pop
jno
dec
mov
push
xchg
aad
mov
nop
mov
stos
inc
mov
jp
dec
jge
pop
and
out
mov
mov
inc
xor
repz
xchg
inc
dec
mov
push
and
push
cltd
sti
out
outsl
or
jb
push
popa
cmp
xchg
fsubr
sbb
addb
xchg
cli
scas
push
mov
inc
xchg
das
into
inc
jle
cltd
pop
pop
mov
sub
test
cmp
jp
mov
add
mov
ds
ret
fcompl
int3
cs
bound
repnz
pop
dec
scas
inc
cmpsl
push
outsl
bound
insl
sub
mov
jno
or
into
or
cmp
sbbl
xchg
pop
sti
xchg
repz
inc
ds
xlat
dec
les
adc
mov
in
pop
push
int
clc
dec
sahf
lds
scas
xor
sti
lcall
sub
push
orb
xchg
pop
jbe
insl
sti
lods
push
out
loope
jne
push
and
jle
add
lss
xchg
cmp
push
adcl
lcall
mov
mov
xorl
jg
stc
inc
mov
and
add
rolb
ljmp
stc
mov
loope
xchg
or
jbe
adc
push
pop
sub
mov
fadds
push
scas
outsl
sbb
idivl
in
jne
lods
xor
inc
jno
push
dec
inc
xchg
test
popa
ret
jl
jl
jg
or
mov
sub
stos
push
mov
mov
cmp
jb
icebp
xor
push
daa
mov
data16
push
pop
pop
lcall
hlt
jge
cwtl
push
fidivrl
jmp
inc
mov
xor
push
enter
cmp
xchg
nop
jmp
mov
les
lahf
pop
je
cs
and
xchg
ror
push
xchg
int
into
xchg
push
inc
fcmovnbe
nop
in
jle
negb
and
or
movl
xchg
stos
dec
sarl
or
xchg
pusha
insb
or
movl
jae
call
xchg
bt
push
lds
cmp
das
imul
push
repnz
rorl
dec
mov
add
dec
dec
sbb
out
push
pop
xor
mov
in
add
call
cmp
push
pushf
pop
xor
lcall
or
scas
xchg
push
decb
rolb
cmp
call
es
cltd
movsb
and
pop
adc
jmp
mov
icebp
popf
and
adc
or
mov
xchg
das
sbb
sub
dec
fists
daa
daa
scas
decb
mov
cmpsl
rcr
fbld
or
scas
mov
lods
mov
mov
push
es
lcall
mov
sub
lock
inc
je
aaa
stc
addr16
in
mov
xchg
gs
popf
les
jl
jmp
mov
ret
mov
push
add
shrl
pop
jne
mov
jb
movsl
loope
test
lcall
mov
mov
sub
call
out
sti
sbb
push
mov
stos
cmp
jnp
scas
cmc
ror
mov
dec
ja
cs
xchg
push
into
lcall
mov
pop
icebp
mov
adcb
and
popf
jo
dec
inc
aad
dec
inc
enter
cmc
xor
fwait
je
mov
or
imul
stos
mov
pop
lea
inc
fdivrs
jnp
cmp
and
imul
pop
clc
je
sub
mov
addr16
xchg
sbbl
das
push
mov
mov
test
jle
jae
sub
mov
dec
jmp
bnd
adc
or
xchg
outsl
arpl
mov
sub
cs
dec
mov
push
cltd
mov
pop
push
and
test
mov
mov
sub
les
scas
adc
mov
dec
dec
nop
scas
adc
push
adc
aaa
popa
sahf
mov
xor
cmpsb
mov
adc
das
pop
outsl
mov
repz
adc
shll
jno
dec
inc
mov
lods
dec
sbb
movsb
sub
xor
je
lds
ret
cld
ficoms
push
subb
roll
mov
mov
and
pop
mov
xchg
mov
or
in
sahf
push
test
icebp
xor
loope
pop
cmp
mov
push
or
lcall
xchg
sti
or
test
addl
xchg
mov
movaps
inc
fistpl
pop
xchg
ds
shr
mov
test
mov
into
push
out
movsl
pusha
orl
mov
es
dec
push
sbb
mov
stos
jmp
jp
in
hlt
mov
pop
pusha
sub
mov
in
scas
lock
cmpsb
arpl
ss
shll
pop
outsl
pop
jno
movsb
xor
test
cmp
dec
pop
mov
lods
mov
std
jbe
dec
out
sub
out
inc
mov
sahf
mov
pop
das
push
adcb
dec
test
imul
ss
aas
mov
sub
clc
add
xchg
pop
add
dec
sbb
in
xchg
inc
jbe
imulb
cmp
iret
rorb
movsl
push
push
or
pushf
in
inc
mov
std
adc
shrl
xor
nop
mov
inc
or
rol
dec
and
mov
pop
sub
dec
push
cmp
push
scas
jns
jae
stos
dec
xchg
jecxz
adc
adc
mov
sbb
ret
scas
loop
mov
adc
mov
cld
lret
mov
mov
xchg
lahf
adc
xchg
mov
inc
pop
filds
mov
and
dec
add
adc
stos
test
cmpl
cmp
jb
test
es
adc
js
cli
sub
mov
jno
mov
cmpb
addl
pop
leave
pop
dec
mov
pop
fldt
add
xchg
push
andl
out
fcomps
decb
ds
add
mov
push
or
xorl
mov
or
int3
fsubp
ficomps
outsl
jae
fwait
sub
lods
push
push
lock
push
xor
outsl
out
out
cwtl
sub
fisubl
test
cs
ficoml
inc
in
mov
call
das
pop
push
jae
test
jl
mov
xchg
mov
aas
cs
push
arpl
push
and
outsb
cmp
lods
add
call
fs
push
dec
bound
sub
pop
or
cmp
shll
mov
js
rclb
clc
jno
pop
ljmp
fsubrl
pop
pop
cmp
xor
movsb
mov
clc
dec
dec
movsl
sub
fcompl
xchg
jecxz
push
pushf
je
and
int3
lret
xchg
sbb
jo
orl
sbb
xchg
shll
std
rorb
mov
ja
inc
adc
cmp
push
xchg
xchg
out
shrl
xchg
lods
push
mov
cwtl
push
or
jmp
bound
sahf
test
or
movsb
add
xchg
push
shlb
outsl
add
cmpsb
pushf
xchg
ds
adc
mov
push
mov
sub
mov
push
out
adc
insb
std
sahf
scas
xor
es
fldl
sbb
js
xchg
mov
pop
repz
outsb
mov
arpl
js
test
sub
lods
rolb
mov
adc
dec
out
imul
push
xchg
dec
and
mov
sub
and
not
pushf
mov
ficoms
arpl
inc
mov
xchg
test
sarl
mov
xchg
jbe
pop
pop
inc
mov
decl
mov
and
pop
cmp
movsl
hlt
sub
sbbb
test
sub
popa
mov
fdivs
push
jmp
mov
mov
stos
sub
mov
xchg
push
outsl
int3
ret
xor
jnp
xor
imul
pop
jg
lods
pop
mov
decl
popa
sub
fimuls
test
inc
push
imul
cltd
mov
inc
popf
and
sbbb
pusha
add
jnp
mov
rclb
outsl
iret
jo
mov
js
inc
inc
aam
dec
pop
ror
scas
arpl
imul
mov
test
ficoml
repnz
adc
mov
push
cmpsb
sub
cli
xchg
incb
add
loope
mov
aad
arpl
dec
loope
cmpsb
xchg
shll
xor
mov
aad
shrl
xchg
jge
push
push
jno
sbb
mov
cwtl
iret
cld
mov
sbb
mov
sbbb
cmpsl
inc
je
mov
push
mov
push
test
lahf
stc
mov
fsubrp
push
xchg
jo
ror
dec
cmp
jmp
lret
mov
mov
sub
fnstenv
xchg
dec
das
int3
xchg
sub
pop
jno
mov
xor
cmp
nop
fsubs
cmp
xchg
rclb
iret
mov
push
push
ror
mov
sbb
cmp
and
push
pop
push
repnz
mov
fdivr
movsb
call
das
xchg
mov
cwtl
push
mov
jb
jp
sub
inc
adc
or
jp
fwait
push
outsl
ljmp
and
out
push
pop
jecxz
jae
sub
xchg
xorb
rcr
add
js
xchg
inc
add
mul
mov
je
jl
rorl
pop
mov
xchg
sti
enter
mov
mov
xlat
cld
ret
inc
das
std
mov
inc
pop
je
xchg
inc
mov
add
xchg
add
or
fs
int
add
xchg
fcompl
mov
ret
roll
add
and
add
push
shll
and
test
shll
outsb
cmp
aaa
dec
adc
xor
sbb
out
fwait
adc
push
adc
mov
ds
pop
mov
stos
mov
lcall
fmul
push
lds
das
mov
inc
jmp
daa
loopne
test
in
xor
mov
dec
daa
pop
sub
pop
inc
mov
mov
mov
mov
mov
push
lea
in
sub
int3
xchg
jmp
and
lahf
in
scas
sub
jp
sbbb
sbb
aad
divl
test
cmp
aam
shr
xchg
sbb
sub
mov
cmp
out
mov
mov
aam
fwait
adc
xchg
xchg
push
ljmp
sbb
lock
pop
arpl
call
mov
pushl
xchg
roll
iret
rclb
sbb
sbb
jne
pop
jbe
es
dec
test
xor
jae
imul
xor
adc
imul
inc
dec
test
test
add
cli
push
adc
repnz
lods
cmp
cmc
hlt
mov
push
scas
arpl
lods
cmp
std
call
cmp
pop
pop
inc
inc
loope
imul
push
mov
add
adc
shrb
je
mov
cmpsl
call
dec
add
fisttpl
fwait
push
jp
testb
ja
test
in
lds
ror
mov
xor
xor
out
dec
xchg
in
cld
hlt
cmpsb
pop
jle
in
cmpsb
jb
lret
jo
test
xor
in
add
jo
sub
pop
lods
imul
flds
repnz
mov
add
xor
cltd
push
icebp
decb
pop
imul
lods
outsl
dec
jmp
jp
jae
push
inc
and
bound
mov
in
fnsave
les
inc
mov
mov
jo
ss
imul
fimull
sbb
sub
sub
std
jp
mov
xchg
xor
sbb
cmc
je
std
jno
push
or
rorb
inc
sbb
pop
ret
mov
fs
shll
mov
fcomip
aam
mov
stos
push
dec
cli
lret
cmp
rorb
leave
test
xchg
out
lods
dec
popf
int3
popa
lock
xchg
dec
jno
mov
xchg
inc
cmp
xor
dec
jmp
fmulp
inc
lds
scas
test
shrb
push
out
test
jb
outsl
adc
gs
xchg
cli
out
es
stos
enter
jg
into
and
xor
xor
arpl
imul
in
xchg
pop
stos
xchg
sub
iret
int3
xor
sbb
xor
pop
aad
lret
inc
lds
je
leave
cmp
xor
out
jae
push
outsl
xor
dec
add
je
cmp
test
push
push
jmp
int
leave
pop
dec
out
imul
sub
loop
jae
daa
ds
int
and
shrl
dec
mov
test
rcrl
lret
xchg
add
sub
push
add
movb
imul
jb
dec
dec
inc
cmpsl
popa
sbb
sub
jns
out
jg
fstps
or
rcll
mov
cmp
inc
loop
int3
add
fidivl
out
aas
ret
jae
pop
mov
mov
adc
xor
sbb
repnz
repz
pusha
cltd
sbb
mov
mov
in
dec
xchg
rorb
dec
mov
xchg
push
pushf
push
repnz
aaa
into
inc
mov
jo
iret
push
and
xor
cmp
xchg
das
inc
int
add
scas
push
das
mov
imul
pushf
mov
popf
rorl
incl
fwait
adcb
mov
repz
stc
xchg
adc
outsb
adc
xlat
out
mov
cmpsl
add
jbe
sub
push
jbe
inc
jne
incl
sub
fisttps
rdpmc
fucomip
mov
push
mov
out
push
xor
xchg
jmp
xchg
ficomps
lret
push
in
loopne
es
out
and
xlat
test
movups
lock
ds
lahf
sub
enter
xor
aam
or
cmp
mov
or
xchg
mov
dec
out
push
xchg
mov
push
sub
imul
scas
push
inc
mov
popf
sti
faddl
xchg
inc
jns
mov
inc
jo
push
mov
mov
roll
je
inc
mov
in
mov
or
mov
jno
mov
mov
out
in
in
cmp
mov
push
cmc
out
test
mov
mov
mov
pop
enter
fcmovbe
inc
jo
jle
pop
xor
inc
arpl
lcall
sub
mov
out
jno
orl
jge
ret
hlt
ds
xchg
out
pop
xchg
leave
js
addr16
fldl
cs
mov
scas
les
jecxz
rcll
negl
nop
jp
cwtl
xchg
pop
enter
jae
out
xchg
jecxz
orl
std
lea
repnz
fisubrs
ds
dec
das
movsl
pusha
adc
loope
out
and
das
inc
loop
sbb
sub
test
mov
rcrl
out
mov
nop
stos
inc
mov
jo
sbb
xor
push
hlt
pushf
shrl
xchg
test
jp
out
mov
rol
loop
sub
sub
je
xchg
pop
pop
mov
adc
push
mov
lcall
mov
jmp
adc
push
xbegin
in
xchg
push
das
out
insb
adc
mov
lock
mov
xchg
outsl
inc
xchg
add
mov
lahf
xor
cwtl
jns
test
out
push
add
scas
adc
sbb
call
outsl
xor
es
ret
push
clc
movsl
sarb
addb
pop
add
xchg
mov
imul
iret
cmp
jl
stos
cld
lret
mov
inc
rcll
dec
std
jp
adc
cmpsl
xchg
fildll
data16
and
push
das
nop
and
xchg
into
arpl
add
push
jmp
lea
das
dec
imul
lcall
sbb
cmp
xlat
iret
or
hlt
out
pop
adc
xchg
push
nop
outsb
mov
mov
outsl
insl
das
mov
test
xchg
pop
into
addr16
push
dec
xbegin
inc
pop
imull
push
aad
push
fwait
mov
je
push
xchg
cmp
je
and
cmp
subl
add
push
push
inc
mov
mov
jns
call
dec
jae
cmp
lret
loop
shr
cmp
pop
sbb
jl
xor
adc
imul
lcall
dec
fildl
xchg
xchg
jo
out
xor
add
sub
cwtl
mov
fprem1
sbb
sub
adc
sarb
pop
mov
js
or
jnp
in
inc
fsub
mov
mov
xchg
add
push
in
test
ret
xlat
out
lcall
sub
imull
and
lods
testl
sub
rorb
js
shrl
dec
addb
and
jge
pop
pop
sbb
xor
shll
sub
xchg
bt
stos
dec
or
lahf
repz
mov
mov
jnp
jecxz
popf
outsl
lret
dec
jle
rcrl
or
push
fistpl
mov
inc
sbb
mov
adc
mov
vunpckhps
inc
jge
or
dec
int3
inc
add
mov
popa
cmpsl
mov
sti
mov
xor
lds
mov
mov
jae
push
mov
clc
inc
push
pop
mov
mov
test
adc
mov
dec
sub
sbb
mov
in
dec
pop
out
xchg
ja
adc
sbb
mov
mov
jb
aaa
shrl
xlat
fidivrl
jmp
sbb
pop
mov
sbb
inc
xor
cmp
mov
stc
cmc
push
scas
pop
pop
orl
and
jb
sahf
mov
adc
and
lcall
xor
out
in
xchg
mov
push
mulb
and
mov
in
aad
ficompl
int
pop
push
add
or
out
sub
xor
das
sub
movsl
dec
shlb
pop
sti
out
sub
cmp
lods
xor
ljmp
or
out
push
stc
push
mov
scas
dec
mov
xchg
mov
push
mov
js
fistps
nop
jns
add
test
lcall
ror
cwtl
push
call
pop
mov
cmpsl
dec
pop
lods
mov
call
mov
and
cs
xlat
mov
sbb
roll
sbb
out
or
aam
pop
mov
fadds
adc
jo
sbb
and
push
jmp
xorb
in
adc
scas
xchg
jno
add
mov
pushf
das
movsl
sti
mov
lock
lea
push
cmp
or
daa
mov
aas
jns
hlt
pushf
xchg
push
adc
inc
daa
jp
jmp
mov
xchg
lods
ds
test
jmp
bound
sbb
xchg
popf
pop
nop
movsl
in
adc
loop
and
das
xor
mov
neg
push
pop
outsl
jo
js
imul
lret
pop
dec
cmpsb
push
das
mov
lret
add
mov
in
lds
dec
and
sbb
call
sti
jne
jo
mov
loopne
testl
xor
jmp
cmpb
fwait
sbb
dec
dec
add
pop
sahf
movsl
jle
clc
adc
or
push
inc
sub
aas
cli
mov
push
pop
adc
out
nop
cmp
jbe
push
pop
mov
cwtl
xor
sbb
ret
lahf
mov
stos
outsl
inc
or
add
mov
ljmp
mov
fsqrt
sbb
mov
cmpsb
ret
cmp
mov
out
mov
cltd
loopne
mov
test
repnz
in
jmp
fsubrs
outsb
xor
outsb
push
pusha
jne
mov
and
cmpsb
mov
add
outsl
mov
fistpl
mov
test
mov
frstor
notb
adc
outsl
sarl
mov
out
testb
stos
pop
inc
pop
push
and
popl
loope
call
pop
mov
push
into
clc
rorl
inc
sub
or
mov
mov
popa
mov
mov
pop
xor
movb
dec
mov
mov
addb
push
scas
ss
cld
jl
sub
imul
sbb
scas
and
sub
adc
push
sbb
movsl
push
movl
jae
pop
inc
cld
mov
cs
mov
jne
iret
roll
sub
mov
jnp
mov
inc
testl
orl
xchg
dec
mov
and
ss
xchg
sbb
and
xchg
adc
pop
in
mov
sarb
pop
xchg
loop
std
pop
andb
out
jle
insb
mov
pusha
fstpt
lods
aas
xchg
out
sub
mov
cmpl
pop
inc
add
test
add
add
scas
scas
jbe
mov
ljmp
call
aad
mov
jne
stos
pop
sarb
dec
fwait
push
cmp
xchg
ljmp
pop
andl
jo
out
xchg
push
inc
add
sub
jae
sub
int
and
lods
pushf
cmpsl
insl
xchg
or
push
bound
ficompl
lods
subb
mov
loopne
cmp
inc
fldenv
test
xchg
imul
add
subb
testb
sahf
mov
rcl
xor
adc
xchg
daa
push
xor
sbb
inc
push
hlt
pop
push
outsb
xchg
idiv
xor
jo
mov
sbb
daa
add
mov
adcl
dec
pop
lret
inc
xor
out
fadd
stos
push
stos
jge
or
jb
dec
pop
nop
mov
xchg
dec
cmc
pop
push
mov
dec
fwait
mov
jle
pop
test
inc
or
es
fcoml
sbb
lods
popf
xor
add
inc
inc
fldl
xchg
insb
jg
push
mov
xchg
or
lods
pusha
push
pop
push
scas
je
scas
fwait
mov
mov
pop
add
mov
and
cmp
dec
out
push
sbb
adc
shll
test
xchg
js
das
jb
andb
mov
xchg
hlt
pop
pop
cmpsb
dec
fwait
mov
adc
adc
jecxz
push
jle
mov
lcall
mov
xlat
xchg
sahf
mov
xchg
jp
fmuls
arpl
test
and
fsubrl
pusha
lods
insb
xchg
mov
mov
xor
mov
shrb
js
mov
mov
adc
outsl
es
or
sbb
into
xor
sub
hlt
imul
rcrl
lods
inc
lret
in
test
pop
add
das
sbb
je
leave
scas
test
push
lcall
push
cwtl
popf
xchg
cmp
push
adc
test
int3
lret
cmpsl
dec
mov
xchg
rolb
dec
movsl
add
dec
popa
or
repnz
enter
cli
dec
adc
xchg
in
outsl
inc
xor
jo
iret
lahf
sar
fidivs
sub
xor
push
mov
sbb
sub
pop
dec
mov
out
ljmp
push
mov
cmp
aaa
lods
xor
dec
xchg
enter
test
loop
jmp
xor
jb
mov
lret
ljmp
push
inc
gs
lock
and
mov
cld
rcrl
cmp
inc
push
lcall
adc
mov
push
scas
and
mov
rol
jmp
push
mov
pusha
scas
imul
ss
jmp
scas
rcr
rcl
jno
inc
or
pop
testb
rcrb
movsb
outsl
cli
xchg
xorl
xchg
inc
jne
or
and
adc
sti
mov
loop
or
mul
repnz
into
xor
repz
adc
ret
push
cmp
xchg
out
xor
nop
jo
push
lahf
sahf
mov
fsts
outsl
xchg
xor
movsb
pop
add
mov
das
stos
out
jne
clc
imul
jge
dec
hlt
jb
js
xchg
mov
out
je
xchg
lds
out
shl
pushf
clc
pop
jmp
mov
aaa
les
sti
ret
movsb
cwtl
insb
sub
test
or
mov
xchg
and
pop
dec
scas
jmp
cmc
mov
aaa
mov
outsl
gs
lea
push
lock
pop
and
sub
mov
repz
push
movsl
cmpsl
or
sub
loop
insl
push
inc
faddp
jg
stos
cmp
push
in
push
movq
adc
out
mov
or
xchg
sub
hlt
rorb
pop
shlb
and
jb
xlat
sub
in
imul
movl
inc
push
sub
pop
gs
aaa
sbb
adc
dec
adc
inc
cmpsb
test
mov
xchg
push
rcll
outsl
cmp
pusha
outsb
fsubs
jb
loopne
cld
mov
xchg
rolb
mov
lea
push
cmpsl
repz
into
jle
dec
xlat
push
inc
shlb
aam
mov
andl
cmpsl
mov
pop
sahf
inc
inc
insl
mov
lods
push
das
sahf
outsl
sahf
test
mov
push
pop
fisttpl
nop
mov
mov
das
mov
aas
add
shl
adc
cmp
sub
pmaxub
fsubs
mov
jb
arpl
outsl
add
jo
fistl
dec
enter
push
fucom
movsl
xchg
pusha
shrl
arpl
xchg
add
sbb
fiaddl
test
pop
test
inc
loopne
xchg
cs
dec
aam
addr16
lods
jl
sub
adcb
push
push
sbb
fsubl
data16
fmuls
inc
out
loope
xchg
push
jecxz
lret
int3
repz
jecxz
jo
dec
out
mov
xchg
sbb
jb
adcl
arpl
ret
shr
sub
push
xor
dec
shlb
pop
pop
xchg
xchg
outsl
and
int3
enter
into
mov
adcl
cmpxchg
xchg
inc
aas
mov
xor
stc
mov
daa
push
dec
dec
scas
aas
jle
lock
jecxz
or
sbb
mov
aam
xor
sbb
inc
mov
xchg
pusha
cmp
push
dec
daa
pop
xchg
or
cmc
mov
notb
lfs
xor
dec
enter
cmpsl
jmp
jns
push
adc
movl
xchg
push
jmp
mov
bound
fiadds
mov
and
jnp
ficompl
leave
adc
in
mov
leave
lds
mov
out
mov
or
xchg
xchg
lods
inc
cmpsl
sub
cltd
jmp
iret
xchg
xor
add
les
push
out
cmp
fwait
hlt
push
cld
loopne
loop
stos
push
jp
push
sub
aaa
cld
jmp
adcb
icebp
hlt
xor
int
sbb
stos
mov
jp
lea
inc
lahf
pop
pop
sbb
push
jnp
mov
loopw
idivb
cmp
dec
dec
mov
insl
push
lahf
push
sub
test
loop
fldlg2
jne
cmpsb
xchg
and
xchg
fiadds
xor
push
push
mov
ja
push
inc
jp
jge
cmp
dec
mov
into
scas
or
lahf
popa
mov
aad
in
mov
pop
cmc
shlb
xorb
scas
lods
jb
xorl
push
mov
nop
xchg
push
jge
imul
xchg
stc
outsb
ljmp
mov
xchg
dec
and
adc
inc
outsl
and
sbb
inc
mov
notl
stc
sub
pop
test
adc
inc
inc
sahf
fwait
mov
sbb
mov
xor
inc
shrb
lock
mov
xchg
iret
out
jle
jbe
sbb
cmpb
sbb
add
ret
adc
data16
xor
fs
mov
and
or
and
xor
mov
cmp
sbb
sub
or
imul
popf
adcb
test
cmp
outsb
arpl
popf
xchg
test
jge
jbe
jo
filds
jno
push
mov
es
dec
sub
xchg
sbb
popf
xor
xchg
popf
jb
mov
or
bound
andb
outsl
mov
insb
mov
lods
hlt
pop
jecxz
scas
xchg
adc
call
outsl
stos
push
xchg
pop
and
xor
pop
imul
sub
push
mov
inc
in
dec
mov
cmpsb
shlb
xor
dec
inc
jg
lock
popf
ja
fidivrl
mov
pop
sbb
fcoms
push
outsl
aam
test
dec
shlb
std
subl
insb
call
out
sbb
mov
cmp
push
push
fildl
int
jb
mov
and
scas
pop
mul
lahf
push
imul
andb
add
scas
sbb
repz
xchg
pop
add
xchg
mov
divb
ret
mov
mov
arpl
mov
add
aam
divl
sbb
xor
mov
mov
xchg
add
test
jge
jmp
sub
cld
and
dec
or
xchg
aaa
bound
jle
or
add
jns
dec
out
pop
sub
mov
inc
dec
clc
pop
bound
cmp
push
push
enter
push
jo
adc
mov
adc
pushw
jmp
pop
jb
pop
jnp
sbb
pop
mov
lret
mov
aam
sbb
fsts
inc
ds
inc
push
scas
stc
pushf
mov
in
stos
adc
shll
dec
test
mov
mov
jnp
jl
adcb
out
enter
fsubr
or
lods
ds
jno
roll
pop
daa
pop
cltd
outsb
pop
mov
xchg
outsb
insl
or
add
adc
in
adc
mov
data16
shl
add
clc
mov
testb
scas
and
pop
xchg
push
test
loop
test
mov
aad
mov
fwait
mov
test
pop
jge
pop
mov
add
sub
cld
push
pop
push
iret
and
mov
outsl
aam
in
xor
or
lds
scas
mov
push
inc
pop
fs
fstpl
lret
adc
xor
pop
imul
pop
push
and
ror
shrb
sbb
call
xor
stos
fucom
jbe
inc
sbb
pop
xchg
sub
cli
pusha
add
cmp
movsb
cmp
and
arpl
fidivl
adc
mov
sarl
test
mov
out
inc
stos
mov
or
orl
jo
adc
lahf
cmpsl
or
sub
mov
inc
sarl
popw
xchg
insl
sub
push
lcall
shlb
iret
ss
dec
inc
lret
cmp
push
scas
popa
ja
mov
xor
es
stos
xchg
cmp
or
mov
mov
test
dec
dec
pusha
lock
stos
sub
lcall
add
std
jnp
das
mov
inc
mov
bound
in
sbb
out
test
shrl
mov
xor
or
xor
cmpsb
sub
inc
pop
mov
popa
xchg
das
push
addr16
cmp
sbb
rcrl
add
das
mov
call
test
jge
mov
incb
inc
cmc
int3
cmp
movsl
xor
out
pop
jae
popa
movsl
pushf
xor
sub
add
pop
pop
lods
aas
jae
lea
fidivs
cmp
inc
xchg
sub
and
push
loop
add
sub
sahf
mov
pop
or
jno
out
aad
or
push
or
test
mov
pop
cmpsb
fld
arpl
cmp
popa
out
popl
jno
xor
xchg
shlb
scas
ret
add
rcr
adc
dec
sti
das
stos
test
aas
jp
shr
int
adc
jge
sub
pop
inc
clc
inc
das
push
int
sub
daa
popa
scas
out
cmp
xchg
pusha
es
push
xchg
test
or
loopne
pop
incl
adc
aaa
outsl
ss
addb
repz
inc
and
cltd
repz
pop
and
jbe
dec
pop
test
pop
test
jmp
pop
rol
push
scas
mov
xchg
sbb
lret
jo
nop
addr16
mov
mov
cmp
popf
call
outsl
fnsave
mov
cmc
filds
adc
cmp
add
clc
sbb
sahf
hlt
mov
push
sbb
or
cs
inc
das
jbe
into
popa
in
adc
or
xchg
cmp
cs
dec
mov
sub
add
inc
icebp
jge
sbb
sbb
mov
pop
je
repnz
jbe
ss
iret
sbb
sub
sti
outsb
xchg
sub
lods
icebp
scas
adc
lret
rclb
xchg
adc
sbb
popf
push
enter
xlat
pop
mov
idiv
sysret
mov
mov
xor
leave
jno
mov
fsub
jb
pop
jb
dec
aad
adc
insl
cmpsl
push
cmp
hlt
push
and
cmp
dec
inc
pop
fxch
mov
or
sub
xchg
loopne
adc
insl
scas
bound
mov
mov
mov
cmpsl
ljmp
ja
xchg
cs
repnz
and
sahf
scas
clc
lock
je
pushf
sbb
sbb
stos
push
mov
outsl
mov
cmpsl
jmp
les
jnp
and
es
and
push
vpcomuw
scas
sub
mov
sub
mov
fcmovnbe
stos
cmp
loope
cwtl
xchg
icebp
test
xor
or
mov
test
xor
adc
sub
test
popf
in
push
sub
lds
mov
rol
inc
push
sub
shlb
aam
shlb
mov
dec
outsl
sub
insb
lods
add
jne
push
mov
dec
out
roll
xor
lahf
out
iret
xorl
shll
xor
pop
ja
rorl
xchg
cmc
rorl
adc
sbb
rorl
mov
mov
test
loopne
fsubrl
add
jge
repz
pop
loop
fadd
inc
iret
sub
adc
test
stos
decb
mov
push
leave
popf
call
out
aam
mov
sub
addl
jg
fadd
inc
mov
jne
fs
push
and
cmp
xchg
pushf
mov
inc
add
jle
or
scas
pop
das
mov
mov
jo
dec
aas
and
movsb
xchg
stos
add
rcr
jbe
dec
pop
pop
mov
cmp
jge
scas
jmp
mov
pusha
xchg
xor
inc
call
lea
dec
adc
mov
sub
mov
inc
xchg
mov
sbbb
aam
out
sub
push
mov
aam
outsb
dec
xor
push
xchg
loope
scas
mov
jle
daa
ret
scas
aaa
mov
cmpsl
movsbl
loopne
jl
call
or
mov
sti
xchg
dec
mov
notb
jle
push
lods
jb
pop
mov
pop
pop
aam
lea
push
daa
lods
test
div
setl
enter
gs
dec
sub
sbb
sti
jo
xchg
mov
inc
inc
push
or
mov
or
push
inc
stc
test
add
mov
mov
xor
adc
out
sub
popf
insb
stos
cmp
mov
mov
subl
sub
arpl
rclb
out
sub
jecxz
add
imul
fwait
push
out
test
cmp
subl
dec
aad
rorb
je
mov
insb
jnp
into
adc
pop
shl
sub
add
scas
pop
cmp
add
xchg
lahf
push
insb
sbb
out
addl
negl
das
rclb
sbb
hlt
outsl
jno,pt
add
dec
adc
pop
mov
xchg
jl
or
sbb
in
add
clc
flds
dec
sti
push
js
xchg
jne
stc
dec
push
cli
outsb
mov
out
jbe
inc
outsl
fisttps
in
xchg
in
inc
dec
xlat
xor
scas
das
lcall
adc
mov
dec
push
cmp
shlb
imul
gs
ret
jb
and
add
mov
fs
mov
sbb
scas
jecxz
dec
inc
dec
mov
sub
inc
or
cli
pop
mov
mov
outsl
xor
cmp
test
dec
inc
cmpsl
insl
call
out
fwait
push
xchg
and
test
xchg
jp,pn
rcl
pop
fld
arpl
scas
les
adc
fcmovnu
imul
jnp
cli
mov
decl
nop
repnz
xor
data16
inc
insl
add
imul
cmp
in
xchg
les
sbb
in
jg
fidivs
mov
movsb
jno
xlat
loopne
lahf
je
push
inc
sbb
xor
and
ja
inc
xchg
rorl
push
xchg
dec
push
mov
sub
int
add
fs
add
xchg
shll
dec
fiadds
pop
mov
mov
in
jne
outsl
orl
pop
and
cli
fbstp
jbe
std
aas
and
test
push
pop
cld
out
xor
test
sbb
adc
pop
cmp
add
in
and
idivb
outsl
stos
aas
push
dec
mov
adc
push
fcomps
leave
sbb
cmpsl
mov
leave
fisubrs
fldl
popa
push
or
je
inc
pop
inc
or
mov
addr16
cltd
and
xchg
mov
mov
mov
mov
loopne
shlb
add
out
scas
orb
stos
rorl
cmpsl
rcrl
sbb
lcall
icebp
rcrl
in
shll
pop
adc
scas
pop
push
xor
lret
cmp
int
imul
int3
in
rcr
and
das
mov
orb
push
mov
in
dec
adc
inc
sti
in
sbb
repnz
mov
xor
mov
adc
push
cmc
dec
mov
adc
mov
cs
loopne
gs
cmp
inc
mov
mov
inc
mov
xor
mov
pop
or
dec
xor
push
sub
jns
and
xor
ja
mov
mov
push
xchg
mov
aas
jne
jns
pop
mov
mov
jb
mov
cli
dec
jl
mov
stos
dec
das
mov
outsl
dec
pushf
test
add
or
clc
cs
mul
adc
cwtl
inc
jne
jo
pop
cmp
cld
cmp
xor
dec
pop
xchg
xchg
add
nop
out
inc
dec
out
mov
jge
into
in
out
and
sub
push
or
push
dec
mov
sbb
fs
outsb
sbb
push
in
jnp
daa
shlb
mov
icebp
les
cmp
cltd
lods
push
movsl
std
in
data16
adc
pop
cmp
jmp
sub
int
and
cmpsl
jl
cmp
in
cmc
adc
mov
push
pop
mov
xchg
and
gs
adc
or
pop
repz
ja
repnz
subb
sub
mov
jne
out
fmul
xchg
stos
xor
vpermw
pop
inc
cwtl
inc
pushf
insb
push
sub
sub
pop
in
pop
pop
mov
leave
ret
clc
mov
pop
pop
mov
fdiv
mov
jno
lahf
daa
call
and
add
and
mov
scas
push
inc
outsl
mov
add
xchg
outsb
je
adc
jne
out
jecxz
mov
jmp
or
cmpsb
test
gs
mov
leave
int
repnz
dec
popf
ficomps
call
movsb
imul
sbb
push
dec
scas
insl
xchg
add
jg
jnp
adc
add
mov
cmp
fs
adc
mov
pop
push
or
repz
movsl
pop
xchg
mov
push
add
lret
cwtl
mov
scas
std
mov
out
addl
sub
std
out
add
mov
lock
test
xchg
iret
jmp
nop
jecxz
jge
sub
or
dec
xorl
or
push
shll
xlat
imul
sub
das
insl
out
movsl
xchg
je
adcb
sub
add
and
int3
jne
fadds
mov
cmp
or
pop
sub
and
cltd
hlt
adc
cmp
or
cmp
pop
mov
out
sbb
pop
int
ds
push
mov
mov
xchg
or
dec
sti
pop
lea
call
adc
mov
pop
dec
popf
sbb
ret
hlt
aad
push
or
ljmp
aas
test
cld
cli
mov
mov
adc
sub
aaa
mov
jns
iret
xchg
push
ss
imul
fdivrs
jge
xchg
in
jo
fstps
mov
cmc
pop
cmpsl
mov
pop
jb
jle
pop
jp
data16
loopne
test
ret
sti
pop
xchg
outsl
sbb
xchg
pop
insb
int3
xchg
or
and
insl
pop
scas
jae
pop
aad
jb
sbb
mov
test
sbb
xchg
xchg
insb
mov
push
jecxz
std
cmp
mov
add
shrb
xor
jne
and
loop
adcl
cld
cwtl
or
cmp
lock
sahf
jnp
aam
lock
pop
les
jle
lahf
daa
adc
sub
push
and
push
pop
fnstcw
mov
imul
ljmp
dec
mov
and
xchg
xchg
add
and
lcall
jmp
movsl
shll
xchg
sub
aas
jae
or
cmp
mov
jmp
add
cwtl
and
inc
xor
into
mov
in
and
pop
or
add
push
cwtl
mov
pop
cmp
xor
and
sbbl
sahf
out
dec
push
mov
push
fmull
xor
loope
sub
jecxz
jo
nop
lret
pop
roll
xor
adc
mov
lods
mov
leave
sub
mov
or
xchg
push
outsl
loope
into
or
or
mov
outsl
hlt
and
dec
les
jecxz
push
test
out
mov
mov
arpl
pushf
mov
or
push
add
push
add
lcall
fsubrs
arpl
xchg
iret
fwait
mov
cmp
xor
or
inc
push
pop
cmpsl
sub
insb
push
out
scas
xor
pop
pop
mov
movsb
add
addr16
in
sahf
scas
andb
and
pop
mov
jns
or
or
shlb
lret
xchg
nop
xor
dec
pusha
fs
xchg
outsb
mov
hlt
scas
jg
mov
stos
mov
test
pop
pop
mov
mov
or
fidivrs
sbb
jo
int
scas
push
shlb
or
xorl
scas
xchg
test
sub
scas
push
xchg
mov
dec
jge
mov
pop
idivb
icebp
jae
cmp
add
xchg
add
aas
rorl
loop
imul
push
out
loopne
jle
jp
push
lock
mov
insw
lret
adc
jg
clc
xor
data16
stos
push
sbb
adcl
bound
mov
movsl
fs
sbb
inc
xor
mov
das
push
ret
mov
inc
out
daa
cmc
xchg
cltd
notb
xchg
mov
cmp
daa
dec
xor
mov
je
aam
push
cli
das
fs
scas
xchg
stos
nop
arpl
xchg
ss
cmpsl
pop
fstpl
loopne
ffreep
fs
arpl
pop
cld
inc
bound
push
jb
shl
push
dec
cs
jmp
arpl
mov
jg
inc
mov
add
mov
push
aaa
cmp
lods
call
out
icebp
mov
mov
push
les
or
loopne
xor
xchg
and
pop
xlat
mov
dec
outsl
and
mov
inc
mov
adc
aam
xchg
movl
adc
inc
cmp
jns
out
add
inc
frstor
pop
and
aas
pop
xchg
lods
int3
ss
sbb
test
pop
pand
cmc
xor
push
jne
inc
filds
jb
and
std
mov
inc
cmp
push
je
mov
daa
xchg
xchg
into
loope
outsl
mov
dec
mov
call
imul
inc
push
inc
repnz
xchg
sub
cmp
mov
repnz
inc
test
add
push
xor
shlb
mov
sub
push
sub
and
daa
enter
shl
push
shl
outsb
lret
jbe
mov
das
fdivl
in
fisubrl
aam
mov
bound
cli
imul
inc
int3
nop
outsl
stos
cmp
mov
in
cmc
call
test
pop
dec
adc
adc
or
addl
xchg
insb
mov
push
shll
push
jbe
cmpsl
or
call
adc
xor
shr
lock
cmpsl
push
cs
or
or
nop
pop
scas
ret
inc
jae
add
adc
mov
jo
push
xorl
rcrb
repnz
jns
add
out
fidivs
xor
std
inc
rcrl
lret
ret
and
sub
dec
insl
xlat
dec
pop
or
das
into
xor
mov
js
outsl
popa
add
xor
jg
sbb
sub
addl
dec
mov
call
and
in
fsubs
mov
insb
sti
cmpsb
mov
mov
mov
mov
mov
int3
xor
cmp
inc
scas
adc
pop
xchg
fwait
sub
mov
cmpsb
aad
dec
add
push
cltd
test
ja
and
inc
sub
pop
dec
hlt
mov
mov
clc
outsl
mov
xor
in
pop
movsl
gs
ret
sub
insl
outsl
adc
repnz
jle
hlt
into
gs
cltd
in
mov
scas
cmpsl
test
push
cli
jne
dec
dec
clc
jae
xchg
jmp
icebp
push
mov
cli
outsl
pop
movsb
lahf
and
or
xchg
enter
xchg
cwtl
jbe
push
inc
int
sub
ja
stos
push
mov
xchg
addr16
add
popl
cmp
mov
xchg
dec
fadds
faddl
test
mov
mov
loope
mov
aas
xchg
fldcw
jmp
int
push
xchg
sahf
pop
iret
or
jp
mov
mov
mov
dec
add
out
scas
xor
xchg
cmp
and
das
jne
pusha
shlb
pusha
sbb
xchg
stos
ja
push
aam
mov
int
scas
push
add
sub
mov
xchg
mov
mov
out
call
jo
cmp
lea
mov
lods
cmp
popf
pop
lret
sub
scas
jne
xchg
movsl
test
jle
pop
clc
mov
jo
lods
jl
inc
inc
mov
add
mov
stc
scas
mov
add
ja
xchg
repz
adc
clc
jne
add
sub
repnz
mov
inc
pushf
aas
ret
scas
add
adcl
jge
jecxz
jl
jecxz
cmpsl
imul
mov
hlt
mov
daa
pop
pop
addr16
cmpsl
test
inc
push
fdiv
jecxz
sub
pop
pop
xchg
dec
out
leave
mov
insl
test
xor
push
and
lds
addr16
mov
je
sub
sbb
mov
inc
movsl
sbb
leave
fwait
dec
mov
popf
push
mov
mov
push
inc
shll
stc
cltd
push
mov
add
test
jno
jg
aaa
ja
lods
adc
mov
fldcw
sbb
push
ficoms
xor
imul
adc
les
out
push
mov
xchg
jbe
cmpsl
sub
xchg
ja
into
sbb
cmpsb
roll
inc
sub
cltd
jno
icebp
loop
push
sub
xchg
lret
lret
and
adc
mov
loope
jg
imul
xchg
mov
roll
cmp
jmpw
cmp
or
add
cmp
arpl
je
lahf
cs
enter
push
push
jle
inc
push
movsb
mov
pop
shlb
sbb
ds
fwait
outsl
inc
mov
and
cwtl
or
adc
mov
adc
mov
add
sbb
adc
adc
dec
pop
xor
cmp
push
sub
das
adc
aam
stos
push
xor
jmp
cmp
mov
mov
scas
mov
jae
xchg
pusha
fcomp
dec
stos
mov
jp
add
mov
repnz
int
jno
pop
and
js
lea
adc
mov
mov
or
xor
lock
xchg
pop
mov
xchg
jg
and
fidivs
repz
sub
icebp
push
les
adc
xchg
repz
lock
sub
subb
sub
and
jno
mov
cs
xchg
stos
out
xor
xchg
push
popa
imul
sub
mov
push
sub
jge
xchg
lods
sub
test
mov
jp
hlt
outsl
subb
sbb
into
cmp
add
and
mov
fwait
mov
or
and
or
mov
pop
repz
add
paddd
mov
stc
mov
jo
sbb
lods
mov
jo
scas
mov
insb
lret
enter
sub
ss
pusha
sub
xchg
out
int3
iret
xchg
dec
lds
rcrl
push
xchg
pop
pop
std
rcl
jp
sbb
adc
inc
hlt
dec
inc
inc
pop
popa
aam
push
push
mov
shll
push
sbb
mov
jp
repz
es
inc
lods
mov
push
push
cmpsb
arpl
fcmovne
and
adc
add
adc
outsl
or
adc
mov
jg
in
int3
xchg
aad
repz
leave
mov
scas
add
sbb
outsl
fadds
xchg
mov
or
data16
push
push
pushf
pop
test
adc
lods
push
xor
std
addr16
pop
mov
imul
lcall
pop
and
mov
imul
daa
cmp
or
cmp
int3
divl
jns
xchg
iret
mov
mov
jo,pn
test
or
add
in
mov
pop
mov
inc
fidivs
cs
adc
push
fs
sub
mov
aad
loope
push
enter
repz
enter
out
inc
scas
in
mov
sub
mov
sub
mov
lods
xor
out
pushf
int
adc
movsb
sub
jmp
addr16
negb
jne
pop
push
xchg
test
dec
sub
cvttps2pi
push
shll
jg
push
sbb
mov
cltd
std
stos
dec
push
hlt
mov
xchg
lock
xchg
jbe
mov
mov
push
rolb
repz
xchg
pop
sbb
je
mov
mov
dec
popf
loope
push
pop
iret
mov
daa
inc
jl
addl
stos
in
outsl
mov
outsb
ljmp
mov
fsts
fisttpll
push
imul
xor
inc
xchg
cmp
ljmp
in
cmp
adc
push
adc
out
jno
int3
repz
dec
mov
xchg
sbb
insl
xor
call
outsl
sbb
mov
push
mov
pusha
pop
aam
loope
mov
mov
mov
sub
xor
insb
imul
pop
xchg
nop
jne
sub
subb
popa
push
jg
repnz
test
mov
mov
mov
lods
sub
nop
daa
and
pop
push
sahf
mov
cwtl
xchg
xchg
sub
imul
push
adc
inc
cmp
mov
je
dec
xchg
xorb
loopne
addr16
icebp
fdivrs
xchg
xchg
insb
lret
inc
cli
stc
dec
add
pop
insl
pop
inc
xchg
push
lea
sub
mov
out
sbb
jmp
imulb
out
pushf
mov
push
pop
sub
fildll
add
js
call
inc
scas
lret
adc
ljmp
mov
data16
xor
shlb
call
das
adc
faddp
sub
cmpsb
jle
sahf
xchg
xchg
xor
mov
addr16
sub
inc
mov
sbb
jl
mov
aas
add
jg
rcrb
jle
pushf
out
push
jno
xor
sti
pushf
cmp
sahf
data16
sub
insl
mov
stos
sbbl
aaa
fs
ffreep
cli
and
insb
cmc
adc
inc
stos
repz
jno
add
shld
pop
xor
push
repz
jl
mov
ja
out
mov
ja
jg
dec
add
andps
mov
xchg
mov
cli
sahf
inc
xchg
or
xchg
xchg
inc
out
mov
dec
xor
cmp
insl
cmpsb
sbb
xchg
scas
mov
pusha
pop
mov
and
sbbl
adc
cwtl
adc
jg
or
das
and
inc
stc
vpmovwb
stos
outsl
adc
clc
and
das
lods
sub
js
mov
cmp
push
add
xchg
push
loop
mov
rorl
dec
xorl
fwait
and
daa
dec
mov
test
xchg
ja
js
inc
adc
sub
mov
sub
jae
cmpsb
xchg
sub
int3
movsb
jp
or
sahf
call
movsb
call
icebp
lcall
das
inc
xchg
sbb
shlb
fs
xchg
sbb
xchg
mov
sub
call
jb
lods
popa
testl
inc
test
iret
scas
xchg
in
mov
stos
cld
xor
inc
cmpsb
mov
iret
pop
pop
inc
stos
adc
dec
stos
sbb
xlat
and
das
aam
js
push
mov
dec
rorl
icebp
xor
stos
aas
lahf
inc
mov
outsl
out
sbb
mov
sahf
inc
dec
shlb
lret
dec
addr16
sub
out
xor
mov
xor
std
push
adc
push
dec
sahf
arpl
nop
sub
in
xchg
fldt
mov
pop
push
outsl
std
xor
jne
add
call
mov
in
cmp
mov
sub
ss
cmpb
pop
xchg
inc
test
push
cs
mov
push
inc
lock
in
test
adc
cs
test
subb
xor
adcb
insb
mov
mov
xor
in
jbe
jno
icebp
frstor
in
inc
enter
aad
xchg
movb
pop
xor
mov
lea
insl
mov
out
and
and
inc
inc
jnp
into
insb
jns
nop
stos
sub
pop
push
pop
scas
cltd
hlt
mov
fisubs
outsl
outsl
movsb
xchg
cwtl
push
popf
or
mov
ror
in
jl
xchg
and
sbb
ljmp
mov
outsl
popf
mov
pop
aam
inc
mov
mov
mov
arpl
in
les
cmpsb
je
sbb
mov
jne
lcall
lds
nop
cli
leave
sub
push
inc
imul
outsb
sbb
rcrb
sub
pop
in
cmp
inc
lcall
sbb
test
sub
sub
das
mov
nop
mov
cmp
pushf
and
mov
out
xlat
mov
int3
xor
jmp
or
out
lds
pop
fmuls
fldenv
shrb
fbstp
or
cld
cmc
out
cmp
inc
cltd
adc
jmp
sub
push
dec
scas
add
cmpsl
sbbb
std
imul
outsl
test
test
mov
insl
adcb
out
or
pusha
stc
inc
or
push
out
pop
push
fdivs
das
outsl
push
lahf
fisttpl
clc
sub
js
jge
sbb
and
lcall
stos
jl
dec
sub
inc
mov
lds
rcrl
xchg
xor
add
jecxz
jns
in
push
subl
gs
out
mov
sub
jns
fidivrl
repnz
clc
jl
dec
rcll
jo
cmp
pop
imull
pop
adc
mov
mov
mov
test
fcomip
les
mov
mov
jge
mov
mov
in
xchg
push
xchg
pop
xor
inc
inc
add
cltd
xor
and
bound
inc
hlt
imul
mov
call
scas
lea
fidivs
xchg
stos
mov
lcall
fwait
inc
shll
shrl
ss
cmp
fwait
fs
adc
xlat
mov
add
lahf
or
mov
xor
lods
out
das
xchg
pop
mov
lock
push
mov
aas
xchg
push
jmp
mov
jg
scas
ja
mov
sub
push
push
xchg
cld
adc
fisubs
dec
movd
xchg
xchg
aas
stos
xor
lock
fs
test
inc
xor
notb
addr16
dec
pop
pusha
push
and
iret
inc
push
mov
movsl
xor
dec
add
xor
jbe
adc
adcl
dec
mov
add
mov
mov
mov
das
mov
dec
and
pop
insl
inc
or
scas
cli
xchg
sub
mov
mov
mov
loope
dec
test
fiaddl
inc
jns
movsl
into
stos
addr16
adc
add
dec
fdivrl
stc
outsl
or
xchg
and
dec
cmpsl
mov
insb
pop
cmc
outsl
mov
xchg
ret
pop
ret
out
inc
sub
xchg
pop
add
lock
jb
pop
aam
sub
mov
ds
loopne
cmp
ja
test
mov
sarl
outsl
cli
dec
movsl
lds
jmp
mov
stos
sub
sub
sbb
or
popa
pop
mov
test
cmpsb
sub
lea
xor
test
jb
or
dec
icebp
adc
and
jle
adc
adc
test
sub
pop
cmp
das
popa
and
out
mov
xor
testb
mov
xchg
aam
das
bound
cmc
into
cwtl
out
stos
xchg
cs
es
adc
ljmp
jg
cmpsl
shrb
sub
push
sarl
pop
jno
dec
ljmp
xchg
roll
cmp
lods
fldt
add
lods
sub
dec
popf
mov
icebp
xorb
int3
daa
lahf
scas
movl
adc
jg
push
push
xor
pop
daa
imul
rcrl
jno
aad
xchg
outsl
pop
mov
dec
ret
imul
xchg
jecxz
sahf
push
xchg
popf
inc
int
sbb
push
xor
jnp
pop
dec
dec
pop
cld
pop
pop
fsubrl
xor
cmpb
test
js
mov
aaa
sub
and
mov
out
add
mov
mov
jno
insl
push
and
es
pop
data16
dec
scas
jg
data16
jb
push
scas
es
outsb
inc
xor
fmuls
adc
hlt
hlt
das
dec
inc
outsb
insb
in
lock
push
mov
push
fsubrl
mov
inc
dec
jecxz
movsb
inc
lods
mov
cmp
mov
jne
daa
cs
pop
outsl
lahf
dec
cltd
add
push
movsb
dec
add
cmpb
imul
imull
fsubrs
cwtl
or
adc
andb
into
jmp
or
mov
inc
mov
je
and
aad
mov
inc
pop
test
jne
sub
lret
mov
loopne
gs
ja
xchg
sub
in
jg
mov
cwtl
jo
and
pop
sbb
stos
sub
imul
repz
cmove
cmp
push
aaa
repnz
loop
addl
or
and
bound
mov
mov
jecxz
pop
mov
les
hlt
aaa
shrb
scas
mov
adc
repnz
and
xchg
out
aam
lahf
xlat
mov
inc
inc
cmc
push
clc
push
stc
sbb
or
fucomp
scas
cmp
ss
dec
jl
adc
loope
ds
repz
shl
mov
stos
scas
daa
orl
fistpl
ret
loopne
sub
inc
inc
jg
inc
call
add
imul
lret
push
icebp
cmp
aas
mov
test
mov
cmc
cmp
cwtl
push
pop
icebp
cmp
xchg
call
scas
repnz
ret
mov
dec
ss
xchg
jbe
mov
or
or
in
add
test
fwait
cmpsl
adc
addr16
add
roll
pop
imul
jne
sahf
xchg
sbb
inc
xor
xor
xor
mov
andl
mov
scas
fsubrl
xchg
xchg
pop
sahf
mov
dec
jg
push
adc
pop
jecxz
dec
cmp
xchg
jp
insl
jg
sub
pushf
addr16
jge
xchg
xor
jns
in
cmp
rcll
shrb
inc
leave
xchg
cltd
adc
sbb
loop
adc
inc
stos
ret
dec
xchg
clc
outsb
std
sub
push
mov
add
insb
inc
push
mov
in
xchg
or
mov
je
mov
dec
push
daa
aam
out
push
mov
loop
out
xorb
xchg
sub
mov
lds
mov
les
xor
dec
out
leave
inc
js
mov
notl
adc
lcall
inc
inc
mov
sbb
test
mov
loop
push
push
xchg
sbb
lods
mov
mov
dec
xchg
adc
dec
fildll
sahf
outsl
js
inc
rolb
xchg
add
les
pop
cmp
mov
movsl
outsl
add
sub
sub
xchg
test
add
xor
jne
dec
cmp
push
jo
cmp
sub
cmp
push
push
test
sub
shll
pop
cltd
call
mov
pop
jbe
hlt
jnp
mov
or
into
adc
out
xchg
lds
mov
push
adc
fwait
sub
pop
sahf
push
pop
mov
movsl
adc
add
ds
jnp
and
cmp
insl
imul
xchg
in
test
call
push
ret
push
out
icebp
adc
les
mov
fwait
lods
cld
mov
jbe
shll
je
xor
xchg
mov
outsb
mov
jno
xor
add
fnsave
cwtl
ja
movsl
mov
jge
dec
jno
ret
cmpsl
sbb
shll
cmp
pop
stos
test
xchg
and
xchg
jle
shll
ljmp
arpl
cmpsb
fimuls
push
adcl
test
enter
sbb
mov
daa
sbb
xchg
pop
nop
scas
fiaddl
or
or
xor
mov
shr
xor
xchg
fsts
pop
movl
loopne
test
push
ret
bound
inc
xchg
or
out
or
test
xchg
std
hlt
push
pop
mov
adc
xchg
mov
pop
mov
andnps
pop
ret
clc
clc
mov
ja
mov
movsb
xor
push
sub
ror
sub
fadds
jo
fiadds
jle
pop
fmul
push
mov
or
push
scas
popa
fdivrl
mov
fs
fiadds
adc
rorl
fdivs
mov
enter
lea
test
je
pop
shr
mov
add
sub
outsl
xchg
xchg
ja
mov
in
popa
or
cmp
pop
adc
sbb
psrld
gs
test
adc
stos
sub
xor
adc
rcrl
inc
jns
pop
mov
cmp
out
push
xor
imul
sub
jmp
shrb
dec
nop
outsl
adc
inc
mov
roll
outsb
add
es
mov
xchg
scas
rcr
adc
push
jnp
out
cmp
lods
mov
fimull
xchg
push
pop
adc
xchg
add
xchg
sub
jmp
cmp
pop
inc
mov
movsb
or
xchg
push
and
sbb
cmp
inc
rcrl
sbb
jno
or
mov
push
dec
xchg
push
mov
mov
pop
mov
jmp
aaa
mov
leave
das
int
outsb
mov
xor
mov
scas
lea
pop
pop
std
pop
ja
add
jns
dec
mov
sub
sbb
mov
fdivs
mov
xor
mov
popf
or
push
jle
mov
icebp
cltd
adc
fisubrs
andb
fidivrl
add
xchg
sbb
xchg
pop
xchg
lret
in
scas
int
aad
popl
lods
sub
daa
dec
js
lcall
mov
jnp
inc
adc
xchg
call
jle
aad
lahf
fisubrs
outsb
mov
nop
sub
in
shlb
xchg
push
sbb
dec
popf
std
pop
mov
or
daa
add
leave
leave
setne
neg
jle
push
add
stos
dec
adc
mov
into
pop
jmp
test
incl
call
arpl
shr
push
cmp
jp
push
pop
xorb
mov
roll
nop
xor
dec
cmp
decl
adc
scas
dec
ret
adc
adc
les
stos
cmp
and
jge
sub
jns
out
in
pop
ficoms
movsb
jno
imul
lock
sub
lods
add
or
lcall
add
sti
pusha
stos
mov
addr16
mov
imul
pop
xchg
sahf
sbb
sub
lods
or
jne
ror
hlt
out
fcmovnbe
dec
push
mov
xchg
xchg
adc
adc
dec
cmpb
lds
mov
mov
sbbb
cltd
pop
sbb
jno
clc
fcmovnb
push
jb
call
sub
loop
sahf
sbb
mov
decb
das
inc
and
mov
inc
xchg
iret
pop
hlt
pusha
loope
cltd
test
pop
test
xor
mov
popf
add
cli
daa
js
dec
lods
daa
jnp
das
cmp
out
call
int3
data16
jns
ret
popf
popa
add
jecxz
aaa
jmp
xchg
fwait
adc
ss
gs
xchg
adc
xchg
sarl
iret
ret
inc
and
add
xchg
mov
mov
lds
xor
pop
or
inc
test
push
mov
call
scas
out
out
jl
fwait
pop
popa
sub
cwtl
xor
lock
fwait
xchg
xlat
mov
out
mov
out
lods
sub
xchg
pop
clc
scas
lea
lahf
sub
push
jnp
mov
movsl
xor
rolb
mov
sbb
stos
call
outsl
sbb
jno
scas
lods
push
outsl
outsb
nop
pop
mov
pop
mov
ja
repz
int
mull
icebp
mov
sub
out
push
out
jae
adc
and
ja
pop
scas
mov
cmp
jmp
arpl
loop
scas
je
stc
ja
dec
cmc
and
sbb
xlat
jmp
das
aas
xor
xchg
addb
movl
inc
xchg
push
lock
lret
pop
jns
mov
xor
movsl
aam
push
push
aaa
outsl
insb
sarb
sbb
outsl
sub
cmp
sbb
sbb
les
jae
cs
add
test
imul
cmpsb
cmp
outsb
cmc
inc
xchg
daa
jb
mov
imul
cmpsb
cmp
loopne
add
pop
scas
push
test
fcomps
adc
or
and
ficomps
stc
iret
rorl
push
in
sbb
in
leave
jnp
mov
sbb
rol
jmp
nop
push
xchg
into
and
jbe
mov
imull
outsl
and
xor
xor
ffree
xchg
mov
cvtps2pd
daa
inc
imul
pop
add
shrb
stc
and
mov
addr16
or
inc
mov
inc
dec
xchg
sub
popf
xchg
dec
in
jb
dec
pop
mov
in
fs
call
cmp
sahf
push
fadds
ljmp
cmpb
pop
mov
mov
mov
pop
pop
add
je
insb
pop
jo
xchg
idivb
mov
out
and
pop
push
and
das
das
nop
and
scas
addl
sti
add
xchg
movsl
and
test
out
leave
xchg
cwtl
outsl
push
add
xchg
jb
sub
in
cmp
cmpb
mov
fsqrt
mov
idivb
insl
inc
dec
sub
aas
mov
loopne
pop
bound
mov
je
push
add
mov
cmpsl
cmp
sbb
mov
mov
jne
rcr
mov
seto
je
test
xchg
push
cli
mov
call
das
xchg
test
rorl
mov
mov
test
ret
add
and
lcall
std
inc
jle
mov
nop
push
and
aas
loopne
push
xor
in
cmp
cmc
lods
push
fwait
test
leave
movsl
jno
jo
imul
push
arpl
das
cwtl
lds
lock
movsb
fistps
add
xchg
pop
add
lcall
xor
nop
lret
out
add
test
loopne
inc
mov
pushf
or
add
sahf
mov
push
ja
aam
xchg
sub
in
pop
or
movsl
mov
je
jnp
push
add
cli
jno
pop
js
or
test
adc
cwtl
push
lds
sbb
test
dec
push
dec
sub
call
jecxz
dec
pop
sbbb
jne
push
insb
pop
repz
xor
mov
or
call
scas
icebp
leave
push
aaa
dec
cmc
enter
cmpsb
insb
mov
inc
jmp
mov
movsb
sbb
hlt
mov
std
xchg
mov
adcl
sub
outsb
adc
jmp
lahf
push
and
nop
add
shrb
xlat
xchg
sti
fiaddl
jo
ret
fbstp
call
out
mov
xchg
addr16
jecxz
pop
movsl
xchg
decb
pop
xor
mov
mov
xchg
pop
fs
icebp
inc
jb
xchg
pusha
cltd
mov
mov
call
scas
in
test
push
lods
mov
lahf
push
outsb
lds
fsubrl
cmp
and
ljmp
push
gs
inc
cmp
dec
mov
xchg
or
fistl
clc
pop
insl
sbb
aas
push
popf
aam
push
lahf
add
popf
or
dec
xchg
jnp
inc
rcl
pop
mov
xchg
mov
xchg
xor
cmc
push
mov
xchg
roll
jb
cmc
je
adc
sbb
pop
xor
scas
pop
insb
in
lret
fistpll
imul
es
arpl
pop
lds
and
push
scas
lea
shl
mov
addr16
mov
fistpl
mov
lock
cmp
xchg
and
dec
mov
jg
mov
pusha
fistpll
push
jmp
and
mov
lock
fs
cmp
push
jmp
xchg
lret
repz
xlat
fisubrs
jbe
test
mov
mov
adc
dec
je
mov
xchg
jg
test
ljmp
jecxz
ljmp
aaa
pop
push
addr16
mov
ds
add
sub
fildll
push
push
pop
mov
push
pop
jb,pn
pop
insb
int3
mov
lods
inc
jge
sub
leave
xchg
leave
inc
mov
or
insb
pop
fdivs
cmpsl
ja
sbb
inc
jg
or
jle
jg
pop
in
shrl
pop
push
test
dec
lcall
mov
mov
lret
inc
cmp
cld
adcl
mov
or
icebp
addr16
push
fwait
mov
xchg
sbb
lahf
or
call
outsl
mov
lahf
inc
xchg
xchg
cmp
lret
lock
mov
jne
stos
push
stos
lcall
out
adc
adc
mov
push
in
in
pop
add
movq
adc
movl
dec
sbb
fldcw
inc
dec
xchg
nop
mov
sbb
fcoms
xchg
pop
mov
xchg
xchg
jnp
jne
push
and
mov
test
mov
loopne
or
mov
sbbb
cmp
sahf
or
cmp
sbb
dec
loop
les
cmc
mov
push
inc
inc
push
push
mov
mov
inc
das
adc
pop
mov
mov
dec
xchg
mov
ss
cmp
and
pop
or
inc
lods
stc
cmpsb
mov
mov
pop
and
pop
mov
mov
adc
adc
inc
popf
mov
sub
imul
mov
out
xor
sbb
sub
xchg
outsw
leave
mov
cmp
cmc
je
aad
adc
sub
jnp
cltd
mov
incl
subb
sub
xchg
enter
outsl
leave
push
outsb
and
sbb
loop
xchg
pop
pop
adc
mov
je
outsl
pop
sarl
aam
push
fwait
movsb
call
mov
movsb
pop
cmp
test
mov
add
sbb
icebp
add
popa
subb
or
in
addr16
pop
test
xchg
xorb
push
pop
pop
fldl
jg
xchg
cmpsl
sub
add
das
pop
nop
lea
lret
cmpl
cmp
jl
push
int3
mov
pusha
jae
inc
lods
aaa
cltd
mov
and
jp
outsl
repz
fiaddl
call
out
xchg
shll
and
lods
shl
push
imul
jnp
ja
xchg
call
rorl
push
mov
mov
dec
xchg
xchg
daa
pushl
sub
popf
cmp
outsl
and
xchg
dec
sub
lods
cmp
and
mov
shll
pop
cmp
clc
inc
lock
lcall
outsl
push
add
or
sahf
mov
cmp
pop
adc
xchg
lods
cmpsl
xor
pop
aad
sub
daa
out
fwait
sarb
jecxz
xchg
lahf
xchg
aam
push
adc
icebp
addr16
subl
test
int3
das
mov
int3
dec
hlt
mov
gs
sub
xchg
out
add
cmc
test
adc
mov
lock
enter
xchg
cmp
mov
enter
popa
popf
or
test
push
cmpsl
lods
dec
adcb
int
iret
out
cs
mov
or
sarl
push
imul
xchg
test
dec
mov
xor
inc
cmp
les
dec
mov
cmc
cs
incb
test
scas
fstl
movsb
sub
adc
test
jmp
pop
xlat
push
jg
inc
aam
movsl
adc
and
xchg
cld
pop
stos
add
or
inc
jne
test
add
jecxz
and
fwait
push
pop
ja
mov
dec
mov
aad
inc
push
adc
lahf
sub
cmp
cmc
insl
mov
or
lret
pop
cmpsl
sahf
mov
in
jae
rcrl
sahf
push
cltd
xchg
xor
fiaddl
mov
xor
sub
popa
out
or
aaa
xorl
sarb
add
cmp
cmp
jo
and
in
leave
push
pusha
mov
cwtl
ficomps
mov
or
fistl
add
lea
pop
mov
or
mov
and
es
inc
in
inc
sbb
ljmp
push
in
loopne
leave
mov
fistps
incb
mov
jb
lcall
and
ss
pop
test
dec
fadd
cmp
lods
sub
movsb
out
out
lahf
mov
repnz
push
pop
les
lahf
and
inc
pop
push
push
syscall
dec
aam
dec
out
adc
push
enter
add
cmp
mov
push
mov
shll
dec
inc
jecxz
in
mov
inc
mov
jb
jmp
mov
dec
andb
push
ds
mov
pushf
push
das
adc
xor
and
xbegin
cmpsb
push
xchg
push
jnp
mov
stos
insl
inc
out
mov
push
popf
xor
mov
pop
push
jmp
loope
push
seta
clc
add
adc
dec
xchg
pop
mov
fadd
jb
bnd
test
push
lock
push
gs
mov
xor
inc
test
mov
fmull
pop
sub
jg
dec
mov
xor
mov
xchg
movl
fbld
sub
mov
int
mov
outsl
pop
fidivrs
cs
loop
xor
xor
nop
test
lahf
inc
fsubr
and
leave
mov
nop
adc
lods
inc
sbb
in
xchg
inc
adc
lea
push
xor
addr16
rolb
jg
and
push
or
scas
dec
mov
xlat
mov
jecxz
jns
pop
test
jnp
ljmp
notl
xlat
dec
aad
into
adc
test
push
inc
xchg
adc
cmp
mov
out
repz
pop
adc
mov
out
push
rorl
mov
test
test
inc
cmpsl
out
ret
subb
mov
clc
popf
into
push
xchg
sub
add
stc
scas
push
mov
lods
add
pop
out
ret
inc
xchg
lds
sbb
cmp
push
mov
sti
cmp
push
cmp
mov
into
jl
out
push
cmp
pop
fisubrl
test
aad
sbb
inc
push
xchg
loopne
mov
or
pop
add
mov
sahf
push
das
test
sahf
add
rcr
shrb
dec
xchg
roll
popf
and
xchg
mov
call
ss
sti
scas
adc
inc
iret
xchg
repnz
test
mov
adc
cmc
iret
aas
or
stc
test
hlt
mov
pop
dec
movl
xor
vpxor
inc
dec
arpl
insl
cmp
xchg
push
xchg
out
mov
cmpsl
ljmp
pop
frstor
sub
insb
jmp
out
int3
lock
xchg
mov
inc
jp
xchg
dec
outsl
push
push
dec
lods
lahf
lret
sub
nop
push
pop
inc
pop
adc
cld
mov
aas
loope
xchg
dec
mov
mov
push
or
loopne
call
jae
lods
inc
ja
and
cld
fsubrs
sub
jge
jle
push
dec
aam
shrb
inc
push
outsb
lret
repz
xchg
xor
daa
xchg
mov
mov
js
mov
daa
sub
imul
movsb
add
inc
roll
std
pop
pop
jbe
xor
dec
and
cld
out
dec
push
outsb
int3
sbb
sahf
xchg
jb
cs
loopne
push
scas
loop
mov
mov
push
push
fs
fadds
inc
std
cmp
xchg
faddp
jmp
mov
out
ds
or
data16
cli
pusha
lods
adc
add
insb
inc
fsubrs
loop
sub
cmc
jecxz
mov
ds
jae
cltd
dec
xor
jnp
dec
jmp
imul
fwait
xor
daa
lods
out
inc
out
lahf
inc
mov
in
or
jl
icebp
mov
sbb
xchg
xchg
and
dec
jb
mov
jl
cs
ret
cmp
push
adc
int3
dec
ret
inc
xchg
pop
fcmovb
sbb
js
xchg
push
sub
iret
sbb
orb
adc
inc
xchg
and
repz
sbb
leave
xor
mov
sub
lock
pop
xchg
add
les
outsl
sub
and
out
sahf
inc
cltd
xor
inc
jg
jge
test
outsb
inc
popa
cmpsl
shrb
xor
and
fisubrs
jg
jl
mov
gs
sub
push
imull
sub
test
xlat
lcall
stos
iret
jecxz
daa
ret
inc
push
imul
imul
or
leave
scas
or
cwtl
fcmovbe
push
sti
push
xchg
sbb
lea
mov
pop
jg
and
mov
adc
hlt
pop
jnp
stos
sbb
pop
mov
lcall
aaa
lds
xchg
and
adcb
pop
sub
fistps
push
xchg
dec
ja
stos
and
xchg
mov
cli
pop
mov
or
sub
mulb
inc
pop
leave
andl
lods
push
outsl
xor
test
sbb
hlt
addr16
mov
inc
loop
jns
pop
pop
adc
call
mov
dec
pop
out
mov
rep
sbb
mov
popa
scas
pop
inc
lock
cmp
inc
and
jge
js
movsb
pop
pop
mov
push
popf
leave
stos
push
inc
and
nop
pop
sahf
int3
lahf
mov
add
cmp
xchg
jnp
es
outsb
sbb
pop
out
sbb
call
enter
sbb
ljmp
or
inc
movl
pop
aaa
out
inc
lret
jmp
pop
add
push
subl
pushf
call
outsl
push
mov
movsl
shll
mov
or
outsl
ret
push
jo
fidivs
jne
jge
cld
adc
test
inc
xor
xchg
push
mov
jmp
pop
inc
jmp
or
inc
jo
test
push
sub
mov
sbb
lds
pop
mov
adc
sub
loop
push
or
hlt
inc
dec
xchg
cli
ljmp
lea
stos
xchg
psubusb
sbb
ds
sbb
push
and
adc
dec
xor
int3
cmc
sub
test
mov
adc
pop
push
sti
mov
sbb
sub
jge
xchg
fldcw
sub
aam
sub
lods
test
lods
rcrl
ret
jnp
xacquire
mov
es
in
out
lcall
xchg
sub
mov
adc
push
bound
sub
aad
mov
cs
jne
fs
mov
sub
or
adc
ja
das
inc
adc
adc
andb
aad
notl
lds
xchg
scas
stos
jno
dec
inc
add
jp
jno
adc
sbb
mov
jg
sub
xor
imul
ret
test
push
fxam
das
data16
shll
sarl
dec
ja
and
out
dec
jbe
insb
inc
lahf
addr16
sub
mov
pop
mov
adc
pop
aam
cmp
adc
dec
insb
sub
lods
das
adc
in
dec
cmp
lret
movsb
dec
mov
inc
fucomip
test
mov
movsb
mov
fildll
aas
add
or
xchg
rol
push
push
adc
sbb
mov
arpl
add
stos
rcll
lock
fwait
movsb
in
xchg
in
movsb
push
out
mov
out
cs
sbb
jle
int3
inc
mov
ret
fs
xor
jge
subl
jbe
push
test
push
dec
pop
gs
fisubrl
xor
cs
ret
mov
or
incl
push
fs
jecxz
outsb
sbb
mov
ljmp
scas
call
out
std
mov
pop
cmpb
mov
inc
adc
es
aad
lcall
cmp
push
push
or
adc
mov
fidivrs
daa
mov
cmp
dec
gs
test
mov
pop
inc
or
gs
inc
mov
outsl
jns
cmp
das
sub
jnp
ljmp
jns
ja
add
std
pop
cmp
dec
lods
cmpsb
ja
mov
ss
pop
xchg
testl
stc
mov
push
scas
out
mov
loopne
fadds
aam
jb
test
push
cmpsl
mov
test
sub
xchg
mov
sub
cmc
and
sbb
add
push
aam
dec
repz
adc
dec
and
cmpsb
xchg
nop
xchg
shll
popa
jbe
mov
outsl
lods
add
sbb
repz
cs
ret
inc
inc
push
jnp
ficomps
mov
push
dec
out
jnp
jge
outsl
sbb
orl
inc
sarl
jns
sub
ss
jo
stos
dec
push
lahf
addr16
mov
aas
push
and
stos
mov
push
lcall
sub
inc
test
scas
fists
jbe
rcr
pop
mov
iret
or
push
ret
into
mov
cltd
jg
bnd
aas
push
loopne
mov
mov
mov
pop
outsl
mov
cmpl
adc
movsl
outsl
inc
cmc
jno
adc
fs
in
mov
and
test
cmp
sbb
push
jb
notb
pushf
pushf
lahf
mov
outsb
xlat
mov
ljmp
pop
xchg
sbb
or
jo
jecxz
out
loopne
jge
les
dec
push
fidivrs
out
jg
jnp
cmp
in
xor
mov
shrb
cwtl
cmp
mov
inc
cs
into
test
cmp
or
pop
aad
ja
mov
scas
jecxz
sbb
out
cmpsl
add
adc
out
jge
das
movsb
addl
cmp
mov
lahf
xorl
xchg
jne
movsb
call
and
scas
inc
push
pop
and
fcmovnb
loope
jg
xchg
xchg
pop
outsl
sbb
repnz
mov
mov
push
movsb
jmp
pusha
in
mov
mov
xlat
pop
ret
add
fsubr
popf
adc
addb
pop
mov
jno
out
pushf
add
enter
icebp
out
cmp
adc
les
lock
jo
push
sbb
arpl
jo
xor
sub
fcmovbe
popf
in
stos
mov
stos
and
das
mov
cmpsl
lds
inc
dec
push
jb
pop
unpckhps
mov
pushf
rorl
ficompl
dec
inc
add
mov
mov
and
pop
sub
dec
xchg
shlb
inc
mov
adc
lods
loopne
cmp
sbb
cmp
mov
aaa
loope
in
lea
push
addr16
mov
ss
push
pop
pushf
pop
repz
mov
xchg
adc
fldcw
and
xor
hlt
imul
imul
pop
sub
push
jecxz
inc
scas
mov
sbb
mov
inc
jle
xor
xchg
push
mov
into
lahf
mov
sub
nop
movsl
push
into
sub
mov
xorl
xchg
aaa
out
fcmovne
and
stos
pushf
mov
mov
test
mov
lret
sahf
push
or
xor
adc
popa
sub
mov
mov
je
icebp
or
fistpl
imul
gs
push
inc
outsl
xchg
lret
cmpsb
jg
push
jmp
inc
or
cmp
movsb
ret
xchg
or
inc
push
cltd
xchg
call
sbb
inc
mov
pop
pushf
and
inc
pop
jo
loop
sbb
test
xchg
jae
xchg
stos
imul
std
xchg
lods
inc
je
aas
mov
pop
in
arpl
enter
push
xor
enter
sbb
cmp
push
pop
mov
jge
test
mov
or
or
scas
dec
sub
jle
ljmp
shr
std
inc
popf
sbb
dec
xchg
and
fbstp
mov
push
xor
pop
pushf
push
imul
shll
inc
pop
jb
sti
dec
icebp
movsb
sbb
movsb
sbb
mov
dec
je
out
sbb
imul
popf
jg
repz
add
push
sub
rcr
push
and
inc
xchg
and
mov
pop
cmp
test
jge
sub
mov
subb
inc
pop
mov
bound
push
scas
arpl
push
cmp
fwait
aad
adcl
mov
push
mov
pop
das
inc
xchg
inc
xor
xchg
push
imul
aas
sbb
nop
xchg
pop
rcrb
inc
adc
jb
int
dec
test
imulb
xor
jne
aaa
add
cmpsb
add
jge
xchg
push
clc
jle
dec
pop
cwtl
popf
jmp
daa
mov
inc
and
jb
sub
ret
jae
call
push
push
jge
clc
pop
mov
jl
or
stc
test
jecxz
outsl
shrl
cmp
out
inc
fst
dec
mov
out
fistpl
mov
mov
fwait
lods
mov
add
nop
push
pop
push
data16
call
leave
sub
jge
stos
shrl
mov
sbb
jnp
mov
mov
addr16
lods
call
scas
xor
mov
lret
cmp
xlat
clc
movsb
xchg
lret
mov
pop
or
and
out
add
cmpsl
std
outsb
mov
jge
push
jo
mov
in
adc
and
sbb
lcall
popf
mov
xchg
pop
jno
aad
call
and
out
inc
fdivs
xchg
and
scas
jl
xchg
mov
xchg
rcrl
sbb
js
push
out
lcall
add
outsl
imul
ret
mov
and
lcall
mov
cltd
cs
mov
dec
inc
orb
dec
sbb
inc
int3
jle
mov
nop
dec
dec
cs
lahf
xchg
mov
adc
adc
push
cmp
push
mov
pushf
fstps
repz
add
push
lcall
add
mov
xchg
das
mov
xchg
dec
loopne
or
filds
in
sbb
adc
or
shrl
cmp
fmuls
stos
xchg
push
rcrb
pop
xchg
test
fisubrl
test
xor
cmc
sub
adc
and
arpl
or
push
mov
push
mov
mov
shll
cmp
pop
add
jno
mov
and
and
fists
leave
cmp
std
decl
xchg
out
push
pop
test
dec
mov
mov
xchg
loop
sbb
bound
fldt
pop
sub
inc
sub
jnp
stos
cmp
cmp
lret
inc
xchg
fs
fstpt
or
scas
mov
movsl
cmc
sbb
call
adc
jae
nop
ss
mov
jne
dec
jge
pop
inc
mov
xchg
in
sbb
lds
xchg
fsubs
pusha
cmp
and
jo
adc
mov
test
stos
sub
addl
inc
js
mov
jno
ret
scas
dec
and
xchg
outsl
jge
imul
mov
mov
insb
mov
pop
dec
sub
popf
sbb
xchg
push
sbb
or
mov
nop
or
sbb
sub
mov
or
mov
std
aaa
pop
sub
mov
test
push
std
sbb
es
mov
cwtl
aam
and
xchg
adc
ficoml
xchg
loope
sub
sbb
mov
sub
je
cmpsb
leave
adc
dec
add
mov
dec
inc
jge
aaa
shrl
fbld
dec
cld
mov
mov
lea
inc
sub
das
and
jnp
push
xor
iret
inc
ficompl
or
mov
pushf
pop
cmp
clc
jno
push
or
out
popf
sti
sahf
cmp
sbb
push
mov
push
push
das
hlt
out
imul
std
xor
jnp
jle
adc
mov
daa
cltd
arpl
sub
out
xor
jmp
data16
pop
mov
mov
xor
popa
mov
ret
xor
das
jo
out
jae
pop
mov
xor
out
ja
and
sub
lret
mov
outsl
into
pushf
popf
push
jo
cwtl
and
outsb
sub
adc
data16
cmp
xchg
shlb
xchg
movsb
sub
push
and
divb
and
rorl
sar
xchg
andl
test
add
mov
jnp
add
push
dec
mov
in
sub
xor
cli
or
in
and
xchg
mov
rorl
imul
add
jmp
sbb
mov
mov
xlat
jbe
roll
adc
sub
adc
add
ror
dec
mov
cmp
cmp
shl
ds
jb
adc
stos
les
pop
pop
xchg
sub
shrl
cmp
and
pop
es
mov
sbbl
mov
dec
adc
das
mov
jmp
xor
out
or
es
es
or
adc
in
lahf
pop
dec
popa
je
test
or
dec
out
aad
cmp
pusha
inc
xchg
jp
add
push
cmpsb
xchg
je
outsb
test
mov
ret
cmpsl
and
xchg
xor
jb
fsubrs
outsb
cmp
icebp
inc
gs
mov
jmp
and
jecxz
imul
sub
jmp
jns
rcll
movnti
in
pop
popf
add
pop
jb
cmp
test
testb
push
pop
aad
loope
pop
add
out
xchg
call
add
cltd
test
inc
lahf
je
xchg
cmpsb
push
pop
repnz
mov
cmp
loope
pop
not
cmp
lods
sub
iret
scas
or
lahf
xor
pop
inc
dec
mov
mov
inc
add
data16
add
cmp
cmpsb
jns
ss
dec
int3
iret
loope
jge
rcrl
rcrb
cmpsb
in
les
mov
xor
or
xor
mov
xchg
mov
arpl
dec
mov
mov
xchg
jge
mov
mov
sub
loope
inc
js
sahf
fs
jmp
and
pop
shlb
fneni(8087
mov
imul
sti
mov
lock
icebp
js
je
aad
xchg
adc
lea
ja
or
mov
xlat
push
popl
imul
add
cmp
adc
loopne
movsb
adc
mov
daa
dec
xchg
mov
add
jbe
sub
pop
outsb
add
cld
pop
inc
inc
movsl
cmc
mov
clc
cwtl
mov
mov
js
pusha
push
enter
leave
cmp
push
jae
and
lea
das
inc
aas
jl
sub
in
adc
arpl
test
xchg
loope
das
leave
insb
mov
mull
lods
ret
lcall
xor
push
jle
test
push
xchg
sahf
mov
lods
loope
mov
sbb
mov
or
xchg
jo
push
inc
jge
cmp
cld
mov
lea
ds
rcll
sbb
daa
sbb
mov
jge
or
xor
pop
cmc
lret
adc
cltd
push
jecxz
mov
mov
aaa
xchg
cld
lods
jb
shlb
jl
jge
test
xchg
mov
aas
outsb
push
scas
jge
mov
test
test
aam
jnp
pop
push
pusha
scas
or
xor
dec
cmp
pop
jle
xchg
pop
addr16
dec
fisttpl
rol
iret
jl
repnz
dec
out
push
sbb
das
inc
xor
dec
aam
sbb
movsl
int
adc
xchg
sub
cli
xchg
jg
and
roll
mov
cmp
push
jecxz
call
int
data16
inc
or
mov
call
mov
adc
inc
shrb
mov
rcrb
out
xor
in
mov
in
sub
sbb
mov
js
mov
mov
outsl
ljmp
outsl
pushf
sbb
jbe
je
mov
popf
push
out
icebp
ret
lcall
and
roll
fdivl
aas
pop
jge
mov
into
push
pop
je
pop
xchg
sbb
xor
nop
xlat
push
cmp
jns
inc
dec
mov
scas
jecxz
scas
jle
mov
repz
nop
adc
add
jnp
pop
jnp
lahf
cmp
inc
dec
jge
dec
jecxz
leave
jb
sbb
sbb
add
out
lahf
arpl
call
cmpsl
test
inc
out
sub
inc
adcl
add
test
pop
cmp
adcb
stos
and
pop
arpl
repnz
scas
data16
jne
nop
out
fwait
sub
push
iret
xchg
push
mov
dec
negb
pop
sahf
push
jb
jno
xchg
ljmp
out
jo
scas
push
lods
test
out
adc
das
orl
mov
hlt
jns
lds
adc
ret
mov
pop
das
movsl
dec
lahf
jecxz
sbb
mov
adc
cmpsl
push
xor
in
xchg
mov
pop
xor
jne
jo
movsb
mov
sub
aad
lods
notl
xchg
jo
out
sbb
fmull
push
enter
test
pop
sbb
pop
ret
test
pop
icebp
icebp
pop
mov
mov
adc
dec
fs
sub
out
out
xor
subl
nop
mov
cmp
inc
imul
les
or
pusha
lods
shll
cmp
sub
js
xchg
aas
and
jle
cmpb
xchg
test
mov
dec
and
inc
movsl
xchg
rcl
mov
aaa
test
lahf
in
sahf
sub
inc
rcrb
xchg
sub
cmp
cmp
adc
hlt
out
adc
mov
xchg
xchg
orl
cmc
shl
push
cmc
rolb
mov
sbb
pop
lock
or
les
out
pop
ret
data16
jp
aad
add
subb
scas
mov
ret
push
push
ror
and
xchg
mov
cmpsb
and
out
cmpb
call
outsl
mov
pop
mov
loop
push
sub
int3
test
xchg
fldt
and
push
scas
lahf
mov
cmpsb
ret
rorb
mov
inc
add
jecxz
scas
out
mov
sahf
shrl
mov
cmp
push
jnp
out
jge
mov
inc
push
repnz
stos
jno
aaa
lods
fistpll
lahf
andl
and
bound
icebp
push
mov
push
fwait
das
mov
cmpsb
mov
cwtl
mov
fsubl
pop
cmp
test
pop
adc
xchg
pop
inc
dec
shrl
jge
shrl
jecxz
sbb
call
add
test
adc
xchg
jecxz
jnp
xchg
add
mov
scas
fistpl
gs
jle
jmp
je
imul
inc
orb
pop
test
in
insl
dec
add
jmp
in
and
hlt
mov
fucomi
inc
iret
jns
jmp
movsb
mov
adc
push
fstpt
mov
jo
dec
dec
mov
push
test
popa
ret
fimuls
aaa
push
xchg
loopne
and
test
stos
inc
rcll
cmp
cmp
adc
call
repnz
pop
adc
mov
imulb
mov
pop
mov
cmc
fld1
mov
add
notb
cmp
clc
iret
out
pusha
mov
sub
xchg
xchg
in
adc
iret
movsb
mov
jmp
aad
rcll
xchg
and
aaa
push
lret
xchg
mov
in
ds
dec
in
xchg
lea
mov
add
loopne
dec
ja
test
jmp
xchg
jle
fsub
fwait
das
push
xor
pop
test
cmp
outsl
inc
gs
pop
lock
jns
mov
cmp
adc
xchg
xorl
add
cwtl
out
inc
jmp
cmp
cmp
or
aad
inc
push
inc
mov
popf
mov
xchg
lds
sbb
fdivl
fs
cmp
in
lea
push
inc
nop
push
or
pop
dec
pop
inc
xchg
loope
xlat
popa
mov
cmp
mov
pop
outsl
ret
xor
xchg
xchg
push
xchg
mov
inc
inc
jg
cmpsl
int3
stos
dec
loope
push
out
flds
jne
inc
stos
pop
sub
mov
push
cmp
xor
aam
cmpsl
cmpl
inc
das
les
xchg
jle
sbb
xchg
jmp
popa
sub
xchg
cmpsl
rcll
lods
mov
dec
xchg
cmp
add
mov
ljmp
jo
in
bound
repnz
sbb
fbstp
mov
stos
xchg
mov
mov
xlat
scas
push
push
pushf
orl
jle
sbb
insl
jmp
jmp
push
xchg
add
jo
sub
mov
jge,pn
call
adc
jp
mov
inc
daa
xchg
jp
inc
mov
pop
aam
int3
xchg
and
add
mov
scas
mov
stos
ds
sbb
jp
sub
mov
mov
xchg
negl
out
pop
orl
aad
lahf
push
xchg
pusha
cmp
hlt
pop
cmp
rorb
insl
inc
inc
mov
mov
pop
test
out
dec
add
dec
dec
mov
sub
cmpsl
xchg
aam
sbb
jmp
dec
inc
or
imul
pop
push
push
adc
leave
enter
xor
mov
dec
cld
add
jnp
adc
loop
fld
lods
into
inc
xchg
jmp
xor
mov
or
cwtl
popf
inc
xchg
out
les
imull
stos
jmp
pop
hlt
stos
add
adc
cmp
xchg
mov
inc
scas
pop
in
mov
imul
call
adc
rcll
xchg
cmpsl
test
add
iret
dec
inc
movl
test
shll
mov
std
lea
mov
std
sub
lret
push
dec
push
sbb
in
das
in
lahf
mov
and
orl
insb
cmp
jecxz
inc
xor
sub
les
aad
ret
push
scas
leave
sub
push
add
pop
push
jno
mov
xchg
cmp
aas
lods
in
iret
and
movsl
loop
jecxz
outsl
pusha
adc
shrl
movsb
jb
xchg
mov
ljmp
dec
pop
xor
je
fisubrl
clc
enter
add
aad
neg
mov
mov
lret
fs
pinsrw
pop
adc
popf
int3
mov
ret
outsl
mov
inc
jp
push
xchg
pop
test
or
push
ljmp
xor
inc
rcrb
pop
and
push
push
daa
inc
mov
adc
lods
push
mov
in
pop
outsl
lcall
or
int
adc
leave
or
or
test
cmp
fisttps
mov
dec
cld
ror
ret
lahf
scas
dec
jg
jae
or
inc
jp
daa
push
les
flds
xchg
mov
jle
mov
ficomps
sbb
add
aas
lea
and
add
cltd
push
das
ja
cltd
pop
andl
scas
push
stos
xor
scas
andl
or
dec
pushf
ret
cmp
xchg
fcoms
iret
add
sub
xchg
es
xchg
scas
or
jne
gs
jmp
lcall
ja
ds
stos
enter
imul
mov
mul
mov
out
out
clc
movsb
fwait
rcll
cwtl
sub
insb
es
inc
sub
hlt
pop
fs
pop
fcomps
mov
sahf
push
add
push
js
pop
scas
xor
loope
cmpsl
test
stos
sarb
sub
cmp
pop
mov
add
andb
arpl
leave
out
ljmp
lods
orl
add
xchg
sbb
leave
lret
adc
mov
push
mov
cld
in
sahf
aaa
jmp
xchg
aam
test
test
mov
insb
mov
jnp
jge
rorl
cmp
lret
imul
nop
loop
scas
xchg
pop
jno
cli
xchg
je
stc
jb
inc
adc
int
inc
aam
pop
mulb
add
out
in
sub
pop
and
jle
jmp
cmp
out
icebp
pop
out
test
pusha
stos
js
xchg
lahf
xchg
sub
divb
in
mov
dec
dec
lods
mov
sti
mov
mov
and
sbb
jl
daa
dec
adc
lds
std
sub
jmp
fs
xchg
inc
push
dec
negl
insb
mov
dec
out
and
xor
call
xchg
outsl
mov
mov
adc
and
in
pushf
imul
sahf
and
nop
and
fidivrl
repnz
movsb
push
xor
sbbl
xor
ret
xorb
sbb
push
xlat
aaa
sbb
jp
das
adc
icebp
scas
incb
shll
add
addps
mov
dec
add
xchg
incl
call
jo
test
ret
add
and
test
dec
lock
outsb
mov
add
movsl
or
decb
pop
xor
cli
dec
pop
push
mov
stc
shrl
enter
or
add
mov
adc
xchg
mov
cmp
mov
pusha
insb
lahf
arpl
fstl
xchg
pop
arpl
mov
inc
rolb
jmp
test
out
pop
pop
jae
insl
xor
mull
or
fwait
push
push
sbb
std
das
inc
add
mov
loope
outsl
push
loopne
aam
pause
scas
popa
pop
ljmp
stos
sbb
and
sub
shrb
jns
cltd
jmp
jl
lahf
nop
push
dec
sub
xchg
clts
fwait
call
sub
dec
outsb
adc
push
xchg
xor
sub
cmp
lret
lock
data16
test
xchg
lock
xor
add
jge
loope
mov
arpl
add
aas
and
jecxz
lods
mov
scas
jns
cmpsl
cmpsl
bound
outsb
cmc
insb
xor
sbbb
mov
rclb
rcrb
add
adc
test
inc
add
add
clc
roll
nop
add
inc
bound
imul
add
cmp
dec
push
inc
fs
xor
addr16
xor
imul
push
dec
inc
fs
pop
dec
push
jae
aaa
dec
data16
dec
push
fs
jae
insw
pop
push
outsb
jb
push
outsl
js
imul
jp
xor
xor
arpl
je
inc
push
pop
push
imul
insl
cmp
outsb
add
add
pop
push
inc
dec
dec
ss
js
xor
xor
insl
push
jns
pop
dec
push
push
push
dec
jne
push
xor
ss
dec
pop
inc
inc
ja
push
inc
cmp
popa
insl
dec
imul
xor
imul
ss
cmp
dec
arpl
xor
inc
dec
jne
inc
push
xor
dec
dec
xor
imul
imul
dec
addr16
inc
push
dec
dec
inc
aaa
dec
ss
gs
insb
jo
jne
inc
push
push
jno
push
dec
add
add
add
loop
or
add
dec
xor
xor
jp
jo
imul
push
xor
dec
outsl
aaa
popa
insb
pop
jae
je
push
push
push
cmp
push
dec
pop
jne
insb
arpl
ja
inc
xor
imul
dec
inc
dec
jno
bound
ss
je
dec
jo
xor
xor
addr16
xor
cmp
add
imul
jno
xor
inc
gs
xor
inc
inc
jns
bound
jae
popa
imul
dec
xor
insl
inc
inc
pop
popa
outsb
inc
push
inc
imul
dec
jo
xor
inc
imul
dec
push
dec
add
add
dec
inc
inc
inc
je
inc
dec
dec
add
pop
dec
xor
je
jp
dec
push
jae
cmp
dec
aaa
dec
pop
push
outsl
outsl
inc
fs
xor
dec
push
xor
jo
imul
dec
jae
push
push
jno
pop
push
push
inc
dec
dec
xor
inc
inc
inc
outsb
fs
push
insb
inc
xor
outsb
jno
push
inc
aaa
ja
inc
inc
je
dec
gs
jp
popa
push
xor
js
jbe
outsb
push
outsl
insb
inc
xor
push
push
jbe
jp
dec
dec
addr16
push
jbe
dec
push
jns
push
arpl
push
xor
imul
dec
ja
xor
dec
push
arpl
inc
push
imul
xor
addr16
aaa
push
imul
insl
pop
inc
push
push
jb
xor
push
jne
jo
dec
jns
pop
push
inc
imul
inc
inc
push
push
xor
add
pop
adc
or
sbb
aaa
jp
jae
cmp
jp
xor
push
insl
push
arpl
dec
inc
fs
ja
dec
addr16
jp
js
inc
inc
dec
cmp
imul
push
dec
jne
pop
cmp
dec
outsb
outsb
jo
dec
inc
outsb
xor
push
insb
inc
push
pop
dec
jb
push
pop
inc
dec
cmp
xor
outsb
arpl
add
jo
push
pop
push
outsl
pop
aaa
cmp
inc
push
push
inc
xor
pop
dec
dec
inc
jbe
aaa
aaa
js
push
push
insb
xor
ja
pop
jno
data16
inc
fs
jb
js
jb
xor
je
js
push
dec
push
dec
xor
push
imul
jno
ss
inc
inc
jo
bound
add
add
dec
js
insl
xor
xor
pop
outsb
jae
dec
cmp
jbe
inc
push
je
inc
push
xor
inc
inc
push
addr16
dec
jb
inc
inc
imul
aaa
inc
push
push
push
ss
outsb
bound
pop
aaa
ja
pop
xor
bound
dec
jb
imul
push
push
xor
jne
data16
inc
xor
jbe
push
imul
dec
inc
pop
data16
fs
xor
push
insb
dec
js
push
inc
dec
inc
ss
push
ss
inc
cmp
push
jne
gs
xor
jp
jo
jp
inc
push
bound
insb
jb
insl
xor
push
push
dec
inc
pop
xor
je
inc
pop
jo
jno
jb
outsb
js
push
outsl
cmp
dec
xor
addr16
pop
push
push
inc
pop
inc
cmp
jns
jb
push
jp
inc
push
outsl
jno
push
push
add
imul
jns
xor
dec
push
outsl
insb
dec
jp
push
pop
popa
jp
xor
push
pop
inc
push
xor
pop
inc
xor
pop
pop
je
bound
jbe
dec
dec
fs
xor
jns
jp
pop
push
outsl
jb
js
fs
dec
xor
dec
push
je
aaa
inc
xor
dec
pop
xor
push
je
inc
push
imul
xor
jb
jns
xor
addr16
add
add
ss
dec
cmp
jb
inc
pop
cmp
push
push
jp
xor
jo
push
push
pop
inc
xor
addr16
inc
xor
insb
jne
ja
xor
xor
dec
push
push
pop
cmp
ss
jb
inc
inc
fs
dec
cmp
je
dec
dec
dec
pop
jo
add
fs
inc
xor
dec
dec
insb
dec
push
inc
cmp
xor
pop
dec
arpl
insb
dec
dec
pop
je
imul
inc
inc
dec
xor
inc
cmp
inc
xor
inc
jns
jae
push
inc
bound
dec
push
outsl
imul
dec
bound
inc
xor
inc
jns
push
push
js
outsl
dec
inc
jne
inc
addr16
jno
pop
xor
pop
ss
jbe
outsb
ss
insl
popa
cmp
je
jo
imul
push
push
xor
js
insl
dec
dec
inc
push
push
dec
push
dec
insl
jne
dec
popaw
outsl
inc
dec
dec
outsl
dec
pop
jp
outsl
jns
ja
fs
xor
jb
aaa
xor
imul
xor
add
add
jno
xor
push
js
inc
popa
dec
xor
xor
dec
dec
popa
dec
jae
fs
outsl
cmp
pop
jb
fs
outsl
jb
insb
ja
arpl
push
cmp
outsl
js
jbe
dec
addr16
js
bound
push
push
xor
jns
dec
push
pop
pop
jp
dec
gs
jns
jb
xor
pop
pop
jp
inc
bound
pop
dec
js
insb
inc
dec
push
jns
inc
xor
jo
dec
pop
addr16
push
outsb
cmp
jo
ja
popa
outsl
xor
dec
je
je
imul
insb
inc
cmp
jbe
push
push
ss
jp
outsb
inc
dec
je
jp
dec
push
push
jno
ss
js
push
js
ss
inc
gs
outsl
imul
gs
outsb
xor
bound
gs
add
add
das
xchg
jmp
insl
jmp
xchg
cmp
in
mov
out
lret
enter
mov
repnz
dec
mov
pop
add
pop
push
pop
insl
xor
bound
push
pop
inc
jb
je
dec
jae
pop
jne
push
jo
addr16
addr16
push
pop
push
xor
xor
jp
bound
imul
jo
aaa
dec
dec
xor
jbe
inc
bound
inc
pop
jne
insb
jns
push
jne
push
aaa
gs
gs
fs
pop
dec
js
jp
xor
inc
bound
dec
xor
dec
je
xor
jbe
inc
dec
outsl
arpl
gs
push
inc
push
je
dec
inc
dec
arpl
ss
push
jae
xor
push
dec
dec
jbe
pop
dec
ja
inc
push
dec
push
jns
dec
push
xor
push
push
push
pop
jo
xor
push
jne
inc
ja
xor
inc
xor
dec
ja
jns
gs
js
add
add
inc
push
push
outsl
ja
gs
xor
cmp
insb
inc
push
push
data16
push
xor
insl
inc
bound
jno
dec
push
je
inc
dec
inc
jns
dec
insl
bound
inc
xor
addr16
fs
xor
inc
inc
jae
inc
dec
inc
jno
xor
xor
inc
aaa
popa
dec
arpl
bound
jno
cmp
xor
dec
arpl
inc
dec
push
inc
ja
ss
ja
insb
dec
push
insl
insb
dec
inc
push
outsl
push
dec
cmp
imul
xor
push
insb
push
jns
dec
je
js
push
push
push
dec
xor
xor
inc
push
push
dec
inc
inc
inc
xor
outsb
push
dec
cmp
inc
jns
push
outsl
pop
bound
push
add
add
dec
dec
inc
inc
cmp
js
xor
imul
xor
push
jae
cmp
js
jo
inc
jo
dec
insl
dec
push
push
push
inc
dec
add
inc
xor
inc
imul
insb
imul
cmp
push
inc
push
dec
pop
inc
jbe
ss
xor
jns
push
je
xor
insb
push
dec
dec
fs
insb
jno
addr16
xor
fs
aaa
data16
addr16
inc
ss
dec
xor
dec
js
outsb
xor
dec
dec
xor
insl
push
xor
imul
popa
jns
je
xor
jno
inc
outsl
outsl
outsb
xor
inc
push
aaa
jp
dec
outsb
dec
pop
dec
dec
push
inc
inc
dec
xor
jo
jp
push
inc
inc
addr16
fs
push
inc
jo
dec
jb
push
push
jno
dec
imul
push
xor
push
pop
dec
dec
push
dec
inc
dec
insl
inc
push
ja
dec
push
pop
jp
dec
inc
push
gs
cmp
jo
push
je
insb
inc
insb
arpl
dec
xor
imul
push
xor
add
push
cmp
jns
cmp
pop
insl
push
jp
imul
addr16
push
xor
cmp
jne
dec
data16
insb
dec
dec
outsl
imul
inc
fs
xor
inc
dec
dec
xor
push
xor
push
push
xor
push
push
jae
xor
pop
jae
push
dec
jno
dec
cmp
insl
jb
xor
js
dec
xor
xor
jne
push
jno
popa
dec
jno
jae
xor
push
xor
push
jbe
inc
je
jp
push
addr16
dec
cmp
jno
push
outsl
dec
push
inc
push
push
imul
xor
cmp
push
inc
push
pop
jb
dec
dec
outsl
outsl
cmp
jno
add
imul
inc
insb
inc
push
push
dec
jbe
xor
outsb
inc
inc
gs
push
dec
jp
dec
pop
jo
pop
inc
dec
inc
dec
inc
jp
push
insl
push
cmp
push
data16
push
dec
jno
inc
dec
fs
inc
push
cmp
gs
jno
xor
jae
insb
popa
inc
js
dec
jbe
xor
jne
jp
ja
xor
jns
xor
outsl
jb
insl
ss
dec
push
dec
jo
pop
push
cmp
jbe
inc
jns
dec
push
pop
dec
jp
push
insb
arpl
ja
jbe
cmp
push
popa
dec
js
dec
push
inc
push
bound
jne
outsb
inc
addr16
insl
xor
addr16
cmp
inc
imul
push
gs
aaa
dec
xor
dec
push
dec
inc
xor
push
cmp
add
add
mov
inc
je
jne
push
xor
pop
inc
imul
push
je
push
inc
outsb
xor
dec
inc
xor
jp
dec
dec
jne
push
jno
jae
jo
push
dec
gs
bound
popa
data16
gs
push
inc
jo
push
dec
inc
cmp
insl
push
dec
dec
ja
push
dec
outsb
cmp
fs
jp
push
aaa
pop
inc
inc
gs
outsb
jno
dec
dec
xor
push
push
dec
push
dec
push
xor
push
jb
addr16
jo
xor
aaa
pop
xor
push
addr16
data16
aaa
xor
ss
inc
dec
inc
fs
bound
dec
inc
inc
popa
bound
push
xor
dec
xor
aaa
pop
xor
inc
push
arpl
push
arpl
xor
push
outsl
xor
push
je
dec
add
add
jbe
dec
jne
push
push
imul
inc
gs
push
xor
insl
cmp
inc
dec
xor
dec
inc
inc
jns
jae
dec
cmp
dec
pop
cmp
outsl
dec
jp
jne
push
push
bound
addr16
pop
insb
inc
push
dec
inc
dec
push
arpl
jne
cmp
pop
jb
inc
dec
inc
push
cmp
outsb
dec
dec
arpl
xor
dec
dec
push
gs
dec
imul
jb
inc
push
inc
dec
push
xor
inc
cmp
pop
dec
push
bound
dec
cmp
jbe
xor
xor
push
jno
push
fs
push
popa
inc
push
inc
js
xor
dec
je
dec
xor
jns
push
js
push
push
insl
imul
push
dec
xor
inc
insl
push
jbe
aaa
jb
imul
aaa
push
xor
push
add
add
or
dec
pop
xor
inc
inc
insb
pop
arpl
dec
push
dec
pop
inc
push
cmp
push
xor
jno
xor
addr16
outsl
ja
dec
popa
xor
cmp
xor
bound
je
gs
outsl
arpl
xor
imul
dec
cmp
dec
pop
push
fs
inc
xor
pop
xor
jbe
outsl
jae
dec
push
push
aaa
imul
jae
pop
outsb
jne
xor
dec
inc
pop
jbe
dec
gs
pop
push
add
add
push
xor
xor
jne
je
push
push
ss
cmp
jp
xor
push
xor
dec
inc
jo
push
jp
dec
cmp
push
push
outsl
gs
xor
dec
arpl
popa
insb
inc
pop
bound
pop
aaa
outsb
inc
jo
outsl
cmp
arpl
push
jae
push
push
addr16
jbe
inc
xor
jne
inc
push
xor
jae
jb
outsb
pop
jp
cmp
arpl
fs
ja
inc
push
push
dec
insb
dec
dec
inc
push
xor
xor
push
dec
pop
jbe
insb
xor
jbe
push
add
add
imul
dec
push
push
inc
pop
aaa
push
inc
ss
xor
inc
dec
pop
jne
jae
pop
inc
jo
pop
push
js
push
inc
push
push
xor
inc
jbe
push
cmp
push
jp
inc
xor
push
jae
outsl
outsl
push
dec
insb
jo
addr16
dec
pop
gs
xor
xor
push
push
insl
data16
push
xor
arpl
js
jno
xor
jno
js
dec
arpl
dec
pop
ja
imul
jbe
bound
jbe
ja
xor
inc
gs
insl
inc
xor
jne
inc
inc
xor
xor
ja
popa
dec
xor
cmp
jne
outsl
push
ss
pushw
jae
jae
pop
popa
inc
inc
dec
bound
cmp
jno
inc
jo
jo
xor
push
cmp
dec
xor
xor
je
jne
fs
cmp
dec
push
inc
push
ja
arpl
inc
push
ja
je
xor
add
inc
dec
inc
xor
jb
gs
dec
inc
push
aaa
popa
cmp
cmp
outsl
push
inc
push
outsl
push
push
js
imul
push
outsb
dec
push
dec
inc
inc
inc
push
jo
push
xor
js
push
dec
jns
jno
pop
insb
outsl
dec
je
pop
dec
jae
inc
outsb
inc
push
inc
popa
jbe
add
add
sbb
push
and
inc
add
inc
ja
jecxz
unpcklps
cmpsl
cmp
ljmp
nop
aam
inc
pop
add
rclb
popa
fwait
sub
sub
jne
jae
mov
xchg
ja
sub
xor
xchg
pop
xchg
push
test
cwtl
cmpsl
ja
xchg
dec
inc
mov
and
shrb
xchg
mov
or
mov
inc
xchg
sarl
shrd
loopne
lret
and
jp
xchg
ret
add
and
push
aas
pop
mov
pop
ret
mov
sbb
ret
or
fidivl
addb
xor
sbb
xchg
xchg
loopne
xchg
dec
dec
jl
adcb
and
lcall
cmpsl
rorl
xor
fadds
push
movl
scas
push
push
mov
subl
pop
das
pushf
jle
iret
test
adc
mov
adc
lret
jmp
pop
test
adc
push
sub
fsubs
jns
call
jbe
loopne
lock
inc
jle
std
mov
rcll
sbb
xor
lahf
xor
jle
and
push
jno
push
adc
mov
fdivrs
in
shrb
jge
jne
sbb
push
dec
xor
cmpsl
sub
ds
outsl
sbb
jbe
push
shl
jo
pop
pushf
push
lods
int3
pop
je
gs
inc
pop
xor
add
out
bound
adc
inc
cli
or
push
push
jp
in
addr16
js
aaa
mov
mov
xchg
bnd
stos
mov
add
sub
imul
lret
cwtl
jns
std
add
push
lods
inc
inc
aas
lods
fwait
lret
out
sbb
xchg
bound
cmpsb
mov
stos
les
rclb
lea
int
aad
lahf
push
jge
clc
add
push
lret
cmpsl
jae
dec
out
pop
xor
test
lds
pop
xchg
jle
xchg
cmp
xchg
mov
stos
fcmovne
les
adc
movsl
or
mov
sub
or
pop
jbe
adc
sbb
in
dec
lock
inc
fmull
sub
movl
aas
xchg
hlt
sahf
ret
inc
inc
insb
jbe
jbe
mov
cmp
out
addl
push
pop
bound
cmp
inc
fbld
sbb
inc
add
ja
pop
jne
insl
mov
pop
icebp
aam
lds
cmc
cmc
mov
int3
push
xchg
xor
arpl
mov
inc
jecxz
jbe
adc
lcall
sbb
jge
mov
call
out
xchg
adc
or
mov
mov
or
mov
jnp
int
or
fnsave
push
dec
data16
xor
xchg
frstor
or
in
pop
pop
pop
mov
mov
ret
adc
aas
mov
inc
mov
mov
inc
test
push
push
shlb
xchg
or
inc
rep
loop
outsb
in
lret
repz
cltd
sub
lcall
pop
adc
fmull
mov
mov
aam
jo
jno
inc
dec
push
mov
scas
inc
imulb
cmp
push
mov
mov
mov
push
fdivs
jg
cmpsb
push
fwait
mov
push
mov
mov
cmp
shll
into
dec
pop
notl
xchg
jp
outsl
xor
loopne
xchg
mov
adcb
pusha
cmp
testl
outsl
aas
add
cmp
mov
xchg
push
scas
xor
das
ja
enter
sahf
xchg
xchg
jp
hlt
test
aas
enter
ret
mov
les
scas
jo
xchg
aam
xor
es
xor
roll
rcrl
or
sbb
jae
jl
jo
adc
xchg
clc
mov
mov
push
loop
inc
push
or
xchg
xor
imul
adcl
fmul
cmp
in
cmpsl
scas
mov
pop
jb
sbb
and
aas
xchg
or
ficoms
call
scas
enter
xchg
lods
jl
xor
mov
and
sub
ret
lods
jns
call
dec
shll
inc
xchg
jbe
test
adc
mov
pop
mov
loope
test
jnp
sub
adcb
mov
push
xchg
outsb
mov
call
scas
ljmp
or
int
jno
popf
sub
mov
cmp
mov
mov
lret
cli
hlt
in
xor
inc
movsb
inc
inc
nop
push
dec
fwait
xlat
mov
inc
test
sbb
mov
jb
aas
shrb
rorl
adc
mov
push
in
mov
jge
lods
out
hlt
fdivl
sbb
int3
pushf
rcll
fcompl
inc
out
mov
rclb
test
xchg
aam
and
mov
xchg
pop
sub
mov
test
lahf
mov
xor
jae
out
and
mov
adc
test
jns
sbb
lods
inc
xor
fwait
jge
pop
mov
mov
and
test
jo
cmp
and
popa
mov
sub
xor
xchg
aad
xor
dec
cmp
mov
pop
dec
push
subb
inc
pop
neg
pop
repnz
cmc
cwtl
and
daa
mov
pop
cmp
push
test
cli
jb
or
cmp
scas
sbb
mov
mov
sub
mov
jo
testl
lods
dec
jo
es
insb
scas
or
insl
ja
js
stc
std
or
adc
sahf
pop
jae
subl
outsl
xor
out
and
shlb
aas
sub
or
xchg
out
lcall
call
and
cmp
sti
scas
andl
adc
push
mov
or
adcb
dec
push
inc
cwtl
sbb
mov
mov
mov
ss
sti
lods
mov
repz
lods
adc
stos
shll
das
in
sahf
call
jne
mov
pop
push
in
pop
insl
sbb
mov
out
jne
xchg
jl
mov
pop
fcoms
inc
xor
xor
ja
daa
fdivs
ficompl
loope
outsl
jnp
outsl
sbb
xchg
insb
adc
jl
mov
jl
xor
pop
lods
out
je
bswap
push
jl
mov
ds
xor
scas
xchg
and
sbb
sahf
inc
xchg
cmp
rcrb
call
outsl
sub
jg
stos
sub
xor
xor
xchg
push
xchg
fs
aaa
cmpsb
adc
inc
dec
mov
or
sub
or
sub
cmpsb
loop
into
pop
pop
cmp
cltd
and
jge
and
shrl
jns
pop
test
dec
inc
jp
cmp
imul
sub
jge
lret
sbb
pop
or
lcall
hlt
push
cli
int3
hlt
nop
es
mov
and
in
cmpsl
xchg
fwait
lock
jg
inc
inc
fcom
cwtl
lock
cmp
push
enter
adc
push
jl
sub
inc
imul
jmp
outsl
mov
jbe
arpl
jp
dec
test
cmpsl
add
inc
jmp
or
sub
push
movsb
xchg
incb
jo
mov
test
sub
and
repz
out
mov
insl
rcll
ljmp
dec
stc
fwait
push
pop
fisttps
cmp
rclb
out
dec
outsl
or
lcall
xchg
push
xchg
je
into
in
or
dec
scas
lods
sbb
std
dec
mov
test
shll
stos
leave
scas
dec
push
mov
or
jg
push
test
movsl
pop
or
dec
pop
sbb
push
sub
dec
push
lock
cmpsb
je
lods
lock
inc
dec
inc
mov
movsl
push
jo
push
mov
sub
add
in
ja
lods
ror
pop
adc
mov
or
lods
imulb
jb
movsl
adcb
jg
pop
pop
dec
dec
sbb
pop
mov
out
jle
fildll
xor
ss
sbb
lea
addl
rcll
outsl
and
fnstcw
mov
jge
sahf
mov
sbb
call
jo
scas
cmp
arpl
movsb
daa
push
inc
pop
mov
cmp
xchg
inc
sar
inc
std
sbb
and
int
pop
cmp
inc
pop
dec
popf
in
push
mov
inc
repz
jbe
hlt
movsl
in
int3
gs
adc
test
outsl
test
cltd
sbb
jmp
jbe
xchg
sub
movsl
lods
outsl
das
mov
ja
add
xor
or
cwtl
adc
sub
fbld
in
rclb
test
repnz
pop
sbb
call
jl
rcll
mov
lods
pop
aad
pop
loop
mov
push
jbe
mov
jo
frstor
xchg
and
inc
test
daa
and
xor
add
test
ljmp
jb
cltd
cmovl
xchg
and
das
shl
xchg
test
inc
jo
mov
dec
mov
sub
aaa
lret
outsl
jbe
mov
lods
cltd
pushf
mov
mov
adc
cwtl
sbb
xchg
adc
jae
push
vzeroall
wrmsr
cmp
push
or
and
jle
imul
mov
das
rorb
fists
es
xor
test
int
subb
jns
xchg
inc
sbb
mov
and
js
adc
jp
rorl
mov
insl
out
mov
push
fistl
outsl
xor
cmpsl
inc
js
mov
and
cmpsl
push
mov
sti
es
mov
ret
enter
frstor
scas
mov
cltd
in
pop
outsl
fcompl
pop
pop
scas
adc
imul
fwait
adc
add
cmp
out
fwait
cli
push
addr16
fldcw
out
mov
data16
into
sar
pusha
ss
inc
inc
inc
add
outsl
pop
or
adc
outsl
lds
or
xchg
dec
out
aam
lcall
mov
gs
sbb
popf
adc
cwtl
pop
int
xchg
dec
xchg
and
push
sbb
pop
popf
enter
jecxz
rorb
adc
jp
push
out
xor
add
movsl
mov
mov
jnp
bound
adc
adc
add
push
add
xchg
or
inc
xchg
adc
ja
sbb
stos
push
popf
movsb
mov
jge
xchg
cmp
sub
lock
inc
stos
mov
xchg
pop
push
sbb
rorl
or
scas
shrl
je
mov
jne
mov
mov
inc
inc
lret
aad
push
lods
lea
adc
movsb
sub
xchg
xor
mov
or
pop
inc
xchg
sbb
sub
lock
int3
inc
cmp
aad
xlat
enter
imul
out
cli
das
rolb
cmp
lcall
jae
dec
push
cmp
jae
push
je
jb
xchg
jmp
mov
mov
pop
popf
ss
rcrl
or
rol
push
or
movq
stc
mov
mov
adc
divb
imul
jo
mov
add
sub
inc
cmp
ja
out
jle
mov
jl
jo
cmpsl
adc
cmc
or
rclb
dec
mov
jo
or
mov
xlat
xchg
mov
add
adc
leave
mov
push
je
xchg
lock
mov
cltd
push
out
adc
push
push
repnz
popa
jecxz
pop
mov
push
sub
shl
cmp
out
pop
stos
lahf
xor
dec
cwtl
xor
sub
nop
loop
push
je
idivl
jmp
or
xor
fbld
lahf
mov
cld
push
inc
mov
jb
mov
xchg
jnp
pop
cmp
test
mov
test
rol
dec
adc
jge
xchg
xor
scas
mov
mov
aas
mov
dec
enter
aam
adc
sub
sti
in
mov
mov
and
ja
mov
ret
lcall
dec
shll
shl
jb
xchg
rorl
lahf
cmp
jp
loop
pop
jmp
mov
fdivs
ss
cmp
dec
pop
test
inc
inc
mov
or
pop
daa
int
scas
ss
jge
fidivs
sub
sbb
movsb
xchg
shll
sub
mov
cmp
enter
clc
add
jmp
jmp
and
pop
pop
adc
cltd
mov
cmp
or
inc
sahf
ljmp
dec
xlat
jle
cli
mov
enter
sbb
shl
jp
push
ret
shr
insl
in
in
pop
out
cltd
sub
push
pushf
mov
pop
bound
push
cmp
inc
ss
pop
out
pop
adc
scas
out
cmp
insl
aam
mov
fs
loope
sarb
cs
in
imul
push
imul
rol
loope
sub
pop
xor
pop
loop
out
mov
jnp
jle
scas
popf
lods
mov
ljmp
mov
or
cli
out
fisubs
jl
dec
push
lret
cmp
inc
fistpl
adc
jne
and
push
dec
sbb
in
fiaddl
iret
push
add
inc
sub
mov
ja
mov
add
mov
xor
nop
push
lds
or
ret
mov
outsb
mov
cli
or
out
fsubl
daa
rsqrtps
cs
icebp
fwait
mov
sub
xchg
mov
sub
sub
xchg
aas
jbe
sbb
lahf
jbe
jl
imul
mov
mov
add
sbb
cltd
aad
sbb
imul
aad
das
or
loope
jmp
push
outsl
inc
push
mov
lock
mov
mov
into
mov
test
outsl
dec
xor
mov
ds
inc
sbb
enter
dec
ss
test
adc
mov
out
xchg
outsb
pop
test
icebp
test
push
das
sub
pushf
push
mov
add
adc
lcall
or
leave
arpl
movsl
xchg
rcll
dec
push
dec
cli
iret
loopne
jle
stos
xor
popf
sarl
adc
inc
fmull
xchg
mov
loopne
add
dec
sti
mov
fildl
fiaddl
pop
xor
mov
xor
mov
adc
mov
xchg
xchg
pop
add
clc
daa
adc
dec
and
test
add
or
dec
aas
ja
dec
push
je
sbb
sub
rorb
in
inc
cltd
dec
sbb
shrl
push
loope
ds
adc
mov
movsb
xchg
addr16
jns
out
divl
jecxz
lcall
movsb
cmp
sbb
cmp
jmp
sub
je
mov
inc
sbb
push
cmp
loop
xchg
in
and
repz
icebp
je
mov
mov
xchg
mov
mov
movsl
movsb
and
dec
push
sar
cmp
pop
jae
sub
out
outsl
dec
or
and
cmp
xchg
inc
aad
test
in
clc
mov
or
xchg
mov
dec
sbb
push
push
stos
push
ret
push
daa
js
les
xor
jb
stos
aaa
push
das
xchg
sub
xchg
xlat
cmp
or
mov
mov
ret
xchg
fdiv
add
adc
clc
orl
mov
push
jb
xlat
inc
mov
sub
xor
push
imul
mov
lret
mov
cmp
inc
leave
mov
xchg
sub
push
mov
inc
add
sarb
cld
stc
mov
pop
mov
in
test
adc
and
js
mov
jge
and
mov
mov
imul
and
push
in
dec
xchg
lret
loope
movsb
jmp
sub
sub
sahf
pop
adc
out
sahf
movsb
pushf
xchg
stos
xor
jl
inc
roll
stos
push
mov
push
ret
push
dec
sbb
cmp
xchg
test
dec
adc
clc
xchg
push
out
xor
sub
xchg
xchg
or
sbb
add
inc
xchg
stos
pop
cmp
inc
jae
push
mov
or
bound
or
mov
clc
stos
adc
xchg
jbe
mov
adc
and
call
dec
cmpl
cmpsl
mov
repnz
lea
lcall
pop
xchg
pop
jno
dec
inc
sub
out
hlt
fcoml
pop
pop
pavgb
pusha
push
mov
sbb
xor
gs
and
jae
sbb
push
fwait
mov
mov
pop
stc
adcl
addr16
fcoml
ss
out
fidivrl
clc
call
push
je
xor
xor
je
js
push
js
xchg
aad
xchg
xchg
and
dec
data16
jno
sbb
shll
inc
push
mov
int
xchg
ds
or
sbb
inc
in
or
icebp
fstpl
mov
xor
into
or
mov
xchg
mov
in
addr16
rclb
sub
xorb
movsl
push
scas
sub
jmp
aaa
sub
adc
push
and
mov
fdivs
xorl
push
ljmp
jl
mov
mov
cltd
sti
xor
jnp
pop
jo
pop
push
mov
out
mov
dec
inc
and
xchg
lret
lahf
sti
shlb
dec
and
sub
jnp
test
nop
test
ret
mov
pop
rcrb
or
mov
movsl
je
dec
aad
clc
lea
stos
and
cwtl
cmpsl
dec
xchg
cmpsl
popa
push
ja
out
cmc
int3
lds
adc
push
pop
jle
outsb
das
mov
test
cmpsb
adc
jnp
cmpsb
cmp
and
sbb
es
insb
iret
inc
fstl
mov
push
adc
cmp
jge
cmp
in
lret
data16
ss
inc
daa
pop
push
int3
sbb
out
mov
jmp
jmp
pop
push
jp
cmp
sub
cltd
dec
xchg
mov
push
int3
adc
and
sbb
xor
mov
mov
cmp
or
jbe
mov
mov
push
mov
arpl
fwait
push
out
pop
jae
rep
imul
sbb
push
xchg
jb
mov
arpl
shlb
outsl
jmp
repz
inc
sti
or
notl
push
pop
lods
sar
out
push
adc
push
lock
sbb
or
adc
loopne
js
psrad
lea
xchg
xchg
repnz
adc
ljmp
leave
iret
bound
outsl
test
adc
addr16
leave
mov
shrb
mov
inc
xchg
xchg
out
dec
pop
jmp
push
jae
test
imul
mov
cmpsb
ljmp
ret
or
mov
sub
movsl
lods
jne
pusha
insl
loopne
add
test
xchg
mov
push
sbb
sub
inc
lea
pop
and
cltd
pop
xchg
aam
inc
mov
sahf
push
sub
imul
imul
insl
leave
je
sti
add
iret
adc
idiv
cmc
and
enter
sub
dec
pop
inc
xlat
pushf
mov
pop
adc
inc
pop
pusha
mov
insl
lock
fwait
push
mov
lret
pop
add
mov
jae
push
call
enter
lods
xchg
mov
pop
test
push
jl
stc
or
inc
mov
lret
xchg
xchg
and
cmp
fstps
or
xor
xlat
pop
popf
adc
leave
icebp
inc
mov
scas
inc
lds
xlat
mov
or
mov
scas
mov
imul
jb
sbb
adc
loop
js
xchg
xor
and
mov
mov
add
dec
ja
and
scas
mov
lahf
clc
movsl
push
adc
setns
xchg
xchg
mov
aaa
push
dec
sub
out
mov
push
scas
lods
adc
stos
xlat
iret
mov
lods
pop
enter
insl
pop
lret
outsl
pop
jns
xchg
add
js
jl
outsl
stos
subb
sub
inc
dec
xchg
fwait
sahf
mov
rcr
leave
jg
inc
sahf
xchg
enter
mov
jmp
mov
leave
aaa
fwait
xchg
xchg
mov
xchg
lahf
fdivr
sub
or
mov
inc
sti
xchg
sub
cmp
mov
mov
xchg
mov
shrb
pop
cmp
jmp
out
movsl
test
int
lret
xchg
jle
xchg
incl
dec
insb
mov
push
and
dec
jo
inc
mov
out
sbb
cmp
jnp
mov
ss
enter
mov
mov
les
and
mov
sub
jle
jmp
aam
sbb
xchg
mov
jge
in
add
test
xchg
vmread
test
or
inc
cmp
mov
subb
jl
dec
lea
push
mov
call
mov
or
fs
adc
loope
sahf
call
scas
or
out
scas
push
jb
dec
jno
ljmp
cmp
and
iret
lods
decl
cmpsb
add
aas
test
jge
movsb
and
outsl
data16
and
sub
mov
icebp
xchg
test
cmpsl
pop
adc
iret
dec
mov
push
adc
stos
int3
mov
pop
fbstp
pop
dec
enter
adcb
push
lods
mov
xchg
sbb
xchg
in
call
mov
or
mov
mov
adc
jbe
xor
les
das
aas
pop
inc
adc
mov
popf
movl
xchg
out
lds
mov
and
insb
pop
jl
jp
loop
imul
pop
mov
stos
adc
bound
mov
mov
pop
movsl
aad
call
jo
push
mov
lret
in
outsb
scas
movsb
jge
mov
xor
jbe
sti
and
int
pop
arpl
cmpsl
mov
and
rcr
mov
or
pop
xchg
test
fistl
sbb
cvtps2pd
xchg
push
or
repnz
cmp
hlt
sub
xchg
negb
mov
pop
jnp
fisttps
sahf
xlat
out
pop
scas
out
mov
xchg
inc
mov
pushf
sub
push
xchg
pop
cmc
popf
cli
xchg
sbb
and
ljmp
pop
and
inc
popf
or
push
movsb
inc
jg
loop
negl
gs
push
in
jae
filds
add
iret
out
loop
les
loopne
push
and
adc
mov
push
mov
jecxz
jno
out
pop
cmp
sub
shll
xor
cmp
inc
add
das
mov
push
fldt
sti
xor
pusha
xor
cmpsb
adc
jmp
ja
inc
sbb
and
push
pop
or
pop
pop
jbe
ss
and
clc
mov
fldl
push
cld
mov
mov
int3
pop
cwtl
popa
cwtl
mov
out
lds
test
test
pop
jge
lahf
lret
pop
mov
and
push
sub
addl
push
out
jecxz
std
jnp,pt
jo
mov
in
mov
xchg
stos
xchg
adc
insb
lahf
ret
xchg
xor
clc
fwait
push
pop
fidivl
popa
adc
mov
into
jbe
ljmp
sub
gs
add
push
out
mov
or
iret
es
es
lds
adc
ret
dec
imul
and
jmp
mov
push
inc
fsts
mov
jmp
inc
jne
cmp
mov
sub
xchg
add
cmp
jns
int3
imul
jl
fiadds
aas
ret
divb
xchg
pop
in
gs
ds
xchg
sbb
xchg
jae
jno
ds
sub
or
repnz
out
sbb
pop
cli
into
jle
arpl
outsb
nop
adc
xchg
leave
xchg
adc
push
sub
das
inc
sub
jno
std
sub
popa
mov
dec
mov
and
pop
mov
push
lods
stos
jl
aas
cmpb
push
sbb
mov
je
dec
das
xorl
fwait
and
mov
mov
push
push
dec
inc
xlat
in
mov
call
jno
dec
out
and
mov
scas
mov
outsl
sahf
and
sbb
push
decb
push
aaa
bound
enter
loope
inc
stos
loopne,pt
movl
cmpsl
cmp
dec
push
mov
lods
pop
push
arpl
xor
inc
inc
das
cmp
ja
dec
insl
ljmp
adcl
pop
inc
lods
pop
cmp
in
or
enter
cmc
xchg
jle
sub
mov
hlt
inc
mov
mov
addr16
das
xchg
adc
in
dec
adc
rclb
outsb
loopne
stc
push
call
adc
ds
je
sbb
sbb
iret
inc
repz
cmp
das
lock
shrb
in
nop
pop
movsl
push
insb
push
fistl
xchg
jmp
or
jp
inc
aam
addr16
scas
repz
push
jb
sahf
xor
lcall
cmpsl
sti
inc
and
inc
inc
out
or
adc
adc
icebp
sbb
cld
inc
enter
call
das
xchg
movsb
dec
test
je
int3
call
push
and
aaa
xor
xchg
bswap
pop
xchg
jb
adc
enter
add
push
push
daa
dec
mov
xor
int
scas
mov
jb
mov
inc
xchg
sub
into
imul
jmp
repz
out
ds
shll
or
inc
pushf
push
adc
xchg
popa
imul
pushf
outsb
insb
add
mov
push
scas
add
movsl
jns,pt
push
addr16
ljmp
sub
push
add
sub
scas
outsl
push
xchg
or
cmp
mov
ss
mov
pop
pushf
fucomip
xchg
dec
adc
sub
or
inc
mov
das
xor
push
jo
jbe
fstpt
test
pop
imul
or
xchg
mov
cwtl
jnp
push
sbbb
inc
and
pop
add
cmc
shrl
sub
out
addl
fs
pop
dec
dec
jno
js
and
bound
dec
movsb
repnz
mov
mov
add
loopne
rolb
outsl
push
out
mov
cld
adc
mov
or
inc
movsb
mov
mov
outsb
lock
inc
xchg
outsl
fmuls
rcll
lock
sub
pop
adcl
pop
mov
xchg
jmp
aam
out
mov
mov
insb
mov
cmp
popf
cmp
movsb
leave
xlat
jb
sub
lahf
jb
fninit
sub
adc
jne
jns
stos
call
scas
fst
xchg
mov
xchg
jecxz
rcr
dec
cmp
in
pop
adc
or
mov
inc
jne
dec
addr16
mov
jb
pop
jno
rcl
aam
xchg
add
jg
mov
loopne
cmpsl
scas
lods
dec
xchg
ljmp
push
out
add
pop
adc
xor
imul
fcmovne
dec
movl
pop
add
scas
push
sti
xchg
pop
lea
outsl
and
das
jbe
movsb
cmpsb
jecxz
or
rcrl
int3
js
mov
xchg
lcall
cmp
pop
inc
cmp
inc
or
xor
xor
daa
clc
ds
cmpsl
cmpsb
outsb
inc
adc
pop
ret
ja
in
sub
mul
pop
mov
leave
neg
popa
mov
and
push
das
mov
sbb
cmpl
hlt
pushf
call
out
push
mov
pop
aam
jecxz
adc
push
insb
pop
xchg
jne
mov
fstp
arpl
mov
repz
test
inc
add
inc
mov
mov
inc
pusha
scas
jmp
fcompl
and
test
lret
lcall
jae
das
bound
push
in
movsl
lods
cmpsl
adc
aas
outsl
aad
je
subl
pop
popf
push
mov
das
shrl
loop
mov
sub
lret
xchg
jbe
out
mov
lret
xchg
pop
out
call
jno
lret
stos
enter
leave
xor
in
mov
daa
and
cmpsl
adc
lds
das
jmp
add
roll
xor
inc
test
pop
mov
pop
in
jb
adcl
inc
dec
jno
shr
cmc
lret
nop
movsl
test
dec
icebp
rcr
fnstenv
xchg
push
jae
xor
pop
andb
lret
test
decl
mov
mov
pop
xor
sub
daa
adc
mov
mov
mov
scas
xchg
movsl
mov
pop
mov
xchg
imul
ljmp
arpl
push
aas
sbb
push
lret
in
push
lods
mov
or
inc
push
add
and
ss
sub
pop
scas
fwait
mul
jecxz
xor
bound
sbb
mov
daa
mov
popa
sbb
cmp
leave
jo
orl
imul
fidivl
lock
sub
imul
and
dec
push
pop
cmc
or
push
xchg
imul
sbbl
xchg
jns
enter
mov
dec
lods
lahf
mov
std
pusha
nop
push
std
arpl
lods
sbb
in
addr16
pop
mov
shlb
pop
int3
cli
sbb
push
sub
xchg
call
iret
push
pop
mov
aaa
inc
fisttpll
pop
pop
add
ja
jb
popa
push
pop
nop
rcll
xorl
loopne
add
push
js
xchg
fdivs
push
push
loope
inc
inc
insb
enter
stos
test
mov
or
mov
mov
fwait
or
insl
cmc
mov
stos
mov
mov
jbe
mov
popf
sub
rcl
aad
mov
ja
cli
mov
xor
cwtl
sub
sub
sbb
push
enter
adc
pop
inc
out
mov
mov
jno
inc
ja
flds
xor
imul
mov
mov
int
mov
out
adc
int3
adc
fldt
ret
mov
xor
mov
ds
les
stc
enter
pop
bound
or
adcb
push
sub
mov
sbb
sub
or
inc
add
mov
push
iret
adcl
in
insb
mov
jmp
rorl
add
inc
xchg
xchg
inc
test
inc
mov
sbb
nop
mov
dec
jmp
mov
repnz
aad
popa
xchg
jg
add
mov
outsl
xchg
lods
ret
add
jne
cli
jbe
add
push
sar
enter
pop
js
out
mov
mov
pop
pushf
daa
ficoms
pop
shlb
icebp
mov
adc
xchg
das
arpl
ret
sbb
cmp
mov
leave
xor
test
sub
jo
lods
jg
aad
dec
adc
mov
imul
orb
fistps
scas
jecxz
mov
jne
sbb
xchg
cltd
call
out
out
andb
insb
je
cmpsl
adcb
xor
orb
into
data16
cli
sub
stos
dec
es
mov
or
in
xlat
popa
out
xor
loopne
dec
adc
inc
push
ja
negl
imul
pop
aam
arpl
mov
mov
std
imul
daa
jp
mov
inc
lods
ja
cmpsl
xchg
cmp
inc
pop
nop
je
mov
stos
iret
jge
inc
fbstp
or
jl
das
inc
icebp
roll
push
mov
add
lods
xchg
pop
push
inc
ja
sbb
sub
mov
sbb
cltd
insl
jns
call
xor
mov
test
add
insl
test
int
adc
add
cltd
dec
and
pop
mov
mov
inc
out
shll
and
ljmp
scas
pop
push
sub
mov
aam
mov
lret
jo
fbstp
repnz
pop
rcrl
lods
nop
test
nop
jae
xor
pop
lea
into
pop
dec
lea
dec
mov
and
nop
shll
iret
test
cwtl
cwtl
dec
inc
insl
call
jns
push
inc
das
sahf
jb
aas
jb,pn
inc
mov
outsb
xchg
jnp
mov
or
sbb
jae
push
shl
loope
mov
aas
sub
cmp
test
scas
in
mov
test
rorb
cmpsb
xchg
fisubs
pushf
lcall
cld
mov
mov
xchg
sti
ljmp
jae
inc
xor
ja
mov
mov
in
bound
mov
test
push
mov
or
xor
xor
cltd
push
push
push
sbb
test
cmp
fs
push
xchg
popa
lret
loope
int
mov
loop
push
cli
push
mov
notl
inc
test
dec
repz
xchg
add
inc
mov
pop
imul
std
lahf
test
sub
xor
jg
je
mov
push
je
ss
xor
and
sub
sbbl
inc
xor
mov
inc
fcompl
je
rcll
inc
push
daa
inc
xor
out
add
imul
xchg
lods
add
call
and
xchg
pop
add
outsl
divl
test
aad
adc
push
das
jp
clc
incl
dec
xchg
hlt
lds
mov
repnz
xchg
mov
lods
and
push
mov
push
and
in
in
addr16
or
es
cmp
fcompl
inc
xchg
xchg
sti
xor
mov
jns
fldenv
push
push
mov
push
and
pop
test
test
es
je
and
popf
call
das
inc
or
repz
hlt
loop
pop
mov
dec
gs
cmp
test
orl
data16
dec
sub
mov
add
adc
adc
mov
pop
nop
push
fsubr
adc
mov
jae
fmuls
ljmp
shrb
shrb
nop
push
pop
xchg
fs
xlat
dec
push
andl
adc
daa
insb
inc
mov
icebp
inc
and
stos
cwtl
add
div
add
ret
clc
mov
push
push
add
cld
xchg
sub
xchg
cli
clc
xchg
cmp
stos
ret
mov
ja
popf
xor
repnz
dec
xchg
pusha
jbe
xlat
popf
loopne
test
adc
mov
or
lahf
adc
mov
jne
call
scas
jns
pop
lods
sub
fistl
jno
inc
es
cwtl
lret
outsl
test
sub
xchg
dec
xchg
popf
push
adc
push
push
scas
jo
inc
popa
scas
or
imul
hlt
inc
je
cltd
mov
cmp
cld
dec
inc
lods
sub
idivl
push
xor
xchg
xor
cmp
cmp
mov
inc
xchg
xchg
jo
loop
mov
outsl
mov
imul
inc
sahf
cmp
xor
add
jle
sub
cltd
test
xor
or
and
jecxz
rol
lcall
mov
jns
xor
and
fcoms
or
mov
mov
jmp
mov
pop
sub
pop
push
inc
repz
pusha
mov
jmp
repz
mov
movsb
pop
xchg
jae
popa
cmp
mov
sub
out
repnz
mov
shl
sbb
xchg
imul
mov
mov
and
jg
lret
xchg
dec
dec
add
aad
test
add
mov
out
sbb
ret
outsl
dec
daa
clc
mov
pop
mov
and
pushf
mov
mov
jo
out
fisubs
adc
les
pop
dec
adc
das
lock
cltd
into
movsl
fnstenv
lcall
ret
pop
push
xor
or
cmp
mov
outsl
xor
nop
mov
call
lret
fiadds
inc
dec
cmp
adc
inc
pop
stos
mov
cld
pop
mov
outsl
sub
dec
ljmp
into
mov
push
mov
outsl
xchg
or
sub
jg
daa
push
mov
ss
ss
mov
adc
mov
data16
xchg
test
cmovp
clc
bnd
out
and
or
stos
out
rclb
pushf
popf
ljmp
in
adc
lds
sub
sahf
insl
rcr
out
test
movsb
push
mov
mov
je
cs
mov
push
mov
jg
mov
add
hlt
xchg
adc
inc
arpl
sub
jbe
jg
jae
and
pop
xchg
adc
xchg
push
out
fimull
jbe
scas
lcall
sbbb
jo
test
andb
out
mov
mov
test
mov
lods
cmp
pop
xor
and
pushf
cmp
xchg
push
xchg
enter
call
jp
pop
or
mov
test
mov
and
fsubl
lods
mov
mov
sub
faddl
sti
dec
xchg
xor
cld
jmp
dec
daa
imul
dec
cmp
fcompl
jmp
jne
cmpsl
sbb
cmp
dec
leave
fdivrs
xchg
lods
pusha
push
push
mov
push
std
jg
mov
xchg
mov
sub
sbb
pop
mov
rorb
mov
and
fnop
mov
loop
pushf
sete
scas
add
adc
jae
bt
fs
daa
mov
cmp
sbb
lea
push
rolb
inc
out
cmpsl
push
pop
cmpsb
fstl
push
jbe
ja
lock
xchg
mov
xchg
test
stos
cmp
xchg
push
mov
test
cmp
ljmp
and
xchg
cmp
leave
sub
leave
icebp
scas
or
jb
xchg
mov
mov
sbb
add
mov
mov
mov
imul
pop
pop
out
push
and
dec
mov
mov
fwait
adc
cwtl
xchg
into
pop
pop
mov
mov
mov
insb
xchg
push
jecxz
jl
xor
mov
fwait
sahf
sub
xor
popf
out
adc
xchg
jge
sub
cmpsb
mov
push
fldenv
xor
movsb
shlb
sub
cmc
mov
mov
adc
lahf
push
sub
fidivl
lcall
das
mov
ret
adcl
nop
push
out
int3
or
cmpsl
setg
sub
jmp
xor
and
jns
jle
les
dec
xor
repnz
mov
addr16
inc
insb
scas
data16
jmp
xchg
xchg
push
jo
ds
and
das
sbbl
lcall
push
add
dec
pop
test
subb
xor
push
testl
xchg
mov
in
insl
jo
shll
orb
xlat
insl
mov
mov
stc
jmp
or
stos
push
jo
stos
mov
iret
fsubl
jge
mov
sub
sahf
xor
inc
pop
cmp
xlat
mov
push
dec
scas
mov
test
add
dec
inc
ret
fcmovbe
das
xchg
fcmovb
scas
cltd
cmp
inc
stos
repnz
in
and
les
jg
adc
aam
popa
stos
test
mov
xchg
mov
call
push
jne
or
push
mov
mov
sub
lods
stc
popa
out
push
mov
mov
mov
mov
scas
push
cmp
pop
jo
addr16
out
push
out
xor
sub
jge
sub
cs
xchg
out
dec
lcall
cmp
adc
lahf
jecxz
mov
mov
push
aaa
xchg
std
scas
sar
dec
cmp
mov
mov
jge
jns
and
call
das
or
clc
cld
cmp
adc
xlat
xchg
arpl
out
xchg
bound
sbb
nop
mov
sahf
into
sub
jecxz
inc
push
mov
xchg
jnp
push
dec
into
in
or
int3
push
push
je
inc
test
xchg
cmp
jecxz
mov
jno
add
stos
daa
movsb
adc
jl
out
and
xor
and
mov
jmp
sbb
inc
dec
call
xchg
push
lods
fistpll
adcl
dec
inc
inc
out
sub
jge
enter
pop
int3
inc
mov
or
sahf
adc
aaa
sbb
daa
push
call
inc
movsl
push
nop
add
sar
sub
aad
out
leave
push
mov
test
test
mov
inc
xor
add
cmc
lret
lods
pop
ja
call
out
pop
fldcw
xchg
or
push
or
rorb
push
and
lods
xor
movb
int3
pop
mov
orb
push
sub
je
mov
hlt
ror
jnp
jo
add
add
pusha
outsb
and
test
jmp
pop
or
jnp
mov
cs
jb
jns
lret
push
lea
rcll
add
insb
mov
ss
je
das
std
adc
push
jl
movsl
sarl
sahf
push
mov
das
push
add
adc
pushf
sarb
mov
jle
pop
aas
xor
push
and
and
sbb
adc
mov
orb
daa
push
xor
fdivs
cs
out
aaa
outsb
adc
xchg
add
divl
repz
cmp
sahf
insb
pop
dec
movsl
jg
popl
jmp
cmpsb
nop
cmp
mov
push
ljmp
add
jae
xchg
cmpsb
xchg
int
dec
pushf
negl
cmp
pop
mov
out
sub
lcall
jle
lcall
cpuid
fwait
aas
cmpsb
sub
xor
outsl
pop
test
stos
add
sar
sahf
mov
fisttpll
mov
lods
jno
xor
shrb
adc
jp
in
fnstenv
mov
mov
int3
xchg
cmpsb
adc
out
jo
lea
fdivl
insl
arpl
jno
test
cmp
ficoml
push
inc
mov
call
scas
xor
inc
loop
push
mov
mov
aas
mov
cmp
clc
and
fwait
lahf
sub
push
bound
das
fidivrs
cmp
addr16
dec
pop
push
add
sbb
adc
clc
sti
jae
sub
and
out
lock
dec
mov
ret
out
add
popf
fs
leave
mov
mov
addr16
fdivrs
sub
push
imul
mov
push
loop
mov
ss
lret
add
mov
push
xchg
mov
inc
dec
xchg
out
shll
xor
xor
mov
subb
jb
imul
stc
jno
sarl
fwait
cmp
clc
push
pop
dec
rorl
js
push
jb
out
ljmp
inc
fcmovb
test
ljmp
xchg
scas
loope
xchg
es
insb
mov
cmpsl
pop
gs
and
ret
cld
jg
xor
mov
fsubl
lcall
jnp
jmp
sbb
adc
adc
sar
or
out
sti
outsl
ret
xchg
mov
aad
jl
add
or
or
dec
xchg
jnp
out
xchg
daa
and
addl
inc
inc
jecxz
aas
popa
fbld
dec
mov
xchg
out
mov
jp
cmpsb
lea
or
jecxz
lock
fimuls
enter
xor
clc
stos
xchg
mov
adc
mov
cmpsb
fldcw
and
mov
into
or
mov
bound
popf
adc
cli
pop
sub
cwtl
add
sub
hlt
pavgb
push
push
jno
pushf
cld
fwait
mov
ret
into
or
scas
js
mov
dec
jns
adc
aaa
call
xorb
sub
push
sub
insb
sbb
mov
arpl
sub
inc
push
movsl
cwtl
mov
bts
mov
add
mov
mov
int3
sbb
inc
cmc
inc
inc
out
nop
sub
test
mov
sbb
and
rorl
xchg
xchg
notb
and
cmp
lock
mov
imul
pop
jg
cmpb
ja
mov
push
scas
in
jge
jno
and
push
mov
mov
xchg
test
lret
orb
sbb
loopne
cltd
jb
lods
push
in
pop
leave
jb
lahf
pop
sbb
out
lret
inc
jae
imul
std
lret
js
repnz
push
push
xor
mov
inc
adc
mov
nop
xchg
popf
subb
push
dec
or
dec
das
or
fcoml
mov
aad
fwait
mov
cmp
and
mov
or
int3
mov
dec
sbbb
out
cmc
fisttpll
daa
icebp
push
inc
inc
fwait
jnp
mov
push
and
push
dec
cmp
push
jl
mov
sahf
add
and
sub
arpl
aas
push
hlt
inc
lock
out
out
jecxz
repnz
pop
or
ret
imul
stos
cltd
cs
aaa
sbbb
cmp
enter
popa
lods
or
outsl
loop
lcall
sti
sub
mov
out
orb
mov
cmp
xchg
or
push
pop
repnz
sbb
bound
lock
hlt
das
or
movsl
data16
rcll
test
mov
dec
mov
mov
and
out
push
std
rorb
and
mov
pop
fstpt
dec
sub
dec
add
ja
push
jne
add
push
outsl
jo
mov
inc
xchg
stos
push
jbe
add
in
push
pop
mov
fwait
push
test
adc
jnp
xchg
ret
ret
clc
loopne
ror
idivb
lahf
xchg
push
adc
push
insb
outsl
push
subl
pop
dec
test
xchg
cltd
inc
js
inc
sub
lock
fstpt
xchg
lods
cmp
outsl
stos
mov
pop
or
mov
push
test
push
jle
test
or
xor
cmpsl
sahf
sub
sarl
jp
aam
dec
test
arpl
cmp
stos
mov
pushf
inc
sub
shrb
sbb
aam
pushf
dec
hlt
mov
sahf
lret
pop
push
inc
mov
and
cltd
das
loopne
out
adc
jno
xchg
adc
jmp
sbb
and
lods
jb
cltd
ja
imul
int
xchg
xor
sub
add
sbb
movsl
out
loope
fwait
sar
mov
pusha
cmpsl
push
fs
data16
and
xchg
sub
ljmp
stc
das
sub
fwait
out
mov
cmp
or
mov
and
outsl
mov
sbb
xchg
rol
je
cld
fisubrs
dec
dec
push
or
push
adcl
add
add
and
les
cli
xchg
sub
pop
push
sub
xchg
bswap
das
and
ret
pop
jmp
mov
push
lret
mov
and
iret
add
xchg
xchg
or
dec
sbb
inc
add
scas
xchg
xor
insb
jp
sbb
adc
int
mov
daa
outsl
adc
mov
iret
lds
mov
push
pop
mov
std
add
test
cmp
sub
lcall
inc
cmp
and
scas
test
dec
add
ret
mov
loopne
test
mov
mov
fimull
add
jnp
mov
mov
sti
mov
xor
jle
pop
pop
or
xlat
cs
movsb
sub
inc
cmpl
mov
repz
addr16
out
mov
inc
xchg
outsb
inc
mov
stos
dec
pop
fcmovnbe
movsb
xorb
gs
leave
adc
hlt
das
nop
xchg
xchg
imul
pop
push
mov
cmovo
in
xchg
lock
xchg
sbb
pusha
repnz
mov
mov
xchg
aaa
scas
ret
enter
call
jno
repz
pop
xor
adc
add
jge
sub
test
sub
sbb
push
inc
imul
fwait
pop
daa
lds
in
push
push
inc
pop
jno
pop
jno
stos
add
aas
sub
mov
pushf
xchg
test
cmp
lock
adcb
jmp
adc
mov
das
cs
sbb
mov
pop
push
sbbb
roll
inc
pushl
mov
or
sbb
inc
or
repnz
jae
scas
sbb
pusha
xchg
xchg
cmpsb
adc
sub
inc
inc
movsl
xor
out
xor
jno
shrb
dec
stos
xor
or
sbb
xor
or
fmull
xor
or
adc
fsubrs
aam
hlt
out
adc
outsl
test
dec
jb
pop
sub
fs
inc
cltd
mov
into
lods
in
cltd
pushf
lea
pop
xchg
mov
es
xchg
sub
stos
push
push
or
mov
rol
or
iret
cmp
in
jg
add
lods
lock
cmp
pushf
lahf
test
cmpsl
lcall
movsl
out
aaa
mov
and
cltd
xor
xchg
into
sub
js
pop
cli
jne
ja
lret
leave
xor
decl
mov
push
lods
out
cltd
inc
bound
mov
mov
jg
or
les
and
xor
mov
jecxz
jecxz
addl
scas
mov
or
pusha
mov
cltd
sbb
mov
aaa
mov
cmpsl
cwtl
and
loope
lea
scas
mov
aaa
inc
shll
imul
push
scas
sub
sbb
mov
jge
xchg
pop
xchg
inc
int3
cwtl
loopne
outsb
je
xchg
pusha
fwait
leave
stc
loope
out
jmp
int
fadd
and
cmp
and
and
fs
mov
test
or
lahf
jo
lret
pop
outsl
dec
pop
lcall
stos
clc
or
pop
out
xor
dec
orb
pop
movsl
les
jle
in
xchg
test
mov
call
mov
pop
xlat
aas
sbb
jo
sub
jp
das
mov
adc
scas
scas
sahf
cmpsb
adc
cmp
jg
out
push
and
cli
cmp
ficoml
mov
out
std
mov
aam
cwtl
xchg
mov
adc
call
jo
or
jp
push
call
pop
pop
cmc
mov
inc
test
dec
inc
mov
adc
in
fs
testb
int
xchg
or
mov
and
test
nop
test
xor
and
iret
mov
xchg
pop
dec
outsb
das
mov
mov
cmpb
arpl
aad
mov
xchg
sub
xor
push
outsl
mov
enter
mov
test
mov
mov
incl
and
add
cwtl
xchg
ljmp
dec
pop
mov
pop
cmp
out
jns
mov
jl
aad
xchg
jge
cmp
ljmp
sbbl
outsl
aad
adc
and
rcrb
xchg
sub
das
lea
movsl
and
sub
or
pop
movsb
jae
mov
add
cmp
in
out
xchg
push
stos
push
jne
dec
add
lret
jge
mov
dec
and
bound
cltd
sub
add
test
in
ret
insl
mov
daa
xchg
inc
fwait
jecxz
adc
push
pop
nop
or
das
sbb
xchg
ss
cli
xor
lods
in
push
rclb
sbb
mov
pop
sub
pop
ror
push
jle
ret
and
pop
mov
inc
jo
test
dec
shll
cltd
js
and
mov
and
xchg
jmp
pop
into
jns
cmp
popa
pop
in
sub
ljmp
imul
adc
imul
fisttpll
or
rorb
imul
enter
pop
aad
rorb
push
in
push
cmp
pop
lret
push
dec
push
mov
xor
cld
jno
mov
out
not
xchg
push
mov
aas
push
mov
lods
xor
mov
adc
or
mov
pop
cmp
lock
test
lret
arpl
sbb
mov
or
add
pop
aas
mov
lret
dec
inc
fmul
inc
cmp
sbb
ds
mov
or
lret
mov
cmpsl
push
pop
xchg
xor
imul
sub
cs
loopne
xchg
enter
fldcw
pop
test
jb
ret
sbb
push
lcall
sbb
xorl
stos
rorb
mov
pop
dec
out
jb
jg
xor
out
adc
mov
lods
fistl
push
mov
out
out
sub
mov
pop
loope
test
fdiv
xor
lcall
mov
xchg
daa
inc
jp
xchg
pop
lret
and
pop
pop
mov
add
sub
aaa
jl
pop
pop
xor
inc
push
pop
mov
push
jb
mov
mov
dec
outsl
outsb
and
stos
and
and
jecxz
sub
inc
mov
add
mov
cmp
idivl
mov
mov
adc
xlat
test
aaa
pop
icebp
test
xchg
push
adc
add
shlb
jecxz
negl
mov
outsl
fwait
rcrl
repnz
mov
jecxz
xchg
in
pop
dec
sub
sub
mov
and
shrl
imul
or
out
insl
jne
add
jge
dec
and
outsb
xlat
aas
scas
xchg
mov
cmp
or
cld
push
or
jb
cmp
mov
ret
outsl
clc
xor
fisubrl
mov
jbe
jnp
and
mov
pop
mov
sub
lods
nop
mov
std
jnp
nop
int
jmp
xor
test
mov
add
xchg
and
adc
pop
insb
pushf
xchg
out
cmpsb
xchg
dec
mov
jl
add
mov
pop
movsb
fmuls
push
inc
inc
inc
fnstenv
adcl
out
test
push
xchg
movsb
fucomp
push
clc
insb
mov
outsl
out
mov
pop
inc
lods
push
das
dec
test
inc
add
pop
push
fwait
insl
push
sbb
mov
call
outsl
imul
out
or
push
rcll
inc
pushf
addl
test
jno
cmp
mov
loope
sti
inc
fsts
mov
rolb
and
push
adc
in
add
mov
mov
mov
shrb
mov
add
das
nop
xchg
or
rol
mov
mov
out
lock
mov
insb
add
cmpsl
cmp
into
data16
das
push
mov
push
sahf
inc
adc
sbb
sub
popl
adc
call
insb
sbb
gs
mov
cmp
mov
enter
idivl
cmp
jp
push
mov
sbb
adc
movsl
adcb
bound
push
out
or
jne
mov
pop
cli
jg
sarb
fmuls
lods
pop
dec
dec
std
stc
cwtl
adc
or
aas
inc
pop
ljmp
sub
lods
pushf
loop
dec
xchg
ret
and
int3
push
dec
sbb
testb
aad
addr16
fwait
enter
insb
dec
jb
fidivrs
mov
inc
fsubl
dec
cmp
sbb
mov
jne
mov
sbb
push
enter
sti
dec
cmpsb
cmp
xchg
push
in
ljmp
mov
lcall
lods
enter
and
test
gs
push
xor
jmp
dec
sti
mov
dec
pop
jmp
inc
jle
push
jge
iret
and
scas
roll
or
adc
push
xor
ss
repz
mov
add
adc
ja
inc
fsubrl
in
or
mov
shl
mov
pop
mov
xchg
call
xchg
xchg
test
mov
xchg
mov
pop
cmp
insl
stos
xchg
or
jmp
stos
xor
mov
fisubrl
ficomps
adc
mov
or
insb
fcoml
cltd
push
movsl
push
fadds
mov
das
das
in
pop
inc
mov
jl
mov
xchg
push
scas
pop
jp
jecxz
sub
dec
push
es
xor
mov
mov
out
inc
fdivr
sbb
xor
roll
mov
push
outsb
mov
cmp
out
cmpsb
lds
pop
add
or
add
scas
je
lds
hlt
cmpl
push
fwait
scas
dec
aaa
out
out
cmpsb
push
stc
lods
sub
adc
shrb
out
xchg
xchg
sbb
jp
sahf
ret
les
mov
bound
cmp
pop
mov
cmp
test
jge
testl
add
repz
sbb
xchg
jmp
pop
sbb
xchg
orb
jno
xchg
aam
sub
test
sbb
inc
test
out
jbe
or
push
jo
addr16
adc
cmp
mov
mov
shlb
push
xor
addr16
in
imulb
cmp
pop
fwait
jns
inc
dec
inc
inc
fdivrs
add
outsl
or
or
inc
mov
rcr
cs
add
cmp
mov
or
sub
adc
out
mov
les
jp
dec
ret
push
in
mov
repnz
mov
fsubrs
sub
mov
inc
cli
push
ds
das
lahf
outsl
inc
in
xorl
fwait
jecxz
test
mov
pop
sub
ss
mov
repnz
mov
scas
xchg
push
icebp
into
adc
and
test
xchg
out
lds
inc
inc
xchg
add
pop
test
or
rorb
aas
sbb
ret
nop
mov
jle
scas
sbb
fwait
out
push
imul
daa
dec
xchg
pop
cmpsl
add
mov
fists
cld
and
das
lods
pop
outsb
out
dec
mov
mov
push
fs
fdivs
lock
addl
push
cmp
or
cli
cmp
xor
fistps
subl
lret
scas
popa
sub
out
pop
mov
addl
dec
xchg
int3
popf
xchg
jmp
jo
or
rcrb
pop
insl
pop
push
mov
imul
xchg
andl
add
and
jbe
leave
mov
pop
add
push
lds
push
inc
cmp
shrb
jne
xor
aad
sbb
popa
jns
in
mov
dec
lods
sub
std
in
pop
mov
out
mov
push
mov
mov
mov
mov
sub
and
test
scas
ss
mov
jno
cmp
mov
aas
scas
cmpsb
and
xchg
fidivrs
call
incb
xchg
enter
adc
jb
sarl
adcl
adc
rcl
sbbb
push
adc
pop
inc
loop
fs
sbb
jp
test
or
sbb
mov
ret
push
int3
lods
lock
mov
jp
push
xchg
xchg
xorb
sarb
icebp
inc
jb
pop
fcoml
push
pop
loopne
out
pushf
mov
lea
outsl
xchg
bnd
popf
mov
dec
mov
popa
sahf
push
sub
setp
dec
fwait
jmp
dec
sbb
test
and
pop
jge
xor
into
lods
daa
je
outsl
insb
inc
push
pop
and
jl
xchg
cmp
fs
rcl
xor
add
jp
das
dec
rclb
sbb
js
xor
lahf
dec
cs
dec
outsl
mov
xchg
out
addl
sub
dec
test
cmp
push
sahf
stos
push
push
outsl
sub
ret
jg
repnz
jmp
lods
lcall
out
data16
pop
mov
jg
in
pop
cli
jns
mov
lea
mov
test
jno
outsb
jp
out
imul
nop
std
lds
iret
jg
repz
mov
lcall
ret
cwtl
xchg
lahf
shll
clc
ja
and
pushf
jae
iret
je
aaa
pop
dec
mov
dec
lods
js
fwait
daa
dec
cwtl
test
test
cmpsl
push
lea
pop
jl
push
movb
mov
shlb
xchg
dec
outsl
add
inc
or
das
mov
xchg
push
das
stc
adc
pop
int3
mov
ret
mov
adc
and
cltd
push
outsl
sbb
add
cmp
das
mov
jge
cmp
xchg
lcall
cmpb
in
pop
inc
lea
xlat
cmp
push
das
je
nop
dec
fcmovnb
gs
insb
or
outsb
jl
push
inc
inc
mov
inc
lret
repz
mov
out
shll
adc
pop
movsl
and
mov
icebp
jo
je
jmp
dec
sbb
inc
lds
push
jns
push
mov
adc
mov
insb
push
add
das
aam
jge
mov
push
xor
dec
cltd
lds
stos
adc
scas
push
push
imul
pop
lods
xchg
fidivl
les
dec
adc
mov
mov
add
mov
addr16
jns
jl
xchg
sub
push
bswap
add
sub
sub
sbb
cli
jo
cltd
dec
iret
add
ss
addr16
xchg
test
sarb
mov
sbb
test
xchg
or
mov
shrl
dec
sbb
jge
insl
lcall
sahf
call
push
xor
les
mov
xchg
push
cmpsl
scas
testl
test
sub
nop
inc
and
sbb
outsl
and
fs
lret
inc
sbb
adc
sahf
fnsave
mov
loop
xchg
out
shr
addr16
xlat
pop
mov
sarl
xor
xchg
adc
call
ret
jle
into
mov
in
out
mov
fwait
or
push
dec
hlt
sbb
jae
pop
jae
mov
add
inc
cs
leave
icebp
fwait
cmpl
adcl
lea
arpl
fsubr
cmp
adcl
out
xchg
mov
stos
and
jno
mov
cmp
in
ja
jns
icebp
mov
push
pop
cmpsl
das
das
adc
mov
push
repnz
insl
xchg
movsb
push
js
cs
pop
push
mov
sub
fwait
sub
add
mov
mov
mov
adc
and
cmpsl
mov
cmc
sub
cltd
adcl
inc
push
test
inc
repnz
nop
sub
pop
push
pop
fwait
xor
scas
rolb
dec
xchg
nop
mov
scas
test
pop
loopne
cmp
cwtl
test
push
push
popf
psubb
jl
jge
movsl
inc
cmp
sub
jg
shrb
mov
movl
aas
insl
or
xor
lcall
out
or
xchg
sub
mov
cmpsb
xor
cli
push
mov
lahf
scas
pushf
mov
fwait
ret
jns
jmp
mov
sti
jns
mov
call
out
push
jnp
call
xchg
loope
jo
loop
xor
jecxz
inc
xchg
mov
lahf
jp
decl
mov
lea
jmp
rorl
xor
and
test
int
push
jns
mov
jmp
xchg
das
add
push
or
pop
adc
jno
hlt
mov
pushf
or
and
dec
adc
inc
stc
xor
jne
test
sbb
outsl
or
aas
add
add
sarl
in
outsl
mov
pop
and
daa
cli
lock
bound
pop
push
fistl
mov
aaa
cmp
cmp
sti
mov
mov
jnp
stos
mov
ret
repz
inc
mov
dec
loope
fmul
mov
mov
outsl
testb
xor
mov
and
jl
xchg
or
push
nop
xchg
cmpsb
scas
xor
inc
les
push
mov
xchg
xchg
adcl
movsb
xchg
sub
in
leave
inc
mov
pusha
aad
lahf
xchg
adc
xchg
inc
jo
test
test
repz
es
lds
test
cmp
outsl
vmovdqu
and
std
pop
lods
test
cli
mov
outsl
add
pop
cmp
cmp
insl
push
bound
scas
jle
add
push
xor
xor
pusha
rol
lods
inc
cmp
inc
out
dec
jne
mov
jae
pop
mov
fucomip
xchg
cld
cmpsl
pop
loope
inc
lahf
cli
sbb
jb
hlt
fsubr
mov
jge
mov
fistpl
addr16
testl
test
xchg
test
inc
push
icebp
fyl2x
push
lcall
pop
icebp
or
add
sub
xchg
ror
mov
aaa
xchg
imull
fwait
sub
mov
imul
and
inc
mov
mov
orl
movsb
gs
in
mov
mov
jne
movsl
jns
cli
cmp
call
adc
xlat
popf
popl
in
movl
xchg
sub
shrb
jae
aam
add
mov
test
push
and
sbb
add
mov
insl
pop
das
inc
rorb
in
xor
pop
hlt
mov
aaa
sub
imul
fldl
das
sbb
sub
xchg
pop
jbe
pop
pop
insl
xor
cltd
sub
mov
xor
shrb
sar
add
add
push
dec
inc
mov
jne
sub
fs
ds
mov
add
mov
add
aam
adc
pop
xor
shll
mov
out
ljmp
iret
sti
stos
lods
xchg
lcall
and
cli
dec
mov
out
pop
inc
sar
into
cmc
lret
jg
jl,pn
je
dec
cmpsl
xchg
jnp
je
shll
pop
and
jbe
lahf
fldl
out
fcoml
xchg
lahf
xchg
jnp
and
dec
iret
pop
push
test
xor
add
xor
test
mov
add
ret
xchg
iret
cmpsl
xchg
jns
inc
gs
push
xor
add
and
push
out
sbb
insl
hlt
sub
mov
push
pop
mov
in
pop
rorb
jl
xchg
adc
repnz
xchg
xchg
jle
ss
push
sbbl
mov
into
test
lea
scas
cmp
insb
cltd
adc
dec
jo
mov
call
push
icebp
sbb
out
out
ret
push
das
fnsave
or
push
icebp
in
ret
outsl
inc
idivl
jne
sbb
xchg
mov
sbb
or
mov
push
jbe
dec
dec
aaa
push
inc
lret
dec
dec
sbb
outsb
rcr
mov
cmp
add
dec
pop
bnd
lcall
dec
orl
out
outsl
pop
and
enter
jnp
dec
jmp
push
mov
add
xor
jecxz
push
and
push
bound
in
mov
call
out
pop
adc
xchg
xor
jle
adc
scas
dec
jg
xchg
orb
mov
push
mov
mov
sbb
cmp
xchg
sbb
ds
push
mov
push
ret
push
jp
call
leave
mov
inc
nop
dec
xchg
xchg
dec
mov
mov
outsl
addr16
jp
shr
inc
pop
push
cmp
inc
push
jno
test
adc
mov
xor
push
mov
and
pop
mov
or
jge
xlat
mov
cmp
mov
push
icebp
fsubrl
xlat
cmpsb
mov
call
jge
mov
insl
mov
sbb
test
mov
fistl
jnp
push
das
jl
sahf
mov
inc
sub
mov
push
mov
mov
fs
pop
sub
stos
movsl
add
sub
xchg
jp
pop
sti
xor
loope
cltd
test
jp
mov
test
push
cmp
and
push
out
jl
xchg
dec
xchg
pop
je
out
test
mov
js
xchg
mov
pop
rorl
outsl
jnp
mov
cmpsb
fnstcw
cmp
jns
cmpsl
call
push
aad
dec
inc
js
scas
mov
mov
aam
fcomp
bound
jmp
int
call
cmp
xchg
jo
dec
xchg
fidivs
out
lret
jae
inc
sbb
rcrl
xchg
aam
adc
push
fimull
sti
mov
inc
ret
and
dec
xchg
jmp
cmp
dec
mov
mov
jmp
xchg
dec
mov
aam
scas
int3
jns
in
popf
call
pop
in
push
xor
jle,pn
shrl
adc
mov
mulb
xchg
in
inc
mov
scas
jbe
or
sub
or
outsl
push
xlat
jbe
cmp
inc
push
mull
push
out
repz
xchg
pusha
xor
jnp
dec
jmp
xchg
das
jnp
mov
and
pxor
cmpsb
sub
iret
mov
scas
pop
xchg
jne
mov
ds
imul
outsl
out
sub
cltd
xchg
push
lods
into
adc
jae
sbb
xchg
cltd
pop
sub
pop
sahf
cs
sub
loope
push
inc
pop
mov
int
divl
xchg
sbb
xchg
imul
fstp
push
loopne
dec
mov
xchg
std
pop
inc
cmp
in
dec
cmpb
sbb
scas
xlat
or
mov
xlat
sbb
sti
lock
push
popf
jo
cmpsl
fwait
xlat
mov
in
lods
inc
jmp
mov
push
inc
xor
and
jg
mov
push
ret
xor
jnp
lcall
cwtl
push
out
loop
lcall
aam
cli
adc
sahf
arpl
add
call
das
jp
xchg
dec
sbb
imul
mov
xchg
in
nop
ss
lahf
cmp
xchg
popf
les
aad
and
shrl
xor
add
notl
sbb
in
or
insl
xchg
sbb
clc
int
ja
loope
or
out
mov
aas
xchg
xor
fisttpll
into
push
lcall
pop
in
jmp
in
push
adcb
jo
adc
cmpsl
push
test
xor
adc
jns
dec
frstor
fwait
sub
inc
fisttpll
stc
ds
xchg
push
ficoml
rorb
mov
mov
mov
sbb
lret
sbb
add
divl
fbld
cmp
dec
xchg
dec
in
shld
ficompl
push
je
hlt
push
rorl
fnstcw
pop
sbb
adc
jg
mov
call
cmp
add
xchg
das
repnz
adc
cli
das
xchg
and
mov
out
mov
xorb
xor
xchg
and
push
push
popa
xchg
cmp
cwtl
getsec
inc
sub
cmp
rol
bound
and
cmp
sahf
sbb
jb
enter
push
int3
sti
xor
das
xor
cmc
lcall
call
scas
mov
popf
out
sub
fwait
test
pusha
stos
out
xor
movsl
cmp
dec
fwait
out
mov
pop
es
sub
clc
es
sub
jmp
mov
push
xlat
inc
into
and
imul
ljmp
fmuls
imul
push
movsb
outsl
adc
xor
sbb
lods
dec
cmpsb
sbb
push
push
push
mov
push
jge
xor
shrb
pushf
or
in
push
jne
in
xchg
xchg
lock
xchg
movsl
pop
dec
pop
sub
sbb
xor
shrl
mov
stc
push
fwait
cmp
int
jp
test
dec
xchg
dec
jl
jmp
fsubrs
sti
inc
nopl
pop
mov
cmc
or
sub
mov
gs
nop
add
sbb
inc
xchg
ljmp
ja
loop
out
dec
sarl
ja
cmp
xchg
fcoms
out
xor
push
cmp
cmp
sub
fbstp
add
inc
out
fcmovu
xchg
lods
mov
or
jl
mov
mov
jns
inc
jb
repnz
cli
enter
adc
xchg
xlat
add
mov
pop
xorb
xlat
jae
xchg
mov
sub
sbb
xchg
inc
pop
cmp
js
lahf
push
out
mov
jae
lods
outsb
test
test
or
mov
mov
push
pop
fdiv
sti
fdivr
cmp
adc
stos
sahf
add
call
pop
pop
adc
mov
push
je
inc
lret
mov
into
cmp
pop
dec
scas
sub
into
test
add
xchg
xor
wbinvd
dec
stos
out
ds
or
mov
ffreep
sbb
out
out
loopne
xchg
mov
mov
push
adcb
adc
hlt
xchg
iret
lods
lea
xor
adc
mov
dec
pop
movsb
mov
and
lea
cmpsl
repnz
fadd
add
mov
mov
pop
cmp
mov
call
out
xor
mov
mov
jle
lds
cmpsl
stos
push
pushf
bound
xchg
adc
jg
and
lods
popa
dec
push
sub
push
paddusb
mov
leave
fstpl
push
ja
js
jp
adc
scas
ret
add
and
idivb
popf
pusha
cltd
dec
and
push
gs
mov
inc
xchg
inc
jo
xchg
sbb
mov
icebp
adcl
add
rorb
adc
push
push
mov
test
add
push
or
out
sti
pop
addr16
fisttpl
add
ret
iret
jp
jp
outsb
sub
cmpsb
jae
dec
aaa
setb
or
and
sub
adc
jno
test
cs
scas
and
push
inc
jb
ja
into
test
sub
aad
adc
jbe
pop
aaa
cmp
pop
push
dec
jge
cmp
xor
pop
les
push
mov
shl
sbb
ljmp
sahf
fsubrs
fldt
mov
jg
adc
jg
jae
in
fisubl
fistpll
push
loope
aaa
mov
fists
out
mov
dec
jge
ljmp
daa
addr16
add
stos
jne
pop
jne
leave
jp
jmp
sub
in
lods
test
fisttpll
mov
loop
aad
adc
sbb
jmp
or
jno
movsl
movsl
insb
jns
test
sub
sarb
xchg
cmp
xor
inc
xchg
loope
stc
enter
xchg
subb
xchg
pop
inc
jbe
mov
repnz
mov
pop
outsl
push
pop
jg
clc
xor
fcmovnbe
mov
sbb
mov
into
xchg
dec
sbb
mov
xchg
mov
jecxz
push
mov
inc
dec
mov
sbb
sub
inc
jecxz
in
insb
outsl
or
movsb
pop
std
push
mov
push
cmc
popa
add
mov
lods
push
adc
mov
cs
xchg
jmp
or
sub
pop
leave
cli
sbb
push
scas
loopne
jmp
lcall
xor
xchg
insl
test
sub
dec
pop
inc
scas
imul
test
pop
in
scas
testl
push
ljmp
inc
je
mov
das
adcb
xor
sbb
jne
sbb
lds
cmp
xchg
out
xor
ds
stos
stos
xchg
sahf
mov
dec
into
popf
pop
addr16
push
sbb
icebp
adc
and
mov
xchg
mov
call
jle
out
xor
or
lea
pop
in
mov
loope
xlat
outsl
mov
out
fimull
out
gs
std
fcompl
inc
das
call
fiadds
mov
hlt
jp
inc
lock
ficomps
mov
cmp
sub
scas
dec
lods
jp
adc
movsl
cs
dec
jecxz
shll
icebp
test
lods
dec
mov
out
xor
jp
call
das
ljmp
aad
adc
and
es
das
pop
dec
or
repnz
sbb
xchg
ss
cmpsl
fdivrs
insb
jbe
inc
pop
je
test
call
dec
sahf
std
enter
sbb
addb
jb
ror
aas
add
adc
test
dec
lea
xor
or
rclb
adc
popf
mov
sub
mov
insl
xchg
rcrl
xchg
xor
outsl
hlt
adcl
push
mov
mov
cld
lods
addr16
test
inc
sti
add
dec
mov
jmp
shl
or
xlat
sub
inc
lahf
push
negb
loopne
sbb
jb
pop
sub
xchg
dec
push
notl
push
imul
jmp
xchg
cmpsb
push
jns
imul
rcll
scas
fnsave
mov
sbb
mov
sbb
xchg
xchg
jle
adcb
cld
xchg
in
pushl
outsb
push
cmpl
jnp
pop
cmc
or
sub
push
fists
repz
pop
repz
test
sub
mov
jnp
ss
xchg
insb
idivl
addr16
and
imul
cmpsb
xor
es
mov
ja
movsl
adc
daa
fadds
mov
outsl
lret
jns
dec
jl
pusha
sti
shll
cmpsb
lea
fyl2x
daa
cld
inc
jmp
and
enter
mov
sub
rcl
fiaddl
into
adc
loop
or
ret
cmp
outsl
push
test
test
inc
imul
mov
xchg
or
pop
leave
or
sub
jne
mov
jns
dec
jns
add
cmp
inc
and
out
jg
imul
xlat
mov
cwtl
aaa
mov
xchg
scas
adc
arpl
lock
mov
pop
cli
stc
out
pop
decb
jecxz
js
leave
cmp
test
iret
inc
xor
call
stos
mov
push
scas
inc
or
add
mov
js
push
cmpsb
ret
adc
mov
add
mov
push
push
lds
mov
in
jl
cmp
cmpsl
lea
sub
bound
cmp
inc
jo
push
inc
lods
adc
movsl
pop
rorl
jo
xchg
xchg
shlb
out
add
ja
ds
lods
int3
jbe
cs
push
mov
andl
pushf
imul
mov
sbb
icebp
cmpsl
and
das
lret
pop
daa
popf
or
mov
sub
loope
dec
pop
pop
fadds
nop
inc
dec
out
mov
pop
cltd
rcr
adc
ss
sub
xchg
cld
fcoms
push
push
call
mov
inc
stos
push
ljmp
or
mov
and
mov
or
adc
mov
lret
shll
xchg
jne
jnp
call
add
pop
pop
repnz
and
adc
aaa
pop
scas
xchg
js
dec
sti
jl
jae
xor
xchg
rolb
xchg
pop
enter
dec
mov
pop
out
adc
lea
sti
imul
sub
sub
xchg
push
lods
cwtl
cmpb
push
je
loope
lock
popf
inc
jbe
mov
cmpsb
rcr
add
cmp
sub
add
jae
or
mov
adcl
jg
ror
sbb
push
sub
push
push
scas
jp
enter
and
stc
jg
mov
fnstsw
or
aaa
xchg
jecxz
stos
movsb
jns
mov
aam
jnp
adc
xchg
lock
cmpsl
js
xor
xchg
cmp
faddl
mov
push
pop
mov
roll
das
pop
mov
inc
loope
rcll
adc
mov
pusha
xor
cmp
jecxz
pop
mov
jp
mov
in
pushf
adc
mov
in
fs
push
lret
scas
pop
fwait
jbe
loope
mov
cld
insb
xchg
sbb
shr
sbb
imul
in
mov
ljmp
bound
js
pop
ss
push
xchg
mov
das
or
jl
jmp
aaa
out
rorb
cmp
js
xchg
out
gs
sub
rol
hlt
aam
jne
pusha
cmp
pop
test
clc
pushf
pop
dec
cmp
shll
out
cmp
pop
iret
push
push
cltd
push
xchg
mov
cmp
mov
rolb
mov
sub
jbe
fbstp
inc
xchg
jl
gs
lods
cld
mov
adc
bound
jns
adcb
popf
ret
ss
pop
lods
js
adc
xor
xchg
push
hlt
jno
and
sub
add
dec
gs
xchg
call
mov
cmp
es
lcall
mov
ja
mov
popa
mov
inc
lahf
xchg
pop
jp
cwtl
mov
dec
xor
dec
aam
pusha
push
aad
xchg
mov
imulb
xchg
addr16
leave
popf
inc
pusha
jno
sbb
fdivrs
jle
lods
mov
stos
test
cmp
leave
xchg
test
cmp
das
cltd
sub
mov
out
test
mov
xchg
out
mov
lea
outsl
jno
pusha
xchg
aam
push
js
decb
in
jmp
sti
push
xchg
pop
ret
popa
mov
out
adc
inc
push
xor
inc
and
outsl
and
mov
stc
or
sbb
sbb
sub
scas
lods
mov
fwait
fs
add
in
loop
fisubs
xchg
ror
lock
adcb
movb
pusha
xchg
inc
pop
mov
in
les
imul
js
sbb
insl
jbe
lods
sub
xchg
jle
xor
mov
cmp
sahf
mov
js
fcompl
xor
jnp
jge
add
pushf
scas
sar
ret
sub
inc
sahf
shrb
or
or
sub
push
inc
lock
rcrb
jo
and
out
xor
xor
push
rcl
adc
sub
mov
ret
jb
inc
pop
dec
mov
stc
int
xchg
sub
mov
repz
xchg
mov
inc
push
pop
ja
lea
mov
pop
xor
lds
adc
or
or
lahf
cmp
push
iret
jb
mov
mov
out
dec
pop
dec
sbb
loop
sub
pop
insb
inc
stos
push
jge
xor
std
sbb
and
push
xor
pop
mov
pop
scas
mov
mov
movsl
mov
ss
pop
das
add
cmp
and
sbb
cmp
mov
sbb
push
ss
gs
sti
ret
jp
add
xchg
aaa
mov
in
sbb
aas
nop
test
xor
das
dec
cwtl
mov
fistpl
and
pop
les
aas
or
mov
jae
mov
dec
pop
xor
mov
or
mov
pop
nop
mov
pop
pop
rorl
cmp
mov
fsubrl
adc
icebp
vcvtsd2si
jmp
xchg
es
xchg
sbb
pop
jle,pn
push
lcall
shll
and
in
jge
repz
js
inc
mov
out
cmpsl
outsb
jno
insb
or
pop
pop
jns
nop
xchg
popf
dec
stos
pop
or
lods
mov
push
xor
add
call
into
lds
mov
and
shrl
xlat
shrl
lea
jb
xchg
sub
pop
xrstor
nop
mov
imul
fwait
iret
push
inc
cmp
lcall
lcall
mov
cmp
mov
das
roll
movsb
push
jae
sub
mov
jbe
pop
add
mov
pop
pop
loopne
das
inc
int3
pop
ja
pop
test
and
shl
cmpsl
out
or
mov
jns
into
mov
inc
cmc
sbb
pop
lret
lds
in
pop
lds
pop
xor
cmp
fsubs
rcll
mov
pop
aas
cltd
call
outsl
stos
les
dec
jp
dec
mov
scas
gs
repz
out
push
adc
jb
lret
xchg
pop
jp
fwait
pop
lods
ret
push
jmp
out
aam
dec
push
add
out
bound
mov
hlt
lahf
jmp
popa
xchg
stc
mov
outsl
pop
or
iret
outsb
loop
xchg
fwait
and
inc
ja
ss
fcoms
clc
addr16
bound
test
inc
sub
out
sahf
mov
shrl
xchg
dec
pslld
scas
xor
and
jmp
dec
adc
cmp
imul
mov
jae
sub
mov
int
xor
cmp
xchg
out
cwtl
test
incl
jno
popf
push
outsl
mov
cmp
inc
xchg
pop
inc
mov
push
out
add
cmpsb
insl
mov
jbe
push
or
push
data16
adc
add
lret
clc
outsl
lods
mov
mov
sbb
lods
clc
lea
jbe
das
mov
jg
ret
iret
mov
arpl
fldenv
adc
orb
ds
jg
jae
mov
cmpsl
or
popf
lahf
insl
outsl
stos
aas
mov
out
lods
inc
inc
stos
mov
shll
out
mov
scas
and
push
mov
adc
sub
out
leave
gs
mov
or
push
mov
jno
lcall
xor
mov
push
inc
jg
jno
subl
aas
inc
cld
das
arpl
divl
jns
das
mov
mov
data16
xlat
xchg
adc
jecxz
sbb
xor
push
jno
repnz
cmpsb
clc
mov
cltd
sti
adc
mov
sub
cmc
sbb
push
cmpsl
sti
sbb
lcall
dec
pop
cmpsl
into
mov
ds
mov
xchg
add
das
add
add
lcall
arpl
lea
jmp
imull
leave
cmc
out
mov
ja
inc
jp
xor
sub
and
mov
pop
push
pushf
test
ret
sahf
and
push
outsl
mov
je
add
lret
je
fildll
movsb
ss
add
inc
jecxz
inc
mov
and
sbb
push
xor
mov
shll
mov
push
das
lcall
jae
mov
mov
mov
loop
mov
in
mov
jo
push
and
into
pushf
xchg
pushf
repnz
lahf
imul
cmp
insl
bound
das
adcl
rcrb
mov
int3
sti
mov
loopne
sbb
pop
jb
mov
push
push
call
adc
push
incb
inc
pop
movl
repz
mov
xor
sbb
lods
mov
in
mov
into
jbe
cmp
mov
xchg
mov
fimull
subb
xor
push
mov
sbb
mov
xor
aas
xor
jbe
arpl
or
push
cmpsb
repz
pop
mov
sub
sbb
mov
add
rorl
mov
adc
test
roll
add
test
xchg
call
stos
lret
jecxz
ss
or
push
jnp
in
icebp
sbb
mov
jmp
call
xchg
loopne
rcl
or
dec
pop
fiadds
fcoml
repnz
mov
or
and
dec
xlat
pop
cwtl
push
cmp
scas
mov
add
xchg
out
rorl
das
xchg
push
xor
mov
xchg
add
xchg
sahf
sub
add
jns
loope
mov
std
pop
xor
inc
sub
lcall
scas
lods
jmp
lret
icebp
adc
xchg
cwtl
inc
out
xchg
mov
mov
sbb
leave
popf
loopne
mov
mov
lret
inc
mov
and
outsb
fildll
cmp
ljmp
mov
add
push
fcmovu
adc
sub
mov
lea
mov
scas
into
lds
fcoms
jno
mov
add
jo
aas
cltd
mov
mov
aaa
shl
add
dec
inc
mov
negl
adc
outsb
pop
push
and
mov
cmp
rorl
test
or
shrl
adcb
mov
inc
xchg
xchg
jbe
scas
xor
adc
or
fisttps
cltd
pusha
xchg
ret
xor
mov
add
cmpsb
adc
popa
pop
push
nop
aas
nop
dec
in
and
inc
and
push
mov
push
dec
and
push
dec
pop
mov
adc
cmp
dec
jle
ret
pop
test
cmp
dec
xchg
subb
push
dec
imul
and
dec
fwait
add
or
out
inc
imul
mov
insb
xchg
das
lods
decl
leave
fbstp
mov
icebp
loop
aas
repz
inc
test
jecxz
test
or
adc
xor
test
pop
add
outsl
ja
lea
aas
les
out
adc
cmpsl
push
outsl
push
insb
cltd
mov
pop
jb
shrl
pop
daa
mov
stos
out
jmp
lea
mov
jno
xchg
xchg
bound
push
push
movsb
test
shr
pop
or
aad
xorb
and
jg
and
aas
sbb
mov
jp
and
push
jns
data16
bound
and
jnp
test
dec
das
stos
in
je
lock
ret
or
mov
ret
test
inc
xchg
inc
sti
test
and
out
pop
mov
pop
cmp
cmp
inc
xchg
sbb
dec
mov
mov
stos
enter
int
cmp
adc
nop
inc
and
out
jmp
mov
cmp
jns
repz
sub
aaa
dec
and
repnz
aas
pusha
icebp
xor
and
stos
inc
push
add
mov
add
fdivp
movq
clc
and
push
icebp
adc
jo
aad
sbb
sar
sbb
or
dec
lret
es
xchg
pop
shll
sbb
adc
out
fsubrs
add
sbb
loop
jg
lods
xor
lds
inc
inc
add
mov
push
mov
movb
push
sysret
mov
adc
and
sub
imul
inc
mov
unpcklps
mov
imul
fisttps
shll
outsl
pop
js
leave
cmp
adc
mov
lcall
scas
cwtl
lret
push
test
das
hlt
stos
sarb
fsubr
xor
mov
imul
push
add
adc
fisttps
push
imul
or
outsl
jo
movsl
dec
adc
xchg
loopne
jg
jmp
xor
inc
daa
dec
sti
adc
push
lods
push
out
and
xor
xchg
aaa
sbb
xlat
inc
jnp
mov
outsl
test
and
cmp
outsb
test
xchg
jns
das
daa
push
leave
or
inc
lcall
cmp
movsl
pop
fistpl
das
push
imul
pop
mov
iret
inc
addr16
notl
or
scas
addb
das
jnp
subl
inc
cmp
outsl
outsl
iret
insb
mov
cmpsb
lds
push
mov
jmp
cmp
stos
mov
sti
mov
xor
pushf
mov
out
ljmp
sub
je
scas
fisttpll
es
jb
test
dec
jg
scas
sbb
sbb
fsts
pop
sub
xchg
jmp
jno
mov
mov
jmp
sub
in
jmp
clc
adc
popa
js
push
jo
sahf
mov
mov
dec
int3
scas
test
mov
sub
cmpsl
lods
sub
sbb
dec
int3
xchg
jne
cmp
icebp
xchg
dec
jae
mov
cmc
outsl
inc
xchg
scas
insb
rolb
pop
sqrtps
fistpl
fs
pop
out
lahf
sub
push
mov
mov
mov
leave
sbbb
sub
xlat
popa
insl
pop
aas
inc
in
aas
push
mov
call
add
scas
sbb
fcoml
adc
jle
js
cmp
cmp
test
sbb
in
adc
xchg
popf
push
mov
mov
jbe
lea
insl
sbb
mov
subb
push
call
setbe
cmp
repz
pop
repnz
add
ss
mov
fcmovbe
ja
push
loopne
cmp
call
scas
inc
fcompl
daa
sub
adc
xchg
and
xchg
push
mov
or
or
fdivp
out
sub
add
inc
ret
inc
dec
loop
mov
mov
pop
daa
jle
sbb
mov
and
aaa
xchg
jmp
xor
andl
and
idivb
add
cmp
insb
hlt
lock
in
mov
xchg
push
mov
shll
dec
and
sub
fld
or
or
mov
pop
push
sahf
mov
icebp
cmpsb
xchg
sub
add
xor
ljmp
dec
pop
out
push
movsb
and
call
out
jl
stc
push
popa
push
pop
test
dec
mov
cmp
xchg
sbb
jb
pop
lcall
cmp
shrl
push
sahf
xchg
inc
out
mov
mov
add
mov
mov
xchg
das
and
jg
movsb
mov
repnz
popa
xchg
cmpl
inc
adc
ss
movsb
jns
pop
sub
sbb
xchg
out
popf
seto
sbbl
push
jo
and
xor
fldt
and
cmpsl
xchg
lock
jno
dec
out
cmp
cwtl
and
fidivrs
imul
ja
int3
pop
test
lret
mov
scas
jge
addr16
pop
add
add
mov
dec
call
loopne
or
adc
addl
xchg
or
or
es
or
sub
daa
dec
adc
sbb
sub
and
in
insl
imull
jo
leave
test
in
dec
push
jbe
sti
sub
xchg
adc
xchg
push
sbb
cld
es
movsl
push
push
add
lea
mov
sub
jg
scas
add
lahf
shl
popf
jo
test
fs
pop
dec
pushf
pop
fldt
rcll
jmp
xchg
in
test
push
mov
mov
cmp
inc
and
nop
bound
sti
out
pop
jp
or
pop
push
inc
mov
seta
or
cld
pop
xlat
sbb
and
fisubrl
clc
int
out
mov
cmp
inc
sbb
les
push
mov
loopne
mov
inc
out
or
fsub
xchg
fsubrp
enter
imul
insl
mov
clc
cltd
shll
sbb
mov
dec
mov
popf
call
out
ss
jmp
sbb
aas
jno
dec
sub
dec
xchg
fiaddl
jbe
inc
sbb
pop
jl
test
scas
test
je
sbb
out
sbb
mov
sub
imul
cld
dec
adc
push
enter
sbb
xor
hlt
js
inc
gs
sbb
push
out
jns
sahf
lret
add
mov
mov
push
inc
xchg
call
xchg
movsl
call
outsl
push
cmpsb
jne
dec
xor
bound
add
enter
jae
frstor
gs
jno
mov
dec
sub
cmc
lcall
xchg
sub
sub
lahf
xchg
test
push
out
das
rcrb
shll
mov
xchg
jno
dec
imul
cli
xchg
sbb
sar
dec
into
je
fwait
pcmpeqw
mov
push
mov
push
jp
mov
aam
aas
scas
mov
pop
test
cmp
xchg
mov
and
or
popa
ficoml
lcall
jae
mov
mov
xlat
out
ret
push
imul
xchg
call
xor
mov
sbb
mov
xchg
jle
insb
mov
or
dec
and
not
movsb
xchg
cwtl
adc
ljmp
shlb
xchg
clc
sub
push
pop
insb
scas
adc
mov
jge
sub
ret
dec
jno
ljmp
pusha
dec
push
ror
arpl
sbb
xchg
push
pop
test
ret
in
inc
outsl
leave
lret
xchg
lret
jbe
in
icebp
popa
mov
push
scas
cltd
sbb
adc
enter
lods
dec
xchg
cmp
jge
shrb
lret
repz
fldenv
mov
pop
test
xchg
xchg
outsl
rcrb
mov
andl
ja
mov
pop
sbb
lds
into
xchg
inc
fnstenv
mov
push
or
daa
outsl
popa
popa
mov
lret
cmpsl
bound
stos
ds
xchg
mov
imul
loop
mov
cli
gs
lcall
xchg
add
in
and
lret
xor
push
mov
sbb
mov
cmpsl
call
scas
ljmp
and
sub
xchg
jnp
mov
dec
int3
push
or
pop
das
out
in
jbe
fstpt
dec
adcb
and
dec
xchg
andl
loopne
bound
mov
or
sub
dec
icebp
lods
cltd
dec
inc
inc
leave
mov
lcall
inc
out
mov
xchg
or
es
adc
test
test
pop
xor
sti
dec
jb
scas
pop
cmp
dec
lock
mov
inc
jno
shlb
sti
fldl
sbb
popf
insb
daa
and
mov
mov
ret
adc
hlt
mov
push
lret
pushw
and
sahf
sub
shl
pop
das
sub
lods
push
neg
xchg
insl
adc
mov
jnp
idivl
test
aas
pushf
xor
or
gs
xor
andb
daa
mov
fwait
ret
sub
mov
xlat
das
outsb
lea
add
push
mov
mov
jno
cmc
mov
pop
cmp
pop
dec
push
sub
out
outsb
mov
cltd
test
mov
test
nop
sahf
hlt
scas
int
mov
fs
sahf
in
pop
sub
lock
mov
mov
es
repz
mov
mov
mov
fisttpll
sub
rcl
popf
sub
pushf
ss
loopne
pop
scas
xchg
iret
imul
sub
sub
xchg
imul
sbb
mov
or
push
pop
and
or
sbb
push
cmp
inc
dec
das
js
xchg
cmpsb
xchg
adc
mov
add
cmp
sbb
xor
idivl
cmpsb
jbe
movsb
call
outsl
sbb
repz
cmpb
sahf
mov
xorl
insb
xor
xchg
adc
push
mov
outsl
lahf
xchg
out
push
or
dec
push
dec
mov
popf
sarl
mov
dec
mov
test
dec
mov
test
pop
pusha
stos
loope
pop
scas
xchg
sub
lea
scas
sbb
cmpsb
jmp
sub
ret
cwtl
dec
push
cmpsl
mov
push
and
dec
loop
inc
lahf
jnp
xor
pop
test
add
dec
scas
lret
jno
pop
rcl
hlt
insb
and
pop
xchg
adc
inc
sub
dec
mov
pop
std
mov
add
call
push
cmpsb
movsb
jle
xor
push
leave
or
dec
ss
xchg
aas
dec
adc
ss
out
sub
xchg
sub
mov
shll
setp
xor
pop
jp
jge
cmp
movsb
add
mov
stos
push
inc
jle
call
movsb
test
popf
arpl
mov
mov
mov
in
and
push
mov
mov
mov
out
xchg
sbb
xlat
sbb
adcb
insl
test
addr16
daa
int
push
dec
divl
jmp
out
jno
mov
sahf
and
mov
ljmp
dec
sub
ds
sbb
jecxz
mov
cmpsb
push
sbb
jmp
ljmp
std
inc
imul
jecxz
ret
jns
mov
lret
xchg
bound
mov
dec
xchg
insb
jb
sbb
jge
in
stos
aam
out
icebp
imul
sbb
mov
in
rcrl
fsubrl
nop
dec
sarb
hlt
in
stos
pop
jnp
test
lods
jl
inc
xchg
call
scas
jb
inc
jno
std
xor
adc
call
jno
jnp
data16
jne
sbb
imul
dec
pop
xor
mov
subb
leave
icebp
xchg
xchg
repz
push
pop
movsb
mov
xor
jmp
pop
inc
adc
sub
call
scas
stos
adc
cs
test
or
adc
mov
inc
fdivrl
and
shll
scas
pop
inc
and
dec
in
xor
cmp
pop
jmp
test
push
ljmp
loop
push
xchg
call
out
outsl
xor
lods
xlat
fimull
mov
xor
mov
xchg
jle
fiaddl
popa
fwait
jne
and
int3
sbb
stos
dec
pop
jbe
cmp
imul
sub
lods
out
jbe
pop
mov
and
inc
gs
mov
pop
mov
dec
pop
sub
cwtl
mov
push
imul
push
and
movsb
sbb
outsl
push
mov
mov
mov
fidivl
out
mov
out
push
adc
scas
lods
sub
pop
xchg
adc
sub
test
mov
mov
push
popf
dec
shll
aad
clc
dec
jnp
pushf
ss
xchg
outsb
mov
cmpb
and
shrl
ds
dec
add
mov
mov
push
imul
or
testb
scas
call
into
pop
mov
sti
sub
cmp
movsl
das
jae
test
add
test
filds
jmp
out
push
cli
sbb
mov
daa
dec
loope
adc
jg
addr16
adc
add
mov
xor
or
call
clc
aad
mov
jbe
adc
int
jbe
sarb
inc
xchg
inc
sub
sub
pop
fistpl
xor
sub
mov
out
inc
xchg
add
enter
inc
mov
push
pop
jle
inc
lds
daa
cmc
pop
adc
add
dec
mov
xchg
lret
pop
push
call
or
test
add
loop
mov
out
aaa
out
dec
outsl
sahf
imul
mov
movsb
bnd
cmc
mov
lods
or
add
loope
lahf
mov
ljmp
fwait
lcall
lret
cmpsb
lods
nop
and
fsubs
inc
ja
jb
outsl
sbb
call
das
sahf
xchg
mov
bound
mov
push
or
in
sbb
xchg
dec
cs
mov
or
xlat
cmpsb
or
movsb
mov
dec
adc
decl
mov
iret
je
out
pop
adc
gs
jmp
cltd
cmp
jo
es
repnz
pop
scas
aaa
mov
sub
je
xor
mov
xor
mov
jg
scas
jge
test
gs
cs
fxch
clc
loop
loop
sbb
xchg
test
mov
jb
lds
adc
push
sbb
mov
jmp
imul
push
lock
repnz
in
sub
xchg
ja
push
scas
sub
jge
inc
aaa
mov
ss
or
cmpsl
xor
das
fisttps
ja
adc
add
jmp
mov
popf
xchg
setge
mov
xchg
in
inc
cli
fmull
adc
aad
adc
xchg
loope
mov
out
mov
xlat
fstpt
nop
mov
mov
aaa
jo
js
mov
add
xorb
popf
lret
popa
decb
out
out
push
subb
pop
jl
adc
or
mov
inc
lds
outsl
dec
inc
pop
add
mov
aam
dec
xor
fcmovbe
das
outsb
add
sub
aam
mov
push
xorl
repz
shrl
call
out
das
mov
pop
pop
call
inc
mov
sti
nop
push
push
scas
outsl
jmp
jno
adc
pop
cwtl
xchg
jae
std
fwait
jmp
jle
cmp
negb
dec
mov
loopne
sbb
gs
lahf
cmpsl
movsl
xchg
or
call
mov
and
test
fidivs
sub
cmc
push
add
rclb
lea
dec
mov
mov
dec
mov
fdivp
mov
pop
add
push
lock
push
inc
clc
out
mov
cmp
mov
ret
xor
cmp
sahf
jno
push
pusha
in
les
xchg
outsl
sub
bound
push
filds
push
jmp
lods
jne
inc
add
ret
imul
mov
in
scas
pop
sub
lods
mov
stos
lea
mov
xchg
mov
test
mov
test
inc
iret
xor
dec
xchg
sub
xlat
popf
mov
enter
outsb
jae
popf
cmpsl
dec
mov
enter
xchg
ror
mov
jl,pn
fdiv
jne
repz
sub
push
andl
call
jo
test
aam
xchg
js
gs
mov
sbb
xchg
imul
shlb
dec
aas
push
inc
aaa
mov
adc
nop
ss
test
cmp
jg
cmp
frstor
mov
inc
and
rcrl
sar
loop
andl
dec
outsl
outsl
fs
dec
inc
push
addr16
mov
jecxz
xor
push
dec
or
and
lods
mov
hlt
jnp
mov
pop
arpl
outsl
movsl
pop
jmp
xchg
idivb
cmpsb
mov
mov
movsl
aas
nop
out
out
sbbb
jg
icebp
call
das
test
mov
push
adc
ffree
fcomi
xor
mov
cmp
lret
mov
test
sarl
shll
stos
call
out
pop
add
call
xchg
jge
adc
inc
ja
xor
mov
out
fsubrs
inc
addb
cli
out
cmp
mov
and
sub
adc
dec
mov
sbbb
adc
test
fwait
xchg
stc
jge
cmpsl
push
in
cmp
add
int3
push
imul
test
sbb
dec
push
and
sbb
xchg
jns
mov
aad
arpl
xchg
aas
cmpsl
js
inc
inc
pop
ja
jns
loopne
mov
cmp
data16
pop
xchg
inc
out
fisubrs
cmp
mov
mov
cmpsb
xor
sbb
std
mov
mov
fmuls
inc
bound
arpl
jmp
adc
add
sbb
rolb
pop
stos
xor
pop
add
mov
lods
lcall
push
jns
test
out
mov
sub
rorl
scas
pop
mov
or
outsl
cmpsb
mov
push
push
sub
lock
adcl
dec
ljmp
bound
xor
leave
das
mov
addr16
pop
int
adc
outsl
jnp
xchg
push
pop
pop
jno
cmp
enter
in
addr16
xor
sub
fwait
popf
xor
push
xchg
je
sub
xchg
fsubrl
xor
or
jmp
sbb
pop
adc
movl
or
xor
sbb
push
stc
sti
enter
or
pusha
fidivrl
int3
aas
int3
hlt
aas
mov
adc
out
dec
xor
das
inc
add
in
push
je
jae
mov
outsl
inc
adc
sbb
lahf
call
outsl
xchg
inc
outsb
aad
loope
mov
js
movsl
adc
pop
cltd
xchg
pop
stos
sub
push
push
sub
call
int
xor
out
test
push
das
or
sahf
mov
or
imul
cmp
enter
cmp
insl
scas
call
das
mov
sub
outsl
ljmp
xor
ficoml
mov
imul
lret
test
cltd
imul
loope
mul
mov
movsb
jb
mov
call
lock
mov
pop
in
dec
push
or
jb
call
ss
fisttps
pushf
push
divb
mov
add
dec
sti
fdivr
cmp
andl
jne
insb
sbbl
movsl
cmp
xor
add
adc
ja
out
repnz
shll
popl
aaa
pop
or
leave
and
arpl
inc
insl
dec
in
or
xchg
subl
out
or
inc
mov
ds
inc
add
xchg
testb
sub
cmp
loop
inc
std
push
jmp
movsb
test
mov
into
mov
xor
push
rcll
xor
jb
stos
jno
xor
jl
pusha
andl
adc
dec
pop
loope
sub
pop
inc
daa
and
lods
daa
adc
popf
sbb
scas
pop
mov
dec
lock
arpl
and
mov
lea
decl
sbb
xor
sbb
pop
jne
shrb
lods
and
lahf
leave
cli
sahf
mov
aam
out
out
or
in
jne
lret
sub
loope
loop,pn
les
jne
mov
push
push
call
mov
cmp
sbb
mov
xor
inc
testl
or
test
and
out
sahf
and
inc
cs
dec
and
cmp
addl
inc
or
xchg
clc
mov
dec
cli
test
dec
mov
adc
cli
push
inc
cmpsb
sub
sarl
xor
inc
aas
mov
mov
sahf
dec
imul
stc
pop
dec
inc
xchg
inc
xchg
imul
pusha
sub
pop
push
and
iret
insb
add
mov
movsb
mov
enter
les
mov
xchg
sbb
gs
add
inc
lcall
inc
xchg
and
ficomps
shll
jbe
out
hlt
outsl
mov
jnp
out
xchg
loop
xchg
loope
ret
adcl
mov
add
ret
sub
fdivrl
pop
jne
mov
mov
xchg
mov
dec
stos
inc
fwait
imul
mov
inc
aas
rol
xor
jmp
lods
mov
mov
inc
or
shll
sbb
ja
or
cwtl
or
mov
xchg
clc
mov
aaa
cld
jbe
xor
cltd
xchg
js
cmp
xchg
rorb
aas
clc
test
jnp
mov
dec
xchg
inc
jbe
js
outsl
scas
call
das
dec
shrl
sub
lret
sahf
pop
pushf
push
fs
sub
insl
ss
rolb
xchg
sub
push
dec
xor
dec
jl
cltd
and
xchg
sub
subb
sub
les
movsb
adc
jge
arpl
insl
dec
jae,pn
pop
ss
je
xchg
and
pop
mov
in
aas
or
jmp
add
and
push
inc
xlat
je
imul
fmull
enter
xchg
loopne
cltd
test
mov
push
jns
inc
jae
lock
lcall
insl
outsb
mov
or
jns
xor
int3
in
jb
xlat
adc
test
push
rolb
das
divb
pop
xor
pop
out
inc
push
dec
xchg
aaa
jmp
scas
mov
enter
cmp
outsl
ret
lahf
mov
fistps
andl
pop
ficompl
or
and
stos
scas
call
scas
mov
outsl
out
jno
ret
mov
adc
inc
andb
push
movsb
dec
inc
loope
lds
popf
inc
add
loopne
outsb
sbb
ret
mov
jbe
or
out
or
cli
jg
xor
xchg
push
cmp
or
mov
cmp
insb
cs
nop
sub
test
pushl
cmp
out
lock
add
or
sbb
xlat
inc
jne
push
jg
test
repz
add
bnd
out
aam
mov
pop
sbb
in
pop
jl
dec
xor
idivb
xchg
pop
sub
xchg
dec
orb
outsl
xchg
xchg
repnz
rol
stos
loope
jle
cs
addr16
repz
int
xor
pop
pop
hlt
pop
sub
push
xchg
push
jl
mov
jbe
call
fwait
and
into
mov
inc
mov
cs
mull
inc
pop
cld
mov
fsubrl
outsb
pop
sbb
adc
fnstcw
fwait
mov
loope
pop
repnz
mov
lods
push
outsl
fsts
adc
fwait
jae
dec
cmp
rcrb
notl
jno
xor
outsl
xor
mov
ret
cmpsb
push
out
movsb
test
stos
and
mov
sub
xchg
lods
mov
dec
jg
mov
xchg
lret
sbb
insl
shlb
add
xchg
lds
cmp
mov
sub
push
repz
out
adc
je
pop
add
dec
mov
incb
stos
cmp
dec
cmp
arpl
fnstenv
fs
push
sub
mov
outsb
xchg
pushf
cmpsl
xchg
mov
jge
hlt
mov
lods
sbb
inc
es
add
lea
mov
scas
xchg
inc
jo
mov
sub
push
inc
ret
mov
mov
aaa
inc
iret
dec
mov
lods
push
int3
call
add
daa
stos
dec
ds
inc
xchg
jg
xor
inc
test
test
hlt
cld
in
scas
aad
cmpsl
ret
cmp
aad
sub
nop
jnp
adc
mov
and
dec
add
adc
jmp
addr16
dec
xchg
add
cmpsb
lahf
or
pop
mov
add
fdivr
out
jo
addr16
and
aas
push
adc
dec
push
pop
aaa
scas
fsubrs
push
sub
aaa
scas
loope
mov
scas
pop
sub
lret
orb
aad
inc
or
sub
sbb
lcall
pushf
enter
jmp
sub
dec
hlt
fmuls
popa
int3
icebp
sub
out
sbb
mov
jle
pop
fcoml
scas
in
or
test
jno
mov
je
or
aaa
daa
fwait
dec
cmpsb
fiaddl
pop
aaa
mov
jmp
call
test
sub
ds
stos
notb
jbe
push
ds
pop
jge
cmpsb
dec
nop
pop
aam
sbb
push
mov
je
cmpsl
testb
or
push
rcrb
pushf
out
outsl
adc
cmpsb
jmp
mov
arpl
xor
or
call
add
xor
sbb
dec
std
xor
aas
js
int
out
test
repz
inc
jmp
popw
mov
pop
sub
loop
push
scas
mov
sub
daa
outsb
mov
in
out
inc
xlat
or
sbb
scas
loope
jno
pop
adc
das
pop
ja
mov
adc
mov
in
xchg
lods
cmc
ret
pop
scas
sbb
out
in
push
inc
sbbb
or
mov
mov
sub
dec
lock
cld
aad
fs
jecxz
jo
outsl
xchg
sahf
jae
insb
push
mov
cmp
mov
pop
icebp
popa
out
pmulhuw
push
loopne
xchg
in
adc
sub
xor
sub
cmpsb
dec
data16
sub
pop
div
xor
push
scas
in
mov
push
mov
jle,pn
xchg
pop
dec
xlat
inc
sbb
mov
in
cli
mov
pop
add
push
outsl
enter
xor
ja
jbe
xor
and
and
outsb
fwait
push
jg
call
scas
mov
adc
int3
xor
pop
adc
dec
mov
pop
jl
cmp
or
lea
movl
mov
test
aad
push
scas
add
jp
nop
mov
pop
lahf
adc
pop
mov
in
cli
mov
int
outsb
jg
shll
sbb
sbb
rolb
das
clc
jge
and
sbb
test
push
mov
jbe
scas
jge
and
sbb
icebp
inc
mov
add
push
popf
scas
pusha
enter
xchg
leave
icebp
sub
xchg
xlat
out
xor
push
push
dec
mov
mov
add
or
and
cmpsb
adc
into
pusha
xchg
pop
mov
cltd
rcrb
fistl
inc
dec
cmpsl
out
and
push
fwait
adc
push
xchg
lea
mov
scas
scas
mov
and
cmp
xchg
push
dec
je
or
outsl
dec
lods
aas
pushf
dec
jmp
stos
test
int3
loope
das
cli
push
jge
dec
xchg
mov
xchg
dec
dec
shlb
cld
sbb
pop
push
xor
add
sbb
out
xlat
pusha
cmpsl
sti
mov
hlt
inc
mov
gs
or
call
xchg
xchg
xchg
inc
inc
inc
sub
cltd
ljmp
xchg
push
outsw
sub
xchg
mov
mov
shrl
add
imul
cli
push
pop
out
xchg
xchg
out
cli
out
adc
stos
xchg
loope
fsubrl
xchg
jp
insl
cmp
cltd
scas
in
pop
popf
popf
arpl
add
mov
inc
lock
out
stos
ja
dec
aam
and
mov
mov
fcompl
dec
cld
clc
imul
insl
jnp
into
inc
fidivrl
mov
sbb
iret
cmp
push
cmp
gs
scas
dec
add
jge
repz
mov
pop
scas
mov
call
lock
mov
jb
aam
test
sti
mov
stos
test
rcrb
outsl
sbb
lcall
add
pop
aam
sub
pop
or
pop
rclb
clc
adc
ret
lods
mov
sarb
cmp
mov
std
es
insb
jo
cwtl
push
jne
mov
insb
shrl
cmp
das
lods
inc
fcomps
scas
pop
dec
sbb
mov
inc
push
ds
xor
add
dec
add
lods
es
shll
ficomps
aam
mov
or
cmp
dec
int
dec
subb
push
nop
jg
outsb
fcoml
push
outsl
or
mov
loope
and
sub
aaa
aad
inc
scas
les
mov
mov
push
mov
outsl
ficomps
and
lods
sub
rorb
or
push
add
mov
cmp
negl
xchg
mov
std
or
mov
pop
outsb
iret
testb
daa
pop
jb
pop
int
call
adcb
cmc
sub
mov
outsl
push
movsb
sub
xor
stos
pushf
xchg
xchg
out
repnz
mov
xchg
mov
xchg
stc
or
orl
das
mov
push
inc
fnstenv
rclb
fcmovnbe
inc
jge
fneni(8087
lret
push
mov
jbe
aad
idivb
daa
sbb
sbb
ja
xchg
or
or
inc
je
cltd
push
std
frstor
push
sub
mov
push
enter
sub
jae
xlat
xor
cli
sub
sub
jnp
add
sti
ja
test
fnsave
jns
pop
push
sub
dec
mov
add
cmp
mov
inc
inc
and
inc
push
xor
push
xchg
and
or
jns
outsl
mov
inc
outsl
sahf
adc
in
pop
sub
ffree
mov
sub
mov
inc
xchg
lods
lds
pushf
mov
lahf
push
outsl
adcb
lock
and
roll
das
cld
mov
push
repz
xchg
cld
mov
out
push
jge
aad
pop
data16
ljmp
dec
scas
into
jle
sti
fs
cmp
js
mov
jl
jns
xchg
cmp
call
out
push
mov
data16
je
test
push
lcall
outsl
les
xor
sarb
das
mov
stos
outsl
jns
cmp
jns
mov
sbb
fsubrs
fildl
pop
leave
ret
add
test
push
mov
mov
sarb
cmp
push
jo
aad
arpl
es
push
or
mov
xlat
sbb
xor
das
cmp
mov
push
lcall
scas
cmp
arpl
push
mov
inc
pop
sbbb
bound
ss
std
ror
test
add
inc
xchg
add
ljmp
or
inc
jbe
repnz
xor
adc
movsb
jl
jge
lahf
jnp
subb
dec
je
jmp
mov
mov
das
xor
mov
push
mov
inc
and
mov
daa
fbstp
push
pop
gs
xor
xchg
sbb
inc
cs
adc
filds
imul
add
notb
jbe
xor
cmp
test
sub
xchg
push
out
stos
out
add
enter
mov
outsb
xor
sub
push
les
test
sbb
cmp
leave
dec
or
sub
sahf
adc
stc
cmp
xchg
js
in
das
mov
xor
scas
dec
shr
push
movl
test
push
test
xor
inc
inc
mov
add
mov
or
or
scas
cld
dec
js
faddl
fimuls
xchg
mov
outsl
fsubrl
pop
jecxz
out
fsubrs
jmp
dec
cmpsl
loopne
rorl
adc
mov
ja
imul
in
testl
sahf
xchg
push
adc
cmpsb
adcb
jmp
xchg
inc
outsb
cwtl
cmpsl
hlt
xchg
sub
jo
push
scas
mov
mov
or
sbb
add
mov
gs
daa
out
test
iret
popf
call
xor
imul
dec
mov
out
mov
sbb
cli
outsl
inc
mov
int
aad
lods
cmp
and
add
sbb
stos
push
xor
cmpsl
subb
xchg
jae
sub
mov
pop
cld
adc
js
aad
test
pop
stc
das
pop
aad
mov
lds
and
mov
scas
mov
xor
sti
sbbl
jle
jl
data16
movsb
in
and
cmp
ret
or
sub
push
add
mov
xor
cltd
lock
and
test
xor
ss
shrl
sbb
sbb
inc
scas
loope
jl
stc
mov
sub
fildll
jno
in
cmpsb
scas
pop
dec
repnz
mov
es
push
je
fwait
inc
xchg
cmp
mov
push
das
mov
shll
mov
and
ret
or
adc
shrl
mov
mov
loop
inc
fdivrs
ror
outsl
fsubrs
mov
pop
jp
vmovapd
add
jb
shrb
push
addr16
inc
fs
lea
and
and
jg
jp
xchg
pop
pop
loopne
cmp
cli
mov
pop
mov
cmp
jmp
enter
jbe
imul
jl
cwtl
pop
out
inc
insl
jge
sti
sub
push
push
test
mov
adc
outsb
mov
mov
pop
sbb
fsubs
jns
sub
push
faddp
das
fcomps
adcl
jl
cwtl
push
mov
repz
jb
out
mov
mov
dec
xchg
dec
and
xchg
call
mov
or
hlt
mov
outsb
sbb
scas
push
push
stc
or
outsb
into
test
sub
xchg
lret
sbb
int
psllq
mov
enter
iret
scas
xchg
clc
push
mov
push
movsb
sbb
xchg
iret
cmp
add
popf
push
outsl
mov
in
push
and
insb
and
add
sbb
imul
xchg
jle
push
aaa
push
mov
xor
js
dec
js
push
mov
jle
inc
cmp
in
pop
mov
xor
sub
mov
orl
les
cmp
into
sahf
lahf
movsb
sub
pusha
jecxz
cmp
js
mov
and
cmp
push
jge
test
cmp
xchg
lahf
pop
data16
outsb
push
adcl
int
mov
push
push
mov
sub
popf
test
bound
outsl
inc
insl
cmpb
and
ror
adc
popa
sub
or
cmpsb
lahf
mov
cmp
cmpb
jmp
adc
jae
test
aam
int
inc
dec
jle
sub
jmp
data16
add
push
jb
dec
fisubrl
outsl
push
push
insl
sub
sbb
ret
cmp
inc
loope
inc
xchg
aas
pop
cmc
add
js
mov
sub
push
jg
xchg
cwtl
mov
cs
leave
mov
pop
js
divb
cs
adc
jns
shrb
push
pop
lcall
jnp
pop
pusha
aam
adc
push
test
push
ljmp
fldl
mov
lods
lea
mov
mov
stos
jae
inc
in
decl
mov
jl
mov
shll
cmp
cmpsb
inc
xor
mov
xchg
scas
xor
cli
lret
scas
loope
inc
or
subb
mov
mov
add
imul
pop
mov
les
stos
aad
outsl
cmc
fiaddl
dec
fldt
rcll
sbb
cmp
and
lcall
mov
fsubrs
jg
into
loope
adc
pop
js
xchg
mov
int
cmp
pop
jne
rcrl
ret
mov
xchg
mov
mov
dec
pop
xor
movsl
movsl
popa
jl
dec
in
push
shlb
dec
xor
jl
lea
adc
add
xor
data16
in
int3
imul
sbb
lds
jmp
sub
fildl
notb
enter
xchg
cld
inc
jmp
xor
inc
push
push
jnp
jno
repz
into
sub
mov
cs
popa
inc
inc
filds
inc
sahf
sub
cmpl
mov
mov
insb
mov
sbb
pop
push
scas
cld
mov
mov
and
daa
inc
adcb
adc
xchg
and
push
dec
or
movsb
adc
and
pop
mov
adc
negb
stos
inc
cmp
mov
mov
jnp
mov
icebp
push
xchg
mov
imul
jne
xchg
call
add
cltd
push
jae
xchg
or
fidivrl
pop
mov
stos
dec
jmp
mov
and
xchg
nop
inc
hlt
lcall
iret
lret
out
jns
cmc
shlb
test
add
aad
test
push
iret
dec
das
xchg
push
or
fldt
mov
out
mov
pop
arpl
addr16
rcrl
mov
xor
ret
or
iret
jl
and
hlt
lods
sub
int3
outsl
fdivrl
jmp
push
test
das
nop
pop
jns
fsts
xor
jnp
jl
mov
enter
cmpsb
scas
push
arpl
push
aam
setl
xchg
inc
out
out
xorl
jg
jp
cmp
das
stos
jecxz
insl
lret
inc
jle
pushf
xchg
adc
sbb
lds
pop
pop
mov
mov
cmp
cmpsl
mov
ss
iret
mov
ds
clc
movsb
jle
movsl
mov
adc
pop
push
mov
xor
imul
jge
jo
or
daa
xor
ja,pn
jecxz
xchg
inc
jae
in
test
adc
mov
fidivl
mov
xchg
push
imul
xchg
push
push
dec
ljmp
push
sahf
inc
sahf
add
pop
shll
out
fcmovbe
ret
add
stos
outsl
nop
aad
sub
cli
fsubrs
mov
movsl
scas
push
or
outsl
dec
dec
push
imul
repz
dec
adc
xchg
xchg
lea
movsl
arpl
xchg
push
adc
sub
cwtl
or
je
mov
adc
stos
ret
sahf
pop
mov
bound
push
fidivl
inc
dec
sub
sub
cwtl
jecxz
scas
popl
push
repz
loopne
test
mov
inc
pop
std
sub
jle
pop
sbb
and
xlat
sbb
popf
sahf
enter
dec
das
and
ds
xchg
ret
mov
loopne,pt
sub
and
mov
out
pop
outsl
dec
andb
mov
aam
sbbl
sti
dec
es
inc
fistpl
dec
ljmp
dec
jmp
adc
mov
xchg
test
popa
out
cmp
mov
xchg
clc
jo
mov
mov
stos
mov
and
adc
stc
jnp
jnp
call
testb
popf
adc
mov
jp
fnstenv
int3
mov
daa
xchg
xchg
xor
scas
xchg
lcall
shl
in
xchg
push
icebp
pop
jno
cmp
sub
mov
sub
sub
rorl
insb
xchg
mov
jl
jecxz
lcall
mov
xchg
aaa
or
sbb
pop
out
aam
fs
call
rcrb
sahf
mov
mov
or
shlb
pop
popa
mov
push
pop
notb
jae
fisttpll
fwait
popa
cmp
bound
jae
cwtl
out
pop
arpl
imul
lods
test
mov
cmpsb
nop
lcall
add
fs
inc
std
adc
pop
cmp
inc
fdivl
cmpsb
mov
adc
inc
dec
ss
and
out
push
mov
push
pusha
sbb
inc
lahf
pop
into
cmp
jl
pop
mov
hlt
sub
inc
adc
lds
push
dec
mov
xor
cmp
mov
test
test
pusha
inc
cmpxchg
dec
or
lahf
bound
push
aas
clc
xor
add
mov
push
inc
clc
movsb
enter
cmp
sbbb
sub
outsb
lock
and
imul
jp
test
ret
pop
push
lock
fs
sub
pop
hlt
xchg
addr16
scas
in
mov
mov
mov
adcb
push
fcompl
jg
lcall
cmp
sbb
gs
das
jecxz
cwtl
rolb
sub
hlt
pop
lea
jb
dec
out
cltd
sub
pusha
cltd
fists
repnz
push
popf
js
dec
inc
loop
add
in
test
push
mov
pop
sbb
mov
shl
cmp
push
les
xor
xlat
in
shll
in
sbb
dec
or
or
js
arpl
and
rol
outsl
cli
and
sbb
out
push
dec
push
adc
test
mov
xchg
cltd
call
sti
lcall
das
push
lret
test
mov
lcall
mov
mov
test
insl
dec
xchg
sub
fwait
fwait
roll
fidivrs
inc
pop
repz
xlat
cmp
sbb
imul
dec
and
stc
fisubl
div
jge
lcall
test
enter
mov
mov
or
leave
dec
cmpsl
cmp
movsl
adc
and
test
dec
je
push
adc
gs
cli
add
inc
scas
push
scas
hlt
cltd
popf
mov
dec
xor
jo
les
mov
xor
xor
sbbl
test
shrb
sbb
push
dec
xchg
out
fidivrs
int
es
out
jbe
pop
scas
outsb
daa
xchg
rcr
sahf
imul
insb
and
xchg
inc
mov
cmp
lahf
movsb
push
xchg
sbb
sbb
gs
into
dec
jle
sbb
outsl
xor
xlat
mov
sti
test
enter
xor
inc
mov
mov
inc
rcr
inc
aam
dec
sbb
shrb
fisubrs
and
jge
std
test
lea
inc
in
mov
jmp
shll
add
bswap
pop
subb
dec
and
dec
push
out
mov
sbbb
repnz
and
lret
push
xchg
push
add
cmp
ja
hlt
pusha
adc
lret
push
lcall
adcb
xchg
sbb
sbb
pop
popf
push
in
cmp
inc
decl
mov
lods
cmpsl
mov
mov
mov
icebp
xor
mov
cmp
ja
mov
and
mov
push
sub
pop
dec
scas
and
sub
push
pop
mull
imul
xor
sub
mov
test
jl
dec
push
fimull
sahf
adc
cmc
adc
mov
test
or
test
jo
cmp
popl
cwtl
test
shl
inc
pushf
sub
jne
jns
cli
pop
repz
mov
das
test
imul
mov
inc
stc
jbe
mov
mov
pshufw
mov
sbb
loope
add
push
sub
ss
mov
pop
cmpsl
lods
and
inc
data16
pop
adcl
jg
mov
sub
jae
mov
jmp
cmp
repnz
add
xor
push
cmp
das
mov
sub
sti
adc
ss
mov
jmp
adc
adc
add
hlt
dec
lret
cmp
add
xchg
add
add
cs
je
mov
push
movsl
call
scas
mov
popf
cld
add
jle
ss
mov
scas
lcall
and
into
ja
push
arpl
mov
in
jmp
rcll
mov
cmpsb
mov
sbb
push
dec
cmpsl
adc
aas
movsl
mov
inc
mov
call
bound
cmp
cmc
call
imul
iret
sub
fildl
or
jb
cmp
das
mov
call
outsl
push
iret
push
nop
inc
sarl
mov
push
mov
sahf
cmpb
js
add
decl
sbb
repz
xchg
mov
pop
outsl
push
rclb
add
inc
add
stos
pushf
out
sbb
push
loop
shr
test
insb
xchg
sbb
cmp
push
jo
mov
push
lret
add
push
cmpsb
push
gs
lcall
arpl
repz
push
jb
pop
into
cltd
dec
xor
cmpsb
push
outsl
add
mov
push
fwait
out
mov
adc
xchg
xchg
mov
loope
mov
xchg
push
dec
pop
pop
and
dec
addl
xchg
mov
mov
in
xor
lods
xchg
hlt
cmpsb
ds
pop
fs
call
out
xchg
mov
cmc
ja
adc
mov
xchg
ret
aaa
xchg
adc
out
insb
call
jge
loopne
sahf
xor
bound
jmp
push
out
cmc
dec
icebp
fstps
out
outsb
add
stos
inc
jge
sbb
push
xchg
xchg
xchg
push
cmp
into
mov
mov
mov
mov
out
dec
jbe
push
movsb
sub
jnp
xchg
mov
sbb
js
int3
dec
test
shll
push
in
push
jb
adc
hlt
mov
ret
cwtd
dec
pop
jns
mov
aaa
popa
mov
jbe
pushf
cld
xor
inc
les
into
pop
jmp
test
int3
add
mov
adc
xchg
inc
insl
lds
arpl
addl
test
insb
clc
mov
stos
lcall
adc
mov
in
xchg
mov
push
mov
cmp
jb
out
clc
push
jnp
pop
push
popf
mov
pop
imul
push
ljmp
or
jl
inc
add
cwtl
ret
push
cmpsl
lock
xor
iret
sbb
dec
ret
mov
out
push
icebp
ja
jb
enter
divl
sub
mov
mov
stos
inc
push
inc
cmp
or
sbb
and
inc
int
or
or
out
aaa
and
mov
dec
jo
sub
ja
mov
xchg
fstl
aad
cmp
cmp
mov
jb
inc
leave
fs
sbb
mov
outsb
sahf
test
sbb
mov
loop
into
out
xchg
xchg
call
inc
syscall
dec
jae
add
pop
adcl
push
lock
push
sub
gs
sbb
fucom
mov
fwait
push
idivl
in
cs
pop
mov
hlt
cmp
ja
in
mov
pop
jae
xor
imul
nop
sub
outsl
sbb
jne
rorl
fucom
rcl
fdivs
sub
mov
int
int3
adc
mov
dec
lds
sub
jae
xlat
adc
ret
idivl
rcrb
inc
movsb
or
dec
jns
xchg
dec
jle
pushf
stc
pop
sub
adcb
pop
ret
fs
push
xchg
pop
out
fidivl
fwait
sub
leave
mov
push
mov
pop
fmuls
sbb
push
jle
mov
mulb
xor
pushf
add
pop
in
test
push
in
outsb
notb
push
xor
mov
jg
push
jno
push
push
jb
push
cmp
in
enter
jnp
int3
adc
cs
dec
clc
rcrb
push
js
push
dec
std
loope
xchg
aad
cmp
das
and
pop
rcll
inc
adc
push
adc
lahf
pop
xchg
add
mov
pop
cmp
fwait
push
adc
outsl
popa
fstpt
sti
pop
out
nop
imul
out
adc
shlb
push
jae
mov
je
add
jle
jae
xchg
cltd
sbb
js
sub
jo
mov
sub
jb
inc
mov
adc
xchg
cwtl
cmp
and
outsl
mov
xchg
push
jmp
mov
and
es
jmp
aad
mov
adc
test
cmp
mov
sub
xor
xor
push
or
cmp
push
jo
out
mov
mov
mov
xor
arpl
iret
cltd
loopne
and
mov
cwtl
aas
cmp
dec
mov
push
clc
inc
iret
lahf
push
out
mov
in
push
sahf
stos
out
sub
push
xchg
in
insl
shrb
call
pop
test
roll
mov
in
xor
cmp
lret
cld
mov
and
rorl
mov
pop
popf
push
mov
les
in
jnp
jbe
mov
fwait
aam
shl
bound
cli
cmpsb
jnp
les
imul
mov
inc
insb
xor
cmp
out
xchg
sti
mov
pop
out
mov
jg
xchg
rcr
out
inc
fnsave
mov
push
test
jae
xchg
addr16
mov
xor
inc
bound
xor
or
popa
insl
cs
daa
stos
stos
or
cmpsb
insb
inc
inc
jp
xor
xchg
test
scas
dec
pop
das
sub
xchg
rcrl
lea
pop
xchg
test
ret
adc
pop
dec
add
es
dec
cmp
aad
jb
je
mov
and
xor
xchg
add
ja
mov
in
fldcw
xor
lahf
sub
hlt
iret
in
mov
mov
dec
cmp
cmp
add
push
sbb
mov
js
outsl
sbb
test
aas
out
push
inc
outsb
andb
cmc
mov
push
adc
addr16
outsl
xor
xor
nopl
fists
inc
int
addr16
mov
jle
jbe
das
xchg
decb
fldt
aam
jb
stos
sahf
xchg
fucomip
mov
add
adc
xor
sub
out
xor
jbe
or
aaa
mov
and
scas
inc
push
cmpb
inc
fimuls
inc
sbb
inc
aaa
xchg
jne
pop
jnp
inc
jg
and
imul
dec
pop
out
mov
xorb
dec
js
mov
sti
std
les
call
outsl
jae
jg
popf
mov
push
sarb
push
pop
ss
mov
mov
inc
daa
mov
jno
push
inc
jbe
cmp
call
scas
scas
adc
in
mov
lea
sub
jmp
cmc
and
dec
dec
movsb
test
into
cmp
push
inc
and
mov
popa
mov
or
jns
push
dec
insb
jle
and
cmp
jp,pn
lret
push
inc
call
leave
inc
call
hlt
push
jns
loopne
inc
das
cltd
fcomps
repz
xchg
push
pop
jb
subb
jne
mov
xchg
in
sbb
adc
cld
ds
lods
es
pop
ficoml
jl
xchg
in
mulb
sbb
mov
outsb
cmpsb
arpl
popf
aas
mov
dec
jp
cmpl
push
daa
cmc
cmp
jle
push
cwtl
xchg
inc
add
xlat
js
imul
mov
frstor
push
aam
imul
xchg
cmpsb
ss
dec
jg
test
jge
notl
dec
test
cli
mov
xor
cmpsl
out
push
andb
jnp
mov
jno
lret
idivl
inc
push
cld
cmp
aam
shll
ficoms
xchg
cs
add
dec
sub
pop
arpl
fisubrs
aas
jl
imul
popa
movsl
fisttpll
sub
jo
inc
scas
sbb
xchg
sub
push
adc
or
loopne
inc
and
mov
pop
sahf
mov
jns
cmp
mov
sub
cmp
push
mov
jo
repnz
stos
stos
jle
push
mov
int
mov
mov
push
insl
mov
pop
xchg
sbb
sub
mov
lret
nop
or
roll
sti
movsl
std
cmp
sahf
enter
lods
sub
inc
push
stos
outsl
xchg
js
lods
sbb
mov
pop
push
push
outsl
xor
int3
mov
mov
loop
xchg
mov
xlat
pop
adc
faddl
xor
push
sbb
add
add
mov
cmpb
push
mov
jg
lret
xchg
add
pop
xchg
cmp
cwtl
sub
lods
lods
mov
in
lods
test
xor
mov
in
lds
jns
mov
cmpsl
sbb
in
arpl
inc
in
arpl
mov
xchg
adc
sbb
outsl
leave
mov
mov
fcmovnu
ja
lods
ja
aam
call
cmp
fisubs
sbb
enter
loop
fnstsw
and
inc
jmp
mov
enter
repz
or
or
popf
call
das
sbb
xor
enter
cpuid
fstl
xor
mov
push
imul
cwtl
cmc
inc
scas
out
gs
mov
dec
sub
pop
out
loop
imul
jns
pop
mov
cmp
jbe
jno
push
insb
out
inc
xchg
outsl
add
pushf
jne
mov
scas
cmc
push
mov
clc
scas
sahf
sbb
outsb
or
sbb
pop
lcall
ja
fildl
mov
dec
outsb
pop
fisubl
dec
ret
or
xchg
std
mov
cmp
push
or
mov
fiadds
pop
hlt
jge
repz
sub
nop
mov
ds
push
fwait
xchg
sbb
sbbl
xchg
ds
push
fiaddl
jmp
fidivrs
cmpsb
push
pop
fmuls
mov
adc
cmp
dec
lods
sbb
cmp
and
dec
fdivrl
ljmp
pop
outsb
push
js
inc
dec
int3
std
add
jno
lsl
cli
cmpsb
enter
out
add
sub
and
cwtl
in
fcompp
adc
inc
into
insl
add
movsl
xchg
test
add
sub
iret
mov
xorb
int
rorb
jno
and
mov
js
inc
adc
test
sbb
ret
scas
or
pop
gs
insb
sub
inc
ret
into
xor
movsb
add
sub
push
dec
push
js
ja
test
push
xchg
mov
mov
cmp
xchg
sbbl
ja
sahf
fsubrl
push
add
imul
cmp
dec
xchg
push
mov
cmp
push
aaa
aas
cmp
adc
dec
inc
test
fbld
mov
int
mov
cmpsb
dec
dec
cwtl
fwait
mov
mov
shrl
jecxz
and
jno
push
cwtl
call
cmp
mov
ja
jmp
enter
cmp
arpl
mov
enter
scas
jle
jmp
das
dec
je
icebp
mov
jne
test
xchg
insl
sbb
leave
cmp
das
jb
jae
xchg
push
and
mov
push
sub
outsb
leave
inc
push
push
adc
or
shll
and
inc
leave
in
fwait
out
bound
or
cmp
jmp
fisttpll
ljmp
stos
xchg
pop
jae
cmp
and
jae
aas
and
test
outsl
lods
call
sbb
inc
jl
sbb
test
mov
adcb
imulb
in
jg
mov
jp
lods
lods
lret
test
xor
popf
aaa
nop
fwait
outsl
pop
jle
cld
movsb
xchg
lock
sar
pop
in
adc
add
and
mov
ret
and
int3
mov
cmpsl
and
jmp
mov
mov
std
jle
popa
clc
out
xor
pop
hlt
push
test
jb
xchg
sub
iret
cmp
scas
ja
pushf
xor
aad
xchg
push
test
iret
lret
dec
cmp
pop
sbb
add
cmp
jns
popf
sbb
or
lahf
sub
cmpsl
adc
data16
aam
inc
jo
and
mov
inc
orl
dec
mov
lret
and
pop
cwtl
call
lods
scas
imull
dec
pop
mov
mov
mov
addr16
adc
lahf
cld
js
add
mov
push
xor
out
or
inc
mov
fisttpl
pop
jmp
lock
scas
mov
stos
insb
repnz
jp
pushf
xor
fcmovbe
sub
outsl
mov
sub
mov
cs
add
sub
lcall
out
insl
push
test
fisubrl
addl
mull
call
xchg
jb
lock
out
sar
xchg
dec
popa
mov
jbe
ret
adc
xchg
lea
dec
shrb
dec
xchg
xchg
enter
sub
mov
out
pop
sti
push
jmp
fisttpl
gs
add
jnp
mov
mov
popa
jns
ds
xor
scas
lods
enter
lret
movsl
push
sub
mov
lock
mov
out
add
pop
xchg
aad
out
push
mov
loopne
add
rclb
lcall
movsl
add
mov
bound
std
mov
dec
mov
jns
ja
in
cmpsb
add
or
dec
dec
mov
xor
je
xor
pushf
test
in
stos
test
mov
push
sbb
mov
jmp
xchg
xchg
test
stc
xchg
and
sub
inc
jmp
iret
mov
cmp
rol
sbb
jg
jp
cmc
sub
adc
std
fimuls
nop
adc
jae
jl
leave
into
sbb
repnz
xor
inc
addr16
insb
ja
stos
ret
in
cmp
imul
jno
stos
rcrb
pop
pop
add
dec
idivb
ret
imul
or
inc
fcoms
testl
cmp
cmc
iret
insl
jg
sbb
pusha
sbb
push
stos
testl
or
adc
sbb
inc
jb
sub
mov
xchg
sub
je
out
mov
lret
jge
xchg
jle
add
mov
jnp
push
dec
inc
inc
adc
aas
add
push
sahf
movsl
hlt
hlt
mov
dec
dec
movsl
mov
cli
xor
xchg
cs
adc
jg
call
imul
cmpsb
fadd
testl
addr16
xchg
test
mov
dec
cmp
adc
and
jmp
fs
xchg
int3
xor
into
add
pop
xor
scas
test
aas
and
scas
iret
mov
mov
push
or
movsl
flds
adc
cmp
and
ja
ss
jecxz
xchg
sbb
outsb
pop
mov
cmpsl
cltd
xchg
in
cmp
pop
je
xchg
call
scas
xchg
xchg
push
out
je
and
lret
shll
or
js
mov
test
cmpsl
call
cmpsl
sbb
insb
jp
in
push
mov
lock
mov
fcomps
push
test
push
data16
push
push
push
scas
mov
xchg
or
cs
out
outsl
adc
xor
loop
push
cwtl
or
sarb
push
mov
insl
cmp
or
pop
cwtl
mov
stos
addb
in
shrl
xchg
jae
jp
add
jg
cmpsl
pusha
ficoml
movl
xor
movsl
outsl
les
shll
movsl
das
add
push
int3
popa
xlat
dec
xchg
xchg
cld
add
outsl
cltd
inc
xchg
add
cli
hlt
gs
into
adc
mov
xchg
push
pop
dec
xor
mov
fs
add
leave
jno
mov
cs
sti
enter
sti
mov
dec
adc
or
sbb
aam
dec
pop
xor
das
je
mov
iret
jg
mov
add
adc
add
pop
decl
pop
add
sbbl
test
jae
inc
sbb
mov
xchg
shll
cld
fsts
lock
decl
xchg
add
fwait
pop
cmp
jb
xchg
sahf
jle
daa
mov
js
pop
arpl
add
adc
ljmp
lret
call
orl
mov
sarl
gs
inc
imulb
test
ficompl
inc
inc
enter
sub
fsubp
push
xchg
lret
das
ss
jl
outsl
mov
mov
iret
cmc
stos
adcl
lret
lret
out
xor
push
aad
pushf
sbb
pop
out
loop
jb
pop
cmpb
fsubrl
adcb
mov
jp
dec
mov
addb
ljmp
scas
aaa
bound
ret
shr
nop
adc
jbe
xor
sbb
and
lret
sahf
stos
test
sbb
sarl
inc
sbb
cmpsl
dec
outsb
aam
pop
shll
int
adc
push
cltd
jp
out
inc
sub
cmp
jnp
or
inc
pusha
lds
cwtl
sbb
enter
inc
xchg
push
push
cmpsb
test
jle
call
xchg
aas
into
stos
je
cmp
dec
sub
push
fwait
pop
hlt
mov
stos
and
dec
inc
or
hlt
test
mov
pop
fcmovnbe
sbb
xor
adc
add
mov
mov
adc
push
jle
int
rcll
repnz
ja
outsl
lret
incl
xchg
es
mov
xchg
or
into
add
icebp
inc
adc
mov
aaa
test
test
sbb
nop
push
cmc
lcall
mov
cmp
clc
add
mov
dec
aad
sar
jmp
mov
aas
inc
add
mov
sub
outsl
push
out
pop
inc
outsl
inc
fnclex
dec
ret
jo
imul
adc
sub
das
cmp
or
mov
xchg
cld
ret
push
loop
dec
mov
mov
sub
rol
or
mov
inc
jbe
ret
out
test
dec
push
scas
mov
sti
mov
out
xchg
mov
and
call
and
lods
cwtl
jmp
sti
repz
aaa
lahf
fdivrp
adc
and
call
das
xchg
bound
je
fs
incb
fcoms
add
xor
into
ret
adcl
int
int
or
cmp
mov
jg
test
adcl
test
mov
scas
inc
adc
hlt
jmp
mov
sbb
push
and
push
out
ss
xlat
ret
pop
cmp
lock
test
pop
lods
mov
cmpsb
inc
lods
add
adc
addr16
sub
inc
ljmp
sub
sub
mov
jmp
fwait
cmp
es
ja
xor
lock
outsb
mov
scas
inc
fisubrs
and
lock
iret
out
inc
pop
popf
out
popf
inc
xchg
mov
push
inc
and
popf
stos
bound
lds
xchg
imul
push
cwtl
lret
loop
aad
xchg
andb
mov
fdivp
pushf
push
scas
hlt
lods
jge
mov
ror
add
pop
rcl
pop
push
pusha
mov
cmpsl
mov
rcrl
pop
out
frstor
cmp
out
adc
cwtl
pop
leave
arpl
xchg
adc
sub
lret
jbe
ljmp
inc
jecxz
dec
cmp
mov
sub
insb
aas
jmp
xorl
push
mov
dec
inc
popa
sbbl
scas
sub
dec
xchg
xchg
xadd
mov
in
sub
cmp
mov
dec
mov
xor
outsl
pop
jne
in
inc
fs
test
or
dec
popf
or
cmpsl
jb
jo
mov
inc
jmp
pop
push
sub
mov
push
outsl
pop
mov
in
popf
xchg
xchg
mov
out
test
clc
iret
aaa
jg
xorb
pusha
jns
jp
shr
xor
sub
ret
xor
jg
shlb
jle
call
decb
stc
cmp
cmp
mov
and
mov
js
movsl
xlat
mov
xor
int
adc
cwtl
inc
mov
fstpt
mov
outsb
hlt
stos
sub
sub
or
sub
push
pusha
enter
xlat
outsb
das
xchg
cmp
dec
repnz
pcmpgtd
out
sbb
mov
adc
pusha
mov
mov
cmp
push
scas
stos
xchg
rclb
jbe
je
dec
cmp
xor
sbb
or
pusha
iret
in
addr16
xor
js
outsb
jg
outsl
scas
fsubrs
mov
imul
pop
xor
xor
outsb
hlt
mov
and
dec
test
pushf
fcmovbe
lret
mov
cmpsl
jl
add
stc
push
or
fisubrl
das
inc
inc
hlt
cmpl
push
enter
mov
add
inc
enter
inc
or
sub
out
pop
int3
lret
jnp
cwtl
cs
dec
cld
insl
dec
mov
sub
jo
adc
cli
sbb
xor
cs
add
xchg
inc
or
jecxz
and
sbb
gs
fsubr
jns
jne
daa
sub
pop
jbe
mov
jmp
cmp
inc
roll
mov
or
jbe
or
mov
xchg
cmpsl
dec
cmp
sub
inc
or
pop
loopne
xchg
jb
adc
in
push
ljmp
xchg
xlat
inc
test
pop
pop
push
mov
adcb
sbb
not
xchg
test
dec
pop
jbe
divb
cmp
test
pop
sub
xchg
cmp
inc
push
xor
js
sbb
sub
loop
pop
xchg
cmp
sub
lods
imul
push
scas
repnz
push
icebp
sub
lahf
imul
mov
jno
mov
push
cmpsl
mov
push
mov
inc
jg
iret
pop
mov
or
add
dec
or
sbb
enter
or
dec
jle
addr16
dec
jo
fistpl
jb
inc
leave
xchg
pop
imul
jb
dec
pop
pop
and
cmp
xor
jo
or
jb
push
leave
test
mov
add
pop
js
sbb
lahf
xchg
fwait
cmp
test
sub
test
cmc
sub
cmpsl
xchg
adc
inc
insb
add
adc
inc
and
mov
lods
stos
es
jle
mov
dec
jg
dec
cmpl
mov
xor
or
push
xchg
push
add
sub
pusha
out
dec
inc
xchg
sbb
div
xchg
cmpsb
sahf
cltd
lock
inc
fisubrl
mov
mov
in
xor
jecxz
mov
xchg
jne
xor
insl
xor
add
jp
ds
lock
dec
xchg
sbb
fists
mov
jb
inc
clc
fnstenv
mov
push
jns
xor
mov
cmp
aad
sub
mov
mov
jmp
ret
inc
es
mov
cli
nop
cmp
xlat
cmp
adc
stos
sbb
in
lods
enter
cltd
xchg
pop
xor
sbb
and
dec
in
lods
jmp
xchg
lds
jb
xchg
insl
rorl
mov
scas
insl
sub
mov
pusha
cmp
aam
pop
scas
or
mov
sbb
sbb
je
hlt
lahf
jnp
lret
cmpsb
lahf
popf
xchg
mov
mov
mov
xchg
flds
xchg
mov
ljmp
outsl
mov
jns
mov
mov
mov
jmp
push
mov
mov
cmp
adc
sahf
mov
xchg
adc
loopne
andl
fisttpl
add
movsl
cmp
push
adc
cmpsl
push
dec
fsubrs
mov
or
testl
test
jbe
mov
push
cmp
inc
addr16
fldl
imul
shrl
sbb
and
and
cld
jbe
jne
pop
pushf
rcrl
imul
mov
ljmp
orb
cltd
je
loope
ja
lock
mov
out
sahf
or
push
enter
ljmp
dec
xchg
sahf
lods
arpl
mov
mov
xchg
lahf
adc
pop
mov
mov
xchg
xor
push
xchg
mov
cmp
pushf
mov
xor
icebp
push
mov
in
inc
leave
jbe
out
push
push
xchg
movl
push
test
xor
sbb
repz
cmp
and
std
mov
lock
mov
jo
popa
jmp
jno
cmp
mov
mov
gs
jge
or
sbb
add
jo
scas
mov
xchg
imul
sub
cltd
push
scas
rolb
push
lret
or
xor
sub
bound
scas
or
out
xchg
lcall
paddsw
adc
xor
add
add
mov
arpl
mov
mov
lock
adc
add
clc
fs
jne
cmpsl
pop
jo
xchg
lds
jle
or
imul
cmpsb
iret
xor
shll
jo
adc
movb
imul
sbb
pop
xchg
lods
push
mov
mov
inc
aam
stos
ljmp
xchg
ljmp
xchg
jo
xchg
lods
cmp
mov
cmp
mov
repz
cli
xchg
int
adc
in
adc
inc
inc
cmpsl
mov
cmp
mov
mov
stos
insl
push
scas
test
xor
dec
push
mov
jnp
cmc
pop
jmp
sub
xor
xchg
shll
das
out
xor
jbe
movsb
or
xor
mov
jae
mov
sbb
rcrl
repnz
jne
sahf
je
xchg
dec
inc
mov
mov
and
imul
push
and
and
fwait
lcall
cld
ficoms
ss
bound
hlt
mov
push
jae
aas
pop
sub
in
pop
stc
cmc
xchg
xor
sbb
scas
pop
mov
movsl
fldt
mov
aas
cld
test
pop
mov
mov
std
int3
addb
mov
jae
and
mov
push
add
mov
ss
js
pop
dec
sbb
adc
imul
out
out
les
mov
bswap
mov
imul
call
outsb
in
das
dec
aaa
adc
sub
pop
add
test
jge
cmpsb
add
movsl
mov
xchg
adc
pop
push
out
add
lcall
in
xchg
inc
test
scas
add
mov
mov
shll
jo
pop
mov
xor
out
push
adcb
insb
and
sti
push
jl
push
mov
mov
enter
jae
lea
pushf
repnz
js
and
clc
pop
jo
call
xor
shlb
sbb
cltd
mov
aaa
stos
xor
hlt
call
or
fstpl
aas
insb
xchg
lcall
cmpsl
nop
push
stos
les
in
mov
loop
stos
ss
inc
leave
cmp
outsb
mov
xchg
inc
insb
loop
xchg
in
dec
add
mov
jae
dec
fnstenv
lods
adc
fwait
outsb
jg
insl
adc
rolb
aam
push
stc
inc
mov
or
daa
test
mov
pop
in
lcall
cmpl
scas
in
jbe
popa
mov
popf
lcall
movsl
inc
lds
lahf
mov
cmpsl
fimull
push
jnp
ret
jmp
ss
mov
test
xor
bound
in
or
dec
mov
sub
je
imul
bound
decb
mov
test
call
aam
cs
push
sub
shll
adc
js
xor
xlat
std
ja
add
nopl
dec
lods
cmpsb
pop
test
xchg
test
add
in
loope
stc
sub
dec
xlat
popa
in
test
adc
mov
in
arpl
call
add
jno
jo
jne
mov
inc
cld
mov
jne
cltd
imul
ja
mov
mov
add
mov
jl
loop
pop
adc
test
imul
pusha
jns
mov
outsb
add
mov
mov
push
ficoml
out
and
xchg
clc
cmp
mov
or
add
cmp
mov
and
push
jae
mov
popf
stc
sbb
and
rep
sub
into
ja
push
cs
imul
mov
mov
test
test
ds
idivb
movsb
cmc
pop
lret
leave
xchg
pop
fwait
xchg
add
sbb
push
aad
jno
pop
dec
sbb
xor
dec
push
cmp
add
add
movsl
inc
test
push
ja
cmp
push
test
hlt
sub
inc
in
lahf
mov
xchg
mov
sarl
push
inc
sub
pop
pop
stos
mov
xchg
mov
repnz
mov
imul
mov
sub
cmpsb
mov
jne
pop
xchg
push
push
subl
or
testl
mov
jmp
mov
inc
xchg
into
push
mov
and
daa
loope
popa
movsb
mov
xor
and
pop
fmuls
mov
mov
int
in
loopne
fiadds
dec
mov
fisubrl
hlt
push
jmp
cmp
mov
pop
mov
cmp
repz
imulb
jno
cmp
cwtl
jmp
sbb
jbe
aaa
jno
mov
xor
sub
jg
idivb
jno
negb
xor
cli
gs
pushf
bound
adc
dec
pusha
les
xchg
and
stos
lods
jno
rcrb
sbbb
fs
outsb
les
xor
push
cld
aaa
sbb
andb
cwtl
push
sub
sub
cwtl
arpl
mov
stos
xchg
bnd
or
js
rcll
xor
push
mull
out
and
inc
dec
dec
fs
jns
mov
mov
dec
insb
addb
cmp
add
add
or
and
mov
test
cmp
shlb
xchg
addr16
movsb
insb
imul
arpl
dec
out
push
xchg
imul
xchg
cmp
push
adc
cmpsb
jg
xor
testl
mov
add
add
and
mov
shrl
mov
pop
js
xchg
ret
loope
cmp
sahf
scas
pop
xor
gs
rcl
mov
xchg
insl
adc
jmp
adcl
and
out
mov
xchg
into
mov
jp
movsl
jp
fisubl
push
adc
stos
les
lahf
fisubrs
imul
test
xchg
lods
loope
test
xor
sub
push
mov
and
jno
daa
or
mov
push
dec
xor
jmp
lret
roll
jmp
test
add
notb
sub
test
cmp
sub
jno
fnstcw
out
xchg
test
cmpsb
aaa
mov
inc
push
adc
inc
pop
mov
dec
push
daa
cld
mov
out
jmp
adcl
lret
adc
into
lods
insl
sub
fisttpll
xchg
daa
xchg
nop
enter
shll
dec
icebp
pop
xchg
roll
xchg
and
iret
and
or
cli
jo
xchg
loopne
xchg
lcall
sbb
xchg
mov
xchg
cmpsb
lods
cmc
add
lret
adc
xor
cmpsb
ss
ds
bound
daa
out
push
inc
cmpsb
int
cmp
mov
icebp
ret
lock
pop
jg
mov
or
add
andb
xor
xchg
outsl
xchg
inc
mov
xchg
and
lock
sbb
imul
into
aas
scas
mov
fildl
leave
pop
or
iret
mov
jne
ja
jne
and
xor
cmpsl
mov
push
lods
sub
push
mov
insl
dec
mov
dec
fs
add
sub
cwtl
js
mov
and
mov
dec
mov
add
lods
mov
fildl
mov
int
or
stos
adc
inc
push
addl
imul
jp
adc
xchg
lret
xchg
mov
xchg
aad
scas
and
sbb
fwait
add
and
mov
inc
test
test
popf
fisttpl
lahf
pop
aad
cmp
mov
sub
arpl
lods
arpl
xor
fstpt
xchg
pop
les
rclb
or
push
xor
cmpsl
incb
and
inc
push
xchg
adc
jmp
jb
jge
out
mov
mov
mov
subl
pop
pop
jns
push
dec
jo
inc
xor
into
loopne
loope
lcall
mov
in
jo
push
gs
jno
sahf
mov
adc
mov
mov
fbld
mov
inc
iret
mov
xchg
mov
lds
jae
rcrb
popf
jnp
stos
out
test
cmp
subb
mov
xor
jae
push
inc
rolb
hlt
cmpsl
sbb
lret
add
xchg
fdivr
and
das
mov
push
jne
xor
outsl
adc
sub
sub
adc
xchg
and
xor
cmp
inc
nop
sub
subl
xchg
adc
adc
mov
je
mov
jecxz
movsb
aad
popf
sub
sarl
jl
loope
lahf
sbb
mov
lock
jge
jno
xlat
fsubs
adc
sbb
inc
std
sbb
orl
and
mov
outsl
ret
fs
xor
test
jne
xlat
and
ja
fmull
jno
repz
sbb
adc
sarb
and
insb
xchg
outsb
sbb
test
pop
and
cmpsl
xchg
xchg
icebp
jae
das
sti
les
rolb
jnp
pop
xor
xor
inc
mov
mov
and
push
jge
scas
adc
sbb
xchg
scas
call
in
sbbl
mov
movsl
jg
pop
leavew
adc
lds
mov
scas
ja
dec
jo
push
xchg
es
jmp
sub
or
out
rolb
adc
cwtl
jbe
mov
mov
jecxz
je
dec
stc
shr
adc
jmp
xlat
iret
test
ss
movsl
inc
jg
outsl
lahf
mov
ja
xchg
add
push
scas
mov
dec
cmc
xchg
and
inc
jbe
clc
lret
cmp
jg
xchg
push
cmp
cmpsl
cmp
cmp
das
pop
repnz
push
cli
js
inc
gs
lods
dec
sarl
enter
xor
lret
popf
or
cmp
aam
in
cmp
jae
subl
fistps
adc
push
ss
sbb
cmpsl
icebp
into
and
out
add
cmc
xchg
mov
and
jae
insb
mov
xchg
test
inc
xchg
shl
andl
inc
rolb
jge
daa
dec
loopne
xor
enter
out
data16
mov
jl
push
lea
sub
mov
mov
test
cmpsl
adc
inc
inc
add
insl
push
scas
sbb
rcrl
ret
mov
push
or
popf
xchg
sbb
sbb
sub
shrl
or
scas
mov
xchg
lret
popa
mov
mov
stos
jmp
aad
ljmp
and
mov
or
push
dec
pop
stos
pop
and
lods
hlt
adc
mov
fdivs
inc
out
enter
mov
rorb
fcom
pop
or
push
xchg
inc
xchg
fmuls
call
jno
dec
push
aad
dec
inc
fs
mov
pop
cwtl
inc
adc
imulb
cmp
jnp
or
sbb
mov
adc
test
cmp
scas
jg
insl
clc
addr16
add
js
or
jb
popf
xchg
mov
loopne
mov
xchg
push
jns
movsb
pop
jp
and
sbb
test
call
das
sub
mov
nop
xchg
gs
mov
mov
xor
in
or
sbb
jo
fwait
jge
adc
adc
and
ja
loopne
pop
pop
mov
dec
mov
fsubrp
mov
mov
imul
lods
nop
inc
lods
xchg
shll
movsl
int
jmp
movsb
popf
mov
xchg
test
mov
leave
or
scas
out
or
xchg
adc
mov
pop
jecxz
push
jno
mov
movsb
push
lret
lds
hlt
mov
pop
mov
push
mov
mov
inc
and
addr16
cmp
and
add
imul
aas
aaa
data16
mov
sub
push
mov
scas
xor
pusha
mov
cltd
xchg
imul
add
cmp
jae
enter
test
lds
inc
std
sub
sbb
int3
dec
pop
sub
daa
pop
fcoml
divl
adc
push
mov
fsubs
shrl
push
mov
scas
sub
popa
subb
push
lret
cmpsl
imul
ror
mov
xchg
out
or
das
lahf
push
xor
cwtl
or
xchg
lret
inc
sub
fists
xchg
sbb
jo
popf
in
icebp
out
out
mov
sub
add
xchg
lahf
fndisi(8087
stos
xchg
dec
add
sahf
cs
pop
cld
pushf
adc
insb
xorl
pop
xchg
add
add
adc
sub
or
push
xchg
out
or
mov
int
xchg
push
in
imul
and
inc
jnp
or
sbb
push
outsb
or
dec
movsb
in
std
loope
mov
ds
cwtl
inc
add
insl
add
nop
bound
adc
push
push
jmp
int
test
rcrl
fs
cmpl
fs
popf
les
aas
jne
cmp
xchg
mov
pop
flds
xchg
xchg
sub
xor
pop
mov
cmpsl
test
pop
adc
das
leave
shll
adc
mov
mov
stos
add
adc
xchg
inc
adc
jp
cmp
out
add
jmp
out
xor
aam
add
xor
dec
outsl
add
lea
push
pusha
stos
clc
mov
inc
jge
mov
dec
loopne
cmp
sbb
push
sub
pop
add
clc
xchg
test
stos
xchg
add
or
outsl
or
inc
lahf
pop
push
dec
imul
pop
cmp
jnp
lods
mov
pusha
jns
push
test
pop
lcall
lds
xchg
and
xor
clc
or
insb
scas
fistps
add
xor
sub
adc
cmp
ja
pop
cltd
and
jne
mov
in
jne
shll
movsb
in
arpl
mov
push
shrb
int
push
fadds
pop
xor
jge
push
and
cmp
ljmp
je
pushl
inc
out
rcrb
jl
in
jnp
and
cmp
inc
aam
pop
lods
xchg
pop
lahf
cmp
scas
xchg
je
rcrl
sbb
mov
pop
mov
in
out
cmpsl
aas
sbb
hlt
dec
je
es
jb
fstps
jmp
int
lock
shlb
add
or
arpl
test
ljmp
outsb
add
iret
pop
adc
sbb
mov
dec
xor
xor
xchg
jge
add
mov
rorl
lret
push
mov
outsl
mov
mov
push
mov
rol
sub
repz
out
outsl
jnp
jg
inc
ret
dec
adc
test
icebp
aad
out
push
add
sub
insl
push
ds
cmp
jae
mov
jge
pop
push
sub
xchg
jge
push
mov
mov
pop
sub
mov
jo
or
pop
iret
xchg
jae
cmp
lods
add
sbb
mov
inc
enter
shll
pop
arpl
stc
cmp
xchg
scas
int
push
lcall
cmpsb
xchg
cld
cmp
push
push
and
xchg
fwait
rcll
testb
xchg
xchg
xchg
data16
xchg
in
cli
jbe
mov
mov
call
pop
sub
call
mov
xor
out
lcall
inc
cmp
fcomp
bound
imul
test
shll
dec
mov
mov
sbbb
popa
jge
push
sahf
lret
leave
cmp
cmc
sbb
clc
jne
push
add
sub
sub
mov
int
test
lea
xor
lahf
out
mov
and
shll
insl
jg
mov
out
mov
in
jae
ja
mov
scas
jae
adc
gs
loop
je
ret
sub
push
xchg
out
pop
push
scas
pop
js
out
jb
outsb
xchg
mov
imull
jl
xor
stos
adc
push
sub
daa
call
jno
jmp
inc
add
loope
hlt
loopne
inc
scas
bound
mov
data16
jnp,pn
out
stos
and
xchg
pop
pop
movsb
push
nop
sub
jl
jle
popf
jl
mov
bnd
std
xlat
push
mov
lret
bound
xchg
xchg
and
int
mov
jbe
ficoms
test
mov
popa
pop
sahf
pop
adc
sub
int
mov
sub
mov
push
lcall
add
ret
jp
sbbb
in
or
aaa
pop
gs
fwait
cmp
and
pop
push
data16
popf
xchg
inc
mov
xlat
js
push
insl
out
push
mov
shr
pop
testl
xor
outsl
mov
sbb
and
bound
adc
fadd
insb
imul
mov
rol
pop
fcmovu
stc
xor
stc
jecxz
mov
add
xchg
popa
push
repz
cmpb
ret
xchg
enter
xchg
icebp
xchg
sub
xabort
sub
insl
inc
xor
pop
es
cmp
mov
daa
leave
jb
imul
ss
xchg
outsl
dec
das
out
mov
sar
push
pusha
adcl
sub
dec
dec
icebp
cs
shll
dec
or
into
in
mov
pop
into
imul
lods
xchg
ds
mov
inc
testl
imul
dec
xor
js
out
inc
mov
test
add
lcall
iret
icebp
data16
adc
daa
pop
xchg
into
mov
outsb
cmpsb
inc
outsl
iret
in
xchg
mov
mov
xchg
notrack
outsl
xchg
aaa
leave
adc
insl
stos
aaa
inc
cmc
dec
fidivs
xor
add
dec
outsl
data16
adc
jg
mov
or
loopne
inc
jbe
loope
add
lods
call
and
enter
cwtl
outsl
cltd
mov
push
push
mov
dec
ret
imul
addr16
leave
stc
mov
jnp
push
xchg
test
movsb
ret
ljmp
lahf
stos
fidivrs
mov
jp
dec
xchg
inc
dec
xor
fiadds
and
es
fidivrs
orb
adc
pop
push
rcrl
push
mov
ret
pop
movups
fnstcw
jb
shlb
or
stos
xor
out
inc
sub
cwtl
mov
jge
out
push
mov
mov
mov
mov
mov
cmp
jae
mov
mov
jmp
into
cltd
inc
sbb
dec
les
lret
sbb
cmp
aas
ficoml
pop
ret
xor
mov
push
and
or
push
lods
jae
pop
jno
sub
inc
sbb
pusha
nop
cmp
pop
xchg
xorb
or
pop
enter
addr16
testb
cmp
mov
cmp
cli
repz
dec
cmp
inc
sbb
rclb
mov
aad
fxtract
out
pop
sbb
daa
jbe
mov
sub
push
pop
push
dec
inc
sti
insw
ret
push
fs
mov
and
adc
fs
adc
pop
pop
ret
lock
cmp
push
push
in
loop
push
bound
bound
jae
push
hlt
js
push
cmova
mov
xchg
inc
mov
mov
xchg
stc
movb
jne
pop
xchg
or
repnz
js
xchg
out
das
dec
mov
mov
rcrl
cmpsl
add
and
xchg
lods
fisttpll
lret
inc
popf
arpl
cli
std
out
int
mov
fidivrl
jno
lret
popf
call
mov
xchg
aaa
out
sub
xchg
push
cmp
frndint
out
aaa
xchg
fistl
inc
xchg
inc
xchg
cmp
mov
jne
cld
sbb
jo
sbb
push
fstps
rclb
vmovss
cli
push
nop
in
sub
xchg
cmp
sti
push
dec
xchg
xor
mov
mov
inc
inc
push
fmull
stos
xor
pusha
pop
pop
imul
ds
lret
lcall
test
mov
xor
movsb
sbb
shlb
das
jae
ds
add
inc
je
jge
jmp
frstor
cmpsb
test
pop
jecxz
pushl
mov
enter
mov
push
push
pop
mov
sarl
jmp
fldt
insl
loopne
pop
sbb
inc
mov
int
insl
mov
jmp
dec
pop
xor
sub
jbe
fstpt
fimuls
stos
leave
add
hlt
into
add
adc
push
ror
mov
int3
dec
add
pushf
push
out
loope
push
dec
pop
stc
adc
into
xor
mov
inc
or
in
mov
and
divl
xor
pop
sub
adcb
sub
in
xchg
inc
push
dec
repnz
cli
pop
movsl
pop
add
xor
pop
aam
stc
jl
sub
lret
sbb
jl
movsb
orl
fs
pop
mov
push
mov
imul
xchg
push
mov
sbb
jle
es
idiv
jo
push
adc
sar
pop
scas
xor
into
cmp
pop
idiv
and
xor
outsb
mov
dec
adc
ret
dec
stos
jnp
in
sbb
stc
adc
int
add
fdivs
into
aas
fiadds
cld
xchg
repz
or
rcrl
pop
dec
pop
call
mov
sahf
sbb
jp
push
xor
sahf
fwait
dec
sbb
inc
sbb
in
test
jge
push
faddl
fists
lret
adc
jo
jbe
xorb
icebp
jo
clc
mov
pop
xchg
ds
pop
scas
push
iret
pop
jl
fisttpll
push
sub
push
push
sub
ljmp
stos
sbb
xchg
cs
test
cld
ja
xor
test
cmp
or
flds
xchg
in
pushf
int3
test
inc
jb,pn
and
inc
in
cmp
fstpt
and
call
arpl
out
addr16
rcll
jg
inc
sbb
adc
ret
xchg
fisubrl
into
mov
inc
xchg
jae
imull
loope
stc
imul
mov
stc
in
pop
gs
dec
pop
xchg
jmp
das
cld
fidivrl
mov
add
pop
mov
adc
sarl
ret
popa
aam
rcrb
into
or
bound
outsl
jae
loop
mov
or
in
insb
notb
minps
sub
imul
and
jns
in
adc
mov
fnstenv
in
pusha
les
ror
cwtl
sbbb
pusha
pop
jp
xchg
pop
sahf
and
jno
adc
dec
and
push
stos
fsts
shll
xchg
sti
ss
aas
push
pop
add
into
mov
and
cmpsl
jge
ss
mov
movsb
gs
dec
inc
fsubl
ds
mov
stos
push
jecxz
cs
pop
repz
cli
inc
push
stos
mov
insl
pusha
or
pop
dec
push
add
notb
sbb
in
mov
jmp
jmp
xchg
ret
sub
fs
mov
add
imul
cltd
inc
jl
daa
lock
push
add
loop
nop
aam
lods
xchg
adc
ljmp
mov
mov
lret
and
aaa
push
xchg
mov
mov
ds
adc
mov
push
fiadds
xorl
mov
lock
push
lods
lock
hlt
add
xchg
pop
shrl
call
cltd
mov
xor
nop
fidivl
inc
inc
scas
imul
roll
adc
loop
push
lret
push
sub
out
nop
push
mov
sub
in
xchg
adc
mov
push
mov
subb
je
loopne
jl
xchg
mov
fdivrs
xchg
mov
movsb
sbb
fsubrs
jae
xchg
stos
in
mov
xorl
xor
int3
sbb
adc
push
xchg
test
pop
mov
push
xlat
pop
adc
pop
scas
jp
test
jg
insb
mov
insb
xor
push
cli
inc
jno
stc
ds
fisubrl
cwtl
push
mov
fucom
inc
pop
xchg
or
out
hlt
mov
mov
xchg
mov
cwtl
push
jl
cmp
mov
sub
mov
xor
xchg
pop
push
mov
dec
mov
cmp
test
dec
jne
addr16
enter
pop
imul
mov
iret
adc
dec
sub
imul
rorb
test
insl
daa
mov
pusha
orl
cmpsl
xor
cltd
cltd
lds
ljmp
mov
ret
sbb
mov
xchg
jne
or
fs
xorb
cld
icebp
jbe
in
aaa
xchg
dec
jb
out
dec
inc
aas
lods
mov
repnz
dec
add
lods
dec
add
mov
add
and
mov
push
mov
jge
xchg
mov
xor
jmp
ret
adcl
test
jno
jae
xchg
or
mov
add
xor
in
jmp
xchg
lea
movsb
xor
dec
xorb
cmpsl
cmpsb
xchg
je
and
xor
xchg
das
add
push
xchg
sub
jno
cmp
push
movsb
xchg
rclb
add
gs
xor
adc
fisttpl
fwait
pop
fs
sarb
aad
jno
lods
inc
sbb
daa
dec
fldcw
test
test
ja
and
orl
jecxz
sti
outsb
push
mov
pop
movsb
mov
adc
mov
inc
bound
enter
xchg
testb
lds
arpl
movzbl
xchg
inc
pop
mov
add
jne
mov
and
loop
cmpl
and
dec
das
inc
add
mov
adc
jno
push
xchg
movsl
add
cmpsl
insb
ret
mov
jg
xchg
lds
mov
pop
scas
mov
mov
mov
dec
sti
aam
cmc
mov
int
xchg
scas
push
decb
and
adc
movsl
lcall
cmpsl
outsb
jae
outsl
xchg
aam
pop
cmp
pop
fsubl
das
or
aas
mov
out
adcl
call
shll
pop
jo
bound
int3
mov
jns
xchg
mov
cmp
dec
movsl
add
mov
lods
jae
xlat
cli
cli
in
hlt
mov
aam
add
push
jp
dec
scas
sub
orl
mov
inc
es
aam
push
test
pop
xchg
add
test
add
or
adc
pop
mov
mov
sub
pop
jo
sbb
imul
pop
insb
inc
and
xchg
ret
in
push
pop
xchg
xor
enter
push
into
call
mov
scas
bnd
out
aaa
push
in
cmp
mov
push
push
das
jg,pt
mov
add
std
shr
shl
push
test
test
mov
sub
stos
lcall
adc
and
mov
mov
loope
jo
popa
xchg
pop
in
mov
add
add
push
push
xor
xor
fs
insb
add
add
addr16
outsl
arpl
popa
insl
add
add
inc
inc
fs
jae
push
outsl
push
je
imul
push
push
inc
inc
gs
dec
push
inc
jns
popa
insl
add
add
arpl
add
add
inc
inc
fs
jae
push
outsl
push
je
imul
addr16
jb
je
bound
jne
bound
add
add
push
push
inc
push
outsb
add
add
je
jb
je
bound
popa
insl
add
add
push
push
inc
dec
je
push
add
inc
push
outsb
fs
imul
arpl
add
inc
inc
arpl
jo
add
add
outsb
outsb
arpl
add
inc
push
jb
je
push
jb
jbe
fs
jb
gs
add
push
push
inc
inc
outsb
jne
push
jb
je
arpl
jae
add
add
inc
inc
outsb
jne
dec
popa
insl
gs
jo
arpl
jb
jbe
fs
push
add
add
jae
jne
outsl
ja
add
add
push
push
inc
inc
jae
outsb
arpl
je
gs
inc
jns
outsl
jb
add
add
inc
dec
outsb
jae
popa
insb
insb
push
gs
imul
jae
add
add
inc
push
outsb
fs
outsl
add
add
inc
dec
outsb
jae
popa
insb
insb
push
jb
jbe
fs
add
add
inc
dec
push
push
dec
outsl
arpl
add
push
push
inc
push
gs
insb
outsl
arpl
outsb
addr16
outsl
outsl
imul
add
jae
je
outsl
arpl
jo
add
add
push
push
inc
push
gs
outsl
jbe
push
gs
imul
jae
add
jae
outsb
add
add
push
push
inc
dec
outsl
arpl
add
add
je
outsl
arpl
jo
add
add
push
push
inc
push
gs
gs
imul
add
inc
push
je
imul
fs
jae
push
add
add
inc
push
gs
popa
jae
inc
jb
outsl
jb
inc
inc
inc
dec
inc
dec
push
cs
insb
add
add
outsb
fs
bound
dec
outsb
outsw
inc
imul
insl
inc
gs
jns
inc
jb
insl
dec
popa
insl
gs
add
push
jns
inc
gs
jns
inc
jb
insl
dec
popa
insl
add
add
popa
addr16
jbe
push
outsl
push
popa
add
add
push
jns
inc
outsb
jne
gs
je
push
jns
bound
jae
add
add
push
jns
inc
gs
imul
inc
fs
xor
add
add
insl
inc
outsb
jne
gs
je
push
jns
bound
jae
xor
add
push
jns
inc
gs
imul
add
add
push
jns
inc
gs
outsl
fs
gs
outsb
outsw
ss
add
add
arpl
insb
gs
add
add
insl
inc
outsb
jne
gs
je
push
jns
bound
jae
add
push
jns
inc
gs
imul
inc
fs
add
add
insl
inc
jb
insl
inc
fs
add
inc
outsb
jne
gs
je
dec
outsl
popa
fs
outsl
fs
gs
add
add
insl
push
gs
gs
jb
push
add
add
push
jns
inc
gs
imul
add
add
push
jns
push
outsb
inc
dec
popa
insl
add
add
push
jns
dec
outsl
popa
fs
outsl
fs
gs
js
add
push
jns
inc
gs
jns
gs
jb
insl
dec
popa
insl
add
add
dec
popa
imul
jb
inc
imul
jns
popa
je
inc
js
jae
jae
add
dec
insl
popa
addr16
imul
jns
outsb
je
jns
outsl
inc
popa
je
add
add
insl
inc
gs
imul
dec
popa
insl
add
add
dec
popa
jo
bound
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
dec
dec
dec
inc
push
cs
insb
add
add
jo
gs
jo
outsb
inc
imul
imul
je
jb
inc
popa
arpl
inc
outsb
je
jns
js
add
add
gs
je
push
jb
inc
popa
arpl
inc
outsl
outsb
je
imul
add
dec
outsb
je
jb
gs
jo
outsb
push
add
add
je
jb
gs
outsb
imul
inc
jne
outsl
push
jb
js
inc
insb
insb
add
add
dec
je
jo
jne
jb
dec
outsb
outsw
inc
add
add
dec
outsb
je
jb
gs
imul
dec
outsb
je
jb
gs
jb
arpl
jb
inc
add
add
imul
je
outsl
outsb
gs
jb
data16
outsb
arpl
add
add
insb
outsl
arpl
jb
inc
popa
arpl
inc
outsb
je
jns
imul
gs
jb
inc
popa
arpl
push
jo
arpl
add
add
inc
jb
popa
je
push
jb
inc
popa
arpl
inc
outsb
je
jns
add
add
inc
gs
jb
inc
popa
arpl
inc
outsb
je
jns
outsb
outsw
inc
add
add
je
jb
gs
push
outsl
outsb
outsb
arpl
outsb
push
add
add
inc
jb
popa
je
push
jb
inc
popa
arpl
inc
outsl
outsb
je
imul
add
dec
outsb
je
jb
gs
jb
je
inc
imul
insb
gs
push
jb
inc
popa
arpl
inc
jb
jne
add
add
jo
gs
imul
add
add
je
jb
gs
jne
jb
dec
jo
imul
add
je
imul
inc
popa
arpl
inc
outsb
je
jns
je
gs
insl
inc
add
add
dec
outsb
je
jb
gs
gs
imul
gs
add
push
dec
inc
push
inc
cs
insb
add
add
jae
jns
gs
outsl
dec
fs
jo
jns
gs
outsl
jo
inc
outsl
outsb
jae
jb
arpl
add
inc
inc
jae
arpl
gs
imul
je
add
add
imul
je
inc
jb
insl
dec
inc
inc
push
push
popa
je
add
add
inc
gs
inc
inc
push
push
jns
gs
popa
insl
add
add
jo
jae
insb
popa
jae
dec
popa
insl
gs
popa
insb
imul
gs
add
add
jo
jo
outsb
dec
bound
arpl
add
inc
inc
jae
gs
bound
arpl
je
imul
add
add
push
dec
inc
insb
outsl
jae
push
gs
jb
push
insb
add
add
jo
outsb
imul
push
gs
jb
push
gs
outsb
arpl
add
push
push
dec
dec
push
cs
insb
add
add
gs
jo
jae
jb
jbe
jb
outsb
jae
popa
insb
insb
gs
add
gs
jo
jb
jbe
jb
outsb
outsw
inc
jb
insl
dec
popa
insl
add
add
push
push
gs
jo
outsb
jae
popa
insb
insb
dec
outsb
bound
inc
jb
jbe
jb
imul
add
add
gs
jo
jb
push
gs
arpl
imul
push
push
gs
jo
push
outsl
arpl
fs
jb
jbe
jb
dec
add
add
gs
jo
gs
arpl
jbe
arpl
jne
je
outsb
jae
add
push
push
gs
jo
outsb
jne
dec
outsl
outsb
imul
push
gs
jo
jae
outsl
arpl
je
dec
inc
dec
push
jb
imul
add
push
push
gs
jo
gs
arpl
imul
add
gs
jo
jb
popa
je
push
jb
outsb
je
jb
gs
arpl
outsb
outsw
dec
imul
push
gs
jo
jb
gs
gs
add
add
gs
jo
outsb
jae
popa
insb
insb
dec
inc
dec
push
jb
imul
add
push
push
gs
jo
jae
outsl
insl
jo
je
bound
jb
jbe
jb
add
add
gs
jo
outsb
jae
popa
insb
insb
push
jb
outsb
je
jb
jb
jbe
jb
add
add
jb
gs
outsb
jae
popa
insb
insb
push
add
add
push
push
gs
jo
gs
gs
arpl
jbe
imul
outsb
jae
jb
arpl
outsb
jae
add
add
gs
jo
push
popa
je
outsl
jb
add
add
push
push
gs
jo
jb
gs
jb
inc
imul
add
gs
jo
jne
insb
fs
jb
jbe
jb
inc
jb
insl
push
popa
je
add
add
push
push
gs
jo
jb
arpl
jae
jb
outsb
je
jb
fs
add
gs
jo
gs
popa
je
push
outsl
push
gs
jb
push
push
gs
jo
gs
outsl
arpl
inc
popa
je
inc
imul
push
push
gs
jo
jae
push
jbe
jb
outsl
jne
fs
outsb
dec
outsb
dec
outsb
jae
popa
insb
insb
gs
add
push
push
gs
jo
gs
jb
jns
jb
jbe
jb
outsb
outsw
xor
add
add
gs
jo
gs
jb
jns
jb
outsb
je
jb
gs
arpl
outsb
outsw
dec
imul
push
push
gs
jo
jb
popa
je
dec
outsl
outsb
imul
add
push
dec
inc
dec
xor
cs
insb
add
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
jb
outsb
add
add
je
outsl
outsb
jae
insb
gs
jne
jo
je
push
add
add
inc
gs
popa
insl
gs
imul
insb
gs
je
je
push
add
add
push
gs
outsl
jbe
dec
outsl
arpl
inc
insb
je
jb
popa
je
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
add
push
popa
je
push
outsl
push
gs
imul
inc
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
add
inc
gs
jb
arpl
jae
jb
outsl
jb
je
inc
outsl
outsl
jae
add
add
popa
jo
jb
popa
je
add
add
push
gs
fs
imul
jns
push
jae
add
add
fs
imul
add
sub
add
inc
add
add
add
movsb
dec
add
fiadds
jl
add
add
add
lret
add
rolb
pop
dec
add
enter
xor
add
test
add
dec
add
pop
roll
lock
add
mov
roll
cmp
aam
add
addb
inc
add
fadds
add
add
add
test
add
inc
add
int3
inc
add
inc
inc
add
inc
inc
add
sub
add
add
loop
add
mov
inc
add
pop
inc
add
movsb
inc
add
adc
add
inc
add
js
add
mov
add
mov
add
inc
add
in
add
or
add
inc
add
clc
inc
add
add
add
out
inc
add
ljmp
add
inc
add
sahf
inc
add
loopne
add
dec
inc
add
mov
add
mov
add
cmp
add
inc
add
addb
push
inc
add
adc
add
sub
add
inc
add
xchg
inc
add
sbb
add
incb
cmp
add
fs
add
add
add
mov
add
add
inc
add
xor
add
inc
add
and
add
add
and
add
add
add
aam
add
push
inc
add
nop
dec
add
movsb
inc
add
call
dec
add
add
add
mov
dec
add
dec
add
add
add
or
add
pop
dec
add
aam
add
testb
insb
dec
add
xchg
add
dec
add
sub
add
add
add
dec
add
int3
dec
add
loop
add
out
add
mov
add
dec
add
into
dec
add
lcall
add
dec
add
sub
add
add
es
add
ds
add
test
add
dec
add
pusha
dec
add
push
dec
add
test
add
sbb
add
pop
dec
add
pop
dec
add
dec
dec
add
add
add
dec
add
rorb
dec
add
lret
add
dec
add
and
add
dec
add
mov
add
dec
add
scas
dec
add
dec
dec
add
add
add
add
add
addb
add
push
add
orb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
call
add
add
add
add
add
addb
add
add
add
sbb
add
add
add
add
add
xor
add
adc
add
inc
add
add
add
push
add
add
add
add
add
add
add
pop
or
add
add
or
add
icebp
add
call
add
add
add
add
add
push
add
in
add
push
add
push
testl
add
add
add
mov
add
sub
add
sub
add
and
add
inc
add
add
add
add
add
add
add
std
incl
add
add
add
add
add
mov
add
add
add
addb
add
add
addb
add
jle
addl
incl
add
std
add
add
add
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
adc
pop
orl
mov
adc
adc
adc
adc
mov
mov
sbb
sbbl
mov
adc
mov
orl
mov
orl
mov
orl
sbb
orl
sbb
orl
sbb
orl
orl
mov
orl
sbb
mov
mov
mov
mov
mov
orl
mov
adcl
mov
adc
mov
mov
mov
mov
mov
mov
mov
adc
adc
sbb
adc
mov
mov
adc
mov
mov
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lcall
fistpll
clc
fstpt
iret
fucomip
xchg
mov
jg
sti
mov
push
stc
mov
sti
std
mov
jg
jg
jg
mov
dec
pop
lock
out
dec
sti
xor
lock
push
add
mov
push
incl
add
add
outsl
add
ja
imul
and
jp
ja
data16
xor
xor
xor
cmp
imul
and
jbe
xor
insb
add
xor
data16
add
add
add
add
inc
add
cmp
arpl
insb
add
add
imul
add
add
jbe
js
push
add
add
push
add
add
add
add
aaa
add
push
add
bound
push
add
add
push
add
add
add
add
inc
add
add
dec
add
add
push
add
add
dec
add
push
add
add
add
jb
outsb
add
inc
add
popa
add
add
add
add
imul
add
xor
inc
add
add
imul
xor
jbe
push
add
add
insl
add
push
add
and
dec
add
add
add
pop
add
aaa
add
dec
add
push
add
bound
xor
cmp
and
push
add
add
xor
pop
add
xor
add
push
add
add
jns
jno
push
xor
imul
jb
push
add
insl
add
add
add
and
jae
outsl
add
ja
imul
and
jp
ja
data16
xor
xor
xor
cmp
imul
and
jbe
xor
insb
add
xor
data16
add
add
add
add
inc
add
cmp
arpl
insb
add
add
imul
add
add
jbe
js
push
add
add
push
add
add
add
add
aaa
add
push
add
bound
push
add
add
push
add
add
add
add
inc
add
add
dec
add
add
push
add
add
dec
add
push
add
add
add
jb
outsb
add
inc
add
popa
add
add
add
add
imul
add
xor
inc
add
add
imul
xor
jbe
push
add
add
insl
add
push
add
and
dec
add
add
add
pop
add
aaa
add
dec
add
push
add
bound
xor
cmp
and
push
add
add
xor
pop
add
xor
add
push
add
add
jns
jno
push
xor
imul
jb
push
add
insl
add
add
add
add
add
and
adc
add
add
call
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
test
add
test
add
add
add
add
add
add
mov
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
jo
arpl
popa
add
add
bound
insl
add
dec
add
add
add
add
adc
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
cmp
xor
add
add
add
xor
xor
add
add
add
add
add
add
add
add
push
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
xor
inc
add
add
push
add
inc
add
bound
dec
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
add
outsl
add
add
dec
add
add
sub
add
add
outsl
add
add
je
dec
add
insl
add
add
add
jns
inc
add
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
xor
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
aas
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
gs
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
