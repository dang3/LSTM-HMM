push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
add
mov
mov
movsbl
mov
add
xor
add
mov
mov
movl
mov
xor
mov
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
call
lea
call
lea
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
call
movl
lea
mov
mov
call
lea
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
call
lea
mov
mov
call
movl
movl
call
lea
mov
mov
call
lea
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
call
lea
mov
mov
call
push
push
call
add
push
mov
push
call
add
mov
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
movl
mov
imul
mov
mov
pop
ret
int3
int3
push
mov
push
mov
mov
movl
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
push
mov
push
mov
mov
call
mov
movl
mov
mov
pop
ret
int3
push
mov
sub
mov
movl
mov
sub
mov
mov
pop
ret
int3
jmp
jmp
jmp
jmp
jmp
mov
push
mov
mov
movzwl
push
push
push
test
je
mov
movzwl
mov
cmp
je
mov
test
je
add
movzwl
cmp
jne
add
movzwl
test
jne
sub
pop
pop
sar
pop
pop
ret
mov
push
mov
test
je
test
je
cmp
je
push
push
pop
mov
rep
andl
push
call
pop
pop
pop
ret
xor
ret
mov
push
mov
push
push
xor
xor
cmp
jle
push
lea
add
pushl
pushl
pushl
call
add
test
jne
inc
cmp
jl
pop
pop
pop
pop
ret
push
push
push
push
push
call
int3
mov
push
mov
push
push
push
mov
push
xor
push
push
call
mov
mov
add
test
jne
xor
jmp
cmp
jne
lea
cmp
je
push
push
lea
push
push
call
add
test
jne
mov
jmp
push
push
push
push
push
call
push
push
mov
call
cmp
jmp
cmpl
lea
mov
jne
cmp
jae
cmp
je
push
push
push
pushl
jmp
cmpl
jne
cmp
jae
cmp
je
push
mov
push
push
add
jmp
cmpl
jne
cmp
jae
test
je
cmp
jne
push
mov
push
push
sub
push
call
add
test
jne
cmp
je
test
je
incl
lea
push
push
call
test
pop
pop
jne
or
pop
pop
pop
pop
ret
xor
push
push
push
push
push
jmp
mov
push
mov
push
push
mov
push
pushl
pushl
call
add
xor
test
jne
lea
cmp
je
push
push
push
pushl
pushl
call
add
lea
cmp
pop
pop
je
push
push
push
pushl
pushl
call
add
pop
ret
push
push
push
push
push
call
int3
mov
push
mov
sub
push
xor
inc
push
mov
call
pop
mov
test
je
push
lea
movb
mov
pushl
mov
push
pushl
push
push
push
call
lea
add
movl
mov
push
push
push
call
add
test
jne
mov
lea
pushl
mov
pushl
call
pop
pop
test
je
andl
mov
pushl
addl
push
mov
mov
pushl
push
push
push
call
add
cmpl
jl
cmpl
jne
mov
mov
test
je
push
call
test
jne
pushl
call
pop
mov
test
je
push
call
test
jne
pushl
call
pop
mov
andl
andl
mov
mov
mov
jmp
xor
push
push
push
push
push
call
pushl
call
mov
mov
xor
pop
cmp
je
push
call
test
jne
pushl
call
pop
mov
cmp
je
push
call
test
jne
pushl
call
pop
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
mov
push
push
mov
push
mov
mov
mov
mov
mov
call
lea
mov
lea
lea
add
mov
mov
test
je
cmpl
je
cmpl
je
cmpb
jne
cmpb
jne
push
pushl
pushl
call
add
test
jne
test
je
mov
mov
mov
mov
test
je
andl
mov
jmp
xor
push
push
push
push
push
call
push
call
mov
pop
mov
cmp
jae
push
pushl
call
pop
pop
test
je
push
pushl
call
pop
pop
test
je
andl
lea
push
push
call
pop
pop
test
jne
lea
push
push
push
call
add
test
je
movzwl
mov
mov
lea
push
push
pushl
call
add
cmpb
je
mov
cmp
jb
mov
mov
inc
push
push
push
pushl
call
add
test
jne
xor
cmp
je
push
push
pushl
call
add
cmp
je
push
pushl
pushl
call
add
pushl
pushl
pushl
call
add
test
jne
mov
jmp
push
push
push
push
push
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
mov
push
mov
sub
mov
xor
mov
mov
push
mov
push
mov
mov
call
mov
push
lea
push
lea
push
push
lea
push
pushl
call
add
test
jne
xor
mov
pop
xor
pop
call
leave
ret
shl
add
pushl
lea
push
call
pop
pop
test
jne
mov
jmp
lea
push
call
add
push
mov
call
pop
pop
mov
test
je
mov
mov
mov
lea
mov
mov
mov
lea
imul
add
push
push
mov
lea
push
call
mov
lea
push
mov
mov
mov
add
add
push
push
call
add
test
jne
mov
mov
add
mov
movzwl
mov
push
lea
push
pushl
call
add
cmpl
jne
mov
andl
mov
mov
mov
mov
lea
mov
cmp
je
mov
incl
mov
mov
mov
mov
mov
mov
add
cmpl
mov
jl
jmp
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
push
pushl
lea
pushl
push
push
push
push
push
call
add
test
je
xor
mov
and
inc
cmp
jb
push
pushl
lea
push
call
add
neg
sbb
inc
mov
jmp
andl
mov
mov
mov
mov
cmpl
jne
mov
mov
mov
imul
push
call
pop
test
je
mov
pushl
mov
call
mov
pop
mov
mov
mov
mov
jmp
cmpl
je
mov
add
add
pushl
call
test
jne
pushl
call
pushl
call
andl
pop
pop
mov
mov
add
add
movl
mov
jmp
xor
push
push
push
push
push
call
int3
mov
push
mov
sub
mov
xor
mov
mov
push
push
xor
mov
push
mov
cmp
je
cmp
je
push
call
pop
jmp
add
mov
jmp
movl
mov
cmp
je
cmpb
jne
cmpb
jne
cmpb
jne
mov
push
push
call
mov
pop
pop
test
je
sub
mov
je
cmpb
je
movl
mov
jmp
mov
push
push
pushl
call
add
test
jne
pushl
call
pop
cmp
je
incl
add
cmp
jle
inc
push
push
call
mov
xor
pop
pop
cmp
jne
cmpb
jne
cmpl
jg
push
push
lea
push
push
call
add
test
jne
mov
mov
mov
lea
push
call
pop
test
je
incl
add
cmpb
je
inc
cmpb
jne
xor
cmp
je
mov
jmp
push
push
push
push
push
call
xor
jmp
push
push
push
push
lea
push
push
call
add
cmp
je
lea
test
je
pushl
lea
push
call
pop
pop
test
je
lea
push
mov
call
pop
test
jne
and
jmp
incl
inc
add
cmp
jle
xor
cmp
jne
cmp
je
call
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
andl
cmpl
jbe
call
movl
call
xor
jmp
call
mov
mov
call
orl
andl
xor
inc
push
push
call
pop
pop
mov
mov
test
je
push
call
pop
mov
mov
mov
call
andl
call
pushl
mov
mov
call
pop
mov
test
je
cmpl
je
push
pushl
call
pop
pop
test
je
mov
push
call
pop
movl
lea
push
push
call
push
call
add
testb
jne
testb
jne
pushl
push
call
pop
pop
mov
mov
mov
mov
mov
mov
mov
andl
call
jmp
mov
mov
xor
inc
push
call
pop
ret
mov
push
call
pop
ret
jmp
push
call
push
call
pop
pop
movl
call
mov
call
ret
mov
andl
ret
mov
push
movl
call
pop
ret
mov
push
mov
push
mov
call
testb
je
push
call
pop
mov
pop
pop
ret
mov
push
mov
cmpl
jne
call
pushl
call
push
call
pop
pop
pop
ret
push
push
call
lea
push
call
xor
cmp
jne
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
cmpl
jne
mov
cmp
jne
cmpl
jbe
xor
cmp
setne
mov
call
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jns
push
call
pop
call
mov
call
mov
call
test
jns
push
call
pop
call
test
jns
push
call
pop
push
call
pop
cmp
je
push
call
pop
call
testb
je
movzwl
jmp
push
pop
push
push
push
push
call
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmpl
jne
push
call
call
movl
mov
call
ret
call
jmp
mov
push
mov
sub
push
movzwl
push
mov
movzwl
mov
test
jne
or
jmp
andl
push
mov
lea
push
push
push
lea
push
push
call
mov
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
push
push
push
or
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
push
lea
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
or
mov
add
mov
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
push
lea
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
push
pop
lea
push
push
call
add
or
lea
push
push
pushl
lea
push
push
call
or
lea
push
push
pushl
lea
push
push
call
add
push
push
pushl
or
lea
push
push
call
add
or
pop
pop
pop
leave
ret
mov
push
mov
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
pop
ret
mov
push
mov
push
push
mov
cmpl
push
mov
je
push
push
call
mov
pop
pop
test
jne
xor
inc
jmp
mov
mov
call
test
je
push
call
push
call
pop
pop
jmp
movl
jmp
mov
mov
cmp
je
add
push
call
mov
xor
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
sub
push
push
mov
push
xor
mov
mov
cmp
jne
cmp
jne
mov
mov
mov
jmp
push
push
call
mov
pop
pop
cmp
jne
xor
inc
jmp
mov
push
pop
mov
push
rep
call
xor
pop
mov
cmp
jne
push
call
pop
jmp
mov
mov
cmp
je
push
call
pop
mov
cmp
jne
xor
inc
push
call
pushl
call
pop
pop
mov
jmp
mov
movzwl
push
push
push
lea
push
push
call
mov
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
add
or
je
push
call
pop
or
jmp
mov
jmp
mov
cmp
jl
cmp
jg
sub
mov
inc
cmpb
jne
jmp
cmp
jne
mov
mov
mov
inc
cmpb
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
inc
mov
mov
test
je
mov
mov
mov
test
je
push
call
mov
test
je
push
call
test
jne
pushl
call
pushl
call
pop
pop
mov
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
sub
push
push
mov
push
xor
mov
mov
mov
cmp
jne
cmp
jne
mov
mov
mov
jmp
push
push
call
mov
pop
pop
cmp
jne
xor
inc
jmp
push
call
pop
mov
cmp
jne
push
call
pop
jmp
mov
cmp
je
push
call
pop
mov
cmp
jne
push
call
pushl
call
pop
jmp
mov
movzwl
lea
push
push
push
lea
push
push
call
mov
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
push
lea
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
add
or
je
push
call
push
call
pushl
call
pushl
call
add
jmp
mov
jmp
mov
cmp
jl
cmp
jg
sub
mov
inc
cmpb
jne
jmp
cmp
jne
mov
mov
mov
inc
cmpb
jne
jmp
push
pop
mov
mov
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
inc
xor
mov
cmp
je
mov
mov
mov
cmp
je
push
call
mov
cmp
je
push
call
test
jne
pushl
call
pushl
call
pop
pop
mov
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
xor
push
mov
push
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
cmp
jne
push
movzwl
push
push
lea
push
push
call
add
test
jne
push
call
push
mov
push
mov
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
mov
xor
mov
mov
inc
cmp
jl
lea
push
pushl
call
test
je
cmpl
ja
movzwl
mov
cmp
jle
cmp
je
lea
mov
cmp
je
movzbl
movzbl
jmp
mov
movb
movzbl
inc
cmp
jle
add
cmp
jne
mov
push
push
pushl
add
push
push
pushl
mov
push
push
call
add
test
je
mov
mov
push
pushl
mov
push
add
push
push
inc
push
push
pushl
push
call
add
test
je
mov
push
pushl
add
push
push
mov
push
inc
push
push
pushl
push
call
add
test
je
mov
mov
lea
xor
cmpl
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
jle
cmp
je
lea
mov
mov
cmp
je
movzbl
movzbl
mov
cmp
jg
lea
jmp
mov
incl
mov
mov
add
mov
mov
movzbl
cmp
jle
mov
add
mov
cmp
jne
push
lea
push
push
call
push
lea
push
push
call
mov
push
lea
push
push
call
mov
add
cmp
je
push
call
test
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
pushl
call
add
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
call
pop
mov
jmp
pushl
call
pushl
call
pushl
call
pushl
call
xor
add
inc
jmp
mov
cmp
je
push
call
mov
mov
movl
movl
movl
movl
xor
mov
pop
pop
xor
pop
call
leave
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
cmp
je
push
call
pop
andl
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
cmp
je
push
call
pop
mov
pop
xor
pop
call
leave
ret
mov
push
push
mov
push
push
call
add
push
call
push
call
pop
ret
mov
push
mov
pushl
call
test
je
pop
jmp
pushl
pushl
pushl
pushl
pushl
call
int3
xor
push
push
push
push
push
call
add
ret
mov
push
mov
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
xor
push
cmp
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
pushl
call
add
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
lea
movl
cmpl
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
decl
jne
push
call
pop
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmpl
pop
jne
cmp
je
push
call
pop
mov
pop
jmp
xor
pop
pop
ret
push
push
call
call
mov
mov
test
je
cmpl
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
pushl
add
push
call
pop
pop
mov
movl
call
jmp
push
call
pop
mov
ret
mov
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
mov
pop
ret
add
push
pop
cmp
sbb
and
add
pop
ret
call
test
jne
mov
ret
add
ret
push
call
ret
call
ret
mov
push
pushl
call
mov
test
jne
pushl
call
mov
push
pushl
call
mov
pop
ret
mov
cmp
je
push
pushl
call
call
orl
mov
cmp
je
push
call
orl
jmp
push
push
call
push
call
mov
movl
andl
xor
inc
mov
mov
movb
movb
movl
push
call
pop
andl
pushl
call
movl
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
pushl
call
pop
movl
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
mov
push
push
call
pushl
mov
call
call
mov
test
jne
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
call
test
je
push
push
call
pop
pop
call
orl
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
mov
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
andl
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
movl
call
push
call
pop
movl
mov
test
je
push
call
pop
cmp
je
cmp
je
cmpl
jne
push
call
pop
movl
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
mov
push
push
call
mov
test
jne
call
xor
pop
ret
push
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmpl
mov
mov
je
cmpl
je
cmpl
je
test
jne
mov
mov
mov
movl
mov
mov
call
mov
cmp
je
pushl
push
call
test
je
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
mov
call
test
je
mov
push
pushl
call
call
mov
cmp
je
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
call
test
je
push
push
call
pop
pop
call
orl
mov
xor
inc
jmp
call
xor
pop
pop
ret
mov
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
mov
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
mov
push
mov
mov
pushl
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
movl
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
test
jne
push
call
pop
call
movl
mov
jmp
mov
jmp
push
call
pop
movl
call
mov
call
ret
push
call
pop
ret
mov
push
mov
mov
push
lea
cmpl
jne
push
call
pop
test
jne
push
call
pop
pushl
call
pop
pop
ret
mov
push
mov
cmpl
je
pushl
push
pushl
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
push
push
mov
push
xor
lea
push
push
call
xor
movzwl
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
lea
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
lea
push
pushl
call
mov
test
je
xor
mov
inc
cmp
jb
mov
movb
test
je
lea
movzbl
movzbl
cmp
ja
sub
inc
push
lea
push
push
call
add
mov
add
test
jne
push
pushl
lea
pushl
push
push
lea
push
push
push
call
xor
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
xor
movzwl
test
je
orb
mov
jmp
test
je
orb
mov
mov
jmp
mov
inc
cmp
jb
jmp
lea
movl
xor
sub
mov
lea
add
lea
cmp
ja
orb
lea
jmp
cmp
ja
orb
lea
mov
jmp
movb
inc
cmp
jb
mov
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmpl
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
movl
call
jmp
mov
push
call
pop
ret
mov
push
mov
mov
push
mov
movb
test
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
testb
jne
orl
movb
jmp
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
mov
sub
push
xor
push
lea
call
mov
cmp
jne
movl
call
cmp
je
mov
andl
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
mov
movl
jmp
cmp
je
mov
andl
mov
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
mov
cmp
jne
mov
call
xor
jmp
mov
xor
cmp
je
incl
add
cmp
jb
cmp
je
cmp
je
movzwl
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
mov
mov
cmp
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzbl
movzbl
jmp
mov
mov
or
movzbl
inc
cmp
jbe
mov
add
cmpb
jne
mov
incl
add
cmpl
mov
jb
mov
mov
movl
call
push
mov
lea
lea
pop
mov
mov
add
add
dec
jne
mov
call
jmp
orb
inc
cmp
jbe
add
cmpb
jne
lea
mov
orb
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
movzwl
mov
shl
or
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
orl
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
andl
push
pushl
call
pop
pop
mov
test
jne
mov
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
testb
jne
testb
jne
push
call
pop
andl
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
movl
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
movl
jmp
andl
mov
call
ret
cmpl
jne
push
call
pop
movl
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
js
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
mov
push
mov
push
push
xor
pushl
call
mov
pop
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
pushl
pushl
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
pushl
pushl
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
mov
push
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
mov
test
jne
movb
jmp
mov
cmpb
je
inc
dec
jne
test
je
sub
mov
mov
inc
test
je
dec
jne
test
jne
movb
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
mov
push
mov
mov
push
xor
push
push
cmp
jne
cmp
jne
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
mov
cmp
ja
call
push
pop
mov
call
mov
jmp
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
cmpl
mov
jne
mov
sub
mov
mov
inc
cmp
je
dec
jne
jmp
mov
sub
mov
mov
inc
cmp
je
dec
je
decl
jne
cmp
jne
mov
cmp
jne
cmpl
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmpl
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
mov
push
mov
mov
push
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
mov
test
jne
mov
jmp
mov
sub
mov
mov
inc
test
je
dec
jne
test
jne
movb
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
jmp
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
inc
add
push
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xchg
add
add
add
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
push
inc
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
inc
push
inc
add
add
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
loopne
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
inc
add
add
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
mov
xor
push
xor
inc
cmp
jl
push
push
test
je
mov
add
cltd
sub
mov
mov
sar
lea
pushl
mov
pushl
call
pop
pop
test
jne
mov
add
mov
jmp
jns
dec
mov
jmp
lea
cmp
jle
pop
pop
xor
test
sete
pop
mov
pop
ret
mov
push
mov
push
test
je
cmpb
je
push
push
call
pop
pop
test
je
push
push
call
pop
pop
test
jne
push
lea
push
push
pushl
call
test
je
mov
leave
ret
push
call
pop
mov
jmp
push
lea
push
push
pushl
call
test
jne
xor
leave
ret
cmpl
jne
call
leave
ret
mov
push
mov
xor
mov
cmp
je
add
cmp
jb
xor
inc
pop
ret
xor
pop
ret
mov
push
xor
jmp
lea
inc
cmp
ja
add
jmp
lea
cmp
ja
add
movsbl
add
lea
mov
test
jne
mov
pop
ret
xor
mov
inc
cmp
jl
cmp
jle
sub
cmp
ja
inc
jmp
ret
mov
push
mov
sub
mov
xor
mov
push
push
mov
call
mov
mov
call
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
inc
jmp
lea
push
pushl
call
pop
pop
test
jne
push
call
pop
test
je
orl
mov
mov
mov
shr
not
and
mov
pop
xor
pop
call
leave
ret
mov
push
mov
push
push
mov
push
lea
push
mov
and
push
or
push
call
test
jne
xor
jmp
cmp
je
cmpl
je
mov
mov
push
mov
call
push
mov
call
pop
cmp
pop
je
xor
inc
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
push
push
mov
call
mov
lea
call
mov
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
andl
xor
inc
jmp
lea
push
pushl
call
pop
pop
test
jne
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
je
lea
push
pushl
call
pop
pop
test
jne
orl
mov
jmp
testb
jne
mov
test
je
push
lea
push
pushl
call
add
test
jne
pushl
orl
mov
call
pop
cmp
jne
mov
jmp
mov
test
jne
push
call
pop
test
je
or
mov
mov
mov
mov
and
cmp
je
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
je
lea
push
pushl
call
pop
xor
pop
test
jne
orl
mov
cmp
je
or
mov
jmp
cmp
je
pushl
call
pop
cmp
jne
push
push
jmp
cmp
jne
cmp
je
lea
push
pushl
call
pop
pop
test
jne
push
push
mov
call
pop
pop
test
je
orl
cmp
jne
mov
mov
shr
not
and
mov
pop
pop
xor
pop
call
leave
ret
mov
push
mov
sub
mov
xor
mov
push
push
mov
call
mov
lea
call
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
inc
jmp
lea
push
pushl
call
pop
pop
test
jne
cmp
jne
push
push
jmp
cmpl
jne
cmpl
je
lea
push
pushl
call
pop
pop
test
jne
push
push
mov
call
pop
pop
test
je
orl
mov
mov
mov
shr
not
and
mov
pop
xor
pop
call
leave
ret
pushl
call
pushl
sub
neg
sbb
inc
mov
call
sub
neg
sbb
andl
inc
cmpl
pop
pop
mov
je
push
pop
jmp
mov
call
push
push
mov
call
mov
test
je
test
je
test
jne
andl
ret
pushl
call
sub
neg
sbb
inc
pop
mov
je
push
pop
jmp
mov
call
push
push
mov
call
testb
jne
andl
ret
mov
push
mov
push
push
push
call
lea
mov
test
jne
orl
jmp
mov
add
lea
mov
je
cmpb
je
push
push
push
call
add
mov
andl
test
je
cmpb
je
mov
test
je
cmpb
je
mov
call
jmp
mov
call
cmpl
jne
push
push
push
call
add
test
je
mov
test
je
cmpb
je
mov
call
jmp
mov
call
jmp
mov
test
je
cmpb
je
push
call
sub
neg
pop
sbb
push
inc
push
mov
call
testb
jne
andl
jmp
movl
call
mov
mov
cmpl
je
mov
mov
sub
neg
sbb
and
call
mov
mov
test
je
cmp
je
cmp
je
movzwl
push
call
test
je
push
pushl
call
test
je
mov
test
je
mov
mov
mov
mov
mov
mov
test
je
mov
mov
cmp
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
push
push
push
pushl
call
test
je
push
lea
push
push
pushl
call
test
je
push
push
sub
push
pushl
call
add
xor
inc
jmp
xor
pop
pop
pop
pop
ret
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
cmp
jne
repz
jmp
mov
push
mov
push
push
mov
mov
sub
je
dec
je
dec
je
dec
je
dec
je
mov
mov
push
push
pop
jmp
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
add
add
sub
cmp
jae
add
add
cmp
ja
jmp
mov
jmp
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
je
mov
jmp
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
xor
pop
jmp
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
jmp
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
mov
cmp
je
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
xor
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
je
mov
jmp
mov
mov
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
jmp
mov
mov
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
jmp
mov
mov
movzbl
movzbl
sub
je
xor
test
setg
lea
test
jne
movzbl
movzbl
jmp
mov
mov
movzbl
movzbl
jmp
xor
pop
pop
pop
ret
mov
lds
add
inc
add
inc
add
outsl
inc
add
inc
add
inc
add
push
add
bound
jo
inc
add
inc
add
inc
add
bound
jmp
imul
mov
inc
add
inc
add
inc
add
popa
inc
add
fs
add
insb
inc
add
fs
add
push
inc
add
pusha
inc
add
arpl
lahf
addr16
add
call
in
mov
test
je
sub
cmpl
jne
push
call
pop
pop
ret
mov
push
mov
push
push
mov
xor
mov
push
xor
push
push
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
jne
xor
jmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
test
je
lea
push
push
push
call
add
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
push
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
andl
push
mov
test
jne
xor
jmp
push
cmp
jb
lea
test
je
mov
mov
mov
add
add
test
je
cmp
jne
mov
test
je
cmp
jne
mov
test
je
cmp
jne
mov
test
je
cmp
jne
addl
cmp
jb
jmp
movzbl
movzbl
jmp
movzbl
movzbl
jmp
movzbl
movzbl
jmp
movzbl
movzbl
jmp
mov
mov
mov
jmp
mov
test
je
cmp
jne
inc
inc
inc
cmp
jb
xor
pop
pop
leave
ret
movzbl
movzbl
sub
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
push
call
push
call
pop
andl
mov
mov
test
je
mov
mov
mov
test
je
cmp
jne
mov
mov
push
call
pop
pushl
call
pop
andl
movl
call
call
ret
mov
jmp
push
call
pop
ret
mov
push
mov
pop
jmp
mov
push
mov
mov
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
pop
ret
push
call
xor
ret
mov
push
mov
push
call
test
je
push
push
call
test
je
pushl
call
pop
ret
mov
push
mov
pushl
call
pop
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
ret
mov
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
cmpl
je
push
call
pop
test
je
pushl
call
pop
call
push
push
call
pop
pop
test
jne
push
push
push
call
mov
mov
pop
mov
cmp
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
push
call
push
call
pop
andl
xor
inc
cmp
je
mov
mov
mov
cmpl
jne
pushl
mov
call
mov
mov
test
je
pushl
call
mov
mov
mov
mov
sub
mov
cmp
jb
call
cmp
je
cmp
jb
pushl
call
mov
call
mov
call
pushl
call
mov
pushl
call
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
jmp
movl
cmpl
jae
mov
mov
test
je
call
addl
jmp
movl
cmpl
jae
mov
mov
test
je
call
addl
jmp
movl
call
cmpl
jne
movl
push
call
pop
pushl
call
cmpl
je
push
call
pop
ret
call
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
mov
push
mov
call
pushl
call
pop
push
call
int3
mov
push
mov
xor
mov
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
mov
push
push
call
mov
xor
pop
mov
cmp
je
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
je
cmp
je
push
push
mov
push
call
add
test
jne
push
mov
push
push
mov
call
mov
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
push
call
inc
pop
cmp
jbe
push
call
lea
mov
sub
push
sar
push
sub
push
push
call
add
test
jne
push
mov
push
push
call
add
test
jne
pushl
push
push
call
add
test
jne
push
push
push
call
add
jmp
push
push
push
push
push
jmp
push
call
mov
cmp
je
cmp
je
xor
mov
mov
cmp
je
inc
cmp
jb
push
lea
push
lea
push
mov
call
pop
push
lea
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
jne
push
call
push
call
pop
pop
ret
mov
push
mov
push
call
mov
test
je
mov
mov
mov
push
cmp
je
add
lea
cmp
jb
add
cmp
jae
cmp
je
xor
test
je
mov
test
jne
xor
jmp
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
push
mov
mov
mov
cmp
jne
push
pop
mov
andl
add
cmp
jl
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
pop
mov
pop
or
pop
pop
pop
ret
mov
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzbl
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
cmpl
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
pop
lea
mov
test
jne
push
inc
push
call
mov
pop
pop
mov
test
je
mov
push
jmp
push
call
cmpb
pop
lea
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
jne
add
add
cmpb
jne
pushl
call
andl
andl
movl
xor
pop
pop
pop
pop
ret
pushl
call
andl
or
jmp
xor
push
push
push
push
push
call
int3
mov
push
mov
push
mov
push
xor
push
mov
mov
mov
movl
cmp
je
mov
addl
mov
mov
cmpb
jne
xor
cmp
mov
sete
inc
mov
jmp
incl
test
je
mov
mov
inc
mov
mov
movzbl
push
inc
call
pop
test
je
incl
cmpl
je
mov
mov
incl
mov
inc
mov
mov
test
je
cmpl
jne
cmp
je
cmp
jne
test
je
movb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
dec
test
je
movb
inc
incl
test
jne
mov
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
movsbl
push
test
je
call
pop
test
je
mov
mov
incl
mov
inc
incl
mov
mov
incl
mov
jmp
call
pop
test
je
inc
incl
incl
mov
inc
jmp
test
je
movb
inc
mov
incl
mov
jmp
mov
pop
pop
test
je
andl
incl
leave
ret
mov
push
mov
sub
push
xor
push
push
cmp
jne
call
push
mov
push
push
mov
call
mov
mov
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
push
lea
call
mov
add
cmp
jae
mov
cmp
jae
mov
shl
lea
cmp
jb
push
call
mov
pop
cmp
je
mov
lea
push
add
push
push
lea
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
mov
push
mov
sub
push
push
call
mov
xor
cmp
jne
xor
jmp
cmp
je
add
cmp
jne
add
cmp
jne
push
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
pop
mov
cmp
je
push
push
pushl
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
push
call
mov
jmp
push
call
xor
pop
pop
pop
leave
ret
mov
push
mov
sub
push
lea
push
call
push
push
pop
push
call
pop
pop
xor
cmp
jne
or
jmp
lea
mov
mov
cmp
jae
add
orl
movw
mov
movw
movb
mov
mov
mov
add
lea
add
cmp
jb
push
push
cmp
je
mov
cmp
je
mov
add
mov
add
mov
mov
cmp
jl
mov
cmp
jge
mov
push
push
call
pop
pop
test
je
addl
lea
mov
cmp
jae
add
orl
andl
andb
andl
movw
movw
movb
mov
add
add
lea
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
cmp
je
mov
mov
test
je
test
jne
push
call
test
je
mov
and
mov
sar
shl
add
mov
mov
mov
mov
mov
mov
push
lea
push
call
test
je
incl
addl
inc
incl
cmp
jl
xor
mov
shl
add
mov
cmp
je
cmp
je
orb
jmp
movb
test
jne
push
pop
jmp
lea
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
push
lea
push
call
test
je
incl
jmp
orb
movl
inc
cmp
jl
pushl
call
xor
pop
pop
pop
leave
ret
or
jmp
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
push
push
call
xor
test
setne
mov
mov
ret
mov
push
mov
sub
mov
andl
andl
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
jne
mov
jmp
test
jne
mov
or
shl
or
mov
not
mov
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
cmpl
mov
push
push
push
mov
mov
jne
andl
push
lea
mov
push
pushl
pushl
push
call
mov
add
test
jne
call
cmp
jne
push
push
pushl
pushl
pushl
call
add
mov
test
je
inc
push
push
call
mov
pop
pop
test
je
pushl
mov
push
pushl
pushl
pushl
call
mov
add
test
je
push
push
call
mov
xor
pop
pop
cmp
jne
cmp
je
push
call
pop
or
mov
pop
pop
xor
pop
call
leave
ret
lea
push
push
push
push
call
add
test
jne
cmp
je
push
call
pop
xor
jmp
push
push
push
push
push
call
cmpl
jne
mov
xor
push
push
pushl
mov
pushl
call
mov
test
je
push
push
call
pop
pop
mov
test
je
push
push
pushl
pushl
call
test
jne
pushl
call
andl
pop
jmp
cmpl
jne
andl
push
lea
push
mov
or
push
pushl
call
test
je
mov
mov
jmp
mov
push
mov
mov
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
mov
push
xor
push
push
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
mov
cmp
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
push
push
push
pushl
pushl
pushl
call
mov
cmp
je
mov
test
je
mov
cmp
je
cmp
jg
push
pushl
push
pushl
pushl
pushl
call
jmp
mov
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
pushl
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
pushl
push
push
pushl
call
mov
push
call
pop
pushl
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
andl
ret
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmpl
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
push
mov
push
mov
cmp
ja
push
push
cmpl
jne
call
push
call
push
call
pop
pop
test
je
mov
jmp
xor
inc
push
push
pushl
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
jne
jmp
call
mov
call
mov
mov
pop
pop
jmp
push
call
pop
call
movl
xor
pop
pop
ret
mov
push
mov
mov
test
je
push
xor
pop
div
cmp
jae
call
movl
xor
pop
ret
imul
push
mov
test
jne
inc
xor
cmp
ja
push
push
pushl
call
test
jne
cmpl
je
push
call
pop
test
jne
mov
test
je
movl
xor
jmp
mov
test
je
movl
pop
pop
ret
mov
push
mov
cmpl
jne
pushl
call
pop
pop
ret
push
mov
test
jne
pushl
call
pop
xor
jmp
push
jmp
test
jne
inc
push
pushl
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
movl
xor
pop
pop
pop
ret
call
mov
call
push
call
pop
mov
jmp
call
mov
call
push
call
pop
mov
mov
jmp
pxor
push
push
mov
and
test
jne
mov
and
shr
je
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
xor
shr
je
mov
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
mov
neg
add
sub
xor
push
mov
and
je
mov
inc
dec
jne
shr
je
mov
lea
dec
jne
pop
jmp
push
call
mov
xor
ret
push
mov
and
test
jne
mov
and
shr
je
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
pop
pop
pop
pop
ret
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
mov
push
mov
mov
push
mov
push
movzbl
lea
inc
cmp
ja
add
movzbl
lea
inc
cmp
ja
add
test
je
cmp
je
pop
sub
pop
pop
ret
mov
push
mov
sub
push
pushl
lea
call
mov
test
jne
call
movl
call
cmp
je
mov
andl
mov
jmp
push
mov
test
jne
call
movl
call
cmpb
je
mov
andl
mov
jmp
mov
cmpl
jne
push
push
call
pop
pop
jmp
sub
push
movzbl
lea
push
push
call
mov
movzbl
lea
push
push
call
add
inc
test
je
cmp
je
sub
mov
pop
cmpb
je
mov
andl
pop
pop
leave
ret
mov
push
mov
xor
cmp
jne
cmp
jne
call
movl
call
mov
pop
ret
cmp
je
pop
jmp
push
pushl
pushl
call
add
pop
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
mov
push
mov
sub
cmpl
push
push
push
je
pushl
lea
call
mov
test
jne
call
movl
call
cmpb
je
mov
andl
mov
jmp
mov
test
je
mov
cmp
jbe
call
movl
call
cmpb
je
mov
andl
mov
jmp
mov
cmpl
jne
pushl
push
push
call
add
cmpb
je
mov
andl
jmp
sub
movzbl
lea
push
push
call
mov
movzbl
lea
push
push
call
add
inc
decl
je
test
je
cmp
je
sub
mov
jmp
xor
pop
pop
pop
leave
ret
mov
push
mov
xor
cmp
jne
cmp
jne
call
movl
call
mov
pop
ret
cmp
je
cmpl
ja
pop
jmp
push
pushl
pushl
pushl
call
add
pop
ret
mov
push
mov
push
push
mov
xor
cmp
jne
call
push
pop
mov
call
mov
jmp
push
cmp
ja
call
push
pop
mov
call
mov
jmp
xor
cmp
mov
setne
inc
cmp
ja
call
push
jmp
mov
add
cmp
ja
mov
cmp
je
xor
inc
movb
lea
neg
mov
xor
divl
cmp
jbe
add
jmp
add
mov
inc
inc
test
je
cmp
jb
cmp
jb
movb
jmp
movb
dec
mov
mov
mov
dec
mov
inc
cmp
jb
xor
pop
pop
pop
pop
ret
mov
push
mov
cmpl
mov
jne
test
jns
push
push
jmp
push
pushl
pushl
mov
call
pop
ret
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
push
push
call
call
mov
test
je
andl
call
jmp
xor
inc
ret
mov
movl
call
call
ret
push
call
mov
ret
mov
push
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
pop
ret
pushl
call
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
pushl
mov
call
pop
lea
mov
jmp
mov
sub
je
sub
je
dec
je
call
movl
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
movl
push
call
mov
xor
cmpl
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
movl
cmp
jne
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
incl
jmp
call
mov
movl
call
cmp
jne
pushl
push
call
pop
jmp
mov
mov
cmpl
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
pushl
call
test
je
pushl
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
mov
push
mov
push
push
push
mov
push
pushl
call
pushl
mov
mov
call
mov
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
add
cmp
jb
push
pushl
call
pop
pop
test
jne
lea
cmp
jb
push
pushl
call
pop
pop
test
je
sar
push
lea
call
mov
pushl
mov
call
mov
add
push
call
mov
mov
jmp
xor
pop
pop
pop
leave
ret
mov
push
push
push
call
pop
pop
mov
push
call
mov
mov
test
jne
push
pop
pop
ret
andl
xor
pop
ret
push
push
call
call
andl
pushl
call
pop
mov
movl
call
mov
call
ret
call
ret
mov
push
mov
pushl
call
neg
sbb
neg
pop
dec
pop
ret
mov
push
push
xor
pushl
call
mov
add
cmp
jb
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
mov
push
mov
mov
push
push
mov
call
andl
cmpl
mov
jne
push
call
mov
test
je
mov
push
push
call
test
je
mov
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
mov
test
je
push
push
call
push
call
mov
mov
mov
mov
cmp
je
cmp
je
push
call
pushl
mov
call
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
orl
jmp
mov
cmp
je
push
call
test
je
call
mov
test
je
mov
cmp
je
push
call
test
je
pushl
call
mov
pushl
call
test
je
pushl
pushl
pushl
pushl
call
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
xor
mov
jmp
mov
cmpw
je
add
dec
jne
test
je
sub
movzwl
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
push
mov
push
push
test
jne
test
jne
cmp
jne
xor
pop
pop
pop
pop
ret
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
jmp
mov
cmp
jne
mov
sub
movzwl
mov
add
test
je
dec
jne
jmp
mov
sub
movzwl
mov
add
test
je
dec
je
dec
jne
test
jne
xor
mov
test
jne
xor
cmp
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
mov
add
test
jne
sub
sar
dec
pop
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
mov
jmp
mov
sub
movzwl
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
test
js
cmp
jle
cmp
jne
mov
pop
ret
mov
mov
pop
ret
call
movl
call
or
pop
ret
mov
push
mov
sub
pushl
lea
call
movzbl
mov
mov
test
jne
cmpl
je
mov
mov
movzwl
and
jmp
xor
test
je
xor
inc
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
pushl
push
call
add
pop
ret
mov
push
mov
sub
mov
xor
mov
mov
mov
mov
push
push
push
mov
xor
push
push
pushl
mov
pushl
call
mov
mov
cmp
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
mov
push
mov
cmpl
jne
call
movl
call
or
pop
ret
pushl
push
pushl
call
pop
ret
mov
push
mov
sub
push
push
pushl
lea
call
mov
mov
cmp
jae
mov
cmpl
jle
lea
push
push
push
call
mov
add
jmp
mov
movzwl
and
test
je
mov
movzbl
jmp
cmpb
je
mov
andl
mov
jmp
mov
cmpl
jle
mov
sarl
lea
push
mov
and
push
call
pop
pop
test
je
mov
push
mov
mov
movb
pop
jmp
call
movl
xor
mov
movb
inc
mov
push
pushl
lea
push
push
push
lea
push
push
pushl
lea
push
call
add
test
je
cmp
movzbl
je
movzbl
shl
or
cmpb
je
mov
andl
pop
pop
leave
ret
mov
push
mov
sub
push
pushl
lea
call
mov
mov
test
je
mov
test
jne
call
movl
call
cmpb
je
mov
andl
xor
jmp
cmpl
je
cmpl
jl
cmpl
jg
andl
mov
push
mov
push
lea
cmpl
jle
lea
push
movzbl
push
push
call
mov
add
jmp
mov
movzbl
movzwl
and
test
je
mov
inc
jmp
cmp
jne
orl
jmp
cmp
jne
mov
inc
mov
test
js
cmp
je
cmp
jg
test
jne
cmp
je
movl
jmp
mov
cmp
je
cmp
je
movl
jmp
movl
jmp
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
mov
add
or
xor
divl
mov
mov
movzbl
movzwl
mov
and
je
movsbl
sub
jmp
and
je
lea
cmp
movsbl
ja
sub
add
cmp
jae
orl
cmp
jb
jne
cmp
jbe
orl
cmpl
jne
mov
dec
test
jne
cmpl
je
mov
andl
jmp
mov
imul
add
mov
mov
inc
jmp
mov
test
jne
test
jne
and
je
cmpl
ja
test
jne
cmp
jbe
call
testb
movl
je
orl
jmp
testb
push
pop
setne
add
mov
mov
test
je
mov
testb
je
negl
cmpb
je
mov
andl
mov
jmp
mov
test
je
mov
cmpb
je
mov
andl
xor
pop
pop
pop
leave
ret
mov
push
mov
xor
push
pushl
pushl
pushl
cmp
jne
push
jmp
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
call
test
je
push
call
pop
testb
je
push
push
push
call
add
push
call
int3
push
call
pop
ret
mov
push
mov
sub
pushl
lea
call
movzbl
mov
mov
movzwl
and
cmpb
je
mov
andl
leave
ret
mov
push
mov
sub
push
pushl
lea
call
mov
lea
cmp
ja
mov
mov
movzwl
jmp
mov
sarl
lea
push
mov
and
push
call
pop
pop
test
je
mov
push
mov
mov
movb
pop
jmp
xor
mov
movb
inc
mov
push
pushl
pushl
lea
push
push
lea
push
lea
push
push
call
add
test
jne
cmp
je
mov
andl
xor
jmp
movzwl
and
cmpb
je
mov
andl
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
jmp
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
pushf
fldl
add
add
add
fiadds
add
fiadds
add
add
add
add
loop
add
sbb
add
sub
add
out
loop
add
loop
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
filds
add
add
enter
add
call
filds
add
add
push
loopne
add
loopne
add
loopne
add
add
pop
loopne
add
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
add
loope,pt
add
add
data16
add
add
mov
add
sahf
loope
add
add
enter
fsubp
add
hlt
loope
add
loop
add
add
loop,pt
add
add
pop
loop
add
add
loop
add
add
loop
add
add
add
add
and
add
push
fiadds
add
fiadds
add
fldl
add
fldl
add
fldl
add
mov
inc
add
inc
add
mov
out
inc
add
adc
std
jae
add
popa
add
bound
popa
add
add
add
bound
arpl
add
popa
bound
popa
add
arpl
add
sbb
inc
add
inc
add
inc
add
inc
pop
push
dec
dec
inc
add
dec
push
dec
inc
push
dec
inc
add
dec
inc
pop
dec
dec
dec
inc
push
inc
push
pop
add
inc
push
pop
push
inc
add
add
dec
inc
pop
inc
dec
dec
dec
inc
push
inc
add
dec
inc
pop
inc
dec
dec
add
add
add
fdivl
add
cmp
inc
add
mov
add
inc
add
adc
les
inc
add
xor
mov
sti
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
push
pop
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
sub
add
add
add
cmp
add
cmp
add
add
flds
addr16
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
jnp
jge
jg
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
decl
dec
add
add
insl
add
add
jae
add
add
add
add
add
add
dec
add
dec
add
add
add
and
jns
jns
jns
jns
add
dec
add
das
add
add
add
jns
add
add
push
add
add
add
inc
add
add
add
inc
add
arpl
add
bound
add
add
add
dec
add
jbe
add
bound
add
add
add
dec
add
je
outsl
add
add
add
push
add
jo
je
add
bound
add
add
inc
add
add
jae
je
add
add
dec
add
insb
add
add
add
dec
add
outsb
add
add
add
inc
add
jb
imul
dec
add
jb
arpl
push
add
bound
jb
jne
popa
add
jns
add
add
dec
add
outsb
add
popa
add
jns
add
inc
add
arpl
add
dec
add
jbe
add
dec
add
je
add
push
add
jo
add
inc
add
add
add
jne
insb
add
add
jne
outsb
add
add
popa
add
add
inc
add
jb
add
dec
add
jb
add
inc
add
bound
add
dec
add
outsb
add
add
popa
add
add
add
jns
add
add
inc
add
imul
jns
add
add
push
add
jne
jb
jae
add
jns
add
add
push
add
add
add
add
jns
add
push
add
add
add
jns
add
dec
add
outsb
add
add
add
add
push
add
outsb
add
add
add
add
push
add
je
add
inc
add
imul
push
add
add
add
add
add
dec
add
outsb
add
add
jne
outsb
add
add
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
inc
add
dec
add
dec
add
add
add
add
add
add
add
jae
jb
add
jae
gs
popa
insb
jne
add
jae
gs
popa
insb
jne
add
jae
insb
insb
outsl
arpl
add
add
imul
je
jae
add
jne
imul
outsl
insl
add
je
imul
and
popa
outsl
add
add
jne
push
gs
add
jne
push
imul
jae
jne
push
gs
add
jne
push
imul
jae
outsl
jbe
imul
jo
gs
outsl
sub
add
sub
popa
add
add
jo
and
imul
outsb
jp
add
ja
jp
popa
insb
popa
outsb
add
outsb
addr16
add
add
insb
insb
popa
outsb
add
gs
je
bound
je
imul
insb
popa
outsb
add
arpl
add
arpl
outsb
popa
add
add
imul
gs
arpl
jne
popa
add
add
jne
add
jae
imul
ja
imul
insb
popa
outsb
add
popa
outsb
imul
gs
gs
popa
add
add
popa
outsb
imul
addr16
jns
jae
popa
outsb
imul
jb
outsl
and
arpl
jae
popa
outsb
imul
jne
add
add
popa
outsb
imul
popa
addr16
jns
add
add
popa
outsb
imul
popa
insl
popa
add
jae
popa
outsb
imul
popa
jb
addr16
add
add
popa
outsb
imul
gs
add
jae
popa
outsb
imul
imul
popa
outsb
imul
fs
popa
jae
add
add
popa
outsb
imul
je
insl
popa
insb
popa
add
add
popa
outsb
imul
jae
insb
jbe
outsl
jb
jae
popa
outsb
imul
popa
outsl
jb
jae
popa
outsb
imul
imul
jb
jo
bound
add
jae
popa
outsb
imul
je
and
arpl
add
popa
outsb
imul
outsl
insl
bound
add
add
jae
popa
outsb
imul
insb
add
add
popa
outsb
imul
imul
popa
outsb
imul
outsb
je
outsb
popa
add
add
jb
jne
jne
jae
sub
imul
add
jb
imul
outsl
jb
imul
add
jb
imul
insl
popa
insb
add
add
outsb
outsl
jb
imul
je
insb
imul
jae
add
add
imul
insb
imul
gs
popa
outsb
sub
jae
add
add
jb
popa
outsb
sub
insl
bound
jb
add
add
jb
popa
outsb
sub
je
outsb
jae
imul
popa
outsb
sub
jb
popa
outsb
add
outsb
arpl
jae
imul
data16
outsb
arpl
insb
jne
gs
bound
jb
add
add
outsb
arpl
arpl
popa
imul
outsb
arpl
bound
imul
insb
imul
add
insb
imul
add
insb
imul
add
insb
imul
outsb
imul
outsl
bound
outsl
add
add
insb
imul
je
and
jb
arpl
add
add
insb
imul
add
insb
imul
popa
imul
insb
imul
add
insb
imul
imul
add
outsb
insb
imul
add
insb
imul
imul
insb
imul
add
insb
imul
jb
arpl
add
add
fs
arpl
bound
imul
push
gs
imul
arpl
outsb
gs
sub
popa
jo
jb
add
add
imul
imul
gs
arpl
outsb
gs
sub
imul
add
add
arpl
outsb
gs
add
imul
arpl
popa
imul
bound
imul
je
popa
insb
imul
gs
arpl
sub
imul
popa
insl
gs
arpl
and
insb
imul
popa
insl
gs
arpl
add
add
je
inc
add
push
add
inc
add
push
add
add
push
add
inc
add
inc
add
ret
inc
add
inc
add
inc
add
inc
add
ret
inc
add
dec
add
inc
add
dec
add
inc
add
push
add
ret
inc
add
dec
add
ret
inc
dec
push
add
ret
pop
dec
dec
add
ret
inc
dec
push
add
inc
add
dec
push
add
inc
add
dec
add
dec
inc
add
add
inc
add
inc
add
dec
add
inc
add
dec
add
add
pop
add
inc
add
push
add
ret
inc
dec
push
add
inc
add
inc
add
roll
dec
push
add
roll
dec
push
add
roll
push
inc
add
roll
push
inc
add
push
dec
add
push
push
add
inc
inc
add
inc
add
inc
add
add
inc
add
add
inc
add
dec
add
inc
add
push
add
inc
add
push
add
roll
dec
push
add
inc
add
dec
add
rolb
push
inc
add
rolb
push
push
add
rolb
push
inc
add
rolb
push
dec
add
dec
add
push
inc
add
add
inc
add
add
inc
add
inc
add
inc
add
add
inc
add
rolb
push
dec
add
rolb
push
dec
add
rolb
push
dec
add
mov
dec
add
mov
inc
add
mov
pop
add
mov
push
add
push
add
pop
add
push
push
add
push
inc
add
inc
add
add
add
inc
add
inc
add
push
add
add
push
add
add
inc
add
add
push
add
add
dec
add
add
inc
add
add
push
add
inc
add
push
add
inc
add
inc
add
mov
inc
add
inc
add
dec
add
mov
dec
add
inc
add
dec
add
mov
dec
add
mov
dec
add
mov
dec
add
mov
inc
add
mov
push
add
inc
inc
add
push
add
push
dec
add
add
push
add
inc
push
add
inc
add
inc
add
inc
add
inc
add
sbb
adc
add
or
adc
or
add
push
add
jb
imul
outsl
jb
imul
add
jb
js
je
jb
arpl
jae
add
jae
arpl
outsl
add
add
add
add
add
jne
outsb
add
add
add
add
jb
jb
outsl
add
and
add
add
or
add
add
add
push
add
and
add
jb
outsl
add
or
add
dec
add
inc
add
add
jb
jb
outsl
add
or
add
add
add
inc
add
dec
add
add
jb
jb
outsl
add
or
add
add
add
add
add
add
add
add
je
je
add
jo
je
and
je
outsl
add
add
jae
add
add
push
add
dec
add
add
outsl
add
add
add
jb
outsl
add
and
je
push
add
add
jae
jae
add
bound
insb
add
and
add
jb
imul
and
outsb
add
je
imul
and
arpl
outsl
add
add
add
outsb
add
je
imul
imul
je
imul
or
push
add
imul
imul
imul
je
add
and
popa
add
add
jne
add
add
outsb
add
add
outsl
add
jb
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
je
and
imul
insl
add
jae
je
and
insb
add
imul
add
add
add
add
and
jb
add
jne
insb
add
add
data16
add
popa
add
add
outsb
add
and
popa
add
and
dec
add
dec
add
add
outsl
add
jo
imul
add
add
add
add
insb
add
sub
and
data16
outsb
add
je
imul
and
data16
outsl
add
and
popa
add
add
popa
add
add
add
add
outsl
add
jae
je
jb
jne
arpl
je
outsl
add
and
outsl
add
and
data16
outsl
add
and
inc
add
add
popa
add
outsb
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
insb
add
arpl
popa
add
add
add
outsb
add
outsl
add
insl
add
je
imul
or
add
add
add
add
add
add
add
add
je
je
add
jo
je
and
je
outsl
add
add
outsb
add
je
imul
imul
and
je
push
add
push
add
add
outsl
add
add
add
add
outsb
add
add
outsb
add
add
add
add
add
jae
and
imul
imul
je
add
and
popa
add
add
jne
add
add
outsb
add
add
outsl
add
jb
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
add
add
add
add
add
add
add
push
add
add
outsl
add
add
outsb
add
je
imul
imul
add
add
add
add
add
add
add
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
outsb
add
je
imul
imul
and
push
add
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
insb
add
ja
imul
imul
je
imul
imul
je
imul
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
jae
je
add
outsl
add
add
outsb
add
je
imul
imul
je
imul
or
add
add
add
add
add
add
add
add
add
jb
add
add
imul
jne
popa
add
add
jne
outsb
add
je
imul
and
arpl
popa
add
add
add
add
add
add
add
add
or
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
pop
add
outsb
add
js
imul
popa
add
add
imul
je
popa
add
insb
add
or
add
add
add
add
add
add
add
add
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
jo
add
and
arpl
outsl
add
jae
outsl
add
add
add
add
imul
or
add
add
add
add
add
add
add
add
add
add
outsb
add
js
jo
add
je
add
add
add
jo
and
add
jb
outsl
add
or
add
add
add
add
add
add
add
add
add
add
outsb
add
js
jo
add
je
add
add
jne
insb
add
add
add
add
add
add
add
imul
add
jb
jb
outsl
add
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
je
push
add
add
add
add
add
add
add
add
add
add
add
add
bound
outsl
add
je
sub
sub
and
push
add
add
add
outsb
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
add
jbe
imul
outsb
add
add
je
or
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
popa
add
add
insl
add
outsb
add
add
add
add
add
add
add
add
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jne
jo
jo
outsl
add
je
and
outsb
add
je
and
insb
add
popa
add
add
add
add
add
add
add
add
inc
add
add
add
into
inc
add
add
add
int
add
add
add
inc
add
add
add
int
add
add
add
int3
inc
add
add
add
inc
add
add
add
lret
inc
add
add
add
add
add
lret
inc
add
add
add
lret
sbb
add
js
inc
add
add
add
lret
pop
add
add
inc
add
add
add
leave
inc
add
add
add
movl
clc
movb
add
add
movb
add
add
movb
add
add
add
add
add
arpl
jb
outsl
add
outsl
add
je
and
push
add
jae
jne
popa
add
add
sub
sub
and
push
add
outsb
add
add
add
add
add
jb
popa
add
jns
add
add
or
or
add
add
add
add
add
add
jo
jb
outsl
add
jb
popa
add
and
outsb
add
insl
add
and
jne
outsb
add
outsb
add
ja
outsb
add
add
add
add
jne
outsb
add
add
add
add
jb
jb
outsl
add
and
or
or
push
add
outsl
add
jb
popa
add
cmp
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
or
add
add
add
add
add
or
add
nop
add
add
add
jo
inc
add
xchg
inc
add
inc
outsl
insl
jo
gs
and
push
arpl
outsl
arpl
outsl
jb
add
add
inc
insb
popa
jae
and
gs
jb
push
jae
jb
jo
outsl
jb
add
add
and
jae
and
popa
jae
and
jb
jns
add
and
jae
and
popa
jae
and
arpl
jo
outsl
jb
popa
je
sub
and
and
arpl
jo
outsl
jb
add
add
outsl
arpl
and
popa
je
arpl
je
jb
popa
and
popa
jb
daa
add
popa
outsb
popa
gs
arpl
and
jo
and
outsb
jae
jb
arpl
and
gs
je
jb
add
pusha
jbe
arpl
and
popa
jae
and
jo
and
outsb
jae
jb
arpl
and
gs
je
jb
add
add
pusha
jbe
arpl
and
jo
and
outsb
jae
jb
arpl
and
gs
je
jb
add
pusha
fs
popa
insl
imul
imul
jne
je
jb
outsw
jb
daa
add
add
pusha
fs
popa
insl
imul
imul
and
jb
daa
add
pusha
gs
je
jb
jbe
popa
jae
and
jo
and
outsb
jae
jb
arpl
and
gs
je
jb
add
push
je
jb
arpl
jns
arpl
jae
jb
arpl
and
gs
je
jb
add
add
popa
outsb
popa
gs
arpl
and
je
jne
je
jb
imul
daa
add
add
pusha
insl
popa
outsb
popa
gs
arpl
and
outsb
jae
jb
arpl
and
gs
je
jb
add
add
insb
popa
arpl
outsb
je
fs
gs
pop
pop
and
outsl
jae
jb
daa
add
add
pusha
jo
popa
arpl
outsb
je
fs
gs
and
outsl
jae
jb
daa
add
pusha
outsl
insl
outsb
imul
jae
addr16
add
and
gs
pop
pop
add
add
outsb
gs
pop
add
pusha
insb
outsl
arpl
and
je
bound
arpl
jae
jb
arpl
and
outsl
jae
jb
daa
add
outsl
arpl
and
je
bound
add
push
push
dec
add
add
dec
add
fs
jb
je
jb
imul
outsl
jo
and
outsb
jae
jb
arpl
and
outsl
jae
jb
daa
add
pusha
gs
je
jb
jbe
popa
jae
and
outsb
jae
jb
arpl
and
gs
je
jb
add
pusha
gs
je
jb
fs
jb
arpl
and
gs
je
jb
add
push
je
jb
arpl
jae
jb
arpl
and
gs
je
jb
add
add
pusha
jbe
jb
jne
insb
and
jo
popa
arpl
outsb
je
insl
popa
jo
add
pusha
jbe
arpl
and
popa
jae
and
outsb
jae
jb
arpl
and
gs
je
jb
add
arpl
and
je
jne
je
jb
imul
daa
add
add
pusha
jbe
arpl
and
outsb
jae
jb
arpl
and
gs
je
jb
add
add
arpl
popa
jb
fs
gs
outsb
and
jae
jb
arpl
daa
add
add
pusha
fs
jne
je
arpl
jae
jb
arpl
and
outsl
jae
jb
daa
add
add
arpl
and
gs
outsb
and
jae
jb
arpl
daa
add
add
pusha
jbe
popa
jae
and
je
jne
je
jb
add
pusha
jae
jb
outsb
addr16
add
add
pusha
insb
outsl
arpl
and
popa
je
arpl
addr16
jb
daa
add
add
pusha
je
jo
outsl
data16
add
add
pusha
jbe
popa
insb
insb
daa
add
bound
insb
gs
add
add
data16
bound
add
add
add
jl
add
es
cmp
add
cmp
add
sub
add
jl
add
es
jl
add
pop
add
add
add
sub
add
sub
add
ds
add
cmp
add
cmp
add
and
add
add
add
add
add
add
sub
add
sub
add
sub
jo
jb
je
jb
add
add
add
and
add
and
add
cmp
add
ds
and
gs
add
outsb
gs
add
add
jne
popa
insb
imul
pop
jb
jae
jb
arpl
pop
pop
jo
jb
xor
pop
pop
gs
bound
add
arpl
popa
insb
insb
add
add
popaw
jae
arpl
insb
add
pop
pop
je
imul
add
jae
arpl
insb
add
add
jo
jae
popa
insb
add
add
pop
pop
arpl
insb
add
bound
gs
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
inc
add
mov
add
inc
add
inc
add
mov
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
inc
add
inc
add
inc
add
inc
add
aad
add
add
inc
add
add
inc
add
aam
add
aam
add
inc
add
add
inc
add
aam
add
roll
inc
add
roll
enter
rcl
add
roll
test
inc
add
inc
add
inc
add
add
inc
add
inc
add
rolb
mov
inc
add
rolb
dec
rolb
and
inc
add
roll
int3
roll
mov
inc
add
mov
add
inc
add
add
add
roll
inc
gs
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
push
add
push
add
add
add
add
add
add
add
add
rolb
add
add
add
cli
inc
add
inc
add
add
add
inc
add
add
add
add
cli
inc
add
incl
add
add
add
sub
inc
add
inc
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
add
incl
add
add
add
je
inc
add
sti
inc
add
flds
add
add
rcr
inc
add
flds
add
add
sbb
inc
add
incl
add
add
add
rcr
add
dec
add
inc
xchg
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
inc
add
pop
inc
add
add
add
incl
add
add
add
add
jmp
and
hlt
and
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
cmp
incl
add
add
cmp
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
dec
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
ljmp
mov
mov
add
add
incl
add
add
incl
add
add
mov
nop
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
mov
mov
add
add
add
adc
add
jo
add
fiadds
add
mov
add
add
add
add
add
add
and
add
pushf
fldl
add
add
add
fiadds
add
fiadds
add
add
add
add
loop
add
sbb
add
sub
add
out
loop
add
loop
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
filds
add
add
filds
add
filds
add
add
enter
add
call
filds
add
add
push
loopne
add
loopne
add
loopne
add
add
pop
loopne
add
add
xchg
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
loope
add
add
loope,pt
add
add
data16
add
add
mov
add
sahf
loope
add
add
enter
fsubp
add
hlt
loope
add
loop
add
add
loop,pt
add
add
pop
loop
add
add
loop
add
add
loop
add
add
add
add
and
add
push
fiadds
add
fiadds
add
fldl
add
fldl
add
fldl
add
add
add
add
arpl
jae
push
jns
jns
gs
outsb
fs
jne
imul
add
push
inc
push
dec
xor
cs
insb
add
in
add
push
popa
jae
gs
outsl
jae
data16
insb
inc
gs
outsl
insb
jns
outsl
outsb
push
je
jo
insb
add
insb
inc
jbe
insb
inc
outsl
outsl
jb
xor
dec
add
inc
outsb
popa
bound
add
add
push
popa
jae
gs
outsl
jae
imul
insb
inc
gs
imul
jne
jbe
add
add
push
arpl
add
dec
push
inc
dec
inc
dec
xor
cs
insb
add
insb
add
je
insb
jne
je
jb
gs
jne
arpl
gs
add
je
insb
jne
je
jb
gs
outsl
jb
push
je
je
add
add
je
insb
jne
je
jb
outsl
fs
gs
bound
inc
gs
insb
jne
je
jb
gs
outsb
je
jb
popa
arpl
je
je
add
add
jne
je
jb
outsl
fs
outsb
jne
add
push
push
inc
push
dec
cs
insb
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
inc
outsl
insl
insl
popa
outsb
fs
imul
dec
gs
jo
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
arpl
inc
gs
je
jb
jne
dec
outsb
outsw
push
add
inc
gs
push
dec
outsb
outsw
add
add
outsb
push
gs
js
gs
imul
gs
add
push
outsb
push
gs
js
gs
imul
gs
add
dec
jae
bound
addr16
jb
jae
outsb
je
ljmp
gs
outsl
imul
add
outsl
fs
outsl
imul
add
gs
imul
outsl
arpl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
lds
insb
jae
insb
insb
outsl
arpl
add
add
insb
jae
gs
popa
insb
jne
add
add
insb
jae
gs
popa
insb
jne
add
add
insb
jae
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
jae
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jne
jb
outsb
je
push
dec
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
inc
gs
jb
arpl
fs
jae
add
jecxz
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
roll
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
out
add
je
jb
jb
je
arpl
push
arpl
outsb
add
iret
add
popa
jo
jb
add
push
inc
inc
push
add
aaa
add
je
inc
dec
inc
push
add
or
dec
jae
popa
insb
imul
add
insb
gs
fwait
add
je
jae
jb
gs
jne
je
inc
dec
inc
add
push
add
je
outsl
arpl
gs
outsb
outsw
push
add
add
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
or
insl
push
jns
je
insl
dec
outsl
arpl
gs
add
or
dec
jae
popa
insb
imul
add
inc
gs
je
imul
push
add
add
insb
je
inc
jns
gs
outsl
push
imul
sbb
inc
js
je
jb
arpl
jae
and
je
inc
imul
je
je
dec
popa
outsb
fs
add
adc
inc
gs
outsl
fs
gs
imul
add
adc
inc
gs
outsl
fs
gs
imul
add
popa
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
inc
push
dec
jne
je
inc
jns
gs
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
outsl
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
je
imul
int
dec
gs
jo
jb
popa
je
add
cmpsl
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
xchg
add
je
imul
je
add
add
je
jne
jb
outsb
je
jb
arpl
jae
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
inc
dec
popa
jo
je
imul
add
je
push
outsb
ja
outsb
fs
add
popa
jo
insb
insb
outsl
arpl
rolb
dec
gs
jo
gs
insb
insb
outsl
arpl
add
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
aas
add
fs
imul
add
aam
dec
gs
jo
imul
push
dec
inc
dec
xor
cs
insb
mov
insb
arpl
icebp
xor
imul
in
insl
std
mov
hlt
inc
push
jp
jns
rcl
stos
shlb
inc
inc
inc
int3
stos
dec
fistl
fs
inc
pusha
cmp
les
shrb
mov
xor
fnstenv
test
test
mov
ss
inc
aas
inc
xor
cmp
roll
xor
loope
or
xchg
out
or
loopne
stc
fucom
out
loop
and
mov
dec
ja
pop
xor
push
mov
sub
pop
mov
fstl
shrb
push
lret
cmp
pop
scas
leave
rcl
dec
fildll
fdivl
das
ljmp
repz
fidivl
lcall
stos
mov
test
mov
rclb
mov
jbe
stos
leave
out
add
lods
lret
icebp
test
je
adc
sbb
popf
jmp
sub
xor
aas
mov
iret
movsl
or
cmp
loope
pusha
scas
sbbb
push
dec
aad
iret
push
bound
mov
rcr
jecxz
pusha
mov
jge
xchg
xchg
scas
js
mov
cmp
ret
ljmp
pop
addb
in
xchg
pop
xchg
sbbb
lcall
icebp
lahf
xor
and
or
lods
sub
xor
inc
stos
sub
inc
lock
adc
jns
add
add
push
out
je
jge
add
lds
add
mov
rcrl
mov
fiaddl
ds
rcl
cmp
ss
data16
rcr
movsb
stos
movsb
mov
stos
test
mov
mov
repz
xor
add
enter
std
mov
mov
ret
int
insl
adc
inc
aad
sbb
dec
in
ficomps
movsb
mov
mov
mov
inc
in
lods
sbb
mov
and
mov
popl
hlt
xchg
mov
popf
xchg
xchg
and
xchg
add
pushf
fwait
xor
pop
int3
jae
fs
lahf
pop
aam
jb
clc
movsb
les
imul
mov
dec
out
cmpl
dec
inc
inc
lret
fwait
lea
push
inc
into
mov
or
push
std
popa
push
add
push
add
pop
lret
and
cmp
leave
cmc
and
jbe
jne
fidivrs
in
mov
roll
dec
dec
dec
lds
push
ret
ja
adc
fwait
lods
lds
fcompl
and
popa
pop
adc
jne
outsb
cmc
loope
push
cmpsb
xor
cmp
arpl
add
pop
mov
les
dec
add
roll
push
push
movl
pop
and
sahf
rcrl
xor
stos
mov
cmp
mov
shrb
mov
mov
jg
addl
mov
fwait
cltd
xchg
inc
iret
mov
aam
push
popf
pop
pop
data16
ljmp
js
mov
arpl
or
jnp
incl
inc
add
aas
push
push
dec
movb
in
mov
pop
clc
xchg
push
or
bound
shll
and
cs
xor
xchg
in
inc
cmp
aad
mov
or
aas
sti
mov
inc
add
sbb
sbb
pop
test
adc
and
pop
in
out
xchg
call
jp
in
jae
hlt
repz
divb
add
dec
aaa
repz
lret
cld
mov
push
fcom
imul
loopne
sbb
dec
in
frstor
loopne
arpl
outsl
mov
stos
inc
out
jae
mov
ja
ret
hlt
mov
mov
aas
test
inc
mov
inc
xchg
xchg
xchg
das
fcomps
sbb
arpl
sahf
data16
jno
add
jns
lods
insb
mov
mov
mov
cmpb
inc
inc
push
rorb
dec
out
nop
push
cltd
push
push
push
in
push
sbb
xchg
push
je
sub
pop
sbb
xor
fs
cmp
cmp
insl
sub
aas
stc
jp
test
cmp
dec
add
add
or
pop
sarb
dec
add
aad
and
sbb
fidivs
ljmp
out
repnz
in
adc
jecxz
idiv
stc
loop
cmp
add
lods
cmc
repnz
std
enter
jecxz
mov
mov
fadds
aad
fisttps
shl
cmpsl
stos
test
mov
mov
lods
push
int
icebp
dec
in
xor
cs
call
aaa
mov
jl
fildl
jmp
and
jl
adc
xor
mov
pop
addr16
testl
out
add
js
and
and
jae
fdivrs
pop
mov
mov
mov
inc
leave
nop
push
mov
cltd
push
shrb
loope
push
mov
sub
pop
sbb
fs
inc
aaa
cmp
insl
sub
jp
cwtl
inc
cmp
pusha
or
add
adc
pop
sarb
leave
sbb
jae
cwtl
movsb
addb
sbb
out
stos
sub
pop
out
in
clc
lea
out
pop
repz
xchg
clc
imul
stos
add
push
inc
cmp
ror
bound
ret
aas
xlat
fcmovu
pop
or
cmp
jo
roll
test
inc
loop
or
cmpsl
bts
sbb
daa
sarl
mov
xchg
xchg
and
test
cwtl
xchg
lcall
lahf
sbb
popf
push
arpl
add
outsb
mov
idivb
jae
scas
jbe
addb
inc
dec
dec
fidivrl
push
dec
push
fldl
push
ljmp
in
push
into
pop
pop
pop
mov
and
imul
cmp
xor
outsl
sub
je
ret
or
or
cmp
push
dec
add
push
seta
adc
sbb
in
jb
out
repz
in
jb
jecxz
clc
cli
stc
mov
jae
incl
xor
jno
mov
popa
or
int3
into
int
adc
rcl
rcl
imul
pop
push
sahf
mov
test
mov
in
mov
in
test
pop
cli
mov
mov
jg
test
cltd
lea
popf
lcall
mov
xchg
insl
push
pop
imul
insl
outsb
js
pop
mov
jno
jne
sbb
jge
addb
inc
inc
rorb
std
xchg
pop
pop
push
jecxz
dec
jns
bound
xchg
push
jne
daa
sub
pop
sbb
xor
fildll
cmp
jae
dec
xor
xor
cmp
std
sbb
add
mov
push
sbb
inc
add
sbb
sbb
pop
and
call
or
in
sahf
sub
paddsb
in
mov
lock
repz
cld
sti
xchg
ss
jo
mov
bound
jmp
xlat
fisubl
leave
not
loopne
jb
sar
test
jecxz
mov
call
scas
dec
icebp
lods
xlat
mov
mov
ret
sarl
mov
xchg
and
andl
mov
xchg
mov
pushf
sahf
popf
out
mov
ljmpw
imul
outsb
inc
jnp
je
scas
imul
orl
inc
dec
fdivrs
adc
dec
loop
inc
adc
pop
repz
dec
sbb
fisttpl
mov
pop
or
daa
rorb
flds
es
xor
fisubrl
and
inc
ss
aas
in
in
cmp
pop
das
mov
add
add
sub
les
or
rol
lds
push
or
call
jecxz
add
movsl
add
loop
out
in
clc
mov
call
xchg
sti
test
jo
mov
cmpps
sbb
out
push
rol
int
fcmovbe
roll
mov
inc
mov
stos
jmp
shr
pop
cmpsb
lods
push
mov
call
mov
dec
add
incb
sbb
aaa
daa
or
mov
lea
cmpsb
mov
dec
mov
pop
adc
in
lea
or
pop
and
xor
cmp
lret
icebp
lock
jmp
or
fadd
inc
divb
jl
leave
enter
cvtdq2ps
dec
mov
adc
je
gs
shrl
in
jae
push
mov
aam
push
ss
xor
sub
icebp
lea
xchg
or
or
lret
lret
fistps
and
lret
ret
arpl
ljmp
nop
jb
and
ret
push
inc
xor
jno
scas
testl
outsl
iret
and
jnp
aas
movsb
addr16
outsb
outsb
jl
lock
rcll
push
push
pop
pop
and
and
movsl
mov
mov
call
lods
push
bnd
mov
mov
rcl
pop
jp
xchg
xchg
jnp
sbbl
nop
jge
xchg
les
lods
jg
mov
push
sbb
cwtl
xor
popl
push
arpl
jb
popa
cmpsl
insl
mov
jge
ret
lods
jl
add
cmp
inc
dec
ror
push
mov
dec
pop
pop
lea
pushf
stc
mov
and
call
fs
sub
sub
mov
adc
arpl
std
add
sub
adc
adc
xchg
pop
sbb
mov
and
cmp
in
push
in
jecxz
cli
xchg
xchg
out
xchg
xor
call
jecxz
incl
add
adc
rclb
add
adc
scas
adc
add
add
shlb
add
cs
inc
push
inc
inc
inc
add
mov
add
add
add
aas
inc
push
inc
inc
inc
add
mov
add
mov
add
add
add
aas
inc
push
je
jo
pop
imul
add
add
fdivs
inc
add
add
sub
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
mov
inc
add
add
inc
add
add
add
inc
add
inc
add
add
mov
inc
add
mov
inc
add
mov
inc
add
add
add
add
add
add
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
mov
inc
add
inc
add
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
inc
add
add
inc
add
mov
inc
add
inc
add
mov
inc
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
incl
fdivs
inc
add
mov
inc
add
cld
inc
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
or
add
or
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
incl
jl
inc
add
add
add
add
add
add
add
add
add
jg
jg
jg
sbb
inc
add
lea
orb
add
lea
orb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
inc
mov
incl
add
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
lahf
inc
add
add
add
add
add
add
add
add
adc
add
sbb
add
add
add
add
add
add
add
dec
add
add
add
addb
add
add
add
add
add
add
add
or
add
add
pop
mov
add
in
add
add
add
inc
scas
fcmove
sahf
dec
subb
nop
mov
adc
inc
push
jecxz
adcb
or
mov
pop
stc
push
cmpsl
dec
push
fisubrs
rcpps
xor
ds
arpl
rorl
xor
cwtl
cmpsb
gs
test
in
add
xor
fsubs
mov
hlt
xchg
jns
xchg
xorb
and
ret
clc
pushf
and
add
add
lock
push
jne
scas
fs
pusha
cmp
in
aas
xchg
cld
jmp
enter
pop
clc
cmp
mov
cmp
xchg
outsb
pop
push
and
xor
test
pushf
sti
jae
scas
inc
mov
ja
loopne
repz
xor
adc
jg
mov
cmpsb
xchg
sub
aaa
js
pop
add
stos
cltd
xchg
pop
sub
sbb
popa
fsubrl
in
das
jl
pop
or
mov
jecxz
and
and
jb
mov
pop
push
daa
jo
daa
adc
mov
sbb
cmp
sbb
lods
mov
int
push
mov
or
pop
in
mov
rep
aas
movsl
and
std
pusha
loopne
and
xor
in
sub
aaa
test
fdivs
out
sub
fsubrl
into
pop
das
int
pop
or
mov
in
push
and
xor
mov
adc
sarl
adc
mov
sbb
cmp
cltd
jp
lods
fwait
xor
stc
inc
das
sbb
ret
mov
push
inc
adc
inc
xor
mov
mov
add
std
dec
aaa
and
lret
mov
sti
dec
cmp
test
inc
iret
mov
rcll
mov
shrl
inc
xor
mov
mov
cmc
pop
inc
xor
fcmovne
mov
stos
sti
repz
dec
cmp
int
xor
cmp
jecxz
mov
gs
inc
mov
inc
out
ret
cmp
inc
cltd
sbb
jmp
and
jmp
insl
pop
dec
movsl
sbb
mov
sahf
out
cmp
dec
mov
insl
mov
xchg
jecxz
jne
push
test
in
pop
xchg
out
jns
push
lret
or
sti
jmp
cmp
pop
fimuls
mov
mov
and
pop
movsb
add
fists
shll
test
les
mov
cmc
jecxz
xchg
xor
js
mov
stc
out
cli
lret
xor
dec
out
paddw
jo
iret
insl
xchg
jg
int
dec
call
bnd
imul
loop
add
popa
cltd
xchg
push
divl
mov
fldcw
pop
or
jne
jge
pusha
cmp
jge
mov
movsl
xchg
xor
adc
jns
xchg
test
pop
xor
or
stos
arpl
sub
fisubrs
notb
pushf
xor
pcmpeqd
mov
cmc
push
and
cmpsl
sbb
dec
and
mov
stos
cltd
adc
sbb
into
lahf
add
scas
popf
sbb
test
pop
xchg
ret
lds
mov
xor
xor
mov
daa
cmpl
xor
mov
mov
sub
mov
mov
das
nop
xor
lfs
mov
xor
mov
test
mov
aaa
test
lret
mov
pop
dec
cmp
iret
mov
arpl
mov
rol
aas
movsb
icebp
cmpsb
addr16
inc
mov
xlat
lds
pop
inc
lret
in
fcmovne
setl
jle
pop
dec
mov
xor
dec
xchg
adc
cmc
jecxz
sub
int3
push
addr16
stc
out
pop
mov
je
imul
jmp
pop
mov
data16
pop
cmc
push
pop
in
out
fstpl
frstor
jno
faddl
push
jecxz
repz
test
push
jne
lret
push
push
jmp
clc
aad
mov
fidivrs
out
or
leave
mov
jge
cmc
jle
xor
in
inc
lock
xchg
subl
add
je
shll
daa
sbb
cmc
outsb
call
ja
push
and
in
mov
repnz
aas
cmp
paddw
mov
std
bound
xor
add
mov
cmpsb
xchg
cmp
aaa
aas
sub
add
stos
cltd
xchg
pop
sub
fsubrl
xchg
pop
xor
or
mov
out
and
and
jae
mov
or
push
cmp
adc
mov
sbb
sub
lods
int3
cltd
mov
pop
inc
inc
das
sbb
ret
pop
inc
adc
xor
xchg
les
or
dec
dec
aaa
and
lret
das
mov
sub
mov
inc
push
aas
sub
rol
scas
xor
xor
lds
pop
inc
xor
fcmove
mov
stos
sti
dec
pop
dec
cmp
int
and
dec
cmp
jb
add
pop
enter
cwtl
rcrb
mov
jl
and
inc
shlb
repnz
and
and
std
mov
and
mov
fwait
sti
mov
sbb
sub
loope
scas
popf
push
inc
sbb
popf
ret
les
jbe
xor
cmc
enter
mov
daa
cltd
cmp
sub
out
mov
mov
xor
das
xchg
xorl
add
xchg
test
aas
pop
dec
aaa
test
jnp
fmul
mov
pop
dec
cmp
iret
mov
bound
cmpsb
and
in
roll
xor
es
call
cmc
aaa
push
inc
scas
sbb
in
fcmovne
sub
mov
inc
nop
in
out
jb
dec
test
arpl
jecxz
and
gs
lret
insb
clc
out
jg
in
jp
push
iret
or
cld
jmp
dec
mov
cmc
jle
pop
les
pop
jo
out
fstl
xorb
add
add
loope
test
stc
xchg
cli
push
push
inc
or
in
clc
aad
mov
fdivrs
inc
or
jmp
mov
jle
js
in
inc
lock
xchg
subl
add
inc
hlt
shl
test
jbe
push
sbb
cmc
dec
call
ja
push
push
sbb
stc
push
mov
sti
outsb
aas
inc
and
std
jge
mov
cld
bound
inc
and
add
mov
cmpsb
xchg
cmp
aaa
dec
sub
add
stos
cltd
xchg
pop
sub
sbb
pusha
fsubrl
hlt
pop
das
sub
shrb
jecxz
and
xor
adc
mov
js
mov
fdivs
add
cmp
leave
adc
jae
in
nop
fldcw
repz
xchg
add
adc
jno
adc
mov
aam
mov
test
add
mov
in
jb
xchg
shrl
aam
call
inc
stos
mov
iret
insb
into
dec
cmpsl
adc
ljmp
sub
add
fimuls
test
lret
in
cs
sub
xchg
jecxz
xor
test
pop
push
cmp
clc
or
cltd
daa
je
lret
mov
lock
jno
test
jnp
pop
ljmp
std
xchg
movsb
vcvtss2sd
sti
arpl
mov
loope
dec
ds
sti
pop
xchg
into
imul
rolb
repz
andb
xor
or
mov
lock
leave
cld
in
filds
pop
roll
pop
ret
add
filds
roll
jae
repz
int
cmc
jecxz
xchg
dec
mov
sarl
or
out
cli
lret
dec
mov
leave
jl
icebp
or
jmp
dec
insb
xchg
jg
shlb
adc
out
outsb
bnd
push
xorl
inc
in
add
pusha
lcall
sbb
negl
mov
cwtl
daa
cmp
sbb
sti
inc
mov
push
sbb
movsl
test
pop
das
or
cmc
lds
jo
call
iret
add
sbbb
leave
pop
sar
ds
scas
scas
or
stc
shll
cli
lock
movsl
repnz
and
ret
sbb
or
add
lock
mov
and
inc
dec
push
xor
bound
shrb
test
and
fstl
xor
jnp
fwait
lods
outsb
mov
rcrb
jecxz
lcall
dec
pop
insb
repz
mov
adc
mov
cmp
sbb
lds
sti
sub
or
xchg
jmp
jnp
clc
aaa
dec
push
std
jmp
push
dec
outsb
ljmp
out
ja
push
xor
pop
sub
add
add
sub
pop
daa
jge
mov
incl
aam
inc
xor
or
jecxz
lcall
and
jle
sub
push
stos
lods
pop
stos
ja
dec
fcoml
pop
pop
jecxz
int
je
ja
cld
xor
iret
mov
sbb
and
insb
push
mov
inc
lods
jge
or
lds
das
idiv
mov
pop
fmul
mov
sub
fstps
or
cltd
sub
cmp
outsl
mov
pop
aam
push
call
dec
mov
aam
outsl
mov
repz
push
mov
pop
shll
mov
mov
inc
push
sub
sbb
cmp
sbb
sbb
int
pop
nop
inc
das
sbb
mov
lahf
mov
clc
xor
scas
sti
fsts
insl
pop
out
pop
mov
mov
lock
pop
lods
pop
fiadds
cwtl
ja
push
inc
adc
cmpsb
sbbl
jns
inc
aaa
mov
inc
and
stos
sbb
adc
movsl
cmp
aad
in
packsswb
andl
pop
sbb
cmp
sbb
mov
mov
daa
sti
sub
or
xchg
outsl
aam
in
jp
push
ljmp
mov
ds
pop
out
or
xor
or
cmp
mov
stc
or
gs
pushf
scas
ret
testb
sub
xchg
lock
jb
xchg
cmpsl
mov
push
and
pop
insl
jnp
cmpsb
mov
fldl2e
std
mov
inc
push
insl
jp
lcall
sbb
jb
lahf
lods
mov
sbb
cmp
xchg
test
leave
add
daa
cmp
pop
insb
adcb
cli
adc
xor
mov
push
sbb
inc
push
fs
lahf
lods
ret
shl
testb
ds
addr16
fwait
test
int
testb
sub
dec
pop
jne
xchg
movsl
mov
push
and
dec
pop
outsb
jl
mov
std
or
aaa
inc
push
imul
in
or
cs
push
popa
ja
lcall
sbb
cmp
ja
xchg
stos
mov
adc
cmp
outsb
adcl
xor
push
mov
sti
nopl
mov
repnz
sub
cwtl
stos
mov
adc
cmp
je
xchg
cmpsl
mov
adc
xor
outsl
jp
cmpsl
mov
fsubr
decb
ss
push
push
rcl
std
push
pop
sub
addr16
sahf
lods
mov
sbb
cmp
bound
xchg
stos
mov
adc
insl
adcb
call
daa
xor
imul
mov
shr
clc
or
xor
addr16
lahf
stos
testl
popa
jo
lcall
push
sub
dec
pop
jo
nop
cmpsb
mov
adc
dec
pop
push
fsubr
stc
or
xor
insb
jnp
popf
mov
shl
cli
or
mov
icebp
add
popa
jno
xchg
test
enter
adc
cmp
pop
imul
in
cli
adc
outsl
jns
movsl
mov
xlat
ljmp
fs
sahf
scas
ret
testb
sub
push
arpl
pushf
test
int
testb
sub
dec
pop
jno
xchg
movsl
mov
adc
xor
xchg
mov
clc
or
xor
jle
lahf
mov
shl
sti
push
sbb
inc
push
pusha
jb
lahf
scas
mov
sbb
cmp
jo
xchg
test
int
icebp
pop
pop
daa
cmp
xchg
cmpsl
mov
fsubrp
adc
xor
push
mov
cli
or
xor
mov
hlt
or
sub
scas
mov
adc
cmp
je
xchg
movsb
mov
pop
xor
imul
jmp
or
inc
push
imul
loop
or
sub
mov
cmc
add
das
cmp
test
icebp
add
and
adcl
adc
imul
mov
shr
clc
or
xor
bound
cwtl
scas
ret
repnz
das
cmp
je
fwait
stos
mov
adc
aas
dec
pop
jae
nop
mov
add
pop
imul
out
std
push
and
jle
sahf
mov
shl
cld
or
das
inc
push
fs
cltd
scas
mov
sbb
cmp
xchg
lods
mov
push
daa
cmp
outsl
adcb
sti
adc
xor
mov
stc
bndldx
inc
push
arpl
scas
rcl
testl
jbe
cwtl
scas
mov
pop
sub
dec
pop
jno
xchg
mov
add
and
dec
pop
imul
out
std
or
ss
push
imul
out
or
sub
mov
hlt
add
sub
dec
gs
xchg
lods
mov
adc
cmp
xchg
mov
call
xor
imul
shr
clc
push
sbb
push
data16
popf
stos
rcl
hlt
or
sub
xchg
testb
sub
dec
pop
jo
xchg
mov
add
es
dec
pop
push
fsubr
clc
or
jg
lcall
pop
sub
mov
testl
pusha
jb
xchg
test
add
and
xchg
cmpsb
mov
fld1
cld
adc
ss
pop
push
rcl
decl
pop
xor
data16
lahf
lods
ret
shl
cmc
or
cmp
jno
pushf
test
add
jo
nop
movsl
mov
adc
aaa
dec
pop
outsb
jle
cmpsl
mov
fsubr
cld
or
jns
lahf
mov
aad
stc
or
sub
mov
testb
jbe
xchg
lods
mov
adc
dec
pop
insb
adcl
adc
aaa
inc
pop
imul
mov
xlat
jmp
push
push
xor
mov
or
sub
xchg
testb
jo
xchg
cmpsl
mov
push
xor
insl
jle
mov
std
or
aaa
inc
push
push
sahf
mov
shl
stc
or
inc
push
popa
jne
fwait
scas
mov
sbb
ds
popa
jno
xchg
test
enter
adc
xchg
mov
cld
adc
xor
push
shr
sti
nopl
inc
push
fs
lahf
stos
repnz
addr16
cltd
scas
mov
adc
cmp
xchg
jmp
pop
and
dec
pop
push
ret
clc
or
aaa
inc
push
push
rcl
std
or
inc
push
gs
cltd
test
aad
icebp
pop
sbb
cmp
jbe
xchg
lods
mov
adc
cmp
outsb
adcl
call
and
movsl
mov
xlat
in
cli
bndldx
inc
push
bound
cltd
stos
shl
repnz
sub
xchg
testb
sub
dec
pop
jo
nop
mov
add
pop
insl
jle
mov
decl
and
js
lcall
sbb
je
cwtl
test
add
cs
popa
jbe
xchg
stos
mov
adc
cmp
insl
adcb
std
adc
push
mov
cli
or
xor
mov
repnz
cmp
je
cwtl
scas
mov
adc
ds
pop
jne
xchg
mov
add
and
dec
pop
push
ret
std
or
aaa
inc
push
insb
js
pushf
mov
xlat
out
or
jbe
lcall
sbb
aas
dec
gs
xchg
test
add
and
dec
pop
outsb
test
out
cld
adc
aaa
inc
pop
outsl
jl
mov
cli
or
xor
gs
pushf
scas
rcl
cmc
or
cs
cltd
stos
mov
adc
cmp
jae
xchg
mov
add
xor
insb
jp
cmpsl
mov
fldl2e
stc
xor
imul
jecxz
or
sub
popa
jbe
lcall
sbb
cmp
xchg
test
into
fcomip
add
and
dec
pop
imul
in
std
adc
xor
jg
mov
sti
bndstx
inc
push
data16
popf
stos
testl
data16
fwait
stos
mov
adc
cmp
adcl
add
and
jg
mov
clc
mov
inc
push
insb
jp
fwait
mov
aad
sti
push
sbb
inc
push
popa
jne
cltd
scas
mov
sbb
cmp
jbe
xchg
test
pop
pop
and
nop
movsb
mov
fsubr
adc
outsb
jg
mov
sti
or
xor
push
data16
pushf
lods
ret
testl
addr16
popf
test
lret
push
adc
ds
pop
jne
nop
movsl
mov
adc
jle
mov
stc
or
js
lcall
sbb
jbe
lcall
sbb
cmp
bound
xchg
test
iret
fdiv
pop
adc
adcb
sti
adc
ss
pop
push
movsl
mov
shr
cli
or
arpl
lahf
lods
ret
repz
sub
push
popa
jno
cwtl
test
add
sub
dec
pop
jno
nop
cmpsl
mov
adc
aaa
dec
pop
insb
jg
cmpsb
mov
fucomp
clc
or
xor
push
ret
cli
or
sub
mov
testb
sub
dec
gs
xchg
lods
mov
adc
cmp
imul
in
adc
xor
push
rcl
stc
push
push
xor
addr16
popf
scas
shl
hlt
or
pusha
ja
lcall
adc
aas
dec
pop
je
xchg
movsb
mov
adc
xor
xchg
mov
decl
and
inc
push
imul
mov
aad
sti
or
inc
push
data16
cltd
lods
mov
sbb
cmp
xchg
test
iret
fdivp
push
adc
cmp
imul
in
std
adc
xor
pop
push
mov
decb
sbb
inc
push
gs
cltd
scas
ret
shl
testl
popa
jno
lcall
pop
sub
dec
pop
jae
xchg
cmpsl
mov
adc
aaa
dec
pop
outsb
jl
mov
decl
and
inc
push
imul
mov
shl
std
or
inc
push
fs
cltd
lods
mov
sbb
aas
dec
popa
jno
xchg
lods
mov
adc
outsb
test
jmp
inc
pop
outsl
jns
mov
clc
or
xor
bound
popf
scas
ret
out
or
das
cmp
test
repnz
pop
sub
xchg
jmp
pop
and
dec
pop
imul
jmp
inc
push
imul
mov
shl
cld
or
ja
lcall
sbb
jb
xchg
stos
mov
push
and
dec
pop
outsb
adcb
adc
push
vpsubsw
bndstx
inc
push
bound
scas
rcl
testl
addr16
fwait
scas
mov
push
sub
dec
pop
jne
xchg
movsl
mov
adc
xor
insb
jg
mov
cld
or
xor
imul
mov
aad
cli
or
inc
push
data16
cltd
scas
mov
sbb
cmp
xchg
lods
mov
adc
insl
adcl
ss
pop
push
shr
decb
push
xor
data16
pushf
lods
ret
repz
cs
push
arpl
fwait
test
add
pop
jne
xchg
cmpsb
mov
adc
dec
pop
insb
jl
mov
stc
push
and
inc
push
insb
jp
popf
mov
loop
or
sub
lea
testl
gs
xchg
lods
mov
adc
cmp
outsb
adcb
adc
aaa
inc
pop
push
rcl
clc
or
fs
pushf
scas
ret
testl
jbe
cwtl
stos
mov
adc
dec
pop
jae
xchg
movsl
mov
adc
dec
pop
insb
jp
mov
cld
or
push
sahf
mov
aad
cli
or
sub
push
popa
je
fwait
test
add
sub
gs
xchg
lods
mov
pop
daa
cmp
push
xchg
cmpsl
mov
call
and
pop
imul
mov
shr
cli
or
arpl
cwtl
scas
shl
cmc
or
sub
cltd
stos
mov
adc
jno
xchg
movsb
mov
adc
jnp
mov
decb
xor
imul
mov
aam
cli
or
das
inc
push
gs
lcall
sbb
cmp
pusha
jbe
xchg
stos
mov
adc
cmp
imul
out
cld
adc
xor
mov
decb
sbb
jge
cwtl
lods
rcl
testl
ja
pushf
test
lret
push
adc
cmp
jno
xchg
cmpsl
mov
adc
xor
pop
insl
jg
mov
decl
and
inc
push
push
mov
stc
or
inc
push
addr16
cltd
lods
mov
sbb
cmp
gs
xchg
stos
mov
adc
cmp
insb
adcl
std
adc
xor
mov
sti
or
xor
data16
pushf
scas
vcvtpd2dq
or
sub
push
data16
lcall
adc
ds
pop
je
xchg
movsl
mov
pop
and
dec
pop
outsb
jge
cmpsb
mov
decb
and
inc
push
push
mov
clc
push
push
sub
fs
lcall
sbb
ds
popa
jo
xchg
lods
mov
adc
imul
jmp
inc
pop
imul
mov
shr
stc
or
xor
arpl
popf
scas
repnz
sub
sbbb
add
pop
jo
xchg
cmpsb
mov
adc
ss
pop
outsl
jp
mov
decb
jnp
sahf
mov
jecxz
push
sbb
push
gs
lahf
test
shl
cmc
pop
sbb
ds
pusha
ja
xchg
lods
mov
adc
cmp
outsl
adcb
std
adc
xor
imul
mov
shr
decb
sbb
inc
push
addr16
pushf
stos
ret
hlt
or
pusha
jno
pushf
test
lret
jecxz
add
sub
dec
pop
je
xchg
cmpsl
mov
pop
and
jp
mov
stc
or
jp
pushf
mov
shl
cld
push
pop
sub
push
data16
cltd
scas
mov
sbb
cmp
arpl
xchg
stos
mov
adc
adcl
cld
adc
aaa
inc
pop
imul
mov
shr
clc
or
jge
sahf
stos
rcl
cmc
or
cs
bound
cwtl
scas
mov
pop
sub
dec
pop
je
xchg
mov
add
xor
imul
jmp
or
xor
imul
mov
xlat
loop
push
sbb
inc
push
popa
jae
cwtl
lods
mov
sbb
cmp
jo
xchg
lods
mov
adc
cmp
outsb
adcb
adc
outsl
jge
movsb
mov
shr
stc
bndstx
inc
push
data16
cwtl
lods
xlat
out
or
cmp
test
repnz
adc
aas
dec
pop
jae
xchg
cmpsl
mov
adc
aaa
dec
pop
outsb
jg
mov
decl
xor
insl
jg
popf
mov
shl
cld
push
sbb
mov
icebp
add
ja
xchg
stos
mov
adc
imul
jmp
inc
pop
outsb
jns
movsl
mov
xlat
ljmp
bound
pushf
stos
ret
shl
testl
arpl
stos
mov
adc
dec
pop
jae
xchg
cmpsl
mov
pop
daa
aaa
dec
pop
outsb
jp
mov
decb
and
inc
push
imul
loop
or
sub
addr16
fwait
test
add
sub
arpl
xchg
test
pop
adc
insb
test
in
sti
adc
xor
imul
call
inc
push
addr16
cltd
stos
rcl
hlt
or
cs
data16
cltd
test
int
lock
sub
adcl
ss
pop
insl
jle
cmpsb
mov
fucomp
decl
xor
jp
sahf
mov
shl
std
or
inc
push
gs
lcall
sbb
ds
popa
ja
xchg
stos
mov
pop
and
xchg
movsb
mov
fsubr
cli
adc
xor
pop
outsl
jl
mov
decl
pop
xor
arpl
popf
scas
rcl
cmc
or
sub
xchg
repz
sub
dec
pop
jo
nop
mov
add
es
pop
imul
ljmp
push
rcl
cli
or
sub
je
sahf
lods
mov
sbb
aas
dec
fs
xchg
stos
mov
adc
nop
mov
cld
adc
push
xlat
in
cli
or
xor
gs
lahf
stos
ret
testb
jno
cltd
scas
mov
adc
adcb
adc
dec
pop
insl
jl
mov
clc
or
aaa
inc
push
push
aam
cli
nopl
inc
push
addr16
cwtl
scas
mov
sbb
cmp
ja
xchg
test
push
pop
and
adcb
std
adc
xor
outsb
jns
movsb
mov
shr
cli
nopl
inc
push
fs
cltd
scas
vcvtdq2pd
or
sub
sub
ret
xor
mov
push
std
and
dec
jecxz
or
sbb
aad
loop
xlat
mov
pusha
inc
mov
js
jae
jnp
lret
add
dec
sub
lret
cltd
mov
and
std
mov
push
cmp
add
orb
lret
out
sbb
push
movsb
pop
sub
pop
jno
lahf
xchg
mov
sbb
xchg
movsb
into
aad
add
aam
sub
dec
sarl
sbb
pop
std
xor
push
pop
mov
fildl
pop
pop
jmp
push
shrl
ja
lds
cmc
add
jmp
ja
test
lods
inc
inc
shlb
outsl
int3
jnp
mov
dec
les
sbb
lret
push
xlat
xlat
dec
std
je
xor
push
sbb
into
lahf
inc
dec
and
fs
lock
pop
mov
inc
push
push
mov
sbb
inc
pushf
lret
out
add
inc
test
scas
xor
add
inc
inc
arpl
sahf
popa
and
adc
jle
jmp
out
mov
mov
push
mov
mov
stos
sub
lahf
mov
dec
repz
xchg
lods
outsl
inc
add
add
cmc
popf
mov
loopne
mov
mov
lcall
in
lods
dec
and
mov
jo
mov
inc
shlb
and
std
out
icebp
cmpsb
aas
subl
xchg
lods
dec
mov
pop
cmpsl
dec
leave
sub
jp
sub
cmp
out
mov
inc
xor
ror
daa
inc
stos
jne
adc
sub
fs
movsl
xlat
gs
jecxz
mov
dec
mov
pop
aaa
into
jecxz
sub
cmp
loopne,pn
popf
scas
adc
adc
ja
out
cmp
sub
insl
inc
pop
into
fnstsw
rclb
xlat
fistl
ds
out
lods
cmp
dec
cmp
cmpsb
arpl
cltd
xlat
mov
cmpb
mov
scas
xor
es
add
xor
and
pop
test
loope
aas
push
push
lods
xlat
cmp
dec
push
cmp
push
pop
rorl
inc
xor
in
dec
xlat
in
cmp
repz
and
loope
xlat
push
mov
sub
jp
lret
dec
call
lods
cmp
stc
out
xor
imul
jmp
dec
loopne
sub
sbb
pop
mov
fwait
jmp
mov
sti
push
test
enter
pop
jle
mov
outsl
ja
sahf
dec
daa
cltd
shll
mov
xor
dec
xchg
dec
push
mov
or
shrb
sarl
xchg
rorl
mov
rclb
imul
icebp
xor
sbb
cmp
outsl
in
scas
or
test
jne
mov
mov
inc
mulps
add
or
push
fisttpl
ret
imul
pop
pop
shl
push
roll
jnp
lret
rol
sub
jne
adcb
lahf
cmp
mov
mov
addr16
scas
add
insl
stos
xchg
jno
aas
les
inc
ljmp
loop
lds
fcomip
push
shl
xor
inc
inc
cwtl
jb
pop
or
and
out
or
icebp
imul
loopne
icebp
mov
mov
cmp
pop
rorb
imul
or
das
push
xor
cmp
push
cmp
mov
rcrb
sahf
ficoms
mov
mov
cmp
outsl
push
insl
sub
xor
lock
fldt
jo
ficoml
lock
xor
and
sbb
pop
mov
aas
loopne
roll
pop
add
sbb
xchg
pop
jp
dec
dec
adcl
ljmp
stos
rcl
pusha
mov
jmp
cltd
std
into
outsb
pop
flds
outsb
lds
test
adc
or
jo
adc
das
and
push
xor
iret
pop
mov
notl
xchg
inc
sub
test
pop
stos
test
sub
push
mov
outsl
mov
sbb
xor
push
push
jmp
lcall
cmp
cmp
pop
mov
pop
fdivrl
nop
jp
negl
jecxz
inc
inc
arpl
mov
daa
push
decb
fidivs
mov
jae
cmp
lret
addr16
idiv
or
into
cli
mov
ljmp
adc
popf
jle
bound
das
gs
pop
xor
sahf
sub
test
pop
ja
ficoms
leave
jb
hlt
push
inc
imul
and
pop
pop
fs
gs
pusha
aas
aam
lret
stos
gs
cltd
or
outsb
jb
xlat
push
push
xor
lock
mov
inc
dec
jp
and
movsb
and
rclb
dec
mov
and
mov
push
idiv
lea
imul
out
cmp
push
push
push
mov
mov
rcl
pop
add
mov
fucom
ret
xor
dec
jle
xchg
pushf
mov
in
sti
std
jg
jmp
fsubl
fadds
push
push
push
shll
push
inc
nop
inc
mov
or
ds
dec
out
js
mov
sbb
and
and
cli
mov
xor
xchg
lods
sbb
inc
sbb
xor
dec
loop,pn
and
pop
mov
insb
cmovo
frstor
std
repnz
ds
out
cld
sub
inc
insl
mov
leave
pusha
into
sbb
rcll
stos
test
int3
ret
ret
das
or
pop
test
fstl
jmp
push
mov
xor
sti
jo
lret
mov
cs
jg
push
add
or
add
setge
xchg
inc
loope
sub
dec
sbb
push
mov
add
loope
ja
cmpsl
mov
pop
pop
add
sbbb
or
std
into
stos
and
dec
sbb
dec
std
sbb
movsb
xchg
mov
add
push
std
mov
jmp
push
dec
je
aaa
mov
fistl
dec
adc
sub
lret
xor
xor
pop
sub
jne
fadd
jge
mov
cmpsl
cld
cli
sti
out
mov
sbb
cmp
pop
fistpl
out
mov
jp
mov
popl
mov
loopne
pop
icebp
test
popa
jno
arpl
jns
int3
pusha
ret
cmpsl
jbe
xchg
dec
cld
adc
stos
sbb
push
adc
mov
dec
or
addr16
and
mov
add
and
jb
pop
pop
mov
test
xchg
sar
pop
pop
int
pop
mov
or
cmc
in
fs
dec
jb
xchg
lret
shl
jg
sub
aaa
push
push
fucomip
inc
loop
mov
cmp
test
lret
imull
cmp
fisttpll
xor
out
sbb
pop
or
int
cli
daa
or
jmp
lock
data16
fstpt
fsubs
in
lods
mov
jae
mov
add
cwtl
fbld
lea
addl
jne
pop
add
push
call
jl
leave
mov
push
sbb
dec
push
jmp
loop
repnz
mov
daa
rol
cmp
popa
mov
rclb
aam
mov
xor
cmp
ficomps
subl
movl
fistpl
loopne
cmpsl
inc
daa
test
add
adc
push
shll
jne
adc
inc
stos
xor
outsl
aam
pop
dec
pop
lret
jmp
cmp
sub
fnstsw
inc
movb
shl
xchg
mov
mov
jmp
stos
lcall
pop
ret
jl
fistl
cmpsl
sarb
int
push
in
sub
movl
xchg
out
adc
mov
repz
sbb
inc
or
xchg
mov
sbb
sbb
test
subb
cmp
add
xchg
rorl
sub
jbe
ret
bound
xchg
clc
out
lods
add
adc
jb
or
out
pop
cmp
mov
cld
mov
xchg
hlt
pop
lock
sub
mov
add
or
cmc
add
stc
into
pop
scas
aaa
pusha
inc
outsl
cmp
pop
pop
sbb
jno
mov
insl
inc
push
cmp
je
adcl
lret
popa
push
xor
aas
xor
cmovo
fs
das
and
mov
or
in
popf
rcrl
dec
shll
xchg
je
push
aaa
sub
sbb
mov
aam
aas
cmp
xchg
and
sbb
pop
insl
aaa
pop
mov
mov
push
sub
sub
out
sbb
ja
add
cmp
in
lret
jae
mov
int3
pop
pusha
sub
xchg
aas
add
mov
add
out
clc
mov
jo
sti
mov
pop
mov
movsl
or
sbb
push
cltd
clc
in
daa
arpl
daa
push
mov
push
pop
out
mov
aad
loope
lea
inc
pop
mov
fisubrl
and
mov
test
dec
test
out
cwtl
push
out
in
out
push
adc
inc
xor
ds
lods
sbb
mov
pop
sbb
sbb
add
loope
outsb
ljmp
add
adc
cmp
push
ss
push
inc
fs
sub
in
ds
loop
push
dec
iret
sub
or
xchg
push
add
xchg
lret
mov
popa
imul
mov
loop
stc
mov
movl
jg
das
shrl
pop
adc
jmp
sub
mov
add
mov
insl
push
jl
cmpl
adc
gs
in
fidivs
and
cltd
fst
dec
repz
dec
movsl
pop
lods
jo
enter
cld
adc
jmp
jg
ss
fxch
mov
cmpsl
inc
insl
test
sub
inc
imul
scas
enter
cmc
push
les
in
orb
icebp
and
pop
scas
pop
or
in
fldl2e
dec
or
sub
ret
dec
fsubr
lcall
mov
pop
sub
insl
into
rcrl
inc
sbb
fimull
test
mov
movsl
imul
pop
inc
adc
push
jge
jl
fs
sbb
pop
insl
mov
call
fldenv
mov
roll
test
push
das
lahf
es
push
push
jmp
push
dec
arpl
dec
jle
popa
jle
and
xor
pop
or
and
and
push
mov
sbb
lcall
fwait
push
mov
pop
es
jns
je
mov
jne
inc
cmp
lods
data16
push
lret
in
lret
or
std
and
dec
mov
mull
daa
jmp
sub
mov
ja
rcr
aad
sbb
cmp
fbstp
add
cmp
roll
in
jne
xchg
jge
or
mov
inc
push
xor
call
pop
pop
jmp
inc
mov
call
mov
pop
dec
mov
movsl
shlb
fwait
cmp
or
dec
das
adc
mov
pop
movsl
or
adc
mov
jnp
mov
xchg
in
xchg
fsub
dec
gs
adc
sub
sub
mov
ljmp
les
mov
add
adc
addr16
addb
mov
stos
repnz
bound
jnp
in
xor
xchg
mov
lds
pop
xlat
repz
fistps
arpl
jge
int
mov
sbb
jmp
xlat
call
jnp
daa
jne
xchg
out
mov
xchg
repz
pop
scas
pop
dec
jecxz
iret
test
mov
cmp
pop
cwtl
mov
jg
push
stos
xor
scas
sarl
mov
insl
cmp
adcl
or
adc
mov
ss
out
insl
icebp
xor
mov
popa
xchg
inc
pop
sub
sub
xor
test
jmp
xchg
dec
ds
mov
jmp
jns
movsl
ds
dec
outsl
loop
pop
loop
push
pusha
call
shll
push
lock
stc
call
xchg
or
mov
insb
hlt
lret
inc
pop
xchg
test
mov
mov
xor
mov
outsl
data16
ja
shlb
pop
pushf
sbb
mov
adc
inc
scas
pop
pushf
mov
stos
mov
cmp
test
adc
jne
loop
imul
cli
add
push
add
jbe
jb
fidivrs
sub
or
push
loop
cli
pop
les
in
es
out
decl
dec
jecxz
xchg
push
out
imul
jecxz
roll
jge
adc
imul
fisttpl
cmp
negb
shlb
loopne
int3
stos
inc
push
sahf
jb
jp
and
push
inc
push
mov
aas
rcll
outsb
mov
orb
sub
aam
in
jb
dec
push
stos
js
pop
loop
ds
sbb
jbe
push
cmpsb
scas
jo
adc
cmp
mov
popf
jecxz
push
pop
push
push
xor
adc
insb
int
jo
push
adc
inc
or
out
shll
daa
sbb
jg
fwait
xorl
sub
lahf
xchg
mov
cs
add
addr16
andl
add
adc
imul
mov
aas
pop
sub
mov
incl
sbb
aaa
dec
push
pop
nop
stos
test
int3
pop
cmp
push
jae
stos
rcll
mov
cmp
andb
dec
adc
scas
pop
lods
sti
popa
cmpl
aas
dec
repz
jbe
dec
testl
sub
xlat
in
sub
ja
mov
mov
fwait
aad
adc
mov
dec
jmp
iret
xorb
pop
je
test
scas
lret
arpl
adc
aas
pop
jecxz
movl
cmp
pop
add
cmpsl
fimull
jmp
jmp
imul
cmp
adcl
dec
sahf
das
pop
adc
mull
mov
ss
punpcklwd
sbb
lahf
adc
daa
sbb
mov
pusha
stc
jle
shlb
jmp
andl
jnp
adc
or
mov
cwtl
mov
pop
lret
sbb
mov
lods
pop
mov
aam
add
lcall
lret
dec
imul
movsb
jne
ret
outsb
iret
std
clc
sub
fadds
outsl
outsl
cmp
lcall
arpl
or
lahf
xchg
xchg
repz
lds
mov
push
enter
nop
dec
decl
cmc
pop
js
lods
fsubr
adc
pop
pusha
jnp
daa
push
rolb
mov
outsl
xchg
rcr
sahf
sub
sub
jae
repnz
js
lret
aas
sbb
xchg
and
out
add
lcall
mov
push
and
jb
fwait
js
popf
shrl
and
xchg
sub
nop
mov
lods
stc
aam
sub
jne
pushf
jmp
in
or
pop
stos
jne
xchg
add
inc
insw
dec
mov
mov
mov
test
in
daa
mov
xchg
sahf
pop
fdivl
and
cli
mov
mov
lock
mov
pop
push
and
sbb
scas
mov
fs
jle
repnz
ret
movb
and
icebp
add
or
in
adcl
cmp
pop
mov
xchg
jl
add
push
jmp
mov
jle
cmp
lds
stos
inc
xor
or
and
lahf
popf
into
mov
or
cmc
in
mov
sub
push
int
jmp
and
jns
and
les
push
jge
sbb
loope
pushf
lea
jno
sbb
lds
pop
jne
adc
ret
mov
add
dec
push
imul
xor
xchg
js
xor
cwtl
aaa
in
shrl
mov
xchg
movsb
ret
gs
leave
cmp
fidivrs
add
ret
push
or
into
mov
sbb
test
push
std
imul
mov
loopne
out
clc
cmp
es
mov
and
cld
or
pop
mov
push
fs
mov
loope
cld
add
cmpsl
jl
push
movsb
aaa
dec
jge
mov
loope
sbb
push
mov
insl
dec
add
xor
mov
push
dec
or
mov
bound
sub
mov
and
mov
int3
push
add
lret
or
out
ret
pop
jp
push
xchg
xor
push
and
sti
push
fdivrl
cmp
lea
mov
jecxz
cmp
enter
ja
scas
in
add
in
xor
fs
jmp
int3
ret
testb
lds
mov
repz
stos
sub
fidivrs
mov
xchg
ja
inc
dec
into
sub
inc
pop
xorb
pop
or
xchg
sub
aam
lods
pusha
mov
stos
inc
sbb
in
rorl
out
pushf
cmp
inc
xlat
and
mov
nop
lea
pop
leave
shl
cmpl
outsb
cld
sbb
mov
adc
ret
xchg
inc
mov
in
sbb
push
cmp
cltd
out
movsl
xor
mov
mov
jge
mov
icebp
push
sub
rolb
mov
mov
insb
dec
in
imul
fstl
push
adc
rorl
bswap
ljmp
push
dec
jmp
push
nop
clc
arpl
fildll
mov
fwait
dec
jg
inc
mov
dec
jne
push
xchg
sar
fisubrl
or
test
in
fucomp
addb
es
lret
or
xchg
ret
lret
jp
cwtl
divb
mov
stos
sbb
in
dec
ss
ja
movsb
pop
mov
adc
lock
jb
daa
test
and
xor
ds
les
jb
push
jg
fwait
mov
cmovno
jp
lods
mov
push
incb
test
jo
std
cmp
pop
insl
loopne
dec
mov
inc
pop
clc
mov
int3
cmpsl
push
cmp
adc
jg
sbb
push
aam
cmp
xor
unpcklps
cmp
and
out
mov
dec
jl
mov
mov
jge
leave
xorb
mov
and
cld
xor
pop
shlb
out
cwtl
sbb
ficompl
shr
mov
push
jl
adc
bound
cmp
es
daa
jns
lods
out
mov
in
or
jg
sbb
xchg
jecxz
fsubrl
jae
outsb
cmp
scas
clc
dec
sub
inc
adc
mov
sahf
xchg
mov
xor
jg
mov
mov
ret
inc
sbb
aaa
fwait
shrl
inc
add
sub
mov
ret
cwtl
movsb
push
loopne
or
pop
ds
sbb
notb
stos
scas
sub
inc
cmp
mov
call
jp
xchg
mov
lds
das
add
shll
into
mov
lret
ds
adc
hlt
std
lret
mov
lock
push
and
data16
cltd
stos
sbb
inc
pop
sbb
mov
mov
outsb
jl
mov
fsubrp
mov
xchg
push
push
dec
sbb
pushf
push
mov
xchg
xor
dec
mov
inc
add
ficompl
push
imul
fs
negl
cli
ss
or
mov
or
sbb
sahf
push
mov
mov
jmp
data16
scas
aam
shlb
cmp
stc
stos
cmp
inc
sbb
shrb
aad
shrl
inc
popf
es
cli
inc
fidivs
push
dec
inc
and
push
pushf
ficompl
mov
sub
cs
add
sahf
pushl
push
inc
sub
push
loop
aam
push
jle
push
lahf
bound
es
mov
jae
out
jp
pop
and
ljmp
or
ds
adc
idivb
cmpb
testb
scas
cmp
push
scas
cld
rcl
data16
mov
outsb
pusha
inc
xchg
es
cli
inc
fdivrp
mov
xchg
inc
push
dec
or
mov
mov
popa
dec
xchg
sub
pop
out
mov
mov
sbb
loop
mov
xchg
cmp
sub
cmpsb
cmpsl
jp
pop
outsb
xor
push
aad
add
pushf
mov
xchg
or
fdivp
icebp
lret
mov
cmp
push
push
repnz
in
stos
pop
mov
nop
inc
jnp
iret
mov
push
mov
mov
es
cli
and
sahf
mov
xchg
and
and
push
mov
pop
mov
add
cs
add
mov
xchg
push
jge
jmp
jmp
jbe
out
push
ja
xor
jp
and
mov
add
mov
out
pushf
and
jb
lods
mov
fisubl
pop
mov
jnp
xchg
and
aad
push
push
bound
cmp
fwait
adc
int3
cwtl
repz
jne
pop
into
subb
into
cmpsb
mov
sahf
sbb
and
push
mov
fistpll
cmp
jo,pn
in
out
rol
inc
push
sbb
xchg
incb
push
cwtl
mov
mov
les
repnz
sub
jmp
dec
dec
dec
lock
int3
xor
jb
xchg
in
andb
nop
das
insl
lret
imul
mov
mov
imul
out
rol
out
cli
movsb
imul
and
iret
pop
xchg
test
cli
int
pop
mov
push
sub
pop
outsl
movsl
jle
cmp
jno
sbb
push
enter
xchg
div
jbe,pn
jp
sub
pop
inc
andb
or
push
adc
add
pop
dec
push
xchg
enter
int
jp
test
clc
aaa
inc
test
pop
arpl
mov
jge
or
sbb
and
pop
out
dec
jle
popa
rorb
aad
and
addr16
mov
cmp
and
adc
icebp
inc
int3
mov
pop
dec
bound
sub
test
iret
push
aas
loop
pusha
push
notb
mov
std
push
jle
call
push
int3
jmp
mov
jno
push
fs
mov
xchg
cmovp
mov
sub
ja
sbb
scas
outsb
rcr
rorb
sub
push
xor
jo
ss
cli
pop
imul
push
add
xlat
push
dec
fwait
xchg
mov
xchg
sbb
hlt
cli
xor
shrb
pmuludq
ret
hlt
rcl
cmc
adc
in
leave
out
mov
test
das
inc
cmpsl
xchg
push
sub
out
mov
insl
xor
add
push
sbb
aad
ficoml
mov
inc
aas
call
or
into
adc
sbb
jnp
xor
xor
inc
mov
jp
in
bound
jecxz
insb
lea
xor
imul
je
mov
pushl
lods
imul
xor
into
mov
pop
std
pop
jmp
les
scas
jmp
rorl
dec
mov
jae
mov
pop
dec
js
lret
cs
or
rcrb
push
mov
mov
dec
mov
aas
or
mov
cmc
lock
inc
imul
adc
insl
sub
push
push
arpl
or
in
cmp
std
dec
pop
js
sub
leave
sbb
sub
cld
mov
ficoms
push
fldl
sbb
movsb
rcrb
sbb
fmul
popf
lods
sbb
cmp
adc
roll
mov
jge
inc
xor
cmp
jne
stos
mov
jl
sbb
ss
mov
sbb
ljmp
cli
jne
cltd
xor
push
inc
ss
jp
pop
mov
sub
daa
or
cmp
fstpl
cli
fdivrl
xor
ret
push
lret
pusha
push
xchg
and
push
mov
sbb
gs
fcmovb
mov
mov
inc
mov
lcall
hlt
pop
cmp
push
int
dec
xchg
outsb
divb
xorl
jo
adc
in
jecxz
or
sbb
ljmp
and
mov
cli
cmc
jle
mov
enter
jge
pop
ret
xor
push
jmp
ljmp
xchg
pop
lods
ss
jo
int
sub
sub
and
jp
dec
and
push
inc
dec
adc
lea
mov
out
rcrb
imul
shrl
sbb
mov
iret
jae
xor
jp
adc
xor
mov
xor
call
xor
pop
out
xchg
inc
mov
fdivrs
add
lods
cmp
mov
push
std
cs
bnd
mov
int3
mov
mov
cmp
mov
sbb
popf
inc
test
push
or
mov
rorb
ljmp
bound
jl
sub
ss
decb
inc
fcmovnb
pop
mov
js
pop
int3
xor
adc
sbb
lahf
xchg
fidivs
jo
xlat
sub
jbe
add
mov
pop
pop
enter
xchg
sbb
fiaddl
in
jne
sub
pop
and
fmulp
xchg
xchg
mov
xchg
pop
dec
movsw
scas
aaa
gs
jno
lods
fs
dec
pop
ss
push
lcall
cld
enter
lods
push
aad
enter
fisubs
lahf
jl
scas
xor
add
bound
mov
jl
or
test
cmp
andb
stc
fst
je
push
push
dec
loopne
xor
bound
aad
leave
xchg
adc
inc
insb
add
sbb
jne
dec
adc
xchg
adc
mov
lock
nop
mov
mov
jns
pusha
push
or
data16
dec
add
out
das
fwait
fs
inc
stos
jae
in
lock
in
leave
mov
xchg
mov
and
push
sbb
ljmp
data16
mov
add
mov
daa
pushf
cmpsb
mov
push
cmp
cmpsb
rorb
notb
dec
push
cmp
in
or
cmp
sub
fsubp
lods
mov
mov
adcl
sub
inc
mov
sahf
aam
and
and
xchg
mov
clc
cmp
add
cltd
daa
not
inc
mov
mov
mov
cs
pushf
push
out
inc
cltd
and
cmp
jmp
xor
nop
scas
and
jmp
mov
in
mov
mov
movsl
xchg
cmp
jo
int
or
hlt
sbb
jae
mov
les
pop
push
jne
aam
out
cltd
sbb
orl
ficoml
mov
adc
hlt
jl
test
cmp
js
sub
sahf
mov
sub
cmp
clc
mov
sub
mov
sahf
adc
popa
mov
mov
insb
ds
clc
or
mov
jp
dec
repz
mov
es
ljmp
push
mov
ud0
add
jecxz
jnp
out
dec
test
xchg
lcall
roll
add
ljmp
jno
push
cmp
mov
aaa
add
cmc
in
sub
movups
add
enter
int3
mov
mov
sti
jns
int3
lcall
mov
clc
inc
push
xor
imul
mov
pop
cmp
rclb
call
add
aas
xor
bound
and
icebp
mov
fimuls
aas
xchg
jns
fiaddl
adc
or
mov
sarb
imul
dec
mov
inc
cld
xor
inc
test
mov
fcompl
das
test
and
inc
mov
xor
cmp
fwait
lret
fs
dec
cmp
pop
add
push
lods
iret
iret
dec
dec
mov
cmpsb
cmp
rcll
push
add
push
pop
fxch
push
xor
ljmp
fcompl
addr16
push
or
icebp
inc
in
nop
sbb
int3
or
mov
addr16
mov
mov
push
and
out
fwait
xor
insb
into
jnp
cmp
mov
add
repnz
sahf
cmp
cmpsb
jo
xchg
enter
pop
lods
loop
mov
test
int
aas
aas
inc
adcl
outsb
mov
cld
add
push
fadds
jp
or
clc
fstl
repnz
dec
xchg
jnp
std
es
push
stos
shl
shl
xchg
fidivrl
cli
and
js
in
ss
or
out
mov
inc
gs
jg
jp
in
repz
ja
sbb
and
aaa
adc
xchg
cmp
jmp
adc
mov
push
test
mov
sbb
inc
push
adc
call
and
and
adc
inc
push
aam
jge
stos
int
push
ds
cwtl
loopne
das
xchg
int
out
notb
jmp
nop
les
pop
lock
cltd
xchg
adc
and
aam
scas
out
outsb
sarb
xchg
sbb
adc
mov
orl
addl
and
adc
ss
mov
std
sti
mov
push
fstpt
in
das
and
inc
xchg
addl
lea
ret
and
out
push
clc
sbb
in
seto
xchg
mov
xor
cmp
mov
dec
mov
scas
stos
mov
add
aaa
sbb
cmp
dec
lods
ljmp
jo
aam
push
enter
aad
inc
xchg
sub
inc
filds
stc
stos
lahf
roll
fidivrl
mov
pusha
mov
or
loopne
cmp
out
dec
xchg
jnp
loopne
sub
cmp
dec
repz
aad
mov
jg
sub
push
mov
data16
cmc
mov
inc
xchg
sub
pop
pop
cmp
mov
ds
or
iret
js
jb
mov
lahf
or
adc
jo
lds
jge
jns
sbb
xchg
int3
adc
xchg
cs
dec
mov
lds
int
and
sbbl
push
inc
adc
hlt
pop
add
dec
in
push
fnsave
xchg
lds
sar
loope
mov
sbb
fwait
adc
repnz
mov
and
mov
xchg
jl
push
js
xchg
xor
repnz
pop
cld
push
sbb
call
pop
scas
cmp
stos
mov
inc
hlt
jbe
xor
in
dec
jnp
inc
cmp
mov
out
sti
and
pop
sbb
mov
cmp
mov
xchg
scas
arpl
fsubrs
mov
jo
xor
mov
pop
lcall
add
and
jecxz
fwait
in
xchg
pop
test
sahf
int
ss
adc
lahf
cwtl
add
ds
jbe
push
out
stos
sub
xlat
wbinvd
mov
add
and
fwait
sbbl
xchg
and
xor
test
push
in
pop
imulb
push
mov
or
in
js
ret
es
dec
lds
jo
roll
and
push
sbb
xlat
lods
cmp
lcall
pop
pushw
and
pop
sbb
imul
mov
call
cmc
mov
sbb
das
and
shlb
xchg
cmp
jb
mov
icebp
inc
pop
js
imul
pop
dec
sbb
jb
ja
mov
imul
popl
inc
and
and
mov
das
pop
pop
lret
push
inc
shrl
jne
int
xor
loopne
cmpsl
sub
aas
enter
mov
mov
mov
in
jl
popa
adc
loop
scas
xchg
sbb
shll
movsb
sub
mov
testb
xchg
mov
pop
jae
hlt
jmp
add
add
rcl
xor
fcmovne
in
xchg
cs
out
and
cli
int
add
pushf
cmpsl
fisubl
insb
mov
leave
xlat
into
xchg
cltd
inc
add
mov
clc
sti
inc
ret
push
jge
aaa
nop
xchg
mov
or
lcall
jne
pop
cs
fdivl
mov
pop
jg
and
add
cmpl
add
cmc
in
jmp
jecxz
xchg
add
mov
clc
cmc
fildll
imul
push
js
int3
add
test
inc
sbb
xchg
es
scas
push
mov
aad
push
dec
lds
test
scas
dec
cmp
jmp
outsl
test
repz
sbb
out
adc
add
mov
popf
inc
cltd
scas
insl
xchg
push
sbb
js
push
push
ss
sbb
lret
inc
data16
adc
mov
xchg
push
pop
in
lret
fists
movsb
in
sub
xlat
enter
and
cmp
lcall
cmpsb
cmp
sub
lret
mov
sbb
dec
pop
add
jmp
jne
shl
shlb
pop
pop
pop
sbb
mov
aad
jg
pop
mov
or
sbb
sub
xchg
push
cmc
adc
jmp
lcall
xorb
mov
ljmp
pop
mov
cmp
loopne
mov
mov
mov
sub
mov
mov
adc
jno
lahf
jp
dec
xor
loopne
push
fidivs
ss
mov
inc
mov
ljmp
mov
mov
xchg
aas
pop
mov
cmp
xchg
or
sub
out
shrb
shrl
and
add
pop
sahf
jns
mov
xor
adc
dec
pmuludq
jb
and
test
push
stos
in
push
dec
push
or
mov
sub
jbe
scas
loope
sahf
xor
sbb
or
test
lahf
lcall
mov
jb
mov
jecxz
or
jg
xchg
jl
mov
scas
dec
mov
in
psrlw
xor
mov
jno
push
inc
movsl
ret
push
lock
sub
xlat
shlb
adc
cmovl
in
pop
jne
aas
mov
subb
add
xchg
inc
sub
jp
adc
add
sbb
bound
and
add
mov
popa
push
and
stc
aam
pop
xchg
test
cmp
mov
add
add
xor
into
mov
loopne
mov
jp
sti
xchg
add
dec
mov
sbb
cmpl
mov
dec
sarb
les
das
jmp
lret
pop
push
cmpsl
push
js
cmp
adc
and
xor
les
dec
xlat
jbe
mov
sub
in
and
mov
repnz
dec
mov
int3
aad
xchg
sub
jecxz
stos
stos
push
lock
inc
in
and
hlt
sbb
sbb
jmp
decl
int
fwait
sbb
sub
pop
in
jo
shlb
cmp
push
loop
inc
mov
jle
lret
jae
jbe
jl
push
cmpsl
out
repz
or
stc
ljmp
outsl
sbb
or
sbb
out
mov
jge
or
sbb
sub
adc
mov
mov
xor
outsb
dec
es
jo
mov
leave
cs
pop
in
add
call
repnz
adc
imul
xor
and
std
stos
pop
lock
fidivrs
xor
insb
insl
fsts
stos
dec
outsl
clc
mov
mov
mov
pop
ljmp
or
imul
jecxz
mov
mov
adc
sbb
ficompl
inc
lret
dec
push
cli
mov
lea
lds
push
divb
sbb
es
adc
scas
or
dec
cmp
push
mov
adc
cmpsl
sbb
cmp
cmp
out
push
sub
or
or
push
hlt
ljmp
mov
jle
mov
cli
cmp
mov
push
sub
adc
movsl
cmc
jp
cmp
pop
cmp
push
out
das
inc
leave
into
lods
lret
idivb
inc
fs
push
mov
shl
test
iret
jge
push
inc
inc
push
clc
adc
sub
push
aam
into
cmp
mov
or
insl
push
sti
roll
cmp
fcmovnu
aaa
sbb
das
and
push
lahf
rcr
sahf
inc
or
out
ret
jo
int
mov
push
sub
push
push
push
push
sti
lods
cwtl
notb
aas
popa
push
push
insb
adc
sbb
jmp
lods
loop
mov
sub
mov
lea
jge
out
cmp
push
rcrb
imul
xor
lcall
cmp
scas
xchg
hlt
ror
outsl
in
sbb
xor
lds
inc
push
mov
rorb
es
jp
push
push
or
movsb
xor
mov
sbb
jp
lock
jns
or
or
inc
nop
mov
xor
and
fmull
stos
loopne
pop
insl
int3
xor
into
xchg
insb
xlat
dec
cli
aam
imul
jp
sbb
div
sub
jmp
stos
into
adc
lods
nop
pop
dec
and
adcb
movsb
int3
xchg
out
pop
cld
cs
and
mov
dec
push
adc
xchg
mov
mov
and
xchg
lret
hlt
and
lock
or
movsl
clc
xchg
jmp
outsb
inc
mov
in
sbb
mov
mov
cld
test
adc
adc
out
repz
pop
fidivl
xor
pusha
cs
sbb
mov
subl
ss
xchg
inc
pushf
lock
inc
dec
xchg
outsl
cs
xchg
int3
mov
mov
movsl
scas
or
dec
xor
sub
xchg
clc
mov
das
dec
and
call
cmp
into
lret
scas
je
scas
mov
dec
inc
inc
mov
fdivrs
or
movsb
lret
lahf
lahf
lods
sub
gs
fucomip
or
pop
sub
fdivrs
outsl
cli
insl
mov
inc
dec
pop
pop
push
push
xor
out
dec
hlt
leave
pop
jbe
lods
mul
daa
inc
adc
pop
jo
mov
insl
mov
repnz
bound
xchg
addb
cmp
xor
jo
mov
cli
pushf
add
mov
xor
mov
pop
lods
fistpl
xchg
psubb
rclb
add
lds
imulb
mov
imul
test
nop
jecxz
jae
dec
jge
repnz
lea
sub
lret
adc
fs
test
add
and
cwtl
and
psubusb
mov
ret
imul
mov
gs
sbb
or
lods
xor
jle
sbb
int
mov
xchg
sbb
cmp
les
inc
subb
aaa
int3
lcall
testl
pop
and
xchg
dec
fisubrl
dec
add
jb
setno
sub
ja
rclb
jno
pop
bound
cmpsl
mov
into
fcmovu
adc
and
mov
jns
mov
adc
iret
pop
pop
dec
jnp
inc
cwtl
push
mov
fdivrs
icebp
mov
sahf
stc
shlb
mov
mov
mov
push
sub
loope
cltd
sub
mov
dec
push
mov
stos
fnstsw
jle
int
mov
push
cmpsb
sbb
jp
bound
mov
jb
sahf
xlat
mov
add
pop
cmp
lahf
int3
add
jmp
jo
add
sbb
jge
inc
push
adc
jae
gs
subl
add
sbb
subb
fisttpl
fnstenv
data16
pop
ss
inc
push
negl
mov
sub
stos
divb
mov
repnz
cmpsl
pop
jp
call
testb
mov
pop
inc
mov
mov
mov
popf
insl
jp
decb
or
sti
dec
imul
dec
mov
sbb
loop
or
mov
dec
pop
sbb
jno
sub
mov
mov
addr16
sbb
push
fadd
mov
test
jns
and
pop
adc
jmp
inc
std
shll
sbb
push
jo
enter
fimuls
js
movsb
cli
cmpsb
xor
inc
imul
xor
mov
int3
sub
fdivs
aaa
fadd
outsb
out
fistl
inc
aas
aad
sub
insb
insl
aad
mov
nop
icebp
pop
inc
mov
fwait
jb
jmp
popf
and
in
add
mov
out
and
sub
pop
dec
int
xor
dec
mov
mov
popf
ds
xchg
sbb
xor
dec
divb
fisubrl
in
adc
inc
jbe
mov
mov
and
repz
pop
mov
fisubrs
hlt
fadds
jg
outsl
out
and
mov
mov
mov
in
xchg
and
or
xlat
jb
stos
lods
out
imul
test
dec
jmp
and
xor
lods
sarb
js
sbb
mov
push
mov
dec
push
sti
ret
dec
push
shlb
cltd
cmc
xchg
inc
cs
cmpsl
int
stos
cltd
clc
inc
lcall
std
fiaddl
scas
pop
xchg
jns
idivl
stc
adc
mov
push
out
push
in
cmp
subb
or
popf
sbb
sub
ret
mov
bswap
cmpsb
jo
in
sbb
out
insb
out
add
push
pusha
sub
mov
inc
pop
popa
lods
and
xor
enter
popf
aad
subb
js
xchg
dec
ficomps
fbstp
out
xor
bound
add
fisttps
and
vcvtss2sd
rclb
aad
jae
aaa
sti
test
add
into
out
push
pop
cwtl
pop
mov
dec
jo
dec
cmc
dec
ja
fdivrs
adc
filds
cmp
xchg
xorb
loop,pn
scas
icebp
sarl
clc
cwtl
pop
popf
pop
out
xchg
mov
popa
push
or
mov
insb
mov
loopne
sbb
call
mov
std
js
out
test
cmp
mov
leave
pop
std
fbld
add
hlt
arpl
xor
inc
in
inc
mov
int3
or
add
loope
mov
cld
orb
pop
lret
cmpsl
test
dec
cmp
xchg
jae
aad
dec
repnz
popa
hlt
mov
ret
dec
push
fidivrs
fistpll
je
icebp
test
ret
push
ficoml
fwait
add
add
jnp
xchg
repnz
outsb
adc
adc
lret
sbb
mov
lods
mov
lods
sbb
imul
dec
sahf
cmp
cmp
sbb
lret
xchg
dec
stos
push
shrl
dec
loopne
and
xchg
into
add
andl
leave
xchg
jbe
into
imul
lcall
mov
jb
mov
mov
fcoml
test
lods
jl
mov
dec
dec
xchg
fdivl
mov
ljmp
cs
je
sub
cwtl
insb
mov
lcall
jecxz
std
mov
fstl
leave
xchg
cmpsb
xchg
out
pushf
pop
inc
int3
adcl
shrl
dec
lahf
fidivrs
push
je
mov
fldln2
adc
outsb
mov
cmp
js
mov
xchg
test
adc
cmp
dec
or
or
hlt
xorl
lret
cli
jg
push
fmul
stc
and
or
mov
inc
xor
jp
clc
cmc
imul
mov
xchg
mov
cld
clc
shlb
adc
jne
xor
in
adcb
or
xor
xor
dec
test
out
cs
data16
or
jae
push
hlt
mov
inc
mov
push
push
and
pusha
pop
xchg
out
push
sub
hlt
pop
jmp
cmp
imul
mov
cs
push
push
mov
outsb
dec
mov
jo
mov
jbe
xor
fldt
lds
outsb
mov
lock
dec
dec
and
pusha
and
shll
mov
jbe
sbb
sub
jbe
or
push
xchg
sub
lcall
mov
lcall
mov
jb
mov
sbb
mov
xor
outsb
xchg
sbb
sahf
cmp
jp
push
xor
xor
out
lods
jp
xchg
dec
push
mov
or
rol
mov
xor
mov
dec
fmul
loopne
sbb
int
adc
movsl
into
pop
and
insb
sub
inc
dec
out
aam
push
dec
mov
dec
sub
jp
sub
fidivrl
cmp
ljmp
add
imul
jecxz
mov
movsb
insb
jns
push
outsl
sbb
adc
adc
jg
mov
xor
fdivrp
dec
test
cmpsl
sub
js
lds
pop
mov
and
ds
jbe
repz
fucomi
inc
out
imul
loope
mov
cld
sbb
addr16
add
out
inc
subb
add
pusha
sub
mov
xor
xor
pushf
cmpsb
lret
mov
xchg
add
jae
pop
pop
in
aaa
lcall
js
enter
ljmp
push
add
pop
lods
jp
and
adc
sbb
jmp
outsl
fnstsw
or
sbb
sub
pop
lret
mov
mov
enter
inc
cmp
add
sub
ss
jle
lret
pop
lret
out
push
mov
or
stc
cmpsb
scas
adc
and
das
or
jmp
cmpsb
mov
jge
or
adc
mov
mov
bound
es
add
dec
sahf
jge
cltd
add
outsl
jl
xor
xor
aam
fstl
faddp
xor
in
and
xchg
or
sbb
clc
mov
and
dec
push
sahf
adc
test
push
sub
push
add
push
xchg
mov
fcmove
bound
ljmp
sbb
shr
xchg
imul
mov
mov
aam
dec
inc
jl
addr16
or
notl
sbb
out
in
testl
jmp
cmp
fsub
mov
pop
fldenv
arpl
or
faddl
test
clc
xchg
dec
out
mov
push
sub
imulb
push
aam
into
lea
mov
pushf
lock
out
fcompl
inc
hlt
int3
adc
xor
mov
sbb
mov
or
add
xchg
sbb
sbb
movsb
pop
jae
add
sub
sub
dec
int3
out
inc
mov
popf
lods
daa
rol
push
sarb
inc
inc
ret
xor
popa
pusha
leave
icebp
sbb
or
cmpsb
cli
xorl
es
ss
xor
mov
movsl
push
sub
sub
ret
lock
mov
daa
gs
cmp
test
xchg
jo
xor
call
push
in
adc
imul
cli
jns
jne
ja
cwtl
fcmovu
hlt
push
mov
icebp
sub
repnz
stc
xchg
lret
mov
xchg
dec
inc
int
add
push
movsl
sub
dec
aas
and
ss
xor
in
scas
adc
imul
sub
pushf
popa
or
je
repnz
fstps
out
insb
mov
lcall
sub
pop
fidivl
inc
int3
mov
loopne
ljmp
into
out
xchg
add
sbb
sbb
and
xchg
daa
lods
push
and
aas
pop
lock
mov
lea
ljmp
les
push
mov
pop
shrl
fdiv
lret
fisubs
add
cmpsb
sub
jle
test
sub
mov
lock
mov
cmp
xchg
xchg
daa
aam
push
mov
inc
push
cwtl
fisubs
in
and
in
push
call
jnp
and
popf
cmp
xchg
fcmovnbe
loope
or
cmp
repz
and
dec
sahf
mov
lret
add
inc
sahf
mov
push
xchg
xor
push
pop
inc
ret
sub
sub
push
ljmp
push
jnp
xchg
xorb
cmp
add
add
inc
idivl
and
pop
inc
lods
or
and
outsl
loop
pop
push
xchg
adc
ss
xchg
mov
inc
incl
push
out
cmp
outsb
and
jle
shl
add
fabs
scas
adc
and
add
les
mov
xor
imul
sub
mov
push
mov
in
add
mov
add
cmp
ss
or
into
adc
int
shrl
loope
sbb
imul
push
test
nop
pop
cli
aas
sub
icebp
psubusb
sub
pop
pop
scas
push
mov
sub
aam
jnp
sbb
xchg
mov
cvttps2pi
adc
dec
das
aas
or
mov
push
xor
or
daa
sbb
icebp
cmp
mov
pop
mov
test
int3
pop
or
pop
lock
ret
leave
out
add
cmp
or
mov
icebp
xlat
cmp
pop
lods
adcl
insb
inc
pop
mov
xlat
les
sub
xor
js
xchg
stos
mov
out
add
and
xchg
inc
loopne
cmp
sub
add
lods
call
imul
clc
push
in
pop
add
jb
pop
mov
jae
repnz
imul
pop
aaa
and
adc
mov
or
sub
or
xor
les
sub
jl
out
pushf
mov
hlt
jne
mov
adcl
fbstp
mov
adc
pop
in
push
add
out
or
int3
dec
mov
sbb
movsl
push
mov
sbb
sbbb
push
std
mov
sub
cs
call
cld
mov
loop
sub
pop
xchg
xor
lock
mov
sti
pop
dec
insb
jne
lcall
push
dec
mov
mov
xor
enter
cmpsb
mov
ds
mov
imul
and
loopne
sahf
sub
push
jns
xchg
add
push
outsl
jne
xor
mov
aas
xchg
repnz
sub
push
ja
mov
iret
mov
bound
pop
mov
dec
ret
ds
jl
rol
je
ret
add
popf
and
clc
sub
jno
in
in
jbe
aad
sti
lods
mull
je
hlt
pusha
and
call
xchg
add
pusha
imul
movsb
mov
pop
mull
pop
pop
scas
mov
mov
push
pop
test
icebp
dec
cmp
mov
push
test
inc
inc
les
xor
addr16
cmp
rcr
or
incl
lock
iret
xor
fiadds
mov
in
call
cltd
dec
mov
stos
test
or
pop
jmp
push
fldl
mov
dec
jmp
ljmp
leave
mov
sub
mov
jae
push
or
sbb
sbb
push
subl
insb
lret
hlt
out
cs
pop
ret
addr16
fisubs
xor
inc
aas
cmp
repz
rol
mov
push
inc
outsl
lea
adc
push
push
cs
aaa
dec
jno
xchg
pop
sub
mov
inc
inc
jns
jle
std
dec
repz
sbb
jmp
or
xchg
and
das
inc
or
stos
push
int3
and
sbb
call
hlt
in
push
xchg
or
cmp
lods
js
rclb
ljmp
pop
push
push
outsb
nop
cmc
ss
cli
lea
dec
aaa
xor
movsb
jecxz
sbb
mov
rorb
popa
add
xchg
adc
adc
cli
or
mov
ret
mov
mov
insb
fisubl
xor
mov
in
jbe
xchg
mov
push
fsubrl
mov
mov
ds
xor
mov
dec
and
shl
ja
mov
push
jl
ret
or
inc
mov
insl
fcmove
sbb
sti
dec
mov
movsb
sbb
dec
in
cltd
xchg
ror
in
sub
push
dec
add
into
fnstcw
rorb
mov
add
xchg
adc
cld
inc
xor
dec
test
stos
dec
ret
mov
ljmp
hlt
scas
push
xlat
incb
cwtl
jle
mov
mov
hlt
ss
fistpll
xchg
xchg
mov
sti
xchg
pushf
sti
les
push
sub
sub
jbe
push
adc
into
push
cmpsl
push
or
lret
cltd
dec
lret
sahf
fldt
add
xchg
mov
jmp
in
add
es
or
fwait
adc
arpl
cmp
or
xchg
sub
sbbb
mov
test
adc
push
pop
dec
lods
lock
xchg
fstl
ljmp
jmp
je
sub
cld
and
movsb
jbe
and
or
or
jp
sbb
pop
loop
test
xchg
sti
je
scas
dec
sbb
xchg
jbe
or
les
mov
rcll
cmpb
rol
sbbl
push
aam
es
or
call
ss
cltd
pop
in
jecxz
push
or
pop
xchg
fstpt
jnp
cmp
lea
mov
add
pusha
and
push
in
jnp
adc
mov
push
mov
lcall
scas
mov
jo
pop
aaa
xchg
test
pop
mov
push
int3
jno
pop
xchg
test
add
cmp
test
fdivs
xchg
mov
cmp
mov
add
add
out
scas
jnp
dec
jns
sbb
addl
cmp
mov
iret
ret
xchg
push
mov
push
pop
xchg
jle
mov
dec
add
insl
adc
jbe
add
cwtl
repnz
dec
negb
add
enter
xor
enter
jnp
push
push
lea
test
push
nop
push
adc
adc
jmp
sub
out
xor
sbb
and
mov
jne
lret
mov
cs
xor
pop
fisttpl
cmp
sbb
pop
ds
leave
xor
mov
adc
add
lahf
and
mov
jbe
insl
cmp
fnsave
mov
mov
cmc
push
sub
in
repz
inc
cltd
pop
out
add
test
aam
and
pop
lret
inc
cwtl
inc
fadd
and
lods
mov
xchg
fwait
mov
outsl
idivl
mov
and
in
xchg
push
leave
jmp
jge
xchg
loope
or
fisttpl
inc
dec
dec
stos
loope
clc
movsl
push
pusha
mov
cld
lods
inc
mov
jno
mov
jne
outsl
jp
arpl
lods
xchg
pop
inc
fdivrs
add
inc
loope
cmp
dec
jns
sahf
jecxz
out
aam
or
jnp
leave
mov
outsb
push
xchg
push
daa
mov
outsl
add
push
add
and
mov
js
jo
pop
add
cld
fcomip
pop
push
xchg
lods
adc
movsb
test
gs
fistpll
popa
addl
dec
scas
adc
mov
lods
das
loope
cmpl
lret
sbb
sbb
mov
fmull
pop
add
aam
les
push
ror
enter
mov
idivl
xchg
popf
out
loope
lea
cmp
push
xor
arpl
paddq
pusha
leave
mov
cmp
push
negl
inc
inc
mov
lods
mov
xor
pop
adc
shll
mov
fwait
repz
sub
clc
hlt
mov
mov
mov
adcb
mov
mov
repnz
dec
int
push
xor
sub
ret
cbtw
inc
insb
vpmaddwd
inc
nop
ret
mov
dec
and
and
cmpb
xor
mov
cmp
sub
or
insb
jo
mov
xor
int
dec
out
sti
cmp
test
daa
xchg
adc
clc
pop
stc
incb
dec
les
fadds
jns
fcoml
mov
outsl
call
int
sub
arpl
mov
enter
das
sbb
out
scas
jnp
je
insl
je
fcmovu
jmp
dec
aaa
sub
dec
mov
cli
cmpl
sbb
ds
xchg
test
icebp
lret
or
data16
lret
sub
test
mov
push
bound
rorl
fsts
flds
jo
js
xorl
std
repnz
es
cmp
mov
mov
insb
ja
mov
int
cmp
jno
pop
bound
imul
notb
cmp
gs
sub
cmp
out
in
push
jo
stos
imul
jp
xor
mov
adc
cmp
fstpl
stc
push
add
mov
or
cmp
add
mov
out
mov
pop
and
cltd
pop
mov
adc
xor
pop
jle
test
insl
add
cmp
sub
daa
fisubrs
push
sbb
ja
scas
pop
mov
adc
adc
test
sub
clc
sbb
mov
stos
push
push
cmp
int3
ljmp
jo
adc
and
xor
mov
int
sub
xor
shl
add
sub
iret
imull
push
push
in
shl
ficoms
pusha
adc
punpckhwd
daa
adc
fsub
rorl
xchg
insl
outsb
dec
bound
lcall
pop
bound
xchg
scas
pop
aaa
push
pop
mov
into
mov
adc
jl
je
sbb
repz
adc
sub
mov
xlat
popf
cs
adc
insl
inc
scas
or
aaa
popf
subl
les
xor
scas
std
fwait
sbb
outsb
mov
fs
and
xchg
mov
cmp
and
pushf
scas
nop
inc
scas
sbb
rcr
out
sub
inc
inc
mov
mov
dec
movsb
jmp
xchg
es
xchg
and
nop
xor
into
ret
cmp
pop
enter
mov
push
je
and
scas
test
mov
push
les
cmp
data16
out
inc
or
and
inc
and
jecxz
lsl
in
shl
pop
scas
xchg
fwait
ret
imul
movsb
cli
iret
cmp
pop
jae
adc
lahf
insb
bound
insb
push
es
pusha
aaa
out
xlat
fnstenv
mov
xchg
pop
push
int
pop
add
fbstp
movsb
push
je
cltd
cmp
cmpsl
mov
xchg
and
add
sub
pop
dec
mov
pop
mov
inc
and
xchg
mov
push
inc
jno
movsb
lods
aaa
cwtl
xor
or
and
mov
pop
loope
xor
pop
jns
les
imul
cs
leave
in
dec
add
imul
mov
mov
fdiv
adc
adc
mov
ret
out
sub
or
push
sti
in
int
out
mov
and
inc
idiv
ret
lret
jp
mov
neg
je
jne
xor
into
cmpsb
scas
in
ja
inc
push
xor
mov
iret
and
sbb
les
mov
mov
ror
xor
push
call
repz
imul
cmp
jl
sbb
add
inc
int
or
cltd
lods
mov
shrl
pop
adc
repnz
nop
popa
pop
ljmp
mov
or
xchg
pop
push
adc
xchg
xchg
scas
pushf
ja
in
imul
or
jo
push
loopne
test
cmp
testb
les
scas
fdivl
xor
adc
jmp
mov
cmp
push
dec
mov
xchg
movsb
div
cmp
push
mov
dec
cmpsb
lret
scas
cmpsb
mull
stc
adc
add
push
push
sar
fdivrp
andl
adc
lahf
mov
stos
inc
sub
repz
fdiv
in
mov
inc
push
cmp
or
icebp
dec
ss
push
inc
dec
movsl
fidivrl
and
jne
out
xchg
xchg
orl
mov
and
addr16
mov
jae
outsb
daa
cmp
out
ffree
repnz
cmp
sbb
shll
orb
add
adc
push
outsl
orb
inc
inc
sub
push
lock
frstor
dec
inc
sub
outsb
jmp
popf
je
push
aas
adc
push
push
test
inc
jp
es
dec
push
jnp
sbb
and
mov
dec
sub
dec
lock
fwait
pop
shl
xchg
xchg
mov
mov
outsl
negl
xor
mull
orb
outsb
fidivrl
rolb
jecxz
enter
aam
xor
icebp
ret
jno
mov
mov
loope
les
or
int
cmpsb
xchg
int3
push
outsl
mov
sbb
cmc
mov
iret
mov
or
pop
sub
pop
mov
test
xchg
repnz
mov
sbb
or
ror
das
aaa
xchg
pop
js
inc
push
push
pop
add
in
int3
mov
fnsave
mov
lahf
mov
in
pop
mov
unpcklps
cmpb
stos
push
jg
imul
enter
iret
sub
push
pop
stos
scas
stos
jmp
adc
loopne
mov
xor
scas
push
xchg
nop
push
fdivr
sbb
pop
or
mov
cmp
loope
ror
lcall
add
cmp
icebp
enter
mov
sub
push
loopne
fcompl
jns
cmp
and
aam
lret
mov
adc
xchg
mov
fiaddl
jg
push
movsl
mov
out
cmc
sub
and
push
adc
push
inc
or
mov
ror
sarb
inc
adc
or
dec
mov
xchg
and
cmp
xchg
lcall
pushf
shll
sti
popf
movsl
mov
or
and
xor
push
inc
mov
rol
lock
xchg
daa
subb
mov
icebp
fcom
loop
mov
jg
cwtl
cld
rcrl
pusha
mov
adcl
es
out
loope
test
aam
mov
xor
jne
dec
inc
mov
sub
add
cmp
cmp
add
lock
das
xor
dec
xor
mov
inc
pusha
cmp
jb
pop
inc
dec
adc
push
xor
dec
push
jle
adc
xor
inc
xor
popf
xchg
fwait
sahf
jae
sub
imul
sub
push
cmp
jne
fidivrs
mov
push
cs
sarb
popf
cmpsl
and
jl
imul
aaa
sahf
adc
push
js
jp
jmp
aam
jo
sti
dec
dec
add
lret
and
enter
or
push
out
xor
movb
insb
sub
and
repnz
aam
mov
data16
test
sahf
je
into
push
dec
sbb
out
sarb
pop
fnstsw
dec
ror
cmp
dec
dec
sahf
sub
and
loop
out
scas
insl
ds
cmp
pop
mov
dec
dec
xor
pop
daa
mov
in
mov
lahf
lahf
ficoms
mov
lock
shl
mov
insl
push
out
mov
dec
aaa
push
pop
add
enter
add
mov
sarl
dec
pop
push
jnp
fisttps
and
add
in
mov
imul
add
int3
and
std
mov
gs
fadds
sti
push
insl
les
dec
aas
and
push
lahf
lret
jns
inc
xor
or
cld
test
and
lock
data16
std
xchg
test
pop
dec
cmp
cwtl
sbb
das
lcall
nop
insb
pop
mull
jb
sbb
std
rol
nop
cmpsb
nop
jns
pop
cmp
push
inc
mov
mov
inc
push
inc
dec
sub
jl
repz
xor
jns
mov
or
push
mov
loop
xor
pop
xchg
insl
jo
cli
push
add
push
push
adc
cwtl
call
push
or
pop
mov
out
mul
out
xor
add
fnsave
scas
sbb
mov
xchg
mov
adc
cmp
and
flds
sbb
cmp
std
mov
sbb
xchg
xchg
test
jecxz
adc
fwait
scas
xchg
jno
and
mov
mov
dec
pop
mov
fcomps
cmpsb
test
iret
leave
loope
jge
mov
inc
fs
jns
int
call
push
or
mov
lcall
mov
push
shll
ret
ljmp
inc
or
dec
pop
jne
jg
aas
and
push
insb
outsl
call
shrl
hlt
imul
subb
inc
dec
mov
and
hlt
fidivrs
jns
lds
xor
repz
fidivl
adc
push
mov
inc
pop
jg
mov
call
inc
in
pop
pushf
icebp
call
sbb
imul
mov
stos
and
jp
divb
mov
shrl
aad
cltd
mov
outsl
mov
add
mov
mov
lahf
xchg
rcrb
in
cld
fs
mov
popf
dec
or
mov
push
pop
subb
fmull
sbb
cmp
out
push
sub
popf
cmp
bound
add
insb
pop
pop
cmp
xlat
rcr
cwtl
mov
rolb
pop
arpl
add
mov
fidivrl
push
popf
mov
xchg
mov
icebp
lds
jmp
jmp
mov
and
jge
push
js
mov
aad
aam
jae
cmp
stos
idivb
cld
mov
in
mov
out
add
fisttpll
mov
ret
jo
pop
mov
xor
add
and
dec
xchg
mov
test
add
xor
rol
pop
stos
out
sbb
inc
push
add
daa
jle
call
push
fmuls
lcallw
push
mov
or
jnp
sbb
popf
insb
mov
push
fdivrp
push
jb
mov
pop
dec
jge
pusha
push
adc
loopne
xchg
lods
aad
pusha
js
je
lahf
cmc
add
clc
add
ja
aad
lods
jp
mov
or
push
cmpsl
pushf
mov
iret
out
roll
xor
ja
dec
imul
adcl
add
pop
pop
mov
fdivrs
pop
cmp
je
pop
xorl
mov
jp
cmp
xlat
rolb
pop
jg
fcmovbe
out
xchg
sbb
sub
mov
pop
jb
or
xchg
xchg
fdivp
ja
dec
or
mov
inc
cmp
and
jb
pop
inc
ljmp
popa
or
pusha
mov
and
lret
jecxz
or
push
or
mov
mov
pop
and
in
push
inc
mov
jmp
pop
ds
mov
pop
hlt
outsl
mov
stc
popf
in
cmp
int
inc
mov
inc
or
pop
fsubl
jb
and
scas
push
add
insb
sbb
popf
addb
mov
data16
sbb
mov
mov
and
jo
push
inc
push
fiaddl
repnz
ret
outsb
loopne
cmp
sub
shlb
pop
jns
hlt
mov
lret
std
sbb
pop
pop
jl
mov
clc
gs
adc
je
jb
data16
rclb
mov
push
ret
push
jmp
popf
mov
jle
sbb
fxch
cmpsb
ljmp
inc
inc
push
jle
in
xchg
mov
data16
jmp
jp
imul
dec
data16
movsl
test
mov
je
sub
jecxz
lds
xor
gs
pop
inc
jno
xor
pop
lret
mov
pop
dec
xor
inc
in
scas
loopne
sbb
pop
xchg
pop
sub
in
push
dec
mov
mov
fs
push
or
nop
lods
repnz
sub
lret
cmp
ret
rcrb
mov
or
aam
loope
fisubrl
insb
sub
aad
or
sub
test
xlat
repnz
pop
adc
inc
stos
lods
sub
lods
cmpsb
rcrb
sti
sarb
sbb
inc
dec
ss
loopne
rol
mov
lods
mov
inc
dec
cmp
xor
stc
fidivrl
dec
inc
and
movsb
pop
ret
out
ljmp
insl
pop
xor
cmp
pop
mov
nop
inc
fcompl
sbb
inc
hlt
and
dec
imul
mov
mov
lock
jge
lcall
dec
sbb
mov
xchg
xorb
and
lds
ret
push
es
push
mov
hlt
mov
adc
dec
clc
jmp
icebp
out
orb
sub
inc
cmc
out
in
adcl
es
rcrb
mov
mov
ret
rcrl
es
push
das
mov
nop
jbe
dec
jbe
lea
cmpsb
xchg
xor
mov
imul
pop
addr16
sbb
or
aas
rolb
insl
add
mov
dec
out
mov
push
data16
jbe
dec
pop
jbe
mov
sbb
cmp
jb
lods
cmpsb
and
aam
sub
scas
popa
insb
inc
dec
mov
in
xor
adc
sbb
add
mov
subl
dec
push
jae
loop
sarl
lea
out
das
insl
mov
fildll
sub
jne
data16
mov
rorb
cmp
lods
ret
icebp
adc
imul
adc
pop
pop
dec
jb
inc
popf
mov
into
adc
loop
mov
push
cmp
pushf
mov
cmpsl
addb
or
sub
test
mov
inc
cs
jg
int
xchg
pushf
imul
in
sub
sbb
cmpsl
loope
jns
inc
jae
jae
arpl
sahf
in
mov
jecxz
mov
sub
add
dec
push
pop
mov
aas
and
push
sub
xor
lods
adc
arpl
adc
xchg
out
lock
jg
cmc
aad
cmp
sbb
inc
gs
insl
ja
out
mov
cmp
jp
daa
imul
jmp
push
xchg
loope
cmp
jl
adc
xchg
xorb
sti
jecxz
loopne
adc
mov
mov
mov
pop
push
adc
test
xchg
sub
pop
add
jns
cwtl
scas
mov
pop
adc
cmpsb
rcl
out
push
sub
pop
stos
ljmp
in
or
pop
cs
imul
sub
cmpsb
imul
xor
aad
sarl
sbb
nop
dec
sbb
sbb
repz
ds
outsb
jge
mov
and
mov
jp
push
sub
inc
out
cld
stos
sbb
sub
adc
in
dec
lock
rolb
int
call
xchg
jmp
dec
inc
add
pusha
outsb
fs
cld
lods
cmp
add
adc
fstpl
out
push
adc
push
movb
mov
jle
sbb
jnp
std
stc
adc
mov
mov
or
and
mov
imul
nop
outsb
jp
push
daa
xchg
xor
and
outsb
jle
pop
mov
popf
out
int3
hlt
dec
call
push
arpl
xchg
jo
into
ljmp
je
xchg
xchg
jge
je
mov
add
push
out
xchg
pushf
ret
push
sub
jb
fildll
das
out
popf
popf
mov
adc
or
idiv
fwait
mov
pop
ss
hlt
lock
lds
leave
into
out
cli
add
xor
ss
out
xor
inc
cmp
sbb
in
fdiv
nop
xor
cli
insl
pop
js
lret
ljmp
jmp
int
scas
mov
xchg
mov
pop
fnstenv
aam
test
push
jge
xchg
aam
out
and
add
gs
inc
inc
mov
add
mov
shrb
or
sub
dec
std
icebp
add
push
imul
adcb
add
in
and
test
test
fidivl
sbb
xchg
js
jp
and
addr16
imul
mov
data16
fadds
add
outsl
jbe
stos
hlt
mov
push
push
cmpb
jge
adc
mov
lahf
or
and
inc
in
popf
mov
jmp
push
xor
lods
xchg
xchg
mov
ja
jle
inc
push
gs
mov
cld
pop
and
inc
or
cmp
mov
dec
in
adc
addr16
mov
aam
sub
jb
sub
xchg
mov
sbb
and
dec
mov
scas
sbb
push
bound
adc
inc
movsb
arpl
lods
scas
ficomps
cmp
xor
insb
outsl
jp
lret
cmc
std
cltd
fldz
inc
pop
outsb
je
shll
mov
cld
jbe
aad
in
push
cwtl
movd
lds
out
insb
jns
push
mov
jl
and
or
push
out
aas
add
fwait
es
fadd
adc
dec
mov
imul
loope
mov
lahf
cmpsb
in
lock
gs
clc
mov
fmul
fldcw
and
daa
adc
insb
pop
xor
lea
mov
xor
shrl
enter
lcall
sahf
mov
lret
sub
rclb
adc
loope
xlat
fldl
ret
add
cld
orl
jae
xchg
or
pusha
ret
pop
fcomp
cmpsb
imul
inc
adc
dec
mov
lahf
and
or
stos
pop
fnstsw
push
mov
cli
into
sub
or
jbe
push
jmp
pushf
push
lock
mov
pop
pop
mov
movsl
movsb
aam
std
stc
int
adc
dec
inc
jle
xchg
cltd
je
les
sahf
cmp
jbe
xor
jne
bndldx
xor
cli
lahf
pop
idiv
jl
or
aam
and
test
push
divb
xor
cld
popf
popf
xchg
xchg
sahf
insl
push
push
es
add
mov
mov
mov
mov
je
out
mov
mov
in
in
pop
mov
push
dec
push
jle
add
test
inc
pop
push
cli
adc
pop
sbb
in
mov
movsb
int
push
xor
push
cmp
lods
in
mov
pusha
add
pop
cmp
xchg
xchg
cmpb
xchg
push
lods
mov
mov
and
ljmp
pop
jae
adc
mov
int3
imul
std
cli
sbb
fsubl
cld
mov
sbb
xchg
pop
add
mov
push
sub
pusha
jmp
int
xchg
inc
in
adc
ret
dec
mov
mov
push
jp
xlat
fucomip
test
pop
aas
pushf
push
movsb
out
xchg
sbb
xor
adc
jmp
jo
cwtl
psllw
fmulp
into
xor
outsl
lock
mov
int
aas
cmp
cmc
add
cwtl
pushf
shlb
sarl
dec
outsb
lretw
mov
mov
das
push
callw
or
pop
je
jg
sub
fisubl
lahf
insb
push
notb
and
inc
add
jecxz
adc
inc
gs
mov
jg
push
xor
pop
mov
stos
idivl
push
scas
ss
sbb
lods
aam
mov
add
add
cmp
mov
push
mov
mov
and
bound
std
movsl
clc
sar
clc
pop
lret
dec
cmp
daa
iret
aam
mov
andl
lods
ret
loopne
push
add
lods
xlat
lea
push
add
adcb
pushf
into
aad
jmp
flds
mov
cs
mov
and
stc
fst
pushf
mov
sbbb
sub
out
inc
cmp
add
sbb
mov
xorl
fmulp
fwait
or
adc
outsb
push
imul
daa
repnz
mov
pop
sub
push
insb
cmp
icebp
in
test
lret
sbb
add
call
push
push
push
jp
cmp
out
mov
push
test
pop
icebp
les
push
dec
inc
aas
or
mov
mov
outsl
or
pop
sub
push
sbb
fistpl
mov
or
pop
inc
push
mov
movsb
inc
or
lret
and
add
adc
lock
cltd
or
xorb
mov
hlt
test
sub
cli
jne
mov
scas
test
sub
push
test
nop
inc
sti
nop
leave
cs
and
fbstp
sub
dec
inc
in
xchg
xchg
stos
test
ret
out
std
pushf
push
bndldx
sbb
sub
arpl
push
add
jecxz
in
mov
dec
es
sub
in
jbe
fwait
test
push
cwtl
fadd
test
jl
pop
dec
in
ds
cld
call
cmpl
lock
loope
mov
movsl
push
pop
inc
and
scas
mov
fwait
jb
je
popf
stos
sbbb
dec
sti
int
out
inc
cmpsb
dec
pop
push
jbe
clc
dec
mov
jbe
insb
cld
jbe
mov
aas
js
imul
sbb
mov
xchg
icebp
fstps
xchg
pop
fadds
aas
in
push
adc
jg
add
xchg
xchg
aad
push
insl
mov
in
call
daa
jae
inc
xlat
push
mov
inc
add
adc
xchg
xchg
das
jmp
adc
sbb
xchg
sbbl
in
scas
and
adc
sar
btc
sbb
jg
gs
mov
pop
and
push
fmul
in
movsl
enter
mov
xchg
jmp
int3
jg
cmp
and
push
out
popa
mov
leave
cmp
mov
add
jl
daa
lcall
mov
mov
mov
push
or
lds
jne
test
mov
out
inc
rcrb
dec
lock
or
shrb
sbb
inc
push
out
lea
scas
sbb
sbb
out
xor
inc
mov
sbb
fs
jp
push
push
jnp
ss
fsubrp
test
xor
and
popa
imul
xchg
scas
ret
add
por
iret
mov
test
loop
xor
test
lods
jmp
add
fwait
jne
sub
pop
xchg
xchg
stos
or
xor
sub
adcb
outsl
into
stc
adc
lods
clc
jg
fidivrs
nop
jnp
loopne
les
xor
pop
into
out
cmp
in
lahf
mov
jno
push
pop
xchg
adc
call
lods
mov
rorl
fcoms
sbb
cmc
test
pop
pop
push
jl
aam
xchg
rorl
sbb
ds
rcrb
dec
test
mov
sub
sbb
shrl
mov
mov
sbb
fcomi
push
fistpl
push
mov
ljmp
cmpsb
cmpsb
cmp
mov
cwtl
icebp
std
stos
sub
scas
sub
addr16
sub
sarb
xchg
mov
jbe
test
pop
lea
shl
aam
adc
xor
sub
mov
xchg
xor
pop
jp,pt
lret
dec
out
pop
in
inc
dec
je
xchg
jp
jae
mov
stc
adc
nop
dec
jo
mov
jmp
xor
cmpsb
test
test
ret
shl
xchg
push
ljmp
xor
shrl
mov
imul
and
inc
mov
mov
or
lahf
cmpsb
mov
dec
sahf
cmpsl
fcmovb
cwtl
icebp
movsl
js
lods
add
mov
mov
sti
test
leave
test
mov
or
jl
mov
shll
int3
jns
cmpb
push
mov
fistps
pop
lahf
mov
nop
jle
jnp
adc
xor
in
nop
and
xlat
sti
inc
rorb
es
loop
mov
sbb
jb
repz
jmp
or
into
repz
jb
add
lahf
ret
and
aad
aaa
xor
scas
fs
mov
sbb
ja
jmp
mov
pushf
movb
push
jge
fstpt
out
cmp
ds
rcr
inc
mov
es
sub
popf
std
xchg
xor
fxch
movsl
out
pop
push
dec
jle
lock
cmpl
pop
jmp
sti
jmp
mov
add
mov
jbe
sti
dec
mov
sub
mov
icebp
call
xchg
loope
push
lds
push
outsb
mov
push
lds
mov
aas
mov
xor
mov
jno
cmp
call
or
mov
stos
mov
mov
in
add
out
push
je
sbb
dec
sarl
xor
dec
outsb
sbb
xchg
insb
push
adc
cmp
pop
mov
enter
out
lds
sub
nopl
or
mov
push
cmp
push
pop
mov
pop
pusha
push
or
loope
xor
dec
mov
jbe
lcall
loope
cmp
gs
out
les
fs
dec
das
jecxz
mov
loop
push
scas
xchg
sahf
mov
and
and
mov
jle
addr16
adc
cs
mov
pop
sti
rolb
test
inc
push
fbld
pop
sbb
mov
inc
mov
jo
mov
stos
pop
add
int3
and
cmp
mulb
inc
cmp
dec
movsb
nop
adc
shl
out
rclb
lret
aam
nop
loope
out
and
xchg
fnsave
sub
xor
dec
xchg
dec
cmp
jb
outsb
fwait
pop
sub
fistpl
into
nop
mov
dec
ja
notl
popa
fmull
ret
cltd
test
orl
sti
fmuls
sub
testb
fistpll
xchg
cs
js
jp
adc
jg
inc
cmp
orb
xchg
mov
mov
adc
and
xchg
fidivrs
inc
pop
sbb
dec
movsb
stc
scas
in
pop
in
push
pop
dec
and
popa
fadds
xchg
or
out
lods
mov
cmp
sub
mov
cmp
aaa
cmpsl
xor
mov
mov
and
popf
lock
bound
cmp
jmp
mov
dec
cmp
mov
in
out
js
mov
xor
adc
ret
stos
stc
push
ljmp
mov
imul
aam
xchg
enter
dec
mov
loop
test
aaa
outsb
jp
and
inc
mov
xchg
addl
jbe
push
ja
push
push
shrb
lahf
ucomiss
dec
cmp
or
nop
xchg
pusha
imul
lea
loop
xchg
pop
inc
jl
jg
push
mov
mov
inc
lods
jne
and
insb
sbb
dec
xchg
dec
mov
leave
int
mov
jno
sub
mov
add
gs
lods
sub
popf
xchg
mov
mov
imul
mov
outsl
mov
xor
push
jmp
in
stos
leave
pop
fldt
mov
ret
cmpsb
xchg
rolb
dec
mov
adc
jl
insl
and
jno
ljmp
xchg
pop
and
mov
mov
xor
hlt
push
addb
inc
bound
sahf
lods
adc
sub
enter
in
mov
jb
and
shrl
addl
out
mov
xchg
lahf
and
jno
test
repnz
sbb
sbb
in
aas
repnz
cltd
mov
pop
mov
mov
loope
sub
xchg
imul
mov
dec
jo
movsb
inc
add
jmp
and
mov
mov
jecxz
arpl
mov
test
xchg
scas
mov
mov
repnz
or
leave
or
dec
sbbl
push
int
popf
cli
or
div
sahf
aam
addb
rcrb
jbe
cmpsl
rolb
hlt
pop
pop
add
mov
jmp
jp
std
int
into
movsl
aaa
idivl
xor
out
js
cmp
rorl
push
icebp
stc
or
lret
jo
pusha
ljmp
pusha
lret
mov
cs
xor
pushf
stos
filds
js
cmpsb
and
jo
lds
xor
push
popf
jge
push
push
into
dec
fs
sbb
test
push
inc
andb
fistpll
pop
rcl
fcmovnbe
cmp
ljmp
mov
adc
sti
dec
and
fs
push
sub
mov
cld
dec
jp
lahf
fwait
outsb
aas
add
sbb
in
sub
push
xchg
fistpll
nop
iret
addl
sarb
int3
sahf
xchg
rcr
xchg
jecxz
loop
sub
jmp
cli
cmp
inc
inc
add
cmpsb
lahf
ss
sub
sbb
sahf
js
mov
or
pop
loopne
jge
mov
mov
flds
adc
mov
into
mov
cwtl
push
rcl
mov
subl
scas
cmp
lret
xchg
les
cmp
adc
sbb
lcall
jmp
xchg
pextrw
jo
sbb
mulb
mov
jns
mov
adc
jg
mov
sbb
push
jns
xchg
dec
jbe
jae
or
adc
xchg
inc
mov
push
fimuls
test
mov
test
in
call
mov
fptan
insb
dec
loop
cmpsb
movsl
push
movsb
mov
lods
pop
aam
shlb
data16
outsl
pop
out
fdivrl
inc
mov
push
add
inc
cwtl
cmp
popa
and
aam
fiadds
cmpsb
pop
push
lret
testb
jbe
arpl
repnz
stos
xor
div
loop
out
xchg
test
shll
push
stos
sahf
fimull
int3
push
mov
je
outsb
repnz
loopne
push
lock
cs
mov
shlb
bound
insl
sbb
cwtl
js
pop
bound
cli
lock
and
push
bound
xchg
adc
dec
dec
jmp
mov
mov
lret
pop
arpl
scas
sub
push
xor
out
push
dec
es
in
pusha
in
mov
mov
out
push
ret
test
in
std
and
mov
dec
repz
or
push
divb
or
mov
mov
fildll
xchg
xchg
inc
jbe
sbb
fmull
sbb
add
je
fdivrs
sbb
cmc
pop
dec
dec
outsb
push
mov
and
xor
or
packuswb
sub
addr16
mov
imul
fs
das
adcb
sbb
pop
lea
pushl
jle
mov
fimuls
mov
orb
xor
test
pop
inc
and
xor
sahf
in
or
sub
pushf
inc
pop
jno
rorb
popa
mov
pusha
mov
adc
push
xlat
jge
int3
rcl
push
pop
sbb
mov
loopne
pop
fisttpll
in
push
cmpsb
cld
cmp
jg
inc
inc
fisttps
in
jo
gs
insb
inc
inc
insb
popf
dec
xor
dec
outsb
leave
push
outsl
repnz
mov
mov
sub
inc
cli
mov
stos
jns
push
aad
sbb
xchg
xlat
jbe
pop
jo
add
daa
jle
sahf
sub
jne
arpl
aaa
jg
mov
in
lds
inc
or
mov
sti
into
or
imul
push
sub
test
les
repnz
leave
jb
fistpl
cmp
adc
fldcw
scas
aaa
popa
ss
or
testb
add
mov
push
mov
addr16
mov
cmp
cmp
and
xchg
test
or
jg
mov
scas
mov
xorl
lds
xor
xor
xchg
mov
xchg
sub
xchg
or
and
loop
xchg
and
clc
mov
pusha
push
adc
lds
rcrl
insl
cmpsl
lock
pop
faddl
lcall
leave
ret
and
les
or
xchg
adc
cmpsb
xchg
test
add
or
popf
pop
jae
push
jecxz
cmp
test
push
int
outsl
dec
je
sub
mov
ss
xor
adc
xor
pop
dec
mov
loop
stos
pop
fwait
fs
push
flds
mov
push
in
mov
and
jg
loopne
aaa
jo
rol
mov
lahf
pop
mov
and
sub
shll
cmp
pop
in
add
sub
add
mov
fs
mov
xchg
stos
push
popa
in
xchg
addr16
outsl
inc
rcrl
clc
jnp
jg
push
mov
jg
xchg
outsb
mov
adc
fwait
xor
in
mov
les
inc
mov
cmp
adc
clc
movsb
iret
lret
jbe
sub
sub
jo
cmp
push
test
mov
mov
jns
shll
movsb
add
fistpl
sub
cmovle
push
test
jb
add
xchg
idivl
xor
mov
xchg
xchg
rclb
insb
inc
jb
inc
push
cmp
dec
xor
mov
mov
cmp
popf
adc
bnd
dec
shrl
imul
inc
dec
movsb
dec
cld
xchg
push
push
testl
pop
push
mov
es
stos
clc
gs
mov
xchg
ficoms
mov
pop
adc
adc
mov
xchg
enter
jecxz
jmp
xchg
or
stc
mov
pop
sbb
inc
je
imul
pop
or
out
xchg
push
mov
jae
pop
fisubl
add
push
lcall
lret
fsub
mov
sahf
pushf
je
aaa
fmull
cld
push
inc
outsb
fucomi
mov
or
mov
or
jl
inc
or
divb
xchg
cmp
repnz
xchg
push
movsb
xchg
and
adc
into
icebp
in
xchg
les
add
jnp
and
inc
xchg
out
xchg
cmp
rcrb
push
mov
cld
push
sarb
push
loop
mov
out
addr16
mov
insb
mov
mov
mov
and
adc
hlt
xchg
push
fldl2t
xchg
popf
ret
outsb
hlt
or
fsts
scas
cli
lock
jo
adc
sub
cmp
sarl
and
inc
sub
aad
loop
or
fistpl
sbb
mov
stos
mov
add
stos
push
movsl
sub
stos
lock
inc
or
loope
lds
adc
sub
push
pop
lcall
push
mov
fdivrl
sub
repnz
jge
loope
and
push
movsb
sub
xchg
cld
xchg
add
js
mov
and
in
sbb
dec
push
pop
sbb
mov
pop
adc
mov
mov
xchg
xchg
popf
cld
and
fsubrs
and
std
into
hlt
out
rclb
push
ljmp
loop
sarl
subl
cli
adc
sahf
inc
pop
out
add
lods
inc
mov
push
in
xchg
adc
in
imul
cltd
adc
pop
jno
sti
mov
loop
jae
mov
les
and
mov
mov
lods
xchg
scas
pop
pop
adc
stos
pop
mov
sub
sbb
pop
cmpsl
in
push
out
cwtl
aaa
push
fsubp
rcrb
pop
addb
dec
inc
test
adc
mov
jne
icebp
sahf
cmp
dec
pop
shrl
scas
mov
add
dec
stos
push
push
add
sub
adc
or
das
sub
lea
fwait
mov
iret
imulb
cwtl
xchg
add
inc
loope
mov
push
out
repnz
inc
pop
and
or
std
jl
pop
or
xchg
pop
push
sub
shll
adc
shl
lcall
daa
iret
pop
out
out
lcall
faddp
add
ficoms
popf
cmp
stos
bound
out
xor
xchg
idivb
mov
stos
jmp
ljmp
dec
out
addr16
pop
dec
test
mov
fwait
sbb
xor
jmp
sub
dec
scas
pop
cmp
and
sbb
lods
cmp
pusha
outsb
out
mov
pop
imul
fadds
cli
add
xchg
push
or
mov
inc
in
ffreep
xor
fsubl
pop
pop
icebp
jbe
movsl
mov
mov
and
out
orb
daa
add
cli
add
dec
fldenv
movsb
js
inc
inc
std
lods
mov
lea
lret
test
das
fcompl
sub
cwtl
push
and
jmp
and
out
mov
add
sti
adc
add
cmp
adc
rolb
xchg
xor
push
ret
mov
add
ds
or
outsl
and
mov
lds
insl
and
xor
or
lahf
outsl
imul
cmc
dec
pop
ss
xchg
xor
fildl
jle
mov
mov
cmp
pop
call
je
xchg
add
rolb
or
dec
xchg
mov
mov
pop
push
or
movsl
mov
fsubl
shrb
jg
adc
dec
cltd
leave
mov
fldl
mov
inc
adc
out
dec
or
shll
fbstp
clc
dec
fsubrs
mov
xchg
rcrb
cmpsb
arpl
or
in
xchg
cmc
test
xlat
mov
cmp
fstps
rclb
mov
dec
or
idivb
in
fsubr
imul
shll
lea
aam
insb
dec
imul
xchg
sub
xor
and
and
or
mov
das
sub
outsb
out
inc
jb
jmp
mov
sbb
mov
and
sbb
push
cmp
mov
add
inc
rorl
jecxz
out
sbb
xor
sbb
sbb
dec
data16
mov
inc
cmpsl
dec
outsb
inc
loopne
les
mov
rcrb
cvtpi2ps
mov
xor
mov
xor
rorl
scas
mov
pop
ss
mov
popa
push
xchg
mov
inc
and
stos
test
les
imul
jns
pop
mov
mov
insl
xor
lcall
jl
pop
mov
fcoms
jae
xor
flds
add
stc
jae
scas
iret
mov
lcall
je
push
and
nop
popa
les
jge
mov
and
cli
cmc
sub
stos
pop
sbb
scas
jo
mov
mov
add
jmp
int
cmpsl
or
mov
xchg
int
daa
fcomps
or
mov
add
adc
ljmp
iret
mov
mov
sbb
int
imul
xchg
cmp
mov
mov
xor
insb
cmpsl
repz
cmp
push
jmp
xchg
ja
fcoml
and
mov
jge
subl
inc
lcall
aad
dec
or
push
out
dec
cmp
pop
jno
movsl
mov
fnstcw
or
mov
cltd
pop
mov
pop
xchg
push
add
push
cmp
stos
lock
push
sbb
and
fimuls
jmp
stc
rclb
lods
adc
aas
or
xor
ss
movsb
lods
sub
mov
sub
out
or
stos
mov
sub
and
testl
mov
aaa
idiv
fnsave
xor
jo
push
clc
add
shr
add
jnp
xor
jno
fsubrl
jbe
andl
mov
jp
pop
jecxz
movsl
idivl
and
fstpt
push
cwtl
jnp
or
in
repnz
lds
loopne
dec
cmp
lahf
sbb
aas
int3
push
rclb
mov
push
sbb
adc
cld
das
rcll
mov
xchg
push
inc
cltd
scas
frstor
lea
and
or
je
push
hlt
insb
lods
pushf
imul
subl
pop
pop
ljmp
in
sub
inc
imul
pop
popf
clc
out
sub
test
pcmpgtb
mov
push
rolb
add
xchg
filds
adc
xor
xchg
shll
and
sbb
mov
js
cltd
or
cli
pusha
mov
sbb
dec
in
out
lret
dec
push
mov
mov
mov
mov
jo
dec
mov
mov
add
mov
aaa
add
loope
mov
enter
dec
push
mov
sub
stos
stc
push
add
jne,pt
lcall
pop
mov
incl
cltd
ss
stos
dec
out
xchg
mov
mov
pop
inc
hlt
stc
ds
test
cmp
mov
or
call
push
add
scas
adc
popl
data16
mov
sti
cmp
scas
out
and
adc
iret
fsubl
aad
imul
aad
jo
add
pop
lea
jb
inc
nop
or
xchg
cmp
out
lea
mov
lahf
cwtl
jne
ja
cmp
clc
andb
push
in
call
pop
and
xorb
dec
lods
cmc
push
mov
jns
faddl
push
jg
cmp
push
add
sub
popf
test
testl
inc
xchg
jg
adc
push
xchg
adc
mov
mov
aad
mov
out
std
nop
xor
cmpsb
pop
mov
add
filds
loopne
lcall
add
push
stc
lods
lcall
sbb
dec
sbb
lods
int
cmp
mov
mov
aas
lods
inc
stos
jmp
inc
cmp
inc
and
cmp
dec
pusha
test
lea
ljmp
bound
cli
mov
push
ds
sub
cmc
mov
jp
xorl
call
loope
rorl
loop
sbb
out
push
and
add
out
push
mov
in
or
jne
jnp
cltd
cltd
test
xor
icebp
ret
mov
lcall
push
mov
dec
gs
stos
dec
or
push
das
jecxz
jge
cmp
in
cmpsb
in
adc
xchg
int3
aam
push
mov
jnp
ja
add
push
or
stos
aad
sub
cltd
das
xor
mov
xchg
push
mov
scas
jne
pop
dec
jno
pop
push
out
mov
jbe
push
cmc
out
fs
cmp
xor
lods
xlat
repz
pop
ss
inc
fstps
pop
cld
add
sub
sti
mov
xchg
imul
pop
js
mov
inc
jecxz
sub
jno
sub
lret
pop
and
mov
out
xor
push
add
dec
xchg
fdivl
jg
std
sub
out
int
or
imul
incb
cmpsb
jo
stos
insl
lcall
push
pop
adc
jmp
jns
xor
push
lods
or
lret
sbb
movsl
lret
pop
mov
popf
sub
inc
mov
pop
ficompl
add
jb
sbb
popa
aad
ljmp
and
aas
push
adc
ja
mov
push
mov
or
pop
pop
bound
or
mov
cli
pop
adc
pop
pop
iret
inc
xchg
xchg
loop
dec
xchg
add
jo
jne
pushf
adc
stos
pushf
push
bound
bound
cmp
push
xor
cmc
iret
sarb
jle
inc
mov
movlps
std
fistl
sbb
iret
das
pushf
jecxz
push
gs
arpl
xchg
mov
mov
cmp
lret
inc
push
inc
scas
ljmp
pop
in
dec
mov
pop
bound
test
cli
jae
outsb
gs
inc
dec
add
movsl
mov
jp
cmp
pop
std
xchg
fcompl
test
cmp
or
loop
jg
test
and
lret
les
test
cwtl
xor
dec
or
dec
sbb
fwait
mov
repz
jb
pusha
add
ds
aaa
adc
jb
ss
ljmp
and
cmp
lret
ljmp
push
cmp
pop
pop
out
pop
adc
rcll
or
pop
addr16
sbb
push
movsl
hlt
dec
adc
or
cmpsb
loopne
and
add
inc
pop
int3
pop
mov
sub
mov
lahf
imul
xchg
mov
and
dec
out
push
popa
movsb
lods
insl
push
jle
mov
inc
cmp
mov
mov
cmpsb
jno
pop
sub
xchg
sahf
adcl
mov
loopne
push
movsb
test
icebp
sub
mov
test
enter
xor
cmpsb
movsl
add
jmp
mov
pushf
out
in
sub
inc
movsl
es
mov
mov
and
mov
add
mov
push
dec
adc
jns
pop
js
scas
xor
aas
jle
scas
fwait
push
sarb
lcall
jbe
mov
fwait
push
jnp
nop
sbb
nop
mov
dec
popa
out
push
xorl
fs
mov
fs
cwtl
out
gs
push
mov
int
stos
sub
lods
scas
jl
pushf
xchg
testl
ljmp
mov
push
push
fsubrl
push
fwait
inc
daa
lret
and
lods
mov
sub
cld
jp
mov
jg
fwait
stc
popa
movntq
ret
jge
inc
pop
push
les
mov
xchg
arpl
scas
cmc
daa
repz
xor
sar
fists
les
es
dec
sbb
mov
dec
push
gs
movsl
xchg
adc
mov
adc
and
xchg
cli
movsl
add
arpl
das
pop
cmc
add
leave
mov
lods
push
cmpsl
aas
sbb
filds
jb
add
cmp
imul
sti
scas
xor
pop
movsb
sbb
pop
fdivs
iret
jl
xor
outsb
test
mov
inc
movsl
ficoms
mov
cmp
nop
cmpsl
nop
daa
sbbb
test
js
out
pop
add
jno
cmp
sub
add
and
sti
sub
dec
fs
push
cltd
cmp
insb
sub
or
mov
pop
or
dec
add
sub
mov
dec
mov
std
mov
push
insl
ds
xor
adc
dec
ret
mov
test
dec
fidivrs
mov
clc
mov
loope
jle
fisttpll
pop
xor
mov
sbb
int3
imul
cmpsl
mov
or
inc
out
scas
xchg
mov
mov
and
mov
inc
clc
dec
jmp
mov
shlb
cmp
mov
gs
inc
jg
lock
ja
cltd
ficoms
imul
jmp
push
test
mov
sub
stos
shl
arpl
and
sti
fwait
sub
shl
mov
cmp
iret
popa
inc
add
imul
pop
sbb
mov
and
ljmp
repz
jle
aam
xchg
pop
mov
xchg
sub
repz
add
adc
lds
sbb
sarb
cmp
movsl
or
idivl
lret
and
cmp
push
cmc
fimull
mov
or
xchg
jmp
jmp
test
rolb
cmp
mov
push
mov
int
enter
ffree
dec
push
lea
sahf
fildl
shll
dec
ja
dec
inc
ljmp
mov
popf
cmpsl
outsb
subb
roll
mov
jnp
cld
ret
ds
mov
cmp
adc
inc
adc
sbb
jne
cltd
pop
sbb
rcrb
jb
stos
nop
xlat
fwait
adc
xchg
xor
mov
xchg
dec
mov
enter
mov
ret
arpl
sub
add
xchg
repz
pushf
ret
lahf
mov
sahf
sbb
jmp
mov
js
push
and
out
andb
jle
jge
lock
jle
fs
jmp
dec
dec
mov
push
mov
mov
jmp
jmp
setge
incl
sbb
pop
stos
fnstsw
pop
adc
or
scas
mov
xor
sti
mov
pop
jbe
mov
xlat
mov
mov
je
into
sub
or
sbb
imulb
dec
stc
stos
jb
mov
ljmp
push
jl
inc
xor
dec
mov
out
push
push
stos
add
das
cmpsl
mov
and
inc
xor
fwait
adc
xchg
in
mov
dec
int3
sub
push
pop
nop
push
lret
adc
push
les
cmp
ret
mov
lods
sahf
push
in
xor
jne
jmp
xchg
js
or
test
ljmp
push
inc
and
imul
dec
daa
dec
adc
movsl
mov
xor
jge
mov
stos
inc
xchg
mov
pop
add
sahf
loope
lods
xchg
jb
sarb
mov
push
mov
mov
stos
cltd
dec
imul
push
imul
add
mov
das
iret
imul
cmp
mov
inc
cmp
inc
mov
inc
pop
xor
dec
sub
int3
scas
nop
pop
aaa
stos
pop
mov
insl
cli
inc
xchg
sub
or
and
inc
or
or
inc
sub
insb
push
jecxz
jmp
adc
sub
sahf
dec
add
adc
cmp
lods
movsl
test
jo
test
arpl
add
xorb
push
lea
into
add
cmp
pop
ds
sbb
mov
xchg
xor
mov
stos
flds
into
clc
test
aam
mov
cltd
movsb
in
sub
push
int3
movsl
inc
enter
adcb
jecxz
stos
call
out
mov
hlt
adc
cmp
ret
repnz
inc
dec
push
jg
push
push
jl
push
and
or
mov
adc
mov
pushf
movsb
xchg
outsl
inc
inc
insb
jno
rorl
mov
or
jne
cmpb
jl
enter
ds
in
adc
lcall
out
jmp
xchg
jecxz
mov
std
repz
jbe
push
aad
gs
and
lahf
xlat
rcrb
xchg
cmp
push
sbb
es
mov
imul
leave
push
lea
scas
inc
loop
stc
jne
icebp
inc
imul
dec
mov
mov
insb
cmc
popa
aaa
ret
les
sub
xchg
orl
int
push
nop
mov
jne
mov
shll
je
push
aaa
sbb
mov
loopne
imul
cwtl
test
mov
xor
and
std
sbb
mov
in
mov
mov
and
out
cmp
mov
mov
adc
mov
clc
aad
gs
frstor
dec
loopne
bound
mov
xchg
xor
fs
mov
xchg
rorl
stos
mov
sahf
dec
in
xor
pusha
sub
fstpt
pop
add
mov
out
adc
dec
inc
test
repz
sbb
cmp
push
test
arpl
lds
xchg
jno
jb
jne
jno
dec
push
popf
sub
pop
mov
adc
mov
lods
pop
outsl
sbb
lcall
ret
scas
push
xor
lret
push
add
jno
cmp
mov
testl
ja
outsb
js
movsl
jnp
cmp
xor
pop
and
jo
cli
loope
mov
jns
or
xor
cmp
mov
pop
scas
xchg
test
xor
pushf
sbb
adc
pop
cmp
push
out
dec
push
pop
mov
insb
inc
loop
imul
jbe
out
sarl
push
mov
cltd
testb
dec
pop
cwtl
jp
aad
pop
loope
dec
jnp
loop
pusha
sahf
pop
push
cld
orb
xlat
ss
xchg
rcr
mov
push
mov
adc
pop
std
add
push
dec
lock
and
pushf
cs
jmp
xor
cmp
xchg
out
inc
pop
repz
stos
aad
dec
push
cmc
inc
andl
sub
fs
and
popa
inc
aam
inc
scas
rolb
fdivs
dec
outsb
add
sub
in
pop
pop
pop
scas
jo
sahf
repz
in
aas
cmpxchg
enter
movsb
sbbl
les
jmp
jg
jp
adcb
xor
push
sbb
jbe
and
dec
test
lret
in
pop
mov
mov
out
cmpsl
mov
test
ds
mov
xchg
mov
jb
pop
sub
cld
aaa
fcomps
jno
rcr
cltd
das
leave
std
sbb
cmp
std
sbb
int
or
mov
or
daa
repz
sahf
mov
cmc
out
inc
mov
dec
jl
sbb
imul
mov
mov
cmp
test
loop
mov
pop
add
dec
xchg
movsl
in
pop
scas
inc
dec
pop
stc
sbb
cmp
lahf
or
xchg
push
add
mov
dec
rcr
cmpsl
imul
bswap
push
nop
jo
mov
loop
cs
test
inc
jmp
cld
lock
and
push
divb
into
jmp
cmp
ret
push
jnp
push
mov
or
aas
xchg
push
inc
iret
xlat
scas
mov
mov
mov
pop
jl
into
jns
ret
popl
and
call
mov
sub
mov
stc
xchg
jno
gs
mov
hlt
lcall
mov
or
lds
or
aas
incl
pop
test
ja
out
out
sbb
shll
test
mov
or
dec
into
stos
and
fcomps
xchg
mov
test
or
push
cmp
cmp
or
add
xor
mov
add
js
aam
das
or
inc
rol
jmp
icebp
iret
cmp
inc
jg
and
pop
push
call
stc
inc
arpl
clc
cmpsl
mov
mov
or
dec
mov
test
sbb
test
and
inc
sahf
xor
out
and
and
and
test
push
cmc
mov
js
out
repz
repz
cmp
out
inc
cli
pop
insl
ja
dec
scas
xchg
xchg
mov
aad
and
clc
insl
arpl
mov
push
movsl
push
lahf
mov
xlat
insl
jb
push
addr16
incl
sarl
fs
dec
mov
mov
fcomps
jl
inc
sti
sahf
pusha
test
sbb
scas
lahf
mov
cmp
jecxz
pop
out
mov
cmpsl
stos
jmpw
addr16
jbe
outsl
dec
test
cmp
sub
sub
data16
mov
jg
inc
mov
and
xor
xlat
cmp
imul
ficoml
test
mov
fistpl
adc
mov
mov
fiaddl
xchg
cs
fimuls
add
scas
mov
sub
aas
mov
inc
lret
out
xor
scas
cmp
mov
aad
push
in
pop
mov
sbb
scas
jne
sub
lods
out
lods
int
cmpsb
xor
jae
push
stos
mov
mov
mov
std
mov
add
sbb
mov
nop
mov
mov
sbb
pop
daa
jg
or
add
insb
shrl
xchg
sub
pop
mov
jmp
mov
mov
fistpl
or
mov
jnp
inc
add
add
mov
mov
fmuls
mov
xchg
inc
mov
das
pop
add
xor
call
sbb
push
fld
mov
push
call
xor
icebp
das
imul
in
mov
sub
out
es
fs
fwait
and
std
jnp
adc
outsb
nop
inc
in
ficomps
mov
pop
ret
loope
mov
xchg
jo
mov
adc
dec
jecxz
xor
scas
ja
arpl
outsb
icebp
adc
scas
sub
rcrl
dec
jo
adc
movsl
mov
mov
ret
daa
daa
mov
cmpsl
jae
adc
popa
xchg
stos
push
pop
mov
and
pop
out
mov
cmp
lahf
dec
popa
add
mov
dec
mov
sub
lahf
sub
lods
stc
aad
inc
mov
jl
inc
pop
iret
call
sbb
dec
push
pop
es
jmp
ret
pop
insb
xchg
jp
mov
sub
leave
dec
insb
in
outsl
adc
mov
mov
xchg
cmp
je
in
and
mov
icebp
xchg
fisubl
or
push
cmp
std
push
hlt
lods
xchg
mov
adcl
cli
sbb
inc
adc
adc
cmc
dec
and
shrl
jge
jo
sub
mov
mov
xor
nop
push
fwait
jb
mov
js
dec
xchg
imul
lock
ljmp
in
sarb
push
stos
mov
jbe
inc
jecxz
jl
and
inc
cltd
hlt
sub
cmp
js
out
xchg
jbe
xchg
pop
add
lahf
popf
jbe
jmp
sub
pop
aaa
jo
inc
inc
xchg
cmpsl
sbb
repz
adc
pusha
stos
xor
pop
mov
idivl
lret
mov
and
lock
lods
or
push
popa
fldl
cli
sub
dec
mov
cmp
push
push
xor
cltd
int3
clc
xchg
xlat
mov
leave
jnp
ds
cmp
outsl
adc
push
or
jno
clc
add
nop
in
repnz
mov
das
inc
idivb
notl
sbb
lahf
lods
inc
add
fists
jmp
inc
push
rorl
xchg
sub
aad
adc
add
nop
inc
repnz
push
xchg
add
inc
pop
inc
rcll
out
mov
filds
aas
test
iret
mov
in
fists
lds
cmp
pushf
push
movsl
std
xor
xchg
xchg
cmp
mov
pushf
subl
xor
mov
popf
sbb
call
imul
xor
jbe
loop
lea
fidivrl
and
dec
in
push
call
jp
mov
into
jns
imul
xor
cmp
push
cltd
lods
fsubrl
imul
pop
ljmp
cmpsl
cmpsb
outsb
loopne
cmp
cmpsl
popa
sbb
std
mov
mov
pop
sub
shrl
jp
jl
in
ja
xlat
mov
sub
leave
mov
jb
pop
pusha
and
jg
xchg
mov
les
mov
add
in
je
jecxz
or
adc
in
dec
movsl
xchg
daa
sub
adc
mov
enter
clc
add
lea
shll
lods
popf
dec
sub
rolb
stos
lcall
jp
dec
add
out
mov
cmp
mov
mov
jmp
lcall
cmpsb
xor
inc
popa
mov
xchg
loopne
lea
mov
insb
popa
rcrb
jl
mov
xchg
je
dec
inc
push
xchg
enter
sbb
sub
pop
rcll
sub
lods
arpl
call
insb
mov
dec
mov
pop
add
xchg
les
lock
jb
aaa
dec
and
pop
mov
jl
shlb
push
fbstp
ja
sub
add
insb
int
jle
inc
testl
popf
dec
imul
sbb
les
lahf
mov
je
lcall
xchg
inc
add
fstpt
lea
push
iret
adcb
pop
jmp
push
adcl
scas
mov
lea
and
jae
pop
notl
mov
inc
out
mov
mov
stos
or
xor
jge
call
mov
imul
mov
cmp
movsl
mov
popa
inc
inc
jge
jne
icebp
dec
icebp
icebp
shll
push
out
cmp
inc
cwtl
insl
shlb
cld
xor
scas
sbbl
int
bound
stc
clc
lahf
bound
gs
sbb
movl
cmp
popf
sti
ja
cmp
out
cmp
jo,pn
inc
and
cld
inc
insb
dec
mov
mov
int
hlt
lahf
rcll
mov
cmp
adc
lods
pop
sbb
push
mov
adc
mov
sub
xchg
out
into
adc
cmp
mov
jns
and
dec
fcom
aaa
pushf
adc
pop
xor
inc
cmp
xchg
add
test
jb
inc
int
movsb
mov
sub
cmpl
dec
pop
push
adc
add
jmp
jb
loop
stos
cmp
bound
inc
test
jbe
sub
test
xchg
add
incl
aaa
in
nop
mov
mov
dec
sub
cltd
sahf
inc
fistpl
sub
paddusw
inc
sar
sub
stos
mov
filds
loopne
test
add
xchg
scas
aam
cmpsb
in
sbb
shll
int3
jecxz
cltd
outsb
mov
enter
rcr
test
sar
mov
push
lret
jge
lock
fadds
sbb
les
mov
inc
add
mov
pop
and
shlb
dec
test
call
or
ljmp
das
jg
add
leave
fwait
rcpps
mov
cmp
mov
out
mov
xchg
xchg
daa
and
mov
jge
push
enter
sub
ret
jns
sti
dec
in
cltd
sub
wbinvd
call
ret
jbe
flds
jp
push
jp
loopne
cmpsl
pop
aam
mov
mov
mul
add
loope
mov
adc
mov
push
push
int3
cmpsl
test
nopl
jl
pop
sbb
mov
into
pop
fcos
pop
scas
jg
ficoml
lcall
cmp
mov
call
fldcw
pop
lods
and
mov
mov
fisubl
cmp
fldcw
popf
out
sub
jno
add
rclb
icebp
js
pop
inc
les
or
imul
loop
movsl
and
andl
and
cmpsb
hlt
cmc
add
jb
daa
fimull
pop
cmpsl
add
push
nop
sti
ret
add
adc
in
enter
pop
sub
insb
jne
lock
xchg
out
jns
fsub
push
cld
sarb
lret
push
jno
dec
stos
jp
aam
mov
jnp
mov
jbe
test
sub
into
test
sbb
xor
jg
out
inc
mov
xchg
inc
jnp
sbb
mov
rolb
in
dec
pop
jle
cmp
in
out
jae
insb
xchg
push
mov
dec
jl
jb
imul
pusha
pusha
fidivl
mov
mov
jge
sbb
and
jno
out
fcmovnbe
shlb
popa
test
stc
add
pop
cld
push
mov
dec
pusha
movsl
and
fsub
jae
sbb
notb
inc
loope
aas
scas
xchg
push
fs
jns
std
mov
xor
xor
stos
scas
and
mov
mov
test
inc
imul
fwait
nop
push
shl
insl
ret
adc
paddd
add
lods
repz
inc
dec
faddl
push
sub
sbb
xor
mov
shl
mov
leave
test
xchg
cs
or
movsb
sub
repz
sub
outsl
das
aas
inc
xchg
lds
inc
or
cmp
jnp
and
ljmp
movsb
jae
jg
pop
cmp
mov
xor
mov
stos
xor
ds
jbe
jmp
push
les
xchg
mov
push
or
sbb
lea
test
add
mov
add
cmp
push
jmp
mov
or
lds
aad
hlt
sub
mov
fs
add
cmp
jp,pn
cltd
mov
int
mov
movsb
stc
dec
into
dec
es
mov
scas
stc
mov
pop
mov
scas
adc
iret
jo
rcrl
cmp
icebp
cmp
push
mov
xor
ret
repz
pop
mov
js
push
push
lret
jmp
sub
push
test
das
pop
adc
pop
daa
and
fists
dec
adc
adc
loope
push
outsl
cmpsl
xchg
fcompl
and
aad
push
sbb
adc
sbb
xchg
sar
outsl
mov
cmp
lods
add
adc
ds
out
into
cltd
cmpsb
pop
out
ljmp
jecxz
xor
je
movsl
fdivr
cmp
adc
movsl
push
rolb
ljmp
mov
and
test
pop
cmp
sbb
rcl
add
jb
subb
mov
pop
fildll
push
dec
xchg
or
cld
push
xor
pop
push
or
aaa
xor
mov
popa
fldl
xor
xorb
rcll
test
dec
cmpsl
roll
cmp
pop
fwait
jle
ljmp
or
mov
push
lahf
dec
fwait
push
or
mov
gs
repnz
sbb
aaa
mov
enter
cmp
in
sbb
sub
dec
rcll
mulb
cmpb
lret
popa
pusha
das
cmp
ljmp
dec
xchg
imul
imul
push
xchg
int
push
loopne
aas
adcl
cli
arpl
mov
hlt
adc
rol
pop
call
pop
out
add
shrb
stos
push
in
jns
das
sarb
xor
inc
sbb
sub
pop
sub
sub
and
out
icebp
pushf
xor
mov
and
cmpsb
xor
inc
es
push
arpl
mov
dec
adc
loop
pop
push
pop
mov
dec
aad
fmull
scas
mov
dec
lea
jle
out
sub
xchg
mov
sub
adc
xor
jge
mov
arpl
push
les
mov
pop
lds
push
push
rorb
sub
jle
hlt
push
movsl
jae
xchg
fildl
ljmp
sub
push
xorb
out
sub
jle
jl
fmuls
lods
mul
fistps
push
adcl
pop
cmp
mov
fcoml
loope
lcall
mov
xor
jge
shlb
out
sbb
push
mull
bound
lods
in
jmp
cmp
sbb
mov
jae
or
jb
stos
es
repz
fisttpll
sti
sbb
xchg
inc
ficoms
stc
jbe
mov
aaa
pop
sbb
out
pop
pop
dec
test
nop
jmp
xor
adc
inc
adc
mov
inc
into
outsb
hlt
push
mulb
dec
mov
enter
inc
mov
push
out
and
or
or
test
cmp
or
push
nop
mov
je
cli
pop
lods
sub
fsts
adc
mov
data16
insb
sbb
xchg
ret
mov
fmuls
push
jno
adc
adc
sbb
dec
std
out
xor
bound
dec
shlb
push
clc
mov
rcrl
fxtract
push
jg
stos
mov
insb
nop
push
sub
push
jp
sub
fstl
xor
xor
ret
xchg
lahf
mov
sub
mov
or
mov
in
jl
test
and
inc
in
js
xor
adc
aam
outsl
pusha
lea
outsl
fstpl
mov
stc
faddl
aam
mov
test
xchg
repz
jne
jp
or
and
test
cs
pushf
scas
jle
into
xor
xchg
inc
fstpl
fidivl
inc
jp
mov
mov
mov
inc
jne
scas
orb
jge
jl
aam
jb
jb
roll
sbb
add
pop
add
xchg
sub
mov
rorl
sbb
or
std
or
inc
xchg
adc
mov
inc
idivb
inc
mov
sbb
xchg
in
add
push
mov
inc
test
jl
loopne
or
jg
jne
jg
adc
lahf
std
mov
into
jecxz
call
add
add
jns
dec
xchg
mov
nop
orb
add
xor
insb
dec
outsb
sahf
jg
fisubs
push
outsl
out
mov
xchg
icebp
icebp
inc
push
popa
pop
pop
xor
jp
mov
int3
arpl
out
std
jb
add
mov
inc
mov
pop
cmp
pop
sub
ja
rcrl
jno
in
test
or
push
inc
movsl
daa
stos
fisttps
les
lcall
or
push
ret
loopne
mov
cltd
cmp
dec
out
ja
xchg
ficoms
addr16
xchg
pop
ret
js
or
test
outsb
hlt
jecxz
dec
cmp
mov
adc
insb
push
add
cwtl
sub
inc
out
mov
test
mov
dec
adc
sub
test
lds
mov
aas
loop
lea
int3
addl
pop
imul
orl
jno
xchg
enter
xor
mov
lea
jecxz
insb
inc
pop
out
sbb
or
sub
pop
movsb
xchg
mov
mov
call
or
mov
cmp
mov
lret
add
add
mov
hlt
xchg
mov
mov
lret
and
push
and
daa
mov
call
push
js
xchg
adc
or
mov
cmp
jge
mov
xchg
mov
pushf
stos
sbb
and
pop
cs
inc
ficomps
xor
nop
dec
mov
sbb
mov
hlt
divl
adc
add
addl
orl
xchg
adc
push
mov
push
or
jb
jle
jbe
jne
movsl
dec
call
jecxz
jle
test
mov
in
and
pop
sbb
fstps
xor
in
xlat
or
es
jnp
test
dec
add
mov
push
dec
xchg
out
dec
jmp
cmpsb
aad
pop
push
stos
mov
dec
lret
insb
scas
dec
mov
jnp
outsb
rol
fcompl
jmp
or
pop
add
pop
jge
jl
cli
lods
push
mov
mov
icebp
iret
xchg
stos
jl
lea
jp
mov
xor
ficoms
iret
push
outsb
xor
inc
or
pusha
in
int
shl
stos
and
inc
jmp
popa
mov
cmp
fisubrl
arpl
dec
hlt
push
xor
mov
ja
outsb
fcomps
sub
je
shr
std
in
jno
je
fstps
sub
mov
push
fdivrs
push
add
or
pop
inc
sub
cmp
mov
xor
js
or
lea
add
jmp
fisttpl
mov
adc
fldenv
pop
aad
or
sbb
push
jne
mov
push
and
adc
int3
mov
fwait
sub
mov
push
enter
xchg
sbb
push
add
mov
cmp
arpl
mov
pop
xchg
aas
push
mull
push
mov
movsb
jl
lea
sbb
push
jle
dec
js
enter
sbb
and
test
subl
lcall
mov
jecxz
dec
xor
push
js
xor
insl
mov
mov
pop
xchg
cmp
test
mov
sub
pop
xchg
dec
dec
dec
xchg
call
mov
aaa
shrb
add
or
pop
mov
sub
stos
and
inc
xchg
mov
mov
data16
inc
out
in
mov
pop
sub
xor
xchg
aad
lea
sbb
pop
incb
jge
sub
stc
sbb
dec
sahf
mov
stos
sbb
mov
gs
fbstp
jns
addr16
add
push
mov
xor
cmpb
int3
adc
sbb
shrb
pop
repz
popa
adc
cli
jne
dec
pop
pop
in
sub
or
xlat
fbstp
shll
sbb
mov
mov
sub
test
rorb
mov
or
push
lock
push
iret
or
mov
dec
push
dec
aas
in
imul
mov
push
les
dec
mov
mov
clc
and
sarb
cmpsl
orl
out
psubb
push
scas
jmp
or
sbb
rcrl
repnz
ja
mov
pop
ret
jb
dec
gs
cmp
jmp
int3
xchg
stos
stc
sbb
ret
outsb
mov
and
filds
xor
popa
popf
dec
sbb
dec
loopne
int
jno
push
pop
in
push
rcrb
test
mov
dec
jp
mov
add
divl
mov
jns
mov
mov
jmp
jecxz
ret
cmp
pop
lods
andl
jb
incb
in
adcl
mov
adc
xchg
xor
subl
movsl
leave
push
cmp
sbb
scas
mov
sbb
fs
fwait
jbe
mov
sti
imul
adc
inc
push
xchg
ljmpw
out
jbe
xor
jp
lock
cmc
push
mov
mov
iret
cmp
es
cmp
xor
cld
jl
js
pop
mov
push
pop
cmp
pop
mov
mov
sbb
cmp
mov
dec
fsubs
imul
mov
xor
fs
pop
or
mov
inc
adc
orps
out
xchg
and
xchg
lds
ud0
add
es
ret
mov
add
jb
negl
cmp
test
jbe
xor
test
mov
mov
pop
jbe
sub
mov
mov
pusha
ja
dec
lds
jns
cltd
outsb
push
xchg
loopne
dec
mov
xlat
cs
loopne
dec
pop
and
push
jae
or
mull
mov
xor
mov
jnp
cmp
arpl
inc
cmpb
inc
orl
popf
lods
in
pop
adc
adc
cmp
out
and
pop
mov
adc
push
xchg
sub
push
lcall
inc
jne
push
pop
into
add
scas
jbe
std
mov
ret
jo
leave
test
xor
call
and
enter
add
adc
fmuls
jp
cli
fyl2xp1
jae
cmp
out
mov
daa
mov
les
lahf
pop
mov
xor
sub
pop
es
faddl
jg
mov
jne
jle
jbe
mov
es
sub
lret
xchg
jp
inc
daa
xor
shll
push
jo
push
or
lds
push
sbb
push
pop
jno
int
stos
scas
and
xlat
add
xchg
les
mov
outsl
lods
in
sub
xor
cld
out
xchg
std
out
jl
push
fs
mov
mov
in
xchg
dec
inc
jge
push
adc
or
stos
push
cmp
push
lcall
aas
mov
movsb
in
dec
pop
dec
cmp
cmpsb
jne
ret
jmp
lcall
pop
nop
push
and
out
xchg
std
aaa
test
outsl
sbb
push
sub
sbb
jno
sbb
mov
xor
inc
fucomi
ja
xor
jg
push
std
mov
mov
push
push
xchg
cld
rcrl
cmp
les
call
dec
imul
ss
imull
rcrl
add
jle
out
pop
jmp
sbb
arpl
push
mov
push
in
cmp
out
repnz
std
sub
push
xchg
test
jbe
icebp
out
cmc
pop
stc
xchg
mov
mov
stos
cld
cld
rolb
insb
push
adc
cmp
push
mov
cmp
dec
pusha
add
ss
int
adc
pop
push
cmpsb
lds
out
nop
sub
popa
add
add
idivl
aaa
mov
mov
fsts
push
sub
inc
jo
aad
jle
mov
loopne
std
aad
adc
js
out
xor
mov
jnp
in
mov
popf
mov
cmp
and
mov
les
xor
sub
ret
subl
into
in
ljmp
adc
adc
adc
in
pushf
outsl
adc
mov
pusha
cmp
idivb
fidivs
mov
mov
pushf
sbb
inc
enter
cli
mov
arpl
and
jp
popw
inc
pop
ret
and
fdiv
mov
dec
cs
repz
ss
lret
adc
clc
lret
mov
mov
mov
dec
mov
add
pop
xor
mov
aam
dec
or
cwtl
push
in
pop
lock
adc
xchg
out
imul
scas
idivb
jbe
or
jle
sarl
push
adc
cld
xor
or
xchg
xor
cmp
add
stc
data16
adc
jmp
jb
in
mov
jae
pop
and
xchg
jge
sbb
jne
ret
lods
adc
pop
add
inc
clc
mov
cli
in
imul
popf
mov
mov
mov
mov
cmp
addl
test
cmp
xchg
sub
pop
sarl
hlt
mov
popa
mov
jne
jl
adc
insl
sbb
pusha
ret
xor
mov
cld
xchg
loope
scas
xor
test
fsubrs
in
imul
cmp
add
adc
out
cmp
adc
addr16
sbbb
and
mov
fisubrl
fisubrl
das
push
jne
repz
ficoml
mov
xchg
and
dec
inc
mov
sbbl
std
cmp
fs
sub
shrb
popa
lods
push
mov
pop
xchg
fcomps
ja
loop
and
xchg
fidivrs
xchg
xlat
xor
sbb
clc
push
jle
push
out
sub
pop
popa
mov
fwait
dec
xchg
out
scas
rcl
mov
fs
sbb
push
xchg
or
mov
and
subl
jnp
lcall
jmp
or
sbb
divb
mov
out
in
insb
jb
adcl
rorl
mov
aas
in
pop
lret
mov
mov
xor
push
gs
icebp
leave
cmp
mov
or
jp
fwait
inc
cmc
xor
push
and
jle
pop
dec
sbb
mov
add
pop
mov
mov
jg
test
nop
cmp
and
jbe
sbb
popa
inc
mov
cltd
mov
sbb
xchg
adc
aaa
fsubr
mov
lret
inc
pop
adcb
rorb
mov
jne
neg
add
ds
and
mulb
mov
sub
lahf
pushf
dec
fdivrl
and
push
loope
push
pop
loop
dec
sbb
mov
xor
aas
imul
int3
data16
in
movsl
mov
es
xchg
inc
pushf
leave
jecxz
movsl
sub
popa
dec
xchg
rep
in
jle
jnp
dec
sbb
or
rol
loop
mov
pushf
aad
cmpsb
xchg
cmp
mov
mov
gs
xchg
fdivrl
cwtl
xchg
or
aaa
es
xor
test
lock
aam
nop
imull
imul
sub
adc
lcall
in
ss
mov
add
pop
mov
sbb
int3
test
pop
lret
pop
xlat
mov
out
xlat
inc
cmpsl
in
js
shll
cmp
jecxz
dec
and
repnz
jns
pushf
inc
test
cmp
mov
int3
xor
add
leave
jg
ja
push
and
orb
call
roll
fcmovbe
subb
pop
push
sub
push
lret
xchg
inc
aas
dec
pop
add
in
ja
push
sbb
and
imul
pop
cmp
and
out
repnz
lcall
rclb
jge
paddw
mov
and
add
rolb
jno
mov
leave
mov
sarb
ss
xor
addl
xor
movsl
in
add
out
cltd
loope
push
mov
push
inc
pushf
cmp
stc
jno
sub
inc
mov
push
or
cmp
fs
pop
or
cld
xchg
or
cmovo
xchg
ficoms
pushf
loope
xchg
pop
test
push
lret
sbb
mov
sbb
sti
lods
push
scas
subb
push
pop
bound
nop
pusha
shlb
push
dec
loop
aaa
cmpsb
enter
dec
movsl
shr
jns
js
mov
les
sti
jb
ja
xchg
mov
push
and
jle
mov
mov
fs
out
and
lret
ja
into
and
je
add
cmc
pushf
repz
inc
xchg
shrb
jl
insb
ja
in
movsb
dec
cmpsl
lea
dec
cmp
aad
inc
pop
lods
pusha
lock
xor
mov
adc
outsl
xchg
cmp
cmp
fsubrl
das
int
les
sbb
int3
xor
sahf
inc
xor
dec
arpl
jl
loopne
test
loope
cltd
test
mov
cmc
push
fcomi
leave
mov
les
lods
cli
jp
outsb
fstps
out
mov
mov
jecxz
sahf
mov
cmpsb
cmp
mov
dec
orl
dec
mov
cmp
cld
jae
cltd
push
lahf
lahf
mov
out
xchg
push
sbb
imul
adc
mov
idiv
das
fdivl
sub
ja
jae
xchg
cmp
add
into
mov
push
jle
jge
inc
daa
pop
mull
sub
pop
jge
cmp
sbb
mov
fsubr
lock
bound
lock
data16
testb
and
enter
pop
xchg
loopne
xchg
sbb
es
adc
test
push
in
xor
lods
maskmovq
testl
je
rorl
fidivl
pop
jno
push
test
and
call
arpl
xor
aam
dec
cmp
mov
lock
arpl
cmc
inc
cmp
cmp
clc
pop
add
cmp
xor
sbb
adc
jno
jno
je
adc
mov
ljmp
add
xchg
popf
lods
push
cmp
lods
jge
call
push
out
mov
movsb
aad
outsl
pop
loop
add
cmpsb
jl
jp
out
jl
inc
sub
js
and
cmpsb
jmp
mov
cmpsl
inc
xchg
shll
mov
into
xchg
inc
ret
pop
xchg
add
lock
lea
cli
fdivp
fstps
fs
scas
mov
outsb
nop
and
ret
sub
dec
scas
pop
ficomps
fstps
movsl
stos
jae
xchg
dec
xor
les
cs
pop
cli
mov
mov
flds
ret
lahf
pop
data16
jno
icebp
addr16
sub
andl
ret
cmp
pop
add
std
push
xor
xchg
fmuls
add
lds
es
repnz
mov
mov
cmp
pop
je
adc
out
enter
dec
aas
sub
imull
push
movq
pop
xor
sti
addb
inc
jb
mov
lcall
cmp
loope
ficomps
adc
jle
daa
xchg
sbb
mov
jb
insb
into
mov
jo
or
push
dec
lds
aas
mov
inc
out
fstpt
mov
jns
fwait
bound
and
inc
ss
aam
push
adc
cwtl
aad
inc
or
fwait
es
leave
lret
stos
ret
addr16
mov
and
xor
cmpsl
cs
pop
das
je
add
jne
mov
jb
or
ret
pop
xchg
scas
sub
push
sti
pop
or
aaa
dec
rcr
xor
push
mov
loop
dec
push
mov
and
rol
push
pop
mov
jo
adc
cmp
inc
mov
dec
sahf
test
dec
lock
mov
pop
in
mov
xchg
or
adc
pop
adc
jns
fisttpl
jmp
dec
int3
outsb
or
pop
movsl
or
adc
jp
jns
jecxz
daa
and
sbb
decb
adc
xchg
mov
movsl
push
incl
xor
stc
aad
sub
push
sub
pop
sub
insl
or
fcomps
sub
xchg
mov
sub
into
adc
cmp
jae
ror
int3
je
lock
int
arpl
mov
mov
xchg
lods
or
into
dec
fxam
ljmp
test
pop
add
insb
adc
test
bnd
mov
xchg
mov
xchg
pushf
xchg
data16
pop
or
jnp
pop
int
lea
or
fildll
repnz
add
lods
cmpsb
xor
lods
or
int3
xor
icebp
inc
dec
lcall
outsw
inc
add
rep
mov
xchg
dec
sbb
mov
adc
cmp
insb
jp
lock
repnz
cmpl
sbb
call
popl
or
ret
jg
std
icebp
aaa
pop
mov
mov
aad
popf
dec
test
inc
push
mov
pop
jmp
mov
test
xchg
fldt
and
jmp
daa
adc
dec
nop
jo,pn
mov
jb
adc
lods
dec
dec
cld
imul
and
das
test
inc
repz
xchg
sbb
out
fadds
mov
clc
test
divl
cwtl
repnz
popf
jg
mov
pop
pop
cmpsl
xor
sub
dec
imul
andl
mov
repnz
bound
fldenv
shl
popf
mov
bound
std
xor
cwtl
enter
cmp
xchg
lret
in
fyl2xp1
in
xorb
push
sub
fcoml
mov
mov
jg
sahf
mov
cmovle
cmpsb
sub
bound
negl
cwtl
xchg
and
popa
add
jae
sbb
pop
rol
jecxz
xacquire
jno
mov
shl
test
hlt
mov
mov
mov
aad
shl
incl
jno
fucomi
jmp
aad
ja
icebp
rol
xor
jecxz
inc
test
cmpl
xchg
mov
push
fstpt
popf
inc
jmp
aas
lahf
pop
in
push
lds
push
mov
lock
insb
pushf
mov
cmp
jmp
cmpl
insb
inc
xlat
dec
mov
rcrb
sub
mov
pop
data16
lea
stos
push
in
sbb
ret
movsl
lods
xchg
mov
pushf
cmp
test
mov
daa
not
loope
cmp
adc
xchg
test
adc
rorl
jno
mov
lret
adc
imul
mov
jne
and
loopne
xchg
pop
lret
lock
sarl
je
stos
enter
sahf
cmp
cmp
adc
and
or
les
mov
inc
jl
dec
addr16
test
mov
cmpsl
cmp
je
in
push
jae
shlb
adc
shrb
lahf
pop
mov
cmp
inc
in
stc
lock
ja
icebp
ja
dec
into
in
das
mov
call
and
or
leave
lea
pop
in
adc
adc
xchg
dec
pop
rorl
out
arpl
pop
addr16
or
sub
test
inc
or
sbb
or
fiaddl
sub
rol
in
cmp
imul
add
adc
or
test
sub
sub
jae
sbb
repnz
repz
jl
jmp
add
and
push
fs
test
mov
in
jp
inc
mov
lods
imul
aad
mov
mov
mov
pop
roll
adc
mov
xlat
xor
inc
sbb
sbb
sbb
inc
sbb
cltd
fidivs
mov
mov
test
ljmp
adc
in
inc
add
xchg
and
fs
xor
pop
andb
mov
cmp
or
dec
bound
sbb
test
cmpb
mov
daa
lods
or
xchg
data16
daa
and
nop
xchg
mov
or
mov
mov
les
mov
jg
movsl
imul
xchg
fimuls
cwtl
dec
aad
lret
rorb
dec
or
lcall
xchg
push
scas
cmpsl
inc
cltd
cld
idiv
sbb
and
push
lahf
jb
mov
arpl
mov
adc
gs
jns
adc
outsb
cltd
mov
lock
icebp
push
enter
in
pop
imul
jl
fisttpl
js
lock
ja
iret
pop
imulb
pop
xor
pop
xchg
lds
jae
sub
adc
sti
sti
and
mov
sahf
sbb
bound
pop
nop
pop
out
cmp
ret
out
ret
and
movsl
pushf
divl
mov
cmpb
adc
sbb
out
dec
rcr
jmp
inc
adc
adcb
add
bound
jg
out
sub
pop
into
mov
leave
push
pop
dec
aas
sbb
test
dec
dec
call
push
xchg
outsb
out
xorl
dec
je
jecxz
xor
shr
add
sub
push
nop
dec
and
cmp
pop
js
jbe
daa
sahf
jle
sbb
addr16
leave
inc
add
mov
adc
or
rcrl
call
cmp
xchg
mov
test
xor
daa
pusha
test
or
out
mov
mov
push
pop
pop
jmp
rorb
arpl
fstl
add
xor
push
cmp
pop
testb
fildll
icebp
mov
jecxz
clc
cwtl
idiv
push
pop
cmp
insl
add
popa
jnp
fsts
sbb
xchg
mov
xor
test
in
cmp
cmp
in
push
shrb
mov
out
rclb
pop
jecxz
pop
push
ljmp
int
fists
sub
leave
sub
pop
ret
negl
repnz
gs
and
xor
pop
ret
add
pop
xor
mov
push
icebp
call
and
sbb
lock
xor
cwtl
mov
xchg
in
cmpsb
cld
in
pop
comiss
and
jo
pop
mov
jge
push
daa
test
cmp
xchg
adc
mov
mov
add
in
sbb
push
mov
clc
inc
or
jno
push
mov
dec
adc
imul
fsubs
jg
dec
xor
into
inc
jb
dec
jne
dec
and
cmp
rep
xor
add
jae
push
ret
sub
test
addw
rolb
clc
inc
cld
adc
imulb
jbe
stos
pop
sbb
dec
loope
cs
call
fsubrl
cmp
sahf
dec
and
lcall
cli
scas
shrl
lahf
leave
xchg
lods
lock
cmpsl
jnp
outsl
jnp
cmpsl
mov
movsl
enter
adc
inc
xor
xchg
daa
cld
xor
daa
sahf
cmp
lahf
xor
cltd
pop
cmp
bound
jbe
imul
loopne
cmc
ljmp
pop
cltd
cli
xchg
pushf
dec
add
out
sbb
ret
decl
fmuls
jns
pop
inc
icebp
imul
aad
cld
inc
and
bnd
lods
and
sub
jle
shlb
mov
scas
add
mov
lahf
and
jmp
cli
and
dec
jns
mov
mov
add
xor
fsubr
stc
ljmp
in
ja
xchg
sbb
pop
out
and
mov
insl
xchg
fsub
in
pop
arpl
in
cmp
sub
decl
lret
add
test
inc
cli
jmp
and
mov
xchg
jbe
ret
imul
in
jge
mov
testl
icebp
jl
mov
enter
sti
mov
into
lret
mov
pop
popf
and
add
pop
outsl
xchg
jbe
gs
scas
arpl
shrl
adc
mov
pop
test
test
outsl
and
adc
or
loope
fistpl
aam
xchg
push
lret
xor
ja
xor
in
cmpsb
paddq
mov
leave
movsb
leave
sub
mov
sti
inc
es
arpl
cltd
cld
mov
aas
mov
ljmp
popa
scas
mul
aaa
in
add
out
das
xor
mov
jbe
mov
lds
ds
xchg
and
rolb
shrl
jne
jp
call
addr16
cld
push
in
stc
xchg
dec
xchg
mov
mov
dec
pop
jnp
push
inc
jae
pop
jno
lock
lods
xchg
jb
fidivrl
negb
scas
adcb
subb
lods
aaa
cmp
mov
or
dec
fisttpl
pop
stc
sbb
pop
jmp
fsubs
and
mov
je
sbb
mov
pop
out
push
push
shrl
push
adc
leave
inc
cmc
add
jo
mov
xor
jb
scas
dec
enter
pop
cmova
js
pop
xchg
cmpsb
or
xor
outsl
scas
pop
in
das
repnz
add
lcall
push
imul
and
cmc
in
pop
aas
dec
cmp
or
icebp
inc
mov
jp
push
test
sub
addl
mov
cmp
js
cs
jmp
mov
repnz
jle
or
js
inc
dec
xor
lcall
into
in
sub
adc
jle
ret
dec
sahf
push
lcall
or
popf
add
push
dec
test
leave
jg
jmp
xchg
sbb
inc
pop
lods
lret
sub
andl
addr16
push
out
lret
push
push
push
loopne
dec
inc
fadd
nop
sub
or
sub
in
dec
out
fcomp
mov
movsb
lock
and
leave
je
pop
ret
and
loope
insl
adc
popa
jmp
mov
in
add
mov
mov
loop
jbe
and
fnsave
xchg
jle
sbb
popf
cltd
mov
and
das
idivl
lea
imul
or
cld
std
sbb
cmp
ficompl
cmc
scas
adc
int
dec
repnz
sub
add
aam
ret
cld
idiv
adc
mov
hlt
pop
shrl
pop
adc
ja
sub
add
xchg
cld
sbb
dec
sbb
pop
push
sbb
fisttps
pop
call
hlt
scas
jmp
pop
into
stos
loopne
ucomiss
sub
int
sub
xchg
leave
xchg
decb
jb
xor
rcrb
scas
loop
js
scas
jns
jge
jno
inc
orb
adc
fstp
stc
scas
mov
pop
inc
scas
or
xchg
adc
stc
daa
das
cld
xor
mov
jno
inc
and
push
notl
cmp
movsl
aam
sbb
or
push
ja
sbb
mov
jb
mov
dec
jmp
stos
jae
sub
mov
mov
push
and
jbe
es
mov
push
adc
inc
jbe
insb
dec
flds
cmp
pop
imul
out
cltd
outsb
jecxz
and
mov
in
sub
arpl
cli
lea
fsts
stos
mov
add
xor
xchg
sbb
or
das
and
adc
mov
add
cwtl
sbb
sub
loopne
lock
inc
stos
nop
inc
mov
sbb
enter
jae
jmp
xchg
jns
cltd
jmp
dec
movsb
sbb
mov
decb
mov
pop
mov
xchg
sbb
cli
fdivrs
mov
outsb
dec
pop
ret
dec
mov
cmpsl
mov
sub
pop
cmp
inc
or
arpl
cmp
outsb
in
das
sub
xor
ja
enter
jae
dec
and
cld
sbb
jmp
cmp
sub
xchg
pushl
and
scas
jnp
stc
bound
incb
loope
gs
push
or
or
insl
jnp
aaa
rorl
xor
sub
jg
out
xchg
push
pop
or
loop
jns
mov
sbb
jne
sub
lahf
inc
and
push
mulb
and
pop
push
cmp
xchg
add
inc
push
sbb
xchg
mov
data16
out
push
sbb
xchg
gs
imul
cmp
scas
mov
aas
cmpsl
inc
mov
fstpt
ja
pop
cld
jnp
fists
data16
push
scas
pop
jnp
in
mov
jns
in
inc
lds
jle
sbb
add
mov
push
xchg
popa
clc
and
cld
xchg
fisttpl
fcmovb
arpl
loopne
cmp
fistps
dec
lret
repz
mov
popa
cmp
mov
aad
mov
cmc
nop
in
mov
sub
cmp
daa
lods
movsl
mov
dec
push
out
ljmp
jecxz
jnp
dec
inc
sbb
xchg
je
mov
stos
add
subb
jne
push
pop
dec
test
mov
addr16
rcr
add
jae
out
mov
mov
adc
push
mov
andb
dec
lret
mov
pushf
mov
push
xor
stc
push
jge
cmp
mov
outsb
lahf
js
shl
xchg
js
out
sub
add
and
xlat
andb
mull
mov
shll
rcrb
or
mov
nop
xor
stc
xchg
inc
jo
cs
jns
mov
iret
pop
xchg
aam
mov
stos
fcoml
in
sbb
in
jns
pusha
inc
and
movsb
nop
aaa
push
xchg
lcall
cltd
push
adcb
inc
fstl
mull
frstor
ret
mov
lret
push
cmpsb
imul
cltd
popa
pushf
je
test
out
inc
lock
mov
cld
scas
jb
cltd
push
dec
test
scas
gs
rcl
es
fisubrl
mov
jno
mov
out
dec
rcrl
jb
mov
lret
add
xor
inc
rcll
scas
les
pusha
lcall
cmc
jnp
popf
repnz
mov
jmp
mov
aad
insb
fnstenv
ficompl
cmp
inc
iret
pop
inc
mov
rcrl
out
xchg
lds
ja
iret
or
mov
xchg
mov
push
dec
mov
cwtl
pop
mov
subb
inc
insb
out
pop
testl
fstps
mov
jne
cmpsb
adc
popa
xchg
fimull
xchg
push
sub
aad
inc
mov
adc
xor
add
push
xchg
insl
jmp
andb
jmp
stos
scas
fwait
dec
je
pextrw
mov
mov
dec
xor
lock
enter
nop
xchg
popf
xor
cs
mov
int3
mov
adcb
jns
adc
jne
popf
xor
cld
inc
leave
and
xchg
cmp
das
mov
ret
jns
mov
imul
pop
or
in
mov
into
adcl
jnp
daa
jnp
xor
insl
add
jne
loopne
adc
ss
ja
adc
in
mov
scas
dec
xor
sbb
ss
mov
aam
loopne
push
call
pop
xor
mov
scas
rorb
push
mov
jb
sub
cmpsb
imul
ret
out
jmp
insl
adc
loopne
add
sbb
lods
xchg
or
cmpsl
fisubs
das
and
mov
xchg
push
jns
and
push
mov
mov
mov
cmp
shll
inc
jl
or
mov
dec
mov
movsl
rcll
fcomps
dec
lock
ds
mov
mov
lahf
sub
pop
xor
lcall
fnstenv
push
aas
pop
mov
lcall
or
mov
repnz
aas
bound
outsb
sbb
cmpsl
es
aaa
cmp
rclb
nop
test
mov
inc
jo
mov
es
push
push
xchg
pushf
adc
push
loop
rcl
call
fidivrs
pop
test
mov
inc
sub
add
movsb
or
xor
xchg
addr16
xor
adc
sub
and
dec
in
cmp
mov
add
movsb
imul
std
dec
loop
mov
icebp
addr16
push
mov
add
loopne
in
xor
jge
adc
mov
xlat
lcall
aam
pop
movsl
dec
aam
jae
adc
push
jl
pusha
dec
push
mov
loope
push
lea
loope
cs
pop
push
push
out
jge
add
cmp
mov
push
mov
movsb
inc
add
sub
add
lock
push
dec
sbb
rclb
xorl
jns
add
roll
in
xchg
test
sub
bound
cmpsl
adc
ja
clc
mov
loop
jae
inc
sbb
ss
popf
jl
jecxz
les
sub
sbb
mov
in
ds
fimull
mov
imul
pushf
push
pop
aam
fidivrs
pop
cmp
add
add
mov
and
mov
ljmp
mov
out
and
scas
fiadds
adc
dec
push
push
jb
stos
aad
cld
xor
xchg
mov
push
fildll
push
lahf
cmpsb
xor
push
mov
push
hlt
fstpl
jb
push
insb
xor
popl
ret
push
xlat
mov
loopne
hlt
sahf
xchg
aas
adc
xchg
cmc
sbb
jmp
and
cmp
push
sub
test
inc
push
dec
out
test
aaa
out
int3
xlat
mov
xor
int3
cs
mov
and
insl
xchg
pushf
xor
lahf
dec
loope
lds
xor
fildl
inc
cmp
xchg
pusha
sub
cmp
add
cmpsb
add
push
sarb
leave
cmpsl
inc
jp
frstor
xor
and
push
clc
pop
cmp
mov
mov
cltd
inc
jbe
xchg
sbbb
lcall
xchg
int3
das
inc
fildl
lds
pop
mov
add
les
xchg
add
out
cs
xor
jno
popf
xor
ftst
fs
sub
jae
mov
call
out
add
aaa
arpl
xchg
aam
in
sarl
lds
repz
out
push
mov
pop
jmp
stos
ljmp
fmull
mov
outsb
inc
mov
cmp
sti
xchg
stc
cmpsb
sub
xchg
sbb
jb
inc
pop
cli
andl
inc
xor
dec
sti
add
idiv
movsb
cli
mov
dec
stos
xchg
inc
popl
test
nop
cli
xchg
dec
ljmp
mov
ss
push
cld
cwtl
sbb
fadd
and
mov
loop
test
idivl
and
inc
pushf
aad
push
mov
xlat
js
inc
lret
pop
adc
fildll
sub
ret
sub
call
rorl
xlat
jle
in
fsubr
cmp
inc
imul
mov
cmp
sbb
add
mov
shlb
mov
xchg
sarl
sub
jns
push
sub
mov
loop
lret
insl
push
les
push
and
fimull
dec
out
lds
mov
jg
and
jno
inc
in
cmc
or
test
fldl
lea
or
and
nop
pop
fildl
cmp
test
cmpsb
adc
push
cmp
jle
xchg
jns
lea
xchg
xor
fwait
shlb
icebp
lahf
mov
or
fsubl
xchg
sub
dec
out
jne
jl
sbb
aad
xor
inc
adc
adc
cmp
xchg
ret
pop
jge
cli
jmp
ret
mov
adc
rol
mov
xor
in
fisubrl
scas
mov
mov
sti
js
xchg
ss
xchg
ljmp
cmp
test
or
mov
lret
push
dec
std
jb
pop
gs
int3
scas
dec
jmp
push
cmp
data16
sub
adc
dec
push
lret
pop
cmp
lea
fisttps
xor
rorb
lock
mov
jb
jg
in
pop
and
movsl
push
push
and
push
arpl
pop
sub
das
lahf
mov
stos
mov
mov
dec
add
or
dec
mov
cmp
cs
fxtract
icebp
shlb
xchg
pop
scas
xchg
aaa
jne
andl
push
mov
mov
cld
xlat
jp
push
rcr
cmp
mov
add
cwtl
daa
jl
les
jecxz,pn
mov
leave
negb
push
adc
mov
movsb
andb
and
movsl
sbb
pop
dec
mov
adc
bound
shlb
inc
jg
into
dec
inc
push
sar
pop
mov
sbb
fildll
fimuls
call
jg
lret
popa
inc
scas
xchg
dec
repz
or
jb
adc
lods
xor
inc
lret
arpl
cli
sub
insl
std
push
sarb
popa
pop
popa
loop
shl
pushf
jo
push
dec
xor
pop
pop
fs
loop
pop
ror
into
ja
gs
mov
daa
and
inc
add
jg
lea
cmp
or
sbb
pop
xor
arpl
adc
out
cmp
neg
popf
sbb
dec
push
adc
shl
push
iret
inc
add
jp
sub
mov
adc
xchg
mov
jo
jns
lret
out
movsl
loop
sbb
sub
jl
mov
push
sbb
scas
mov
mov
pop
cmp
shll
sbb
xchg
imul
and
rclb
dec
in
sbb
cs
push
xlat
sub
movb
cmp
cwtl
notl
pop
mov
xor
test
fisubs
pop
jae
jne,pt
mov
mov
pop
inc
call
aas
das
inc
test
out
cltd
or
test
cmpsb
jne
sbb
cli
mov
popa
test
call
ds
push
enter
and
xchg
pop
mov
inc
and
and
jmp
lret
mov
sbb
icebp
lods
xchg
loopne
test
push
aas
out
xchg
int3
enter
cld
fidivrs
push
fiaddl
mov
imul
ljmp
lcall
sub
repnz
outsb
daa
negl
or
lods
int
cli
sbb
loope
outsl
add
jne
mov
pop
jp
xor
cmp
mov
out
cltd
ljmp
out
daa
pop
rol
cs
cmpsl
lock
mov
or
nop
mov
stos
cmp
push
cmp
out
test
pop
adc
cmp
scas
cltd
adc
movsl
stos
xchg
repnz
push
lock
lods
adc
push
dec
lret
or
enter
loopne
jle
stc
jne
outsb
jmp
movsl
xchg
jne
mov
mov
push
stc
pop
das
push
mov
sub
mov
ret
mov
jno
repz
xor
xchg
adc
dec
cmp
das
jnp
sub
cmp
jecxz
outsl
cli
popf
jnp
mov
mov
xorb
inc
sub
loop
iret
adc
icebp
clc
add
cmp
xor
jae
scas
das
ss
lods
jmp
js
mov
fistpll
andl
daa
addr16
push
repz
clc
int
cmpsb
fisubrs
sti
jne
adc
fsubrl
dec
imul
je
imul
cmc
ret
ss
dec
add
jp
stos
pop
inc
mov
rolb
pop
lcall
je
xchg
mov
ljmp
das
adc
out
and
xor
pop
loope
dec
aaa
ficoml
sub
das
push
rcrl
and
fimuls
pop
jge
push
mov
pushf
jno
cmpsb
adc
clc
add
sarl
int3
stc
movsl
imul
xor
sbb
xchg
out
xor
fnstsw
add
popl
cmpsb
sbb
cmp
lret
scas
inc
loope
inc
jnp
pop
jl
loope
mov
outsb
add
add
xor
sarb
mov
test
jns
stos
in
lret
sub
fwait
add
and
pop
dec
push
jp
sub
lock
rcrb
bound
lods
xlat
fs
aas
xor
lret
jp
orl
pop
cmp
subl
mov
xor
push
lcall
ja
add
mov
fistps
enter
lret
inc
imul
stos
decb
aaa
xchg
xor
pop
pop
js
jmp
call
xorb
out
mov
xor
xchg
cmp
repnz
mov
sbb
or
lret
jle
scas
jns
or
lds
js
not
jmp
repz
mov
test
mov
popa
pop
xor
cmpsl
rcr
inc
cmp
dec
pop
loop
dec
adcl
arpl
and
jle
rclb
jp
xchg
cmp
imul
ret
out
test
pop
mov
cmp
icebp
clc
mov
inc
push
cltd
shr
dec
lahf
leave
add
mov
lahf
repnz
sbb
xchg
xchg
test
mov
cmp
fdivl
cmp
jecxz
or
mov
jecxz
xchg
mov
nop
adcl
jp
xchg
int3
mov
and
jle
les
loope
mov
js
idivb
mov
mov
xchg
sub
mov
rclb
or
mov
jl
cmp
sahf
rcr
fdivl
lret
pop
imul
stos
sub
or
dec
lret
lret
into
sbb
push
ror
stc
and
xor
das
and
fwait
test
or
push
add
push
mov
aad
mov
xor
bound
cltd
enter
scas
das
cld
add
mov
push
add
popa
sti
rorb
test
or
mov
imul
and
int3
cld
mov
mov
rcll
jns
mov
fcompl
dec
jle
or
push
mov
push
insb
mov
ret
lea
xchg
lods
iret
fadds
jo
push
add
pusha
mov
xor
pusha
lds
cs
adc
fstpl
repz
mov
sbb
popf
dec
xchg
xlat
dec
mov
pop
cmpsb
push
movsb
adc
inc
inc
decl
out
daa
fs
insb
je
sbb
test
in
ss
push
mov
test
dec
je
jae
movsl
lahf
lods
leave
dec
aam
icebp
ret
or
jb
push
imul
cmp
das
mov
sbb
mov
mov
lcall
add
jne
je
or
hlt
lea
ja
add
lahf
ds
adc
mov
push
pusha
or
mov
push
cld
add
and
movsl
xlat
mov
jnp
dec
pop
cs
shlb
jp
dec
cmp
mov
jl
sub
xchg
xor
sub
cmp
adc
jg
mov
sbb
aas
jno
push
pop
inc
movsl
pop
out
lods
jbe
icebp
sub
sub
cmp
xchg
inc
xor
stos
adc
cld
test
xchg
xor
push
pop
mov
pop
out
sbbb
stos
ja
adc
push
fwait
xchg
movsl
adc
rcr
jg
fnstenv
cwtl
dec
cwtl
xchg
stc
imul
aaa
dec
mov
out
mov
add
pop
nop
mov
sbb
aaa
push
push
bound
add
jle
arpl
int
rorl
jo
mov
rcrb
daa
jb
add
cmc
dec
lea
adc
pop
ja
dec
cmp
push
daa
xchg
sbb
sbb
mov
ss
push
imull
xchg
mov
push
jge
scas
xor
loope
adcb
dec
insb
adc
call
imul
outsb
push
jns
mov
and
inc
ds
call
and
mov
push
jecxz
or
addr16
xchg
les
and
push
dec
mov
cmpsb
repz
or
add
ss
mov
mov
js
xchg
push
aad
xchg
fwait
cmc
inc
lea
xor
test
jae
cltd
hlt
jno
xchg
push
std
ret
lock
sub
es
adc
dec
jl
xor
cmp
sub
mov
jae
idivl
lret
mov
lret
sub
mov
xchg
cmpsb
mov
lods
sub
jmp
scas
cmp
lods
pop
dec
rorb
xor
mov
mov
pusha
cmc
adc
lcall
dec
xlat
inc
cltd
and
mov
push
mov
jo
add
adc
xchg
in
std
pop
inc
imul
repnz
xor
inc
ficompl
out
aas
cs
mov
ret
or
sti
sarl
jle
push
cmpsb
mov
xchg
repnz
pusha
cmp
je
sti
mov
das
inc
dec
movsb
sti
dec
add
cmp
mov
adc
imul
cmp
movsb
bound
and
out
dec
xor
jge
sbb
push
mov
jl
test
push
pop
xor
mov
or
cli
rclb
ja
ljmp
daa
mov
iret
add
mov
andl
or
or
pop
push
xor
clc
fcoml
mov
add
jle
js
jl
or
cwtl
leave
pop
mov
in
stos
fabs
fisubs
loopne
jns
add
fsubrl
push
push
and
mov
xchg
or
push
xchg
ja
mov
jnp
sub
leave
stos
mov
test
cmpsl
arpl
aas
jge
ljmp
sub
daa
inc
aam
shl
xor
and
adc
xchg
push
repnz
xor
inc
enter
adc
or
int
jns
shl
cld
adc
xchg
xchg
ret
loope
mov
cs
jge
std
or
pusha
cwtl
add
jbe
ljmp
xor
dec
mov
stos
lahf
and
mull
sbb
jb
imul
pop
imul
getsec
leave
xor
and
rcrb
ds
int
jo
or
xlat
mov
push
ja
and
push
movsl
xlat
shll
mov
pop
shll
mov
xchg
or
data16
lret
popf
call
mov
iret
inc
daa
sarb
and
inc
dec
lds
in
sbb
cld
sbb
insb
es
scas
xchg
popa
cli
mov
into
and
push
pushf
cmpb
fimuls
fcoms
sbb
adc
and
mov
aaa
stos
aas
mov
lock
lea
orl
jbe
sub
sub
insb
mov
std
les
cli
test
adc
fdivl
fmuls
cmc
or
adc
call
mov
insb
cmp
sub
daa
dec
mov
sub
xchg
or
addr16
out
test
sbb
push
cmpsl
add
fldt
fwait
add
xor
stc
in
movsl
cmc
jecxz
scas
js
or
cwtl
fwait
int
jns
sahf
aaa
inc
mov
xor
jmp
daa
sub
ret
stc
xor
sub
in
fxam
mov
mov
mov
in
test
jle
imul
adc
push
add
mov
mov
xlat
rcll
test
popf
divl
cltd
mov
mov
jo
pop
mov
in
cmp
inc
in
jae
sti
add
pop
ja
add
daa
or
pop
mov
sub
xor
xchg
pop
stos
lahf
pop
lods
orl
mov
xor
lret
xchg
mov
inc
inc
divl
imul
add
jmp
sarl
cmp
or
adc
int3
inc
or
sbb
sub
iret
out
daa
adcb
mov
clc
xchg
xor
push
ret
stos
and
and
out
leave
fldcw
loope
je
stos
sbb
aaa
dec
daa
push
mov
jg
and
or
xchg
xor
leave
push
mov
into
loopne
sub
inc
and
and
sti
mov
adc
test
cmp
inc
dec
xor
mov
cld
inc
xchg
sub
popa
or
mov
movl
pop
in
insl
jp
iret
dec
sti
cld
mov
out
or
inc
ret
loopne
sahf
cmp
arpl
adc
mov
mov
mov
jmp
jb
inc
pop
add
cmp
aad
sub
movb
divl
clc
imulb
inc
imul
and
insb
imul
or
dec
pop
mov
jns
sub
scas
out
jns
push
decl
pop
dec
roll
aam
or
dec
lock
push
sbb
fcoms
stos
add
push
lds
sub
mov
in
jge
iret
sbbb
into
cltd
aad
js
dec
js
sub
sbb
bound
cmp
push
test
fistl
in
pop
in
or
add
or
xchg
xor
imulb
int
sbb
add
adc
movsb
shl
fnstsw
inc
add
shlb
leave
xchg
popf
inc
mov
xchg
pop
add
sahf
ret
orb
pusha
popf
ljmp
add
xchg
fadds
pop
lea
inc
mov
jl
sub
incb
stos
hlt
test
inc
fmuls
mov
xor
pop
add
xor
addr16
aas
sbb
popa
aam
loop
mov
cltd
xor
mov
cmpsl
or
xor
call
imul
loop
in
push
or
inc
mov
xlat
lcall
test
mov
je
jg
loopne
ret
cli
add
inc
imul
xor
push
bound
aas
icebp
loop
inc
nop
scas
pop
dec
lods
imul
movsl
jecxz
add
into
das
mov
loop
dec
pop
ss
and
jecxz
andb
lahf
stos
dec
inc
loope
dec
push
adc
dec
pop
cltd
sbb
leave
xor
mov
jns
mov
mov
or
aad
fcmove
popf
inc
mov
je
cmp
mov
ljmp
decb
jbe
std
cmpsl
push
adc
mov
testl
xchg
data16
xchg
repz
sbb
push
push
lock
cltd
ret
scas
loop
xchg
aaa
sub
mov
xchg
cmc
add
addr16
mov
enter
test
rorl
adc
int
dec
cmp
pop
ror
jmp
sub
aad
jo
out
aas
inc
hlt
pop
lret
out
jp
xor
jg
ret
jbe
or
jmp
push
xchg
fistpl
push
jnp
cli
jp
inc
movsl
adc
movsb
out
pop
test
dec
mov
fnstcw
push
adc
push
movsb
inc
xchg
mov
int
jecxz
dec
je
xchg
insl
or
cltd
jp
outsb
push
jge
inc
loopne
jg
fisubrl
pop
push
lods
rcll
add
xlat
gs
popa
iret
or
pop
pop
stc
fnsave
stos
add
adc
mov
shrb
xchg
dec
jmp
inc
outsl
jae
call
cmp
pop
out
add
shll
mov
jmp
xchg
mov
adc
cmc
pushf
aas
push
lret
and
jg
mov
jnp
lret
dec
mov
or
cmp
xchg
mov
stc
ret
scas
mov
imul
lods
lods
pusha
lock
mov
daa
push
xlat
dec
sti
sub
cmp
sbb
dec
push
rcrb
and
inc
jnp
mov
cld
inc
int
call
adc
repz
stos
adc
daa
mov
insb
leave
jae
cmpsb
mov
popl
jo
xor
jecxz
xlat
add
cmpsb
mov
adc
and
nop
cmpsb
popf
lret
das
push
or
mov
sahf
lea
pushf
pusha
or
pop
jb
mov
pop
mov
xor
mov
ljmp
outsl
jae
mov
sub
mov
inc
mov
xor
insb
lea
inc
mov
movsl
data16
lea
xchg
mov
xlat
ret
sbb
aad
repz
loop
mov
mov
fdivrs
adc
ret
bound
scas
test
xchg
jne
cmp
icebp
xchg
std
in
xchg
mov
ds
mov
push
es
daa
std
mov
lret
lret
scas
lods
out
adc
rcll
lock
xor
test
xchg
pushf
mov
pop
add
xor
adc
mov
bound
in
wbinvd
adc
dec
movsb
es
pop
xchg
jp
pop
loop
push
mov
jg
sub
and
insl
addr16
icebp
push
inc
xchg
cwtl
popf
les
and
jbe
or
xor
xchg
mov
testb
rolb
sbb
loope
inc
call
flds
inc
mov
mov
iret
push
inc
ljmp
cwtl
out
jecxz
and
icebp
mov
shl
test
dec
divl
mov
or
leave
movsl
add
out
jnp
inc
mov
sub
jge
test
loop
ss
ficoml
insl
out
or
jns
jmp
push
into
adc
or
jo
mov
pop
je
mov
add
or
adc
mov
or
pop
pop
int3
repz
mov
out
cmp
push
xor
pop
xorb
enter
addr16
mov
xlat
stc
xchg
inc
or
and
mov
lcall
stc
iret
sub
jbe
pusha
inc
pop
inc
cmpsl
mov
rcrb
inc
lock
call
cmp
and
xor
push
mov
daa
sbbb
inc
fst
xchg
leave
jb
gs
adc
cmc
pop
fdivrs
in
sahf
push
outsl
sahf
loope
sub
mov
sbb
push
adc
out
sti
daa
das
inc
sbb
into
js
and
popf
pop
sbb
jmp
popaw
into
bound
add
jmp
out
cli
mov
ds
xor
iret
ret
jle
add
out
adc
push
mov
pusha
cmpsl
push
fldt
cmp
or
imul
adc
rorb
sub
ss
xchg
push
pop
xor
fsts
and
movsb
ja
adc
push
fsubrp
or
fimull
popf
arpl
sbb
and
jnp
pop
xchg
push
push
fst
scas
pop
dec
loopne
dec
jns
fwait
mov
jns
xchg
aaa
cmpsl
daa
loop
mov
lahf
push
jge
or
xchg
in
pushf
in
loopne
jno
test
push
or
arpl
mov
pop
adc
aaa
enter
dec
cmp
idiv
cmc
cld
inc
and
in
or
paddq
fisubrl
dec
xor
cs
push
loope
pop
mov
xor
xor
in
aas
divl
fistpl
mov
cld
scas
addr16
jae
es
outsl
popa
aad
cli
cmc
mov
cmp
test
cmp
enter
add
sub
lea
gs
mov
stos
jnp
sub
es
pop
cmpsb
call
pop
dec
push
adc
icebp
in
imul
in
in
in
testl
push
xchg
inc
sub
xchg
ds
pop
dec
xchg
cs
push
add
loopne
cld
adc
sbb
add
aam
mov
inc
mov
mov
xchg
mov
je
and
adc
fsubl
es
daa
inc
cltd
xlat
sahf
xchg
sbb
add
pop
jp
pop
loopne
cs
es
inc
xchg
jmp
arpl
cmp
inc
push
push
pop
add
or
mov
fxch
pop
or
mov
ret
cmovbe
cli
dec
sub
clc
cmpl
fisttps
xchg
mov
sbb
jg
pop
frstor
or
mov
mov
push
daa
mov
fnstsw
push
insl
jbe
fsubs
js
dec
jae
sub
adc
pop
repnz
stos
jno
push
jp
outsl
subl
aas
mov
mov
cs
fstl
cmp
loop
subb
arpl
ja
pushf
andl
jnp
pop
fdivl
mov
mov
daa
out
mov
pop
push
loope
arpl
loopne
xor
fwait
cmp
in
xor
cltd
mov
int
adc
scas
adc
jecxz
pop
cmp
inc
inc
push
in
inc
fucomi
add
sub
xchg
push
les
xor
xor
lahf
dec
lods
gs
and
leave
xor
into
out
mov
lock
mov
cli
push
sub
push
xchg
cli
fs
ja
ret
movsl
icebp
mov
jg
mov
bound
fsubrl
push
or
je
jg
sbb
jne
dec
leave
push
xchg
pop
add
and
mov
icebp
jb
pop
sarl
mov
and
pop
mov
inc
sub
dec
jecxz,pn
push
adc
testl
pop
hlt
loopne
fsubp
int
stos
flds
and
ffree
divl
into
fsubr
sbb
lcall
mov
sbb
xchg
mov
push
stc
std
inc
push
cmc
xchg
inc
sbb
lahf
xchg
mov
ficompl
jle
pop
mov
dec
dec
jmp
insl
sub
sbb
xchg
pop
add
push
cmp
arpl
scas
or
adc
pop
push
xchg
mov
pushf
daa
jae
loope
push
fs
je
out
sarb
xchg
icebp
push
mov
leave
lea
mov
ljmp
in
fnsave
mov
adc
pop
xor
out
cmc
jbe
sub
xchg
scas
sbb
xor
push
scas
inc
jg
or
divb
mov
and
jne
pusha
mov
stc
and
jle
pop
loop
push
fmuls
pop
dec
stos
lock
insb
rdmsr
insl
jne
insb
mov
mov
bound
outsl
inc
jns
scas
xchg
cmpsb
lret
fwait
test
cmp
mov
movsl
sub
mov
in
mov
andl
fmuls
out
insl
xchg
test
xor
test
push
mov
push
psubd
jae
cmpsl
aam
ss
fsubl
arpl
sub
adc
or
push
fisubs
sub
mov
sbb
les
adc
sub
mov
sbb
iret
mov
mov
sbb
inc
cwtl
movsb
ss
and
jbe
mov
int
das
fcompp
xchg
dec
jmp
imul
stc
ds
in
test
pushf
addr16
adc
mov
xchg
xchg
mov
mov
cmp
repnz
stos
into
test
xchg
dec
sub
cltd
in
push
loope
add
mov
mov
pop
mov
addb
xchg
mov
pop
mov
pop
adc
dec
ret
push
sub
leave
sbb
jno
xlat
sahf
inc
jbe
and
jo
mov
adc
mov
jns
stc
enter
clc
aam
xchg
mov
ja
and
cld
xor
mov
cs
call
xchg
idivb
mov
jmp
lahf
data16
repnz
andl
jge
jne
es
jge
ja
out
sbb
lret
out
dec
lea
popf
sbb
int3
mov
leave
mov
add
dec
out
add
push
dec
mov
adc
xor
or
mov
adcb
pushf
push
mov
ret
movsl
sahf
xchg
xor
xor
or
repz
clc
mov
stos
cmp
xchg
adc
inc
pop
add
dec
jae
jnp
andb
pop
mov
push
stos
dec
popaw
pop
jg
sub
push
ljmp
inc
push
js
out
insl
test
sbb
and
loopne
in
stos
out
repz
and
push
or
mov
dec
hlt
sbb
adc
mov
sub
pop
mov
mov
insl
loop
scas
ja
lret
mov
icebp
dec
add
cmc
or
mov
testl
jl
cwtl
add
fsubrs
add
test
outsl
jl
ret
fiadds
jno
push
fnstenv
lods
iret
mov
fistps
sub
and
xchg
inc
jge
call
mov
int
cld
shrl
inc
add
add
outsl
push
test
ja
mov
sub
popf
fsubrp
sbbb
push
jl
mov
lret
cmp
loop
cltd
add
insb
imul
out
mov
sti
lods
xor
push
jns
stc
jbe
jmp
or
clc
insl
stos
mov
mov
pop
aam
into
adc
sti
sbb
fistl
mov
aaa
stc
rorb
mov
in
aam
and
in
cwtl
mov
fadds
jb
sbb
js
fsubrs
repz
lods
add
fs
pop
and
xor
inc
sub
lea
inc
xchg
shlb
popa
pop
stos
mov
ljmp
enter
ficoml
cmp
sub
arpl
das
addb
xchg
jne
out
fstpt
dec
xchg
push
aam
inc
push
xor
fwait
mov
fsubs
sbb
addr16
rclb
xchg
scas
adc
inc
mov
fstpl
mov
mov
push
pop
cwtl
and
stos
in
arpl
dec
sbb
aas
data16
pop
sbb
mov
add
shrl
inc
dec
lahf
or
xor
ret
nop
popf
cmc
sbb
mov
divl
std
mov
dec
mov
fs
adc
pop
cmp
shl
dec
mov
sub
mov
mov
inc
inc
pop
insb
pusha
popf
ljmp
fnsave
rcrb
mov
add
jo
jge
pop
cld
or
add
mov
inc
insb
xlat
imul
jg
mov
sbb
push
ret
lea
shll
inc
xchg
dec
xor
mov
jb
repz
and
and
mov
icebp
pop
lret
stc
mov
ja
mov
mov
nop
mov
inc
fists
addr16
add
mov
cmp
data16
and
mov
push
mov
jecxz
lea
iret
push
sbb
lea
ret
sti
jb
out
sub
jb
aam
cmpsb
pop
xor
testb
pop
xor
dec
xchg
test
cmp
enter
jmp
dec
push
out
pop
fsubrl
loope
pop
sub
les
inc
arpl
stc
into
lret
scas
into
out
inc
aad
or
sahf
out
sarb
fmul
pop
pop
fistps
inc
mov
loope
xchg
test
sarl
imul
jo
sbb
int
clc
aaa
rcrb
ljmp
xchg
pop
lret
xchg
mov
adcb
cmp
mov
int
or
and
cmpsl
xchg
xor
ds
push
sub
or
je
dec
lahf
or
xor
arpl
push
and
xor
push
out
push
xchg
fdivl
and
jno
pop
sub
push
pusha
adc
pop
xor
push
pop
push
out
mov
imul
push
mov
xchg
sub
jmp
mov
and
cwtl
in
adc
cltd
test
test
fisubrs
sub
pusha
insl
push
xchg
push
fdivrs
xchg
ret
stc
and
push
jmp
cwtl
adc
sub
sub
mov
xchg
sbb
or
xchg
cltd
adc
xchg
sbb
push
ret
adc
ret
shrl
and
cmp
loop
pop
fcmovu
push
xchg
or
jmp
das
dec
push
fsub
outsl
jle
leave
cwtl
arpl
mov
adc
hlt
push
pop
imull
fst
pop
hlt
inc
push
jne
arpl
cmp
sub
push
das
in
dec
call
and
and
lcall
add
iret
ret
pop
and
ret
cmc
add
in
sbb
pop
aaa
add
inc
xlat
xchg
popf
xor
cmp
pop
pop
push
xchg
mov
subl
push
ja
ja
add
jecxz
sub
push
sbb
cmc
outsb
jae
es
add
pop
xchg
push
or
mov
insb
inc
adc
enter
push
xchg
js
xchg
ljmp
add
dec
xor
push
sbb
mov
mov
or
and
sbb
inc
dec
cli
bnd
adc
popf
out
inc
jg
jo
xor
out
aam
hlt
mov
sub
nop
cmpsl
loope
dec
sub
sbb
mov
jnp
or
dec
jg
inc
xchg
divl
and
jl
xchg
cmpsl
pusha
pop
add
mov
push
mov
testl
icebp
insl
push
fstps
push
add
cmp
push
add
mov
fnstsw
daa
mov
lods
push
jecxz
jns
out
icebp
xor
ds
fwait
jge
xor
add
das
pop
or
xlat
push
pop
mov
fistpl
lret
xor
push
push
aaa
jb
iret
xchg
push
js
jmp
mov
xchg
sahf
cmc
push
enter
outsb
aam
push
cmp
mov
mov
nop
jge
cmpl
cmp
xor
dec
lret
or
sub
sub
call
or
movl
dec
mov
fadd
mov
jle
mov
sub
in
fstpt
fwait
ret
inc
inc
gs
push
xor
adc
push
jp
inc
je
sti
add
push
push
xchg
mov
jne
rolb
decl
jg
push
add
daa
inc
sbbb
dec
out
push
enter
cmp
out
sub
cmc
jnp
jle
fs
lods
loop
xchg
xor
xchg
mov
push
mov
jns
xchg
xor
fs
inc
cmp
adc
loopne
jg
test
popf
add
mov
gs
inc
sub
leave
icebp
inc
test
cs
add
sbb
mov
mov
mov
test
outsl
mov
lahf
xlat
mov
dec
mov
addr16
add
push
jmp
jno
fstpl
inc
pop
mov
loop
das
lcall
je
notb
sti
push
daa
inc
pop
xchg
push
pop
clc
add
dec
sub
xor
mov
mov
mov
sbb
pop
pusha
pop
adc
xor
ss
fcoms
pop
and
inc
add
ss
mov
mov
out
movsl
xchg
xlat
dec
inc
mov
adc
invlpg
mov
fadd
mov
shll
xor
xor
sti
in
mov
mov
movsb
push
imul
jge
mov
inc
and
sbb
out
jne
or
repnz
mov
jle
dec
xchg
mov
and
rcrl
jns
add
jbe
ret
mov
fisubrs
pop
jnp
lahf
cmpsl
pop
test
js
scas
das
or
adc
loop
jp
push
xor
mov
sub
call
add
mov
mov
stos
inc
sub
jns
adc
jmp
mov
adc
xor
sub
push
sub
pop
movsb
popf
shll
loop
sbb
mov
cwtl
imull
cmp
dec
lret
je
fistpl
shrb
adc
dec
insl
and
fwait
in
iret
add
mov
jae
jmp
inc
iret
push
xor
add
xchg
fwait
je
xor
sub
stos
fs
repnz
jno
js
xchg
or
repnz
jne
mov
xchg
mov
call
movsl
jl
add
and
sub
cmp
sar
iret
cmp
stos
xchg
pop
xor
xchg
pop
insl
lret
sahf
dec
mov
pop
jle
testb
push
in
pop
leave
fwait
add
mov
xor
pushf
pop
jo
in
subl
lcall
sub
daa
dec
js
push
lret
xor
and
push
les
jle
mov
adc
lcall
pushf
jmp
and
xchg
sbb
clc
xlat
clc
dec
cmp
out
pop
or
addr16
fstl
imul
mov
inc
clc
lds
insl
lret
push
sbb
insl
jo
sub
notb
fs
adc
jo
fwait
add
mov
jno
mov
daa
cmp
stos
sbb
xor
sbb
dec
xor
push
pop
mov
or
je
cmpsb
xor
fwait
cmp
or
mov
push
lcall
mov
rolb
mov
pop
ss
mov
loope
sbb
or
testl
push
pop
cmp
jo
mov
sbb
mov
iret
lods
push
or
sbb
jbe
fidivl
cmpsb
sbbb
jbe
int3
mov
rcll
in
cld
enter
lock
dec
test
inc
in
jmp
mov
arpl
es
lods
outsl
insl
rcrl
ja
leave
dec
orb
sub
pop
je
int3
xchg
mov
stos
fnstenv
outsb
int
insl
pop
sti
sub
push
movsl
dec
outsb
sti
push
jmp
nop
jmp
in
cmc
mov
in
add
lea
lret
push
adc
or
notb
adc
test
test
push
jp
pusha
stos
dec
push
in
shl
inc
int3
lahf
arpl
sbb
cmpsb
aam
inc
fistl
lods
cltd
fcmovu
addr16
pop
aad
push
in
lret
xchg
enter
xchg
jl
into
mov
dec
inc
ss
jb
or
mov
es
test
mov
bound
ret
icebp
push
inc
testl
xor
and
outsl
out
test
push
sbb
push
in
jno
xor
scas
aas
aad
jnp
or
jp
cmpsl
stos
push
dec
cld
insb
outsl
cmp
adc
sub
das
cld
sbb
lret
ljmp
sub
or
jno
shrl
sarl
loopne
sahf
fistl
mov
imull
repnz
push
inc
inc
add
mov
sahf
jbe
dec
data16
pusha
in
sbb
in
call
cltd
push
inc
xor
push
adc
cmc
and
lret
cltd
test
and
and
imul
sarl
in
lods
or
adc
out
pop
xchg
pop
dec
je
sbb
jno
sub
push
add
lods
movsl
adc
and
lods
fcomip
inc
add
adc
xor
xchg
jl
ss
jg
mov
jae
push
lea
inc
pop
mov
cwtl
ficomps
inc
or
jbe
or
fildl
xchg
scas
or
lock
cmp
mov
movsb
mov
mov
pop
push
fs
out
rcr
adc
lahf
lods
xor
iret
dec
mov
jb
push
scas
lods
push
sbb
jno
shlb
mov
arpl
xchg
bound
mov
push
sub
push
and
mov
aam
popl
mov
add
std
insb
ss
hlt
dec
mov
mov
push
bound
cltd
imul
push
aas
cld
push
xchg
xor
and
cmp
mov
fidivrl
repz
stc
inc
movsl
and
mov
sahf
pop
and
xchg
cmpsl
xchg
movb
movsb
lcall
dec
sahf
icebp
cld
push
xchg
sbb
lods
loopne
xor
jns
mov
lahf
jae
lea
cmpsb
lret
sbb
shll
sbb
dec
test
cmpsl
add
push
mov
push
add
add
jecxz
popa
jp
mov
mov
cmp
jg
das
sbb
sarb
mov
adc
cltd
sbb
xlat
out
popl
popf
xchg
insb
mov
ror
add
test
adc
jnp
push
cmp
lret
jnp
sahf
andl
adc
js
aas
lock
stos
mov
nop
repz
shl
lds
adc
call
mov
pop
shlb
pop
ds
call
daa
fbstp
jno
hlt
pusha
pop
das
push
ljmp
clc
ret
jns
cmp
fcomp
pop
sbb
mov
aad
dec
insl
movsb
sub
out
cmp
or
jp
stos
add
test
aaa
and
jge
lds
mov
pop
movsb
mov
leave
adc
add
mov
loop
cwtl
dec
lahf
mov
out
insl
and
scas
inc
inc
mov
sbb
and
inc
xlat
std
loope
cs
sbb
push
insl
lds
push
sub
cmovs
xchg
mov
cmp
jg
mov
mov
rcrl
push
out
mov
ret
fneni(8087
aad
mov
popa
pop
mov
and
add
test
pop
sbb
fs
cs
pushf
enter
xchg
inc
in
mov
repnz
and
cmp
fisubrs
ds
xchg
aas
jl
ss
and
movsb
adc
or
pop
mov
lcall
push
js
call
jnp
pop
xor
jne
test
or
lock
mov
push
push
add
ret
nop
or
mov
or
in
lods
icebp
dec
mov
cld
jb
jb
mov
nop
hlt
ss
dec
std
jbe
adc
and
jecxz
or
daa
lret
nop
jae
mov
ret
ds
ja
mov
and
in
dec
aas
push
jg
ret
fwait
aam
jne
sbb
cmp
cmp
push
repz
mov
xor
gs
test
lahf
shll
push
mov
pop
cmp
test
jb
test
movsb
mov
mov
mov
fcom
push
adc
icebp
les
sbb
cmpsl
lods
addr16
popf
mov
aad
cmpsb
test
pop
dec
sti
int3
in
in
mov
fisubrl
stos
sub
or
xlat
xlat
negb
fiadds
mov
push
push
sbb
pusha
inc
sub
xlat
es
in
mov
dec
js
sub
mov
jae
mov
adc
adcl
pop
pop
addr16
inc
adc
es
fidivrs
inc
fbld
jle
std
push
cmp
and
mov
imul
sarl
mov
xlat
out
rcll
pop
addr16
mov
mov
test
shl
leave
push
movsl
popa
cmpsb
lcall
dec
adc
sub
jle
pop
ret
pop
aaa
popf
dec
dec
addr16
or
add
push
push
ss
negb
out
lds
jecxz
inc
sbb
movlps
out
shll
mov
cmp
mov
hlt
xchg
mov
cmc
xor
es
jg
das
jp
in
mov
push
adc
jmp
js
test
nop
add
cltd
orl
stos
addb
and
inc
cmp
mov
xchg
and
mov
mov
dec
imul
shll
pop
xor
out
ja
lret
sub
out
stc
and
add
pop
jp
adc
das
add
and
daa
repz
test
mov
push
dec
out
adc
xor
pop
stc
xlat
jns
mov
js
pop
or
xchg
scas
call
mov
mov
lods
cmp
sub
dec
mov
adc
cmpsb
adc
mov
lock
lock
jp
xchg
stos
push
call
dec
adc
lods
dec
sub
daa
aas
stos
cmp
lds
loop
out
jbe
cmp
je
insb
imul
jl
pop
mov
sub
imul
mov
int
ss
in
daa
popf
cmp
jnp
pop
ficoms
clc
wbinvd
jae
sub
xchg
push
dec
pop
inc
mov
dec
mov
pop
fs
and
lods
add
and
xchg
xor
mov
xlat
gs
dec
xor
push
in
sbb
dec
xor
mov
movsb
fs
sub
adc
fcmovu
cmp
xor
dec
sub
mov
es
stos
push
inc
sub
push
inc
jbe
aam
mov
icebp
add
mov
inc
push
inc
testl
push
loopne
movsb
mov
je
in
stos
sub
mov
orb
xchg
call
xchg
fcom
je
mov
fs
sbb
lock
loopne
pop
xchg
add
push
mov
push
and
int
push
shrl
sbb
gs
fisubrl
fmuls
decl
dec
and
fiaddl
ja
outsb
push
imul
cmpl
xorb
xchg
in
test
daa
push
inc
data16
ss
mov
push
push
cmp
jae
cmp
lret
test
mov
ds
fdivl
sbbb
pop
adc
roll
ljmp
pop
cmp
push
lock
outsl
adc
jae,pt
aas
jno
push
mov
out
push
adc
mov
or
mov
scas
mov
ljmp
loopne
add
test
shl
xchg
ret
mov
test
std
nopl
pop
call
enter
sbb
pop
es
push
out
jl
cmp
xor
out
leave
icebp
xchg
imul
xchg
cmp
in
mov
or
loop
sahf
sub
cmp
into
adc
jmp
mov
pop
push
lret
gs
push
mov
imul
lret
in
std
and
mov
inc
jp
movsl
mov
idivl
sub
jo
cmc
mov
jb
inc
pop
xor
add
sbb
cmp
mov
push
xlat
mov
push
sbb
inc
inc
and
lods
mov
pop
pop
popf
mov
fmuls
adc
into
jp
sub
push
sub
jl
mov
mov
cs
aaa
fcomps
fwait
jge
xor
int
dec
cmp
clc
sub
mov
lret
scas
out
xlat
icebp
jno
fstpt
sbbl
pop
fistpll
jmp
mov
push
adc
cmpsl
std
movl
push
fxch
sbb
jnp
das
sbb
aaa
fstpt
fcmovnu
mov
filds
enter
fwait
pop
out
cltd
pop
nop
ds
cs
scas
mov
adc
add
push
sbb
inc
inc
sbb
jp
or
push
je
push
add
ret
dec
cmpsb
fisubrl
in
inc
jge
lods
cmpsb
pop
call
sbb
and
jge
imul
das
negl
add
enter
cmp
push
jle
rolb
mov
outsl
cli
cmpsl
ja
mov
xor
cmpsl
mov
mov
sahf
lods
sub
push
add
fs
or
cmp
sbb
jns
and
aad
dec
cmp
arpl
mov
cmp
mov
mov
mov
xor
ds
sub
mov
loopne
in
xor
in
or
cmpsl
loopne
mov
cld
mov
enter
mov
cs
mov
ja
jbe
shrl
ss
pop
insb
push
insl
mov
push
xchg
xchg
adc
fldl
fs
mov
push
push
cltd
jae
vcvtdq2ps
clc
mov
mov
mov
sub
dec
pushf
xchg
inc
icebp
jp
lods
lcall
sbb
shr
xchg
adc
insl
adc
mov
sahf
popa
les
jb
inc
push
std
test
jnp
movsb
inc
loopne
pop
push
inc
dec
or
stos
mov
ljmp
inc
mov
gs
cmp
dec
dec
add
xchg
mov
mov
sbb
icebp
js
xor
push
mov
or
mov
je
daa
xor
xor
mov
mov
es
je
test
mov
sbb
mov
insl
icebp
cmp
and
xor
fdivs
in
lret
xchg
stos
cltd
xchg
sub
icebp
shlb
cmpsl
pop
mov
repz
sbb
or
fimuls
testb
dec
data16
inc
insb
int
ljmp
cltd
test
mov
pop
xor
mov
call
lock
lret
cld
sarl
es
movsb
rorl
sub
pop
lock
int3
adc
loope
mov
frstor
shrl
mov
fwait
jl
push
pusha
nop
outsl
inc
mov
cmp
sbb
sub
icebp
rol
out
cmc
cltd
roll
xchg
or
std
mov
mov
addr16
or
cmp
push
sub
push
int3
lret
test
shll
adc
in
xchg
sbb
cmp
push
orl
aad
jae
es
push
jle
and
out
jno
push
mov
loope
mov
or
and
cmc
push
xchg
clc
mov
shlb
and
pop
xor
sbb
test
mov
sub
nop
leave
jmp
add
or
shrb
sub
leave
jge
ja
out
pop
pop
add
mov
or
daa
mov
shll
and
inc
das
pop
lds
mov
xor
sub
xchg
mov
in
cs
shrb
push
jne
push
loopne
je
ret
xchg
stc
punpcklbw
xlat
repz
dec
add
fstpl
sarl
inc
ret
hlt
mov
js
add
lock
ljmp
xchg
test
ret
xchg
data16
test
and
mov
or
sub
push
add
call
ja
pushl
sbb
out
cmp
xchg
fdiv
push
sbb
loopne
int
pop
scas
sub
imul
stos
push
lahf
lds
lret
test
ret
cld
outsl
adcl
out
xor
xor
sbb
dec
iret
sub
mov
add
sbb
jne
mov
scas
or
and
add
sub
movsl
rorb
jo
imulb
out
jbe
mov
inc
call
test
sti
in
in
push
dec
inc
inc
ficoms
aam
push
mov
mov
rolb
iret
mov
loope
in
and
jb
push
adc
xchg
jmp
int3
mov
test
pusha
jbe
jne
xchg
mov
add
mov
fwait
mov
and
inc
stc
sub
dec
ja
mov
cmp
mov
dec
mov
out
repz
push
les
ds
jmp
jo
movsb
test
jecxz
cmp
pop
int3
ficompl
jecxz
pushw
dec
xor
or
or
xor
clc
mov
xchg
inc
shlb
ds
pushf
sarb
pusha
mov
push
sbb
ficompl
dec
decl
call
and
xor
stos
int
cld
gs
call
push
popa
enter
fistps
scas
aam
mov
push
ja
pop
aad
inc
movsl
pop
push
lods
xlat
mov
int3
cmp
andl
icebp
lods
stos
movsb
inc
fnstenv
es
sub
das
in
inc
pop
lods
popf
cmc
rorl
cmc
jmp
and
jnp
sbb
out
inc
sub
push
xor
mov
fcompl
decl
shlb
cli
rorl
inc
xor
inc
jl
adc
cmp
xchg
aaa
popf
call
push
jae
mov
xor
stos
das
lea
arpl
je
dec
cmp
mov
stc
mov
jp
cmp
andl
scas
cltd
jle
fnstcw
mov
das
pop
sub
inc
pop
jle
mov
mov
lcall
nop
in
pop
ret
xor
fsubs
imul
jns
xor
sbb
daa
push
and
loopne
and
mov
mov
punpcklbw
xchg
jl
bound
movsb
cwtl
mov
shlb
push
sub
jle
xor
xor
mov
jbe
ds
push
js
cmpsb
push
fscale
mov
push
and
call
mov
push
repz
ficompl
push
inc
xchg
cmp
add
cmp
pop
push
cs
xor
stos
jbe
push
jno
flds
fsubr
cmp
test
rorl
lea
inc
sti
aam
daa
push
and
pop
add
mov
or
std
outsb
outsl
or
icebp
std
mov
sub
cmpsb
enter
arpl
pop
fcomps
xchg
and
sbb
nop
mov
mov
and
int
cmpsl
cs
pop
loop
lods
mov
xchg
int3
cmc
cmp
dec
inc
xchg
mov
scas
sbb
mov
inc
outsb
outsb
sbb
pop
inc
lods
in
mov
in
loop
xor
js
add
sbb
sub
push
rol
outsl
sahf
jmp
pop
inc
sbb
je
sub
scas
rcrb
rcll
dec
push
lds
cmc
push
xchg
int3
test
pop
xchg
pop
lods
dec
inc
and
popf
sub
adc
pusha
ret
jns
in
mov
add
pop
stos
push
inc
in
jmp
sub
pop
loopne
shrb
add
cwtl
sar
je
mov
loope
jl
sbb
ficoml
inc
cmpsb
lcall
fsubr
push
aam
les
movsl
or
dec
and
out
sub
jg
shlb
push
sbb
and
imulb
mov
fildll
push
and
insb
cmp
add
fimuls
and
xor
in
adc
jne
dec
inc
pop
sbb
mov
cld
out
push
es
pop
fistpll
lds
sub
int3
mov
mov
loope
adc
sti
push
inc
mov
inc
cmp
adc
je
cmpsb
add
int3
cmp
mov
jb
clc
add
mov
cld
mov
stc
mov
lock
push
ret
repnz
adc
cmp
insb
imul
mov
xor
int3
and
pushf
sub
xor
cmp
test
cmpsb
hlt
mov
out
lret
push
popa
into
xor
scas
mov
lock
ja
mov
mov
add
je
out
jp
and
push
mov
adc
repz
sub
jb
cwtl
scas
ds
addl
fbld
cmc
dec
cmp
cmp
jecxz
fwait
mul
ss
fwait
xor
cmpsl
roll
pop
repnz
push
lods
pop
mov
addr16
arpl
repnz
ficompl
dec
daa
nop
jne
scas
dec
arpl
test
mov
xchg
push
arpl
lods
adc
lahf
cmp
repnz
lods
clc
inc
mov
cmp
std
adc
xor
xchg
jne
sahf
mov
mov
inc
decl
ss
cmpsl
pop
xchg
dec
adc
loopne
dec
std
popf
loope
pop
les
jge
mov
and
imul
inc
ret
jl
sub
cmp
aas
call
jl
movsl
leave
loopne
js
ljmp
jecxz
lahf
cli
cmp
push
mov
push
dec
ds
sbb
xor
dec
sub
into
test
xor
mov
cli
js
push
cmp
mov
push
add
mov
dec
or
idivb
fidivs
adc
mov
xchg
sub
sub
cmp
fsubrs
stos
inc
ss
insb
rcrb
adc
mov
add
push
fmuls
rolb
inc
js
mov
mov
push
int3
xor
jae
incb
sarb
inc
scas
jge,pn
add
add
xor
lcall
mov
xchg
adc
int3
jle
push
mov
imul
rorl
fdivrs
xchg
mov
mov
and
and
mov
xor
je
jg
push
movsb
cmp
popf
bnd
movsl
or
and
int
jge
lea
push
cmpsl
xor
ds
daa
dec
mov
add
ficoml
jmp
subl
cli
mov
xor
stc
insl
push
mov
push
movsl
aad
cmp
aaa
pop
shlb
jne
in
push
sahf
cld
pop
ret
and
adc
test
loop
call
addr16
in
rclb
sub
stos
or
incl
sbb
lds
ficoms
sbb
jp
data16
arpl
push
xchg
pop
add
sub
mov
cmp
enter
outsl
cmp
inc
jo
popa
xor
stc
fldenv
outsb
lds
outsb
mov
imul
inc
js
mov
negb
sub
push
imul
sbb
sbb
xor
fsubl
push
rorl
outsl
cmp
pop
ret
andl
mov
xor
mov
sbb
push
dec
pushf
test
pop
test
fdivp
mov
clc
into
pushf
adc
js
test
dec
ljmp
addl
shrb
jl
xor
fcompl
ss
jle
aam
addb
cmc
imul
dec
or
push
adc
fidivrl
mov
add
push
dec
push
in
sbb
mov
repz
mov
pop
add
lods
and
ljmp
pop
xchg
dec
adc
mov
push
out
pushf
add
sub
inc
cmpsl
push
ret
xchg
push
inc
add
test
iret
aam
push
jae
jle
jb
fcomps
pop
xor
shrl
pop
lock
add
sbb
mov
jns
xor
insl
sbb
inc
push
push
push
shl
loop
ficomps
loope
lods
imul
inc
ret
push
fdivl
jge
ss
pop
cmp
mov
mov
fcompl
xchg
ja
push
outsb
das
pop
pushf
mov
xchg
jb
fidivs
adc
xchg
jb
pop
push
fs
ljmp
pop
jmpw
mov
data16
call
jg
mov
shrl
repz
sbbb
pop
movsl
pop
sub
add
xor
cmp
mov
adc
sbb
xor
addr16
xchg
movsb
cmpsw
enter
dec
jne
jns
push
sub
rcl
pop
gs
scas
dec
mov
lds
dec
icebp
or
jo
sbb
addr16
test
outsb
int
clc
pop
or
mov
loopne
push
arpl
dec
cmp
mov
mov
sbb
fsts
or
lahf
mov
xor
loope
rolb
jo
into
and
sub
test
popa
pop
push
dec
jns
je
loope
mov
sbb
mov
lret
mov
mov
ret
loope
mov
inc
test
aas
fists
fcomi
add
lods
adc
arpl
cmp
or
pop
fldl
in
icebp
addl
cmc
pop
in
jmp
or
dec
scas
xchg
incb
xchg
sahf
mov
bound
or
rol
xchg
xlat
ds
xchg
push
ret
lock
xchg
lret
or
repz
jp
and
sub
fucom
mulb
jbe
jp
fsubrs
mov
pushf
sbb
stos
mov
imul
jle
mov
hlt
lock
inc
aaa
movsb
fadds
int
push
lods
ljmp
cmp
out
lahf
aam
adc
stos
mov
push
jecxz
ficomps
push
fnsave
mov
dec
fnstcw
test
loop
dec
loopne
fbld
loopne
mov
ret
outsb
push
psubsw
dec
movsl
js
dec
and
cwtl
mov
jbe
push
sub
lods
aas
cwtl
inc
xor
or
adc
jecxz
outsb
out
cltd
inc
fcoml
into
lcall
or
fisttpl
psubusb
leave
in
jg
and
iret
mov
pop
mov
and
push
insl
pop
push
or
mov
int3
push
pop
mov
cmp
lods
fisubrl
cmc
mov
inc
or
cmc
mov
dec
xchg
inc
cmp
test
std
ret
xchg
js
adc
fwait
dec
and
cmp
jae
sbb
mov
pop
iret
cmpsb
test
xor
push
aad
ja
push
fisttpll
or
mov
icebp
test
cli
aaa
inc
jno
cmp
xchg
btr
jne
sbb
adcb
pop
jecxz
mull
in
inc
fstps
movl
call
cmc
test
lods
movsb
pop
pop
mov
pushf
push
ja
mov
ljmp
and
insl
mov
out
and
shrl
and
fstp
lock
stc
inc
lock
movsb
dec
repz
xlat
mov
pop
adc
insb
sbb
in
mov
dec
popf
sbb
jbe
and
mul
push
cwtl
xchg
xchg
sahf
mov
ret
sub
inc
and
xchg
cwtl
and
cmp
fstl
mov
jno
cltd
cmpsl
push
fisttpl
mov
mov
jmp
jmp
mov
mov
data16
mov
adc
mov
bound
in
and
pop
sbb
inc
sbb
cli
or
call
popa
shlb
push
jl
mov
push
adc
dec
pusha
sbb
sbb
or
jbe
xor
jecxz
mov
jno
fwait
inc
mov
inc
cwtl
faddl
push
pop
or
xor
dec
cltd
mov
lcall
sbb
idivb
in
popa
xchg
data16
lds
sbb
xlat
mov
ljmp
int3
push
mov
pop
shlb
test
push
xchg
pop
pop
aad
fists
mov
rol
adc
dec
xchg
fsubs
inc
jo
add
fdivs
jle
stos
push
pop
int
dec
fnstsw
sbb
xor
cmp
sub
and
mov
pop
jo
jnp
and
sub
int3
pusha
arpl
inc
pop
xor
in
stos
sbb
aad
or
cmp
jb
movsb
mov
test
sub
jge
mov
add
xor
mov
stc
pop
push
bound
adc
push
mov
mov
inc
lock
push
inc
xor
xor
cmpsb
mov
mov
insb
lea
xor
mov
add
bound
mov
push
lds
jge
scas
lret
lcall
arpl
movsl
mov
je
cmp
jnp
jecxz
push
std
xor
sub
jno
stos
out
or
or
jns
arpl
xor
dec
xor
idivb
mov
and
addr16
test
daa
mov
mov
pop
jo
test
call
xor
pusha
adc
push
jb
sub
or
lahf
adc
mov
out
imulb
stos
add
mov
adc
int3
push
push
jae
std
cli
mov
push
test
fisubs
call
cwtl
push
popl
jno
addr16
in
popf
arpl
push
enter
daa
iret
or
das
push
xor
in
enter
clc
scas
jo
repz
movsl
dec
pop
cli
mov
icebp
pop
leave
cmpsb
xchg
lcall
jb
mov
cmp
jne
mov
adc
pop
fnstenv
sub
lret
sub
and
subb
and
mov
mov
xor
hlt
inc
out
insb
popf
sub
je
push
inc
sbb
push
mov
lods
dec
repz
dec
inc
lods
sbb
andb
sbb
mov
push
out
cmpsb
pop
and
mov
in
xchg
inc
sbb
pusha
mov
pop
mov
adc
pop
les
xor
cwtl
cmp
pop
aas
sub
mov
lcall
arpl
pop
adc
setge
ja
push
in
hlt
imul
xor
sub
add
add
iret
call
push
xor
lds
ds
clc
pushl
rcll
or
and
fwait
jp
or
jae
mov
xchg
mov
sbb
xor
and
pop
fsubr
push
test
and
jp
xor
add
insl
sbb
sbb
sbb
scas
xor
stos
lock
fidivl
lock
dec
pop
pop
pop
sbb
mov
xlat
mov
xorb
push
scas
mov
ds
push
movsl
adc
add
incb
xbegin
dec
dec
pop
or
or
movsl
push
adcl
das
sbb
cmc
fsubp
into
cmpsl
xchg
loop
lea
mov
adc
cli
push
dec
push
mov
cmp
add
pusha
fmull
sub
push
or
mov
out
dec
outsl
cmpsb
testb
jnp
mov
std
xchg
and
es
in
mov
in
adc
int
sahf
xor
add
and
and
icebp
test
push
stos
sbb
es
inc
inc
in
jle
xor
adc
dec
adc
frstor
insb
insl
pop
movsb
lret
insb
xchg
int3
cmp
int3
add
inc
lret
mov
push
adc
lret
cmp
mov
dec
movsb
fimuls
push
jmp
aaa
cmc
dec
or
adc
sub
xchg
testb
mov
loop
lret
int
icebp
sbb
imul
fdivs
test
rorl
jno
dec
orb
add
cwtl
dec
aam
out
cmp
adc
mov
andw
outsl
and
cmp
jne
and
mov
or
add
inc
addl
push
ja
push
rorl
adc
or
mov
jnp
or
push
out
jne
sub
jge
inc
push
nop
pop
push
ror
inc
ljmp
dec
jp
xchg
xchg
rcl
mov
pop
or
xchg
lcall
and
enter
sub
rolb
cmp
mov
sub
call
mov
sbb
lods
dec
mov
push
repnz
out
adc
lahf
pop
jmp
negb
add
xchg
xchg
mov
in
sarl
push
xor
loop
int3
sbb
jns
push
mov
sub
jno
inc
sub
cwtl
adc
mov
lds
jne
js
xchg
and
std
pop
arpl
and
in
call
xor
out
je
dec
push
mov
stos
stos
sbb
or
mov
in
jg
or
pusha
inc
loop
xchg
xchg
cmp
xor
subb
aam
adc
imul
imul
add
adc
pushf
movsl
scas
movsb
fs
inc
adc
push
stos
pop
call
fwait
inc
fistpll
mov
jne
lret
stos
and
loope
inc
jno
sub
inc
push
mov
cmp
or
cs
mov
mov
xchg
and
sub
sbb
pop
and
push
xchg
xlat
out
jbe
int3
insb
sbb
out
imul
mov
pop
stc
das
testb
and
cmp
dec
pushf
std
int
xor
or
outsl
leave
fisttps
sbb
imul
mov
shl
pop
dec
mov
push
out
into
sbb
xchg
sar
mov
pusha
sbbl
adc
sbb
pop
repnz
repnz
xor
xchg
adc
mov
or
xchg
cmpsb
les
cs
ret
jne
pop
shrb
push
inc
fisubrs
out
adc
xor
pop
mov
xchg
call
mov
rcrl
ret
sbb
and
enter
or
adc
mov
push
add
mov
push
jne
jp
scas
mov
mov
negl
xchg
adc
push
data16
dec
das
jp
fistps
movsb
jg
fsubl
inc
sbbl
push
pop
push
pop
push
mov
xor
fs
sahf
mov
in
adc
and
push
bound
test
pop
mov
add
ljmp
in
lds
aaa
cli
js
repnz
ret
inc
clc
and
es
xor
stos
mov
scas
cli
rcll
mov
repnz
stos
fdivrl
mov
rorl
pop
rorl
icebp
inc
dec
mov
push
ja
push
cmpsb
jnp
nop
aad
leave
imul
pop
mov
lea
popf
xor
sbb
popf
pop
and
aad
loope
mov
pop
or
and
mov
sbb
or
pop
clc
jno
lea
cmc
gs
loope
pushf
and
insl
imul
out
and
xchg
adc
xchg
jmp
das
pop
iret
inc
ljmp
mov
push
adc
dec
inc
sub
mov
imul
mov
or
daa
push
xchg
cmp
popa
sub
adc
in
or
imul
outsb
iret
mov
pop
sbb
lds
stc
inc
int
xor
xlat
out
cs
mov
and
push
sub
xchg
lods
dec
das
stos
jge
jo
in
bound
int3
leave
ror
mov
xor
xchg
dec
xchg
pop
push
lret
js
scas
jge
out
in
adc
int3
mov
adc
adc
jge
xchg
xchg
daa
daa
jmp
push
dec
in
dec
lods
xchg
movsl
dec
popa
xchg
add
mov
push
inc
icebp
loop
lods
lahf
sub
pop
lods
sub
sbb
scas
pop
fisubl
xchg
inc
push
sub
repnz
shrl
cmp
pushf
aam
inc
mov
dec
pop
xchg
add
mov
jnp
sahf
cmpsl
lret
pop
into
jp
cmp
lock
fcompl
mov
xor
push
pop
lea
cmp
aaa
add
jp
or
cmp
sbb
and
mov
mov
cmpb
push
inc
cmp
fdivrs
mov
pop
add
sub
mov
sahf
aam
jnp
sub
push
sahf
outsb
into
xchg
xchg
push
pop
clc
maxps
sbb
je
mov
xchg
and
loopne
pop
mov
outsb
ljmp
mov
sub
mov
mov
imul
push
mov
popa
sti
sbb
inc
xor
cmpsl
cli
sbb
push
iret
dec
sub
sub
mov
dec
and
popa
mov
inc
lret
mov
mov
fistpl
xor
push
test
dec
ss
sbb
clc
and
mov
outsl
mov
stos
in
shrl
jae
scas
addr16
adc
addr16
push
cltd
iret
jl
xchg
inc
shll
mov
pop
pop
fcmovbe
fcoml
incb
xchg
add
mov
inc
lret
divb
testb
in
inc
xchg
out
pop
dec
push
int3
sub
clc
xchg
xchg
mov
pop
imul
xchg
mov
xchg
pop
in
and
mov
pop
and
pushf
add
sub
or
loop
insb
mov
lock
and
in
xchg
xchg
sbb
lret
pop
lahf
jge
fs
jno
aas
adc
mov
fnstsw
scas
addr16
ja
in
shll
fldenv
pop
mov
das
movsb
mov
jbe
in
jbe
inc
inc
aas
divl
rcl
add
lea
cmp
shrl
or
add
mov
xchg
or
cmp
xorl
outsl
in
addl
insl
sbbb
and
add
test
or
je
data16
pop
shrl
cltd
sti
fimuls
and
das
ljmp
xor
out
or
js
les
cmp
sbb
sub
imul
sbb
pushf
inc
pop
jmp
shll
pop
xor
jne
cmp
and
pop
les
lods
mov
pop
push
mov
jbe
jmp
addl
and
call
mov
cmp
ss
sub
cs
sbb
pop
out
cmp
or
imul
sbb
mov
push
or
dec
adc
loope
and
add
sti
jne
inc
sbb
cld
stc
mov
sbb
mov
dec
and
inc
sub
into
inc
decl
sub
sti
dec
test
jl
decl
xor
inc
cmpsl
jne
xchg
ret
and
out
jge
dec
inc
aad
fs
cwtl
xchg
push
stos
lcall
sbb
xchg
jg
mov
iret
ss
mov
adc
add
pushf
popf
xlat
pop
lea
subb
jo
cs
lret
filds
mov
pop
push
dec
ficomps
call
lea
mov
sbb
loopne
arpl
push
push
cmp
and
adc
mov
mov
or
mov
dec
sahf
lldt
fcomps
popf
cmp
cmpsl
jmp
mov
jbe
fwait
loope
sub
push
cwtl
jnp
loop
and
and
int
xchg
movsl
negl
pop
cmp
adc
lods
xor
or
dec
aas
std
add
sub
jo
outsl
in
out
ds
mov
fcoms
leave
jns
sbb
lahf
insl
cmp
out
adc
mov
mov
mov
cs
mov
or
mov
mov
je
jno
ds
pop
lds
jns
lea
fisubl
sbb
pop
test
mov
or
aas
lret
mov
jne
mov
dec
push
and
rorl
cmpsb
shll
jecxz
mov
mov
adc
je
sarl
lahf
dec
dec
inc
mov
arpl
andb
bound
and
notb
add
add
pusha
in
in
jge
arpl
push
pop
stos
sti
xchg
decb
sub
mov
mov
fcomi
insb
sub
lret
jp
cmp
shll
xor
lcall
jmp
into
lret
pushf
cltd
cltd
mov
xchg
mov
insl
fwait
test
xor
mov
mov
cmp
cmp
in
push
into
sbb
adc
jbe
mov
imul
daa
popf
sbb
push
fwait
test
xchg
popa
inc
ret
mov
shr
adc
fidivrl
fstl
stos
movsl
andb
xor
fnsave
inc
push
arpl
ljmp
sub
fidivl
sahf
jl
loopne
dec
mov
icebp
insb
inc
fldt
mov
xchg
xor
cmp
cmpsl
xor
xlat
xchg
sub
mov
mov
or
lret
mov
and
or
xchg
xor
mov
lea
data16
enter
imul
cmpsb
aam
lea
dec
dec
dec
hlt
pop
leave
mov
sbb
cmc
and
add
adc
aas
push
aam
xchg
data16
mov
popa
cmp
cld
enter
add
js
ss
jb
lods
pop
loopne
ffreep
aaa
dec
sub
sahf
out
insb
loope
mov
jge
or
sub
sub
push
add
iret
add
lret
adc
ret
mov
scas
inc
pop
sbb
lret
push
test
cmp
xor
xchg
push
dec
push
rorl
int3
lods
popa
pop
sbb
sti
cmp
inc
es
mov
je
arpl
sbb
leave
jp
dec
and
clc
aaa
mov
dec
movsb
repnz
jno
hlt
mov
cmp
push
lds
and
cmpsb
cmp
or
and
imul
stos
and
or
daa
jmp
pushf
lret
push
ss
xlat
loop
divl
push
push
lret
xchg
jg
and
imul
mov
jno
mov
sbb
xchg
das
cli
cwtl
or
push
daa
out
fdivl
jg
mov
jne
test
rol
fincstp
pop
addr16
popf
fstpl
push
repz
mul
fmul
xor
js
andb
lea
out
rcr
popa
iret
xor
sbb
sub
imul
pop
out
out
insb
sbb
lods
dec
popf
push
popa
mov
popf
shll
xor
testb
out
xchg
cmp
pop
sub
adc
pop
enter
jne
cmp
out
les
sub
and
cmc
popf
addr16
outsl
sbb
inc
mov
repz
divb
xor
movsb
dec
test
sbb
sarb
cmpsb
nop
sub
icebp
popf
or
repz
jne
lea
out
and
fstl
in
lods
mov
rep
pushaw
mov
mov
pop
xor
stos
xor
rolb
out
scas
jecxz
icebp
push
cmpsb
loope
shl
fisttpl
pop
mov
pop
sub
and
aam
testl
cmp
and
fdivs
mov
into
add
push
std
subl
and
lret
cltd
xchg
subl
scas
movsb
xchg
aas
jne
adc
out
scas
jae
into
inc
lds
xor
int
and
and
mov
mov
pop
cli
in
jno
loope
js
xchg
aas
pop
dec
xlat
inc
mov
sahf
jle
xchg
or
jo
sub
loopne
xor
call
jle
mov
jb
and
inc
push
scas
test
iret
sub
test
cmp
data16
lret
jo
mov
imul
testb
mov
sub
in
xchg
xor
mov
daa
int3
aaa
cli
in
add
mov
popf
jb
jg
or
mov
push
out
jle
insl
xor
xchg
xchg
cltd
sahf
or
xchg
pop
adc
stos
dec
cmpsl
fwait
mov
popf
lret
xchg
mov
into
sub
ss
rcrl
in
scas
leave
push
fs
ds
sub
and
call
sub
cmp
test
scas
mov
jmp
dec
cli
jbe
sub
jg
clc
add
mov
mov
repz
fninit
ds
mov
pop
insb
daa
and
ret
arpl
jl
mov
out
clc
fildll
sbb
inc
out
scas
jp
test
mov
cmp
cld
xor
out
mov
ja
fdivrs
cmp
rclb
and
mov
pop
rorb
imul
xchg
mov
inc
xchg
or
or
add
popa
cld
sub
sbb
push
testl
outsl
inc
mov
sar
xchg
sub
into
adc
jl
push
jnp
ds
mov
incl
testl
and
inc
add
aas
jbe
xchg
push
dec
adc
inc
lret
dec
mov
lret
sub
or
aad
mov
jmp
daa
xor
push
lods
or
lods
push
mov
push
cmc
dec
pop
add
jge
addr16
ljmp
shll
mov
mov
jno
addb
scas
into
mov
xchg
lcall
into
dec
mov
adc
fdivrs
sti
mov
pop
movsl
ficomps
nop
mov
jg
inc
sub
mov
cmp
cltd
jno
push
aam
imul
sahf
xchg
out
imul
loop
pslld
incb
movsb
loope
lcall
fcmove
flds
and
sbb
jmp
lods
push
outsl
lods
dec
ss
and
and
int
cmp
test
jl
dec
sbb
push
mov
dec
mov
std
lcall
sbb
mulb
xor
addr16
rcr
popf
pop
sti
outsl
aam
inc
push
dec
jmp
jge
xchg
pushf
mov
enter
sbb
jb
mov
mov
jl
jo
pushf
in
inc
dec
xor
cmc
pop
jno
cld
or
xchg
cmpl
push
mov
loop
imul
push
push
inc
jg
imul
cli
rorb
pop
add
pop
sbb
andl
xchg
fdivrl
lahf
or
scas
mov
adc
pop
lods
add
inc
and
mov
push
ret
popf
lea
rcrb
push
push
adc
mov
sub
mov
dec
adc
aas
out
mov
jno
and
leave
hlt
stc
push
jnp
mov
dec
mov
into
push
add
lock
jge
xor
mov
bound
pop
sbb
repnz
and
lret
adc
mov
or
jl
loopne
push
mov
cld
fisttpl
movsb
mov
fdivr
rcrb
xchg
hlt
aam
subb
das
ja
mov
loop
cmp
mov
sbb
mov
sub
sbb
mov
dec
dec
test
pushf
rcr
mov
in
cmp
bound
and
movsb
movsl
push
mov
sbb
mov
mov
jg
lret
inc
xchg
sub
sarl
aas
lahf
xchg
lret
rorl
add
mov
sbb
scas
arpl
inc
fdivrs
loop
hlt
xchg
add
push
ss
out
in
mov
movsl
inc
jne
sbb
mov
jmp
pop
push
rolb
adc
fs
data16
test
xor
fdivl
dec
stos
bswap
inc
jecxz
daa
fidivrs
pushf
ret
repnz
or
in
inc
ljmp
nop
push
inc
add
inc
cmpsb
add
ret
xchg
sbb
iret
cmp
jge
sbb
stc
or
xchg
inc
lahf
dec
shl
div
pop
sbb
push
add
ds
lret
cmp
mov
mov
ljmp
push
movsb
xor
adc
cs
hlt
pop
roll
mov
aas
call
sbb
jae
jge
mov
sbb
jns
and
dec
mov
push
loop
scas
or
xchg
push
bound
cmp
inc
and
jl
mov
mov
cmp
xchg
leave
movsl
lcall
push
pop
imul
inc
bnd
push
pop
in
pop
and
mov
add
aad
movsb
pop
dec
dec
popa
ret
rcr
mov
sbb
xor
jl
mov
insb
xor
dec
imul
or
cmp
jne
loop
outsl
je
xchg
xchg
test
inc
loopne
jns
dec
aaa
mov
cmp
sbb
jmp
or
xchg
sub
rcrb
pop
jbe
rcrl
xchg
mov
nop
jnp
mov
adc
rorl
mov
push
pushf
nop
mov
or
cmp
cltd
push
sahf
xchg
sbb
mov
dec
mov
xchg
or
mov
jno
repz
sbb
aas
sbb
jo
xor
stos
cmp
or
leave
mov
pusha
inc
add
outsb
in
movsl
sbb
pop
xchg
dec
loope,pn
push
mov
aaa
push
jmp
mov
hlt
or
push
fs
lret
int3
pop
mov
ds
jbe
sbb
mov
in
mov
fcoms
xlat
ljmp
fisubl
ss
adc
push
fwait
xor
in
loope
iret
cmp
sub
or
push
outsl
push
insb
stc
lods
xor
inc
bound
movsl
lret
scas
inc
mov
sub
cltd
mov
mov
adc
shll
addr16
mov
arpl
loope
bound
je
jb
maxps
adcb
lods
loopne
in
repnz
mov
xchg
aas
aas
mov
sbb
int
popa
pop
in
test
jge
adc
scas
inc
mov
xor
mov
push
mov
cmpl
popa
or
push
cs
xor
pop
inc
xlat
sub
jp
sti
in
pop
push
int3
xor
or
jno
in
inc
fdivp
inc
out
xchg
int3
xor
or
adc
jns
enter
mov
into
mov
daa
scas
adc
sbb
dec
mov
outsl
ljmp
inc
aas
cmp
dec
push
pop
push
notb
repnz
dec
pushf
sbbb
repnz
xchg
xor
repnz
scas
test
sbb
xchg
cmp
gs
pop
clc
mov
xlat
sarb
mov
adc
mov
pop
movsb
mov
push
sbb
aam
mov
test
pop
inc
mov
fisubrl
mov
gs
das
lret
push
iret
xchg
lea
jns
shll
mov
aad
bound
test
dec
bound
push
in
shl
pop
adc
mov
jg
jae
dec
adc
xor
mov
push
adc
pop
sti
fdivrs
movsl
pushf
push
or
and
hlt
inc
iret
push
mov
ljmp
mov
cmpsl
popf
cmp
subb
sarb
fs
xor
lods
inc
dec
out
or
jg
ret
add
fcoms
imul
add
mov
pop
js
iret
add
aam
mov
sti
clc
add
clc
or
push
jno
lock
bswap
dec
enter
cmp
cmpl
fldenv
fnstsw
std
mov
out
fwait
sub
pop
insb
or
dec
jecxz
cmp
fisttpll
inc
lahf
popl
jp
hlt
dec
hlt
rorl
mov
lcall
sbb
out
lret
jge
cli
jg
je
cmp
mov
pop
aas
stc
ja
iret
fnstsw
icebp
sbb
dec
data16
cmc
loopne
pop
out
out
add
in
mov
jne
sti
jp
out
aaa
adc
repnz
mov
mov
arpl
push
xchg
add
std
mov
add
insl
cmc
test
dec
leave
arpl
movsl
in
and
insl
out
jae
pop
inc
jmp
cmp
outsb
sbb
cmpsb
lcall
pop
pop
pop
add
cmp
clc
sahf
jae
push
xchg
sbb
in
push
enter
lcall
enter
mov
cmp
fimull
jne
push
mov
pop
jns
test
add
fbld
imul
jbe
mov
fidivrs
lcall
insl
test
loope
scas
dec
sbb
scas
xor
push
divps
push
cli
mov
inc
or
mov
scas
sbb
adc
pop
rol
andl
ret
push
push
shlb
jae
pushf
sbb
outsb
int
inc
int
mov
mov
sub
xchg
jnp
add
fcoms
data16
imul
add
out
into
nop
mov
stc
fwait
gs
mulb
xchg
xchg
pop
fadds
out
cmp
sbb
lret
mov
lahf
or
jl
lds
mov
in
lcall
or
add
mov
arpl
fsubl
out
jmp
je
push
setae
fucom
adc
sub
pop
pop
dec
mov
cmpsb
push
mov
and
jl
inc
jnp
jae
loope
pop
or
icebp
mov
out
scas
mov
pop
push
mov
jp
adc
scas
shl
mov
ret
mov
inc
xorb
lods
int
sbb
mov
xlat
jbe
adc
pusha
movsb
scas
stos
ficompl
ret
fdivr
sbb
pop
pushf
fld
movsb
cmpb
push
add
jbe
in
mov
adc
push
fdivl
into
or
mov
les
cmpsb
sbb
mov
pop
stos
pop
push
jns
dec
dec
lods
mov
iret
jg
cmp
aad
scas
hlt
mov
jmp
pusha
xor
fldenv
sub
in
int
mov
sbb
mov
scas
mov
pop
mov
hlt
dec
cltd
outsl
imul
ds
ljmp
mov
or
movsl
cli
aaa
ret
mov
lcall
test
inc
ja
jnp
or
repz
jbe
rclb
pop
mov
push
adc
push
addl
mov
nop
cltd
pop
das
out
mov
push
mov
loop
xchg
xchg
or
dec
fimuls
mov
insb
and
xchg
xchg
add
andl
cmpsb
sbb
xchg
jge
sub
pop
jmp
dec
jno
xchg
xor
into
or
jmp
and
or
loope
or
rorb
outsb
pop
mov
pop
xor
xchg
add
sub
jmp
mov
pusha
adc
mov
mov
sbb
sbb
fwait
popl
pop
jmp
scas
push
insb
mov
mov
inc
sub
out
cmp
lret
and
js
or
xchg
jge
mov
stos
push
cmp
flds
inc
adc
cmc
inc
inc
inc
pop
xor
add
movsl
scas
mov
fyl2x
mov
insb
shlb
mov
scas
cmpsl
cmp
fstpl
jae
cmc
sub
ds
inc
enter
outsl
push
inc
arpl
fistpll
jmp
lret
xor
cmpsb
mov
movsl
stc
scas
test
dec
test
jbe
jp
or
mov
mov
and
or
je
pop
ss
lea
sub
loope
out
test
call
mov
xor
jge
push
iret
outsb
jmp
sub
fmul
add
add
out
jb
xor
ljmp
xchg
in
fstps
out
dec
ret
or
arpl
jecxz
xchg
xor
hlt
lods
xor
lcall
insl
adc
pop
rol
jge
insb
cs
jecxz
imul
jbe
lods
bnd
push
fwait
ljmp
mov
pop
and
int
in
imul
imul
inc
lods
and
push
into
inc
jmp
sub
sbb
push
adc
xor
push
fistl
dec
mov
das
or
fistl
inc
pop
jbe
addr16
xchg
mov
push
int3
xchg
sub
icebp
in
or
cmp
xor
jnp
cli
fcmovnb
adc
lods
sti
or
push
dec
sbb
xor
test
int
and
stos
hlt
imul
stos
or
aad
lock
lea
mov
push
xor
mov
test
pop
imul
add
ss
dec
movsb
and
lahf
add
std
inc
push
inc
stos
dec
or
into
inc
stos
mov
inc
aas
cmp
loop
mov
or
mov
rolb
xor
out
xchg
out
adc
fstps
jl
dec
pushl
mov
jne
das
fs
adc
loope
xchg
aam
xchg
vmptrld
xchg
cmp
pop
adc
hlt
movsl
adc
jp
sbbl
jo
mov
out
lret
dec
fwait
pop
test
xchg
add
popa
test
xchg
or
fimull
add
push
cltd
lcall
jae
ret
and
dec
in
lea
rolb
xor
pop
lret
std
sti
repz
inc
rclb
fisubs
dec
fisttps
ljmp
pop
jmp
test
call
cmpb
sbb
repnz
mov
mov
test
jno
mov
call
sti
xchg
xchg
xchg
and
arpl
outsb
fldl
jo
lcall
cmp
push
int
test
call
repnz
push
ret
je
and
mov
mov
mov
add
lea
pop
sahf
mov
addl
lods
sub
jbe
data16
inc
ljmp
ds
stc
pop
mov
mov
adc
pop
mov
xchg
xlat
jno
and
inc
sbb
ficoms
arpl
pop
repz
xor
rcl
popf
sub
dec
rolb
dec
fcomp
adc
add
subb
movsb
test
adc
xchg
mov
out
push
div
imul
enter
pop
loope
sbb
jg
mov
push
cmp
xchg
push
jnp
adcb
cwtl
es
jmp
jns
sub
cwtl
mov
push
add
xchg
add
jecxz
into
and
jnp
xchg
push
xlat
lcall
in
loopne
mov
jge
jne
je
and
fidivs
daa
pop
add
fisubrl
adc
jo
dec
cmp
and
iret
mov
adc
ret
inc
xchg
ja
sub
add
pop
lahf
push
xor
out
popa
lret
cmpl
cli
dec
lahf
out
jae
xchg
sub
xchg
cmp
jmp
mov
aas
adc
lret
dec
mov
xchg
push
adc
es
and
pop
jl
fwait
cld
nop
sbb
jnp
jmp
dec
cli
out
call
lods
in
cmovo
inc
mov
pop
mov
sti
ficoml
and
xor
sub
mov
mov
and
popf
andb
jge
nop
pop
adcb
dec
test
aam
stc
lea
jp
out
pop
sbbl
mov
jns
xchg
in
fwait
mov
xor
xchg
les
int
xor
icebp
lods
and
inc
lret
jge
insb
ret
jb
fdivrl
cmp
lret
xlat
fstpl
stos
inc
fiadds
jmp
and
lea
sahf
ss
or
dec
je
lret
jae
andb
cmp
jecxz
fistps
mov
xchg
cli
pushf
aaa
mov
push
es
inc
out
jecxz
jp
and
sbb
sub
movsl
cmc
pop
in
xchg
xchg
ret
sahf
ljmp
andl
shl
xor
repnz
bound
pushf
xchg
mov
jge
jo
in
pop
xor
dec
inc
sbb
push
jmp
and
pop
out
push
inc
mov
popa
adc
pushf
aas
insl
xchg
cli
cmp
negb
pop
rorl
sbb
xchg
sub
jnp
add
mov
sti
mov
in
je
mov
pusha
pop
inc
push
xorb
inc
imul
sbb
mov
push
pushaw
lret
mov
shlb
pop
je
or
mov
roll
add
aaa
add
cmp
xchg
divl
pop
mov
out
cli
mov
mov
in
ss
xor
cltd
cmpsb
jl
popl
cmp
cmp
or
idiv
xchg
pushf
dec
clc
stos
mov
gs
ss
sbb
ret
lods
jl
repnz
loope
popf
pusha
mov
pop
lahf
add
test
xlat
pop
das
and
push
push
mov
in
adc
mov
or
and
rcrb
jmp
shl
arpl
adcl
xchg
pop
mov
xor
xchg
adc
xlat
cli
rcr
aaa
mov
insb
in
out
pushf
xor
into
add
cmp
stos
pop
data16
inc
and
jns
mov
ret
xchg
ss
pop
imul
xchg
enter
push
movsb
mov
int
cmp
mov
imul
push
add
adc
and
rorl
dec
inc
pusha
sub
cmpsl
sub
fdivrs
jecxz
jmp
mov
push
js
push
das
icebp
iret
sahf
adc
push
push
test
pushf
jbe
popa
fists
sarl
sub
inc
add
in
js
dec
lcall
fisubs
jecxz
sarl
insb
ljmp
mov
sbb
pop
repnz
xor
mov
popf
pushf
xor
lods
outsl
or
inc
bound
mov
lods
adc
ds
xchg
mov
sbb
lcall
lret
inc
cmc
pop
xchg
fists
lods
fcmovne
mov
cwtl
xor
jb
push
jge
sbb
pop
push
test
mov
inc
repz
xchg
cs
jno
subb
jmp
add
adc
out
xor
icebp
mov
adc
mov
xor
pop
add
cs
mov
out
mov
add
fisubl
pop
mov
xlat
in
js
xchg
sub
inc
cmpsl
cmp
aas
aad
lahf
xor
scas
push
sti
inc
cmp
cmpl
xchg
xor
or
dec
hlt
lock
mov
jmp
mov
xor
cmp
dec
pop
test
fldcw
push
push
or
pushf
shl
pop
cs
and
cmp
fcmovnb
cli
jno
cmpsl
xchg
mov
pop
hlt
std
mov
ss
or
mov
cmp
les
rcr
sbb
add
cwtl
adc
push
je
xor
fcomps
cmp
fucom
jbe
das
sbb
or
cmp
dec
mov
cld
jmp
shll
mov
stos
cmp
mov
xorb
pop
enter
jge
in
sub
rdmsr
icebp
mov
pop
inc
lcall
insl
jne
sub
or
sbb
jnp
scas
mov
dec
mov
add
dec
inc
pop
in
mov
mov
cmp
lret
loop
pop
mov
movsb
sub
push
sbb
dec
lods
mov
in
add
scas
lahf
pop
or
leave
out
cltd
adcb
pop
aas
xlat
mov
and
push
vandpd
add
pop
push
lcall
mov
and
pop
jbe
aaa
sbb
sti
add
shr
push
xchg
or
xlat
mov
pop
mov
adc
dec
inc
xchg
ljmp
push
mov
add
into
jbe
js
addl
mov
add
out
out
inc
xchg
mov
sub
fsub
mov
std
test
loop
xor
mov
cmp
rorb
cs
movsb
xor
les
cmovae
or
mov
fisttpll
mov
add
adc
and
push
sar
inc
xor
push
dec
pop
dec
mov
out
xchg
movsl
test
cld
das
push
lret
insl
push
mov
mov
inc
jnp
ret
xchg
adc
mov
cwtl
jle
jmp
or
sub
mov
mov
sub
push
cmp
or
pop
es
cmp
shrl
clc
fst
jecxz
leave
jl
loope
fnstsw
add
inc
je
mov
fdivs
jl
jecxz
icebp
mov
inc
xchg
imul
int3
dec
dec
lcall
jnp
scas
scas
push
pop
cmp
mov
jg
xchg
test
adc
loope
jo
jmp
fildll
int
mov
mov
mov
jge
repz
mov
jne
addr16
ss
out
or
test
xchg
rcrl
mov
jo
fisubrl
ljmp
mov
sbb
jle
push
push
push
or
imul
pop
fldl
int
push
jae
inc
ret
mov
cmp
out
repnz
popf
cmpl
pop
or
sbbl
outsb
mov
pushf
lds
dec
testl
std
and
lahf
cmp
push
inc
rolb
insb
insl
or
pusha
test
dec
inc
decb
xchg
or
xor
jp
je
stos
xlat
mov
mov
push
ds
sub
in
push
and
dec
lcall
iret
push
mov
dec
mov
enter
xor
adc
cmc
movsl
sbbb
push
mov
xchg
mov
cmp
push
mov
jmp
fistl
loopne
aam
sub
or
rol
mov
or
cwtl
add
add
jnp
inc
and
push
xchg
mov
cmc
sbb
scas
test
xor
pushf
mov
xchg
mov
lds
and
out
mov
jno
push
aaa
aad
cmp
jb
dec
fidivrl
sub
out
imul
push
mov
xor
iret
dec
add
xor
lret
lock
mov
mov
xor
subl
scas
jl
data16
addr16
sbb
jecxz
inc
pop
sub
push
arpl
lcall
mov
xor
mov
mov
cmp
inc
test
clc
xchg
and
out
insl
push
jl
test
sbb
pop
popf
inc
ficoms
jge
inc
xchg
movsb
mov
lods
mov
addr16
insb
out
iret
pop
sub
popa
les
xor
lahf
xchg
sub
mov
cli
out
xor
add
and
jle
push
and
jge
add
pop
or
mov
dec
mov
aad
pop
psllq
enter
shlb
mov
add
mov
jnp
sub
mov
xchg
inc
pop
dec
jle
mov
roll
mov
add
push
je
add
jb
lds
je
adc
adc
pop
and
repz
sbb
inc
imul
pop
dec
jge
mov
mov
push
aam
sbb
mov
jl
sarl
cmp
sbb
addb
mov
add
leave
cmp
shlb
and
les
pushf
clc
shlb
int
push
mov
jg
add
lea
add
sub
sbb
ljmp
adc
cmc
loope
jns
sbb
imul
dec
fcomi
mov
jae
sbb
add
push
cmpsl
mov
cwtl
adc
call
enter
push
ret
imul
and
movsl
jb
dec
inc
xor
cmpsl
rcll
dec
fwait
pop
mov
iret
cmp
in
and
inc
or
divl
cmp
mov
dec
mov
aaa
popa
fsub
movsl
pop
test
lret
adc
push
pop
je
xor
std
cld
xor
jnp
sti
shrb
mov
xchg
hlt
pop
call
stc
jg
push
xor
push
cmpb
xor
dec
jne
pop
daa
stos
or
lahf
cmpsb
mov
fld
ret
mov
fisubs
mov
aas
ljmp
and
push
xor
xor
dec
push
xor
leave
sub
int3
fdiv
test
scas
fdivrs
mov
inc
mov
mov
pusha
mov
jge
pop
sub
sbb
mov
cmp
nop
xor
inc
inc
xchg
and
cmc
fadd
loopne
lea
push
jp
leave
es
jecxz
lock
lds
cmp
sbb
cmp
icebp
out
aam
lea
daa
cmp
les
xchg
loop
lahf
xor
icebp
jge
outsl
lods
mov
and
mov
sahf
push
imul
out
pop
mov
mov
inc
cltd
xor
out
loope
xor
add
nop
out
mov
push
and
iret
outsl
mov
xchg
sub
or
xchg
clc
daa
mov
pop
hlt
jns
imul
jne
stos
or
test
fldcw
out
loopne
insb
pop
sub
dec
mov
shll
xor
xor
jne
js
push
jge
push
pop
xor
or
aaa
or
fistpl
clc
mov
loopne
xlat
jae
inc
int
pop
stos
xor
push
lods
enter
xchg
ja
xchg
mov
dec
pusha
jb
pop
rcrb
push
jns
mov
xchg
push
add
jcxz
les
dec
add
sub
mov
dec
sbb
test
nop
cmp
push
sbb
mov
scas
push
test
shrl
rcrl
push
test
mov
and
stos
leave
lahf
jp
pop
adc
shrl
adc
mov
adc
pop
pop
push
ret
push
scas
mov
pop
js
clc
pop
xor
outsl
fisubs
enter
jbe
ret
repz
repz
and
cmp
cmp
nop
dec
pop
push
mov
xor
loop
mov
cmc
imul
pushf
push
enter
add
adc
and
dec
mov
jne
push
mov
andb
mov
xor
sbb
and
inc
xor
mov
mov
hlt
xchg
adc
sbb
jp
add
fiadds
xor
call
push
mov
int3
adc
ss
add
xor
push
int3
mov
fsubrl
pop
ret
sbb
jmp
out
in
add
rorb
lcall
jle
icebp
out
xchg
jmp
enter
sbb
aam
lahf
dec
and
ret
ss
cmp
mov
movsl
push
xor
in
test
lret
sub
bound
bswap
leave
inc
ret
test
xlat
jmp
xchg
mov
xchg
out
lods
dec
clc
inc
pop
xor
fsubrs
mov
in
orl
dec
lods
pop
xor
xchg
mov
cwtl
xor
les
add
cmp
call
push
jge
adc
nop
nop
lret
out
movsb
js
mov
xchg
xor
xchg
jl
shll
cltd
inc
or
adc
jbe
push
cltd
push
icebp
jp
ss
inc
sub
lock
shl
test
movsl
xor
inc
push
sahf
test
pop
sub
mov
test
sub
icebp
shll
lahf
sub
lret
push
addr16
and
lahf
push
pop
push
push
mov
insb
jno
xchg
lret
jo
jb
push
jl
lods
movsb
push
scas
sbb
shrl
aaa
out
shrl
and
insl
int3
loop
sbb
push
lods
std
sbb
inc
lret
mov
adc
out
psubb
and
nop
xchg
cwtl
xchg
loope
mov
addr16
xor
cmpsl
cld
or
mov
in
mov
jbe
pushf
xor
ret
ljmp
or
fs
xchg
addr16
push
mulb
cmp
xor
leave
insb
pop
xor
rcr
mov
xor
mov
xchg
inc
scas
std
add
das
or
addl
mov
jmp
in
mov
or
test
stos
popf
jno
repnz
push
push
mov
clc
adc
lahf
aaa
inc
mov
push
daa
in
lds
enter
stos
pop
outsb
insl
jae
cmpsl
inc
dec
xchg
adc
pop
mov
loopne
aam
mov
mov
xchg
divl
push
push
mov
aam
loop,pt
vpcomb
repz
xchg
call
scas
inc
dec
fcompl
jp
mov
mov
sbb
cmp
movsb
mov
dec
inc
sti
or
int
and
sbb
hlt
dec
push
pushf
fs
pop
push
mov
dec
insl
jno
int
inc
out
mov
jp
mov
popa
mov
mov
push
jns
mov
adc
push
out
lods
xchg
in
jns
stos
push
jo
pop
mov
mov
xchg
jmp
mov
out
xchg
call
pop
gs
mov
lds
sti
addr16
cmp
xchg
cwtl
js
loopne
aam
or
loopne
mov
and
fwait
inc
push
lock
std
cld
mov
sarl
sbb
mov
loopne
dec
inc
movsl
enter
shrl
lret
jge
add
push
cmp
xchg
xchg
dec
leave
cs
xor
xchg
add
add
sub
or
inc
push
xchg
bound
mov
shll
dec
jnp
cmp
mov
addr16
cmpl
mov
dec
xor
sahf
mov
mov
mov
add
mulb
mov
movl
ficoms
call
ret
sub
mov
movsl
jne
ja
and
insl
sbb
fwait
adc
rcrb
aad
mov
sarb
pop
pop
iret
movsb
ss
push
enter
mov
fs
mov
dec
ret
mov
mov
lock
shr
inc
fs
mov
sbb
mov
xlat
hlt
sbb
das
inc
sbb
aas
mov
push
jecxz
loope
xor
test
lea
or
ljmp
dec
mov
push
std
xor
sub
lahf
pop
lahf
jp
popf
test
notl
cmp
insl
fimull
clc
fimuls
fiadds
inc
in
cmp
push
int3
mov
into
je
jbe
outsl
roll
shrb
push
xor
ds
loope
daa
jle
cmp
xchg
fsubl
mov
es
mov
and
or
aad
fnstenv
mov
jl
cmp
stc
mov
jo
rcrl
orl
loope
ja
mov
jno
cwtl
sti
add
cltd
mov
call
dec
xchg
popf
pusha
xchg
push
aad
rcr
add
repz
jp
cmc
adc
jge
push
mov
add
shll
cmp
mov
fs
xlat
push
dec
xchg
mov
jno
in
sti
jne
add
into
add
call
repz
adc
aad
shlb
out
xchg
shlb
push
test
fs
nop
jmp
mov
cmp
insl
inc
and
cmpsl
and
in
jp
enter
cltd
inc
sub
xor
stos
jne
sbb
cmp
jle
ret
or
mov
inc
cmp
mov
clc
in
mov
rorl
rorl
or
inc
dec
lret
lahf
mov
sbb
insl
andb
out
jge
std
ss
lcall
lock
arpl
daa
aas
pop
jno
lahf
push
xchg
or
fidivrs
out
inc
sub
push
add
mov
add
hlt
jo
xor
or
fnstsw
or
stc
push
out
lahf
into
push
mov
in
shrl
and
ss
or
adc
movsb
ja
sub
sbb
or
push
fildl
cmp
sbb
mov
push
int3
ja
out
sbb
lret
je
pop
dec
sbb
aaa
sub
rorl
pop
fdivs
xor
xor
and
xor
add
jge
lock
cmpsb
lods
xlat
cmovg
jne
aam
and
les
sarl
pop
fwait
pcmpgtb
pop
outsb
cmp
pop
xor
dec
mov
mov
jp
mov
sub
mov
fsubl
mul
ret
cmp
dec
jno
inc
loopne
lock
adc
jg
daa
xchg
jge
dec
mov
js
cmpsb
iret
aaa
fmuls
xor
mov
cmp
push
idivb
sub
rolb
pop
rcll
cs
and
fmull
imul
mov
shr
xchg
inc
pop
pusha
jnp
mov
in
xchg
lret
push
ds
mov
in
out
xchg
mov
ds
daa
rolb
pop
rcrl
movsl
mov
hlt
addl
pop
sub
pop
sysexit
xchg
sub
movsl
rclb
jo
ss
mov
dec
cli
mov
cmp
pop
mov
shrl
jbe
pop
repz
push
pusha
imul
into
jo
lret
lahf
leave
cmc
movsl
ljmp
rorb
pop
fcos
nop
xchg
jns
cltd
cmpsl
out
loope
orb
out
mov
mov
scas
add
sahf
pusha
bound
fnstsw
mov
pop
stos
sub
xchg
jl
in
int
arpl
iret
mov
xor
jp
pop
je
push
out
int
lret
ret
add
aaa
xor
and
fadd
adc
and
mov
cmp
insb
into
aas
cmpsl
xchg
jl
push
cmp
iret
ret
push
std
les
in
adc
adc
xchg
inc
in
mov
mov
push
hlt
call
pushf
pop
sbb
add
mov
fstpt
sti
std
inc
or
gs
jmp
adc
sub
cmpsl
jp
xor
jbe
add
sti
scas
imul
daa
xchg
xchg
mov
inc
mov
movsb
mov
outsb
or
or
sbb
in
xor
sub
jb
push
and
adc
add
add
test
dec
addr16
pop
mov
jg
push
cmp
add
mov
fwait
outsb
pop
xor
mov
loopne
pop
sbb
rolb
mov
mov
cmp
cmp
mov
stos
hlt
push
push
loopne
testl
js
es
push
pushl
or
sub
or
dec
and
mov
sbb
push
inc
out
lcall
jnp
lds
aas
pop
adc
cmpsb
bound
dec
xchg
test
xchg
xchg
ret
ss
inc
cmp
push
fnstenv
push
fisubl
stc
xor
xor
and
jge
inc
pop
gs
loope
je
out
dec
or
jno
xor
jbe
out
push
dec
lods
inc
adc
pop
sbb
jns
fistl
mov
ficompl
inc
mov
push
push
lea
cmp
enter
push
fimuls
in
push
lret
or
add
aaa
push
clc
push
and
adc
je
xor
popa
dec
jecxz
ret
cmp
popf
xchg
test
scas
cwtl
or
int
jg
add
mov
sub
xacquire
andl
cwtl
aad
push
sti
push
push
adc
leave
mov
test
mov
or
sub
push
pop
and
dec
out
pop
add
pop
fs
mov
sub
jnp
jb
xor
push
xchg
lcall
mov
cmovle
mov
fcompl
adc
ret
xor
xchg
arpl
lds
cwtl
stc
sahf
enter
lea
fs
cmp
add
stos
cmp
fcomip
cmp
xor
xchg
aad
jg
mov
ds
inc
ret
mov
imul
js
push
lahf
and
xor
mov
cmp
scas
popa
xor
cs
repz
mov
add
lahf
in
mov
stc
xor
xor
mov
ja
dec
ljmp
pushf
into
xchg
mov
dec
xchg
in
and
data16
fdivs
adc
dec
in
add
nop
cltd
inc
fsubr
in
sbb
mov
ja
and
lcall
sbb
stos
jl
mov
clc
rorl
shll
or
call
cmp
movsb
add
inc
aas
lea
adc
cld
jp
jecxz
repz
pusha
bound
mov
out
xor
nop
sbb
lret
scas
or
pop
xchg
sbb
je
mov
mov
dec
inc
sbb
js
ror
pushf
inc
push
xchg
in
ror
in
lret
test
into
and
scas
add
mov
ret
std
xchg
sbb
mov
mov
sbb
ss
nop
push
xchg
and
jle
insl
mov
mov
hlt
cld
fst
aam
cmp
mov
mov
fnstenv
std
loope
cmp
jmp
in
mov
cmp
push
push
fsubr
inc
or
dec
notl
jp
and
aaa
shlb
in
push
add
fcomi
xchg
adc
fnstsw
adc
add
sbbl
mov
mov
push
push
xchg
js
fstps
cmp
rcll
jb
inc
cmp
sub
leave
and
lret
das
daa
mov
ss
ljmp
xor
push
inc
std
fsts
xchg
push
mov
jmp
scas
cmpsl
pop
int3
push
icebp
in
xor
adc
cmp
loope
scas
mov
push
es
sub
adc
inc
addl
sbb
shlb
jne
and
les
cmp
jne
xor
mov
mov
outsb
js
xchg
addr16
inc
or
lods
add
mov
mov
mov
ss
je
xor
cmp
loopne
repnz
loop
add
xor
cltd
rorl
inc
sbb
ret
or
aam
lret
dec
pop
pusha
add
sbb
lret
inc
xchg
mulb
out
jno
cmp
int
xor
les
daa
daa
jns
adc
roll
call
mov
lahf
jno
fs
mov
inc
ret
xchg
or
inc
scas
jnp
outsl
cmc
das
mov
cmp
mov
jg
bound
mov
or
jecxz
in
mov
std
loop
jns
and
inc
sbb
lea
movsb
aam
jl
mov
inc
es
ret
ss
dec
inc
mov
sbb
push
dec
xor
rorl
sbb
adc
fs
out
shll
xchg
or
pusha
gs
subl
push
jge
mov
mov
ja
std
cs
int
push
mov
xchg
cmp
mov
jnp
or
fwait
pop
jno
fsubrp
push
or
pop
fildll
jecxz
addr16
xchg
cltd
gs
faddl
pop
pop
into
out
lea
jg
scas
xor
mov
rcrb
mov
std
mov
mov
mov
ja
cs
test
push
jb
cmp
cld
imul
mov
outsb
cmp
jae
mov
mov
test
sub
pop
or
jl
mov
test
push
sbb
sbb
push
add
nop
sbb
mov
mov
lods
int
clc
jge
stos
jnp
pop
xchg
pushf
lcall
pop
adc
add
mov
sub
enter
xchg
cmp
loopne
outsl
ret
hlt
sub
ret
mov
jbe
xchg
lret
int3
mov
fs
ljmp
sbb
gs
mov
xchg
mov
nop
rol
pop
mov
loop
fldt
pop
sbb
sub
xchg
test
inc
dec
fwait
mov
iret
mov
push
mov
addr16
pop
test
push
push
cmp
lods
repz
jne
cmc
sub
sbb
pushf
cs
jo
and
cmp
mov
fs
mov
into
lcall
mov
xchg
mov
ret
push
vpcomud
daa
aaa
adc
loopne
adcb
mov
in
in
out
fdivl
lahf
inc
mov
or
mov
pop
lods
in
ja
mov
xchg
xchg
inc
out
outsb
enter
pop
inc
pop
sbbl
xor
adc
mov
repz
std
gs
shl
pop
mov
pop
das
sbb
rol
mov
int
and
jecxz
cmpsb
sub
jne
add
sarl
fmuls
enter
das
jp
aam
inc
aad
xchg
lahf
jae
push
movsl
push
aad
sub
xchg
mov
imul
dec
stc
jecxz
xor
sahf
mov
cpuid
jl
mov
dec
mov
cmp
mov
cmpsl
xorl
es
sbb
int
and
sahf
lods
or
imul
jecxz
lea
fidivrl
push
aas
inc
out
out
fadds
xchg
xor
lcall
add
or
or
enter
in
lock
fs
stos
jne
ljmp
fcmovb
in
std
rorl
jo
dec
jge
inc
addr16
lock
mov
or
imulb
jae
xor
sub
dec
int
je
out
and
mov
icebp
mov
fninit
sbb
leave
mov
mov
mov
mov
lods
pop
sub
adcl
mov
pop
xchg
leave
or
pusha
xchg
cmp
add
cmpsl
dec
dec
jo
jnp
movsl
mov
and
push
mov
cwtl
push
out
movsb
jb
stos
dec
imul
in
jns
xchg
jmp
shl
mov
data16
test
lcall
jg
test
cld
xchg
sahf
xor
push
mov
mov
add
cmpsl
mov
sbb
and
enter
repz
call
push
cld
sbb
mov
mov
mov
pop
ret
je
sbb
pushf
stos
dec
pop
call
jne
jg
roll
mov
out
mov
dec
cmp
xchg
outsl
inc
and
out
push
and
jo
push
fcoms
inc
rcrl
jecxz
mov
push
mov
lret
adc
pop
cmp
pop
in
cltd
dec
inc
mov
lea
out
in
pushf
jbe
subl
jo
mov
pop
add
mov
lret
hlt
daa
lcall
add
loop
pop
int3
adc
mov
mov
sub
inc
loope
cwtl
jno
insb
cmp
and
push
arpl
outsl
adcl
dec
jmp
stc
pop
mov
sub
loopne
out
ret
pop
cmp
lods
js
popf
xor
xor
sub
xor
dec
mov
das
test
sti
dec
mov
cmp
imul
into
lock
lahf
jmp
fbstp
pusha
mov
in
aas
lock
sarb
test
leave
xchg
lea
sbb
jnp
xor
mull
hlt
popa
xor
fcoms
cmpsl
add
adc
jo
cli
inc
stos
test
mov
sub
push
idivl
push
xchg
arpl
adc
aam
fs
mov
shr
imul
ja
dec
adc
movsl
adc
enter
adc
repz
je
push
push
bnd
cs
mov
cmp
dec
xor
xchg
iret
jns
jns
xor
push
or
mov
loop
shl
leave
movsl
and
pop
xor
jb
fs
mov
jnp
jb
mov
xchg
adc
pop
cli
flds
aam
je
dec
leave
mov
inc
pop
xor
adc
jne
mov
jp
push
adc
push
js
das
or
das
pop
ss
stc
int
xchg
jle
pop
iret
outsl
or
mov
mov
es
je
sub
in
out
adc
pop
push
fcompl
mov
mov
jo
sbb
xor
nop
icebp
loopne
lds
imull
pop
loopne
push
mov
lea
imul
mov
cmp
rol
xchg
sub
fwait
pop
mov
pop
cli
in
cmc
addl
mov
fldl
lds
repz
pop
mov
jns
js
fs
loope
sub
nop
jno
shlb
and
repnz
mov
sbb
pushf
cwtl
xor
sub
adc
lcall
lock
mov
lret
into
lret
mov
movsb
in
out
add
out
or
xchg
add
mov
pushf
mov
ds
or
push
pop
ljmp
mov
jne
add
or
jp
sbb
adc
jecxz
push
mov
fldt
ret
adc
ja
fdivr
rcll
dec
cs
arpl
xlat
xor
mov
and
sbb
xor
mov
imul
jp
push
add
fimuls
lahf
mov
push
mov
bound
dec
outsb
cmp
mov
mov
icebp
push
push
dec
in
jo
inc
mov
ja
loop
push
mov
cs
inc
jg
ficomps
or
lea
sub
outsl
in
jne
mov
or
mov
test
cmp
xor
das
adc
jb
jge
test
push
pusha
jle
add
mov
cmpsl
lods
add
ret
inc
das
pop
pop
cmpsl
mov
das
pushw
adc
gs
shrl
adc
cs
push
std
pusha
in
sub
push
mov
in
jb
nop
adc
into
xor
or
sub
cmp
add
fisubl
fdivl
aas
stc
in
fiadds
jo
cld
shlb
sub
mov
cli
lcall
stos
adc
xchg
fnstenv
mov
jnp
cwtl
inc
mov
jno
rcll
adc
jbe
daa
fildll
test
push
ret
mov
popa
add
cli
aad
pusha
dec
adc
dec
imul
add
js
xor
test
jl
fistpl
popf
das
popa
add
popf
jns
inc
cmpsb
mov
ljmp
outsb
mov
into
push
adc
xchg
mov
pop
xchg
adc
xor
inc
clc
sub
test
movq
push
cmc
push
jnp
jge
movsl
nop
ret
mov
or
das
gs
leave
sub
fsubrl
fwait
call
mov
jge
test
xchg
push
jbe
xor
adc
push
scas
push
js
xchg
mov
pop
inc
sbb
inc
cmp
stos
mov
and
cld
fstpl
add
pusha
cmp
fbld
pop
and
mov
add
fwait
add
jns
sub
xchg
mov
xor
jge
sub
divb
add
enter
std
pop
imul
dec
rcl
mov
mov
aam
xchg
and
pop
fstl
mov
pop
pushf
jb
loopne
and
out
and
seta
adc
and
mov
add
push
jne
ljmp
gs
mov
and
out
mov
push
fcmovnb
adc
scas
cmp
or
jns
fisttpl
push
push
stos
adc
jne
jmp
sbb
and
push
outsl
outsb
fwait
push
jbe
je
or
icebp
mov
test
xchg
sbbl
aam
mov
add
jbe
lahf
ficoms
pop
movsb
hlt
sub
lret
cmp
bound
jnp
fadds
adc
push
jnp
scas
mov
mov
loope
mov
and
cmpsl
or
add
shlb
lods
data16
fisubrl
push
call
and
inc
and
pop
xor
inc
mov
jae
push
out
inc
test
ljmp
negl
mov
scas
test
sbb
std
scas
xchg
lock
scas
push
mov
mov
jecxz
or
out
int3
mov
mov
adc
movsb
fimuls
cld
cmp
mov
cmp
pushf
icebp
andl
into
inc
ss
fld
xchg
push
cmpsl
sub
xor
jg
lcall
add
cmp
mov
lea
xchg
pushf
jp
les
mov
jg
movsl
fsubl
push
xchg
test
mov
icebp
and
jne
mov
mov
sbb
cmpsb
orl
add
out
xor
mov
cmpsl
mov
aam
sti
adc
adc
mov
js
test
push
xchg
mov
shr
mov
pop
iret
adc
xchg
rcr
lods
mov
enter
fsts
bound
or
jno
cmp
push
cmpsl
xlat
rcrl
jne
bound
loop
mov
push
movsb
jmpw
scas
fidivrl
lahf
popa
fcompl
adcb
pop
push
enter
mov
push
ljmp
sub
and
or
std
push
incl
cmp
cmpl
xorb
or
jne
adc
aam
sub
cli
loopne
pop
inc
incl
stos
mov
pop
or
jns
fwait
cs
sub
pop
add
ds
fsubrl
and
adc
loop
cmp
enter
dec
fstps
inc
xor
data16
mov
pop
jge
dec
pop
cmc
dec
jo
cmc
daa
pop
mov
mov
out
xor
test
jbe
pop
mov
sti
mov
das
xor
cmp
push
push
or
mov
outsl
shlb
movsl
adc
push
pop
mov
fldt
popa
cmpsl
or
mov
orl
jno
inc
in
jne
aas
adc
notb
imul
jl
dec
cmpsl
push
xor
pop
fwait
imul
scas
push
mov
add
cmp
pop
addr16
pop
ss
std
xor
daa
xchg
dec
xor
adc
dec
cmp
dec
ret
cmc
sbb
fcoml
ret
cwtl
sub
imul
fistpll
xor
mov
test
adcl
mov
in
dec
dec
pop
sub
aas
fistpll
cmp
pop
and
popf
inc
dec
mov
lods
xor
std
xor
mov
mov
dec
mov
test
mov
push
jge
fistpll
mov
xchg
adc
sbb
mov
loopne
mov
cmp
xor
cli
pop
sub
loopne
ret
test
push
jae
subb
hlt
lock
call
xchg
mov
or
ret
push
cwtl
pop
fwait
andl
pop
sbb
or
idivb
popf
data16
adc
cwtl
mov
inc
or
xchg
mov
cmp
shll
lea
iret
jb
or
aad
lret
aaa
iret
fidivl
ret
xchg
negb
lods
scas
xor
add
or
sub
mov
mov
mov
scas
push
push
icebp
or
aaa
or
in
fnstcw
sub
add
test
jecxz
aad
fldenv
mov
nop
xor
adc
lcall
add
mov
jbe
add
out
out
pop
mov
and
jnp
mov
imul
ljmp
lods
hlt
out
push
imul
jb
sarl
fsubrp
div
fwait
sbbl
cmp
cli
inc
push
stos
pop
pop
cmpsb
dec
js
inc
mov
push
icebp
sbb
pop
out
dec
and
mov
or
fidivs
jbe
and
daa
mov
push
sbb
push
xor
out
outsb
clc
rorb
sbb
push
cmpsl
ret
loopne
xchg
jg
filds
leave
jb
cwtl
fildll
imul
js
pop
sbb
leave
bound
jmp
jo
or
addr16
test
xlat
lods
xor
jae
and
push
cmpsl
pop
dec
mov
es
sub
movsb
mov
stc
adc
in
mov
mov
pop
pop
push
dec
shl
pop
inc
mov
dec
inc
xchg
loop
and
rcr
ljmp
add
dec
fwait
xchg
or
loope
aam
hlt
push
add
loopne
xor
test
cmpl
out
clc
mov
rcll
andl
sub
bound
or
aas
jbe
pushf
test
or
movsb
jg
adc
cmp
scas
jae
jbe
dec
add
loopne
test
movsl
jnp
sbb
std
inc
out
mov
cmpsl
xchg
push
bound
stc
push
add
andb
das
add
sbbl
fsubl
sbb
lds
sbb
cmpsl
popa
mov
data16
cmpsb
fdivr
std
stc
jmp
enter
pop
repnz
aam
push
jle
icebp
adc
int3
adc
adc
cmpsb
addr16
sbb
and
in
sarb
rolb
mov
imul
lea
mov
jmp
addl
and
add
cmpsb
push
add
loop
add
mov
insb
mov
test
adc
std
push
push
out
cmp
mov
pushf
out
or
jl
cmpsb
fwait
iret
or
ja
or
mov
stc
je
pusha
cmpsb
leave
fadd
push
insl
xchg
inc
mov
sahf
inc
inc
psubsw
sub
pop
mov
scas
call
fs
sbb
loop
and
fstpl
jno
aad
mov
dec
into
mov
int3
ficompl
jecxz
loope
dec
bnd
mov
or
into
jns
shrl
sub
mov
dec
ds
insl
push
in
lods
dec
and
pop
mov
mov
repz
stos
lahf
pop
xchg
jbe
dec
mov
xor
add
mov
xchg
push
add
add
or
loopne
mov
sub
cmpsb
and
bound
pop
fisubrs
roll
dec
jmp
lcall
sub
push
push
imul
lock
imul
enter
cli
xchg
mov
imul
adc
xchg
fidivs
push
add
fldt
jge
add
pop
pop
lret
enter
mov
mov
pusha
stos
std
xchg
jg
xlat
cmp
fsubp
mov
or
jns
adc
sbb
mov
rcll
imull
inc
shl
or
push
mov
jmp
loopne
jae
cmp
or
out
pop
and
xor
xor
dec
sbb
cmpsl
xchg
lock
leave
and
and
xchg
rcrb
shlb
pop
xchg
aad
push
jmp
adc
adc
cmpsb
dec
mov
inc
in
or
pop
add
cmp
gs
adc
jle
push
ret
add
and
inc
xchg
daa
lcall
clc
mov
cmpsl
xchg
mov
cmp
hlt
jp
xlat
mov
call
pop
add
pop
sahf
ljmp
pop
shld
push
and
lret
aad
jne
popa
mov
xorb
sub
and
hlt
jl
movsl
adc
rcll
fisttpll
std
adc
xchg
fstps
add
inc
fisubrl
iret
push
add
add
adc
inc
fcmovnu
mov
lods
and
pop
sub
xorb
outsb
lds
in
xchg
xchg
aad
inc
xor
and
xchg
divb
das
xchg
sub
or
push
iret
jmp
lea
insb
insl
cwtl
push
arpl
sbb
fisubrs
sub
pop
decl
icebp
and
rcrb
mov
lds
dec
int3
jmp
repz
cltd
fisubrs
adc
mov
sbb
icebp
fcoml
xor
int3
sub
sbb
cmc
dec
les
movsl
push
rcrl
jecxz
dec
mov
cltd
sbb
add
mov
mov
nop
int
lahf
out
pop
into
or
jns
sub
xchg
jb
ret
xchg
mov
sub
pop
or
jmp
sub
shr
mov
out
sbbl
adc
xchg
test
mov
fstl
inc
pop
cmc
les
and
xor
xor
mov
mov
or
mov
xchg
mov
xchg
aad
popa
cld
mov
push
insb
pop
inc
xor
mov
mov
pop
jno
ret
xlat
jno
push
add
push
repnz
addr16
in
jo
aaa
orl
pusha
cli
mov
cmp
stos
out
add
xchg
pusha
lcall
mov
jbe
out
mov
xchg
arpl
adc
add
push
adc
ret
mov
addr16
or
jns
daa
rol
icebp
imul
subb
in
repnz
and
mov
lods
cltd
or
inc
scas
std
add
cmpsb
rolb
loope
pop
cli
jns
cmp
xchg
cli
ja
xchg
push
sub
pop
push
in
shll
shll
inc
push
or
movsb
movsl
mov
incl
dec
jbe
push
scas
inc
or
or
loopne
mov
xorb
mov
push
mov
add
dec
xor
xchg
cltd
mov
push
jbe
cltd
mov
lods
int
repz
cmp
adc
mov
add
xchg
int
mov
cmp
fmuls
cmc
loopne
inc
inc
out
push
jge
adc
and
int3
push
push
push
loope
cmpb
test
xor
add
arpl
repnz
push
xor
adc
push
sarb
int3
out
dec
and
inc
std
movsl
adc
inc
push
mov
out
out
je
stos
sbb
mov
addr16
pop
test
insb
inc
and
inc
pop
adc
loop
and
cmp
mov
add
ror
xchg
xchg
nop
sbb
mov
xchg
icebp
sarl
ret
ret
push
js
aaa
out
adc
xchg
in
addb
add
fs
sbb
jb
sub
into
arpl
xchg
pusha
out
lds
dec
in
mov
movsb
popa
fildll
outsl
or
test
loopne
cmpsb
xchg
xlat
mov
imul
cmp
sbb
mov
fs
clc
xchg
adcl
loope
xor
and
leave
add
cmp
cmpsl
fsubl
pop
xchg
xor
and
add
push
icebp
inc
pop
mov
call
jg
pop
jnp
xor
insl
cmp
jno
jbe
pop
mov
inc
int3
js
xor
cld
jae
jb
xchg
pop
cwtl
mov
pop
outsl
lods
push
dec
mov
mov
fistpl
lods
xchg
fstp
dec
out
mov
movsb
cs
lods
jge
shl
mov
movsl
jecxz
stos
mov
xchg
cltd
pop
pop
pop
icebp
lcall
loope
ds
inc
imul
xchg
stc
jecxz
push
lea
gs
cmc
fbstp
dec
jno
adc
mov
cli
adc
repnz
add
xchg
loope
es
loope
hlt
aaa
jecxz
shrb
add
popf
leave
push
push
mov
add
fldl
repz
inc
cmp
pop
stc
push
aad
pop
pop
in
repnz
test
lods
stos
ret
xchg
pop
dec
pop
mov
jo
sbb
xor
mov
dec
add
insb
leave
popa
in
aam
ret
mov
insb
xchg
out
pop
or
sti
push
rcrl
pcmpgtd
insb
and
repz
mov
add
inc
movsl
lods
xchg
in
movsb
leave
subl
mov
pop
outsb
cld
rcll
ret
repz
test
leave
cmp
dec
scas
mov
xchg
rcll
int3
push
push
cmp
mov
ss
mov
dec
add
xchg
int
pop
jns
push
pop
add
jmp
mov
add
sbb
xlat
mov
mov
pusha
or
push
dec
xlat
call
aas
add
ror
push
xchg
pusha
leave
ret
ja
fadd
mov
xor
cmp
je
es
push
int3
adc
cmp
fsubr
push
xchg
notl
pop
cmp
stc
stos
imul
cmp
push
jb
shlb
cmp
inc
sbb
cmp
dec
lret
dec
cli
push
jno
mov
out
lods
mov
in
bound
dec
xchg
jne
jno,pt
cli
mov
fistps
in
jmp
inc
xchg
xchg
std
stos
loop
jno
mov
sub
ja
test
sub
in
inc
mov
sti
test
mov
mov
adc
adc
or
out
pop
iret
and
adc
gs
sub
sub
pop
cwtl
mov
aam
xchg
sbb
sub
psrad
add
jae
in
xlat
iret
push
sbb
xor
lds
int
popa
mov
les
lods
push
adc
movd
out
add
pop
dec
lret
inc
mov
pop
push
dec
jmp
xor
or
dec
or
nop
mov
cli
cld
movsb
jge
jg
mov
and
push
or
cs
into
dec
mov
popl
cli
jl
mov
rcr
clc
xchg
das
pop
lods
shr
lret
xchg
sbb
iret
lea
push
push
pop
arpl
sub
fistpll
shl
cmpsb
jns
ret
sbb
mov
mov
lcall
fst
movsb
ja
jns
les
xrstors
or
es
xchg
hlt
mov
cld
mov
cld
lds
mov
pop
or
sbb
shlb
fisttps
dec
imul
xchg
mov
mov
clc
add
add
inc
ja
imul
clc
jp
adc
xor
jbe
daa
cli
xor
jg
pushf
and
sub
xlat
mov
and
jge
inc
mov
xor
mull
jno
fimuls
movsb
mov
cmp
outsb
andl
mov
mov
pop
lret
mov
dec
ja
aaa
xor
test
negl
arpl
icebp
sti
mov
push
pushf
pop
jo
sahf
mov
push
sbb
test
or
mov
xchg
jmp
dec
movsl
cmp
jnp
fisttpll
jno
leave
cmp
jns
stc
mov
mov
imul
aad
leave
adc
sti
movsl
icebp
jbe
ds
xor
cltd
movsl
fisttps
mov
pop
sub
mov
lds
inc
or
in
aas
jo
dec
mov
ret
ds
loop
and
data16
sti
test
add
mov
jnp
dec
push
ljmp
mov
fst
shll
or
inc
repnz
out
and
pop
fdivs
in
and
stos
add
or
fcoms
roll
fadds
xor
dec
xor
cltd
sbb
jle
or
fdivrl
std
jns
leave
mov
xchg
insb
insl
adc
inc
cmc
fbstp
xchg
movsl
insl
mov
popa
push
lret
aam
aaa
mov
lret
sub
dec
jp
add
mov
scas
mov
push
js
outsl
cld
popf
pop
push
add
stos
mov
add
arpl
push
scas
loopne
sbb
mov
pop
pushf
mov
in
int3
jbe
push
pop
lcall
or
outsl
mov
subl
fsubrp
cmpsb
sbbb
popf
adc
les
lods
mov
jno
nop
into
lahf
sbbb
dec
or
loopne
shrd
hlt
push
mov
push
loop
cmp
ja
lret
js
mov
push
scas
mov
mov
rcrb
imul
jo
jo
mov
pop
jmp
sbb
test
mov
test
add
xchg
ja
jae
rcrb
sbb
and
stc
movsb
mov
repnz
lds
adc
cmp
jmp
mov
dec
lods
sub
inc
push
and
rcrl
es
or
fisttps
lods
add
lods
stc
repz
dec
arpl
daa
sbb
ficoms
imul
dec
cmp
inc
aam
lret
push
and
xor
std
aam
jbe
xor
jno
lods
cmp
test
or
cmpsl
std
cmpl
dec
inc
add
lds
cmp
in
clc
mov
or
inc
sbb
push
jle
shr
xor
es
inc
xchg
out
fmuls
mov
lods
dec
insl
pop
jae
js
jne
repz
jbe
ds
mov
rcr
testl
pop
mov
inc
push
adc
lock
ds
andl
lret
sub
insl
push
cld
shlb
sbb
or
cmp
mov
xchg
jno
mov
push
jg
or
jbe
sub
loope
mov
repnz
jno
loope
rorl
sub
mov
js
xor
mov
xchg
lods
or
insb
cmc
inc
out
push
psrad
in
cltd
subb
cmp
repnz
xlat
or
xchg
dec
dec
addr16
cmp
sbb
lret
mov
incb
jae
fsts
inc
xchg
imul
sbb
ss
mov
pusha
sub
mov
xchg
mov
add
or
hlt
pop
jns
jno
jns
fiadds
scas
call
lcall
cld
adc
mov
adc
xchg
mov
stc
pushf
mov
mov
mov
addr16
mov
xor
je
out
stos
mov
add
or
and
mov
in
movsb
push
imul
sbb
inc
lcall
ds
push
lea
inc
sahf
sbb
sub
xchg
lea
int
test
lock
lods
stos
testb
les
imul
xchg
sti
iret
mov
jne
inc
outsl
jo
shrl
lock
pop
fidivs
xchg
jl
in
ficoms
xchg
insb
cli
lret
sbb
popf
xchg
aas
les
mov
cmp
mov
in
fwait
mov
fldt
es
add
jg
int
sub
sbb
ja
call
xor
lds
or
repnz
push
mov
sbbl
adcb
adc
add
loope
arpl
pop
cmp
sbb
arpl
mov
jl
lret
mov
jmp
jge
sbb
mov
mov
pop
jle
insl
jno
adc
icebp
test
adc
into
push
mov
pop
ret
dec
and
add
cmp
mov
leave
or
jl
imulb
mov
lds
ljmp
sahf
movsb
inc
fwait
adc
add
cmp
stos
or
loop
add
jns
jge
sbb
xchg
mov
rcr
incb
outsb
lock
sbb
dec
mov
mov
sub
ja
mov
jo
sub
mov
bound
sub
mov
fisttps
fwait
sbb
cs
cmp
pusha
and
mov
pop
je
hlt
cwtl
mov
mov
push
pusha
xlat
jmp
stc
pop
cld
lds
shrl
in
xchg
sbb
popf
je
inc
cmp
ss
sti
xchg
ljmp
push
pop
scas
adc
sub
pop
roll
addr16
mov
insl
out
pushf
sub
push
cmp
ljmp
xor
push
pop
mov
jmp
fucomi
fucom
loope
add
adc
test
test
hlt
std
inc
and
push
sti
jmp
rcrb
scas
jmp
sbb
cmc
jbe
fldl2e
sbb
shlb
mov
cld
int
stc
sub
xchg
jnp
sarl
inc
lret
lcall
stc
inc
mov
mov
pusha
testb
outsl
xor
aad
jmp
xchg
int
and
ja
call
lock
lcall
push
sbb
push
ret
add
inc
add
mov
idivl
ljmp
stos
jbe
pop
mov
orl
lcall
adc
add
movb
pop
nop
into
jnp
cmp
filds
mov
out
sub
in
insb
pop
iret
mov
sub
and
jge
aam
lcall
sbb
mov
sbb
adc
push
out
js
or
adc
push
push
push
in
push
imul
xchg
sbb
push
sahf
jge
dec
or
push
adc
ds
jl
jmp
jo
cmp
lods
xchg
push
lods
fcmovnb
and
sar
out
jecxz
ret
mov
int
repnz
popf
fadd
imul
mov
xor
bound
push
iret
and
insl
stos
rcll
cmp
or
push
popf
sub
loopne
insl
cpuid
inc
xor
test
xor
fmulp
adc
push
fidivs
leave
outsl
xchg
xor
stos
imul
and
mov
repnz
xlat
les
xor
rolb
jecxz
add
cmp
shr
sub
mov
pop
fcmovu
aam
jl
dec
repz
and
jl
lea
xor
push
jo
fldt
stos
cmpb
ljmp
cmc
icebp
in
arpl
cmpsl
fs
jle
ljmp
push
repnz
push
hlt
jle
push
leave
in
jge
fisttpl
sbbb
inc
sub
sbb
pop
dec
js
cmp
jnp
addr16
imul
rol
testl
mov
xor
sub
sub
cmp
xor
call
push
mov
sbb
jbe
stos
push
mov
sar
addps
add
leave
mov
in
int3
push
xor
fdivp
and
xchg
cmp
mov
mov
aas
lcall
enter
fadds
gs
addl
xor
sbb
movsb
mov
loope
xor
or
cmpsb
mov
fcompl
aad
out
mov
jns
xchg
cmpb
jne,pn
pop
push
push
sub
push
xchg
cli
stc
jns
mov
fs
mov
push
dec
imul
fs
out
fsubrl
loopne
or
mov
mov
loopne
mov
lahf
scas
mov
test
adc
xchg
push
pop
mov
dec
sub
mov
imul
inc
es
jb
ljmp
sbb
inc
jle
xor
pushf
and
insb
out
xor
push
jl
lods
jae
ss
fisttpll
cltd
mov
xchg
gs
pop
sbb
pop
mov
addr16
out
test
push
dec
push
adc
mov
xlat
rcrb
sahf
test
mov
lock
mov
xor
std
imul
loop
xor
push
out
in
dec
shrl
in
add
cmp
cmpsl
mov
and
and
dec
pop
stos
das
pop
add
mov
sbb
sbb
jg
push
arpl
inc
sub
xchg
sbb
es
lret
jp
and
fwait
loopne
cmpsb
adc
add
mov
inc
shl
repnz
pop
mov
xchg
pop
movsb
push
mov
mov
lcall
jb
sub
fisubs
sub
sarl
cmp
into
sub
mov
inc
imul
jnp
mov
cwtl
mov
popa
cmpsl
push
push
pop
sbb
sub
ja,pn
dec
sbb
mov
sub
mov
jecxz
lret
daa
pop
ret
dec
aad
inc
xlat
cmc
xchg
ret
lret
cwtl
or
xlat
mov
cmc
popf
sub
jp
les
push
cwtl
ljmp
int
or
sarb
dec
in
push
sbb
shl
pop
pop
nop
or
arpl
je
or
rcl
mov
movb
and
scas
jp
or
cmp
std
push
jae
or
xor
push
xchg
mov
jbe
xchg
movsl
xchg
outsb
adc
pop
out
mov
xchg
pcmpeqb
or
add
in
xor
shrl
mov
xlat
inc
aas
pop
mov
sub
sub
push
fistpl
in
mov
dec
mov
sub
xor
addl
stos
xchg
sub
xor
xor
push
or
aaa
sti
mov
out
shlb
mov
lds
cmp
mov
adcb
add
inc
add
and
xor
add
jg
pop
mov
out
jmp
stc
or
jb
xchg
pop
adc
dec
lcall
js
and
iret
adc
xchg
aaa
sub
push
dec
adcb
into
mov
js
in
pop
je
xchg
sub
ret
iret
fldt
push
fldt
sbb
dec
ja
sub
push
loopne
repz
nop
int
test
mov
in
lret
mov
mov
jne
imul
imul
iret
dec
cmp
outsl
xor
repnz
hlt
push
add
pop
lods
xchg
xchg
leave
push
imul
xchg
das
inc
adc
out
jne
in
pop
sti
stos
sub
or
iret
mov
xor
xchg
mov
movlps
add
push
mov
mov
dec
repz
mov
or
push
pop
jmp
mov
and
adc
sub
lret
test
pop
push
add
inc
jns
add
shlb
jmp
imul
jmp
cmp
mov
fs
xchg
scas
movsl
fisubl
dec
push
fsubrl
mov
jne
inc
es
ss
jbe
jge
xchg
test
ss
sub
add
je
fdivl
push
mov
pop
push
shll
shll
lds
push
dec
xchg
aam
fstl
add
jmp
dec
jl
sub
xchg
pushf
and
mov
push
jmp
push
hlt
cmp
mov
push
pop
xor
bound
stc
xchg
leave
out
imul
inc
ss
and
ja
cmpsb
adc
sub
lods
bound
xor
fiadds
cmp
cli
loopne
inc
lcall
cmp
repnz
inc
and
sub
dec
mov
aam
ret
sbb
ljmp
in
add
jl
inc
inc
sbb
push
jo
rcr
ja
xchg
jb
dec
dec
test
stos
pop
xor
icebp
aaa
repnz
call
mov
push
pop
mov
xchg
or
adc
lock
ret
xor
push
push
add
sahf
xor
mov
mov
xorl
add
xchg
mov
pop
fnstsw
jne
mov
inc
dec
subb
aam
pop
and
shrl
xchg
addr16
test
sub
mov
dec
shl
mov
ss
popf
dec
cmp
inc
and
fldl2e
icebp
scas
test
and
in
les
mov
jp
sbb
or
jno
ljmp
lret
iret
fdivl
les
and
xchg
xchg
daa
xor
in
test
test
sub
call
jnp
mov
lods
add
jo
lahf
leave
sub
loope
add
cli
stos
mov
scas
aas
sbb
test
or
mov
sub
aad
shrl
add
outsb
clc
notl
decb
jp
inc
pusha
xor
sub
test
test
std
pop
dec
mov
cltd
lcall
mov
out
aad
add
xchg
mov
movb
adc
mov
push
loope
pop
inc
lock
jge
movsl
scas
lahf
rcl
into
ja
into
aad
mov
cmpsb
add
fmul
lods
xchg
xor
outsb
mov
jecxz
mov
aam
pop
gs
adc
daa
adc
sub
sub
fwait
or
daa
arpl
or
and
pop
movsb
gs
lcall
jae
add
lret
popf
fsubp
cmc
push
or
mov
movsb
adc
rcrb
imul
mov
js
into
xchg
or
mov
js
test
sbb
ret
mov
lret
hlt
lcall
repnz
pop
lcall
movsb
or
idivb
and
out
mov
mov
lcall
push
call
call
pop
outsl
aad
jnp
es
xor
sub
stos
orb
mov
fnstsw
xchg
push
xor
scas
insl
pop
stc
mov
pop
pop
aad
pop
add
push
push
adc
mov
out
adc
cmp
aam
jle
test
adc
inc
adc
mov
inc
enter
dec
cmp
test
sbb
add
stc
ds
call
movsl
sub
mov
js
sbb
jns
inc
std
xorb
fwait
jb
add
push
jl
in
cmp
int
gs
or
or
mov
lds
dec
fmul
cwtl
stc
outsb
shll
inc
sbb
testl
sbb
cli
mov
fldt
cmp
lock
sbbb
ret
xchg
lahf
dec
or
inc
mov
into
lcall
out
ret
mov
push
imul
repnz
out
mov
std
jno
cmp
outsb
not
adc
xor
xchg
jge
push
xor
imul
jo
cmp
mov
imul
in
aaa
movsl
in
or
inc
push
inc
rcrl
jo
sub
xchg
cld
pop
cmp
push
je
cs
ds
fwait
call
daa
jp
mov
and
lcall
scas
fst
leave
xchg
fsubrs
and
jecxz
fiaddl
popa
pushf
add
sbb
cmp
out
mov
xlat
sub
mov
push
test
jmp
hlt
add
rorl
pop
cmp
sti
lahf
mov
popa
stc
in
cmp
fwait
mov
out
and
out
pop
inc
subl
lret
iret
push
outsl
vdivss
out
dec
adc
bound
xchg
jge,pt
bound
fnstsw
ja
pop
or
add
dec
stos
sub
pop
mov
sti
adc
adc
cmpsl
int3
jg
pop
stc
add
dec
or
xchg
lods
sub
pop
je
dec
pusha
aad
aaa
imul
dec
and
sub
imul
inc
negl
adc
lods
adc
jle
sbb
xchg
mov
sub
shl
add
shll
jl
push
sub
mov
add
cmp
sti
xchg
sbb
mov
popf
arpl
cmp
sub
cmp
mov
in
pop
repz
movsl
imul
pop
push
xchg
mov
pop
pop
lods
sbb
or
sti
jae
data16
or
movsl
mov
orl
icebp
mov
inc
push
clc
jo
dec
cmpsl
sbb
ja
lock
dec
shll
or
fidivl
xchg
sub
in
xor
mov
jle
imul
xchg
xchg
movsb
pop
dec
xor
xchg
gs
xor
jecxz
and
into
call
inc
sbb
mov
inc
call
movsl
dec
lcall
lods
hlt
ret
pushf
fwait
sub
push
jg
add
mov
test
in
aas
cmp
jno
lret
jmp
jb
jno
xlat
iret
push
jecxz
mov
hlt
les
inc
ds
sbb
and
lods
push
mov
push
xor
filds
inc
rorb
cmp
lds
scas
int
in
dec
or
adc
add
stos
es
daa
mov
sub
cmp
mov
adc
mov
lcall
inc
xlat
pop
shrb
out
and
outsl
sub
and
pop
dec
in
sub
pop
mov
out
nop
enter
or
mov
loope
mov
frstor
lods
mov
push
mov
pop
verr
push
js
xlat
inc
inc
cmp
xchg
mov
fwait
sbb
push
imul
xor
sti
lock
sbb
xlat
xor
xchg
cmc
jecxz
outsb
mov
pop
jae
cmpsb
xchg
jecxz
ret
jno
mov
pop
pop
xchg
arpl
push
xchg
int3
das
and
clc
dec
pusha
xchg
pop
jae
popa
aad
insb
push
scas
test
cmp
test
jmp
push
inc
aaa
jnp
mov
cmp
outsb
into
push
cmp
js
mov
bound
push
inc
jecxz
mov
xor
mov
pusha
dec
decl
pushf
or
sub
or
nop
icebp
sub
push
jbe
imul
dec
mov
sbb
adc
add
jbe
and
cli
xchg
stos
test
ds
adcb
adc
mov
mov
fidivs
cli
mov
mov
dec
ja
outsl
std
cmove
shlb
xor
mov
repz
sbb
arpl
fs
mov
aad
mov
mov
xor
jns
add
lods
jge
inc
loope
and
sbb
dec
rcll
xchg
jb
popa
loopne
xchg
inc
jne
out
cltd
and
add
cmp
sub
mov
sub
pop
aam
sub
push
mov
mov
adc
test
test
cli
xor
out
xlat
dec
push
and
add
dec
fs
push
aad
insb
nop
push
aas
inc
mov
cmc
push
mul
lea
stc
and
cmp
les
and
cmp
ret
add
mov
sbb
fstps
dec
cmp
cld
push
outsl
push
outsb
or
fdivs
or
bound
mov
jno
lret
mov
sahf
mov
xor
push
xor
and
dec
xorb
and
mov
or
int
cltd
outsb
pop
jle
push
add
mov
pop
xchg
lock
mov
jg
push
movsb
jg
aaa
add
test
stc
pop
out
lods
jbe
lret
outsl
or
lret
adc
lock
sbb
sti
pop
popf
mov
outsb
stos
call
cwtl
jb
sbb
xchg
test
jge
pop
lea
inc
push
adc
add
xor
in
imul
mov
daa
mov
mov
aas
mov
test
icebp
pop
loop
xor
dec
mov
mov
andl
mov
xchg
dec
call
mov
jb
out
rcr
daa
push
xchg
popf
insb
cmp
aaa
xchg
sbb
push
jg
call
inc
lods
cmp
scas
or
inc
jl
outsl
and
fildl
jmp
pop
sbb
dec
das
stos
and
nop
and
movsb
push
scas
stos
sub
test
mov
out
call
shr
xchg
sub
add
adc
jg
push
push
lea
icebp
and
adc
lret
insl
testb
addl
shll
push
mov
insb
stos
daa
sub
or
add
adc
test
mov
inc
aad
cmp
mov
movsl
test
lret
xchg
pmaxsw
movsb
add
iret
jl
xor
popl
arpl
pop
loopne
outsl
add
dec
jmp
out
mov
add
pop
pop
jmp
nop
movsl
pop
fstps
lods
loop
stos
fdivs
adc
jecxz
or
inc
aam
pop
cmp
lock
ja
std
jl
jne
movsl
dec
enter
and
dec
and
cmc
sub
pop
mov
and
sbb
add
dec
js
imul
shrb
dec
sub
lds
mov
clc
adc
pop
lods
fsubs
stos
jb
xchg
mov
lret
xor
stos
mov
and
push
out
insb
fildl
or
xor
or
mov
fcompl
and
lahf
mov
les
push
dec
push
aad
pop
mov
fiadds
lock
mov
lods
les
adc
mov
add
int
sahf
inc
pop
pushl
int
stc
or
ds
sub
xlat
pop
jb
sub
cmp
gs
xor
xor
lea
hlt
lock
push
pushl
out
out
inc
inc
iret
iret
pop
rcll
cs
mov
int
sbb
xor
js
aam
add
and
andb
dec
lods
sbb
adc
mov
xchg
cmp
ret
test
jb
adc
xlat
jle
cli
test
sub
stc
aad
jl
cmc
jnp
dec
pop
popf
pushf
xor
arpl
push
sub
pop
adc
push
jo
adc
stos
cmp
sti
scas
imul
dec
out
icebp
and
push
pop
pop
jns
sbb
mov
add
sbb
cmp
push
lods
icebp
cmpb
dec
sbb
mov
or
lret
cmp
xor
nop
mov
not
jb
testl
jecxz
mov
outsl
fidivs
push
push
lock
fsubl
xchg
pop
and
push
mov
js
mov
push
dec
push
daa
sub
into
push
push
cld
adc
jmp
test
inc
stc
adcb
dec
call
mov
jns
dec
lret
mov
add
push
out
push
xor
je
sub
sub
sbb
push
xchg
xor
fidivl
push
movsl
sbb
pop
ds
mov
xchg
sbb
std
dec
dec
shll
mov
data16
adc
scas
test
and
mov
xor
lods
daa
jne
outsb
bound
aaa
or
dec
cmp
fs
mov
or
notb
fcoml
addb
cli
or
in
push
aad
sub
out
cmp
aam
xchg
pop
sti
movl
bswap
or
push
inc
and
push
lahf
push
cmp
pop
jge
shl
shrl
xchg
roll
cmp
dec
dec
sbb
cmpsl
movsb
jge
add
cmpsb
cmpsl
inc
mov
outsb
lods
cli
shl
sbb
arpl
or
add
jmp
push
inc
pop
aad
aaa
sbb
jns
or
xchg
adc
sbb
push
pop
idivl
mov
loope
push
scas
sahf
mov
mov
sub
imulb
pop
sbb
aad
and
movsl
ljmp
dec
mov
mov
push
inc
fstpt
das
pop
mov
nop
stos
mov
lcall
imul
or
lods
cmc
adc
cmpl
cmpsb
rcrl
test
mov
mov
jae
daa
add
inc
loope
shrb
mov
fistpll
cmc
lcall
shlb
std
add
lahf
adc
push
jne,pn
fld
inc
jecxz
iret
or
push
mov
loop
mov
leave
mov
push
cmp
pop
xchg
push
test
aas
jg
xor
add
and
int
sbb
cmp
int3
jo
adc
mov
push
pop
xchg
and
xchg
rolb
dec
adc
add
call
mull
mov
jg
lgdtl
sbb
and
xchg
out
ret
jle
in
jo
fwait
out
cli
mov
xor
dec
lret
adc
sbb
mov
imul
sbb
xor
mov
xor
lahf
xchg
cwtl
push
dec
sahf
lahf
aad
cmpsl
cmpsb
inc
mov
ret
icebp
mov
ret
mov
shrb
popa
xor
xor
dec
inc
pop
int3
subb
rolb
test
xchg
les
loope
mov
mov
cli
outsb
inc
scas
sbb
scas
test
add
xchg
add
jno
push
sub
clc
js
dec
out
mov
xor
clc
lret
mov
jle
fwait
scas
sub
mov
sbb
cmp
dec
xor
jg
ret
mov
mov
xchg
dec
lcall
xlat
xchg
push
inc
jmp
stos
inc
fnstsw
or
sahf
daa
das
mov
loop
les
sub
in
push
push
mov
js
rolb
mov
dec
je
xchg
cs
scas
adc
xchg
xor
cmp
cmp
aad
dec
and
sbb
and
jae
jno
add
ret
or
mov
push
rorb
mov
sub
int
sbb
jno
cmc
adc
sbb
xchg
test
loope
jne
jl
and
inc
in
popf
lcall
addl
inc
jbe
push
test
aam
fdiv
or
fwait
sahf
lods
mov
mov
adc
push
or
stos
xor
pushf
sahf
pop
loop
cmp
cmp
and
xchg
hlt
mov
pop
xor
sarl
xor
arpl
mov
fisubrs
xchg
les
mov
sub
lea
loopne
imul
inc
lods
aam
les
cs
pusha
imul
cmp
cmp
lods
call
in
dec
icebp
jo
mov
lods
lahf
sub
cltd
call
rorl
repz
cmp
xchg
imul
mov
push
adc
push
push
xchg
jl
or
out
rcrb
lds
mov
out
ret
xor
cmc
fwait
mov
cltd
xchg
mov
push
jl
aad
je
jl
push
insl
jmp
subl
in
mov
mov
outsl
mov
push
pop
xchg
into
xor
dec
int
jle
or
outsl
jg
pop
pop
lods
ja
inc
inc
fnstsw
sbb
dec
dec
xor
lea
mov
or
jns
xlat
inc
pop
neg
push
jg
push
bound
mov
sbbl
xor
insb
cmp
xchg
cwtl
pop
mov
adc
xchg
inc
push
xor
adc
jge
add
in
inc
in
push
insl
sbb
adc
loope
roll
inc
ret
iret
notl
lods
sub
push
outsb
sbb
xchg
inc
iret
xchg
cmp
arpl
pop
psubw
js
mov
dec
cmpsl
pop
pop
aas
in
xor
sbb
rclb
cmp
jecxz
sbb
push
es
out
cmpl
mov
mov
aas
leave
mov
inc
inc
xchg
out
fildl
rcrl
push
adc
xor
xchg
gs
push
ret
pop
add
faddp
add
aad
pop
inc
ret
add
lds
inc
std
aas
push
out
dec
mov
dec
push
test
ret
scas
or
fs
ja
pop
xchg
jns
or
sub
mov
dec
imul
fcompl
sti
pop
lret
stos
stos
jl
jnp
xor
into
pop
and
cli
cmc
scas
stos
xchg
aam
into
xlat
inc
bt
je
xlat
sarl
mov
push
ss
jg
rcr
das
cmpsl
rorb
xchg
push
xor
dec
xchg
adc
pop
mov
push
arpl
xchg
cmp
mov
adc
mov
inc
mov
xchg
and
je
and
insl
sub
xchg
xchg
xor
jge
test
cmp
xchg
mov
or
or
sti
lret
pop
nop
mov
fmuls
adc
xchg
xchg
leave
aam
mov
outsb
and
mov
inc
xchg
mov
movsb
and
add
gs
mov
popf
out
push
pop
and
and
int3
push
inc
cli
cmp
sbb
dec
stos
gs
mov
test
xchg
stc
or
fucom
popa
sub
and
sub
fldl
stc
xor
cmpsl
jns
ror
aas
sbb
mov
outsl
sbb
pop
pop
push
not
iret
das
mov
lahf
es
sbb
add
adc
aam
pop
lods
lods
or
fucom
push
jae
testl
sbb
mov
je
lahf
ret
push
dec
jge
xchg
xchg
and
xchg
sub
xor
push
sti
inc
mov
jg
int
mov
clc
aad
sub
sub
sub
aam
into
cmpsl
inc
jg
pop
je
ds
sarl
mov
xchg
fdivl
push
call
inc
ss
xchg
xchg
cmp
add
xchg
mov
int
xor
movsb
sub
sbb
pop
addr16
daa
mov
sbb
push
jne
dec
leave
xchg
add
jb
push
adcb
or
xorl
dec
out
xor
gs
dec
int
dec
jecxz
sub
jbe
and
add
subl
in
lcall
xorl
mov
lea
das
xchg
dec
pop
daa
fwait
jg
mov
pop
aaa
jbe
push
lea
jne
push
inc
dec
sub
js
lds
inc
mov
in
sub
jge
or
aas
lahf
pop
sub
push
and
rcr
mull
or
sub
scas
into
xchg
mov
mov
jne
insb
mov
or
sub
pop
sarb
popf
mov
jb
mov
jne
adc
jl
mov
decb
dec
sub
mov
test
sbb
xchg
fistl
inc
imul
aas
fcomi
sti
mov
sbb
jnp
stos
out
mov
imul
add
loope
mov
cld
popf
xchg
mov
inc
mov
popf
cmpb
ja
and
mov
jmp
pop
in
jmp
push
leave
daa
pop
mov
push
mov
cmp
push
test
cld
nop
ja
fwait
sbb
push
popf
int3
cmp
aas
jl
xor
push
into
cmp
push
sahf
cmp
outsb
and
cmp
or
movsb
in
lahf
andl
xchg
xor
xchg
mov
loop
mov
mov
mov
pop
lea
bound
jg
adc
dec
and
lods
mov
aam
pop
jnp
or
fucomi
aas
mov
push
xlat
cmp
out
mov
cltd
push
test
into
sbb
dec
pop
testb
fs
fists
fmull
adc
xor
jb
iret
lods
mov
push
and
jecxz
ret
add
lock
arpl
sbb
push
push
push
jno
xchg
mov
jno
push
pop
fs
sbb
fisttpll
xor
cwtl
lea
sub
js
enter
ljmp
push
leave
or
mov
jnp
fwait
je
leave
cwtl
sub
test
iret
std
push
mov
pop
test
xchg
xlat
or
or
dec
out
and
adc
push
test
cld
repz
mov
push
sub
adcl
roll
popa
jo
xor
mov
pop
push
ja
cmovb
rcr
xor
outsb
inc
ret
xchg
xchg
mov
testl
cmp
popa
fiadds
inc
ror
cmovns
pop
sub
fs
shll
mov
or
cmp
mov
jb
mov
sub
mov
iret
test
mov
push
popa
jae
xchg
and
not
mov
in
sub
xchg
icebp
mov
cmovge
repz
test
repz
enter
mov
cmp
and
inc
les
adcl
into
and
mov
orl
jae
adc
shrl
xlat
adcl
shll
in
xorb
lar
add
repz
scas
lds
insl
sbb
lret
mov
pop
and
fsubp
sub
pop
mov
dec
shld
push
mov
mov
psubsb
push
pop
lret
scas
test
in
je
scas
cmp
aam
pop
std
jmp
mov
hlt
or
fldt
xlat
mov
cmp
xor
jb
dec
in
cmpb
pop
add
add
repz
out
scas
fstpl
xor
jecxz
mov
push
add
icebp
pop
shrl
jno
push
push
loopne
push
push
jno
xchg
push
mov
sar
icebp
lods
adc
jno
popa
inc
push
mov
jmp
pop
cmp
sbb
mov
adc
fldt
cmp
dec
lcall
and
jle
ss
xor
aaa
test
pop
les
mov
inc
and
das
popf
rolb
jb
mov
mov
xchg
js
lods
push
adc
jae
xchg
push
repz
roll
faddl
cli
mov
fs
lds
pop
fcomp
les
cmc
jbe
sbb
nopl
mov
sahf
sbb
sbb
and
inc
dec
shlb
push
sub
adc
int
cmp
mov
ss
add
cmp
lcall
outsb
or
sbb
scas
mov
dec
or
mov
dec
adc
je
test
mov
sbb
addr16
sahf
jmp
xchg
or
loopne
add
mov
mov
jo
mov
dec
xchg
mov
bound
in
imul
dec
jae
mov
sbb
cmp
movsb
dec
dec
out
inc
sbb
sbb
lods
int
inc
gs
adc
out
or
imul
xor
rcrb
mov
xor
mov
jmp
nop
xor
and
jae
pushf
iret
sub
fchs
test
mov
pop
rcrb
rclb
push
mov
fs
cld
jle
dec
adc
aad
or
das
in
sub
inc
pop
ds
adc
cli
popa
jg
add
sbb
inc
xor
mov
outsl
xrelease
add
dec
push
or
or
fs
inc
adc
sub
push
mov
ret
inc
sub
out
xor
sub
pop
mov
int
int
out
loope
xor
shlb
popa
xchg
call
es
push
adc
pusha
out
in
cmp
or
lock
cmc
pushf
xchg
mulb
test
mov
mov
xchg
dec
sub
jecxz
iret
xchg
pusha
and
mov
push
sub
jp
push
push
add
lret
cwtl
lahf
dec
jp
cltd
dec
into
fs
or
repnz
dec
and
fistpl
lock
cmpsl
sbb
xchg
push
inc
cmp
arpl
sbb
das
ljmp
xlat
out
ja
pop
or
jl
popa
dec
shr
cwtl
stc
repnz
movsb
fnstenv
add
cmpsl
imul
je
testb
rolb
dec
jl
xorl
mov
xor
cmp
out
jo
xor
fiaddl
push
arpl
mov
cmpl
lods
push
enter
into
mov
sub
jo
icebp
inc
movb
scas
js
or
push
xor
jp
jns
mov
loope
mov
leave
xchg
in
push
adc
ja
enter
scas
and
jns
jbe
mov
mov
js
cld
xor
arpl
sar
adc
mov
cmc
mov
pop
mov
sub
push
icebp
and
ljmp
and
fcom
rorb
pop
add
test
out
adc
xchg
neg
lods
inc
dec
test
ja
pop
repnz
lods
xchg
xor
pop
xor
call
lret
fldcw
negb
or
xchg
imul
test
mov
push
jp
xor
lods
sti
out
mov
sub
xorb
cmp
push
jns
js
vmovntps
std
lods
cs
dec
add
add
xchg
testb
mov
leave
xchg
fwait
sub
add
aam
inc
mov
push
xchg
cmc
cmp
xchg
mov
pop
cmpsb
loopne
fisubs
sub
in
adc
xchg
mov
out
jecxz
cmp
pop
mov
insb
lock
sbb
ss
jo
fsubs
sub
pop
jns
pop
divb
lods
jge
mov
mov
dec
push
fmuls
fistpll
adc
mov
jns
insb
scas
add
adc
shl
idivl
imul
push
ret
pop
or
xchg
jb
pop
pop
sub
dec
decl
lock
xchg
hlt
movsb
add
xchg
popa
fstl
xchg
fldt
push
xchg
out
movnti
jo
push
sti
sub
or
loopne
les
cwtl
mov
out
jge
inc
mov
pop
sarl
pop
inc
nop
jo
mov
push
cmc
jp
or
mov
icebp
lret
mov
scas
int3
xlat
adc
mov
out
jge
mov
es
ja
jo
dec
leave
jp
sbb
sub
sub
sub
call
mov
lahf
cmpsl
ds
push
xor
pop
mov
test
in
popf
cmpsb
mov
jmp
sahf
aad
cli
test
mov
sub
test
mov
call
sub
daa
mov
cld
push
repnz
mov
in
xor
dec
mov
push
sub
aad
push
lds
xchg
dec
and
xlat
out
loop
sub
ret
xchg
fwait
pop
jno
out
mov
jmp
pop
inc
and
mov
gs
ljmp
mov
cmpsb
cli
out
inc
push
in
cmp
push
stc
loopne
lret
push
lret
cmp
cmpsb
jnp
stos
das
pop
loop
lods
or
xor
pop
dec
les
loop
jge,pn
mov
and
sub
outsb
je
mov
or
shl
sbb
std
xchg
ja
push
mov
pop
push
in
pop
sbb
and
lcall
adc
sarb
movsl
or
pop
adc
lds
outsl
inc
xchg
fmull
pop
scas
jle
out
inc
xor
inc
inc
mov
jg
xchg
fs
fbstp
mov
hlt
shlb
test
lret
popa
into
rorb
into
fnstcw
iret
pop
xchg
mov
push
mov
loope
les
cmp
adc
inc
out
jne
jae
sbb
cs
pop
mov
jmp
mov
mov
fucomp
inc
mov
mov
out
popa
jmp
inc
rol
pop
cmp
lahf
cmp
or
or
add
inc
or
in
shll
sbb
repz
and
push
push
adc
sbb
jmp
rorl
jg
or
sbb
jecxz
out
cmc
or
and
inc
adc
jnp
push
ljmp
mov
imul
and
and
rcrb
xor
jg
or
pushf
push
cmpsb
gs
fidivs
cmp
repnz
dec
sbb
shll
repz
xchg
jbe
mov
mov
fs
jno
sub
inc
lret
mov
adc
aam
inc
push
xchg
arpl
cmpsl
xor
jle
iret
clc
stc
gs
neg
cltd
lret
sbb
mov
lock
arpl
sbb
push
addr16
cmp
leave
mov
jecxz
pop
daa
jns
dec
fnstsw
gs
cltd
mov
shlb
add
add
cltd
or
int
inc
cmpb
jge
xor
jo
jcxz
pushf
loope
mov
popf
mov
push
push
daa
and
add
das
push
imul
loop
pop
cltd
shlb
mov
or
mov
out
sbb
rcll
mov
cld
mov
popl
mov
dec
fldcw
scas
pop
icebp
dec
push
das
sub
xor
aaa
xchg
bnd
adc
aad
fsubrl
test
into
or
aaa
xchg
aad
lds
mov
insl
pop
test
adc
add
out
and
adcl
xchg
xor
ljmp
fucomp
push
and
jne
inc
sub
jle
lret
addr16
mov
mov
mov
and
negb
push
inc
outsl
jg
cmpsl
xchg
mov
stc
xor
aaa
xor
push
cmp
jnp
mov
repnz
xchg
testl
xlat
stos
dec
fwait
lret
dec
out
cli
shrl
inc
js
lds
push
add
std
inc
ja
mov
cmp
lods
xchg
jg
mov
out
scas
xchg
orb
aad
fnsave
pop
pop
dec
add
cmp
xlat
jp
jnp
xchg
fidivrl
push
cmp
and
pop
stos
icebp
push
daa
dec
or
mov
adc
imul
lret
push
rcrl
add
mov
mov
stos
movsl
daa
test
in
mov
mov
jg
fstl
ds
jbe
and
cmp
cmc
push
shll
mov
out
push
stos
psrlq
pop
xchg
test
pop
cmp
adc
cmp
or
mov
pushl
cmp
mov
das
scas
sarb
daa
jae
or
clc
mov
mov
aaa
stos
dec
rorl
lcall
cmp
xchg
out
ja
fidivs
mov
lret
and
pop
inc
jns
jo
inc
out
inc
pushf
jg
les
je
insl
jg
cmpsl
mov
fnclex
push
sbb
andb
push
push
inc
aaa
cmpsb
jmp
and
insb
mov
pop
sbb
adc
inc
jnp
push
negl
sbb
aas
lds
xor
jno
add
push
das
jg
cltd
out
mov
dec
subb
popa
dec
std
aas
mov
mov
pop
daa
adc
dec
repz
js
lret
or
and
push
fcomps
into
mov
pop
jmp
jbe
lods
mov
rcrb
cmp
into
ret
mov
iret
cmc
jmp
xchg
sub
mov
mov
aam
inc
xorl
aad
xor
mov
pop
sbb
and
scas
lods
push
jb
sub
les
into
test
mov
cwtl
adc
adc
pop
jns
fldl
inc
jb
xlat
inc
jecxz
push
dec
nop
fninit
js
push
aas
ljmp
xchg
mov
aad
or
insb
push
push
push
xchg
enter
fidivl
lcall
jmp
mov
es
mov
push
shr
adc
test
pop
dec
mov
pop
mov
and
lock
add
ret
rcl
or
cmovno
mov
inc
inc
or
xchg
push
sbbb
jae
cmp
inc
mov
or
fs
mov
dec
and
jnp
mov
inc
and
cmpl
mov
sahf
inc
ficompl
outsb
loopne
shll
shrb
push
pusha
movsb
cmpb
aaa
cwtl
rclb
idivb
shlb
add
imul
jo
cs
aam
nopl
lcall
mov
mov
js
xchg
mov
and
pop
ljmp
or
fsubrs
mov
stc
dec
jecxz
repz
or
das
or
in
cwtl
into
ss
sahf
jae
arpl
leave
inc
loopne
std
mov
test
mov
push
push
mov
outsb
inc
push
mov
jle
lcall
aad
mov
fmulp
jb
movsb
bnd
adc
es
push
int
inc
mov
pop
inc
dec
movsb
adc
aam
mov
lcall
ret
clc
cmp
sahf
pop
test
insl
adc
and
add
lods
gs
lcall
inc
cwtl
mov
cld
es
or
out
add
cs
jae
add
dec
xchg
mov
shll
pop
jl
and
add
loop
sbb
lahf
icebp
sub
cs
mov
movsb
jmp
mov
ror
mov
popa
jne
mov
insb
ja
jb
mov
lcall
sbb
loopne
bound
and
sub
mov
lahf
mov
sub
js
mov
mov
xor
imull
loopne
cmp
cmpb
cmp
clc
negl
jnp
out
mov
sub
dec
mov
out
lods
mov
adc
adc
fs
sub
and
out
clc
cli
add
xchg
sbb
lret
scas
cmc
adc
icebp
jp
and
add
sbb
inc
das
push
jmp
ljmp
mov
jbe
mov
in
fdivrs
inc
and
loopne
push
pushw
push
leave
ficomps
xchg
pushf
sbb
mov
xchg
rorb
add
leave
jbe
adcb
lods
mov
aad
lahf
add
pop
lahf
xor
sub
and
and
lret
fidivl
inc
xor
popf
sub
xor
shll
lods
cld
mov
sub
cli
and
js
sahf
arpl
dec
fdivrs
inc
rcrl
cmp
scas
out
sbb
call
cli
cmp
pushf
add
mov
inc
and
mov
stos
mov
add
repnz
les
cld
fists
out
push
add
lock
mov
bound
push
fwait
ucomiss
cmp
pop
sahf
jns
inc
shr
jb
jb
add
movsl
cmp
in
add
lods
repnz
push
in
push
jnp
cmp
mov
pop
lcall
sbb
or
sbb
push
cmp
dec
pop
loope
cmp
fidivl
mov
cmp
test
xor
sahf
push
mov
inc
iret
adc
pop
add
outsb
mov
jmp
scas
jno
pop
imul
inc
push
push
adc
jbe
push
mov
jne
jo
cmp
imul
inc
add
jg
notl
and
push
push
cli
mov
sub
cltd
xor
add
adc
test
or
add
out
push
hlt
rolb
xchg
sub
jno
out
in
push
ds
shll
xor
jae
inc
xchg
mov
jge
hlt
call
push
add
cwtl
lock
inc
cmp
data16
push
mov
mov
movsb
dec
loopne
out
loopne
cmp
sub
xor
xchg
jno
hlt
adc
mov
sbb
dec
cmpb
out
movsb
jns
out
push
xchg
clc
dec
push
ja
pop
fildl
cs
andl
mov
fstl
hlt
cmp
repnz
jg
mov
mov
mov
icebp
push
pop
or
repnz
lock
movsb
ljmp
push
je
outsb
rorl
xor
sbb
popa
inc
push
lret
mov
jbe
movsb
pop
testb
inc
sbb
xor
xor
dec
movsb
orb
mov
rcl
fcmovbe
out
push
adc
mov
lret
test
ss
pushf
sub
xor
repz
push
gs
cmp
mov
mov
mov
lods
adc
shlb
sbbb
aam
rolb
ret
lds
cld
cmc
fimuls
mov
in
mov
dec
cmp
add
push
es
mov
and
pop
scas
mov
call
lret
pop
mov
arpl
mov
push
iret
jp
push
cmpsb
test
cmpl
xor
sbb
dec
sbb
decl
dec
das
test
test
jg
xor
adc
test
adc
mov
jno
pop
add
cltd
shl
mov
adcb
sub
cmp
dec
gs
in
xchg
pusha
pop
sti
lret
adc
sub
les
sbb
mov
decl
inc
out
inc
ds
inc
call
dec
sub
push
leave
jg
mov
add
pop
and
je
xor
popf
in
icebp
push
xchg
mov
jb
adc
mov
shlb
lret
cmc
xchg
xchg
adc
adc
xchg
call
or
push
cmp
inc
sub
lahf
fisubl
stos
int3
and
adcb
cmp
or
and
dec
xchg
cld
insb
add
rclb
pop
rclb
jl
push
add
js
add
push
lret
pop
sub
mov
js
out
xchg
scas
adc
lahf
mov
add
push
sub
mov
adc
push
push
out
outsb
mov
call
push
mov
xchg
pop
cs
dec
jne
xor
enter
adc
cltd
mov
pusha
call
pop
xchg
mov
mov
arpl
loopne
repnz
adc
and
fwait
sarb
xchg
push
or
imul
imul
sbb
aas
push
rcrb
mov
mov
scas
ficoms
repz
mov
sbb
hlt
in
pop
and
dec
cld
ror
lods
fdivs
mov
outsb
mov
adc
dec
rolb
add
and
in
and
pushf
xchg
int
ret
xchg
cmpsb
or
xor
sub
jmp
rcrl
mov
push
sub
pop
imul
pop
mov
rolb
lret
or
xor
idivb
aam
mov
lock
xchg
sbb
mov
in
hlt
scas
pop
cli
stos
cmp
idivl
das
pop
in
xchg
pop
or
sub
inc
dec
les
pop
les
cmpsl
push
cmpsb
xchg
xor
xor
scas
ljmp
daa
jbe
and
daa
in
push
xchg
lret
ret
jecxz
dec
pusha
push
fs
subl
fdiv
lcall
or
gs
mov
push
lahf
addr16
js
xchg
imul
rclb
das
and
cmp
sbb
cmp
sub
xchg
popf
jp
adc
mov
cwtl
lock
inc
rorb
push
inc
fdivrl
subl
push
pop
mov
sbb
mov
aam
and
push
lock
std
adc
sub
cmp
stos
mov
adc
xor
jae
pushf
aam
popa
rcrl
repz
or
subl
xor
filds
adc
rclb
daa
mov
fidivrs
aad
lds
inc
je
rol
ja
popa
out
in
mov
pop
inc
inc
roll
ljmp
pop
js
cmc
sbb
sub
cmp
neg
pop
ds
ds
inc
dec
push
mov
mov
jno
pop
xchg
out
jge
sbb
cmc
or
pop
or
dec
fucomp
push
addl
xor
cmp
inc
cmp
mov
lods
insb
ret
or
loope
mov
xor
jnp
xchg
cmp
ret
cmp
push
or
xor
sbb
mov
call
into
xor
cmpsl
jae
cli
sbbl
aam
ret
inc
arpl
xor
fcom
shlb
add
mov
pop
mov
int3
jne
inc
xor
pop
scas
test
sbb
cwtl
inc
je
mov
xchg
pop
lods
sbb
xor
and
int3
add
sbb
scas
pop
cwtl
sbb
jb
or
pop
xchg
movsb
cld
push
push
and
inc
push
jmp
cmp
pop
pop
pop
test
mov
subb
popa
insl
dec
ss
mov
dec
or
outsb
fsubl
and
adc
dec
push
jecxz
mov
pop
sahf
lahf
into
sub
lock
fidivrl
adc
jno
mov
sub
leave
mov
outsb
pop
ficoml
lds
sbb
pushf
aaa
shl
dec
xchg
adc
inc
enter
sti
mov
xchg
into
xchg
out
push
in
mov
add
repz
mov
dec
push
add
sub
ret
icebp
fstl
fstenv
aas
je
call
inc
mov
dec
test
dec
xchg
jecxz
aas
bound
push
pop
vaddps
in
outsb
test
sbb
adc
xchg
orl
xor
jg
test
outsb
push
cvtps2pd
lods
inc
add
repz
adcl
mov
imulb
dec
adc
inc
insb
fs
les
pusha
jle
gs
out
and
lcall
mov
xchg
stos
ret
pop
fisttpl
arpl
dec
dec
in
lds
sbb
jbe
call
mov
cltd
mov
dec
int3
xchg
cmp
imul
nop
shll
jnp
in
add
scas
das
mov
lret
xchg
fisttps
pop
sub
or
sbb
sub
lods
adc
in
icebp
and
test
dec
out
dec
add
addl
xchg
in
scas
imul
dec
push
loop
adc
adc
idivl
sbb
jo
addl
fistps
gs
sbb
test
pusha
out
cli
adc
mov
mov
inc
lret
outsl
je
mov
sbb
loop
pusha
icebp
jne
and
pop
push
shrl
cwtl
subb
or
ljmp
sub
fs
fwait
cmpsb
or
es
xlat
out
imul
cmc
ret
mov
jmp
out
mov
jne
cmp
dec
movsb
shlb
jge
adc
mov
in
add
jns
and
lea
cmp
fs
aad
pop
and
dec
out
jno
sub
fwait
scas
orl
and
es
cmpsl
mov
rcl
xchg
adc
xchg
pop
scas
cmpsb
lock
clc
movsb
and
scas
imul
mov
mov
sbb
jp
cmp
iret
pop
leave
lock
mov
dec
push
daa
sub
push
adc
lea
push
aad
xorl
fists
movsl
pop
dec
pushf
cmp
xlat
dec
sti
out
push
jle
push
sub
mov
mov
lea
sub
cltd
aas
loop
mov
push
mov
xor
and
cli
divl
out
loop
inc
stc
ret
lods
out
addr16
cmp
sbb
push
cmc
addr16
mov
notb
arpl
scas
lret
push
jae
mov
sbb
js
loopne
adc
dec
subb
push
mov
daa
mov
sahf
shll
mov
mov
stc
cli
mov
push
sbb
test
out
mov
xchg
mov
fcompl
push
js
pop
push
dec
fistps
pop
out
sub
stos
cmp
adc
xor
les
lods
cmpsl
jae
mov
xor
dec
jae
sbb
data16
rcr
loopne
push
xchg
inc
testb
in
stc
lds
push
je
and
divl
pop
test
and
cmp
ds
cmpl
mov
mov
je
lret
out
insl
test
pop
cmc
mov
decl
sarl
mov
mov
rclb
pusha
pop
cmp
sahf
fcomp
push
out
pusha
cmp
xor
negb
hlt
mov
cmpsb
outsb
mov
push
jp
adc
xor
subl
movsl
pop
stos
shlb
test
pop
dec
mov
mov
pop
pop
mov
out
pop
xbegin
push
iret
in
movsl
cmpl
lcall
pop
mov
test
or
or
xchg
pop
xchg
jle
inc
push
gs
aad
push
sub
xorl
mov
sbb
int3
sbb
imul
cmp
lods
and
cmp
fdivr
dec
addr16
in
repz
inc
je
and
stos
cmp
push
out
jp
or
jecxz
ljmp
in
fs
out
pop
or
jl
pop
add
ret
mov
scas
fs
nop
push
out
adc
cmp
push
das
filds
js
lds
and
sti
aad
cmp
xorb
sbbl
pop
cltd
xchg
mov
xchg
dec
repnz
enter
out
mov
pop
dec
insb
mov
dec
mov
push
addl
jae
mov
jg
xor
repnz
cmp
aad
and
fwait
add
xor
sub
je
jbe
push
pop
pop
pop
mov
ds
inc
repz
insl
mov
std
adc
stc
xor
push
stc
cli
je
clc
cli
sbb
and
pop
popf
add
sbb
mov
sbb
push
fidivs
aaa
xchg
pushf
jne
adc
inc
or
mov
lea
in
xchg
dec
ss
aam
loopne
add
popf
xor
les
cmp
adc
inc
inc
test
adc
inc
scas
pop
in
sub
xor
push
insl
aas
js
fstp
call
subss
test
push
mov
adc
stos
mov
movb
dec
std
xor
pminub
dec
xchg
ss
insb
mov
mov
iret
xchg
pusha
inc
bound
in
loopne
sbb
sub
xchg
ss
pop
or
and
mov
aad
inc
test
clc
xchg
add
cmp
adc
je
clc
insb
and
addr16
push
push
dec
push
fwait
mov
jge
mov
lods
out
arpl
lods
jnp
cmp
and
sti
xor
lods
xor
inc
cmp
pop
sahf
loopne
xchg
inc
pop
out
aaa
imul
subl
or
cmp
push
aad
jmp
sar
pop
fcoms
sbb
adc
rcrb
lcall
adc
aam
or
mov
push
hlt
testl
cmp
adc
mov
pop
jmp
dec
xchg
jb
mov
push
cltd
xor
pop
scas
push
stc
jmp
push
test
inc
dec
mov
data16
mov
stos
movsb
mov
push
incl
dec
outsb
xchg
dec
adc
jno
mov
sub
daa
shrl
movsb
shrb
cwtl
xchg
cmp
pop
push
adc
or
push
mov
cmp
shll
jb
aas
outsl
lahf
lret
out
insl
ss
xchg
or
adc
mull
push
pop
adc
add
call
inc
fisubl
shll
idivb
push
or
shr
stos
jo
xchg
mov
add
inc
jp
push
loope
push
cld
mov
xchg
mov
dec
rolb
sbb
out
dec
mov
rorb
clc
roll
lcall
addr16
or
mov
mov
adc
xchg
add
and
add
inc
pop
xchg
clc
je
and
movsb
out
mov
push
mov
mov
pop
icebp
int
push
scas
add
cs
dec
add
outsl
sub
std
and
mov
scas
les
call
not
sub
das
mov
fists
fisubrs
jle
xchg
sbb
hlt
ljmp
ret
inc
mov
add
mov
xor
or
xchg
pop
fsubrl
arpl
repnz
stos
fbstp
pop
push
sti
sti
sti
mov
insb
jg
lret
push
lahf
sub
jg
test
fs
stc
and
dec
mov
dec
mov
push
jbe
ret
jae
dec
lods
fs
ret
jle
mov
insl
loop
push
aam
jg
and
and
enter
push
les
push
outsl
div
in
sub
into
test
div
mov
xchg
mov
outsl
aaa
and
insb
adc
movsb
push
and
jns
movsl
jecxz
add
sbb
add
je
inc
mov
xor
icebp
imul
in
movsb
loopne
lods
mov
cmp
dec
sub
xor
push
mov
or
xchg
inc
jne
xchg
test
outsl
leave
out
cmp
mov
arpl
pop
jl
test
enter
fisttpll
sbb
shll
push
cwtl
lods
hlt
popa
xor
push
call
insb
int
pop
cwtl
push
in
cltd
loope
push
loopne
sbb
xchg
or
jle
mov
jb
sbb
mov
or
sub
sbb
inc
mov
adcb
pop
mov
and
or
clc
pop
mov
mull
push
scas
add
push
ss
mov
push
and
out
add
clc
jecxz
jmp
sbb
js
push
hlt
sbb
pop
jns
int
xor
stos
loop
scas
pop
xchg
and
in
mov
pop
add
int
and
mov
push
arpl
jo
inc
cmp
movzbl
push
pop
mov
push
adc
push
mull
in
popf
xchg
xor
imul
loopne
pop
test
adc
mov
push
test
jp
sbb
mov
fimull
fisubl
pop
in
mov
mov
ljmp
and
push
pusha
jle
imulb
arpl
mov
out
into
pop
fisubrl
or
loopne
cld
lret
sbb
inc
push
inc
into
test
aad
fcoml
jge
scas
sti
mov
jge
loopne
repz
cmpsl
nop
jno
inc
mov
outsl
adc
jg
or
clc
cmp
pop
adc
leave
jae
or
ret
insb
or
out
mov
inc
pop
seto
clc
das
sub
mov
movsl
jb
faddl
scas
and
repz
test
pop
stc
mov
sbb
sbb
ja
ret
mov
mov
adc
jno
out
mov
outsb
inc
out
ret
ret
inc
mov
xchg
mov
les
jl
jns
or
fs
xor
xor
fxch
stos
ss
lods
repz
mov
sbb
mov
fcompl
dec
sti
movsl
push
leave
cmpsl
sub
inc
add
in
or
xchg
pop
pusha
mov
rcl
insl
sbb
mov
lret
test
cltd
push
jbe
mov
xor
nop
push
inc
inc
nop
pop
add
lret
dec
out
ss
sbb
push
xor
cli
jne
cmp
rol
je
nop
jb
rcrl
roll
out
mov
xchg
stc
flds
enter
into
cmp
push
fnstcw
jp
and
inc
push
mov
in
lods
shll
popa
pop
xchg
sbb
cmp
lcall
and
enter
xor
inc
xchg
out
mov
fldlg2
outsb
ds
out
mov
sub
lcall
in
sahf
xchg
inc
dec
add
and
and
lods
mov
mov
stc
mov
or
adc
adc
dec
push
xchg
ss
inc
and
lahf
sti
mov
push
or
xor
xor
cltd
mov
push
cwtl
sbb
inc
data16
std
cld
jne
movsl
popl
push
test
outsb
rcrl
xor
enter
mov
rorl
movq
adc
and
mov
cmpsl
cmp
out
in
mov
pop
lods
into
fmul
popa
cmpsb
les
je
add
adc
lret
mov
clc
sbb
cmp
and
aaa
or
xor
in
mov
push
inc
negl
xchg
push
int3
or
push
shlb
mov
fwait
mov
test
lock
mov
pop
sbb
pop
std
inc
das
sub
daa
jle
repnz
xor
sbb
leave
outsb
pop
jp
bound
push
stc
loopne
orb
mov
push
push
pop
jp
aam
clc
clc
iret
jno
mov
push
push
and
lods
xor
loope
lahf
das
inc
xlat
aad
icebp
pop
jg
fwait
push
fiadds
cmc
push
adc
icebp
jecxz
xor
pop
lret
cld
aam
mov
ss
inc
lret
sub
call
cmc
sbb
les
xchg
xchg
adc
mov
mov
mov
push
js
mov
aad
rorb
imulb
push
jmp
test
fs
repnz
mov
adc
repz
lods
and
mov
fistpll
movsl
adc
cs
in
iret
das
not
out
lods
test
dec
mov
stc
mulb
shrl
scas
iret
pop
daa
sub
incl
xlat
dec
shrb
lcall
add
sbb
xchg
mov
jbe
jecxz
cld
repz
out
push
sahf
movsb
inc
add
or
mov
mov
ss
testb
mov
pop
and
shlb
or
cmpsl
xor
popf
fimuls
inc
imull
cmpsb
pop
fadds
sbb
push
rcr
imul
test
dec
hlt
lods
out
sub
and
push
cmc
lcall
jmp
mov
sbb
lcall
int
or
push
and
pusha
in
jg
lock
outsb
sbb
shll
ficoml
maskmovq
testl
cmp
les
jb
pop
aaa
in
dec
mov
sub
adc
pop
adc
mov
push
shlb
xchg
jnp
push
sbb
jno
or
pusha
xchg
pop
jne
adc
xchg
dec
inc
inc
imul
lock
mov
jae
jnp
mov
adc
jp
loop
sbb
ja
in
ds
dec
xchg
mov
mov
stos
sub
aaa
popf
jge
inc
xor
shrl
mov
add
test
ja
popf
frstor
jne
addl
ss
andl
pop
dec
roll
daa
mov
jmp
scas
pop
aad
mov
xor
incb
in
pop
int3
jbe
push
push
jno
mov
addr16
sub
push
inc
xor
in
cmpsb
add
jno
or
jle
or
push
rcrl
push
subl
daa
mov
cmp
out
call
pop
sti
jg
into
mov
mov
cmp
imul
xchg
inc
fistps
clc
movsb
out
push
aad
push
xchg
rcrb
ds
shrb
push
or
mov
loop
ret
sub
imul
adc
scas
pushf
in
push
cmp
fwait
icebp
sub
mov
mov
push
jle
loopne
xor
popa
nop
push
aad
gs
xor
pop
out
aaa
pop
test
push
setae
int
push
shll
push
inc
fsubp
into
push
adc
mov
arpl
jo
cmpsl
mov
imul
xchg
mov
outsb
jle
xor
ljmp
cmpsb
filds
aas
mov
rorb
aam
cld
out
adc
cmp
repz
into
mov
lea
adc
and
aad
test
jmp
pop
push
sub
sbb
iret
leave
vdivps
out
dec
rclb
mov
divl
popl
icebp
popa
fcomps
or
lds
xchg
mov
lcall
mov
inc
subb
mov
or
pop
jns
ss
mov
sbb
ret
mull
cld
je
xor
push
xchg
imul
iret
push
mov
shl
lds
and
mov
ficomps
imul
sub
pop
push
arpl
mov
mov
dec
outsb
rcr
shlb
aaa
mov
addl
fnstcw
or
mov
popl
loop
lods
loop
in
cmp
hlt
out
repz
adc
out
mov
lret
gs
mov
idivb
mov
add
lcall
testb
push
dec
inc
push
inc
push
aam
loope
insb
adc
push
pop
imul
and
xlat
outsl
add
xchg
jmp
call
enter
cmpsb
lahf
out
cmc
imul
call
mov
mov
sahf
loop
pop
sbb
sub
cmpsl
mov
addr16
mulb
call
or
cmp
pop
or
cmpl
or
inc
sub
and
cmp
or
ss
nop
sbb
pop
das
insl
sub
ret
shr
shlb
loop
outsb
repnz
int
pusha
jmp
sub
ret
pusha
outsl
popf
addb
fadds
mov
lret
dec
stos
imul
jl
jns
add
testl
mov
mov
jg
rolb
repnz
push
add
jp,pt
lahf
push
mov
cli
enter
hlt
es
jle
pop
mov
scas
movsb
aaa
jl
ss
mov
adcl
mov
or
sub
mov
lahf
std
or
movsb
jb
lgs
jns
pop
sarb
add
cmp
and
pop
and
push
xor
rcrb
rcll
xlat
xchg
fwait
pop
aam
test
out
orb
push
and
js
sub
dec
mov
dec
sarb
sahf
adc
es
mov
add
scas
dec
or
aad
pushf
and
push
push
cli
xchg
das
dec
jno
repnz
mov
cmp
neg
jb
fwait
dec
test
dec
mov
inc
dec
cli
int
xor
and
mov
jb
cmpsl
mov
leave
xor
rorl
xchg
cmp
xor
push
xchg
xchg
sbb
stos
movl
pop
sbb
jge
sub
divb
adc
mov
jl
jbe
jno
pop
popa
inc
sbb
mov
test
insl
and
and
push
into
outsl
sbb
lea
fisttpl
jp
rcrb
shlb
push
xchg
popa
sbb
ficoms
es
xlat
addb
outsb
fidivrl
xlat
adc
adc
flds
cltd
inc
enter
push
gs
cmp
sbb
push
test
jb
mov
int3
add
inc
stos
ficoml
ficompl
test
ret
push
fdivrs
jmp
jle
fldcw
cmpsl
fldenv
bswap
repnz
mov
push
fwait
xor
push
aad
je
add
addr16
int
or
fisubl
inc
and
clc
daa
cmp
inc
pminub
add
repz
into
inc
and
lea
pop
xchg
xchg
and
rcl
sti
mov
sub
movsl
pop
xor
imulb
inc
add
jb
mov
sbb
out
icebp
adc
mov
sbb
movsl
icebp
rol
idiv
jbe
mov
pop
xchg
mov
jno
and
aad
cmc
pop
nop
hlt
in
mov
ficoms
lcall
enter
or
sbb
cmc
cmp
mov
inc
movsb
nop
lods
sahf
shlb
lahf
sbb
mov
jge
outsl
roll
outsb
lods
in
out
dec
out
subb
je
or
mov
adc
das
mov
xchg
dec
lods
ljmp
lret
cmp
inc
int
mov
mov
pop
leave
and
sbb
fidivrs
pop
mov
sahf
xchg
loop,pt
xor
inc
push
push
push
dec
je
les
xchg
mov
sbb
xor
rcrb
adc
cmp
outsb
pop
sbb
mov
stc
pushf
in
addr16
mov
mov
push
or
addl
clc
inc
loope
sub
cmp
xor
pop
mov
dec
daa
pop
and
out
sti
pop
or
sub
jmp
aas
aaa
dec
outsb
insl
xchg
fs
sbb
lret
out
adc
lock
int
hlt
adc
adc
adc
cmc
shrl
xchg
jns
das
pusha
out
xor
mov
inc
out
cltd
cmp
outsb
mov
xchg
jp
sti
xchg
adc
addr16
lret
fcoml
jb
daa
push
cmp
sbb
fs
xchg
mov
pusha
mov
inc
jl
rolb
outsl
push
loopne
std
push
adc
fdivrs
mov
mov
test
loopne
mov
jb
dec
in
or
or
xor
or
mov
into
sub
sbb
mov
shrb
shld
jnp
pop
xor
pop
sub
cmpsb
add
ficompl
xor
jecxz
gs
pop
xchg
out
popa
mov
sub
jnp
in
xlat
stos
sahf
mov
out
mov
xchg
call
clc
in
ficompl
pop
popf
scas
scas
mov
push
xor
xor
cs
pop
stc
shll
mov
xchg
add
testl
shlb
mov
repnz
and
std
or
hlt
out
dec
nop
and
cmpsb
in
inc
and
jmp
addr16
mov
int
and
ret
dec
cltd
jb
je
cs
inc
das
push
cmp
sbb
sbb
dec
jns
pop
xchg
rcrb
mov
out
and
jbe
xlat
dec
mov
int
push
pop
fimuls
sbb
cmp
cli
push
push
fidivs
sbb
inc
sar
scas
insb
in
movlps
jp
dec
push
push
mov
jae
cwtl
pusha
add
xchg
xchg
sub
or
add
push
fcmovnb
mov
jl
adc
in
push
mov
and
ss
in
cs
jl
add
es
mov
mov
jnp
stc
stc
clc
mov
leave
popa
push
cmp
sbb
ja
rcl
mov
xchg
shll
sub
mov
push
sbbl
jg
into
das
sub
clc
or
test
add
sub
sahf
cmc
push
fcoml
inc
add
or
xchg
outsl
pop
loopne
cs
call
lahf
dec
nop
jno
sbb
or
inc
inc
or
addr16
call
popa
push
sbb
test
mov
popf
mov
jle
cwtl
stc
cmpsb
push
adc
mov
sub
lea
scas
popa
or
clc
lock
and
shl
icebp
add
test
mov
jl
sub
jl
jle
push
xchg
pushf
orl
sub
popf
sbbb
jge
lret
xchg
outsl
aad
mov
in
xchg
mov
push
rol
push
cmp
lret
daa
stos
sbb
imul
mov
or
cs
xor
dec
or
das
sbbl
xchg
int3
dec
dec
pop
clc
imulb
push
rdmsr
sbb
dec
rorl
mov
adc
sub
jns
mov
movsb
pop
addb
mov
cmp
jns
pop
pop
loop
popl
inc
push
dec
add
lahf
fcomps
mov
mov
in
daa
lret
inc
sbb
fidivl
dec
out
pop
jbe
and
out
je
out
out
rolb
pop
aad
push
xor
cld
lods
jp
and
test
push
stc
and
addr16
hlt
and
mov
addr16
repz
inc
xor
jg
scas
cmpsl
mov
std
cmc
in
imul
clc
out
fisttps
dec
rorl
add
pop
int3
xor
sti
mov
lods
push
arpl
lods
cmp
lods
sbb
lahf
shrb
mov
icebp
mov
push
es
lock
repz
adc
sub
leave
pop
pop
jg
sahf
pop
inc
xor
movsb
btr
xlat
sub
ss
test
stc
push
mov
pushf
add
dec
pop
xor
adc
mov
out
out
jnp
iret
xchg
fs
push
pusha
decb
cmp
ret
inc
cmp
sbb
aaa
loope
lds
outsl
ja
daa
int
mov
out
movsl
pop
push
sarb
xchg
mov
mov
pop
add
mov
or
mov
shlb
leave
and
xchg
dec
stos
dec
sbb
mov
pop
rorb
test
pop
ljmp
add
je
dec
mov
mov
push
or
sub
mov
jnp
cmp
loope
insb
movsl
or
stos
cmpsb
sbb
xchg
xchg
jmp
jnp
inc
ret
movsb
adc
xor
sub
add
cmp
sbb
jmp
sti
xchg
sub
cli
addr16
jl
int
bound
xlat
pop
push
mov
loope
mov
jl
fdivrl
clc
pop
jmp
shlb
testl
aam
pop
ja
lret
mov
jne
out
or
lods
pop
popf
fidivrs
or
orl
cmpsl
mov
outsl
es
or
out
jp
insl
xor
mov
lret
jnp
xor
es
push
mov
stos
pop
mov
cmp
outsb
loopne
xor
pop
fcmovbe
fwait
cwtl
ljmp
stc
call
push
inc
sbb
into
dec
in
pop
lcall
cmpsb
jo
into
out
popa
xchg
cvtdq2ps
nop
sub
repnz
cmp
sbb
or
int3
pop
xchg
in
rcll
clc
dec
insl
repz
aaa
imul
sarb
xor
data16
cwtl
stos
mov
in
popf
lret
fsubl
outsb
in
or
fldt
sbb
shlb
fsubs
push
cmpsl
stos
insl
cmp
or
mov
fidivs
inc
lds
cli
xor
rorl
roll
out
mov
aam
and
pop
fnstenv
stos
xlat
scas
data16
in
push
addr16
inc
mov
push
xor
adcb
xchg
bound
push
mov
movsl
repnz
orb
sbb
cmp
xor
cmp
fcomps
jne
cmpsb
pcmpgtb
dec
lds
mov
cmp
push
cwtl
ret
outsl
and
ret
lret
cmpsl
push
lret
jmp
jo
test
push
arpl
je
mov
in
iret
dec
jne
clc
inc
orl
aaa
loopne
fidivl
and
cmpsl
push
fidivs
roll
lock
inc
int
arpl
test
lahf
popf
fisubrs
pop
dec
pop
push
test
xor
cmpsb
fisubs
mov
mov
pop
ret
sbb
aam
repz
pusha
gs
or
ds
test
pop
int
popa
lds
fstps
sub
xor
ficoms
aas
ret
gs
stos
and
adc
in
ret
push
inc
popa
lods
push
mov
setno
pmulhuw
adc
movsb
sti
notb
cltd
cs
cmp
cmp
inc
mov
stc
fmuls
ds
mov
jae
fmulp
mov
daa
pushf
addr16
in
cmc
ljmp
enter
push
test
push
aad
mov
ret
mov
ds
shrl
mulb
add
xor
mov
aaa
fstp
jg
lock
repz
sub
imul
dec
sbb
and
xor
test
mov
and
lods
sbb
jl
ljmp
jnp
add
push
test
inc
lret
jo
jle
and
pop
orb
add
test
insb
xor
cmp
push
xor
aam
in
out
sti
jnp
fisttpll
xchg
imul
scas
cmp
gs
mov
pop
jns
dec
mov
bound
add
mov
xlat
xchg
fcompl
pop
push
cmp
fisttps
mov
faddl
cmp
jge
xor
add
stos
das
rcl
pushf
dec
sbb
and
xchg
enter
imul
inc
mov
or
cld
sahf
call
pushf
add
cmp
loope
pusha
sub
mov
jmp
xor
insl
fwait
xor
push
ret
outsl
in
xchg
andl
jo,pt
mov
mov
add
ret
ja
test
mov
pop
add
jle
dec
push
repz
es
lret
xchg
inc
repz
push
insl
mov
mov
pop
hlt
rorb
cmp
adc
inc
pop
shl
data16
out
xor
cwtl
int
aad
scas
add
cmp
lock
fnstenv
adc
popa
pop
jnp
mov
fwait
xchg
mov
jb
cmpsb
test
pop
sbb
inc
fs
pop
insb
aam
rcl
cmpsl
dec
mov
fdivs
lret
ljmp
xchg
jo
dec
cmp
pushf
ss
dec
stos
fldcw
cs
sbb
jg
fnsave
test
jns
sbb
shlb
repz
sbb
jecxz
pop
add
jl
popf
dec
adc
inc
test
sbb
in
lahf
popf
adcl
mov
sub
mov
scas
xchg
imul
cmp
iret
mov
cmpsb
cmp
mov
push
aas
aaa
push
xlat
das
lcall
xchg
mov
out
mov
insb
pop
mov
push
mov
lock
jo
stc
adc
cwtl
jnp
xor
lds
jg
addb
push
mov
add
test
xchg
push
sub
imul
pop
aas
test
shld
jno
or
shlb
jae
cli
out
or
je
loop
negl
add
in
pop
mov
shll
push
cmp
push
or
inc
popf
cmpsb
push
jp
aaa
xor
in
cmp
xor
hlt
jp
push
pushf
stos
mov
inc
shrl
or
dec
or
sbb
fistl
jle
xchg
lds
fwait
shl
xor
xor
jno
inc
popa
nop
movsl
cltd
mul
jb
popf
js
cmp
imul
out
pop
fwait
pop
mov
sub
gs
jle
fmuls
loop
mov
bound
sbb
mov
jmp
pop
adc
dec
push
pop
cld
pop
jmp
add
or
pop
jge
adc
dec
inc
loopne
mov
cmpsb
loop
push
xchg
xor
test
adc
test
dec
sbb
fbstp
cmp
faddl
inc
clc
out
loope
ja
xor
or
std
sub
xchg
xchg
int3
cmpsb
xor
aas
shl
roll
mov
inc
dec
pop
jge
orl
adc
push
stos
push
dec
jge
inc
adc
aad
into
outsl
cld
xchg
out
mov
insb
mov
lods
scas
add
xchg
into
cmc
sar
push
movsl
pop
out
jge
sbb
mov
nop
mov
and
arpl
int
out
lret
scas
xor
enter
xor
ljmp
and
mov
lock
fs
xor
inc
repz
or
cmp
mov
mov
inc
ret
push
in
or
lret
pop
cmp
dec
dec
or
sub
add
pop
hlt
cmpb
pop
or
inc
mov
out
enter
ret
mov
inc
cmp
sbb
cmp
mov
rol
cmp
add
push
rcl
mov
xchg
das
and
jl
das
sti
mov
jmp
mov
and
das
aaa
xchg
dec
add
aam
out
aam
push
and
push
mov
adc
pop
fmulp
push
loope
movsl
scas
test
aad
xchg
xchg
sub
pop
ss
jmp
sub
fsts
cmp
or
cltd
mov
mov
add
jne
imul
notl
cmp
jno
cmp
push
mov
in
or
sub
clc
dec
cmpsl
and
imul
dec
mov
adc
lock
sub
jbe
in
jmp
mov
in
aas
push
mov
dec
sar
mov
push
outsl
icebp
insb
daa
jle
mov
test
mov
add
cli
and
sub
xlat
lret
sub
push
shlb
inc
cmpb
xchg
bound
sub
xchg
lret
cmc
orb
pop
or
lea
xor
xor
popa
and
push
stos
adc
call
shl
cltd
mov
cmpsl
pop
add
dec
mov
xor
and
inc
hlt
xor
jmp
and
jb
int
push
jp
out
lret
call
lea
movsl
pop
push
mov
fnstcw
loop
cmp
popa
pop
inc
push
stc
stos
das
lahf
adc
push
add
mov
pop
inc
movsb
pop
mov
push
inc
xchg
mov
fisttpl
and
cmp
mov
sub
pop
jmp
fstpt
and
xlat
mov
cli
int
and
lret
dec
lahf
cmp
or
ficompl
xchg
cltd
add
or
lds
adc
jae
jo
or
xlat
orl
add
cmp
fsubs
xchg
push
cmc
cmp
adc
icebp
pop
add
cltd
insb
inc
subb
out
jmp
pop
movaps
sbb
mov
fwait
hlt
inc
into
cmp
push
shlb
mov
xchg
and
jnp
dec
out
jge
inc
mov
shrb
test
in
sbbb
bound
add
data16
and
stos
aad
mov
cmpsb
aaa
into
arpl
cld
out
xchg
add
cwtl
mov
out
mov
pusha
cli
mov
inc
or
test
pop
mov
xor
push
outsb
es
push
xchg
int3
or
ljmp
lds
mov
call
mov
call
mov
movsl
in
stos
test
pop
mov
stc
adc
mov
sub
stos
repz
add
mov
aas
cmc
inc
push
stos
xchg
in
outsb
repnz
outsl
bound
loope
mov
sub
or
fs
shrb
mov
xor
and
mov
cmc
pusha
outsl
pop
sbb
lods
add
stos
outsb
adc
pop
js
pop
push
out
cmp
mov
sbb
cld
or
mov
loopne
rcl
notb
clc
push
jmp
jge
pop
jp
dec
iret
jle
mov
data16
leave
dec
fs
hlt
inc
push
mov
js
push
push
frstor
or
mov
sahf
lcall
out
mov
and
clc
cmc
insb
jb
enter
clc
fsincos
sub
jno
pop
pusha
imul
sti
ds
xchg
sbb
mov
lods
iret
push
jne
mov
iret
mov
or
adc
jge
mov
xchg
popf
ret
shll
test
aam
gs
xchg
adc
ja
mov
leave
and
push
daa
repnz
cmp
icebp
mov
xor
inc
in
mov
imul
mov
inc
jo
and
pop
outsb
and
cli
rolb
mov
push
in
mov
cs
test
movsb
cmc
fcoml
pop
jno
sbb
inc
fwait
cmpsl
or
or
push
sbb
enter
cld
dec
scas
mov
pop
mov
insb
xlat
mov
xor
inc
je
dec
mov
stc
jle
sub
inc
adc
cs
shl
push
repnz
fwait
inc
out
in
rolb
out
add
pop
aad
mov
cmc
sbb
xchg
sub
stos
std
push
and
in
push
dec
push
movsl
jp
push
dec
divb
js
push
xchg
lahf
iret
sub
rcll
cmp
hlt
xchg
push
ss
jle
push
test
lods
sub
inc
fmuls
cli
pop
mov
xor
xorl
or
sbb
clc
mov
loop
ja
sbb
add
rolb
push
sub
fucomi
pop
bound
cmp
inc
das
mov
mov
jl
and
outsl
or
inc
rcll
dec
jb
scas
mov
push
arpl
or
lods
movsl
mov
jnp
sbb
sarb
xor
mov
and
inc
mov
outsb
test
push
or
fs
add
stc
jge
push
jo
mov
test
pop
lock
out
sub
enter
xor
mov
adc
push
mov
leave
pop
mov
and
sar
lahf
push
cmpsl
jnp
sub
xchg
cld
xchg
pop
ret
inc
mov
xchg
orl
cli
test
movsl
outsb
in
imul
xor
cwtl
out
ja
pop
imul
xacquire
into
xchg
mov
adc
ret
xor
jnp
pop
mov
repz
sahf
jne
xor
push
es
xchg
sbb
push
mov
call
xor
push
lods
stos
ficoms
sub
sub
or
loop
add
dec
loope
iret
mov
xchg
je
ljmp
mov
mov
aad
cwtl
or
shlb
test
loope
and
je
rcrl
mov
jno
into
shl
mov
inc
pop
scas
adc
push
loope
negl
clc
cmp
ljmp
xchg
test
sub
adc
jl
xor
add
jbe
in
mov
pop
cmp
or
jp
pushl
mov
mov
test
cmp
sbb
lea
fcompl
cmp
cmp
pop
frstor
mov
lret
inc
sbb
mov
push
jne
and
inc
xchg
fs
add
idivl
dec
cwtl
jnp
add
jo
adc
hlt
daa
outsl
jecxz
cltd
mov
xor
repz
pop
cmp
fistl
push
sub
rolb
sbb
dec
out
xchg
mov
xchg
pop
add
popa
push
in
call
outsl
and
xor
fisubrs
mov
jne
jbe
es
pop
clc
dec
lods
cld
pop
clc
incb
mov
stos
lods
insl
test
mov
popa
pop
add
push
add
xor
cmc
fdivr
jecxz
out
push
pop
adc
cmp
pop
js
jmp
stos
mov
and
adc
push
int
or
mov
cmpsb
dec
hlt
push
ret
lahf
loop
dec
xchg
ljmp
fs
sub
adc
pop
rcll
add
xchg
dec
and
mov
xchg
inc
cmp
rcll
int3
gs
xor
mov
mov
in
pop
cmc
pop
and
jno
movsl
rcll
adc
cltd
mov
lods
jl
jnp
pop
or
mov
and
nop
cltd
sahf
stc
jmp
cmp
sub
pop
and
jmp
jb
pusha
shlb
pop
xorb
subl
mov
ljmp
mov
call
mov
jne
loop
cwtl
sbb
sbb
outsl
add
xchg
hlt
mov
insl
ss
ret
cmp
add
xor
into
xor
jnp
orb
jb
sub
dec
out
jmp
pop
and
aad
lds
loop
pop
pop
push
or
lods
jne
pop
cwtl
mov
sub
int
test
mov
pop
arpl
les
mov
cltd
mov
inc
inc
push
jle
clc
and
push
je
insl
dec
cmpsb
xchg
sbb
pop
sub
xchg
mov
daa
cmp
cmp
cmp
mov
mov
int3
push
outsl
push
pop
pop
add
cmc
cwtl
xchg
and
negb
lods
dec
fs
insl
inc
adc
mov
out
insl
cld
inc
xchg
je
sti
les
out
cmp
outsl
sarb
out
xchg
hlt
cmp
sub
push
data16
push
pop
xor
out
adc
lds
decl
movsl
pop
and
popa
or
mov
xor
mov
xorb
jge
imull
loop
push
xchg
adc
and
data16
push
inc
jecxz
add
xor
popf
adc
rcr
out
xchg
jno
fsubrl
lds
fadd
aad
cmc
stos
push
push
movsl
fldenv
mov
mov
scas
mov
sbb
cltd
repz
and
jns
pop
mov
mov
mov
xchg
xchg
lret
or
mov
jbe
aaa
rolb
inc
mov
dec
int
mov
dec
jecxz
push
or
xchg
xor
inc
push
pop
add
movsl
in
pop
or
mov
roll
push
mov
or
shll
inc
gs
cltd
das
cmp
mov
push
sahf
nop
and
fildl
int
mov
jle
lcall
or
test
add
cmpsl
inc
insl
or
xchg
or
mov
icebp
cmp
cltd
cs
adc
and
loopne
testl
mov
aam
fidivrl
movsb
hlt
popa
pusha
dec
fistpll
sub
jns
insb
pop
mov
xor
push
mov
pop
das
scas
into
bound
sbb
addl
xor
mov
push
sub
outsb
call
jb
mov
inc
xor
add
popa
mov
outsb
push
xchg
lods
xor
mov
aam
sub
cmp
inc
out
ss
neg
lret
and
inc
out
daa
dec
inc
test
and
jns
jae
je
xor
mov
addr16
movsl
addr16
push
daa
insb
mov
jno
outsb
shrb
inc
std
daa
or
repnz
stc
adc
add
dec
sbb
ss
divl
aad
jo
mov
pop
cwtl
mov
aaa
jge
mov
stos
ret
and
je
push
imul
mov
jb
pop
insb
dec
dec
add
ds
sub
pop
push
dec
xor
fst
ret
mov
cmp
push
cmp
lea
adc
mov
mov
jg
jmp
mov
cmc
out
adc
or
sbb
outsb
out
adcl
sbb
lock
int3
or
pop
cmp
lcall
fnstcw
scas
mov
in
inc
mov
xchg
or
aas
es
and
test
sbb
enter
js
sahf
shr
mov
loope
frstor
fidivl
lret
or
roll
mull
shr
wrmsr
adc
cwtl
mull
fcomps
jmp
sub
and
divb
adc
ljmp
idivb
std
into
cmp
movsb
dec
xor
lret
jge
jbe
scas
adcl
xor
lock
xor
mov
dec
imul
dec
out
push
adc
adc
insb
stc
push
xchg
dec
xor
pop
repz
add
mov
stc
das
les
jne
jl
aad
es
cld
jg
push
test
push
cli
pop
pop
sbb
outsl
and
xor
mov
sub
jecxz
jb
sub
das
fneni(8087
jmp
aad
addl
outsl
jge
cmp
sbbl
movb
jb
pop
pop
in
inc
mov
loope
mov
arpl
filds
mov
mov
lret
add
and
les
xor
push
stos
sahf
push
mov
icebp
push
out
push
lret
mov
popf
test
cmp
mov
sub
rcrl
and
push
retw
stc
pop
fistpll
and
cmc
add
fsub
insl
and
aad
lea
sub
sahf
js
out
and
jnp
stc
cmp
daa
test
jg
unpckhps
gs
out
cli
adc
mov
or
inc
sahf
pop
mov
test
lret
and
repz
or
mov
pop
adc
out
and
add
in
inc
inc
mov
sbb
test
stc
data16
mov
lea
or
jb
out
xlat
pop
out
mov
xor
lret
lret
scas
xchg
sbb
cmp
pusha
sbb
ds
insb
inc
mov
or
or
rorb
mov
cmc
ljmp
adc
js
mov
xor
add
repz
push
sbb
cs
cmp
inc
pop
push
cmp
pusha
lret
imul
insb
push
pusha
or
mov
fnsave
inc
emms
int
sub
iret
and
les
fdivr
adc
fistpl
mov
lods
roll
pop
mov
popl
xchg
xorb
sarl
jecxz
repz
fcmovne
lret
js
xor
icebp
push
add
xchg
cmp
sbb
lcall
das
mov
ror
push
pusha
sbb
inc
pop
imul
pop
sub
roll
inc
loop
pop
ja
jns
push
aas
lahf
mov
incl
dec
pushf
push
ja
and
mov
dec
movsl
aam
push
loope
sti
mov
inc
rorl
push
mov
mov
inc
mov
jg
jle
test
jb
mov
jbe
das
pop
aad
lds
jmp
je
dec
sbb
mov
sbb
shll
loopne
shlb
mov
fwait
xor
not
icebp
sub
out
mov
std
mov
stc
jmp
sub
aam
adc
inc
push
mov
ficompl
fwait
mov
mov
pushaw
sub
push
repnz
push
cmc
jnp
mov
in
or
or
cmp
dec
sub
daa
divb
out
cmp
sbb
dec
or
fwait
jne
mov
xchg
xchg
add
int
xor
mov
inc
xchg
xchg
adc
test
xchg
inc
mov
and
pop
dec
ds
mov
fcoms
jecxz
xchg
cwtl
mov
insb
mov
and
pop
sub
xor
jg
cld
insb
loopne
mov
sahf
in
cld
adc
xchg
mov
push
pop
fisubrs
adcb
cmpsl
rol
daa
inc
inc
mov
out
inc
pusha
pop
inc
or
inc
iret
xchg
xchg
test
dec
stos
sti
imul
fiadds
or
or
arpl
dec
or
sbb
in
push
cmpsl
cmp
scas
mov
mov
xor
pop
dec
movsb
mov
lcall
ds
mov
in
xlat
inc
clc
std
pop
cmpsb
pusha
jecxz
mov
daa
jle
das
dec
cmp
jg
dec
das
lret
xchg
dec
pop
cmp
das
xchg
mov
cmp
mov
sbb
scas
mov
stos
xchg
jl
mov
and
and
leave
cmp
mov
imul
xchg
ds
push
std
dec
shll
push
xchg
dec
mov
and
pop
sbb
stos
sar
dec
push
or
pop
in
xlat
and
add
lcall
pop
stc
sub
mov
call
inc
xor
mov
shll
jnp
jmp
mov
mov
iret
xor
jne
lahf
mov
cmp
lods
dec
push
jle
jg
xchg
pop
mov
xchg
xlat
or
adc
inc
or
int
js
out
pop
mov
aaa
int3
jne
xor
fwait
push
int
add
pop
mov
js
nop
jmp
xacquire
inc
mov
push
sub
adc
fimull
dec
sub
inc
mov
sub
mov
lret
aam
cmp
adc
pop
mov
pop
adc
pop
sti
mov
cwtl
xlat
pop
ja
inc
cli
in
ret
leave
mov
sarb
mov
fisttpl
mov
das
lcall
call
and
dec
sub
in
dec
xor
push
es
push
scas
mov
aam
ficompl
xchg
ret
mov
mov
adc
jo
add
das
rcrb
pop
mov
mov
repz
outsb
dec
lds
add
bound
dec
iret
xchg
xchg
and
xlat
cs
jecxz
fwait
out
int3
and
adcl
mov
jmp
pop
movl
shll
jl
mov
add
inc
test
xchg
lahf
sar
push
dec
pop
hlt
sarb
cmp
dec
insl
lea
aas
fcompl
jns
adc
decl
sbb
xor
xlat
push
jbe
outsb
je
lcall
daa
aad
adc
into
es
aad
pop
leave
pop
aas
xchg
mov
push
gs
es
push
xchg
mov
das
xor
ss
bound
loope
sub
jo
andb
ret
sbb
cmpsl
mov
push
loop
mov
pop
mov
pop
xchg
in
inc
das
fwait
cmp
mov
and
lea
sahf
pop
cmp
mov
cmp
sbb
cmc
xchg
and
jb
loopne
outsb
outsl
ret
mov
lods
cmc
sbb
push
mov
enter
mov
cltd
aad
sbb
or
inc
mov
cmc
shlb
addl
ficoml
mov
inc
inc
test
push
sub
and
leave
push
cmc
or
inc
scas
enter
dec
mov
mov
mov
repnz
inc
lock
cmpsl
daa
xor
jmp
jae
adc
mov
fld
add
push
dec
mov
mov
mov
push
outsb
stc
scas
mov
aam
lds
pusha
push
mov
jo
or
add
or
std
rcl
xchg
js
push
popf
insb
xchg
jl
jne
lret
fnstenv
xchg
sub
pop
sub
jl
shlb
test
pop
mov
jns
ret
divl
inc
adc
dec
pop
push
xor
pop
insl
jle
mov
jno
pop
sbb
icebp
pop
ret
lds
mov
scas
cmc
lret
adc
imul
aad
cmp
and
pop
imul
std
adc
cmp
xchg
add
pop
aaa
push
cmp
ret
stos
jge
nop
inc
js
sub
rcrl
inc
sub
dec
push
jg
xchg
wrmsr
negb
pop
jne
xor
fs
ja
mov
jmp
in
or
outsb
xchg
inc
data16
cmp
mov
aas
ret
jne
or
fidivs
imul
push
imul
xchg
cwtl
jmp
xor
lds
pop
mov
mov
je
sbb
cmp
xor
test
loopne
imul
bound
adc
rorl
ret
in
mov
push
ljmp
mov
cmpsb
sarb
push
sub
int3
out
cmp
test
mov
je
rol
in
fsubrs
pop
adc
xor
in
jns
mov
sbbb
xor
jle
mov
insl
enter
inc
aad
push
loopne
sub
jp
xchg
aaa
xchg
repz
adc
push
outsb
cli
cmpsb
mov
out
shrb
fidivs
and
imulb
push
insb
cld
popf
enter
push
outsl
inc
xor
add
clc
movsl
clc
or
xchg
int
xlat
bound
jge
das
jnp
loopne
jae
jmp
sub
in
sti
pop
xchg
jno
jp
out
je
cmp
idiv
mov
inc
jg
movsl
or
call
call
lock
test
repz
lahf
xor
inc
enter
aad
mov
sbb
xor
cwtl
icebp
inc
stos
jg
fldt
sub
xor
xor
cmp
push
adc
cmc
ret
adc
ret
nop
out
in
mov
lods
scas
mov
jmp
jo
pop
sbb
push
jge
sbb
push
mov
std
or
lods
les
test
movsl
cmpsl
push
ret
adc
cwtl
and
pop
adc
push
jg
xlat
leave
out
arpl
in
fcoms
xor
or
dec
pop
orb
adc
pop
fs
in
lret
push
insl
push
in
adc
mov
jmp
push
insl
int
add
adc
dec
mov
in
add
or
sarl
addr16
xor
sbb
js
mov
lea
pop
mov
mov
pop
data16
xchg
and
mov
movsb
add
pop
cltd
out
test
and
lea
aad
pop
aad
adcb
popf
and
fdivl
cmpsb
jge
in
or
and
push
shrl
aas
pusha
cltd
cli
fisubrs
aaa
rclb
lock
mov
test
push
jge
inc
sub
xor
ds
out
sar
pop
push
xchg
mov
or
aaa
jne
lods
out
push
jns
xor
rcrb
and
insl
iret
sub
scas
mov
xor
test
sub
clc
es
add
imul
and
push
std
dec
xchg
push
mov
sbb
lods
and
mull
dec
out
or
xchg
dec
jecxz
push
loope
push
xchg
jmp
push
icebp
cs
ror
mov
lcall
push
jns
std
and
mov
or
xchg
dec
test
add
and
xor
outsb
adc
sarl
outsb
xor
cltd
mov
sbb
cmp
jg
and
sub
xor
push
fmul
scas
cmp
and
cli
cli
popf
jg
sbb
in
and
mov
fcoml
mov
scas
dec
out
or
shlb
test
cmp
xacquire
int3
inc
sbb
leave
jbe
cmc
add
test
movsb
mov
outsl
adc
xchg
lods
add
cmc
clc
push
inc
mov
jmp
jecxz
pop
lret
loope
push
gs
add
lods
push
pop
mov
jmp
pop
arpl
jns
std
fs
lret
mov
push
cmp
out
sub
rcrb
add
jo
daa
scas
pop
mov
xchg
jno
mov
xchg
jmp
not
mov
cwtl
pop
mov
ja
push
bound
jecxz
or
or
inc
fistps
popf
cmc
mov
aad
cmpsl
sub
pop
pop
xchg
les
sub
xor
sub
xor
out
push
xor
adc
jmp
mov
push
jne
mov
clc
movsl
shr
xor
cld
jmp
icebp
inc
jnp
loope
shlb
lret
js
mov
stos
xchg
insb
xchg
lds
lret
add
fs
mov
rcll
notl
cli
loop
insl
add
pop
mov
addr16
fisubrs
and
xor
aam
pop
pop
xor
fwait
mov
idivb
lds
movsl
xor
faddl
test
push
jp
cmp
pop
xchg
mov
shrl
xchg
loop
cmp
pop
dec
rorl
push
cmp
adc
test
lret
aaa
pop
adc
lcall
repnz
push
sbb
rcrl
xorb
enter
pop
in
add
dec
in
movsb
lret
call
xor
dec
add
sbb
bound
cmp
mov
xchg
pop
fst
shrb
xor
test
adc
add
mov
cmpsl
push
sub
test
mov
in
scas
sub
movsb
push
dec
mov
call
sub
xchg
mov
std
aaa
xor
inc
jb
xor
jge
inc
adc
popf
outsb
jo
xchg
xor
mov
jl
xchg
in
les
jmp
mov
arpl
testb
cmc
cmp
push
cli
fadd
mov
or
mov
addr16
fwait
sbb
enter
in
mov
popf
in
or
js
hlt
cmp
out
jl
jns
into
mov
add
jge
xchg
xor
scas
add
dec
orl
inc
in
or
cmp
inc
in
adc
jmp
std
add
subl
daa
lea
addr16
mov
pop
rcrl
and
cli
pusha
sub
cmp
xlat
mov
sub
cmp
adc
cmp
or
imul
mov
xor
mov
and
add
imul
rolb
jmp
xchg
jne
xchg
mov
ljmp
out
dec
aam
add
adc
mov
xor
aas
out
pushf
cmc
xor
pop
pop
arpl
shrb
and
ljmp
nop
adc
test
into
jle
sbb
fcoms
add
xchg
test
mov
aas
push
adcb
pop
sub
or
rorl
fwait
ret
jb
rcl
mov
or
mov
cli
and
stos
dec
mov
or
fdivl
xor
test
sti
inc
mov
push
repnz
dec
adc
imul
add
dec
pushf
dec
outsl
xor
mov
clc
push
ja
mov
mov
sub
jp
cld
pop
lock
cmp
inc
shr
adc
out
push
inc
mov
addl
decb
or
pop
shlb
lds
mov
xchg
mov
loop
lcall
lock
sbb
fists
inc
xchg
add
mov
jp
xlat
test
pop
inc
das
dec
fisttps
inc
lods
mov
mov
fisubs
xor
xor
add
xor
push
leave
xor
stc
jne
pop
rorl
fisubrl
cmp
and
mov
cmp
ds
lret
mov
or
inc
sahf
sbb
js
cs
xchg
into
jmp
fsts
sub
pop
btr
cwtl
jmp
pop
ja
fcompl
dec
clc
movlps
pop
addr16
std
push
dec
lret
jecxz
insb
imul
fwait
sbb
gs
int3
jb
pop
mov
fadd
sub
scas
popl
sub
jo
fidivrl
inc
mov
push
fisubl
jle
mov
popf
mov
jb
sub
popf
daa
std
enter
inc
cmp
or
push
xchg
sarl
jge
mov
push
inc
dec
inc
or
insb
cmpsb
lret
cmp
scas
mov
lea
in
imul
sbb
iret
lods
leave
test
adcl
mov
mov
sub
hlt
mov
add
mov
inc
imul
inc
mov
lahf
xchg
sbb
data16
lods
inc
lret
and
push
xchg
pop
mov
push
mov
mov
loopne
adc
add
xchg
emms
lods
pop
loop
or
fisubs
adc
popa
jnp
movsl
adc
into
cld
inc
sub
lret
lret
push
push
push
sbb
cmc
or
pause
jne
loopne
leave
adc
and
inc
into
mov
jbe
mov
pop
mov
push
jnp
pop
shrl
aam
jnp,pn
xchg
cmpsb
cwtl
jge
dec
unpcklps
popf
adc
orb
cltd
xchg
lret
cmp
test
cmpsl
xchg
rolb
add
jp
jp
pop
dec
test
add
xor
fsubs
addr16
cmp
sub
dec
and
insb
jle
jbe
mov
sub
push
jmp
stos
cmpsl
xor
in
enter
lret
add
jmp
jge
mov
psrlq
in
shr
je
unpckhps
xor
test
cmpb
fs
sbb
mov
xchg
sbb
inc
std
push
jno
jb
int
outsl
aad
add
push
imul
push
or
mov
pop
cmp
jno
mov
jp
cwtl
outsb
and
in
hlt
out
jmp
jl
outsl
jle
lcall
pop
imul
loopne
jo
sti
push
fnstenv
add
mov
or
pop
out
stos
cli
mov
out
dec
add
lahf
pop
call
pop
adc
add
in
sar
cmp
jmp
xor
xchg
clc
or
dec
xchg
sarb
mov
xchg
add
cmp
pop
lods
adc
adc
cltd
clc
mov
gs
and
outsb
fsub
sbb
xchg
jg
fbld
xorl
sti
orl
outsb
jmp
popf
mov
lcall
ljmp
repz
inc
mov
imul
mov
dec
sub
xchg
lcall
loope
mov
inc
es
jle
or
pop
push
fcoml
jge
inc
mov
adc
mov
daa
sub
xchg
jno
rcrb
bound
subb
fmuls
push
in
add
incl
cmp
out
psubsw
jnp
push
stc
repnz
xchg
adc
leave
fstpt
mul
aas
rcll
sbb
fsubp
pop
cmc
inc
xchg
pop
xor
out
sub
jle
lret
dec
pop
sub
push
add
aas
mov
pop
jge
xor
inc
jnp
hlt
test
ds
js
xchg
aas
bound
fisubs
mov
cmpb
call
mov
push
sub
in
jmp
or
and
in
jge
xchg
mov
pop
jecxz
jg
js
fldenv
fs
xchg
sub
aas
or
inc
shl
in
dec
mov
out
testl
fstps
shlb
les
or
adc
xchg
out
jg
add
xchg
nop
outsl
rcl
incl
test
xchg
das
out
sti
inc
sbb
popf
mov
and
hlt
shll
stc
sbb
add
dec
inc
cli
bnd
loope
adc
inc
test
dec
icebp
mov
dec
jecxz
xchg
daa
cmp
rolb
jne
mov
mov
push
imul
mov
sub
cmp
jmp
dec
addr16
sarb
xor
sbb
shr
pop
pop
jns
cmpb
mov
dec
sarl
mov
dec
mov
stos
shl
pop
dec
cmp
jbe
mov
jge
pop
insb
aaa
xchg
push
aaa
stos
rcrb
ret
jo
dec
lods
cwtl
push
hlt
pop
in
jae
or
or
out
xor
stos
imul
out
mov
dec
outsl
out
ficoml
pop
lds
or
mov
xchg
cld
or
outsb
xchg
cmp
aam
ss
lea
adc
cltd
mov
lods
cwtl
pop
jo
sub
out
icebp
push
ffreep
in
pop
outsb
add
cli
add
std
and
push
ljmp
inc
dec
mov
ljmp
mov
mov
push
dec
xchg
hlt
and
loope
stos
mov
les
xor
push
push
jge
inc
data16
push
xor
movsl
mov
push
fneni(8087
ficoms
movsb
stos
mov
sub
scas
or
xchg
pop
mov
leave
cmc
bound
inc
dec
shlb
mov
mov
jg
adc
xchg
sbb
jg
enter
mov
or
cld
or
dec
xor
fcoms
cmp
pop
xchg
jo
jns
icebp
mov
push
shll
int3
push
cmp
ret
mov
mov
lea
jns,pn
jo
mov
sub
sbb
cmp
and
sub
xor
jmp
sbb
adc
jmp
mov
xchg
add
insl
and
jg
push
sbb
adc
jns
iret
dec
mov
fiaddl
lret
sbb
cmpsl
cmp
ja
pop
xchg
mov
cmp
mov
es
into
stos
lock
push
add
sbbb
push
ret
fnstcw
test
hlt
ljmp
daa
push
pop
int
pop
jb
xchg
ret
cmpsl
push
loop
nop
pusha
incb
pushf
outsb
pop
jo
and
dec
aas
xchg
or
stos
roll
mov
and
push
mov
adcl
fwait
or
ds
fnsetpm(287
mov
das
mov
in
mov
test
xchg
fsubrs
mov
or
pop
aaa
call
pop
into
std
push
mov
add
add
pop
add
or
mov
aad
ds
adc
incb
cli
lds
test
and
ret
fadds
jb
or
inc
xor
scas
jecxz
xchg
cmp
jne
js
fidivl
fadds
fstpl
je
pop
test
test
mov
cmpsb
in
mov
lret
add
add
inc
xchg
add
and
lahf
or
inc
movsl
sub
add
cmp
ja
add
dec
mov
popa
dec
jns
enter
popa
cmp
cld
das
sub
push
xor
xorl
and
cmp
pop
sbb
aam
imull
rorb
pop
ljmp
lret
nop
test
sbb
popa
cld
out
push
dec
insl
mov
ja
cmpsw
sub
sub
jns
xchg
mov
mov
mov
cmpsb
pop
dec
and
pop
shlb
insl
out
jecxz
sub
lods
push
and
mov
sbb
cs
cmpsb
push
adc
cmc
aad
xor
fstp
fisubs
xlat
add
cmpsb
lods
cmpsl
lret
icebp
icebp
pop
lock
imul
cmpsb
leave
add
insl
mov
xor
xchg
stos
enter
xchg
stc
les
out
add
sub
cltd
add
mov
aaa
mov
or
jbe
push
fbstp
or
adc
push
mov
fstl
aam
sbb
xor
xor
cli
aam
into
cmp
addl
sub
sub
sbb
fdivl
add
cmpb
ss
mov
sub
js
cwtl
add
fists
out
pop
std
pop
lret
movsl
mov
xor
sti
std
rorb
jg
mov
mov
jmp
xchg
and
push
ljmp
mov
idivl
popa
sub
fmuls
adc
xor
cld
mov
mov
scas
mov
sbb
xchg
adc
out
rol
stos
lret
lds
cmp
cmpsl
mov
addr16
and
and
xchg
pop
add
mov
push
scas
push
sbb
dec
dec
inc
out
jge
mov
cmp
int3
jp
fcmovb
js
cmc
mov
cmp
movsb
sbb
loopne
xchg
jecxz
rorl
xor
addb
mov
add
and
imul
adc
jbe
pop
mov
in
clc
or
jno
test
sbb
or
or
pop
pop
je
xchg
testl
cs
hlt
outsb
out
pop
stos
in
pop
push
fwait
leave
mov
add
push
test
scas
sbb
scas
stos
and
cli
mov
push
pop
jmp
xor
xor
iret
push
andb
xchg
jno
loopne
stos
movsl
mov
and
mov
xor
pop
sbb
mov
or
xchg
daa
ss
pop
sahf
push
cmp
faddl
icebp
arpl
packssdw
pop
fld
adc
xchg
xchg
lretw
lds
clc
out
sbb
in
cmp
mov
inc
jle
push
jle
sub
jge
pop
and
insl
sub
sbb
rorl
mov
xchg
dec
out
movsb
pushf
inc
inc
dec
mov
pusha
incb
loopne
test
stos
repz
xor
arpl
or
mov
ss
adc
mov
out
lahf
leave
dec
das
adc
scas
aad
xchg
cmp
aaa
pop
cmp
dec
or
aad
fnstsw
mov
or
add
std
mov
jnp
mov
jb
sub
pop
jge
add
stos
hlt
mov
sbb
popl
inc
mov
mov
stos
push
daa
sti
ja
aam
das
bound
cwtl
out
loopne
mov
inc
dec
int3
sbb
je
ds
mov
nop
inc
sbb
notb
add
mov
stc
pop
or
mov
push
xchg
adc
call
aaa
fldl
clc
lea
adc
adc
pop
dec
jno
daa
dec
push
push
jp
xchg
rcrl
cmpsl
push
mov
jne
push
rol
decb
pop
mov
loop
rep
cmpsl
push
lcall
sbb
mov
clc
ja
adc
loope
sub
lds
sbb
jecxz
mov
jmp
js
cld
pop
or
cmc
addr16
and
and
pop
pop
call
aad
sub
cmpsl
pop
adc
pusha
jle
lahf
std
xchg
jge
inc
add
jno
cmp
pop
dec
cwtl
idivb
push
adc
xlat
test
out
outsl
fbstp
stc
sub
push
dec
dec
jp
cmp
mov
inc
dec
clc
add
jecxz
push
jmp
pop
cmpsl
mov
cmp
inc
sbb
jecxz
or
and
pusha
je
leave
xlat
push
clc
int
xor
jl
pop
je
out
inc
mov
xor
out
xor
incl
cwtl
and
mov
mov
std
and
push
jmp
and
shrl
adc
movsl
adc
add
adc
cmpsl
insl
jle
jle
mov
mull
xchg
incb
cmpsb
call
mov
test
cmp
icebp
adc
push
mov
out
cmp
es
dec
pushf
mov
mov
dec
ss
shr
lret
adc
pop
dec
xor
aad
call
cli
adc
lods
inc
lret
jl
aam
pop
aas
in
outsl
lock
movb
pop
outsb
shlb
outsl
in
mov
mov
out
cs
repnz
bound
ja
or
enter
mov
xor
add
fucomip
ficomps
ds
sub
xchg
icebp
out
pop
push
pop
cmp
shlb
fcompl
pop
xor
push
and
lahf
mov
mov
daa
dec
or
mov
incb
dec
dec
push
add
fmuls
mov
sub
dec
fnsetpm(287
or
mov
jbe
sbb
filds
adcb
mov
cmp
mov
inc
sub
aam
xor
lea
insl
dec
subb
xchg
leave
and
push
ret
cli
incl
xchg
movsb
cmpb
push
xchg
lock
xor
jbe
inc
cmp
mov
push
mov
dec
imul
fdivrl
repnz
out
mov
mov
ret
xchg
jb
push
xchg
push
mov
xchg
movsl
cmpsb
sub
jae
pop
mov
std
scas
adc
fcmovb
xor
mov
retw
mulb
test
insl
insb
inc
xchg
add
leave
or
cmpsb
jo
cld
pop
aad
push
jp
xor
mov
outsb
repz
fwait
aam
test
and
xorl
mov
aad
mov
and
xchg
inc
loopne
xchg
inc
jle
out
push
aas
in
icebp
add
ss
mov
jne
sti
inc
neg
in
mov
mov
cmp
mov
mov
mov
and
sub
xchg
rcrl
sbb
mov
mov
sbb
xor
or
push
and
test
mov
imul
dec
mov
jmp
inc
aad
gs
int3
rcrl
int
jl
nop
sbb
sbb
cmp
leave
cmpsl
pop
push
sti
das
loope
andb
cld
mov
lds
inc
push
and
mov
push
test
mov
ss
dec
adc
pop
movsb
mov
lret
push
inc
lcall
mov
es
adc
cld
test
inc
fcmovne
fdivrl
in
test
cs
sbb
aam
push
sar
sbb
push
adc
scas
aad
jnp
dec
jae,pt
roll
cmp
pop
shrb
in
mov
mov
leave
int3
aam
jbe
in
or
sarb
and
mov
pop
mov
in
jge
dec
push
adc
mov
cmc
mov
repnz
jle
sub
popa
mov
sub
in
sahf
clc
pushw
push
insl
mov
sbb
into
cs
mov
mov
sub
add
je
lahf
jp
jmp
dec
jle
das
jl
fimull
mov
jne
xor
je
pop
adc
mov
pop
loop
pusha
clc
mov
rcrl
cmp
aam
jb
pop
or
or
in
iret
mov
xor
xchg
push
cmp
jl
idivl
mov
and
inc
xor
popf
out
daa
push
callw
fstpl
ret
add
pop
add
mov
test
pop
push
decl
sbb
mov
gs
test
pop
cwtl
pushf
repnz
fwait
sahf
aaa
cmpsl
ja
call
sbb
push
lods
adc
or
or
lahf
insl
pusha
push
dec
mov
cmp
pop
lods
push
std
shrb
out
and
cs
addr16
xchg
sbb
jnp
call
insl
lods
loope
fdivrs
sbb
sbb
lcall
fmul
lret
das
inc
pushf
adc
dec
scas
inc
outsl
test
ret
sahf
xchg
add
loopne
inc
inc
push
lret
pop
leave
push
pop
pop
pop
daa
pop
pop
into
repz
inc
push
insb
inc
pop
nop
push
xchg
fsubrs
in
push
rclb
sub
jbe
test
mov
sbb
mov
sub
push
add
repz
nop
push
insl
outsb
inc
or
mov
cmpsl
cwtl
fstpl
fsubl
cli
fs
scas
test
lds
loope
popa
rcll
and
sbb
ret
test
dec
mov
mov
jo
sub
je
mov
lds
cmp
loop
push
xchg
addr16
mov
in
aas
mov
or
mov
lret
orb
insl
pop
out
push
pushf
fisubs
add
insl
mov
mov
fadd
mov
and
mov
jns
mov
mov
outsb
fidivl
pop
test
imul
into
push
clc
jno
es
inc
sbb
inc
jb
mov
lods
fsubl
in
jne
bound
addr16
popf
mov
data16
sbb
enter
cmc
dec
clc
ret
dec
dec
adc
push
dec
mov
shl
push
jecxz
les
ret
xchg
inc
lds
aam
fsubl
fwait
int
jne
cmp
sbbl
jmp
mov
dec
or
cmp
adc
addb
pop
pushf
pusha
mov
jle
and
out
sub
scas
fdivs
sub
fldln2
out
inc
mov
dec
jbe
dec
idiv
into
lcall
inc
push
dec
push
div
mov
addl
sub
mov
fwait
mov
cmp
dec
sub
in
jg
lea
popa
mov
stc
jmp
sub
add
inc
inc
fwait
dec
pusha
lea
lahf
pop
imul
and
sbb
sub
add
xor
mov
adc
ds
fistpl
mov
cs
ret
test
xor
xor
jnp
aas
xor
mov
lahf
adc
fbstp
pop
jl
fidivs
push
imul
lods
jb
fsts
test
push
jns
push
jp
addb
dec
test
insl
nop
insb
hlt
repz
loop
lods
mov
in
repz
leave
and
ds
loop
xchg
scas
pop
pop
dec
rcrl
lret
sub
enter
mov
xchg
pop
adc
movsb
sbb
mov
les
cmp
vandps
mov
mov
xor
cmp
cld
inc
fisubs
push
push
sahf
add
cwtl
dec
xlat
or
daa
lods
mov
fldt
jl
xor
cld
in
push
dec
and
push
aad
lret
imul
cmpsb
cmp
popl
out
cmp
repnz
mov
inc
or
mov
roll
out
or
movsl
cmp
jne
push
pop
cmpsl
dec
hlt
fsubl
dec
cltd
mov
mov
push
pop
scas
pop
mov
or
ja
data16
adcb
xor
pushf
nop
sub
hlt
rcr
mov
nop
outsl
lock
data16
mov
cmp
and
daa
aad
cwtl
insl
rclb
out
and
xor
cmp
lds
iret
popl
pushf
cld
into
test
cld
sub
mov
inc
ret
cmpsb
jle
js
xor
lcall
or
out
scas
xchg
inc
sbbl
movsl
dec
mov
scas
mov
ljmp
mov
and
inc
xchg
sarl
lods
adc
jge
jno
sbb
xchg
pop
push
popf
pop
movsb
shll
inc
pop
movsb
xor
adc
subl
sti
inc
cld
cli
sbb
enter
mov
shl
pop
hlt
lret
adc
jg
cld
xor
enter
loopne
lock
jecxz
pop
fidivl
shlb
jp
sub
cmp
rclb
ss
mov
jne
pop
lea
and
mov
jne
pop
push
in
jno
pop
xor
gs
dec
loopne
sub
and
push
cli
andb
stos
sbb
adc
xor
jbe
or
les
fists
rclb
lcall
mov
repz
add
cld
jecxz
inc
inc
mov
sub
mov
fxch
orl
mov
icebp
jbe
lahf
adc
js
movl
fdivs
fistl
push
imul
pop
cmp
frstor
fildl
push
xchg
aas
mov
enter
shlb
icebp
mov
lcall
insl
sti
movsl
dec
cwtl
push
pop
sub
jp
test
cmp
neg
push
lock
mov
dec
jnp
push
mov
ljmp
insl
xlat
push
mov
push
aam
mov
xor
popa
jg
jge
pop
jo
insb
mov
subl
test
andb
and
or
push
jg
out
out
test
mov
xchg
sbb
ret
addb
frstor
movsl
shlb
push
clc
mov
imul
lock
sahf
pop
or
mov
pop
adc
mov
addr16
push
pop
sbb
in
add
pop
jg
mov
pop
adc
add
or
out
add
int3
sbb
gs
xchg
adc
test
inc
mov
nop
out
dec
xchg
and
pcmpgtw
xchg
dec
jns
push
mov
pop
pop
pop
jae
jo
aad
inc
out
xchg
aaa
shl
jmp
mov
icebp
icebp
mov
pushf
outsb
sub
pop
mov
lods
push
jecxz
aaa
es
or
jg
lea
fsubrl
stos
das
mov
or
fwait
add
pop
mov
jno
adc
test
out
daa
pop
sbb
loope
movsb
stc
cmp
cmp
rorl
pushf
mov
iret
mov
mov
sbb
mov
in
jnp
push
mov
inc
sbb
add
push
jp
stos
fs
dec
sbb
pushf
lcall
adc
mov
fdivl
fs
movsb
ficoms
out
loope
cmp
jge
imul
mov
push
sbb
aam
sbb
addr16
stos
mov
xlat
daa
mov
cmp
jge
imul
out
stc
lcall
movsb
lret
cmovns
and
test
lods
enter
js
xchg
repz
psllq
lds
push
loope
nop
sub
or
jp
inc
lds
aaa
adc
and
shrl
and
dec
inc
pop
mov
and
sub
loopne
test
fmul
lods
fnstsw
mov
cmp
rolb
sarl
add
push
mov
ret
cltd
mov
loop
cmp
loope
cmp
pop
pop
mov
lahf
xchg
cmp
dec
add
in
mov
arpl
xor
sub
jbe
les
aad
cmc
aad
ret
scas
popf
mov
pop
ljmp
hlt
movsb
pop
jle
fisubl
dec
sbb
jecxz
addr16
negb
pop
fs
fdivrl
add
rep
cwtl
dec
insl
sbb
xchg
nop
cli
test
hlt
push
cmp
inc
cmpsb
xor
imul
sub
fstp
pop
scas
mov
divl
mov
inc
xchg
mov
loopne
dec
inc
lcall
and
pop
cltd
push
test
jb
loopne
mov
cmp
push
jle
xchg
pop
xchg
lret
mov
jecxz
pop
movsb
insb
hlt
js
test
inc
mov
stos
or
mov
jmp
or
leave
mov
movsb
inc
xadd
lret
sbb
inc
lea
mov
in
sub
rcll
icebp
or
cmpsb
mov
mov
inc
test
stc
test
or
xor
pop
fstl
aad
clc
push
push
insb
inc
jb
inc
xor
movsb
stos
push
out
mov
sbb
cwtl
shrd
and
cmpsb
pop
mov
idiv
cmc
je
xchg
xlat
in
icebp
call
sbb
jle
pushf
mov
fs
adc
add
arpl
mov
mov
ret
cld
mov
push
icebp
add
mov
loopne
int3
pop
movsl
inc
notl
cltd
jo
adc
fcompl
mov
adc
and
adc
dec
lea
out
out
pop
and
stos
mov
fsubs
add
fstpl
jecxz
test
shlb
pop
and
jbe
mov
ror
cmpsl
pop
sbb
scas
arpl
int3
xor
or
pop
xchg
xor
scas
dec
adc
sub
loop
pusha
daa
mov
fildll
cmc
jg
fldcw
stc
add
add
jo
jg
out
das
or
test
mov
mov
ret
mov
add
fldcw
loope
lcall
xor
sti
aad
sti
push
arpl
push
mov
cmpsl
mov
push
jge
pusha
jmp
shlb
ljmp
outsb
pushf
repz
movsl
mov
ljmp
adcb
pop
or
mov
mov
adc
jbe
pop
insl
add
mov
push
daa
movsl
xchg
mov
sbb
cwtl
add
ljmp
jge
pop
imul
push
test
fs
in
add
enter
cltd
movsl
out
xchg
mov
or
rorl
inc
jle
mov
aad
int3
add
inc
push
push
pop
sbb
xor
dec
add
addr16
js
loope
xorl
lods
pop
jmp
jg
mov
mov
jae
jnp
sub
push
inc
clc
popl
push
loope
inc
cld
mov
xchg
xchg
or
nop
mov
cmp
leave
leave
sbb
push
cmp
pop
xchg
aas
daa
imul
adc
push
adc
cltd
nop
jp
lahf
cmove
push
stc
push
sbb
cmp
fwait
add
or
idivb
jns
addr16
mov
mov
sbb
sub
js
scas
inc
mov
sub
orb
mov
repz
or
mov
iret
jg
xchg
cmc
dec
loope
pop
mov
arpl
xor
or
push
and
inc
sbb
out
add
sub
xchg
out
push
mov
pop
xchg
fnsave
mov
xchg
mov
sub
and
fs
fsubs
mov
push
sub
cmp
mov
jno
dec
pop
push
add
cwtl
pop
jp
push
out
mov
das
call
inc
jl
pop
mov
mov
loop
inc
xchg
jecxz
mov
daa
xchg
repz
aaa
addl
adc
punpckhwd
test
mov
pop
xor
scas
mov
sbb
inc
jno
xchg
dec
sub
cmp
fwait
dec
cmpsl
ret
mov
lods
dec
leave
sub
add
loop
mov
popa
push
dec
sub
or
in
rcrb
add
insl
or
call
std
jl
popf
in
loopne
lds
jg
sbb
pop
cltd
cmp
adc
lock
test
sbb
lods
test
inc
sbb
aam
mov
mov
push
jge
jns
sub
inc
jecxz
sti
fwait
aam
xor
outsl
imul
sti
xor
push
andl
adc
das
test
inc
cmp
push
adc
jo
in
jg
sbb
out
sbb
xor
pop
test
rcrl
xlat
icebp
mov
add
cmp
notl
cmp
dec
sub
pop
leave
adc
dec
mov
xor
pop
push
fwait
std
neg
ret
xor
addr16
xchg
movsl
mov
cmp
adc
inc
test
pop
cmp
out
push
or
jg
jnp
push
or
in
inc
jmp
xchg
sbb
scas
popa
lret
sbb
aas
icebp
mov
gs
add
cmp
lahf
xchg
fisttpl
imul
frstor
mov
mov
icebp
pop
test
cltd
fildll
xor
adc
dec
mov
mov
cmc
jecxz
iret
mov
jae
pop
sub
cmpl
inc
push
sub
jnp
push
mov
jmp
xchg
mov
pop
loop
mov
scas
push
lret
cs
adc
aas
ret
xchg
jp
push
dec
xor
push
ljmp
aaa
pop
add
outsl
adc
cmpsb
incl
loop
jge
jns
adc
fwait
and
das
lret
das
lds
lea
popf
sbb
hlt
pop
int3
cmp
push
std
xor
les
mov
fisttpll
pop
iret
aad
lret
out
outsb
mov
pmaxub
sbb
pop
imul
push
cmp
int
das
das
push
sar
loop
sub
sbb
dec
popl
dec
loope
xor
jb
repnz
gs
inc
es
push
nop
adc
aas
out
in
mov
pop
cltd
shll
lods
out
test
imul
pop
pop
dec
xor
and
cwtl
fiadds
adc
int
pusha
ret
jl
sahf
pop
je
leave
stos
sub
or
ljmp
jp
shll
sbb
imul
adc
lds
fstpl
and
xor
ss
mov
cmp
mov
adc
inc
lds
rol
push
cmp
push
mov
dec
pop
jmp
mov
ja
mov
adc
cmp
adc
inc
jle
popf
incl
bnd
pop
inc
out
xor
xchg
popf
out
mov
lretw
jge
mov
cmp
stos
and
iret
jne
ror
push
and
popf
nop
leave
out
rcll
fildl
pop
push
xor
sub
jne
lahf
lret
dec
xchg
ss
negb
xor
dec
imul
mov
out
mov
xchg
jb
push
jbe
pop
mov
mov
sub
xor
out
inc
mov
cs
aas
mov
pop
loop
dec
fmull
push
jge
sbb
imul
mov
push
inc
das
lahf
mov
mov
mov
stos
loope
and
out
mov
into
es
push
shl
fisubrs
in
rclb
andb
cwtl
loopne
mov
push
cmc
es
insl
dec
pop
sub
sarl
je
adc
fsts
xchg
js
xchg
test
inc
pop
or
xor
shl
insl
mov
and
fcompl
icebp
jae
enter
iret
pop
mov
cmp
xchg
fimuls
add
ret
test
cwtl
sarb
stos
in
mov
pop
outsb
xchg
push
cmp
ds
sbb
pop
xchg
and
outsl
fwait
test
push
push
inc
outsl
outsb
enter
jno
jp
gs
fs
popa
pusha
aad
lret
adc
dec
out
mov
push
and
lahf
xor
fnsave
add
das
add
lea
inc
sbb
clc
mov
scas
mov
dec
shl
pushf
lds
outsb
sbb
push
inc
enter
cmc
aad
and
and
shlb
push
insl
sbb
ss
adc
inc
repz
add
xor
ss
enter
insb
es
mov
add
stos
fmuls
jl
or
xchg
ss
mov
sub
out
adc
les
jne
cltd
push
movsl
inc
lods
mov
sub
push
add
test
cmp
fisttps
jae
nop
fwait
and
nop
sbb
jp
sub
or
pushf
xchg
xor
into
cwtl
push
mov
sbb
mov
adc
xor
imul
enter
mov
dec
subb
push
pop
ret
push
mov
jg
or
adc
mov
push
pop
or
and
sub
outsb
shr
and
test
cmp
sbb
add
adc
dec
aaa
addr16
sti
clc
pop
adc
and
scas
jg
fs
add
push
sbb
shr
mov
rep
out
rcll
testb
out
stc
sub
or
lahf
xor
inc
data16
fisubl
inc
mov
adc
xor
cwtl
repnz
loope
shlb
cmp
xor
enter
outsb
jno
sbbl
bound
adc
pop
addr16
sbb
xchg
dec
int
js
sub
inc
sarb
or
adc
clc
pop
mov
rep
aad
insb
dec
and
add
adc
mov
data16
xchg
inc
pop
jge
pop
inc
cwtl
or
lods
sub
adc
stos
in
icebp
ds
cmp
in
clc
and
adc
mov
aad
xor
shrb
into
mov
dec
xor
mov
ss
dec
jno
xorl
push
inc
sub
shlb
or
sub
mov
loopne
push
fidivs
loop
ss
cmp
mov
adc
je
dec
pop
popf
mov
lock
cmp
jae
push
lar
stos
sahf
mov
inc
and
stos
rcrl
cs
adc
lock
mov
icebp
mov
mov
push
inc
fs
cmp
cmpsb
xchg
in
mov
cmp
mov
xor
aad
jo
sub
add
mov
pop
sahf
sti
mov
pop
xor
xor
cld
and
fstps
ss
push
mov
push
jp
bound
jo
xchg
les
cli
int3
xchg
ficoml
xchg
sbb
adc
lock
test
inc
shl
xchg
mov
daa
pop
add
dec
xor
repnz
popf
sbb
stc
add
push
adc
cmp
mov
nop
mov
inc
inc
arpl
ljmp
mov
mov
mov
js
push
loope
mov
les
ja
xchg
pop
mov
lret
stos
xchg
pusha
addr16
fsts
jne
adc
test
sbb
fistpll
xorl
enter
cwtl
mov
cmpsb
dec
fcompl
push
clc
in
divl
sub
jg
pop
sbb
sub
cld
and
push
lds
subl
out
push
loop
pop
hlt
push
aam
lods
lock
data16
push
scas
cli
aas
pop
test
mov
divl
push
std
mov
daa
dec
jmp
jmp
jle
cmp
xchg
jb
dec
inc
push
jle
jb
cwtl
dec
xlat
cmp
mov
dec
and
cmp
xchg
push
sar
cltd
in
notb
loope
cmc
mov
mov
push
shll
jbe
dec
push
sub
fidivs
cmp
mov
es
roll
movsb
dec
mov
gs
and
dec
inc
pop
jae
inc
cmp
mov
test
jecxz
pop
sbb
testb
xor
mov
xor
cld
inc
ljmp
inc
or
xor
cmove
lods
inc
test
lret
mov
push
stc
cli
stos
fcmovnu
cs
jp
cmp
into
ret
hlt
in
mov
scas
insb
shll
push
push
inc
fcoms
inc
jb
xor
iret
cwtl
lods
mov
pushf
jne
mov
arpl
addb
pop
jecxz
inc
emms
dec
fsubrs
cltd
fbld
cmp
and
test
push
sbb
mov
and
and
shl
lret
pop
fs
outsl
mov
dec
clc
jo
mov
in
cmp
adc
aas
xor
push
mov
loopne
mov
xor
inc
dec
cmp
dec
js
dec
cmp
mov
xchg
hlt
jmp
or
pop
cmp
pop
adc
aam
push
sub
cmpb
and
and
mov
sbbb
mov
dec
sarb
pop
lret
mov
mov
push
sub
into
fcoml
adc
push
es
push
ret
nop
pop
jb
dec
pop
pop
fiaddl
jnp
dec
lods
ror
les
dec
stos
cmp
push
and
xor
popl
int3
add
sbbl
movsb
loopne
mov
test
push
lea
mov
fdivr
add
adc
xor
pop
and
add
mov
mov
fdivs
iret
notb
stos
adcl
pushf
inc
fs
push
jo
add
inc
xchg
jo
xchg
fadds
mov
cmp
lock
cltd
sub
mov
lods
test
jecxz
fwait
fs
outsb
add
clc
cltd
sbb
out
pop
lea
cwtl
adc
sbb
lret
cld
dec
lock
mov
jecxz
pop
mov
fcomps
loopne
iret
sbb
daa
mov
push
pop
and
shll
cld
int
pop
mov
adc
mov
mov
push
xchg
stc
es
mov
and
or
data16
mov
es
outsl
add
sub
push
out
sub
xor
push
cmp
sbb
adc
sub
push
xor
xor
sub
inc
jp
lods
cmp
popa
mov
push
or
dec
sbb
sub
adc
iret
inc
outsb
push
cld
stos
aam
cld
out
rorl
in
mov
in
cltd
shlb
shl
mov
or
movsl
int
nop
rcl
ret
pop
push
lret
fnstsw
jbe
jo
mov
or
sub
test
inc
mov
mov
int
and
fildl
bnd
mov
jge
inc
clc
and
cmp
hlt
and
fnsave
sbb
lock
fwait
adcb
sub
ret
sub
add
adc
pop
arpl
dec
xchg
rcrb
jno
and
inc
pop
jbe
cltd
out
mov
je
mov
push
mov
enter
outsl
sub
sub
or
aam
ret
push
mov
lret
aam
jge
jle
add
cmpsb
mov
movsb
mov
lock
call
pop
mov
test
stos
out
and
pop
int
cwtl
enter
cmp
pop
dec
and
xchg
xchg
bound
in
mov
adc
lods
es
dec
xchg
mov
lea
sub
dec
or
pushf
cmp
push
cld
add
lock
lock
xchg
jle
nop
sbb
add
in
push
rcrl
add
cli
xor
cli
sub
sub
scas
inc
xchg
nop
jle
adc
rcr
mov
cmp
mov
mov
inc
sbb
inc
cld
stos
fadds
xchg
lcall
inc
shl
mov
mov
jle
xor
cmp
test
loopne
loope
stc
inc
std
xchg
pop
hlt
push
and
add
je
dec
mov
xchg
dec
and
pop
push
push
mov
loop
pop
les
push
mov
xchg
push
cs
test
jg
jge
repz
add
lea
adc
sub
mov
mov
cmp
lcall
out
sbb
xor
xlat
cmp
test
adc
clc
pop
xchg
pop
cmpl
hlt
inc
xor
inc
sub
insb
push
inc
xchg
dec
into
cs
cld
add
sbb
mov
dec
loop
in
enter
pop
fsubrp
rcll
xor
daa
adc
sbb
mov
pop
xor
loopne
push
jnp
push
scas
sub
pop
mov
push
sub
cmp
sbb
dec
push
rcrb
pusha
inc
ficoml
cmpsb
push
imull
inc
lods
or
test
cld
xchg
test
add
xchg
mov
notb
insl
js
in
add
mov
and
movsb
mov
std
push
out
adc
and
in
into
cmpb
jg
sbb
mov
pop
jne
push
mov
push
movsb
fbstp
sbb
ja
sbb
xchg
repz
push
xchg
and
mov
inc
jo
sub
xchg
scas
filds
xorb
push
sbb
pop
lret
inc
test
ds
shr
and
cltd
mov
mov
cli
test
sub
repnz
rclb
cmp
out
cltd
sub
fldt
cmpl
int3
sbb
mov
jmp
inc
fisubs
xor
dec
fldt
js
iret
out
adc
dec
mov
dec
insb
je
mov
xchg
sahf
in
push
hlt
dec
and
call
outsb
jo
je
jns
mov
sbb
out
inc
shl
adc
sti
lock
pushl
loop
dec
out
out
mov
and
jns
pop
jbe
jo
xor
inc
int
imul
pushf
in
adc
into
stc
mov
adc
pop
sbb
arpl
inc
fwait
mov
sub
cmp
je
xchg
and
cld
adc
mov
xchg
cmp
clc
js
lcall
fistpll
dec
adc
mov
pop
and
mov
add
push
fcomps
jge
jnp
dec
je
jp
nop
jmp
imulb
movsl
cmp
xchg
mov
and
sub
arpl
dec
add
orb
test
fs
cmp
fstl
iret
clc
lods
imul
dec
dec
adc
repnz
adc
add
negb
jecxz
ds
jecxz
jbe
out
pushf
pop
je
xlat
hlt
lcall
out
dec
aam
pop
es
adc
push
push
mov
jmp
cmc
sahf
mov
fcoms
stc
jno
idivb
fcmovb
mov
pop
dec
shll
inc
lea
je
and
fsts
or
mov
push
notb
and
inc
stos
dec
rcrl
or
stos
mov
test
cmpsl
sub
jo
adc
mov
cmp
push
outsb
jbe
mov
shld
aas
mov
xchg
enter
and
subb
mov
and
mov
push
loop
pop
pop
mov
in
cmp
subl
dec
jbe
cld
inc
xchg
sbb
mov
adcl
add
pusha
mov
xchg
stos
and
movsl
lret
adc
sub
ljmp
loope
sub
out
push
je
xchg
ljmp
add
pop
je
imul
pop
jo
or
clc
cmp
rorb
xchg
inc
pop
inc
imul
sarl
sbb
sub
les
fs
out
pop
inc
xchg
mov
pop
or
inc
data16
sbb
pop
call
addb
movsb
xchg
cs
popf
jmp
mov
sub
sub
mov
sub
js
sub
push
sbb
mov
daa
push
or
aas
jbe
push
or
sub
cli
push
in
fs
adc
push
xor
cmp
and
xchg
andb
inc
jge
lret
sbb
fists
sub
mov
loopne
mov
cmc
sub
pop
test
jl
fsubrs
sub
cltd
push
mov
cmp
adc
ja
outsb
popf
bound
push
xor
stc
sub
mov
xchg
fnstenv
jge
in
xchg
mov
xchg
and
adc
stc
pop
mov
ficomps
xorb
mov
fcoms
dec
insb
jbe
test
and
mov
mov
inc
mov
mov
mov
inc
enter
xorl
xchg
fbstp
arpl
fdivs
les
add
addr16
sti
aam
sbb
dec
pop
mov
xor
movsb
dec
pop
mov
sub
or
call
xorb
jmp
pop
jg
ds
mov
repnz
aam
mov
in
outsb
adc
cmp
add
loop
cli
pop
cmpsb
sbb
cmp
sbbb
imul
mov
and
mov
cli
or
sti
or
push
rcrb
arpl
test
xor
adc
or
push
dec
in
cltd
pop
push
and
mov
pop
jle
cmp
int
imul
mov
and
pop
cld
dec
jg
or
or
pushf
mov
cld
sbb
movsb
inc
scas
add
pop
lcall
dec
push
cwtl
mov
mov
add
pop
mov
xchg
sbb
pop
adc
and
adc
repnz
jecxz
push
xor
push
push
dec
mov
mov
dec
dec
movb
insl
lea
jmp
pop
shrl
lods
movsb
jecxz
sbb
inc
icebp
sbb
xchg
jecxz
clc
cs
dec
mov
fdivr
insb
push
repz
int3
subl
cld
out
iret
std
in
adc
add
cltd
divl
jb
lret
jmp
dec
in
jb
stos
out
ret
xorb
pop
shll
add
push
pop
sbb
xor
data16
jle
jno
push
push
push
jl
pop
cli
nop
push
adc
inc
das
in
cmc
mov
adc
push
add
imul
sti
or
fsts
jge
pmaxsw
mov
sbb
pop
fcompl
in
cmpsl
push
rclb
loopne
adc
mov
jl
push
jnp
dec
out
adc
jg
and
test
and
push
jmp
adc
fcomip
pushf
xchg
call
in
xchg
push
ja
shlb
cmp
xor
or
mov
jge
je
ret
or
pop
imul
mov
push
mov
dec
int3
out
or
rcrb
gs
or
lods
fcmovbe
adcl
and
or
mov
mov
or
data16
jno
mov
fldt
dec
loope
clc
jl
insl
add
pusha
popa
lret
push
shlb
in
les
pop
sbb
not
mov
fwait
scas
roll
arpl
cmpsb
nop
shr
or
out
and
mov
repz
mov
and
dec
scas
cmp
cli
aaa
xor
or
out
push
and
jnp
cmp
stos
mulb
sarl
sahf
cltd
or
daa
mov
adc
fucomi
fcmovne
out
test
lds
mov
test
jbe,pt
ljmp
mov
cmpsl
mov
pop
xchg
mov
mov
les
lret
and
mov
push
sub
das
push
jl
sub
cmc
int3
repnz
cli
enter
push
mov
cmp
out
aad
aad
in
add
cmpsb
dec
jns
into
ficompl
pop
js
push
xchg
push
les
or
xlat
fwait
movsb
cmp
and
fiaddl
mov
add
inc
cli
out
jne
inc
subb
addr16
sahf
outsb
mov
cmp
sub
fldt
adc
jno
mov
sar
sbb
scas
or
cmp
cmp
nop
sbb
test
jmp
loop
nopl
push
jne
dec
mov
jge
popa
dec
leave
out
lods
add
jbe
sti
pop
pushf
insl
lods
ret
dec
fcoms
mov
jae
jae
xor
inc
es
cli
jb
mov
rclb
sbb
dec
dec
lret
inc
sub
mov
push
push
les
add
or
dec
mov
and
or
add
lret
inc
pushf
sub
sahf
sahf
cmp
test
out
imul
call
int
mov
stc
insl
xor
lods
fldl
imul
das
pop
cli
jne
add
pop
adc
fmuls
icebp
xor
and
jo
lret
jne
adc
insl
inc
call
das
push
bound
and
push
mov
ficoms
imul
iret
lcall
or
xchg
adc
fdivrp
enter
push
jge
dec
cmpsl
add
leave
cmp
in
notb
arpl
jnp
outsb
xor
cmc
cltd
sahf
mov
push
addr16
mov
jmp
bound
xchg
das
inc
dec
mov
cmpsl
sub
ret
xlat
adc
mov
sbb
mov
adc
loope
lahf
xor
aaa
adc
xor
cmp
pop
mov
adc
pop
or
sahf
in
jp
fs
and
jge
push
movb
out
cwtl
xor
lods
add
imul
mov
ret
jp
fstpt
dec
sti
push
sbb
idiv
pop
das
lock
fs
dec
lcall
mov
sbb
inc
or
fs
test
test
imul
mov
or
lret
dec
int
or
sarl
enter
dec
outsb
mov
in
cmp
adcb
sub
cmp
in
in
sub
shr
jecxz
jns
stos
aaa
dec
lea
pop
sub
test
test
mov
bound
aaa
mov
insb
lret
cmp
lret
in
scas
pop
fwait
jb
imul
sub
cmpb
jae
idivl
and
inc
xor
les
pop
jle
xchg
in
push
and
repz
ret
test
cwtl
into
cmp
pop
cs
push
lock
rcll
ficoml
ss
clc
push
pop
pop
dec
pop
fadds
pop
or
pop
lods
mov
mov
movsb
paddsw
enter
adc
stc
nop
das
enter
repz
int
aas
dec
adc
mov
sarb
sub
pusha
das
lds
inc
sbb
add
cmp
xchg
inc
loopne
lds
mov
or
popa
xchg
adc
mov
pop
xor
xchg
aaa
fnstcw
jo
adc
dec
and
dec
sub
mov
stos
push
inc
leave
sbb
aad
stos
ja
popf
sbb
dec
int3
outsl
call
mov
sbb
and
add
dec
loop,pt
add
pushf
inc
push
pop
mov
lock
mov
hlt
addr16
shlb
in
icebp
xor
sub
push
rcrl
jmp
cmp
sbb
lret
pop
ss
adc
bound
mov
lret
out
and
loope
loopne
sbb
pop
clc
push
int
fsubl
mov
in
stc
cmp
cmc
scas
lods
pusha
int3
or
dec
int3
xchg
ja
mov
cmp
adc
add
cmp
lods
mov
jmp
xlat
loope
mov
mov
arpl
shll
add
insb
decb
psrld
in
in
stc
int
pop
fstpt
lret
lret
sub
je
mov
mov
jge
mov
rorb
int3
lock
aas
cmp
ret
jae
loop
or
iret
cmp
in
js
mov
mov
xchg
jecxz
ret
xlat
push
repz
xchg
mov
xchg
stc
xchg
adc
movsl
inc
ror
dec
in
lods
aam
sbb
mov
xlat
divb
xchg
pop
enter
cwtl
lret
jp
ret
sub
jp
xchg
fucomi
rorb
add
dec
lahf
je
in
pop
icebp
sub
jnp
fucomip
jl
cmc
mov
ss
pop
or
mov
js,pt
adc
outsl
sti
cmc
dec
push
fdivp
fwait
in
je
add
dec
add
loop
cwtl
dec
inc
xchg
leave
lods
cli
popf
ret
adc
std
pop
scas
nop
insl
add
push
sub
je
repz
in
cmp
lcall
lret
or
mov
mov
mov
inc
mov
loope
sbb
mov
addr16
lahf
cmc
add
sub
push
dec
adc
repnz
jbe
cmpsb
push
xchg
dec
repz
jmp
outsb
fs
sub
in
sarb
cmp
icebp
js
repz
inc
pop
mov
out
stos
out
in
les
and
xchg
xchg
cwtl
rcll
jge
in
fs
mov
outsl
lcall
or
mov
mov
sub
mov
jmp
cmp
fs
adc
cmp
or
inc
ficoml
pop
fbstp
stos
and
divb
int3
and
mov
mov
cmpsb
or
mov
mov
out
sbb
adc
xchg
pop
imul
lds
mov
cmp
leavew
inc
mov
ljmp
lret
adc
push
mov
lcall
mov
imul
push
and
adc
jl
stos
loop
add
in
add
mov
out
scas
inc
loopne
sub
inc
out
in
jb
sub
mov
mov
xchg
outsb
inc
je
push
push
push
mov
sub
insl
fnstsw
in
jno
rorl
mov
mov
cmp
sti
pop
rep
adc
mov
push
jp
data16
mov
push
push
loop
insb
addl
xchg
mov
pop
sbb
out
aam
and
push
add
fldt
sub
sahf
adc
stos
jb
xor
dec
push
cmpsl
movsb
and
pop
ret
pushf
call
std
test
ljmp
adc
ret
adc
cmp
imul
in
xchg
cld
test
iret
push
out
dec
mov
loope
push
push
lods
ret
jb
inc
xchg
orl
jle
andb
bound
cmp
scas
lcall
int3
fsts
adc
pop
xchg
fwait
pop
sub
pop
dec
sub
xchg
popa
and
fmuls
cmp
or
stos
jo
add
jae
ret
and
mov
lods
or
sub
sub
mov
jmp
hlt
and
cmc
inc
adc
jbe
sbb
xor
popf
push
jmp
insl
xor
inc
jbe
add
xchg
mov
fnstsw
sub
ss
push
push
mov
ret
ss
dec
and
cmp
sar
sbb
fmulp
dec
push
rclb
cmp
mov
jmp
dec
mov
mov
ds
aad
inc
gs
adc
fwait
icebp
mov
fildl
pop
inc
add
loopne
sub
je
xchg
in
movsb
cmp
movsb
pop
in
push
jo
adc
xchg
inc
adc
js
pop
dec
adc
lcall
push
adc
push
lahf
mov
jg
jl
jmp
out
or
jo
dec
fcomi
repnz
lods
cmp
pusha
ret
inc
outsl
push
imul
jmp
jge
jmp
cmp
lea
jbe
repz
inc
lods
xchg
jno
mov
cmp
xchg
inc
stos
outsb
in
shr
ss
call
leave
jle
mov
mul
int
pop
mov
push
loopne
or
insb
test
mov
xchg
xchg
push
push
fs
cmp
pop
daa
inc
xlat
pusha
mov
sub
mov
cmp
sahf
ret
fmuls
movsl
mov
mov
shll
mov
push
daa
mov
int
cld
xchg
setp
sbb
lds
fisubs
rep
cmpsb
jl
inc
leave
lahf
sbb
push
fwait
sahf
mov
sahf
ss
out
push
cwtl
xlat
mov
mov
pop
shll
lock
push
pop
rep
jb
ret
adc
aaa
mov
pop
in
pop
mov
loop
idivl
mov
fsubr
clc
ss
xor
js
or
pop
aam
jne
dec
daa
std
and
call
push
test
xor
fwait
mov
stos
scas
inc
lret
scas
add
mov
flds
aaa
adc
add
or
dec
jge
mov
jmp
in
shll
in
sub
xchg
push
pushf
aas
sub
mov
and
aaa
subb
jns
je
dec
mov
test
addr16
dec
std
insl
mov
xchg
aam
jo
imul
jne
enter
jecxz
pop
push
jae
xchg
subb
mov
out
cmpsb
ss
sub
ja
xlat
xchg
sbb
jo
cs
lret
pop
addr16
push
pop
lods
je
je
sahf
lods
mov
cmpb
add
aam
nop
out
sbb
das
inc
fwait
mov
and
add
pop
push
daa
shl
hlt
sbb
mov
mov
nop
pop
inc
add
rclb
notb
in
dec
je
xchg
mov
xor
xlat
sarl
les
cmpsl
jne
aaa
lret
in
mov
adc
sub
adc
pop
fidivl
stc
mov
cmp
data16
mov
sbb
mov
mov
mov
mov
jbe
cld
popf
jnp
or
push
push
scas
and
out
imull
dec
push
pop
cwtl
cltd
pop
mov
lods
repnz
add
pusha
push
fisubrl
out
std
adc
push
outsl
lret
int
mov
sub
adc
jp
fsubrl
mov
pop
add
loop
int3
inc
insb
mov
lcall
movsl
insl
cli
std
icebp
pusha
hlt
cltd
or
ss
sub
sub
add
dec
pop
jo
arpl
je
lret
push
insb
and
push
jecxz
dec
shlb
cmc
sti
enter
divb
mov
jbe
lds
jg
pop
dec
xorb
mov
push
scas
pusha
popa
cmp
pop
add
in
rcll
xchg
mov
mov
push
arpl
aaa
add
xchg
ficompl
movsb
cltd
push
lea
stos
pop
inc
sub
jg
sbb
xor
fsubl
and
add
or
popa
cmp
outsb
cmpsb
inc
sbb
mov
cmp
imul
ficomps
pop
xchg
cmp
data16
push
push
addr16
icebp
lret
add
xchg
sahf
ja
jne
dec
pop
insb
mov
test
adc
aad
test
addr16
stc
adc
xchg
mov
call
add
push
std
mov
shl
jae
int
pop
inc
imulb
movb
and
movl
add
sub
or
xorl
lods
fdivrs
daa
sbb
test
test
ljmp
mov
cmp
add
data16
inc
cmpl
dec
inc
decb
push
pop
sbb
inc
jnp
xchg
xchg
stos
bound
into
or
movsb
adc
das
and
cli
sbb
fisttpll
lea
ret
mov
pop
push
and
jb
adc
and
push
mov
cs
mov
cmpsb
lret
lods
ja
adc
xlat
sti
add
pop
push
or
aam
mov
out
pop
mov
lods
addr16
and
aaa
std
cmp
adc
sub
in
mov
mov
idivb
daa
pushf
mov
subb
mov
mov
cli
dec
mov
push
inc
add
test
fs
jae
dec
adc
xchg
stos
xchg
dec
hlt
pusha
test
cld
insl
push
jecxz
repnz
clc
push
sbb
fucomp
dec
push
jbe
test
sti
iret
repz
imul
fists
inc
mov
mov
mov
mov
insb
jne
mov
xor
adc
dec
xor
pop
mov
push
sbb
mov
or
stc
or
adc
add
testl
inc
shrl
push
mov
cld
shrb
sub
scas
icebp
pop
je
jge
push
sbb
xor
stos
dec
cs
or
inc
xchg
jge
jb
lods
xor
rcrb
sub
push
cli
inc
fldenv
lret
arpl
loopne
push
int3
bound
ret
repz
fdivl
xlat
jp,pt
je
push
push
jge
dec
out
hlt
aad
test
sbb
das
sbb
fldenv
in
xor
cmp
cmpps
mov
pop
cli
xor
aas
push
roll
jae
bound
xor
outsl
in
sub
push
jb
outsb
xlat
or
mov
add
stos
repz
stc
add
shl
sahf
inc
add
mov
test
int
sbbl
dec
mov
dec
movsl
cmp
fiaddl
mov
test
cmp
xchg
shrl
mov
lods
insl
and
sbb
mov
mov
jp
xor
jnp
fisubrl
hlt
andl
xlat
dec
and
into
loop
mov
mov
mov
jg
xchg
movsb
push
jo
pop
sub
es
push
push
enter
stc
push
es
das
jmp
sbb
or
testb
out
and
shr
mov
dec
out
daa
out
push
mov
inc
or
mov
and
cmp
adc
imul
or
insl
push
inc
pop
ds
sbb
cmpsb
insb
mov
in
lcall
mov
aam
fstp
sub
popa
xchg
mov
dec
out
test
push
scas
outsl
popf
test
je
push
aas
fists
cs
dec
dec
inc
xchg
mov
leave
arpl
sub
cltd
stos
mov
jnp
adc
addr16
je
or
or
bound
lret
pop
mov
fidivrs
cmp
push
mov
cmp
jae
jle
sti
or
jno,pn
xchg
pop
xorb
mov
pop
sbb
lret
inc
and
xchg
adc
inc
jb
aaa
popf
in
leave
js
data16
aam
inc
xor
dec
pusha
mov
out
xlat
push
adc
or
sbb
lock
or
fcomp
xchg
ja
mov
xchg
cld
insb
mov
xsave
push
insb
decl
add
stc
sub
loopne
scas
sbb
lahf
mov
jae
push
and
adc
test
pop
jnp
push
pcmpgtw
or
imul
inc
sub
pop
mov
leave
pop
mov
out
sbb
imul
and
fmuls
adc
pop
test
xor
pop
mov
jae
jbe
inc
xor
mov
sub
push
jae
fs
or
xor
inc
js
jbe
lcall
cmpsb
xchg
jecxz
das
outsb
push
cmp
adc
push
in
and
jo
mov
mov
clc
in
daa
lods
or
sub
push
fbld
pmulhw
mov
in
mov
xor
loop
mov
mov
push
shlb
xor
hlt
cli
xor
adc
jnp
adc
or
test
jle
test
or
add
dec
in
test
xchg
call
fsubrl
popa
mov
dec
jns
icebp
pusha
int3
push
adcb
ret
mov
sbb
fs
gs
xor
repz
repnz
xor
icebp
mull
out
stos
push
fldcw
cmp
or
lcall
sub
cmp
out
iret
cmp
xchg
gs
lea
insl
addr16
push
and
adc
stos
mov
xchg
push
mov
mov
adc
pushf
sub
popf
sub
lods
ljmp
in
lods
into
sub
inc
sub
in
aaa
out
jne
sti
and
jno
lds
cli
xchg
rcrb
lcall
push
lods
js
int
incl
fidivs
out
fistpl
pop
mov
mov
fldt
fimuls
mov
hlt
sahf
sahf
arpl
nop
lret
jge
int
push
xchg
jae
push
outsb
mov
lds
hlt
call
cld
mov
lds
and
orb
sub
jp
fldl
clc
fldz
cmpl
ror
or
jb
lea
and
bound
out
enter
lret
movsl
jno
sar
out
pop
push
push
jne
les
ret
clc
inc
pop
pop
mov
rcrb
xchg
push
cmp
xor
mov
push
cmp
sub
add
pop
out
sbb
aad
jo
leave
daa
dec
adc
in
mov
xchg
call
pop
add
popf
mov
mov
sbb
sbb
sub
xchg
push
pop
std
movsl
movsl
imul
stos
in
adc
xor
or
sbb
mov
lock
in
xchg
xchg
xchg
jbe
inc
cmp
mov
sahf
xchg
push
stos
xor
shll
pop
sbb
pop
ret
xchg
les
fistpl
sub
xchg
adc
mov
jg
jne
pusha
imul
xor
inc
clc
sub
nop
jg
push
inc
lahf
into
repnz
addl
adc
mov
movsb
insl
movsl
adc
in
pusha
cmpsl
xchg
jl,pt
and
loopne
mov
inc
loope
xchg
inc
push
mov
adc
testl
cmp
xor
push
fisttps
jns
cmp
xchg
int3
jnp
in
sbb
enter
addb
xor
jb
sbb
mov
ljmp
sub
mov
test
cmp
pop
xor
or
cld
lock
add
xor
in
gs
mov
cwtl
test
sbb
or
stc
outsb
inc
je
push
jmp
mov
lea
push
fimuls
ds
push
in
cmc
enter
mov
inc
mov
pushf
lds
xchg
xchg
jp
gs
icebp
mov
push
pop
push
push
add
popa
iret
inc
pop
int
in
lock
loope
sarb
mov
mov
dec
imull
outsb
mov
aaa
and
xchg
pop
mov
lods
push
stos
lods
or
xor
outsl
lahf
test
je
ret
sahf
jl
cmpsb
inc
addr16
mov
in
pop
xchg
push
sbb
mov
jnp
add
lret
in
je
sbb
movsl
outsl
out
xchg
jg
inc
lds
pop
add
push
daa
lock
mov
fs
jo
push
xchg
pop
in
xor
clc
mov
mov
imul
out
and
loopne
call
jnp
js
or
movsb
lahf
jbe
jecxz
sbb
shrl
and
inc
fstpl
mov
xchg
movsb
sbb
mov
inc
daa
lods
adc
out
das
mov
popa
cmp
dec
data16
popa
pushf
cltd
shr
shrl
dec
adc
pop
sub
and
cld
jo
adc
arpl
mov
add
icebp
dec
out
leave
adc
adc
std
or
cli
mov
ds
aad
dec
and
mov
xor
pop
mov
in
xor
jg
mov
leave
pop
sti
fwait
cmp
jb
out
fnstcw
jl
hlt
pop
jo
out
or
inc
in
xorb
pop
adc
out
loope
cmp
dec
test
mov
sub
push
inc
push
xchg
pop
jmp
push
ret
xchg
dec
xor
jle
xchg
pop
fbstp
mov
cltd
sbb
xor
icebp
jbe
fcoml
or
fmull
fdivrs
mov
ss
mov
mov
push
ficomps
js,pt
aam
in
xchg
cltd
movsl
adc
lock
adc
lret
sarl
cmp
arpl
jne
adc
shlb
js
push
adc
fimull
adc
and
insb
out
rcrl
mov
in
test
cmp
xchg
lods
xchg
dec
cmp
fisubrs
iret
jnp
and
adc
push
mov
mov
adc
dec
movsb
sahf
adc
stos
daa
daa
sbb
pop
daa
and
fbstp
test
mov
into
mov
lods
inc
in
xor
inc
imul
inc
shl
mov
sbb
adc
dec
jecxz
xchg
inc
cmp
add
mov
fucomp
jnp
ret
out
stos
loope
mov
idivl
cmp
sub
push
sub
aas
hlt
imul
cmp
or
pop
jnp
push
cmp
stos
mov
and
add
fadds
adc
sbb
arpl
xchg
push
inc
jne
insb
insb
testb
fsubrl
ret
jp
in
fwait
mov
or
sbb
adcb
aaa
sbb
sub
push
ror
fwait
dec
fwait
sub
sbb
pushf
jne
xchg
arpl
jmp
pop
mov
or
aad
fidivrs
add
aad
add
push
or
insl
jno
aaa
jb
push
ficompl
fbstp
divl
jmp
jp
adc
inc
or
push
xchg
jno
insl
ficompl
or
mov
and
sets
lret
mov
sub
push
lret
dec
nop
pusha
testl
shll
cmp
popf
and
dec
out
xor
xor
or
mov
mov
mov
hlt
xchg
cpuid
lds
sub
push
sub
jnp
ret
dec
add
and
pushf
inc
add
sub
jnp
jg
xor
cli
test
cmp
pop
divl
xchg
sbb
xor
and
xchg
mov
jns
and
push
adc
fmulp
call
xor
pop
mov
out
into
dec
sti
scas
or
addr16
sub
dec
insl
lock
dec
notl
loop
in
dec
jge
sub
jl
pop
jecxz
add
sbb
loopne
js
add
cvtps2pd
imul
sub
xchg
inc
stos
stc
add
movsl
mov
xor
repz
aam
sub
push
int3
mov
xchg
incb
ret
or
xchg
shrb
sti
pop
mov
and
pusha
and
xor
dec
sub
sub
repnz
and
lahf
imul
jmp
mov
aam
sbb
enter
fstl
mov
push
inc
clc
cmc
aam
cmp
mov
or
mov
enter
cmp
xor
mov
sar
mov
inc
sbb
or
lods
cli
lahf
negb
ret
sbb
mov
xchg
cmp
push
adc
insl
rcrl
mov
cmp
pop
mov
pop
pop
call
dec
js
test
sub
jnp
push
dec
adc
mov
stos
fcomps
ljmp
xor
movsb
insl
ficoms
sbb
rcl
shll
add
add
add
push
enter
cmpsl
sbb
and
lods
mov
inc
lods
arpl
cld
lcall
aam
sub
dec
in
enter
lret
fsts
fildl
adc
jp
out
sub
testl
cmp
iret
cld
mov
mov
add
xchg
sbb
add
cmp
sbb
pop
insb
lods
test
add
push
push
pop
or
loopne
push
ljmp
push
mov
sti
aad
or
mov
out
scas
insl
and
shlb
cli
mov
sbb
cmp
or
mov
gs
xor
xchg
sbb
sbb
jb
adc
mov
sbb
xor
pop
data16
repz
jae
add
xor
loope
sbb
or
aam
mov
mov
xor
repz
lds
addr16
or
shll
and
mov
pop
sub
addr16
fdiv
mov
xor
and
sub
test
xor
push
mov
jecxz
test
stc
dec
nop
and
or
or
jmp
fwait
sub
nop
mov
je
or
cmp
push
out
das
jbe
push
and
sbb
movsb
mov
push
mov
cmp
lret
int
push
or
lds
push
jae
testb
mov
pop
push
loop
cmpsl
cmp
shlb
dec
mov
clc
mov
out
jae
or
push
jl
cltd
push
jg
fisttpll
mov
push
xchg
popf
cmp
inc
cmpsl
sti
ljmp
jae
mov
pop
sbb
pop
add
insl
das
ja
cmpsl
push
jnp
pop
cmpsb
adc
jp
cld
add
shrb
and
push
mov
daa
arpl
enter
xchg
xchg
xor
mov
negb
and
aad
ss
jae
add
stc
mov
mov
fstpl
popa
aas
fdivrs
xchg
mov
outsl
inc
int
mov
mov
call
ficoms
sti
sbb
adc
out
js
jo
subl
str
push
dec
fcoml
mov
jns
push
dec
cltd
xlat
rcll
xchg
ret
clc
jb
je
test
outsl
jge
cmp
dec
and
mov
jmp
rclb
andb
invd
ret
notb
push
mov
jnp
fldt
pop
in
test
xchg
clc
dec
ss
leave
push
inc
leave
sub
dec
data16
cmp
dec
test
add
stos
push
outsb
or
rcrl
xor
lock
sarl
add
pop
sahf
inc
jb
add
xrelease
lcall
jnp
and
int3
and
notl
in
mov
cmp
dec
push
ds
js
test
xchg
clc
mov
arpl
inc
jl
lret
xchg
jnp
add
xchg
jp
push
cmp
or
jmp
dec
enter
add
mov
pop
sbb
mov
fmuls
lret
pop
sar
out
cwtl
mov
jecxz
lret
lret
lods
mov
dec
jnp
les
sahf
negb
shrb
pop
inc
inc
jecxz
mov
sar
push
adc
cmp
cmp
pop
fldenv
jle
push
bound
hlt
xchg
mov
mov
jno
ja
mov
shll
mov
jb
rcrb
ljmp
mov
decl
cmp
pop
pop
jp
js
push
repnz
loope
pop
movsb
pop
add
mov
jnp
cltd
js
mov
outsl
or
sbb
int
lcall
sub
cmp
mov
inc
xlat
movsb
cltd
dec
adc
mov
test
and
nop
aam
icebp
call
push
add
dec
cmp
test
mov
outsl
or
stc
sbb
sub
clc
mov
test
inc
inc
or
or
add
sbb
in
sti
xlat
out
mov
push
sub
adc
inc
out
popf
push
loopne
sbb
call
not
fcmovnu
iret
xor
push
lds
xchg
push
sub
cmp
xor
movsb
jne
pop
loopne
je
outsl
out
inc
mov
add
sub
aaa
mov
ficoms
out
enter
lahf
pop
sbb
pop
sub
ret
cmp
jno
push
adc
fistl
jge
fbstp
lret
adc
sub
mov
xor
jg
lahf
add
xchg
jge
lcall
test
jmp
int
cltd
shlb
and
jl
lds
sti
bound
testl
mov
pusha
jecxz
lds
cmp
cmp
pop
mov
clc
outsb
test
int
jp
cmp
popa
cli
lock
or
popa
cli
adcl
jl
gs
mov
int
lds
mov
mov
lods
adc
inc
nop
sub
mov
fsubrs
push
push
xor
out
dec
sub
adc
and
test
xchg
mov
mov
fs
jne
xlat
cwtl
fs
jbe
or
pop
mov
push
mov
or
scas
push
inc
loope
mov
mov
frstor
ret
mov
rol
mov
fisubl
xor
aam
sahf
xchg
in
pop
repnz
jle
xchg
in
sbbl
mov
cmpsl
repnz
xchg
das
call
mov
mov
subb
std
pop
adc
outsb
or
cmp
dec
add
ret
pop
jle
push
out
pop
sbb
or
addb
nop
lahf
cld
mov
fwait
dec
ja
pop
jle
cmp
loope
pop
sub
sub
xchg
add
or
jne
pop
fidivrl
jl
into
mov
mov
add
jecxz
xchg
dec
pop
lahf
enter
test
sub
stc
and
ljmp
cmpl
xchg
mov
adc
fnstcw
cmp
btc
sahf
fadd
js
pop
test
inc
mov
addr16
push
mov
dec
call
sbb
mov
sbb
in
mov
xor
jo
and
pop
mov
popa
in
lock
jne
call
adc
jg
or
xchg
cmpsl
inc
cmpsl
ret
clc
test
pop
imul
shll
and
iret
loop
pop
mov
fisubs
cmc
cmpl
push
fwait
adc
mov
xchg
pushf
cli
xchg
mov
pop
es
rolb
repnz
data16
loope
loopne
push
or
xchg
dec
add
xlat
mov
or
or
cmp
adc
push
and
mov
pop
xchg
sbb
mov
add
fsubrs
inc
fsubrp
cmp
cmp
sub
push
sbb
hlt
pop
cmp
xor
add
jge
imull
js
jg
out
lahf
sahf
sbb
lock
xor
pusha
push
js
test
push
push
movsl
stos
rcrl
inc
punpckhbw
adc
add
fidivs
pop
push
fistpl
cmpsb
int
xor
and
jle
push
int
les
adc
inc
in
add
or
and
pop
sbb
fcmove
dec
jecxz
xchg
mov
xor
popl
xor
stos
push
add
cmpb
fbstp
adc
sub
repnz
jl
shlb
mov
push
stos
rcrl
jbe,pt
sub
mov
pop
test
outsb
sub
movsb
xor
or
push
inc
push
cmpsb
fnstenv
pop
push
and
cmc
test
imul
loop
mov
sbb
ret
leave
mov
lahf
pop
jbe
add
repnz
jns
inc
lods
scas
push
jb
pop
push
ja
add
clc
pop
add
insl
lret
addl
insl
test
mov
dec
mov
bnd
add
imul
push
outsl
aaa
popa
rcrb
repnz
ficoml
xchg
imul
outsl
dec
adc
xor
out
or
inc
mov
leave
mov
mov
xor
xchg
in
stc
je
cmp
popa
loop
test
xor
cwtl
ffreep
cltd
pushf
out
mov
icebp
mov
jecxz
loopne
js
nop
dec
pop
js
fs
test
rcrl
decb
and
jle
in
stos
xchg
mov
test
jbe
push
cmp
adc
add
inc
cmpl
sti
aas
jle
dec
push
loopne
mov
rclb
add
ljmp
xor
lcall
dec
insl
inc
lock
imul
inc
or
outsl
mov
imull
mov
dec
pop
sbb
outsb
push
outsw
sbb
test
jae
into
or
fnsave
push
add
popa
pop
add
dec
dec
ficomps
js
jge
in
push
inc
push
stos
daa
aas
out
mov
mov
and
nop
xlat
or
or
ds
dec
mov
cmpsb
or
cmp
lds
sub
loop
adc
sbb
movsb
imul
xchg
pop
sbb
jp
xchg
rolb
lock
push
and
xchg
mov
pop
add
sbb
dec
xor
mov
adc
loop
stos
sbb
jp
insl
mov
fiaddl
jb
lock
or
and
dec
sbb
test
lds
cmp
sub
add
mov
dec
jne
or
xchg
aam
push
stc
pop
lcall
es
rorl
pop
mov
das
mov
mov
lret
nop
dec
mov
lods
test
mov
sbb
repz
mov
loope
pop
push
jl
popf
inc
mov
ret
sub
vaesenc
cli
cmpsl
in
loop
cmpxchg
fcompl
jmp
insl
add
sbb
stc
adc
jb,pn
jbe
push
and
push
jno
out
mov
stc
inc
ss
decl
inc
sub
add
cmpsb
jecxz
sub
xchg
push
enter
cs
and
push
loopne
mov
add
fucom
jg
cmp
dec
jge
add
clc
jl
dec
jnp
mov
sbb
movsl
jge
aam
add
into
loop
in
out
sbb
fadds
xor
jne
xor
out
sbb
push
into
adc
dec
leave
les
mov
scas
adc
jb
insl
cmp
jl
mov
cmpl
pusha
mov
push
ja
pop
sbb
xor
daa
aas
les
es
mov
sub
iret
add
cmp
mulb
inc
pop
mov
sbb
cmpb
add
ret
pop
xchg
jle
xor
xchg
jmp
aad
out
xchg
clc
rorl
inc
add
icebp
xchg
add
cmc
sub
xor
pmaxsw
das
xlat
scas
xchg
xchg
lock
addr16
ret
push
push
xchg
xor
add
inc
and
imul
negb
fidivs
cli
daa
add
lret
scas
mov
das
push
ret
pop
add
mov
nop
mov
stos
test
push
and
das
xor
or
cmp
cmp
aaa
test
add
push
out
mov
loope
aam
cmp
arpl
lods
sti
sbb
mov
push
push
mov
cmc
mov
test
loope
stos
mov
pop
imul
inc
les
aaa
aaa
subl
adc
aas
in
or
outsb
adc
fwait
xlat
xchg
fnstcw
dec
mov
mov
loopne
js
or
rclb
insl
sbb
in
push
insl
stos
rol
cmp
sub
in
fistl
sbb
inc
ljmp
xchg
pop
adc
sbb
stos
pop
jle
sub
jns
sbb
ret
mov
add
pop
sub
orb
mov
jne
lret
scas
pop
mov
jecxz
mov
mov
push
xchg
mov
fneni(8087
dec
pop
shll
pop
lcall
daa
jnp
lret
mov
pop
sbb
fs
jns
bound
stc
or
lcall
xor
mov
cmp
jnp
xor
adc
cmp
and
cmpsl
xor
nop
mov
mov
cmp
popa
loop
outsb
push
xor
icebp
mov
data16
es
andb
test
out
movsb
stc
in
adc
cwtl
lcall
jns
push
fisubl
adc
adc
cmp
push
xchg
scas
push
repz
out
scas
insb
jns
outsb
ja
aad
dec
push
sbb
dec
add
std
xlat
ljmp
les
pop
arpl
insb
outsl
int
xor
jne
jp
lods
cmp
test
dec
les
jnp
mov
push
xchg
lock
mov
test
gs
repz
add
.byte
add
add
addb
add
xor
rdtsc
adc
jb
jl
xorb
xor
xor
test
mov
mov
mov
xor
xor
xor
xor
xor
bound
lret
ss
sti
ss
aaa
cltd
cmp
cmp
jge
sarl
inc
cmp
cmp
cmp
cmp
cmp
les
into
fidivrl
out
repnz
ds
aas
aas
mov
ret
aas
lret
aas
fdivrs
in
lock
idivb
add
add
inc
add
add
xor
xor
xor
xor
ret
cmp
cmp
push
cmp
stos
cmp
jmp
repz
and
mov
pushf
aas
scas
aas
sarb
aas
in
idivb
add
add
mov
xor
xor
xor
bound
pushf
xor
xor
xor
aaa
inc
aaa
push
aaa
pop
aaa
xorb
aaa
je
jle
mov
leave
cmp
cmp
cmp
cmp
push
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
aaa
cmp
js
sahf
cmp
push
ds
sbb
xor
dec
outsb
ds
aas
dec
aas
push
aas
sahf
aas
movsb
aas
mov
aas
int
aam
fidivrl
loope
out
out
aas
idivb
sti
aas
add
add
add
add
xor
sbb
sbb
xor
xor
aaa
xor
xor
insl
xor
jp
xorb
xor
xor
xor
xor
xor
and
sub
xor
xor
xor
xor
xor
xor
xor
xor
fwait
xor
xor
xor
fwait
xor
xor
test
movsl
xor
or
adc
ss
mov
cwtl
ss
ss
ss
aaa
cmp
dec
aaa
mov
cmp
cmp
cmp
pop
cmp
jnp
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
loop
mov
cmp
cmp
jns
cmpb
lds
cmp
cmp
cmp
sarb
add
add
add
jl
xchg
xor
xor
pushl
sbb
xor
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
cmp
cmp
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
repz
and
dec
xor
xor
xor
xor
xor
push
ss
icebp
aaa
stos
cmp
dec
cmp
cmp
cmp
pop
cmp
cmp
pusha
add
or
add
and
add
add
add
add
add
jb
jbe
jp
jle
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
arpl
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
imul
xor
fidivs
adc
ss
add
push
aaa
sub
outsl
aaa
xchg
xchg
aaa
lods
aaa
mov
mov
aaa
or
push
cmp
insb
cmp
cmp
insb
cmp
cmp
cmp
dec
cmp
cmp
xor
push
cmp
enter
ljmp
test
stos
ds
fidivrl
pop
aas
es
cmp
cmpb
aas
mov
iret
aas
in
aas
add
add
add
adc
inc
xor
xorl
mov
xor
xor
xor
xor
imul
test
scas
xor
xor
xor
je
xorl
xor
xor
xor
test
lods
aaa
mov
aaa
divl
outsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
insl
aas
jae
jns
jg
test
mov
xchg
aas
lcall
aas
mov
mov
aas
fidivrl
jecxz
call
aas
add
add
add
add
or
sbb
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
data16
xor
xor
xor
xor
xor
dec
xor
xor
xor
xor
xor
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
cmp
xor
fwait
xor
shll
fdivs
fidivs
insl
cmp
cmp
cmp
cmp
cmp
cmp
aas
add
add
push
xor
sbb
pop
xor
xor
xor
xor
inc
xor
push
xor
pop
xor
xor
add
mov
add
add
xor
dec
xor
xor
xor
mov
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
int3
xor
xor
rolb
in
add
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
xor
dec
xor
pusha
xor
js
xorb
xor
mov
mov
xor
loopne
call
xor
adc
sbb
and
sub
xor
cmp
sbb
and
sub
xor
cmp
inc
aas
dec
aas
push
aas
pop
aas
fs
insb
aas
je
jl
test
mov
xchg
aas
pushf
aas
movsb
aas
lods
aas
mov
mov
rolb
add
add
sub
sub
shlb
aam
fdivs
fdivl
loopne
in
call
ss
ss
ss
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aaa
inc
aaa
dec
aaa
dec
aaa
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
fs
push
aaa
je
js
jl
xorb
aaa
mov
mov
nop
aaa
xchg
aaa
cwtl
aaa
pushf
aaa
mov
aaa
lods
aaa
mov
mov
mov
aaa
les
enter
shlb
aam
fdivs
fdivl
loopne
in
call
aaa
hlt
aaa
clc
aaa
cld
aaa
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
adc
and
sub
cmp
cmp
inc
cmp
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pusha
cmp
cmp
add
add
lock
or
add
fdivrl
loopne
in
call
cmp
adc
sbb
xor
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
jo
je
js
jl
cmpb
aas
and
sub
sub
xor
xor
cmp
cmp
inc
aas
inc
aas
push
aas
push
aas
pop
aas
pop
aas
pusha
aas
fs
push
aas
add
add
add
and
add
shlb
adc
sbb
sbb
and
and
sub
sub
xor
xor
