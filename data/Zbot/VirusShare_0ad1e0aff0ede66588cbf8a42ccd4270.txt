nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
pushl
push
push
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
push
pushl
push
call
add
pop
mov
mov
mov
add
call
pop
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
mov
mov
add
call
add
add
shlb
pop
pusha
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
push
push
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
mov
add
call
add
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
pop
call
add
lea
sub
sub
mov
pop
mov
mov
lea
mov
push
xorl
pop
sub
or
xor
cmp
je
sub
mov
push
push
push
pop
push
pop
stos
pop
pop
subl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
lea
add
call
push
mov
sub
push
pushl
push
push
call
add
pop
mov
mov
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
ja
inc
sub
mov
sub
mov
mov
shl
xor
push
sub
push
mov
mov
mov
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
lea
jbe
popf
push
pushl
decl
jmp
add
fxtract
daa
add
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
mov
mov
add
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
push
pushl
push
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
push
pushl
push
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
push
push
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
mov
mov
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
pushl
push
push
push
call
add
pop
mov
mov
mov
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
mov
mov
add
call
add
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
mov
mov
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
add
add
in
sub
push
push
push
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
add
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
add
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
push
push
pushl
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
mov
mov
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
mov
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
mov
mov
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
push
pushl
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
pushl
push
push
call
add
pop
mov
mov
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
push
push
call
add
pop
mov
mov
mov
add
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
mov
add
call
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
mov
mov
add
call
add
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
mov
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
in
add
mov
and
add
and
add
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
add
push
and
add
and
add
and
add
and
add
add
add
add
inc
and
add
add
and
add
add
je
add
fisubl
add
test
add
cld
and
add
and
add
add
ljmp
add
and
add
add
and
add
push
and
add
add
add
add
add
add
adc
add
xor
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
add
and
add
add
movsb
and
add
and
add
add
in
and
add
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
add
push
and
add
and
add
and
add
and
add
add
add
add
inc
and
add
add
and
add
add
je
add
fisubl
add
test
add
cld
and
add
and
add
add
ljmp
add
and
add
add
and
add
push
and
add
add
add
add
add
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
gs
outsl
jbe
inc
imul
jns
add
addl
jb
popa
je
inc
imul
jns
add
xchg
add
je
jne
jb
outsb
je
push
add
rolb
insb
outsl
bound
dec
outsl
arpl
add
add
je
imul
bound
gs
add
aad
inc
imul
gs
add
imul
jb
je
arpl
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
call
inc
imul
bound
gs
add
enter
jae
gs
popa
insb
jne
add
inc
gs
je
imul
inc
add
movsl
add
je
gs
imul
je
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
add
popa
insb
inc
insb
popa
addr16
add
je
inc
jbe
outsb
je
add
pop
add
je
outsl
arpl
gs
outsb
outsw
push
add
roll
dec
gs
jo
jb
add
and
gs
outsl
insl
insl
inc
jb
popa
imul
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
push
dec
inc
dec
xor
cs
insb
add
int
dec
outsl
popa
fs
jne
jae
jb
add
pop
dec
jae
imul
jno
push
gs
jne
jae
jb
jnp
push
gs
outsl
arpl
add
pop
or
jae
dec
gs
popa
addr16
add
mov
dec
jae
imul
jae
popa
addr16
add
xchg
push
push
gs
jae
addr16
add
sbb
ja
jo
imul
pop
inc
gs
imul
js
push
add
mov
inc
imul
dec
gs
popa
addr16
add
jae
push
gs
jne
jae
jb
outsl
jae
add
inc
gs
imul
outsb
addr16
add
cwtl
push
inc
gs
insb
addr16
jb
arpl
push
push
inc
push
xor
cs
insb
add
pop
add
dec
inc
outsl
outsb
outsb
arpl
add
inc
popa
outsb
arpl
add
add
dec
inc
jb
outsl
jb
add
add
dec
inc
imul
arpl
push
dec
push
inc
dec
xor
cs
insb
add
or
dec
jae
popa
je
push
push
inc
add
push
dec
push
push
dec
cs
insb
add
imul
frstor
cmp
fists
cmp
adc
xchg
xchg
cmp
adc
sbb
aad
les
mov
jns
add
push
mov
sbb
mov
sub
inc
cmpsb
sbb
out
out
jnp
adc
mov
and
pushf
ret
cwtl
inc
adc
js
pop
mov
add
out
or
lret
int
aas
pop
scas
loop
and
cmp
loop
mov
jecxz
lods
scas
sahf
testb
push
adc
cmpsb
adc
fisttps
aam
enter
pop
shlb
push
out
adc
rorl
mov
ljmp
sahf
and
jp
xor
pop
jbe
outsb
sub
mov
sbbb
dec
push
mov
jmp
mov
insb
test
icebp
mov
fdivrs
push
fistl
sarb
sbb
cmp
int
mov
outsb
adc
dec
dec
in
xor
dec
jmp
fisttps
nop
aad
mov
lcall
or
call
inc
inc
outsb
jl
push
aas
test
xchg
sbb
inc
stc
mov
subb
xchg
sub
stos
push
adc
mov
inc
jg
subb
shl
xchg
in
sub
add
push
xor
add
lods
rcrl
ret
mov
jbe
jge
mov
xor
fstpt
ret
mov
fldcw
and
mov
push
mov
cwtl
or
popf
hlt
leave
push
jne
pop
call
sbb
call
push
and
jb
cltd
lods
xorl
push
push
mov
sbb
cld
pop
jle
mov
inc
xor
add
add
add
add
xor
add
add
add
pusha
add
adcb
add
pusha
add
addb
add
add
add
js
add
add
add
hlt
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
pusha
add
test
add
cwtl
xchg
add
ss
cwtl
mov
add
sub
add
xor
add
pusha
add
add
add
add
add
add
and
add
or
add
or
add
imul
sub
add
movsl
mov
xor
mov
mov
mov
mov
mov
mov
scas
scas
lods
test
lods
lods
mov
mov
lcall
cmpb
jp
add
xchg
add
mov
inc
mov
ret
leave
lret
lret
int
rcl
in
rcl
shl
iret
iret
shl
int
int3
hlt
leave
enter
leave
lret
mov
shll
lods
lods
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
jae
mov
out
lret
lret
not
rcl
cld
aad
std
fsin
xlat
xlat
fdivr
aad
dec
ror
dec
int
rcl
sar
iret
ror
inc
rol
mov
mov
scas
iret
mov
xchg
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
scas
sbb
mov
jnp
mov
sar
int3
lret
rcl
sar
aam
xlat
fcom
fcos
aad
aam
into
into
iret
dec
int3
int3
call
aad
dec
into
int
rol
mov
mov
scas
std
cmpsl
cmpsl
cmpsb
ljmp
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
push
push
add
inc
add
push
add
or
inc
or
sbb
add
add
add
add
or
or
add
add
mov
mov
scas
mov
add
mov
inc
mov
mov
mov
mov
sar
mov
int
int
rcl
aam
fcom
fdivr
fcom
fcos
rcl
sar
int
int
int3
int3
int3
dec
int3
int
mov
mov
mov
cmpsl
test
mov
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
bound
pop
fs
inc
inc
inc
sbb
or
push
xor
cmp
and
add
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
mov
ret
enter
into
iret
call
aad
call
aad
dec
rcl
dec
lret
inc
ret
mov
mov
ljmp
cmpsb
movsb
fwait
fwait
popf
cwtl
cltd
cwtl
lcall
addl
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
outsl
xor
lcall
jno
arpl
push
push
push
xchg
cmp
inc
inc
mov
outsb
insl
insl
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
ret
dec
leave
enter
lret
dec
lret
lret
enter
sar
mov
mov
mov
mov
movsb
cmpsb
cmpsb
lcall
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cltd
cwtl
cltd
in
test
push
push
push
or
add
add
add
add
add
add
add
add
add
add
add
add
outsl
jo
add
pop
or
jns
nop
mov
incb
jl
idivb
jmp
outsl
outsb
out
gs
fdivs
jne
jg
xorb
arpl
inc
inc
cmp
sbb
sbb
adc
or
scas
lods
scas
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
jmp
pushf
popf
call
test
mov
xchg
sahf
lahf
lahf
sti
mov
cwtl
cwtl
mov
js
jns
cs
add
add
add
add
add
add
add
add
add
add
mov
pop
push
addl
in
mov
mov
addb
decb
mov
loope
jae
enter
mov
addl
addr16
cmp
es
push
jle
jg
cltd
cltd
lcall
test
lods
sti
lods
lods
lods
stos
lods
stos
test
mov
fwait
xchg
xchg
xchg
decl
cmpb
jp
jge
jl
xchg
xchg
cmpsb
movsb
movsl
mov
mov
mov
mov
mov
mov
mov
mov
stos
test
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
mov
lods
call
addl
mov
xchg
std
xchg
cwtl
cltd
stc
xchg
xchg
xchg
in
mov
jg
cmpl
pop
pop
push
push
or
xor
inc
dec
imul
test
xchg
leave
pushf
lcall
lcall
std
mov
xchg
xchg
mov
xchg
xchg
lcall
movsl
cmpsl
ljmp
mov
std
mov
mov
mov
std
mov
mov
movsb
mov
jl
scas
cmpsb
cmpsl
add
adc
test
mov
fwait
xchg
xchg
incl
test
decb
xchg
xchg
popf
sahf
sahf
std
mov
mov
xchg
in
xchg
xchg
nop
in
test
push
jne
adc
dec
add
or
dec
dec
dec
data16
jae
mov
xchg
rclb
xchg
std
mov
call
pushf
popf
jmp
test
test
mov
cmpsb
mov
cltd
xchg
std
rclb
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
scas
scas
jmp
popf
cltd
xchg
decl
mov
call
xchg
xchg
sahf
popf
popf
movsl
movsl
movsl
test
stos
movsb
movsb
cmpsb
notl
jl
movsl
push
push
push
outsl
dec
dec
dec
pushaw
bound
jae
jne
jl
jg
addb
int
xchg
in
mov
std
nop
mov
lcall
mov
mov
mov
mov
jle
mov
addr16
mov
inc
xor
mov
push
mov
mov
lods
mov
movsl
mov
add
pop
pop
adc
mov
ljmp
cltd
decl
xchg
call
xchg
call
cwtl
cltd
cltd
lcall
mov
mov
movsb
stc
lcall
xchg
nop
xchg
les
cltd
in
xchg
xchg
out
xchg
mov
stc
xchg
test
std
xchg
jae
cltd
push
lahf
arpl
movsl
pop
dec
ljmp
inc
aaa
pushl
cs
ljmp
push
or
lods
and
pushl
mov
mov
pushf
movsb
cmpsb
cmpsb
and
add
add
mov
add
pop
adc
mov
ljmp
lcall
xchg
xchg
lcall
popf
popf
lcall
pushf
popf
lcall
xchg
xchg
call
xchg
xchg
call
xchg
lcall
cltd
lcall
mov
xchg
imul
pop
push
xchg
push
dec
cltd
inc
cmp
sahf
sub
mov
and
ljmp
and
ljmp
adc
mov
adc
mov
adc
mov
lahf
fwait
mov
scas
scas
scas
cmpsb
movsl
movsl
sub
movsb
movsl
movsb
add
pop
pop
adc
mov
lds
cltd
call
sahf
pushf
jmp
mov
movsl
jmp
xchg
cltd
decl
mov
decl
jbe
cltd
jno
cwtl
arpl
xchg
push
dec
call
xor
decl
sbb
call
clts
call
push
add
sahf
adc
adc
lods
sub
pushl
das
push
pushl
xor
mov
xor
and
mov
lcall
scas
scas
scas
mov
mov
mov
add
add
add
mov
stos
add
pop
adc
scas
lods
ljmp
fwait
lcall
movsb
mov
ljmp
stos
test
lcall
addb
mov
mov
decl
and
adc
test
or
orl
incl
or
decl
add
xchg
or
lcall
ljmp
xor
pushl
cmp
mov
cmp
sub
movb
enter
leave
inc
das
dec
push
inc
inc
xchg
mov
sarl
movsl
cmpsb
movsl
dec
mov
movsb
movsb
add
push
adc
test
mov
sahf
fwait
pushf
jmp
test
stos
ljmp
mov
ljmp
lahf
mov
incl
adc
incl
push
pop
incl
add
addb
incl
add
mov
add
xchg
or
call
add
mov
adc
ljmp
ds
rolb
dec
cmp
dec
cmp
lret
dec
cmp
into
dec
cmp
rclb
call
push
cmp
rcll
call
pop
dec
dec
xchg
mov
ret
mov
mov
cmpsb
movsl
cmpsb
push
mov
mov
add
add
add
mov
dec
dec
adc
mov
lods
lcall
movsl
cmpsl
ljmp
mov
pushl
mov
pushl
test
decl
adc
ud0
adc
xchg
or
test
decl
or
call
push
add
mov
adc
ljmp
das
sbb
lds
dec
push
inc
dec
pop
inc
call
pop
inc
call
pop
dec
call
pop
dec
call
pusha
dec
fstps
fsubl
fisubl
call
xchg
test
mov
mov
movsb
movsb
movsb
arpl
mov
add
add
add
cltd
xchg
xchg
add
dec
adc
jl
popf
lahf
jmp
mov
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
pop
call
pop
sbb
lea
adc
mov
pop
decl
add
xchg
or
add
mov
adc
ljmp
sbb
mov
pop
dec
call
fs
call
gs
fsubs
fsubrl
fildll
jmp
insl
pop
jmp
outsl
pop
jmp
insl
pop
jmp
jno
fcoms
mov
cmpsb
cmpsl
jne
mov
lahf
add
inc
inc
adc
jne
mov
movsb
movsb
jmp
lods
lods
pushl
mov
mov
mov
mov
ljmp
dec
inc
call
sub
and
xchg
sub
call
adc
add
xchg
or
add
mov
adc
ljmp
add
mov
dec
xor
aad
pop
fidivl
fidivs
jmp
jne
jmp
jbe
jmp
jns
jmp
jp
jmp
jle
jmp
xchg
test
into
mov
mov
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
inc
adc
jno
lcall
lcall
scas
scas
pushl
mov
mov
mov
mov
mov
call
ss
lcall
xor
lcall
adc
add
fwait
push
add
mov
adc
ljmp
adc
pushl
sub
call
pop
inc
fnstsw
jmp
xorb
xorl
call
mov
in
mov
out
mov
out
mov
in
mov
loop
xchg
sarl
mov
lcall
mov
add
add
add
add
cmp
insb
js
mov
lcall
ljmp
mov
mov
mov
mov
mov
cmpsl
cmpsl
lcall
cmp
lcall
inc
cmp
lahf
cmp
sbb
call
adc
jmp
add
mov
add
mov
add
mov
xor
fisubl
jmp
xchg
jmp
mov
in
xchg
cmp
xchg
cmp
xchg
test
repz
test
cmc
xchg
test
repz
cmp
aam
mov
imulb
pushf
pushf
daa
popf
lahf
lahf
add
add
add
pusha
add
cmp
pop
popa
pop
jne
jg
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
rol
rol
inc
ret
mov
mov
lahf
outsl
insl
lcall
dec
inc
jmp
aas
lcall
adc
lcall
adc
ljmp
adc
pushl
push
add
ret
call
cmp
gs
ljmp
push
fwait
mov
icebp
sahf
mov
repz
nop
push
mov
nop
push
mov
xchg
stc
mov
nop
fnstcw
ret
clc
lods
lods
stos
mov
popf
sahf
xor
pushf
add
add
add
inc
add
inc
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
mov
inc
ret
mov
cmpb
dec
inc
jmp
push
dec
jmp
sbb
lcall
adc
jmp
adc
pushl
add
rcrl
dec
and
call
dec
xor
out
js
in
movsb
xchg
push
movsl
cwtl
push
cmpsl
cwtl
push
test
pushf
push
lods
fwait
cli
lods
popf
sti
lods
popf
sti
scas
sahf
std
lods
fwait
push
test
fistpll
cli
mov
mov
lahf
lahf
popf
aas
nop
nop
mov
cltd
lcall
xor
xor
or
aas
cmp
dec
dec
dec
jecxz
pusha
pop
call
mov
mov
mov
sar
ret
inc
mov
inc
mov
mov
mov
push
push
ljmp
xor
lcall
adc
jmp
adc
pushl
push
add
ret
dec
sbb
call
sub
jmp
pop
inc
out
popf
mov
hlt
mov
push
mov
push
mov
clc
mov
sti
mov
sti
mov
cld
mov
test
std
mov
mov
dec
lret
mov
mov
popf
sahf
lahf
dec
xchg
xchg
xchg
add
lcall
xor
add
inc
inc
bound
push
xlat
je
jo
mov
rol
rol
mov
ret
ret
mov
inc
pushl
pop
push
ljmp
push
dec
lcall
adc
jmp
adc
pushl
sbb
inc
sbb
dec
sbb
call
sbb
adc
out
jno
push
lods
popf
cli
mov
scas
std
shlb
cld
ret
mov
inc
mov
std
les
cld
mov
cld
lds
jmp
ret
mov
ror
lret
mov
mov
lahf
sahf
mov
or
add
add
xor
sbb
outsl
jo
mov
mov
jmp
rcl
test
int
dec
int3
int3
dec
lret
int3
lret
mov
mov
pushl
inc
lcall
adc
ljmp
add
mov
sbb
dec
sbb
call
push
add
loope
add
jmp
xchg
sti
mov
mov
sti
mov
cld
lret
cld
int
std
into
mov
cld
sarb
cli
lds
call
int
mov
mov
xchg
or
add
add
xor
add
add
pop
or
movl
out
test
in
test
in
leave
xlat
fcmovu
cli
aad
std
iret
into
sar
mov
insl
push
ljmp
push
push
jmp
adc
add
les
add
lret
call
sbb
add
jecxz
add
out
dec
das
clc
fwait
mov
sti
mov
std
iret
std
rol
rol
std
rol
cld
rol
xlat
std
fxch
xlat
leave
cli
into
mov
fmul
int3
mov
mov
xchg
adc
add
add
incl
std
std
add
std
add
hlt
hlt
or
out
out
pop
in
in
in
sub
jmp
dec
jmp
jmp
call
aad
fcmovnu
jmp
mov
jb
test
cmp
movsb
and
jmp
adc
pushl
sbb
inc
sbb
dec
sbb
fcomps
add
loopne
add
jmp
popa
inc
cli
mov
std
ror
std
lret
int3
lret
std
fxch
fxch
fcmove
std
fst
std
std
aad
out
lret
mov
inc
cmpsl
movsl
mov
xchg
cwtl
add
add
add
std
incl
incl
clc
clc
stc
add
hlt
repnz
repnz
out
repnz
in
out
icebp
cmp
out
lock
jecxz
mov
jno
lahf
xor
jmp
adc
add
mov
sbb
call
push
add
fldenv
add
loop
add
jmp
ud0
jbe
cld
shlb
sti
cld
fcmovbe
fst
loopne
loope
loopne
std
jecxz
in
cld
in
fmul
push
rol
jmp
fcom
dec
lret
lret
rep
test
xchg
and
cwtl
xchg
add
cld
incb
clc
cld
std
add
sti
sti
add
div
or
aad
xor
mov
jae
fwait
and
add
movsl
adc
ljmp
sbb
inc
sbb
dec
sbb
call
sbb
add
out
add
lock
jbe
sti
into
loope
cld
loop
std
loopne
loop
jecxz
out
out
std
out
std
out
call
fdivrp
push
rol
jmp
fcom
dec
iret
sar
lods
lods
lods
lods
xchg
xchg
xchg
outsb
outsl
insl
add
add
add
fsubp
add
lret
mov
jle
lcall
jmp
adc
add
lds
add
int
add
and
fbld
add
out
add
icebp
dec
sub
sti
mov
sar
std
in
cld
loop
jecxz
std
loop
loop
sti
loop
cld
loopne
sti
stc
fst
stc
fcmove
cli
fcmove
clc
rol
out
leave
mov
out
sar
aad
aad
mov
mov
lcall
add
add
add
rcl
add
ret
adc
scas
lea
lcall
adc
pushl
sbb
inc
sbb
dec
sbb
fstps
add
loop
add
jmp
push
xor
std
ror
cld
aam
stc
rol
cli
iret
sar
lret
mov
push
lret
lock
mov
jmp
lret
mov
std
jmp
rol
imul
cmc
fucomip
mov
mov
xchg
add
add
add
lret
mov
mov
xchg
loopne
inc
aaa
jmp
adc
pushl
pop
add
ret
dec
and
call
daa
or
fisubrl
sbb
out
dec
jmp
mov
mov
out
mov
loop
mov
fidivrs
mov
faddp
mov
ljmp
leave
aam
shl
call
out
test
lock
popf
out
out
lret
push
scas
lods
lods
adc
cmpsl
test
add
rol
mov
rol
mov
sahf
aam
push
dec
popf
es
cmpsb
sub
scas
aaa
es
mov
cs
mov
pop
inc
sti
les
stc
lret
test
xchg
mov
shrl
mov
rcl
ror
ret
rcl
leave
mov
into
into
mov
xlat
aam
jg
fcomp
jb
gs
loop
out
call
xor
cmc
div
and
icebp
icebp
sbb
or
mov
int3
add
add
add
mov
ret
mov
les
outsl
insb
lock
mov
fnsave
mov
stos
mov
mov
cmpsl
enter
lret
int
enter
into
addr16
rclb
rcl
dec
rcl
aad
aad
xlat
xor
daa
ficomps
loopne
fucom
in
loopne
call
pop
jmp
icebp
add
cli
cli
add
incb
std
add
std
add
mov
shrl
mov
mov
mov
lods
xchg
mov
mov
mov
mov
ret
push
ret
inc
enter
iret
daa
lret
rcl
and
rcl
sbb
rcl
adc
rcl
or
xlat
flds
rcr
fiaddl
fcmovnu
add
fstp
add
in
add
out
add
rcl
add
std
add
mov
add
ret
les
ret
sub
mov
mov
push
ret
or
mov
add
int
add
rcl
add
aad
add
xlat
fadds
aam
aad
xlat
aad
add
loop
fcmovbe
fiaddl
fstp
loopne
fstp
loopne
jecxz
out
icebp
out
lock
std
incl
std
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
pop
dec
add
push
push
mov
mov
bound
fucomip
adcb
pop
icebp
jne
pop
sahf
arpl
and
sub
or
popa
clc
pop
nop
shrb
jl
lods
jecxz
xchg
aaa
push
movsl
push
mov
mov
fisttpl
or
fbstp
sub
xchg
dec
jg
sbb
mov
ret
repz
pop
lock
js
ja
data16
cwtl
lret
xchg
std
mov
sbb
dec
jo,pt
shlb
ret
repz
xchg
adc
cmovbe
xchg
sub
mov
dec
loop
or
imul
xchg
dec
xchg
xorb
roll
lds
hlt
ret
pop
es
dec
jecxz
inc
loope
jns
push
fstpl
mov
xor
sbb
cmp
jno
les
xchg
pop
lock
clc
loop
sub
ja
pop
dec
add
push
dec
in
mov
dec
adc
imul
addr16
xchg
mov
popf
xor
data16
xchg
inc
mov
in
in
inc
ficomps
sbb
push
das
gs
mov
roll
inc
sti
and
cmp
dec
ja
push
test
dec
fnsave
add
adc
adc
cwtl
das
and
fisttpl
mov
aam
enter
ds
es
sbb
aad
out
push
ljmp
jno
repz
adc
inc
lods
xor
fisubl
scas
inc
pop
sbb
dec
jp
arpl
ljmp
and
mov
inc
jb
mov
cwtl
push
lods
inc
mov
lret
fmull
sbbb
jnp
popl
sahf
jno
cltd
xor
xchg
and
dec
xor
push
inc
cmpb
test
cmpsb
xchg
leave
insl
cld
xchg
mov
dec
loop
insl
adc
pop
mov
adc
mov
or
adc
notl
mov
adc
add
lea
adc
scas
inc
and
ss
lret
cld
jecxz
jmp
push
or
data16
jmp
ret
hlt
fldcw
push
movsl
cmp
sub
and
ret
pop
fwait
jg
aas
mov
loope
out
rol
pop
add
add
push
bound
mov
js
cltd
test
lret
sti
push
pop
repnz
sbb
dec
pop
jns
mov
hlt
lahf
stos
xchg
cs
jnp
repnz
mov
xor
xor
shrl
addr16
mov
mov
sub
cmc
mov
sub
stos
xchg
fwait
dec
loop
mov
enter
add
push
push
out
inc
xchg
jb
outsb
add
lds
ret
pop
sbb
stos
inc
xor
loope
insb
push
enter
call
xlat
loopne
mov
stc
add
sub
cmp
fs
and
mov
inc
xlat
into
xlat
ja
or
pop
cmc
and
xchg
sub
inc
jl
je
mov
mov
lcall
jmp
out
xchg
insl
outsb
js
movsb
test
lret
sti
loop
test
dec
xor
outsl
push
in
roll
or
mov
pop
push
test
mov
loope
in
rol
pop
add
add
push
popa
push
mov
ja
cltd
test
cmp
in
and
sbb
dec
push
jns
mov
hlt
sahf
stos
xchg
fdivrl
mov
das
adc
push
mov
mov
or
jle
les
mov
mov
scas
dec
xor
jle
xchg
sub
shll
inc
cmpsl
dec
xchg
sub
sbbb
mov
out
test
jnp
sti
test
jae
jmp
jp
je
stos
mov
pop
repz
jp
imul
dec
inc
fdivrs
lea
jb
mull
jns
jecxz
lahf
das
int
jo
mov
jnp
imull
jno
imul
cmp
mov
xchg
jno
leave
sbb
sbb
ja
outsb
or
cmpl
pusha
xchg
sub
mov
or
dec
cmp
pop
stc
nop
nop
xlat
sub
add
sbb
push
ss
xor
in
test
mov
push
out
fbstp
xor
jmp
cmp
sub
pusha
and
xchg
push
mov
ret
repz
data16
pop
scas
push
mov
jmp
inc
jb
jmp
pop
mov
or
cli
jne
or
ljmp
aaa
into
jne
sbb
ror
lods
inc
sti
inc
testl
shlb
or
add
xor
sarl
sbbl
imul
out
dec
fwait
xor
xchg
sbb
fcoms
mov
xchg
jg
repz
stos
pop
mov
inc
xor
jne
adc
fsubrs
jge
jle
in
test
sbb
fisttpl
and
jns
jg
dec
loopne
stos
jno
fisttpl
or
mov
subb
sub
dec
sbbl
push
sahf
outsl
push
iret
push
jae
sbbl
mov
popf
xor
push
call
jl
jmp
leave
movsl
jnp
fcoms
mov
je
jg
lret
push
pop
sbb
js
jns
lret
stos
xchg
sub
pop
mov
mov
sbbb
pop
ret
pop
jmp
or
xchg
or
pop
mov
hlt
mov
sub
rolb
cmp
inc
add
fldt
mov
jbe
stos
or
ret
dec
lahf
ss
add
loopne
movsl
cmp
xor
into
arpl
js
mov
mov
add
movsb
imul
cwtl
mov
icebp
mov
inc
lods
inc
jne
icebp
mov
sbb
out
daa
xchg
push
and
mov
fucomp
adcb
fs
xor
sti
xor
sub
inc
xlat
psubsb
sbb
push
out
xor
push
dec
jno
das
leave
addr16
sti
loop
cli
adc
leave
pusha
sbb
push
test
xchg
sub
sub
test
mov
mov
cmpsl
sti
xchg
cmp
add
pop
sub
push
push
dec
and
rep
pushf
inc
pop
into
lds
imul
xlat
out
and
push
movsl
dec
inc
jne
je
push
popf
pop
lods
push
call
dec
add
xor
jmp
sbb
pop
or
push
cmp
add
sbb
lea
dec
out
mov
and
sbb
xchg
dec
cmp
movsl
imul
xchg
add
shrl
cmp
insb
aam
testb
mov
loop
add
jne
sbb
pop
lock
sbb
ja
cmp
sbb
mov
outsl
push
inc
xlat
xchg
push
out
cmp
aaa
jno
ss
xchg
mov
arpl
pop
mov
mov
and
leave
xchg
mov
cmp
and
leave
push
pusha
testl
pushf
mov
rorl
lahf
jnp
inc
xlat
jp
mov
mov
inc
or
jb
fidivs
xchg
sub
enter
shr
jo
sbb
add
daa
cmp
xchg
sub
loopne
mov
cmp
lcall
test
mov
fimull
cmp
frstor
xlat
cmpsb
test
mov
dec
fcomip
fcomps
or
push
outsb
dec
sub
or
icebp
or
mov
adc
aas
es
xlat
push
pop
ret
jae
jne
lods
mov
sar
loope
sub
push
popf
subb
popf
mov
cmpsl
ds
in
cs
sub
mov
dec
fcomip
in
and
std
xchg
aaa
inc
fdivp
jae
imul
stos
sbb
fucom
and
sbb
mov
xor
fcomip
insb
push
inc
fldl
test
jns
loopne
adcb
adcb
xor
sub
or
mov
nop
daa
iret
shl
jle
in
and
push
aas
hlt
mov
mov
cmpl
mov
cmp
imul
cmpsb
imul
jmp
inc
push
sbbl
adc
inc
imul
cwtl
addl
arpl
scas
lahf
and
and
sub
test
sub
jns
and
xlat
pop
out
jns
fbld
hlt
bound
add
cltd
scas
aad
jbe
enter
icebp
adcb
jns
jns
hlt
mov
jns
sti
loope
or
fs
loop
pop
mov
bnd
sbb
mov
pop
stos
je
fdivp
sbb
outsb
adc
cmpsb
sarl
outsb
std
mov
mov
movsl
lcall
push
adcl
push
adc
out
sub
inc
fsubrp
lcall
pop
sti
xlat
jmp
mov
sub
movsb
jl
lods
test
pop
jb
mov
fldenv
mov
movsl
dec
push
icebp
inc
fldcw
sbb
jmp
dec
aad
fld
push
sub
or
sub
mov
fdivs
fprem1
andl
in
or
xchg
call
mov
jmp
or
popa
dec
add
dec
or
xchg
push
sarb
cmp
dec
push
dec
pushf
and
out
movsb
cwtl
sbb
cmpsb
mov
xor
and
xor
mov
mov
mov
or
sbb
rorl
adc
mov
loopne
push
mov
mov
inc
repz
movsb
xchg
mov
ds
mov
lea
cmp
adc
sti
addl
dec
sub
popf
jnp
cmc
int3
test
mov
push
sbb
enter
fistpl
adc
mov
idivl
xchg
ljmp
sub
cmc
mov
jbe
jne,pn
cli
cs
add
std
sti
test
mov
mov
mov
push
test
mov
and
in
into
rcll
lcall
ret
imul
jb
mov
dec
in
mov
xor
mov
outsb
iret
cmpsl
mov
shrl
fisubs
call
push
inc
std
loop
push
int
sub
inc
cmp
xchg
fs
fmuls
ficoml
or
pop
inc
sbb
insb
iret
aad
sbb
repz
and
xchg
call
dec
pop
jmp
push
mov
dec
popf
add
clc
in
aaa
inc
sbb
mov
mov
mov
push
fldl
jp
daa
lods
sahf
add
inc
cmp
fwait
in
mov
inc
add
xchg
scas
pop
pop
movsl
dec
popf
roll
push
jecxz
data16
jbe
adc
in
repnz
aaa
lret
push
sahf
jbe
stc
jmp
push
adc
in
xchg
or
popa
sarb
or
jno
cld
int
enter
cli
push
jmp
sbb
and
mov
inc
call
mov
push
in
ret
pop
enter
mov
ret
jns
jecxz
test
mov
daa
jecxz
or
js
pop
xlat
cltd
in
jmp
add
in
mov
int
sbb
ficomps
xor
shll
into
rcl
sub
movsb
mov
sbb
out
xchg
insb
add
mov
add
pusha
out
jmp
lock
or
sbb
sub
xor
pop
lock
fiadds
scas
gs
shrb
sbb
mov
pop
add
mov
data16
fidivs
fldln2
test
cld
xchg
icebp
popf
push
mov
sbb
mov
aas
cmp
and
rcrb
mov
addr16
sti
jmp
xchg
cmpsb
call
mov
push
outsl
mov
insl
das
iret
insw
xchg
addr16
xchg
xchg
fbstp
sbb
sbb
aaa
into
dec
aas
daa
mov
jb
inc
fdivrl
pushf
jae
lret
cli
add
xchg
sub
sub
scas
inc
adc
test
jmp
xor
or
iret
mov
es
pavgb
daa
arpl
pop
mov
sbbl
mov
lahf
ss
mov
sti
fildll
imul
out
loop
testb
pop
and
scas
push
and
movsb
movl
std
mov
popa
clc
test
jg
fmul
mov
xor
out
stos
inc
lods
dec
mov
jae
push
fnstenv
or
xchg
or
testl
aas
lahf
and
lret
inc
fidivl
test
call
fistpll
outsl
push
jo
outsl
push
loope
lea
or
orb
mov
mov
in
imul
xchg
or
sbbb
mov
sbb
adc
sbbl
add
lahf
or
push
ljmp
jno
jle
fwait
mov
nop
mov
rcrl
pop
scas
repnz
data16
xchg
mov
jb
fmuls
nop
daa
and
sub
les
inc
mov
inc
ficomps
mov
testb
adc
mov
mov
leave
das
xchg
mov
out
mov
jae
mov
cli
xchg
in
cmp
orl
mov
add
out
inc
dec
push
jmp
scas
clc
jg
ret
enter
in
popf
xor
cmp
xlat
mov
gs
pop
cmc
testl
out
shll
xor
iret
test
cmpsb
push
aas
pop
cmp
sub
jl
add
cwtl
cmpsb
add
dec
fisubs
mov
adc
aas
xchg
cmp
pop
hlt
call
add
int
lcall
adc
dec
in
pop
xor
incb
popa
clc
test
cmc
mov
jg
lods
pushf
adc
jge
xor
xlat
xchg
mov
out
mov
insl
add
xor
jle
mov
das
lds
mov
mov
setno
test
pop
mov
add
repnz
movsl
adc
mov
das
je
cltd
xor
dec
in
lahf
cmpsl
ds
imul
and
pop
call
adc
push
fwait
mov
xchg
mov
mov
cld
jecxz
or
cmp
iret
and
cwtl
pop
call
pop
mov
mov
cmp
cmp
stc
pop
repnz
sbb
pop
dec
cmp
sarb
shrl
push
push
out
xchg
fs
xchg
mov
push
mov
sete
pop
in
sarl
dec
movsl
xchg
pop
icebp
inc
into
shlb
insb
js
mov
out
test
or
imul
pop
jge
sub
adc
fbstp
pop
data16
jbe
and
loop
ds
or
cmp
pop
rcrl
jp
insb
fbstp
sbb
nop
jl
std
xchg
fsts
pop
sahf
sbb
ss
clc
mov
fiaddl
scas
popa
clc
rclb
push
sbb
lods
inc
ret
xor
jmp
bound
mov
nop
ss
jno
pop
pop
scas
lcall
xchg
sbb
xchg
mov
arpl
fbstp
mov
push
ljmp
jno
mov
scas
inc
xchg
es
scas
int3
arpl
mov
lret
bound
mov
xchg
int3
sub
fimull
mov
cmp
push
mov
pop
out
mov
and
xlat
fsubrs
jbe
lret
mov
clc
es
shrl
push
push
lods
cli
xor
xchg
mov
movsb
mov
xlat
sub
icebp
mov
add
sbb
push
subb
sbb
lock
cmp
dec
ret
pop
icebp
mov
shrl
dec
and
sbb
imul
fadds
add
repz
loop
xor
add
or
push
test
dec
inc
scas
movsl
cmp
insl
aam
sub
les
dec
push
popf
lods
loop
leave
mov
mov
add
clc
dec
push
mov
adc
aad
cmp
out
insl
add
cvtdq2ps
jbe
mov
insb
mov
mov
das
dec
and
testb
lods
adc
lret
push
and
sbb
ss
out
aam
in
imul
ja
mov
mov
fsubrs
dec
imulb
pop
fs
insl
mov
out
pop
aad
xchg
fdivrl
add
aaa
cmc
push
mov
pop
and
inc
sahf
inc
xlat
loope
dec
jecxz
or
xor
pop
jge
inc
sbb
xor
mov
in
outsl
hlt
int3
arpl
aaa
ljmp
push
or
in
es
inc
fistl
stc
jle
stos
cmp
test
roll
popa
adc
pop
dec
push
mov
push
leave
jo
mov
dec
stc
nop
repz
mov
ds
fdivl
repz
das
push
ljmp
jno
in
loopne
pop
out
nop
daa
inc
adc
push
ja
mov
inc
mov
shrl
out
cli
xchg
adc
add
dec
mov
ss
outsb
aas
sbb
push
jmp
ss
hlt
push
inc
jb
jle
imul
xchg
nop
daa
mov
scas
inc
mov
mov
arpl
sub
jo
sub
xorl
or
testl
inc
fmull
inc
fstpt
pop
push
jmp
ficoml
pop
ret
repz
sub
out
xor
sub
push
imul
push
lret
out
test
cmp
jge
xor
mov
stos
subl
mov
dec
jae
pop
data16
scas
jb
in
leave
test
xor
jnp
mov
sub
mov
jbe
pop
in
pop
jmp
xchg
adc
add
mov
lret
add
dec
sub
outsl
fs
in
mov
adc
arpl
popf
xor
mov
mov
lods
inc
jae
nop
daa
sub
scas
inc
jbe
call
arpl
push
push
popf
ljmp
lods
cmpb
cwtl
stos
xor
gs
mov
sub
inc
fildl
sbb
outsb
stc
cmpsb
in
es
adcb
fildll
xor
data16
mov
enter
push
subl
pop
mov
js
push
stos
sbb
into
mov
xchg
imul
add
movq
scas
sub
sti
jb
inc
and
inc
mov
jne
lahf
xor
mov
fld
pop
adc
leave
pusha
mov
repz
scas
add
fistl
pop
xchg
or
xlat
sbb
inc
repz
and
dec
in
inc
or
jae
sub
push
xchg
cmp
aaa
push
out
popa
out
notl
subl
xor
or
sahf
xor
pop
fadd
pop
push
xorb
pop
mov
mov
hlt
arpl
cmp
and
rolb
or
push
aad
or
xor
xchg
rorb
xor
lods
inc
aam
mov
mov
sbbl
and
sub
ss
rcrb
fnstsw
inc
pop
mov
mov
mov
jns
shr
popl
dec
ret
fisttpl
sub
fcmovnbe
and
jnp
sbb
dec
stos
jle
stos
dec
sti
mov
loopne
and
into
pop
mov
sub
inc
pop
xchg
dec
sub
sbb
out
je
je
or
xor
jl
dec
cmp
mov
adc
stc
movsb
mov
and
popa
ret
outsl
scas
daa
leave
popf
into
pop
jge
adc
dec
lods
cli
imul
sbbb
subb
mov
loop
flds
lds
not
xchg
sbb
test
aam
cmp
xchg
xchg
andb
stos
cmp
sti
cmp
cmp
jecxz
jmp
cmc
movsl
lret
ret
cmpsb
fdivrs
fstps
cmp
jmp
nop
mov
dec
add
jg
js
sbb
cli
dec
mov
into
mov
xchg
aas
xchg
add
sahf
rcrb
cmp
and
data16
lds
push
sub
add
mov
pushf
cmp
insl
fsubl
insl
es
jns
pop
mov
adc
movsb
jge
xor
xlat
pop
mov
mov
leave
xor
mov
and
ficompl
cmp
movsl
pop
mov
stos
inc
cmp
pop
lahf
test
das
fisttps
jmp
idivl
pop
sbb
loop
call
fstpl
imull
cmp
sbb
sub
js
loope
loopne
jl
xchg
dec
imul
in
das
inc
lock
cmpsl
push
and
and
and
adc
sub
pop
mov
test
adc
aad
outsb
jnp
cltd
aad
pop
pop
pop
fistpll
nop
mov
add
pop
gs
in
int
daa
std
js
in
dec
lret
add
loopne
scas
dec
push
div
xor
aam
lret
and
test
cmp
sub
repnz
in
int
imul
add
jae
sbb
and
mov
cwtl
mov
cmp
aas
sub
test
jno
insb
icebp
lcall
pop
xchg
xchg
push
xor
lods
sbb
mov
and
mov
sti
mov
imull
lods
pop
xor
insb
lcall
jo
test
cmpb
sub
add
mov
in
pop
dec
shr
add
test
sbb
mov
fs
and
inc
push
in
orl
mov
dec
jne
aam
xchg
xor
lcall
push
std
test
fldt
outsb
and
in
imul
mov
push
imul
xchg
repz
cmp
andnps
mov
xchg
cmpsl
add
pop
outsb
lock
sarl
xchg
hlt
jns
stos
dec
adc
and
dec
pop
mov
cmpsl
call
out
dec
xor
lods
inc
mov
cli
mov
es
cltd
pop
mov
xlat
pushf
ljmp
sbb
cmpsb
js
negb
cmp
test
cmp
out
jge
sub
mov
jno
in
aad
push
cmp
jnp
mov
push
jno
es
addr16
int3
jbe
stc
add
jg
into
push
xor
je
cmp
cmpb
ja
test
bound
inc
mov
mov
push
outsb
cmp
push
pop
popl
fdivp
jg
ja
xchg
mov
fiaddl
pop
push
jns
icebp
rcll
test
adc
mov
push
shl
aas
push
sub
pushf
cmpsb
sar
mov
cwtl
out
and
push
mov
mov
outsl
xchg
sub
jae
out
stc
cmc
sbb
mov
adcl
inc
in
into
mov
daa
adc
jmp
lods
in
addl
xchg
mov
xchg
xor
jmp
add
lcall
jb
ret
imul
jno
xchg
and
and
aaa
mov
adc
dec
iret
cmp
nop
mov
in
xor
int
add
inc
aad
int
mov
fdiv
sub
sbbb
lret
mul
xor
jo
cmp
addr16
ja
mov
imul
sbb
fldenv
jo
mov
add
out
in
test
cmp
mov
jb
hlt
fidivrl
or
mov
adc
xor
std
sub
fcoms
ficomps
mov
int
shll
mov
add
inc
aas
mov
test
mov
repz
loopne
jecxz
mov
rcll
data16
repnz
add
sbb
mov
fdiv
mov
rol
push
adc
and
data16
jg
xchg
xchg
push
fisubs
mov
xchg
mov
and
imul
fcoml
scas
xchg
lahf
jo
out
idivb
std
push
add
lods
popf
push
cmp
mov
inc
mov
cmp
inc
ret
xchg
out
pop
push
mov
movsl
out
push
inc
sbb
scas
or
xchg
enter
xchg
rorl
les
push
mov
sub
dec
test
pop
fsubrs
and
xchg
insl
outsl
jle
mov
rorl
mov
lcall
cwtl
adc
std
imul
das
xchg
sub
push
popl
jne
fucomi
scas
leave
adc
mov
cmp
lds
cmp
cmp
push
sbb
mov
inc
jnp
pop
stos
pop
mov
test
mov
daa
mov
ljmp
sub
divb
fmull
push
fld
repnz
imul
gs
xchg
mov
repnz
iret
hlt
and
add
mov
jecxz
arpl
ss
pusha
dec
cmpsl
icebp
out
lods
outsb
xor
push
or
sahf
lret
and
sbb
dec
mov
and
pop
add
sub
add
pop
pop
lea
ret
mov
mov
insl
pop
xchg
and
fwait
mov
mov
ss
ja
rol
push
popa
enter
push
aas
pop
in
or
test
aaa
jo
cmp
dec
icebp
cmc
inc
rcr
mov
and
mov
mov
and
pop
insb
lcall
cwtl
mov
cli
inc
add
cmp
sub
fldpi
or
repnz
test
pop
sub
or
clc
lea
adc
shrl
xor
movsl
jle
lret
test
mov
out
mov
xchg
xchg
add
das
or
mov
pop
call
add
call
adc
mov
lds
cmp
in
jbe
in
test
add
inc
add
jp
push
decb
lds
dec
sbb
call
mov
or
ret
push
mov
dec
xchg
dec
lret
push
inc
hlt
sti
jle
or
jbe
mov
push
sbb
das
push
ficoms
add
xor
aaa
pusha
push
xlat
enter
xchg
psubw
insl
adc
pop
loop
mov
adc
cmp
jns
subb
jno
andb
mov
imul
mov
mov
lret
sub
add
movsl
sbb
loopne
outsb
repz
lods
lock
out
clc
mov
lds
push
or
jl
mov
adc
jecxz
sarl
arpl
lock
js
or
mov
mov
push
movsl
pop
push
push
into
jns
inc
arpl
loop
push
inc
popa
shlb
sub
jmp
lret
rorb
aas
flds
cmp
fwait
mov
dec
rorb
je
out
adc
adc
js
xchg
push
adc
push
shrl
out
mov
mov
and
adc
pop
daa
addl
outsl
pushf
push
sahf
mov
jecxz
cli
ficoms
loope
test
mov
sub
aaa
push
int3
cvtps2pi
xor
and
xor
scas
pop
aas
jle
inc
fistl
adc
jp
mov
das
loopne
jmp
xchg
arpl
shrb
mov
or
ljmp
jno
dec
sub
rcrb
xchg
in
fs
out
sbb
push
xchg
cmc
sbb
inc
xchg
add
inc
out
or
fistpl
xor
or
imul
pop
cltd
xor
out
and
mov
adc
jl
add
mov
movsb
mov
push
dec
mov
sbb
fwait
xchg
push
pusha
daa
pop
dec
jp
add
iret
xchg
adc
divl
jl
sahf
or
xor
jne
out
xchg
sub
mov
and
bound
rolb
arpl
mov
push
xchg
mov
jb
sub
rolb
stc
ja
aad
loop
hlt
cwtl
int
mov
mov
mov
sbb
aaa
out
cld
mov
fnstcw
imul
pop
sbb
ja
in
dec
rorl
aam
test
push
inc
xor
sbb
ja
dec
mov
mov
pminsw
jo
inc
mov
nop
inc
rcrb
lcall
mov
push
xor
push
push
jne
movsl
jnp
loopne
or
or
lahf
mov
mov
mov
dec
mov
pop
test
jo
add
into
out
lcall
cmc
cmpsl
ljmp
fbstp
sbb
sti
push
loope
lcall
inc
jae
push
mov
and
pop
push
stos
insb
testb
insb
mov
ljmp
mov
and
nop
stos
and
ss
push
pushf
mov
std
push
insl
push
jmp
fadd
inc
out
add
push
xchg
shll
ror
fmuls
or
fs
out
fists
add
or
push
imul
lods
les
movsb
sbb
out
cltd
jne
push
cmp
push
ja
inc
stos
mov
inc
pop
cmp
sbb
and
mov
mov
dec
int
test
push
adc
aas
pushf
loope
mov
dec
sbb
mov
lret
imull
mov
ret
scas
jl
frstor
sub
adc
stos
test
repz
push
bound
adc
add
jbe
shrl
cmp
xchg
test
sub
test
pop
sbb
in
xchg
imul
xchg
es
imul
je
push
add
enter
sbb
ret
cli
mov
mov
jb
jo
fs
ss
fidivrs
fists
pop
repz
scas
mov
sub
mov
mov
push
xor
ss
loope
jbe
mov
lret
fisubs
mov
pop
and
jae
pushf
iret
fldenv
mov
arpl
into
call
loopne
push
fcmovnbe
outsl
aas
push
hlt
and
out
lret
dec
pop
mov
loopne
sbb
jecxz
inc
xchg
aaa
lds
idiv
pop
sub
inc
xchg
lea
sarl
or
sbb
mov
pusha
jmp
fisubrs
enter
cs
cmp
cmp
std
out
sbb
repz
push
dec
mov
mov
cmp
and
mov
outsb
lahf
loopne
lods
mov
test
fistpll
mov
mov
daa
cmp
or
popf
xchg
leave
pop
adc
es
div
pop
pop
sbb
xchg
scas
stos
ljmp
testl
not
pop
pop
das
ljmp
push
in
ds
inc
sub
xor
imul
test
imul
shlb
pop
movb
sub
fcmovnu
ret
rorb
pop
adc
pop
in
jne
dec
jne
lea
ret
ja
sub
enter
pop
out
mov
ja
adc
mov
in
loop
es
into
xchg
lds
xlat
inc
cli
outsl
pop
push
pusha
or
xor
push
jno
xchg
xorl
sbb
ret
test
call
jg
icebp
jo
add
fiadds
or
fdivr
loop
cmpsl
not
gs
shll
hlt
fcomps
mov
add
sub
iret
xor
add
push
test
pop
es
aad
stos
inc
mov
pushf
lea
adc
in
outsl
adc
mov
imul
aaa
xchg
add
cmp
xchg
mov
cld
ljmp
rcll
adc
xchg
hlt
adc
sahf
rorl
cwtl
into
dec
xchg
std
adc
ljmp
xor
mov
enter
xor
cmc
and
and
testb
cmp
xchg
pop
sbb
cmpsl
xchg
ja
pop
dec
sbb
jae
add
rol
mov
testb
pusha
lods
movsl
shll
stos
sarb
fwait
dec
dec
out
repnz
mov
das
pop
xchg
out
fldl
cmp
adc
dec
jnp
test
dec
dec
stc
push
or
jb
or
fimuls
jo
cli
or
cmc
cmc
add
cmc
cld
lgs
arpl
adc
pop
sub
sub
mov
loopne
push
fidivrs
rcrb
xchg
pop
dec
enter
shll
movsl
xchg
std
adc
in
and
sbb
shl
jb
imul
pop
lods
out
dec
push
pop
pop
adc
das
mov
outsl
sub
cli
pop
pop
jnp
scas
inc
cmpsb
incb
cmpsl
sbb
js
xor
bnd
pop
sti
jge
pop
test
sub
popf
ret
movsb
push
mov
xchg
cmp
std
xchg
mov
shr
shrl
jecxz
xchg
sub
popa
pop
insb
mov
sub
addb
cld
jp
add
inc
insl
or
inc
imul
pushf
clc
fcoml
dec
pop
out
xchg
lret
or
loopne
and
pop
sbb
pusha
insb
push
and
hlt
and
rol
mov
mov
pop
pusha
xor
sub
daa
pop
shrl
adc
push
sub
aaa
pop
pop
inc
xchg
and
dec
cmp
stos
scas
dec
stos
outsl
outsl
ljmp
mov
or
bound
mov
das
hlt
mov
sti
int3
pushf
push
rolb
dec
fisubrl
cmpsl
mov
dec
aaa
outsl
xchg
push
or
lds
cmovae
aas
cmp
rcrb
out
repz
xor
fwait
or
in
test
sar
inc
xchg
out
mov
arpl
cs
repz
shlb
or
and
xor
xlat
push
test
leave
inc
lret
les
sub
xchg
gs
leave
aam
das
mov
addr16
mov
es
in
mov
or
pop
lahf
mov
sbb
and
push
pop
bound
sbb
xor
mov
cmp
sarl
dec
add
pop
cmpsb
std
lret
pop
sarb
jno
mov
push
or
push
mov
or
rorl
call
mov
push
add
push
mov
xor
lds
jo
and
adc
mov
xor
ret
jge
test
test
js
sahf
int
shll
xor
jbe
and
dec
and
mov
sub
pop
and
out
test
xor
sub
inc
ljmp
mov
inc
adc
insb
cmc
icebp
dec
std
adc
loope
jne
sub
dec
fisttpll
aas
mov
aam
stos
stos
jnp
scas
push
into
pop
mov
cmp
into
lret
insl
xchg
push
inc
pusha
mov
mov
je
xchg
sbb
outsb
push
jp
inc
fcomi
stos
and
inc
and
int
arpl
out
xchg
fwait
outsl
pop
jns
movaps
xchg
push
fbld
popa
mov
das
ds
pop
pop
adc
sub
es
push
fdivrs
or
add
scas
xchg
pop
push
pop
push
push
nop
mov
pushf
cmp
xor
xor
or
dec
or
xchg
mov
dec
std
fisttpl
lods
adc
dec
imul
cmpsl
xchg
pop
xor
xchg
xor
inc
out
aad
imul
push
and
pop
mov
sti
jo
or
imul
jmp
add
jl
xor
pop
dec
testl
inc
dec
insl
jno
mov
add
call
je
xorb
gs
jnp
mov
sub
sahf
sub
mov
es
inc
mov
xchg
sub
jge
fsubr
movsb
jae
div
scas
push
push
sub
or
stc
sub
xor
addb
sar
mov
push
es
xlat
lods
stc
cmpsl
pop
and
push
test
sbb
mov
adc
ror
outsl
push
and
aad
stc
or
movsl
sub
icebp
loopne
andl
adc
xor
xchg
fwait
ucomiss
push
cmp
jge
ljmp
dec
push
fxch
je
jne
pop
ficomps
mov
adc
rorb
outsl
dec
in
push
test
jecxz
pop
je
fstpt
popa
sub
dec
sahf
movsb
or
dec
adc
add
aad
jno
xchg
out
push
in
out
mov
xor
xchg
test
jle
mov
jl
and
sbb
ret
into
lea
cs
scas
cmp
xchg
add
lcall
in
lret
mov
ret
out
insb
mov
stos
xchg
lea
cmp
dec
jg
mov
cmp
mov
pop
arpl
jp
enter
jne
fcompl
add
std
xchg
cmp
popf
scas
aaa
xor
int
dec
leave
xchg
push
sub
into
cmp
push
lret
xchg
out
xchg
jl
popf
pop
sub
add
sbb
mov
andb
dec
inc
dec
movsb
mov
jecxz
dec
outsl
jge
mov
negl
dec
jno
cwtl
fwait
scas
fistpll
inc
fstps
adc
ret
movsl
scas
mov
in
movsb
cmp
adc
std
cmp
sbb
mov
pop
jbe
loop
lds
cmp
inc
fs
out
jmp
adc
enter
fsubrl
ss
sahf
and
push
mov
cmovl
mov
into
push
aaa
inc
int3
daa
les
or
movsb
pushf
mov
in
hlt
test
mov
loopne
add
stc
pop
pop
ljmp
mov
arpl
test
aam
mov
int
inc
idivl
and
imull
pop
pop
pushf
fisubs
popf
mov
cmp
div
mov
mov
rorb
ja
stc
aas
xor
out
cmp
mov
push
insb
inc
dec
add
lret
adc
in
cmp
jp
call
jecxz
xchg
es
and
aad
gs
rorl
fnstsw
enter
imul
addl
pmulhw
jl
cmp
mov
push
jl
push
mov
pop
jb
cwtl
aaa
pop
sbbl
sub
rclb
mov
mov
and
mov
inc
js
icebp
daa
xadd
sti
xor
push
inc
in
mov
rcr
jg
idivl
pop
push
call
inc
mov
fwait
aaa
jne
mov
dec
mov
int3
in
fistps
jmp
sbb
push
dec
add
popa
cltd
fmull
mov
push
aad
lahf
shlb
sahf
aad
inc
imul
cmpb
adc
aas
in
pop
mov
ja
rcl
out
push
and
in
sub
jg
adc
mov
xor
jg
gs
jns
mov
loop
push
mov
movsb
mov
push
dec
cwtl
add
cmp
add
mov
inc
dec
pop
repz
fsubrl
xlat
sbb
sbbb
lea
dec
mov
push
xchg
call
sbb
icebp
push
pushf
mov
push
or
pusha
rclb
rcll
xorb
cmpsb
push
inc
mov
das
dec
jp
xchg
in
and
mov
xchg
cld
sub
xor
dec
xchg
lahf
mov
test
or
add
mov
mov
aas
xchg
adc
adc
push
mov
bound
inc
jnp
cmp
mov
lret
pop
push
adc
xchg
or
stc
imul
push
mov
xor
pop
sti
addr16
add
mov
ljmp
sti
jb
mov
stc
lret
insb
repnz
test
dec
ret
aam
in
jp
movsl
mov
data16
mov
jl
fistpl
cltd
mov
ret
scas
mov
push
enter
mov
cmp
fnstenv
mov
mov
cwtl
cmp
or
xchg
sbb
lcall
inc
jnp
add
int3
dec
aam
sbb
sbb
cmpsl
cltd
and
in
xlat
inc
outsl
call
fs
mov
mov
imul
pop
cs
or
xchg
call
jb
xchg
je
test
mov
xchg
cltd
mov
sti
sahf
cmp
setnp
mov
loop
sub
and
jae
lret
aas
adc
inc
or
xchg
loopne
testl
ds
rol
push
addb
jg
dec
sub
mov
cmp
repnz
or
mov
mov
or
add
in
mov
push
sti
ffreep
sbb
iret
popa
int3
jne
ss
pop
dec
and
xchg
hlt
mov
inc
fidivrl
mov
das
dec
jp
lahf
sbb
or
xorb
sbb
jnp
dec
test
and
push
in
cmp
jge
sahf
pushf
cwtl
mov
mov
pop
cmp
xor
mov
fistps
jp
jle
int
imul
fistpll
push
int3
inc
xchg
out
adc
ljmp
push
mov
test
pusha
xlat
sbb
or
xor
dec
dec
adc
ret
mov
fists
dec
and
out
lods
nop
mov
sbb
sbb
pusha
cmp
les
aad
dec
shll
pop
mov
pop
outsb
add
out
or
mov
sbb
jo
or
add
adc
cmp
sarl
and
or
test
and
es
jae
or
stos
mov
mov
adcl
xor
neg
dec
loop
scas
add
push
inc
xchg
xor
push
gs
roll
add
push
sti
mov
pop
add
push
adc
xchg
adc
das
dec
mov
adc
stos
xor
shll
or
xor
js
add
jle
mov
sub
fldt
leave
xchg
hlt
jl
xor
add
mov
dec
sarb
lea
jne
mov
mov
sti
mov
outsb
adcb
das
lock
adc
jo
push
and
jge
mov
jle
or
test
sub
ja
flds
cmp
pop
out
xchg
mov
outsb
rol
push
mov
jmp
sti
xchg
insb
test
or
loopne
fistpll
dec
push
xchg
sbb
fbstp
mov
add
adc
dec
ljmp
stos
and
xchg
js
scas
cltd
dec
pop
test
ficoms
gs
pop
cltd
lock
pusha
mov
mov
jge
in
xor
ret
lcall
dec
lds
dec
int
jg
push
lahf
sar
stos
xor
jge
xor
mov
xchg
ret
iret
stos
gs
shl
or
notb
xchg
push
pop
nop
call
push
cwtl
arpl
push
adc
and
scas
push
and
out
mov
adc
je
data16
cmpsb
fbld
movsl
ljmp
fxch
rclb
dec
mov
mov
jl
fidivs
push
xchg
imul
or
sbb
sbb
push
xor
mov
aam
clc
or
call
ds
leave
or
add
mov
adc
andl
mov
repz
stc
bound
jb
inc
into
push
stos
xchg
loopne
push
outsl
mov
inc
xchg
mov
ficomps
mov
add
loop
popa
inc
push
orl
add
in
inc
lea
loope
dec
push
rclb
pusha
mov
cmpsb
xchg
sbb
push
xchg
cmp
pop
and
js
and
jo
les
add
jno
cmpsl
inc
mov
loope
scas
in
or
pop
sbb
inc
ret
in
sbb
sbb
pop
lahf
add
pop
jnp
xor
cmp
lds
scas
out
or
xor
scas
imul
mov
out
pop
shlb
cmpb
lcall
arpl
mov
popa
aas
lods
mov
ljmp
fldcw
add
adc
add
sarl
cmc
bound
sbb
and
mov
cmpsl
dec
lcall
iret
lret
shrb
outsb
inc
rcll
mov
jnp
in
inc
cmp
xor
div
test
cmp
rclb
lds
lods
push
adc
decb
mov
out
jae
fcom
cwtl
mov
sub
push
outsl
movsl
pop
xor
aaa
push
dec
aas
push
push
cltd
sti
push
jmp
sub
dec
xor
jae
outsl
or
cmp
cmpsl
lahf
lock
mov
jg
push
jb
ja
sbb
das
sbbl
sub
aam
ret
aas
sbb
bound
clc
mov
pop
bound
fwait
push
add
lahf
adc
subb
inc
adc
sbb
add
repz
and
mov
or
int3
repnz
jns
adc
mov
pop
enter
push
jo
or
data16
sub
call
pushf
sti
sti
stc
pop
cld
les
stc
sub
loope
popa
into
jnp
cltd
jl
scas
into
cli
xchg
in
lods
push
xor
jge
mov
stc
ret
sub
pop
nop
jb
adc
in
mov
nop
jecxz
ret
xorl
push
add
ret
push
imul
ljmp
cmpsb
mov
aam
addr16
and
das
scas
inc
mov
jnp
imul
rol
sahf
rol
push
outsl
cmp
xlat
or
mov
jl
jns
jmp
imul
jge
push
inc
fs
lds
push
fs
out
mov
fs
cmpsb
xor
sarl
fildl
fists
jmp
sti
cmp
nop
push
dec
sbb
call
or
sub
push
cli
inc
pop
in
add
sub
ljmp
xor
testb
jbe
xor
mov
jns
fucomi
dec
push
push
sbb
lock
cltd
xchg
mov
mov
int3
cltd
call
test
loope
inc
lock
xor
sarb
or
daa
ss
mov
xchg
lock
jmp
test
arpl
adcb
cmp
cwtl
cmpsl
or
jno
int3
dec
mov
das
scas
cmp
or
roll
push
outsb
into
mov
cwtl
es
pop
adc
fnstenv
cmp
rcl
xchg
ss
jge
cmc
or
mov
idivl
stos
jns
insb
popf
add
pop
idiv
out
enter
add
xchg
pop
and
fwait
dec
scas
push
adc
inc
out
loop
cmpb
and
sbb
clc
add
push
mov
data16
xchg
adc
lods
inc
mov
xor
xchg
or
jmp
nop
or
cmp
nop
daa
mov
inc
loope
sbb
mov
into
gs
cmp
ficoml
test
test
outsl
push
jg
lds
mov
rorl
fistpll
scas
inc
mov
enter
sbbl
fwait
loope
int
cmpsb
cmp
pop
cltd
les
das
adc
add
stos
and
xchg
pop
int3
push
in
std
jg
mov
push
jne
push
sarl
add
sub
mov
divl
adc
enter
imul
popf
sbb
mov
mov
shl
repz
adc
lahf
inc
mov
add
pushw
mov
pop
xchg
sub
mov
cmpsl
mov
pop
out
cmp
imul
add
js
scas
xchg
sub
push
sti
xchg
test
test
mov
xchg
inc
fldt
test
stc
jnp
add
iret
dec
and
and
mov
hlt
and
fidivl
inc
jnp
ja
clc
sbb
cltd
xor
cmp
mov
int3
sarl
jne
loop
ljmp
in
test
stc
push
mov
data16
pop
repz
push
call
lret
sub
sub
mov
ret
xchg
std
xchg
les
push
sub
inc
in
scas
inc
push
imul
gs
pusha
imul
xchg
scas
inc
int3
push
mov
test
pop
jge
test
outsb
add
filds
push
movsl
cmp
out
test
pop
xchg
test
ds
cmpsb
scas
inc
loopne
lds
push
in
negb
jp
pop
das
push
cmpsb
aaa
into
fbstp
or
int3
out
negb
xchg
cmpsb
movsb
cmp
jb
imull
int3
push
jmp
pop
inc
fadds
cmpsb
test
aam
add
cmp
sbb
test
mov
cmpsb
outsb
add
xchg
add
cmp
sbb
cmp
pop
lret
bound
test
sub
test
ret
pop
cmpsl
aam
loope
fwait
xor
sub
cmp
pop
icebp
mov
test
test
inc
repz
mov
repnz
add
out
ljmp
sbb
push
fwait
cmp
les
dec
jecxz
in
scas
push
mov
lods
push
mov
mov
movsl
cmp
aam
sbb
jnp
lret
movsb
das
iret
pop
lds
jne
and
test
lds
ja
and
sbb
jnp
and
add
jnp
and
insl
pop
sbb
cmpsb
and
jmp
movsl
and
pop
popf
xor
jl
mov
and
aaa
into
jnp
mov
shlb
jnp
lods
movsb
and
pop
lds
jnp
and
cmp
gs
and
outsb
out
jnp
mov
adc
ljmp
push
xchg
and
pop
mov
ss
jecxz
adc
insb
ljmp
xchg
and
mov
icebp
jp
pop
movsb
adc
dec
lds
in
pop
mov
mov
push
jecxz
adc
push
icebp
imul
xchg
adc
inc
out
imul
aaa
mov
cld
out
pop
or
adcb
out
dec
mov
in
xchg
std
in
es
jg
pop
hlt
cmp
xchg
and
sbb
xor
xchg
fisttpl
hlt
je
les
xchg
data16
iret
dec
ja
jae
fnsave
in
or
cmpsb
cmp
sbb
and
popa
loop
or
mov
fucomp
addl
jbe
shll
jbe
loope
hlt
sbb
push
in
popa
ficoms
or
sbb
push
fstl
data16
sub
push
int
jg
je
adc
iret
sbb
outsb
stos
pop
jnp
push
lret
xor
repz
rep
adc
decl
pop
repnz
outsl
fbstp
sbb
je
mov
lcall
rcrb
pop
ja
xchg
add
and
lahf
repz
sub
imul
dec
mov
ja
pop
hlt
inc
cwtl
testl
pop
mov
cmpsl
jnp,pt
mov
inc
pushf
push
out
bound
out
push
and
adc
xor
outsl
push
lds
sbb
mov
hlt
in
inc
dec
out
push
arpl
cmp
fdivl
out
and
push
out
add
cmp
jb
and
cmpsl
pop
movsl
sbb
push
jnp
jb
es
push
out
dec
pop
hlt
jb
pop
mulb
xchg
push
jmp
jp
fnsave
lahf
ss
cmp
out
test
mov
outsb
add
add
cmp
push
loop
jno
jbe
sahf
mov
ret
jne
notb
int3
arpl
in
and
xchg
inc
ljmp
cwtl
inc
xlat
rolb
push
xor
push
fnstenv
dec
pop
repz
add
and
mov
push
jle
shrl
lahf
adc
enter
aad
out
xchg
imul
xorb
lods
inc
outsl
push
push
mov
xor
xor
xor
mov
add
mov
lahf
ss
cld
xchg
das
xor
mov
mov
jbe
cmpsl
cmp
rcr
out
or
dec
fbld
cs
pop
inc
gs
js
testb
into
sbb
sbb
das
dec
cmp
stc
cltd
mov
jb
mov
add
dec
ss
scas
imul
out
rorl
add
jne,pn
pop
pop
notl
lods
mov
aad
hlt
notl
and
xorb
stos
lods
xchg
fld
gs
xor
xchg
xor
pop
mov
dec
mov
ror
pop
push
std
fldcw
fldt
push
out
js
jle
mov
cli
mov
repz
leave
das
pop
or
jg
pop
mov
xchg
push
lock
mov
fucomip
loope
and
or
cmp
push
nop
push
add
xchg
cmpsb
xchg
xor
push
adc
sub
inc
icebp
xchg
jl
je
repz
pop
test
push
cmpsl
inc
inc
loope
mov
xchg
push
cmp
nop
mov
dec
fiaddl
push
shlb
xor
pop
data16
lods
xchg
xor
adc
push
cld
pusha
and
dec
notb
adc
lods
cmp
push
fisubrs
push
fidivrs
cmpsl
sbb
cmp
push
stc
push
ficompl
bound
cmpsb
sub
filds
mov
mov
dec
into
mov
or
xchg
mov
ficoml
mov
scas
cmovo
inc
inc
out
std
jge
lcall
mov
imul
adc
sbb
inc
mov
and
cmp
xchg
mov
dec
and
pusha
ficomps
ficompl
rol
jb
enter
cmc
adcb
jns
jno
sahf
inc
in
xchg
mov
aad
or
push
in
xorb
test
in
and
sbb
sub
xchg
ja
xor
or
fsts
fistps
insl
dec
in
mov
fnsave
repnz
testl
push
inc
aam
mov
jmp
shld
cs
xchg
xor
inc
push
hlt
jge
shlb
jg
shll
xchg
mov
iret
and
adc
xor
bound
mov
jo
lret
fsubl
dec
ljmp
cmpsb
or
mov
sub
cmp
dec
inc
jmp
pusha
cmpsb
subl
adc
insb
xor
bnd
inc
add
push
mov
out
shll
jp
in
cs
hlt
cmp
mov
rorb
stos
dec
mov
ret
fstps
stos
jg
in
jbe
sbb
testb
int
add
cmp
mov
ss
aam
inc
add
loope
push
stc
lret
imul
mov
fnstcw
les
shlb
sti
dec
pop
fldl
dec
in
or
mov
clc
push
mov
loop,pt
jg
cmpsl
add
pop
xor
push
in
mov
mov
pushf
fisubrl
jno
sti
and
repz
cmp
jle
and
shlb
enter
pop
and
mov
in
cmp
cwtl
das
leave
pop
fs
mov
sahf
xor
loope
in
subl
fdivs
nop
jp
ret
jbe
jecxz
iret
adc
cmp
dec
addr16
pop
repnz
jns
jle
icebp
mov
mov
adc
and
inc
loope
js
dec
filds
es
in
in
sub
rep
aas
or
cld
xchg
test
nop
dec
jecxz
pop
adc
cmp
jl
ret
hlt
popl
lcall
and
popf
sub
pop
cmpsb
adc
into
or
cmp
dec
in
add
decl
pop
mov
adc
movsl
in
out
mov
mov
test
lret
mov
cli
xchg
lahf
test
jns
xchg
sub
inc
add
enter
jns
dec
je
insl
xchg
imul
fmul
xchg
sub
cli
adc
push
cmp
shlb
adcl
loopne
test
and
push
movsl
dec
inc
xchg
sub
imul
pop
fcomi
adc
sub
enter
lcall
adc
pushf
hlt
outsl
push
addr16
mov
nop
aas
rol
push
inc
mov
aam
push
lods
inc
xchg
fidivl
repnz
dec
ss
xor
repz
lret
es
or
xor
pop
sub
mov
pop
out
xchg
sbbl
leave
mov
adc
ljmp
je
adc
jno
out
gs
cmp
sub
popf
xchg
cmp
inc
jnp
test
sub
add
xor
mov
and
push
lods
inc
sahf
cltd
into
gs
sbb
jmp
je
lea
adc
lea
and
mov
push
jmp
dec
jo
mov
lret
movsl
sub
inc
push
xor
shll
shll
jae
push
movsl
inc
fimull
out
push
and
outsl
pop
jns
cmp
sbbb
stos
mov
mov
mov
ljmp
icebp
outsb
mov
pusha
xchg
scas
clc
sbb
mov
and
mov
jae
call
or
sub
and
push
pop
scas
inc
jne
adc
enter
add
xchg
sbb
push
jo
lock
ret
hlt
notl
sub
add
inc
dec
out
test
add
int
lock
fbstp
inc
sbb
xchg
xchg
sbb
mov
stc
call
or
cmp
lahf
imul
fnstcw
movsl
arpl
fucomp
mov
cmc
push
add
inc
cmp
jle
icebp
addb
mov
mov
jmp
dec
adc
mov
mov
or
ljmp
out
dec
movsb
xchg
repz
xor
cmp
dec
lods
mov
sub
add
mov
mov
jecxz
lret
push
or
lret
idivl
and
cmp
xor
hlt
lahf
sbb
dec
pop
sbb
leave
xchg
mov
notb
inc
outsb
xchg
fsubrl
and
int
dec
sbb
sub
jl
lcall
popa
adcl
and
pop
leave
add
adc
push
dec
imul
lods
scas
movb
xor
or
movl
mov
mull
cltd
in
or
xor
pop
jmp
mov
or
bound
jbe
dec
test
jmp
push
lahf
mov
push
cli
sub
sub
adc
js
xor
xor
inc
push
ljmp
jbe
cmp
cmpb
sub
fbstp
mov
xchg
lds
icebp
mov
leave
or
adc
imul
dec
mov
mov
aad
jns
inc
mov
xor
test
sub
mov
int
lds
repnz
shll
mov
add
enter
cmp
and
inc
fstl
jbe
lret
jp
js
or
sbb
repz
mov
in
lds
lock
mov
inc
fldl
daa
mov
mov
int3
pop
incb
add
imul
xchg
cli
cmpsb
cmp
rep
cmp
sbb
aad
and
mov
mov
sti
ds
cmp
shlb
sti
aad
mov
arpl
pop
cmpsb
cmp
mov
pushf
xor
mov
cmp
xor
xor
cmpsb
mov
jnp
pop
pushf
xor
sbbl
movsl
cmp
inc
and
ja
cltd
xor
ret
pop
shlb
cmpsb
cmp
sub
lcall
movsb
cmp
xchg
xchg
sub
call
mov
jnp
cmp
mov
and
pop
push
xchg
sub
and
cmpsb
cmp
cmpsb
cltd
mov
or
mov
add
and
pop
loopne
and
js
and
ret
repz
and
sbb
cmp
popa
and
fistpll
cmpsb
cmp
cmp
add
rcll
xchg
stc
test
inc
fnstenv
mov
mov
andl
sbb
fsub
jge
repz
and
ret
pop
orb
add
and
sub
lds
pop
negb
fldl
int
add
mov
in
mov
sbb
mov
loop
mov
ret
loopne
sbb
loope
xor
cmp
mov
addb
lock
stc
adc
add
mov
andl
lret
fcoml
or
jne
cmp
jns
subb
mov
popf
xor
loopne
mov
fidivrl
repnz
das
mov
mov
mov
add
mov
int3
loop
lcall
inc
dec
pop
xchg
add
mov
xor
pop
in
aaa
fwait
xor
stos
xlat
outsb
sbb
add
sub
mov
insl
add
inc
fsubl
dec
cmp
jns
cmp
pop
lods
stos
test
mulb
mov
xchg
inc
lds
mov
stc
int
rclb
add
pop
repz
mov
fdivrl
aam
jns
sbb
pop
mov
test
iret
mov
mov
xchg
les
mov
cli
push
sbb
pushf
test
shll
test
fisttpll
mov
js
mov
xchg
mov
ror
les
and
jmp
sbb
pusha
mov
es
pop
mov
pop
int3
arpl
es
bound
mov
cwtl
leave
pusha
or
dec
test
cmp
out
sub
pop
call
js
popa
jg
mov
int3
sbb
ds
les
lret
gs
mov
mov
cwtl
and
js
pop
cmp
cmpsb
xchg
mov
test
fistpll
loope
lods
idivl
sbb
fsubrs
cmp
mov
lahf
mov
or
test
mov
cmp
pop
and
iret
data16
aad
lret
incl
or
jns
sub
xchg
pop
jns
or
cwtl
das
test
and
hlt
pushf
mov
nop
pusha
push
dec
data16
inc
jp
add
hlt
lds
mov
call
jmp
ret
dec
fistps
mov
jbe
shlb
ret
adc
in
test
push
mov
jno
bound
xor
push
add
xor
lea
or
movsl
xlat
cmp
scas
ljmp
mov
and
push
lea
inc
xchg
movsl
pop
out
aad
insl
add
std
out
test
sbb
mov
jnp
mov
and
cltd
and
mov
inc
jge
sbb
sbb
test
lret
push
lods
mov
mov
cs
lret
cmpsb
scas
in
pop
pop
scas
xchg
sub
inc
pop
divb
push
movsl
xchg
pushf
clc
iret
rclb
sbb
and
fs
and
mov
mov
jmp
mov
bound
mov
mov
fcomps
mov
inc
adc
dec
push
xor
out
aam
lahf
jbe
stc
lods
inc
ljmp
sbb
jb
andb
mov
rcrl
sub
dec
adc
dec
xchg
xchg
jle
mov
mov
push
movsl
dec
sub
test
add
lock
ljmp
lea
xchg
loope
movsl
rol
sub
repnz
jg
sbb
dec
push
push
cs
call
cmp
xor
push
jmp
push
test
pop
mov
jo
pop
jnp
push
push
jg
inc
xchg
gs
push
imul
pushf
inc
mov
inc
call
add
xor
out
test
cmpsb
ret
ficoml
and
sbbl
jns
push
jmp
ret
pop
daa
in
inc
fstps
xor
add
ret
or
outsb
jl
and
aam
xor
pop
fs
xchg
sub
mov
shl
psrld
add
test
movsl
cmp
mov
mov
mov
in
or
and
fsubrs
andb
sbb
pop
insl
mov
gs
push
mov
lods
daa
addb
mov
aad
cltd
fsubl
cmpsb
int
inc
fsts
lret
bound
ret
mov
sbbb
mov
and
test
movsl
ffreep
pop
ror
gs
std
adc
adcl
push
mov
movsb
cmp
mov
mov
jl
flds
pop
sbbb
or
push
jg
and
sar
mov
daa
pushl
lds
inc
xchg
leave
pusha
enter
aad
outsb
add
mov
scas
inc
mov
mov
dec
loopne
xor
inc
cmpsl
cmp
test
inc
ficompl
test
inc
dec
loopne
lds
nop
inc
flds
cmp
test
add
mov
movsl
scas
inc
push
sub
inc
pop
push
inc
flds
dec
loopne
jne
inc
data16
in
testb
fwait
dec
fucompp
orb
test
sub
inc
xlat
in
jg
mov
sbb
inc
fiaddl
popa
jl
xchg
and
clc
push
fmuls
push
test
lret
cld
in
clc
sbb
hlt
mov
jo
outsl
mov
ret
cmc
mov
movsb
xor
push
adc
sub
lret
insb
add
mov
lea
rorb
jae
cmp
test
and
inc
leave
pop
jbe
stos
inc
in
in
into
add
pusha
cmp
stc
xchg
and
xchg
or
sti
daa
mov
and
fadds
test
fstpl
sbbl
push
lahf
xor
mov
mov
clc
xlat
outsb
sub
adc
jle
lds
adc
mov
cmove
jne
mov
bound
cmpsb
cmp
sbb
les
pop
test
cli
push
jg
fwait
scas
inc
in
xor
mov
xchg
test
inc
faddl
sbb
sahf
dec
cmp
aas
mov
pop
repz
add
mov
inc
pop
les
andl
mov
fwait
es
int3
arpl
push
mov
xchg
aam
test
sub
test
je
push
jmp
lahf
and
inc
cld
add
stc
dec
movsb
cmp
test
out
xchg
inc
fcmovb
out
mov
loope
in
sbb
fbstp
sbbl
adc
and
mov
sbb
or
and
pop
hlt
mov
jae
mov
mov
inc
ficompl
mov
movsb
je
jnp
cmpsl
fnstenv
rolb
mov
and
pop
fwait
push
mov
jbe
pop
test
xor
stos
ret
repz
lret
sbb
dec
or
arpl
lock
mov
pop
lock
sbb
jnp
arpl
push
sbbl
xchg
pop
repz
and
icebp
push
pop
hlt
inc
sbb
pop
dec
jbe
lock
lcall
out
dec
fs
aas
pop
fnstenv
ds
lock
jle
test
sbb
xchg
or
sti
push
pop
out
xchg
pop
cmc
subl
stc
and
pop
hlt
inc
push
and
hlt
scas
les
negl
out
fs
cmp
dec
loope
push
add
mov
dec
jecxz
incb
das
stos
pop
hlt
sbb
jnp
sub
fwait
xchg
mov
ret
stos
pop
cmc
sbb
pop
mov
pop
push
jmp
cmp
lock
orl
call
out
fucomi
jg
out
pop
icebp
fbld
jg
pop
push
push
in
nop
jb
scas
mov
lret
scas
inc
std
lret
mov
into
push
out
shlb
repnz
fwait
out
push
adc
cmp
mov
inc
fiaddl
mov
jnp
xorb
add
mov
stc
mov
dec
loope
sti
arpl
sub
xor
cld
inc
add
ja
push
lods
sbbb
add
sub
insb
dec
inc
jecxz
jne
cmpsl
ds
test
iret
pushf
cli
xchg
psubsb
mov
xor
les
inc
cmp
mov
mov
add
pop
dec
push
in
cmp
dec
inc
fnstsw
dec
adc
jp
dec
jg
inc
xor
bound
push
pop
les
cmp
cli
push
xchg
int3
jnp
fwait
lods
push
in
lock
mov
je
inc
faddl
adc
clc
imul
popf
or
jge
test
shrb
mov
inc
adc
pop
pushf
mov
daa
and
arpl
call
add
and
mov
pop
pop
cmpsb
inc
cltd
les
repz
and
push
mov
and
push
shrl
mov
aam
or
and
mov
fmuls
ret
mov
subl
pop
mulb
sbb
nop
and
inc
shrl
mov
aam
cmp
es
fcoms
jne
ljmp
fsubrp
mov
fdivrp
push
mov
push
testl
jge
mov
push
testl
outsl
ss
outsl
testb
arpl
push
jle
dec
mov
int3
adcb
dec
nop
daa
aas
and
out
mov
cld
xchg
iret
mov
and
out
inc
sub
fbstp
inc
js
xchg
xchg
sub
lods
inc
fucomp
pandn
add
xchg
sub
fidivs
fdivl
sub
fadds
das
mov
out
sahf
movsl
into
gs
mov
outsb
add
xor
lds
cmpsl
ds
stc
xlat
aas
inc
fldcw
scas
out
and
cmp
sbbl
ret
xlat
pop
scas
jmp
jns
pop
scas
inc
js
test
jnp
ljmp
call
pop
or
stc
push
push
and
lods
test
cmp
mulb
and
push
sbb
mov
mov
xchg
push
and
mov
push
jns
pop
stos
addr16
pop
ret
stc
hlt
push
mov
dec
outsb
mov
popa
addr16
xchg
gs
add
jmp
mov
aam
cmp
push
test
mov
shll
xor
loope
loope
inc
or
insl
cmp
addr16
jno
test
push
lods
fbstp
stos
inc
test
mov
sub
gs
lret
inc
push
or
nop
fwait
adc
int3
popa
clc
mov
scas
loope
and
xchg
dec
gs
stc
test
push
in
mov
fdiv
mov
gs
lock
sub
jne
xor
mov
gs
cmc
insl
or
and
push
add
jb
push
lods
scas
test
outsb
test
dec
in
adc
out
inc
xchg
data16
insl
lock
mov
push
jmp
add
mov
mov
movsb
loop
pop
cmpsb
popa
clc
xlat
push
dec
out
incl
popf
xor
cmp
inc
fst
repz
jmp
js
call
xchg
lea
inc
fcmovb
inc
sbb
orl
xchg
xchg
js
and
pop
ss
pop
push
andb
ljmp
or
jge
jge
mov
leave
pop
jb
fisubs
loopne
add
insl
add
sub
in
jae
mov
mov
pop
add
or
pop
shr
mov
push
sahf
mov
lret
std
jne
ret
inc
fildl
xchg
sub
inc
push
sub
daa
mov
mov
sbb
ret
push
add
out
mov
add
cmp
inc
fistpl
stos
fwait
xor
pusha
imul
sub
test
ja
les
lahf
and
stos
out
pop
sbb
arpl
arpl
arpl
add
mov
fsubrs
push
and
loop
xchg
sbbl
mov
dec
fistpll
fmull
and
mov
push
daa
or
mov
push
call
or
mov
mov
xorb
movsl
ret
cli
xchg
mov
dec
mov
sub
lods
subl
mov
loopne
mov
in
insb
add
adc
mov
icebp
mov
mov
jp
sub
hlt
mov
mov
mov
xorb
pop
cmc
dec
sub
xchg
in
hlt
mov
mov
call
mov
rcrb
mov
mov
jp
scas
pop
hlt
loopne
sbb
cmp
in
mov
lret
mov
into
fbstp
jmp
xor
or
mov
fnstenv
cmpsl
pop
out
fdivrs
out
xchg
dec
mov
jg
or
movb
pushf
sbb
adc
jne
mov
jo
addb
or
test
or
and
adc
cmpb
mov
fnsave
lds
adc
push
mov
repz
rclb
test
fsubs
xor
pop
repnz
jecxz
jne
or
lods
movsb
push
jmp
adc
sti
jae
insl
xor
in
jbe
shlb
fildl
mov
inc
adc
shll
loop
fistl
test
ret
mov
mov
mov
mov
test
sub
push
iret
out
bound
sbb
cwtl
or
adc
inc
aam
mov
sbb
dec
fcomi
add
and
popf
stos
add
xor
inc
aad
cmp
popa
pop
push
sub
rclb
mov
sub
movsb
and
shlb
mov
ret
xor
add
loop
xchg
cmpsl
sbb
jae
pop
jmp
inc
and
inc
sbb
push
jnp
mov
cmp
mov
xchg
test
xor
xchg
mov
repz
test
ljmp
mov
jg
ret
mov
pop
repz
jecxz
and
andb
cli
orb
sbb
aas
aaa
adc
inc
aas
cmp
test
mov
push
or
ret
outsb
xchg
nop
out
js
push
js
xor
ret
xchg
mov
or
rorl
addl
or
lods
int3
adc
out
aam
fildl
lret
adc
mov
test
test
inc
std
subb
into
fwait
arpl
jne
lock
mov
push
cld
adc
out
sahf
pop
jae
mov
cmp
in
movsb
fwait
cmp
jbe
mov
aas
rcrb
sub
mov
or
or
and
fld
and
cmpsb
mov
inc
jno
and
shr
rorl
push
hlt
fdivs
rcrb
cli
in
lahf
outsl
inc
mov
shlb
xor
test
xlat
jae
bound
mov
pop
inc
cli
lods
ret
iret
xchg
push
or
mov
jb
out
xlat
outsb
and
cmc
mov
scas
sub
xor
enter
out
cmp
imul
mov
add
xor
push
pop
hlt
mov
pop
repnz
test
jns
mov
xchg
sub
pop
std
mov
das
sub
imul
iret
icebp
lea
add
mov
push
mov
aad
leave
push
lock
and
push
out
inc
pop
icebp
jae
outsb
add
popf
je
sbb
mov
push
inc
sbb
jo
insl
ret
push
adc
sub
das
mov
dec
jecxz
dec
in
add
push
mov
sbb
xchg
pop
mov
or
inc
fdiv
sub
rcrb
inc
jge
fisubrs
jb
out
mov
bound
cs
dec
call
or
insb
cmp
sbb
cmc
mov
daa
cmp
xchg
push
in
cmpl
mov
fwait
or
push
push
in
xchg
js
cmpsl
add
fxch
call
sub
push
mov
dec
mov
rcrl
rcrb
icebp
jnp
and
cltd
xor
xchg
sub
leave
mov
insl
sbb
push
push
mov
icebp
test
xchg
sahf
sbb
enter
lahf
cmp
rorb
sub
adc
repnz
and
bound
addr16
add
dec
mov
test
dec
aam
or
mov
inc
cmp
pop
pusha
jne
cmp
lods
mov
out
ret
hlt
adc
inc
adc
in
test
mov
mov
jmp
sub
cmp
jecxz
pop
dec
fisttps
lods
data16
fnsave
test
xor
mov
pop
mov
jp
neg
jne
incl
cwtl
xor
xchg
jge
pop
mov
sahf
sbb
aam
cmp
and
pop
repnz
inc
push
in
je
jns
jp
je
fwait
xchg
cs
xchg
sub
out
mov
and
andb
loope
movl
adc
imul
pop
fnstsw
sub
test
int3
inc
jb
loop
sti
cmp
jnp
lods
push
xchg
mov
out
mov
mov
xor
push
imul
inc
push
loope
shlb
xchg
iret
inc
xor
inc
mov
push
leave
shll
mov
or
divl
gs
pop
mov
jae
adc
jae
and
lds
jle
cmpsl
xchg
and
fcomp
push
pusha
xchg
loope
lret
loop
sub
cli
test
stc
jmp
mov
mov
popa
add
nop
mov
mov
mov
in
in
ds
xor
je
cmp
xchg
nop
cmpsb
js
aam
mov
jmp
or
mov
jg
xchg
shrb
test
lock
cli
es
xchg
dec
inc
fstpt
dec
jecxz
lcall
inc
ljmp
popf
inc
and
inc
out
cwtl
test
inc
jmp
in
adcl
or
jae
pop
icebp
cmp
adc
add
xchg
ja
data16
mov
and
mov
mov
jb
pop
mov
gs
push
std
xchg
paddq
jo
sbb
fwait
mov
loop
call
sub
lea
and
and
dec
pop
mov
out
jcxz
jp
lret
std
sub
and
and
outsl
pop
xchg
mov
cmp
insl
xchg
repnz
jle
cmc
mov
pop
bound
jne
lahf
mov
xchg
pop
idivl
sbb
and
filds
mov
lock
pushf
mov
jl
mov
mov
sbbb
and
lcall
daa
xor
movsl
mov
jle
add
mov
loope
dec
adc
mov
fwait
mov
and
mov
mov
sub
and
xor
repz
js
xchg
pop
and
scas
roll
mov
sub
es
fldln2
mov
les
jecxz
cmp
jp
loope
cmp
dec
jp
push
rcrl
out
in
and
jae
xchg
pop
sub
sub
or
mov
xor
shrb
jne
lods
mov
pop
dec
lret
fldenv
jne
pop
repz
push
out
imul
cmpsb
push
dec
sbb
dec
sarb
cmp
cmp
shll
out
cli
xlat
stos
xor
jno
add
push
sbb
insl
xor
test
cmp
and
sahf
cmp
adc
loop
pop
cmp
push
xchg
push
ja
sti
outsl
ret
or
adc
shll
mov
adc
in
sarb
iret
xchg
int
jmp
sti
sbb
movsb
pop
push
orb
cmp
es
or
cs
lret
addr16
dec
xchg
inc
movb
loope
clc
fbld
xchg
cmp
or
nop
adc
pop
push
mov
and
sub
fisttpll
rep
push
xchg
call
dec
pop
or
sub
movl
lds
insl
lods
pop
mov
sbb
icebp
sub
into
mov
popf
xorb
xlat
inc
lret
hlt
xchg
mov
sbbb
lods
jo
adc
mov
or
push
ja
gs
add
stos
sbb
jnp
insl
sub
inc
inc
stos
sub
lcall
mov
arpl
add
popf
mov
mov
add
inc
xor
xchg
sub
iret
mov
in
data16
mov
js
add
outsb
add
pusha
into
cli
ret
addr16
inc
bswap
out
adc
stc
mov
sbb
push
push
dec
shrl
or
mov
ret
addr16
pop
fs
cmp
jecxz
arpl
mov
sbbl
insb
out
xchg
je
mov
into
test
das
in
push
repz
mov
xchg
add
adc
imul
jecxz
test
adc
sti
jno
repnz
test
std
xchg
pop
divl
loop
stos
sub
loop
je
mov
outsl
mov
data16
pop
out
jnp
add
mov
icebp
arpl
xchg
je
mov
mov
fidivl
sub
imul
mov
adc
int
cmp
inc
or
aad
sub
fidivrs
dec
shll
loope
in
jno
int3
ret
cwtl
xor
push
mov
outsb
jnp
sub
cli
ss
nop
mov
int
stc
jbe
dec
add
clc
push
sbb
xlat
adc
lds
mov
jp
out
sbb
movsl
inc
popa
cli
sahf
jmp
or
xor
hlt
les
out
pop
imull
mov
es
xchg
loopne
mov
stos
sbb
sarl
jl
in
shll
xor
sbb
inc
mov
mov
mov
xchg
or
adc
mov
cld
pop
jmp
daa
inc
fdivr
inc
pop
sti
shl
rcll
lcall
lock
add
inc
in
outsb
xlat
stos
ret
ret
or
test
ds
mov
cmpsb
mov
mov
dec
movsb
pushf
jle
jns
push
sbb
mov
sbb
or
push
jns
mov
loopne
mov
jge
loopne
adc
or
js
pop
fldl
es
mov
cmc
pop
fstp
icebp
pop
jb
push
not
arpl
xchg
sti
inc
adc
xchg
xor
loopne
push
and
insl
pop
pusha
ljmp
rcr
add
dec
rcrb
pop
push
jecxz
and
mov
mov
mov
pushf
add
out
pop
mov
xchg
mov
sahf
cmp
jns
es
scas
xlat
pop
mov
insl
cmp
adc
sbb
lahf
sbb
out
push
inc
out
jb
shlb
out
lods
add
xchg
out
jmp
push
nopl
pop
sbb
fstpl
out
add
dec
pop
jb
push
cs
or
fcmovu
imul
push
dec
in
in
mov
xchg
inc
gs
dec
add
jb
jg
jecxz
aam
jg
push
lods
push
cmp
mov
ret
stos
jbe
mov
pop
int
lret
popa
clc
int
push
cmc
scas
fsubl
into
xchg
jmp
jno
stc
nop
and
mov
add
adcb
pop
or
push
mov
mov
hlt
xlat
sahf
xor
lret
pushf
mov
adc
nop
loope
inc
cmp
popa
stos
mov
mov
lea
lea
lds
mov
ret
pop
lock
loop
pop
add
jno
sti
xchg
fwait
fisubl
iret
or
int
mov
inc
fsubl
lret
add
add
int
xchg
mov
xchg
aam
and
outsb
insl
sbb
test
call
adc
es
xchg
sub
push
mov
insl
ja
gs
and
fs
ret
scas
pop
rcrb
xchg
sub
cmpsb
mov
fdivrs
jmp
cli
shlb
rolb
nop
outsl
and
pop
scas
sarl
stos
loop
int3
adc
xor
ljmp
jno
mov
sbb
call
or
pop
pop
sahf
inc
mov
out
jae
mov
adc
aas
cmp
lock
jbe
dec
dec
cmpsl
in
pop
pop
mov
ja
inc
scas
mov
xor
dec
outsl
lahf
pop
push
fmuls
push
jle
outsb
in
jne
inc
pop
mov
aas
dec
in
imul
subl
dec
or
sbb
test
insb
out
inc
mov
pop
rolb
jb
in
adc
cltd
gs
xor
mov
fnstcw
aad
mov
jno
sub
loope
adc
adc
rcrl
lret
mov
fsts
or
imul
repnz
jle
and
dec
shrl
mov
jg
mov
mov
out
add
ljmp
pushf
cli
cmp
nop
push
loopne
mov
dec
inc
adcb
sarl
das
jo
add
insb
push
repz
inc
push
pop
mov
jg
mov
jnp
aas
fadd
add
mov
sbb
in
inc
jp
out
or
hlt
and
push
cld
xchg
add
and
pop
pusha
adcb
addr16
mov
fs
aas
int
bound
push
inc
dec
ficomps
inc
aam
aaa
into
jae
lret
bound
xchg
push
in
dec
jmp
or
pushf
pop
sahf
int
xchg
sub
mov
rolb
jno
int
adc
jmp
in
push
pop
mov
mov
push
daa
mov
mov
jo
jg
cli
mov
testl
mov
lahf
ss
fdivs
lret
mov
call
std
jl
push
scas
push
cli
xchg
push
iret
lea
jb
scas
mov
jle
mov
adc
pop
outsl
shlb
inc
sbbl
hlt
xchg
lahf
lds
loopne
fsubr
imul
cli
lret
lret
aad
add
sti
xchg
andb
test
jl
pusha
lods
xor
pop
cmpsb
dec
fwait
xor
and
out
lret
push
jo
pop
in
mov
fdivrp
es
jno
add
clc
xchg
sti
xchg
add
fidivs
and
xor
cwtl
mov
or
ds
fs
xchg
sub
inc
fadds
ret
pop
dec
call
sbb
loope
popf
xor
test
cmp
test
pop
notb
adc
pop
into
lahf
shlb
sub
mov
mov
cmp
in
montmul
cmpsb
xchg
mov
js
lods
inc
xor
scas
inc
or
push
ljmp
int
ffreep
pop
repz
arpl
mov
les
pop
and
cwtl
sub
scas
push
not
imul
add
cmp
pop
add
sub
adc
xor
mov
ret
pop
mov
pop
shrl
aad
xor
pop
call
sub
ret
in
rorb
mov
subl
jecxz
lods
xor
cmpsb
dec
lods
inc
ja
gs
mov
jb
rcl
insl
or
lods
jo
fldl
mov
mov
xchg
outsl
push
add
es
insl
cwtl
adc
ss
sub
test
lods
xchg
fcomps
lahf
push
jg
in
sahf
jno
insb
arpl
mov
bound
fnstsw
push
add
aas
add
mov
fidivrs
xchg
lods
jp
imul
lret
loope
clc
rclb
inc
in
mov
inc
js
pop
cmc
inc
cltd
push
popf
or
call
popf
enter
mov
fsubrs
push
mov
inc
mov
int
gs
lods
push
outsb
mov
test
data16
mov
mov
jo
fidivs
sbb
shll
aad
sub
inc
fidivl
xchg
xchg
cs
mov
inc
pop
jmp
sub
push
ss
out
mov
add
hlt
mov
mov
pop
test
sub
sbb
dec
add
jo
outsb
mov
pusha
out
sub
cmp
dec
mov
sbbl
test
int
iret
cmp
push
scas
xchg
jbe
shll
mov
loop
not
fbstp
or
dec
jecxz
mov
les
mov
cmpb
shrl
sub
sub
mov
xor
sahf
xor
inc
out
dec
fistps
sbb
lock
jbe
fwait
int3
arpl
mov
cmpsl
sti
insb
xchg
xchg
sbb
cli
lea
inc
xlat
insl
scas
add
aas
inc
push
popf
xor
shrl
push
cmp
fsubl
stos
push
ja
mov
pop
pop
repnz
cmp
mov
dec
loop
mov
push
and
and
xor
push
sub
inc
mov
shrb
cltd
pop
jnp
lcall
lds
mov
push
pop
and
rcll
jnp
and
inc
lret
int
sar
sub
dec
xchg
outsl
push
out
insb
test
pop
xchg
mov
pop
mov
mov
sub
pop
pop
and
pop
xchg
repz
inc
sub
xchg
sub
dec
in
dec
pop
sahf
cmp
out
xchg
pop
mov
dec
jno
xor
xor
je
fidivs
and
mov
mov
mov
les
stos
mov
int
cmp
push
jmp
shr
add
push
lahf
jecxz
mov
xor
das
cmc
lds
mov
arpl
std
xchg
mov
add
nop
sub
shrl
sarb
aam
rol
shlb
and
cmpsb
cmp
add
enter
imul
cmpb
mov
mov
stos
movsb
add
pop
mov
pop
sahf
inc
fsubrs
and
jmp
sbb
int3
or
lock
xchg
sub
adc
nop
andl
jne
outsl
push
push
sbb
das
test
lret
and
neg
in
iret
pushf
sub
mov
push
ret
add
mov
shlb
xchg
insl
or
into
gs
sub
imul
test
das
jb
dec
cmpsl
push
les
dec
mov
mov
sbb
and
jbe
cli
mov
lret
sti
push
jmp
mov
movsl
cmp
jl
in
inc
pop
repz
mov
sub
inc
fimuls
cmc
mov
test
subl
adc
fs
fidivs
mov
les
inc
imul
push
pop
les
std
mov
test
pop
imul
addb
rcll
test
inc
scas
cmpsb
mov
sbb
cmp
inc
int3
pop
icebp
mov
xchg
shrl
push
sub
cs
xchg
das
or
pop
hlt
sub
pushf
xor
adc
xlat
push
mov
mov
push
lds
test
push
mov
sar
test
jo
mov
lock
jp
mov
inc
dec
out
pop
mov
jle
stc
inc
mov
dec
or
stc
cld
xchg
adc
mov
mov
or
xchg
sbb
sbb
and
imul
xor
push
pop
dec
imul
pop
or
push
jnp
insw
call
mov
add
or
xchg
sahf
out
mov
push
aam
addb
cmp
stos
inc
pusha
pop
loope
dec
adc
in
pop
sbb
mov
add
js
xchg
cmp
pop
out
xchg
int3
sbb
sub
and
scas
cmp
adc
mov
pusha
je
ds
mov
sarb
fidivs
or
xor
sbb
dec
loope
cmp
stos
fsubrs
int3
jae
mov
filds
cmp
dec
in
pop
repnz
xchg
sub
pusha
testl
sub
xchg
lcall
test
lods
leave
pusha
icebp
dec
push
movsl
aas
xchg
add
mov
das
gs
outsb
bound
lcall
out
stos
iret
sbb
popa
push
aas
sti
xchg
mov
dec
jecxz
rcrb
jno
in
aas
xlat
js
jecxz
clc
and
inc
push
or
iret
pop
sahf
rcrl
push
in
test
xor
mov
ret
repz
adc
adc
mov
imul
push
jb
cwtl
fldcw
or
je
mov
adc
push
cmpl
cmp
lea
int3
data16
mov
pop
rcl
sbb
int
dec
loopne
out
mov
jmp
inc
fcmovbe
or
aas
xchg
hlt
inc
fdivrl
fiaddl
push
jo
loopne
fstl
cltd
xor
push
mov
jae
jae
aas
dec
call
ljmp
jb
add
push
imul
push
das
loope
cmp
ret
pop
xchg
sub
nop
daa
aad
int
and
aad
lock
mov
push
adc
xchg
inc
testl
gs
sub
in
adc
ret
repnz
sbb
lret
stc
nop
gs
sahf
xor
popa
mov
cmp
mov
xchg
sub
cmc
add
mov
shll
push
aam
push
xchg
outsb
add
mov
les
shll
loopne
push
sbb
mov
and
stc
nop
mov
dec
in
fwait
movsl
cmp
xor
insb
mov
in
mov
ror
mov
ret
mov
rcll
lock
iret
js
clc
cmpsl
cltd
push
add
inc
xchg
mov
shlb
rcrb
xor
iret
popfw
fs
xor
add
bound
mov
add
mov
or
in
orl
fstl
leave
mov
dec
dec
jbe
aas
ret
sbb
dec
out
sbb
lods
pop
sbb
scas
gs
dec
dec
repz
push
push
divb
mov
and
dec
out
jle
inc
jo
dec
loop
test
loop
mov
aad
mov
add
inc
dec
stos
into
jbe
jg
shll
mov
cmc
mov
sub
dec
inc
push
mov
push
sub
pop
lea
adc
loopne
pop
mov
out
add
inc
test
hlt
jns
fistpll
adc
ds
and
loope
dec
cmp
xor
xor
jo
in
add
lods
xchg
inc
hlt
inc
push
rorl
jmp
jge
aas
icebp
xchg
aas
rolb
pop
or
loope
test
loope
stc
xor
fildll
mov
jbe
frstor
pop
iret
xor
insb
cld
cmp
out
and
pop
jmp
inc
inc
daa
enter
mov
jno
flds
es
insb
xchg
adc
imul
pushf
dec
aad
fidivl
not
push
sbb
mov
jnp
ficoms
jae
or
cli
inc
inc
jnp
jbe
dec
mov
xor
xchg
sub
fnsave
aad
adc
xchg
sub
sub
pop
in
movsl
adc
nop
mov
add
mov
orl
jmp
cltd
xor
pop
fbstp
and
imul
and
and
cli
fsubrs
lahf
aam
sbb
ds
jo
call
jle
insl
mov
mov
leave
pusha
or
cli
xchg
inc
cmp
out
nop
push
jbe
jecxz
stos
inc
pop
add
cmpsl
ds
lret
loope
fnstenv
add
xor
shl
roll
cs
dec
es
out
js
jbe
addr16
call
in
loop
add
fucomip
test
fwait
lods
inc
add
push
dec
stos
mov
scas
mov
hlt
mov
aad
mov
mov
ret
repz
idivl
adc
mov
push
mov
enter
pop
push
pop
aas
mov
cld
xchg
mov
mov
mov
cmp
inc
cltd
pop
scas
or
mov
in
mov
xor
imul
pop
and
and
aas
or
cltd
jl
cmp
cwtl
mov
sbb
bound
push
ret
jns
fdivl
lcall
push
jmp
mov
adc
xchg
cltd
cld
sbb
repz
adc
inc
lea
das
addr16
clc
mov
cmc
pop
test
jl
insb
arpl
push
lcall
imul
pop
out
sub
jb
sub
mov
lods
inc
push
mov
mov
aam
push
xor
xlat
outsb
pop
enter
inc
hlt
mov
push
push
ljmp
clc
and
enter
xor
fidivl
shll
icebp
je
pop
mov
into
lahf
les
mov
in
mov
scas
inc
lock
lahf
rclb
les
icebp
test
rol
pop
inc
inc
data16
jne
and
rcr
adc
leave
cmp
lods
and
sti
adcl
cs
js
mov
lret
bound
xchg
cs
cwtl
das
sbb
adc
outsl
sti
insl
add
mov
out
xor
rorb
sahf
lods
daa
pop
scas
pop
int
mov
fwait
mov
pop
mov
jecxz
popf
mov
jg
cmc
rorb
mov
cmp
jne
mov
fbstp
je
out
repnz
loop
mov
mov
xor
andb
push
inc
or
movsl
xchg
sahf
xor
jb
adc
add
jb
inc
movsl
pushf
xor
sub
fwait
jge
addr16
ds
pop
mov
add
and
scas
pop
sub
sbb
loope
mov
xchg
push
repnz
xchg
int
jns
int
addl
adc
jne
mov
shl
arpl
movsl
mov
jne
movl
or
xchg
sub
out
cmp
xlat
fdivl
jecxz
sub
ss
insl
test
jge
frstor
out
xor
cmpsb
cmp
push
lods
in
hlt
jae
pusha
aaa
adc
out
imul
xor
push
lea
inc
pop
push
stos
fnstenv
jne
dec
xor
push
aad
pop
test
jo
jp
and
dec
nop
daa
jl
stos
inc
outsl
popf
aam
sub
shrb
dec
lods
inc
addr16
cmp
lret
loope
aam
fwait
xor
xchg
sub
jnp
jp
jecxz
jnp
into
movsb
cmp
out
xor
cltd
jb
mov
movsl
cmp
sub
out
add
mov
xchg
sbbl
fdiv
push
mov
test
pusha
imull
or
ljmp
scas
lahf
jge
pop
dec
rcrb
imul
push
adc
mov
dec
push
lods
shrl
insb
pushf
hlt
xor
mov
mov
ret
fdivl
adc
cmpsb
xchg
in
and
xor
cltd
pop
sbb
popf
jg
adc
mov
push
popf
xor
push
and
andw
and
inc
push
jmp
clc
or
dec
pop
cmc
pop
negl
mov
orb
xsha256
cmpsb
push
add
scas
xor
les
push
out
outsb
xor
dec
xchg
mov
insl
sub
cmp
mov
mov
inc
lods
aaa
into
or
leave
cmp
xor
pop
pop
xor
mov
outsl
push
fucomp
sti
xchg
and
mov
test
push
stos
inc
insl
xchg
insb
add
cmp
mov
scas
test
ret
aad
cld
xchg
test
lret
mov
fsubr
test
out
fwait
xor
fcmovnb
pop
in
add
mov
ds
test
sub
mov
scas
inc
gs
cmp
sbb
xchg
jp
clc
xchg
ss
arpl
and
rclb
call
std
mov
dec
in
fsubs
xchg
repz
push
insb
mov
adc
sub
out
xor
js
nop
fmul
bound
mov
dec
icebp
sub
popa
pop
movsb
mov
dec
nop
daa
jnp
rclb
fidivl
mov
mov
push
push
shl
repz
pop
jne
pushf
xor
gs
es
sbb
and
jle
push
mov
rcll
xchg
xor
push
jmp
xchg
or
rol
push
adc
fidivs
push
xor
mov
dec
in
cmp
loopne
rcl
jns
mov
sub
popf
ret
mov
mov
mov
dec
loopne
pop
test
pushf
fwait
cmpsl
stc
push
dec
mov
push
mov
xchg
pop
scas
add
inc
inc
rcll
les
adc
or
outsb
add
push
imul
pop
aaa
fidivl
jns
push
imul
and
fs
pop
xchg
pop
add
pop
jg
repz
xor
stos
das
into
gs
lods
inc
cmpsb
inc
sbb
js
test
ljmp
inc
xlat
mov
fnstsw
shl
addr16
xor
or
lds
rcll
cmp
stos
mov
enter
jns
cltd
dec
loop
push
out
xchg
push
test
cltd
in
or
lret
mov
cli
xchg
pop
adc
jno
stos
inc
push
or
and
js
les
mov
shlb
lret
mov
jge
xorl
sub
sbb
mov
aaa
into
sbb
and
stc
jp
movsb
stos
sbb
leave
xor
ja
loop
icebp
out
mov
popf
mov
fcompl
mov
fisubs
iret
mov
jmp
lock
into
sub
outsl
adc
cmpsl
add
shrl
add
repnz
push
in
add
bound
xchg
outsl
sbb
push
adc
inc
mov
cmp
and
add
xchg
xor
sahf
push
lcall
and
orb
jp
inc
pushf
and
in
xchg
fs
ret
mov
or
xchg
pop
fcoml
pop
mov
mov
or
out
xlat
jmp
insb
loopne
mov
adc
ret
pop
cmc
xor
xchg
sub
mov
rclb
mov
push
push
out
out
sbb
repnz
sub
pop
movsb
cmp
add
fs
in
es
lods
rcll
mov
inc
sbb
lcall
mov
iret
push
push
out
jo
pop
mov
xor
pop
mov
aad
inc
lock
xor
popa
adc
push
stos
cmp
sahf
or
xchg
sbb
cltd
pop
pop
mov
dec
notl
iret
dec
pop
jecxz
fistpl
loopne
adc
add
jbe
pushf
xchg
or
add
bound
pop
sti
jbe
jecxz
fbstp
ret
jnp
fistpl
pop
pusha
shrl
out
mov
test
lock
add
cmp
faddl
out
sbb
fwait
xchg
ja
lods
add
or
mov
mov
push
int
test
adc
sahf
mov
orl
sbb
cmpb
stos
inc
shll
outsb
inc
jle
pushf
mov
add
arpl
aad
inc
xlat
outsb
xor
pop
add
inc
lock
xor
dec
out
repz
rcrb
mov
sbb
out
mov
lahf
fldl
jae
xor
jb
add
scas
inc
mov
ret
in
test
push
jb
push
sub
jbe
adc
sbb
fimull
lcall
lods
cwtl
hlt
xor
adc
inc
dec
inc
cwtl
je
inc
mov
pop
jl
xchg
nop
dec
sub
push
xchg
cmpsl
sub
xchg
jbe
fnstenv
xchg
sub
sub
fwait
xor
dec
xor
inc
repz
jmp
rcrb
mov
test
fdivrs
sbb
pop
repnz
pop
pop
sub
scas
pop
jns
jb
pop
jne
popa
lea
mov
divb
scas
add
dec
fs
jns
shrl
lcall
inc
or
cmp
bound
pop
cmp
inc
pop
xchg
sub
xchg
xchg
aad
pop
sbb
fisubrs
in
aaa
cmc
lret
addr16
lds
pop
mov
dec
fidivl
into
or
inc
ss
and
sbb
scas
je
fwait
icebp
das
and
jo
jo
cmp
mov
dec
inc
add
inc
mov
out
pop
jmp
in
les
sahf
nop
push
cmpsl
mov
pop
xchg
das
xorb
fildl
sub
loope
adc
sub
jmp
push
inc
movsb
cmp
cmpsb
pop
adcb
adc
sahf
xchg
xor
and
js
push
lret
das
push
aas
movsb
popa
mov
jns
test
push
call
sub
mov
sub
cmpsl
ds
or
jp
sub
pop
ror
popa
cmc
in
call
adc
adc
add
fidivl
in
mov
stos
xlat
imul
adc
add
sub
inc
pop
jnp
cld
adc
mov
jecxz
stos
std
mov
mov
push
pop
sub
scas
ret
xchg
cmp
sahf
xor
in
add
pusha
push
lret
bound
in
outsl
cs
adc
lcall
out
mov
jge
inc
add
pop
push
subl
imul
popf
mov
xchg
mov
sub
repz
and
add
jns
roll
cmp
xchg
outsb
dec
xchg
xchg
insl
ds
std
cmpb
jbe
sub
inc
das
test
imul
push
lock
or
and
test
movsl
mov
push
dec
das
mov
ljmp
push
fsub
cs
push
cmp
cwtl
cmc
dec
pop
jge
push
insb
lods
jns
ds
mov
mov
cwtl
js
mov
ret
mov
pop
lahf
xor
jp
rclb
xchg
gs
sub
loop
ret
pop
mov
push
loope
or
or
inc
sbbb
pop
lret
sub
stos
sbb
aas
cli
and
ljmp
lods
loopne
or
mov
pop
mov
ret
dec
in
cltd
xor
mov
mov
into
frstor
ret
fsubrs
dec
push
mov
and
mov
push
in
stos
push
nop
sub
cld
jmp
arpl
xor
pop
icebp
xor
mov
adc
mov
sbb
lea
dec
clc
pop
je
shlb
leave
lds
push
jmp
cmp
out
insl
jecxz
xchg
xor
repnz
cmp
test
mov
cmpsl
mov
and
mov
fimuls
popf
mov
cmp
jnp
or
in
xor
aaa
out
xchg
add
jbe
sub
lds
xor
mov
push
cmp
xor
je
mov
adc
jnp
xor
jge
into
pop
add
out
push
push
int3
cmp
pop
or
aas
push
hlt
or
fisubrs
lock
movsl
fisttps
sub
mov
out
or
lock
cmp
mov
stc
push
mov
iret
insb
testl
clc
xchg
outsb
add
les
dec
jb
ret
add
loop
fs
sbb
xor
mov
cmp
inc
rol
loope
jmp
push
mov
inc
adcb
pop
outsl
faddl
test
sub
jo
icebp
inc
frstor
add
pop
fs
mov
movsb
arpl
mov
sub
mulb
pop
xchg
cwtl
cli
xchg
lret
movsl
sub
sbb
cmp
sarb
sbb
stos
fiaddl
adc
adc
jns
mov
jae
jns
stos
cltd
mov
clc
repnz
inc
xor
dec
jecxz
jmp
movsb
popa
clc
sti
fisttpl
xchg
sub
lock
inc
fdivs
jecxz
xchg
inc
sbb
cmp
mov
sar
lret
icebp
xchg
lret
mov
mov
cmpsl
mov
dec
out
fistpll
ljmp
jl
mov
movsl
pop
xlat
mov
ficompl
fwait
push
xchg
lret
je
adc
push
call
add
test
push
sbb
jo
inc
in
lahf
pop
fidivrl
lret
orb
xchg
adc
out
lods
hlt
lods
sbb
into
shlb
sub
jne
movsl
mov
jnp
adc
inc
fildl
jnp
int
pop
pusha
aad
xchg
jo
or
jbe
mov
cmpsb
aad
jmp
daa
pop
adc
cmp
int
sub
dec
fisttpl
sub
fnstcw
xor
jl
fs
popa
mov
xchg
mov
xor
mov
out
xchg
cwtl
loope
test
push
sbb
pushf
adc
lcall
aam
jecxz
stos
mov
fidivl
jle
jecxz
pop
gs
inc
pop
test
je
cmp
cs
and
push
xchg
xor
fildl
cwtl
push
test
push
adc
add
ficompl
jge
imul
adc
int3
dec
dec
lods
xor
imul
push
or
mov
movb
sti
fidivs
and
sbb
in
xorl
cmp
lcall
jle
xchg
sub
outsb
fisubs
sub
sub
pushl
dec
jmp
nop
mov
mov
mov
mov
cmp
pop
in
cld
cs
in
or
push
mov
shll
adc
mov
xor
mov
mov
xchg
mov
cmp
cmpsl
add
jcxz
test
test
pop
shr
mov
shrl
jns
xchg
push
mov
dec
push
cvtps2pd
in
inc
jle
sub
lret
add
lahf
inc
lret
fnsave
es
shll
xchg
int
adc
clc
fwait
jecxz
insl
jg
xchg
clc
jecxz
jl
cmc
pushf
push
lods
iret
data16
add
cmpsb
mov
sarb
and
in
flds
js
out
cli
mov
sbb
sarl
in
inc
in
lock
mov
bnd
out
xchg
stos
mov
push
jecxz
divb
sub
call
cltd
add
lret
jnp
mov
fsubp
cmp
add
jle
sub
mov
fistl
xor
sarb
adc
insl
mov
jnp
stc
scas
mov
js
cmc
or
cwtl
stos
movsl
mov
xor
divl
icebp
lea
pop
cmc
ss
pop
fistps
nop
idivb
jg
ljmp
jl
xchg
pop
sbb
jo
xor
movb
in
cmp
sub
lock
dec
pop
add
dec
ja
lods
mov
xchg
icebp
nopl
or
jae
in
es
adc
rcll
std
popa
das
and
dec
js
add
push
shrl
jle
insb
xchg
xchg
imul
iret
repz
cli
dec
test
ss
fstps
shlb
jmp
jg
aam
iret
mov
add
sbb
leave
cmp
cli
test
or
cmc
xor
cmc
xchg
or
sub
adc
pop
pop
loopne
pop
xlat
sbb
jns
out
sti
cs
mov
data16
cmpsl
jle,pn
sbbl
xchg
in
sbbl
loop
cmp
add
jns
fisubrl
in
loop
jle
imul
xchg
mov
inc
out
push
jmp
add
sub
loope
out
adc
sub
loope
jmp
cli
shrb
outsl
fildl
jle
pop
cli
test
or
jnp
sbb
stos
sahf
and
adc
sbb
pop
push
xor
stos
push
scas
test
cmp
cmp
dec
sarl
xor
addr16
jno
scas
inc
rclb
push
clc
addr16
push
in
xchg
or
scas
subb
inc
pop
inc
add
cltd
cmp
fidivs
fisubrl
or
gs
jae
and
jo
jg
sahf
xorb
les
aad
pop
mov
lret
std
outsb
cmc
out
push
lock
mov
das
rcll
jbe
idivb
fs
shll
loopne
and
movb
ret
mov
mov
pop
mov
addr16
cltd
jmp
ss
test
jo
jmp
xchg
sbbl
push
or
inc
lahf
mov
xor
add
les
xor
shrl
sahf
xchg
out
dec
repz
leave
pusha
cmp
int
into
pop
jae
cs
pusha
inc
adc
loop
pop
mov
repz
test
es
fcoms
inc
dec
push
dec
xchg
loop
xchg
popf
sahf
lea
loope
int3
cltd
jg
pop
and
out
adcl
xchg
sub
xchg
jns
mov
jnp
lods
loope
sbbl
dec
lret
fsubl
ds
mov
test
mov
xor
pushf
mov
aas
jmp
test
xor
or
push
push
clc
movsl
icebp
lret
mov
aam
dec
sub
cmp
jb
and
xchg
fstpt
push
std
adc
into
push
cmp
mov
negb
mov
loopne
inc
hlt
add
fists
mov
cmpb
mov
xchg
jnp
adc
cltd
cmp
pop
nop
nop
lods
jne
cmp
repnz
ss
pop
add
push
mov
inc
adc
push
fiadds
frstor
outsb
dec
jmp
imul
push
aam
adc
jge
pushf
test
mov
push
leave
lods
adc
mov
sub
xlat
cltd
xor
adc
mov
jl
ss
test
fists
mov
pop
aaa
into
xor
cs
dec
daa
adc
inc
mov
xchg
or
orb
push
hlt
pushf
cmp
push
lcall
ret
sarl
mov
rcll
mov
or
mul
fbstp
adc
jno
cwtl
std
xchg
or
pushl
xchg
dec
inc
aam
dec
push
addr16
inc
pushf
shrl
shrl
pop
or
imul
jmp
addr16
loope
cli
es
nop
fs
jmp
pop
rcrb
repnz
scas
fwait
xor
cltd
data16
fdivl
mov
push
lds
lret
jno
ja
mov
adc
shr
mov
aas
mov
mov
add
cs
push
and
push
cmc
push
pop
scas
cld
stc
mov
pop
dec
pop
or
and
dec
std
mov
mov
mov
rolb
and
cmpsl
ja
sbb
in
ret
inc
jmp
test
dec
mov
xchg
sub
pop
ljmp
xchg
xor
stc
sub
jp
fildl
das
inc
mov
add
cmpsl
inc
or
outsl
cmp
cmp
aam
je
sbb
outsl
bound
pop
enter
jmp
addr16
cwtl
fstpl
sti
push
xchg
and
mov
fidivs
sbb
pop
movsl
pop
inc
out
inc
cmpl
mov
cltd
sub
fidivrl
sbb
sarl
inc
sbb
repnz
dec
pop
jnp
enter
mov
inc
sbb
mov
push
mov
fcoms
inc
mov
lahf
fs
lcall
icebp
mov
icebp
testl
jmp
ss
ljmp
sbb
pop
inc
cmpsb
jecxz
aad
lea
jb
shrb
mov
dec
xor
mov
mov
fldt
cltd
or
aaa
xor
push
mov
lods
jg
dec
xchg
bound
sbb
roll
sbb
stos
sar
bound
jne
icebp
repz
jnp
hlt
lods
mov
or
scas
cwtl
je
pop
repz
xchg
pop
stos
mov
fdivl
mov
jg
jbe
xchg
or
jp
sub
dec
push
aaa
or
inc
fcmovbe
sub
or
push
out
sub
and
gs
ds
outsl
lds
mov
or
dec
mov
ss
xor
jmp
inc
hlt
jae
mov
jb
cmp
dec
adc
inc
jmp
cmp
sub
push
mov
dec
adc
inc
outsl
push
or
mov
mov
fmuls
cld
repnz
sub
leave
scas
enter
sbb
push
movsl
and
mov
test
jmp
push
fmulp
std
mov
jnp
mov
cmp
push
test
aaa
inc
call
test
lods
push
push
inc
pop
insl
add
sbb
or
maxps
push
sub
pop
push
sub
clc
aas
push
mull
scas
les
aam
push
dec
cld
mov
sub
icebp
repz
mov
int3
and
xor
xchg
mov
sub
xorl
push
fisubs
daa
cmp
mov
add
fwait
push
sbb
cwtl
push
or
imull
arpl
loopne
outsb
enter
iret
fsubrs
dec
mov
into
gs
icebp
nop
aaa
add
fidivl
and
push
xchg
rclb
iret
sub
stos
lcall
mov
cmpsb
scas
add
sarl
sbb
imul
xor
aaa
or
adc
cmpsb
mov
mov
mov
out
mov
inc
pop
jno
push
jecxz
jge
arpl
dec
mov
jle
imul
xchg
xchg
rcrl
adc
lahf
hlt
push
fcomps
adc
inc
sub
mov
mov
mov
push
subps
push
jge
lret
stos
mov
pusha
and
jp
or
lret
cmp
bound
push
inc
pop
adc
sub
fstl
outsl
dec
dec
sub
jbe
in
pop
ja
nop
in
cwtl
push
inc
mov
push
xor
rep
shll
pop
inc
clc
pop
mov
mov
insb
lods
dec
fwait
add
xor
cmp
push
xor
adc
outsb
add
xor
faddl
cmp
test
mov
fdivp
mov
dec
std
inc
inc
cwtl
or
ret
xchg
xorl
movsb
and
push
xchg
loop
jae
inc
stc
inc
inc
sub
jne
add
mov
int3
cld
loopne
test
jecxz
sub
jecxz
sub
and
repz
lock
inc
in
xchg
sbbl
xlat
xorl
out
and
or
or
push
inc
popf
rcr
jbe
mov
fwait
push
fsts
call
repnz
arpl
mov
xor
sub
ds
insl
inc
lahf
insb
and
pusha
addr16
push
leavew
adc
jb
jg
jb
loop
dec
push
imul
pop
repz
xor
mov
add
inc
cltd
xlat
cmc
fwait
push
movsb
ret
mov
jle
shrl
mov
push
add
mov
aas
mov
sahf
push
fdivp
in
aam
xor
sti
popa
rclb
cwtl
adc
aad
or
xlat
sub
lea
inc
sub
add
mov
insb
adcl
dec
xor
test
jp
pushf
jnp
lahf
jbe
mov
mov
sbb
add
xor
push
lods
cmpsb
not
xor
pop
je
cwtl
iret
enter
xor
sub
xor
mov
lock
mov
testl
mov
sub
lods
cmpsb
fidivl
lret
iret
lea
xchg
lret
mov
sahf
xor
andb
add
push
rorb
sbb
sub
pop
add
dec
out
sbb
outsl
daa
mov
pop
push
xor
jo
in
jle
inc
ss
xor
mov
out
cmp
repz
or
xlat
aam
mov
fisubs
fbstp
adc
lahf
ss
ret
fistps
fidivl
add
popa
cmpl
xchg
jno
mov
push
pop
lret
mov
into
inc
sub
sbb
push
cmc
xor
fbstp
and
aaa
lahf
mov
sub
jne
push
addr16
jp
lods
cli
xchg
and
or
sub
xchg
sub
and
fs
jb
shrb
xchg
sbbb
inc
lock
mov
movsl
lret
cmp
ret
sbb
ds
loope
loope
xchg
adc
pop
repz
daa
xchg
mov
add
mov
or
dec
cwtl
lret
lcall
frstor
add
data16
outsl
push
hlt
mov
loopne
inc
nop
addr16
aas
inc
stos
inc
out
cld
js
fdivr
jge
jbe
lods
cwtl
das
loopne
ss
addl
scas
mov
mov
jb
fisubl
mov
mov
mov
je
lods
dec
out
stos
gs
push
push
into
nop
and
mov
jp
mov
push
lcall
pop
fists
push
lds
xchg
xchg
mov
out
mov
insb
adc
xor
xor
je
sbb
outsl
mov
mov
xor
lods
inc
and
cltd
or
leave
lret
out
xchg
mov
es
out
ficomps
xchg
xor
xor
loope
ret
jmp
scas
imul
or
push
xor
sahf
pop
es
push
int3
dec
xchg
data16
fwait
xor
cld
imul
or
lahf
stos
imul
enter
fsts
xchg
call
cltd
mov
into
in
add
sbb
fsubrl
iret
push
sbb
jnp
icebp
sar
mov
frstor
xor
pop
mov
inc
shl
sbb
and
mov
mov
mov
sub
scas
popa
je
loopne
mov
outsl
adc
sti
xchg
test
out
lock
adc
sub
xor
das
fs
stos
mov
xor
push
test
and
rorb
sbb
cwtl
movsb
nop
mov
out
ljmp
outsb
pop
push
in
nop
sub
mov
outsb
cmc
and
in
jnp
cmp
shll
push
dec
scas
and
xor
xchg
stos
mov
add
push
out
jg
fwait
inc
pusha
mov
ja
roll
aam
fsubrl
stos
call
adc
sub
ret
jbe
out
push
jne
lea
mov
mov
lret
pop
test
lea
mov
mov
scas
cmc
inc
jns
mov
lcall
cmpl
fsub
stos
mov
xor
test
add
stc
xlat
xor
xchg
out
add
sti
cmc
fwait
popa
stos
int3
dec
lret
ss
test
pushf
ds
xchg
xor
xchg
mov
cwtl
das
push
mov
shrl
mov
push
mov
mov
jmp
push
mov
dec
pop
inc
cmc
push
fs
test
fsubrs
sbb
cmp
adc
loop
sbb
adc
push
jb
es
and
xlat
leave
cmpb
pusha
mov
adc
ss
fmuls
inc
sub
jae
mov
pop
cmc
push
push
lret
enter
mov
rorl
decl
pop
scas
cmp
es
xor
pop
push
dec
popf
xchg
pop
push
call
jecxz
les
lcall
inc
mov
pop
rcr
repnz
pop
in
lock
lcall
insb
xchg
mov
orl
or
repnz
sbb
mov
mov
sbbl
loope
psrad
inc
add
fucomip
xor
lock
or
xor
addb
in
sbb
fiadds
push
or
push
test
dec
mov
push
or
ret
bound
mov
jnp
aam
decb
sbb
xor
mov
sti
push
pop
or
adc
add
xchg
jbe
mov
xchg
data16
xchg
fdivs
cmp
clc
lahf
testl
cmp
sbb
xchg
pop
pop
les
aam
mov
jno
clc
scas
test
jp
orb
je
mov
xchg
scas
inc
mov
or
adc
sub
pop
bnd
mov
cmp
mov
adc
sbbb
mov
sbb
sbbb
enter
pop
push
fwait
jno
ja
jmp
int
cmpb
mov
test
xchg
xchg
outsl
push
jmp
cmpsb
test
or
nop
pop
cmpsb
add
scas
mov
out
xchg
sub
jmp
mov
popf
xor
test
cld
push
mov
insl
and
mov
iret
sbb
sbb
pop
push
pushf
insb
push
mov
int
push
jnp
aad
ss
pop
repz
clc
jecxz
or
pop
out
and
lahf
sbb
outsb
adc
inc
arpl
adc
adc
pop
ficomps
dec
mov
lahf
jl
fsubrs
stos
inc
out
xor
jno
dec
loop
xchg
sahf
stos
ret
xor
cmp
or
mov
hlt
test
push
push
sub
arpl
or
mov
sbb
mov
and
pop
jl
xchg
and
inc
inc
xor
loope
push
and
xchg
cmp
sbb
dec
mov
cmp
cmp
loop
push
add
lea
aaa
mov
int3
rcrb
and
inc
pushf
lea
inc
aas
je
sub
and
test
pop
jns
fisubl
es
je
sarl
clc
pushf
das
rorl
scas
aas
sbb
leave
cli
push
jl
unpcklps
std
sbb
loopne
mov
cmp
pop
dec
mov
push
aaa
xchg
adc
pusha
mov
mov
and
je
pop
xchg
or
frndint
mov
lcall
jne
jno
adc
pushf
sbb
iret
in
dec
lock
insb
xchg
js
pushf
mov
adc
xchg
xor
fsubrl
xor
and
test
or
fnsave
cs
loop,pt
testb
sub
dec
scas
cmp
lcall
adc
push
icebp
pop
pop
ljmp
scas
jge
mov
fsubs
inc
or
je
or
scas
push
mov
in
shrl
pop
divb
popf
stos
xlat
iret
data16
pop
int3
scas
in
dec
mov
xor
mov
add
mov
push
je
xlat
test
add
mov
outsb
dec
js
fiaddl
fsubp
mov
shlb
popa
getsec
mov
testb
adcb
lods
push
repnz
cmp
clc
jns
cld
xchg
xor
mov
dec
js
add
xchg
cltd
rorb
ss
pop
outsb
pusha
pop
in
mov
outsb
in
in
mov
cwtl
cmp
pop
lods
dec
clc
cmpsl
mov
es
repz
fsubrl
rorl
push
in
mov
push
imul
mov
outsb
xlat
pop
xor
lods
int3
pop
push
stc
in
mov
xlat
xchg
sbb
jg
in
pop
mov
ds
mov
js
xchg
lret
aas
std
std
xor
cs
je
inc
call
jae
jno
sbb
in
push
xor
cmp
jge
clc
popa
aam
daa
or
in
pop
shlb
pop
inc
cli
cmp
sub
inc
imul
stos
adcl
insb
in
xchg
dec
in
shrl
pop
in
pop
mov
mov
adc
aaa
cld
cmp
dec
loopne
inc
lods
push
sbbl
lods
mov
stos
jmp
fucom
ljmp
add
jl
or
popa
xlat
hlt
iret
sahf
movsl
mov
cmp
add
lds
in
enter
repnz
mov
xor
test
cltd
adc
cmp
push
movsb
or
jp
cmp
xchg
sub
sbb
rol
daa
mov
pushf
dec
cmpsb
mov
out
pop
or
xor
fwait
pop
arpl
je
ds
pushf
cmpsl
lods
pop
or
cmpsl
mov
push
or
jo
clc
jne
aas
pop
testl
nop
movsb
arpl
clc
jmp
mov
imulb
adc
pop
xchg
jl
sub
into
in
enter
fcmove
popa
rcrb
xor
jecxz
xchg
pop
add
imul
mov
testb
aad
mov
mov
push
and
mov
xor
inc
ja
push
icebp
jle
mov
push
lahf
cmp
nop
testl
outsl
sti
mov
fsubl
adc
mov
pop
mov
nop
lods
div
mov
sub
lea
mov
mov
repnz
call
cmp
push
aaa
loop
mov
addr16
aam
pop
cmc
adc
lods
push
xchg
push
pushf
and
sub
push
jmp
addb
scas
imul
lea
mov
out
mov
jno
inc
jg
mov
add
sbb
je
stos
and
mov
out
data16
hlt
das
movsl
xchg
mov
sbb
dec
fwait
xor
jl
ret
inc
lods
xchg
mov
dec
inc
cmpsl
subb
push
aad
pop
pop
mov
mov
mul
idiv
sbb
and
add
xchg
ret
xchg
mov
push
sbb
cmp
sub
and
sbb
subl
adc
ja
mov
or
jno
mov
inc
mov
orl
add
jle
and
add
stos
inc
sbb
leave
xor
ds
movsb
out
pop
push
ljmp
inc
inc
push
insl
pop
cmc
sahf
out
push
out
stos
fistl
mov
stc
and
sub
fwait
daa
dec
mov
sahf
repnz
aad
and
sbb
sub
int3
fs
add
cmc
jmp
add
add
cmpsb
mov
and
mov
or
inc
fldenv
sbb
js
popa
jg
cltd
mov
lret
mov
iret
fstl
and
call
scas
cmp
mov
and
add
cmc
xor
in
adc
push
push
sub
and
dec
in
mov
or
xchg
xchg
in
jmp
push
mov
stc
imul
js
mov
in
in
sbb
mov
sbb
xchg
aad
push
test
test
xlat
adcl
push
pop
xchg
jnp
ret
pop
mov
pop
in
and
in
add
call
in
xorl
mov
aam
daa
lahf
or
shrb
cmp
mov
sbb
scas
and
xorb
or
dec
and
data16
outsb
adc
push
cld
daa
test
pusha
fsubl
add
pushf
test
mov
je
sub
xchg
adc
mov
jae
and
inc
stos
jg
xchg
sub
jmp
scas
mov
dec
aaa
sti
shl
outsb
add
lds
inc
inc
cltd
insl
ss
das
pusha
decb
push
xchg
sahf
call
mov
and
cmpsl
inc
jmp
inc
stc
xor
sub
dec
xchg
idivb
rorl
stos
out
mov
stos
or
cmp
or
jmp
push
push
ljmp
jno
add
popa
jns
in
push
pop
cli
xchg
lea
popf
daa
sbb
ret
cmc
fimuls
mov
aam
pop
stos
ss
mov
fisttpl
and
push
scas
inc
test
orl
sti
or
cltd
lods
pop
ret
inc
lret
in
mov
repnz
ljmp
subb
out
sbb
cmp
jle
fsubrl
cmp
xor
add
scas
push
or
inc
inc
jp
mov
inc
fcoms
cmp
frstor
cmpsb
push
jmp
lods
mov
mov
mov
ficomps
stc
push
adc
sbb
sti
or
jmp
push
sbbl
bound
enter
or
ljmp
pushf
arpl
mov
and
xchg
sub
sub
pop
adcl
mov
push
jecxz
cmp
pusha
xchg
scas
rorl
jbe
jne
jno
cwtl
std
cmp
fmull
push
shlb
jg
sub
cltd
test
mov
in
mov
aam
ja
jmp
xor
mov
aas
lods
xor
scas
xor
cwtl
lret
int3
scas
pcmpeqb
das
stos
es
add
cmpsl
lahf
fsubrs
sbb
mov
sbb
mov
pop
test
lods
xor
iret
cmp
pop
adc
xor
xchg
push
cmp
nop
mov
mov
pop
cmpsb
mov
inc
aas
jno
dec
mov
dec
shl
jecxz
fstpt
or
pop
jnp
adc
fs
mov
jbe
mov
lret
das
popa
dec
jnp
mov
mov
cmp
test
pusha
xchg
cmp
cmpsl
jns
aam
ss
or
insb
add
xor
jb
jne
sub
lock
loope
lahf
cmp
mov
xor
sahf
mov
leave
aas
add
lret
fists
jecxz
dec
lock
cld
lret
pop
sbb
add
addr16
cmpsb
xchg
scas
mov
cmp
or
lcall
div
xor
dec
rol
add
jl
aad
xchg
gs
xchg
mov
cltd
out
cmc
sbb
test
cmp
xor
enter
loope
in
xor
sbb
nop
scas
push
andl
pop
pushf
test
jo
jae
or
mov
scas
adc
inc
ja
xor
in
add
cli
inc
dec
mov
jbe
pop
test
fidivs
cltd
cltd
inc
adc
ja
adc
inc
ret
lahf
stos
std
mov
in
ret
jecxz
loope
mov
loop
sub
jno
into
scas
push
shl
pop
push
je
pushl
mov
jns
push
jmp
xor
repnz
ljmp
lods
insl
test
daa
xor
das
les
pop
bswap
test
inc
xchg
jge
mov
sbb
cltd
imul
std
shl
or
inc
dec
es
out
ret
cmc
cltd
insb
stos
aas
insl
aam
xlat
iret
loopne
jno
add
insb
bound
mov
sub
or
call
push
mov
aam
repnz
int3
in
enter
and
jo
pushf
popf
sbb
int3
and
movsl
inc
int3
dec
lret
jne
bound
fimuls
cs
jne
loop
xor
std
lods
or
scas
cltd
test
jnp
pop
rcrb
xchg
add
scas
test
aas
or
jo
adc
outsl
nop
xor
shr
gs
scas
leave
imulb
jne
dec
push
jbe
js
push
out
adc
inc
dec
ja
subb
decb
das
insl
test
into
test
add
mov
lahf
ret
mov
sbb
les
xor
outsl
pop
popf
cmp
rcrl
in
js
mov
add
addl
lods
inc
ficompl
pop
inc
leave
pop
stc
repz
imul
add
mov
je
mov
rorb
push
sbb
int
add
jmp
fmul
dec
inc
jle
pusha
je
cwtl
lds
xchg
out
inc
mov
xor
cmp
and
cmpb
enter
shr
mov
add
mov
lds
jecxz
mov
popf
lret
stos
jae
ljmp
inc
ss
and
shl
subb
shlb
icebp
or
mov
mov
or
xor
scas
lods
adc
and
sbb
ret
lcall
push
out
cwtl
pop
xor
int
sbb
mov
daa
leave
add
jmp
inc
clc
cwtl
bound
push
mov
jb
aaa
gs
test
and
mov
pusha
fsubl
inc
sbbl
popa
cmp
xor
mov
das
push
and
dec
jno
popa
or
dec
sbbl
lods
sub
pusha
icebp
out
test
sbb
fmulp
inc
or
je
subl
xchg
inc
push
idivl
jmp
push
cmp
cmp
push
ljmp
mov
test
mov
push
sub
cmp
mov
es
and
pop
mov
es
dec
test
cmp
inc
out
push
fucomi
pop
in
xchg
mov
fwait
cmp
and
jg
cmp
aaa
into
fstpl
add
add
xor
std
cmpsl
mov
inc
jo
pusha
mull
xchg
pop
or
xchg
xchg
aaa
mov
in
pop
push
xor
xor
inc
or
inc
ficoml
mov
push
sti
sub
pop
cmpsl
mov
addr16
jae
xchg
ss
stos
adc
pop
jnp
mov
scas
and
add
push
sahf
not
cmc
daa
roll
push
mov
push
inc
xor
push
pop
pop
mov
mov
jle
insb
push
lds
inc
scas
arpl
xchg
out
lods
mov
les
or
cltd
and
jo
aad
cld
adc
adc
mov
jb
cmp
dec
xchg
fnsave
push
cmc
ret
dec
xor
xchg
add
cli
xchg
dec
lock
or
adc
jge
mov
dec
jl
sbb
jg
les
lcall
clc
sahf
dec
xchg
clc
sub
into
pop
cmpl
sbb
sbb
scas
jns
dec
les
test
push
pop
adc
or
lods
aas
mov
lea
imul
push
test
xchg
sub
shrb
xchg
stos
mov
xchg
sub
jecxz
or
sbb
icebp
mov
mov
push
or
jp
shll
dec
push
xchg
cwtl
mov
lock
cli
loopne
pop
mulb
rcrb
das
fs
pop
std
mov
movsb
and
inc
idivl
sub
sti
lahf
xchg
mov
xor
jno
push
cmp
adc
jo
stos
mov
lcall
xor
lods
mov
push
nop
mov
ret
insl
add
inc
dec
loopne
test
push
or
cmp
and
je
lcall
out
jmp
cmpsb
mov
pop
mov
mov
xchg
aad
sti
cmpsb
push
out
cwtl
dec
add
outsb
add
xor
add
in
lds
and
inc
sub
mov
ja
sbb
mov
xchg
in
adc
push
push
gs
scas
sbb
sub
xchg
cli
adc
push
mov
repnz
adc
lods
leave
pusha
hlt
jle
int
insb
mov
loopne
fwait
leave
scas
push
jg
lcall
decl
mov
cltd
mov
xchg
iret
cltd
mov
mov
adc
roll
jl
dec
into
pop
mov
mov
arpl
cltd
xchg
dec
test
pop
shll
decl
mov
jmp
addb
fldt
cmp
adc
fcmovnu
stc
stc
and
mov
jbe
adc
xchg
inc
in
adc
jl
lds
les
sbb
add
dec
das
or
dec
int3
repnz
sub
loopne
push
jo
pop
jbe
mov
xchg
sub
dec
lea
std
scas
inc
int3
mov
aaa
lret
pop
sub
lret
push
stc
dec
push
out
repnz
mov
mov
stc
pop
or
popf
mov
sub
mov
sbb
xor
xchg
inc
out
mov
cmc
mov
cmp
je
loope
lret
sti
or
insl
rcll
nop
pop
outsl
push
xchg
mov
cli
mov
nop
testl
mov
ja
mov
fiaddl
jle
cmc
cmpsl
test
jle
in
mov
lret
and
std
gs
mov
popf
push
and
push
rep
sbb
movsb
and
inc
in
dec
xchg
scas
stos
cmp
iret
lods
xorb
mov
fistps
add
sub
in
lret
push
add
outsl
jnp
pop
ljmp
jnp
or
into
mov
jp
sbb
cmpsl
sti
popa
xchg
aad
or
repnz
pop
fnstenv
and
jmp
dec
cmp
rcrl
iret
lea
fdivr
icebp
adc
lods
pop
popa
adc
jb
push
xlat
sbb
or
xchg
xchg
cmpb
ret
cmpsb
in
pushf
dec
mov
stos
mov
xor
sbb
aam
dec
mov
mov
daa
mov
xor
repz
leave
fs
pop
or
ret
mov
push
rorb
icebp
jne
stos
aas
jge
cli
mov
mov
jp
ss
add
adc
sbb
mov
mov
pop
or
icebp
adc
dec
scas
xor
out
call
mov
std
push
inc
adc
dec
xorl
enter
xchg
add
shl
movsb
pop
sbbl
rcll
dec
pop
sbb
icebp
xor
pop
mov
jle
or
test
mov
and
frstor
enter
mov
push
out
cmp
insb
outsl
fnstenv
aad
aam
lcall
or
adc
xor
cmp
cmp
cwtl
add
adc
and
lock
mov
jmp
push
icebp
mov
cld
xchg
leave
lock
mov
cmp
aad
push
sbb
mov
cmp
mov
adcl
adc
inc
mov
or
and
in
fwait
add
std
inc
lods
icebp
cmp
fnsave
inc
cmp
std
add
out
test
dec
dec
adc
pop
push
push
sahf
xor
jge
xor
jno
rcrl
add
pop
rolb
test
popa
out
xchg
stc
out
sti
es
pusha
cli
cmpsb
cs
lods
mov
inc
dec
xor
leave
mov
or
scas
mov
ret
lahf
push
sbb
add
add
jmp
aaa
mov
loope
push
mov
lcall
popa
cmp
cmp
xor
shrl
mov
shrl
in
inc
filds
mov
adc
inc
fsubl
or
lret
dec
fdivs
pop
mov
sbb
push
roll
add
add
cmp
fwait
cmp
jne
stc
pop
pop
or
arpl
push
push
std
sarb
pop
pop
cmp
pop
cmc
out
dec
pop
in
jl
dec
mov
pop
adc
or
mov
or
jbe
cmp
pop
cmpsb
cmpsl
mov
les
sub
out
pop
pop
xlat
aas
mov
hlt
nop
mov
xchg
xchg
and
xchg
adc
movsl
jle
mov
or
jbe
mov
adc
inc
sbb
cmp
mov
aaa
popl
inc
add
scas
into
inc
and
int
movsb
xor
cmp
inc
ljmp
lcall
xor
xchg
mov
adc
dec
loopne
lods
orb
jg
ret
add
push
insl
add
ds
fwait
xchg
mov
cmp
negl
add
cmc
sahf
cmp
mov
popa
stos
insl
das
xchg
pop
mov
icebp
adc
lds
gs
mov
gs
pop
push
xor
and
int3
test
mov
xor
add
add
push
inc
cmpsb
cmp
adc
mov
ret
xchg
lock
jae
sbb
movsl
xor
jp
ja
cmp
in
shrb
jbe
or
inc
inc
pop
and
mov
xchg
call
into
mov
pushf
xchg
shll
das
aaa
decb
cltd
jecxz
push
movsl
ss
pushf
xchg
sub
test
lods
inc
sub
clc
dec
movsl
ja
sbb
mov
adc
shlb
sahf
loopne
cld
fwait
out
sbb
xchg
popf
stos
jo
out
and
dec
add
dec
jnp
shll
leave
shl
inc
pop
outsb
inc
xor
xor
sti
xor
adc
divb
cmp
lret
test
jmp
jns
cld
mov
lret
sbb
push
mov
mov
cmp
mov
xrelease
xor
xchg
gs
sub
mov
test
mov
pop
das
test
and
rorl
movd
lods
repz
loope
sbb
jge
sub
dec
cmpsb
push
testb
push
test
cmp
xchg
enter
inc
sbb
xchg
sbb
mov
mov
inc
mov
in
pop
adc
inc
xor
inc
push
frstor
sub
and
loop
mov
xchg
cltd
mov
dec
test
pop
mov
mov
test
rclb
cmp
jecxz
aam
mov
or
movsl
cmp
leave
inc
negb
pop
ds
or
dec
pop
cmp
lods
push
outsb
cli
int
pop
push
popa
sbb
jnp
jo
mov
cmc
or
stos
and
divl
lret
fcompl
adc
sub
nop
daa
mov
psubb
jb
lea
imul
lahf
call
in
stos
xchg
out
aad
mov
push
mov
mov
lcall
lods
push
xchg
pop
imul
les
sbb
ret
ret
xchg
push
cld
adc
sub
mov
fucom
lahf
mov
fisttps
adc
mov
int
popa
lret
gs
lods
xchg
push
sub
into
aad
les
sub
frstor
adc
jle
cmp
pushf
aaa
and
jg
frstor
fbstp
outsl
cmp
out
xchg
mov
imulb
sub
aas
add
xchg
xorl
dec
int3
mov
shlb
inc
pop
hlt
je
sbb
adc
int
xor
movsb
sahf
out
rclb
dec
in
lds
int
pop
jmp
pop
cmp
jns
flds
mov
sti
mov
daa
data16
adc
push
mov
xchg
ja
sub
pop
cli
adc
lahf
xor
mov
rcr
lret
insl
jl
mov
movsl
inc
xchg
std
adc
rorl
or
imul
movsb
ljmp
inc
push
out
jno
aad
js
icebp
leave
dec
fabs
cmp
inc
sub
pop
aad
jbe
sbb
pop
mov
ret
loop
outsl
movsl
cmp
pusha
rclb
jbe
xor
hlt
sahf
cli
cmp
jecxz
mov
push
fsub
or
jb
cltd
loop
push
push
xchg
das
cltd
xor
adc
push
in
std
add
repnz
and
mov
jne
and
lret
int
or
xor
outsb
jo
ret
dec
inc
es
pusha
jl
inc
dec
dec
ljmp
add
iret
cmp
sub
das
outsb
xor
frstor
ret
in
xor
out
mov
and
jno
imul
mov
push
gs
pop
fs
sub
nop
or
ja
sbb
daa
shlb
insl
add
fimull
ja
sub
xor
xor
bound
aad
andl
xchg
mov
push
dec
xor
inc
lcall
pushf
pushf
insl
ficomps
xchg
push
jns
push
fbstp
insb
push
cmc
mov
test
mov
sub
movsb
mov
stos
mov
fs
mov
inc
mov
adc
sahf
decb
inc
sub
pop
repz
testl
stc
mov
and
sub
xchg
mov
lret
int
call
mov
push
xchg
aad
adc
js
repnz
cmp
sbb
sahf
xchg
add
orb
rcr
arpl
movl
xor
adc
pop
mov
adc
popa
inc
mov
ret
test
ffree
lret
push
mov
dec
pusha
and
sarb
push
ss
jle
pop
mov
push
cltd
imul
sahf
dec
psubsw
mov
xchg
jg
pushf
xor
mov
mov
ja
or
aaa
inc
and
out
rcrb
xchg
mov
std
push
imul
cmpl
mov
cmp
jp
vpsrad
ret
imul
sbb
ja
aam
jno
idivb
mov
sbbb
imul
rcll
lods
push
mov
mov
clc
rcrl
daa
or
jge
pop
dec
rorl
push
fists
mov
cmpsl
movsw
dec
test
xor
movsl
xchg
sub
inc
mov
jb
mov
loop
shrl
adc
or
outsl
imul
lds
mov
sti
sbb
ret
add
arpl
jmp
pop
sub
into
adc
mov
cmpl
pop
fldenv
outsl
inc
loope
subb
jecxz
inc
sbb
mov
fsubp
clc
movups
or
adc
jge
jne
sti
xor
subb
mov
xchg
and
cli
data16
ret
scas
push
adc
jns
test
fsubrl
mov
push
dec
inc
push
jecxz
sti
es
mov
iret
hlt
out
clc
mov
pop
es
gs
jle
xchg
xlat
popf
pop
lahf
jg
cmp
subb
shrb
pop
cmpsb
fs
dec
out
test
dec
inc
sbb
dec
loope
rclb
mov
or
adcb
test
jne
lcall
loopne
xchg
incl
xchg
dec
dec
mov
xor
xchg
sbb
stos
enter
aas
jmp
xchg
aad
mov
enter
rcll
cltd
lcall
lock
in
dec
scas
inc
sub
pop
fmull
imul
shlb
pop
xchg
adc
sbb
cs
inc
cmp
lret
fists
addl
pop
inc
jle
cmp
ljmp
jo
sbb
repnz
out
and
loopne
pushf
mov
idivl
mov
add
xor
and
mov
hlt
or
cmp
jecxz
leave
in
adcb
sahf
rcll
dec
std
movsb
mov
mov
lret
int3
or
popa
mov
xchg
mov
and
pop
xor
dec
sbb
push
adc
and
es
test
mov
fidivs
sahf
jns
insb
mov
sbb
xchg
xchg
fstps
sbb
lds
fimuls
scas
cmc
test
or
jo
icebp
cmp
sub
add
movsb
dec
movb
es
xor
stos
enter
mov
jo,pn
lods
fsubl
mov
insl
xor
sahf
leave
adcb
mov
aas
rcrl
pop
inc
out
pop
dec
out
jns
hlt
mov
xchg
pop
jp
push
orl
and
cmpsl
rorl
shlb
loope
mov
xchg
pop
shr
test
jno
mov
jg
or
cli
cltd
jae
mov
cmpsb
push
xchg
addb
cltd
mov
dec
mov
insl
out
cld
shrb
mov
shlb
cmp
fwait
xor
sbb
shrb
add
dec
sbb
cmpsl
jp
cwtl
sahf
mov
std
xor
pop
xchg
dec
dec
repnz
jge
pop
rclb
sbb
sbb
sbb
dec
push
leave
insb
mov
and
in
mov
mov
mov
mov
dec
xor
sbb
mov
push
mov
add
adc
cmp
inc
loop
cmp
sub
xchg
pop
call
ret
xor
lock
and
pop
lar
out
adc
lods
sbb
iret
subb
and
sub
push
fimull
lret
icebp
mov
or
cmp
xor
fstps
in
pushf
mov
and
or
xchg
call
push
mov
jb
jns
enter
jne
mov
cmc
shr
pop
push
sub
arpl
jp
mov
mov
dec
mov
lods
test
or
in
ret
pop
sub
sub
pop
repnz
aad
mov
adc
fnstsw
cmp
fbld
les
add
test
std
pusha
jp
cmp
dec
call
push
in
lahf
cmp
pop
loopne
jb
sbb
push
stc
nop
test
mov
or
test
out
icebp
enter
dec
jb
mov
mulb
cmc
pop
loopne
push
out
inc
pop
in
cli
and
int
cmp
fsubrl
cmp
dec
repz
cli
lea
or
pop
repz
jns
insl
lea
loopne
push
bound
cltd
movb
mov
loopne
cmpl
nop
xchg
outsb
or
mov
test
cmc
insb
push
dec
sbb
bound
jno
int3
gs
fildl
push
in
jnp
push
shrl
xor
daa
add
cmp
xchg
aam
cmc
push
test
push
les
cmp
jb
scas
daa
into
push
shrl
mov
jp
inc
or
mov
or
or
adc
sbb
hlt
pop
hlt
and
jnp
jecxz
stos
inc
jnp
mov
mov
movsb
insl
das
adc
add
inc
test
psubd
test
xchg
push
pop
idivb
dec
or
xchg
lahf
mov
add
or
rcll
pop
xor
sub
loopne
mov
rolb
lds
test
push
jo
jle
xchg
enter
adc
adc
repnz
cs
mov
int
and
adc
push
xor
mov
and
lahf
and
mov
mov
cmp
pop
adc
sub
mov
mov
mov
jnp
sub
pop
pop
repz
lahf
out
adc
jnp
mov
sbb
inc
icebp
mov
adc
mov
jmp
pop
jmp
add
mov
or
or
jge
mov
cmp
pop
pop
xor
mov
xor
mov
test
sbb
cmpsl
fs
add
dec
dec
xlat
xlat
cmp
push
cmp
insb
fdivl
push
sahf
mov
inc
dec
addr16
jmp
fcomps
dec
roll
mov
push
mov
insl
ljmp
or
fildll
int3
mov
pop
cmpsl
xor
sub
mov
push
inc
pop
add
jg
cmp
loope
push
sub
stos
dec
and
nop
push
std
into
stc
or
out
clc
mov
in
pop
jb
std
je
push
pop
frstor
fsubs
bound
outsl
lret
push
adc
pop
popa
pop
mov
cmp
cmp
add
addr16
and
mov
dec
sub
data16
pusha
negl
sbb
mov
sbb
jae
or
pop
pop
lahf
dec
lahf
ret
inc
hlt
cld
in
sahf
push
jl
xchg
jns
popf
outsb
aas
lcall
stos
cmp
xor
ljmp
testb
push
stc
in
arpl
jno
add
inc
sub
dec
pop
fsubs
mov
jge
cmp
in
outsb
les
nop
mov
ret
into
pop
jo
addr16
in
pop
lea
sub
in
div
xor
cs
or
in
and
jmp
stos
inc
icebp
cld
rcll
adc
sbb
movsl
int3
into
jle
loope
lahf
stc
inc
in
sub
jmp
or
jno
jl
push
pop
pop
lret
sub
lret
pop
inc
stos
inc
jae
or
mov
bnd
leave
adc
mov
sbb
push
bound
rcl
fistpll
jmp
xor
in
push
cld
and
nop
or
inc
stos
fwait
pop
cmp
sbb
or
adc
add
out
jmp
pop
loopne
lea
jno
shl
icebp
fcomip
or
pop
mov
push
and
adc
iret
mov
dec
outsl
mov
adc
mov
fsub
stc
xchg
dec
cmpsl
lea
mov
shlb
ret
dec
jecxz,pt
pop
daa
jbe
pop
gs
out
mov
lods
cld
enter
cmc
out
cmp
pop
adc
push
sbb
movsb
hlt
sub
cmp
jno
rcr
adcl
mov
stos
subb
xor
sub
scas
clc
xlat
mov
mov
das
and
loopne
jmp
adc
addr16
xor
cmpsb
int3
cmp
pop
push
inc
data16
outsb
add
or
fwait
pop
sub
pop
insl
lcall
mov
sbb
lahf
mov
ja
xorl
fiaddl
push
js
adc
sbb
jnp
sub
inc
pop
aas
xor
jne
and
jp
xchg
push
cltd
cmpsb
out
fdivr
int3
jge
lods
mov
iret
push
xchg
mov
mov
xlat
push
xor
ficomps
xchg
inc
mov
dec
add
es
or
mov
test
cmpsl
lea
cmp
repz
mov
push
nop
pop
cltd
in
pushw
sti
pushf
dec
rorl
scas
or
dec
popa
fsubrl
jmp
jnp
fs
mov
adc
push
jb
popf
outsl
shl
lods
inc
xchg
push
add
cmp
repnz
pop
fscale
mov
loopne
cmp
out
push
sub
test
push
cmpsl
call
xchg
push
bound
mov
dec
jae
cmp
lret
sbb
push
popa
clc
jnp
mov
xlat
mov
iret
sub
cmp
bound
lea
aaa
clc
stos
jo
es
mov
jg
fdivrs
jbe
xchg
mov
test
inc
clc
test
int
out
dec
cmp
mov
mov
jmp
sarb
jmp
sti
fs
fnstcw
filds
ret
fnsave
mov
daa
out
mov
dec
ret
sbb
lahf
and
and
xorl
insl
sbb
or
or
mov
mov
xlat
fisttpll
and
jo
xchg
sub
pop
aad
and
sub
mov
add
popa
icebp
mov
jle
mov
cmp
data16
or
ss
push
int
jns
cli
xor
jns
sbb
push
mov
fdivrl
mov
hlt
mov
ljmp
pop
push
sub
mov
loopne
xor
sub
inc
mov
mov
xchg
imulb
mov
dec
jmp
lret
addr16
pop
push
cwtl
or
adc
inc
stos
aam
mov
aad
andl
fists
shrb
rcrl
rcrl
inc
sub
and
mov
sub
push
mov
ds
inc
es
mov
repz
inc
pop
sbb
scas
and
or
add
cli
inc
mov
jns
xchg
cld
jg
xor
jl
jnp
popf
push
jge
cld
jno
jo
inc
notl
jns
push
add
pop
fsubrl
fldt
pop
mov
loope
lahf
sbbb
lret
pop
pop
inc
lret
clc
mov
dec
add
sub
pop
repnz
repnz
mov
aam
cltd
scas
inc
or
pop
xor
clc
aas
sbb
ljmp
leave
cmp
je
and
sarl
mov
xchg
adc
es
loope
shlb
jae
shll
sahf
nop
scas
inc
mov
or
cmp
subl
jno
int3
loope
lds
int3
fs
and
mov
inc
inc
pop
cmp
insl
xchg
mov
enter
sub
testl
xchg
xchg
pusha
inc
call
inc
add
movsb
nop
nop
jg
sahf
out
ljmp
test
imul
fidivl
pop
aas
jb
cld
sub
add
add
mov
iret
xchg
push
aam
iret
jnp
or
fisubs
clc
test
sub
and
jmp
or
ret
cli
fs
loope
mov
loop
xor
inc
bound
mov
out
sahf
stos
cmp
mov
hlt
pop
jae
push
loope
lods
mov
out
test
xorl
sbb
imul
pusha
testl
push
inc
andb
xchg
mov
pop
mov
ss
rcrb
cmp
jnp
popf
xor
js
lcall
sbb
adc
ficompl
fadds
jg
popl
or
into
rcll
jae
int
push
jbe
stos
push
sbbl
aas
jg
mov
fadds
and
inc
pop
xchg
or
mov
clc
and
shlb
arpl
lret
jbe
outsl
sub
inc
ljmp
xchg
shl
ret
rcll
push
mov
loopne
push
jae
addr16
push
testb
scas
mov
mov
fwait
cmpsl
testb
daa
lds
cltd
adc
sub
or
ljmp
xor
scas
mov
shrd
xchg
mov
call
jg
jno
inc
ss
ja
ss
iret
arpl
in
mov
test
mov
inc
out
mov
das
mov
mov
stos
mov
xor
mov
iret
add
push
fldenv
nop
daa
cmpsb
pop
fs
adcl
jne
jge
mov
ret
fwait
sub
push
adcb
push
xor
push
mov
testb
cli
xchg
mov
mov
mov
sti
loop
dec
xor
ret
lock
rol
sub
out
and
mov
or
add
and
mov
cmpb
shlb
call
sti
fwait
xchg
push
jb
arpl
arpl
sbb
mov
cmc
aaa
mov
sbb
pop
fxch
popa
or
dec
fwait
les
popa
mov
and
mov
rol
inc
cmc
xchg
mov
sbb
in
shl
sbb
cmpsb
or
and
mov
pop
test
inc
fcompl
pop
out
adc
sahf
xor
stos
add
cmp
int3
aam
int3
xchg
ds
pop
add
mov
jmp
push
int3
popf
je
xchg
out
fwait
xor
mov
inc
cmpsl
iret
add
push
aad
add
jmp
or
outsl
add
sbb
inc
or
jecxz
outsb
sub
pop
cmp
lret
mov
inc
out
mov
push
data16
xlat
cmc
test
xlat
rcll
bound
stc
popf
pop
mov
popa
xchg
xchg
xchg
mov
sbb
add
or
into
inc
mov
xchg
or
test
shll
mov
pop
sti
out
outsl
arpl
mov
nop
mov
jne
std
xor
xor
cmpsb
inc
fucomip
pop
cmp
xor
lea
stc
add
inc
test
out
test
mov
pop
sub
xor
cli
and
xchg
pop
shlb
je
test
call
repz
outsl
dec
push
lods
fwait
sub
xor
xchg
cmp
mov
sbbb
popa
and
cwtl
loopne
lret
pop
mov
and
daa
and
les
hlt
shl
mov
sub
jge
es
sub
cmp
add
mov
xchg
mov
fdivl
ret
mov
scas
les
push
out
in
test
jne
in
inc
mov
mull
ljmp
mov
push
sarl
adc
popa
call
push
lea
jge
fnsave
inc
aas
jno
cld
xchg
dec
ss
add
movsl
in
mov
loop
cmp
shlb
inc
sti
call
mov
push
sbb
mov
sti
pop
je
fbld
outsb
cwtl
out
sbb
pop
cltd
add
dec
dec
inc
jge
xchg
xchg
jo
fnsave
movsb
iret
jg
and
daa
pop
pop
cli
leave
push
aaa
in
sbb
xlat
add
push
push
jbe
in
ret
jns
pop
jmp
pushf
push
sbbl
jnp
data16
mov
xchg
gs
outsl
add
fisttps
pop
pop
sub
xor
rclb
jecxz
inc
mov
jns
cmpsb
or
sub
pop
outsb
push
jae
testb
jnp
dec
mov
mov
shlb
cmp
sub
xor
pusha
lea
jecxz
pop
and
mov
jl
push
inc
dec
or
xchg
push
gs
push
mov
adc
pop
inc
movsb
dec
in
pop
stos
cld
add
lods
scas
iret
fwait
pop
cmp
stc
jbe
and
pop
sbb
sub
movsl
cmp
pop
add
push
push
je
add
test
push
xchg
fldl2t
and
pop
mul
dec
xor
mov
dec
in
mov
shr
and
mov
imul
out
imul
cltd
cmp
stos
adc
xchg
pop
repz
fistpl
loopne
sbb
out
xchg
sbb
sarl
hlt
cmp
dec
adc
or
arpl
xchg
xchg
jne
xchg
sub
fidivs
adc
mov
adc
fs
sub
movsl
ds
add
adc
ficoms
dec
adc
pop
push
inc
jne
inc
cmpsl
push
xor
pop
mov
hlt
test
xor
and
and
cld
cmp
insb
dec
in
cmpl
mov
jno
insl
ljmp
aaa
les
xor
out
arpl
sub
mov
jae
sbbb
imul
push
cmp
add
daa
iret
fnstsw
and
stos
mov
pop
testb
mov
pusha
enter
jmp
or
shll
mov
loopne
stos
sbb
xor
lret
push
testb
stc
stos
sub
mov
mov
mov
xchg
jne
cmpsl
mov
test
rep
adc
add
dec
dec
inc
xchg
push
mul
outsb
loop
popf
xor
inc
mov
jmp
fisubl
aas
mov
iret
aad
sub
repz
and
shrb
push
icebp
jne,pn
or
cmp
out
dec
push
and
xchg
inc
enter
and
mov
push
imul
jno
inc
sahf
xchg
sbb
fimuls
sbb
in
mov
jmp
mov
ja
aam
in
xor
lret
fsincos
or
repz
ss
out
mov
mov
push
xchg
inc
std
adc
fiaddl
arpl
lret
mov
stos
ljmp
mov
fbstp
cli
cwtl
fists
pop
test
push
iret
cld
push
out
cmp
jg
sbbb
jmp
or
push
jl
retw
push
lods
jecxz
adcb
repnz
movb
ds
gs
mov
push
ljmp
jns
sbb
mov
pop
cmp
mov
push
dec
fisubs
dec
adc
and
jb
out
imul
adc
mov
mov
inc
enter
dec
jge
shrl
lahf
rcrl
xchg
sub
inc
adc
or
xchg
loop
stc
outsl
xor
pop
shrb
sbb
ds
in
jmp
aaa
into
inc
mov
xchg
pop
int3
lea
mov
out
lds
ss
fsubs
popa
aam
push
xorb
sbb
dec
add
push
sbb
dec
ret
movsb
pop
lret
mov
shrl
dec
push
xor
jnp
popa
inc
xlat
xchg
inc
lret
cmp
xchg
xchg
and
mov
test
jae
icebp
push
lods
mov
js
push
jl
dec
mov
adc
cmp
fimuls
sub
push
decb
stos
jnp
jno
adc
pop
cmp
cmp
movsb
inc
add
mov
aam
inc
into
jecxz
xor
imul
outsl
mov
dec
rorl
and
into
ret
dec
or
ja
ljmp
test
idivl
stos
push
mov
pusha
sarb
cmp
pop
mov
cs
cmp
in
dec
iret
lds
dec
in
iret
ret
mov
add
mov
daa
adc
movsl
sbb
or
jbe
pop
pusha
arpl
fs
or
ror
jecxz
push
xor
clc
cs
fnstenv
xor
pop
mov
sub
inc
adc
cmc
or
sarl
add
xor
negb
data16
inc
adc
notl
sahf
jle
dec
cmpsb
and
add
fs
jno
sub
insl
outsl
daa
cmpl
sub
cmpsb
arpl
xor
cld
mov
dec
mov
cmpsb
and
jb
daa
lret
ret
mov
xchg
add
and
out
xchg
pop
test
adc
xor
bound
pop
mov
lahf
hlt
mov
push
xchg
adc
das
mov
leave
frndint
sbbl
mov
shll
push
cltd
imul
inc
test
ljmp
notl
mov
inc
neg
cmp
pushw
mov
push
test
je
icebp
mov
jp
outsb
insb
clc
lret
mov
aas
out
std
xchg
mul
xchg
inc
xchg
inc
repnz
xlat
cmp
arpl
xchg
sub
push
pop
add
sbb
cmp
fs
cli
pop
lock
ja
testl
sarb
push
imul
and
insb
mull
scas
sub
mov
adc
mov
nop
scas
jno
test
sbbl
lahf
out
jb
xchg
movsb
jno
mov
cltd
dec
inc
fnstsw
dec
test
andl
enter
stos
xchg
sbb
xchg
dec
stos
adc
int3
rol
fs
daa
mov
stos
cmpsb
mov
fs
add
ss
shll
push
xor
call
lea
sub
push
mov
mov
dec
stos
subl
adc
xchg
insb
mov
sahf
adc
into
sub
lret
bound
sbb
add
or
sub
xor
pop
imul
cmpb
repz
jmp
adc
aad
sbb
ljmp
sbb
daa
lret
mov
stos
loope
add
aaa
mov
jb
jo
or
push
pop
pusha
adc
and
loopne
aas
sbb
mov
test
inc
push
movsb
mov
push
sub
push
iret
shlb
gs
or
cs
mov
mov
or
mov
sarl
fwait
or
lds
jne
and
dec
dec
loop
out
inc
pop
imulb
push
mov
je
jno
daa
xor
in
call
dec
adc
lret
push
pop
icebp
cmpb
fstpl
repnz
mov
sub
mov
push
out
scas
pinsrw
push
dec
in
pop
xor
jmp
mov
scas
cmpl
scas
cmp
ja
std
jecxz
xor
rcl
call
scas
lods
aaa
mov
cmp
xchg
data16
nop
outsl
aas
push
mov
push
jmp
fdivl
les
xor
or
lahf
dec
sub
xchg
ffree
fisubs
leave
sbb
scas
pop
aam
inc
inc
push
jmp
je
jb
fdivl
out
inc
leave
cmp
xchg
dec
push
les
into
push
or
adc
cltd
inc
shrb
daa
push
in
nop
mov
lds
adc
xlat
add
or
lods
gs
push
mov
loopne
inc
adc
jle
add
test
or
addr16
lods
daa
add
xor
push
lea
aam
fucom
rorl
nop
add
pop
push
adc
rcrl
call
jmp
in
jmp
icebp
mov
adc
dec
lret
cmc
mov
into
movsl
mov
jecxz
mov
cs
cwtl
insl
mov
into
and
mov
adc
xor
daa
push
js
lods
inc
jb
xchg
jnp
jns
or
mov
mov
test
sti
xor
push
add
mov
fidivl
push
inc
std
sbb
test
lods
inc
pop
push
int
dec
fisubs
mov
out
nop
sub
push
aam
cwtl
out
dec
stc
stc
nop
shrb
pop
jne
cmpsb
cmp
or
call
mov
cli
xchg
jp
lods
lret
stc
or
into
fs
in
mov
into
loope
mov
mov
call
push
push
rcrl
jo
jp
push
rorb
xorl
fcomip
gs
cld
cwtl
mov
pop
scas
call
iret
stos
dec
sbb
testl
mov
cmpl
or
or
test
bound
and
test
xor
push
stos
jne
adc
fadds
pop
mov
sbb
adc
sub
cltd
clc
addr16
sti
outsb
jp
xor
lds
add
in
leave
inc
pop
inc
and
insl
or
pop
popa
and
imul
aaa
outsl
mov
in
push
lods
outsl
mov
stc
mov
jnp
cmpl
lahf
push
imul
dec
ret
pop
cmp
push
enter
push
ret
add
lds
dec
fs
add
js
adc
mov
in
xchg
ja
bound
notl
cld
fstp
xor
cmp
ret
leave
mov
ret
mov
aad
pop
push
or
insl
out
sahf
fs
test
minps
adc
ja
sub
adc
xor
lock
add
lcall
jne
adc
js
mov
jle
movsl
scas
inc
mov
pop
xchg
dec
fbstp
mov
es
push
xorl
loopne
popa
orl
pop
mov
sahf
cmpsl
ret
repz
adc
mov
or
jo
inc
and
test
push
push
test
repnz
inc
into
cmp
push
je
cmp
aad
jns
adc
pushf
movsl
pop
push
inc
pop
daa
mov
mov
int3
in
xchg
lea
inc
int
fs
cmp
jae
bnd
imul
adc
ret
hlt
cmp
clc
jae
lcall
cmp
imul
pushf
sub
fwait
sti
in
jae
sub
add
dec
cmpsb
xor
fxrstor
push
mov
or
jne
test
icebp
push
addb
stos
subb
out
mov
shlb
xchg
xchg
test
push
in
fstl
lret
mov
mov
enter
cli
cmpb
add
test
adc
out
jno
mov
push
test
std
mov
dec
mov
fcmovnb
push
clc
xor
push
sub
sub
mov
sub
jg
pop
cmpsl
add
or
xchg
inc
lcall
push
loopne
jl
adc
ljmp
icebp
fldcw
fbstp
jge
jmp
adc
addr16
sub
and
mov
fwait
incb
mov
cmp
outsl
daa
mov
mov
mov
adc
data16
mov
sub
mov
inc
sbb
mov
pop
mov
jp
fbstp
in
sub
mov
mov
daa
push
jmp
push
out
pop
cmpsb
in
fstps
mov
imul
frstor
adc
mov
sub
mov
mov
dec
testl
pusha
pop
fsubr
mov
daa
mov
hlt
pop
mov
enter
icebp
dec
scas
and
pop
rcrb
arpl
imul
add
mov
pop
ret
mov
cmc
fstpt
enter
sub
lret
xchg
push
into
fst
push
sub
or
xchg
adc
enter
leave
and
adc
and
xlat
mov
push
or
sbb
adc
mov
sbb
in
push
scas
shll
rorb
fwait
mov
mov
std
mov
pusha
imul
cmp
rcll
dec
and
test
inc
shl
scas
jecxz
pop
sub
fdivrl
or
insb
mov
jno
push
jo
inc
and
fcoml
fsubr
inc
xchg
pop
out
mov
jl
ljmp
clc
in
aas
inc
in
pop
adc
mov
repnz
pusha
repnz
xor
push
mov
bswap
data16
out
mov
loopne
xor
pop
sub
mov
test
dec
mov
lcall
fdivrs
mov
pushf
add
cmp
adc
mov
pop
loop
mov
dec
xor
scas
add
lock
mov
pop
sbb
insl
jge
mov
xor
xlat
cmp
cs
mov
testl
repnz
sbb
out
mov
fwait
or
xchg
adc
int3
jecxz
cmp
sbb
cmp
lret
dec
fistpll
das
push
lret
mov
dec
pusha
stos
or
cmpsl
adc
pop
lods
fs
bound
insb
stc
push
and
lret
sti
rcll
push
insb
or
mov
movsl
dec
test
inc
push
gs
psubusb
mov
loope
pop
xlat
push
sub
push
pop
mov
adcb
cmp
cmpsb
addr16
dec
xchg
mov
mov
ljmp
popa
mov
or
xchg
scas
jne
mov
push
imul
jle
inc
scas
call
fwait
repnz
int
or
fwait
mov
shl
imul
add
cltd
hlt
subb
scas
in
and
fdivs
jo
or
sbb
or
aas
add
pop
iret
ss
jns
inc
stos
push
enter
lret
cld
jo
or
jl
pop
lock
loopne
push
cmc
cmp
mov
cmp
insb
or
in
jp
and
inc
pop
inc
lcall
sub
daa
iret
push
or
pop
ret
pop
jge
cltd
cmp
pop
cmp
in
test
mov
in
jb
fs
scas
xchg
pop
or
sub
xchg
mov
lds
or
pop
add
js
lcall
daa
gs
cmp
sub
mov
dec
add
xor
cmpb
pop
mov
aad
rcl
jo
sbb
cmp
and
sbb
add
cmp
xchg
adc
call
inc
xor
push
pop
inc
test
mov
andb
ret
adc
addr16
es
adc
fstps
out
fwait
mov
aas
loope
in
push
inc
mov
bound
dec
push
and
and
ret
pop
jne
pop
insb
jg
loope
mov
jle
jae
and
dec
insl
add
scas
jmp
pusha
subb
int3
sbb
or
push
xchg
push
in
jmp
xchg
lret
inc
out
mov
mov
pushf
loop
cmpsb
xchg
inc
test
add
xchg
pop
out
cmc
push
cmp
mov
iret
xor
push
inc
es
inc
popa
inc
inc
popa
mov
push
int
cwtl
into
jl
mov
shrb
popa
pusha
lods
rorb
xor
mov
dec
push
insl
jnp
addr16
sbb
adc
testl
adc
popf
jae
adcl
rorb
pop
xor
mov
sbb
scas
push
cli
mov
dec
fbld
insb
iretw
negl
add
inc
test
pop
out
shlb
push
test
jbe
sarb
mov
inc
mov
gs
cmp
add
push
jbe
mov
xchg
into
jmp
out
call
mov
cld
mov
push
stos
jae
pop
and
and
sub
out
in
mov
mov
jnp
lea
push
push
push
and
lgs
lret
shll
dec
mov
lret
push
jo
sub
aaa
mov
xchg
faddl
cmpsb
cmp
in
inc
push
pop
int3
sbbb
ljmp
and
push
in
jnp
icebp
adc
dec
idivl
jmp
push
and
cmp
inc
imul
push
inc
pusha
movl
and
stos
pop
imul
mov
add
imul
sbb
jecxz
xor
inc
flds
sbb
aas
sbb
dec
dec
mov
pop
outsl
insl
out
mov
int
xchg
mov
adc
sub
and
push
fldl
lock
jbe
add
adcb
mov
popf
adc
cltd
gs
sub
lods
mov
add
cmp
das
fcoms
test
xlat
mov
movb
mull
cmp
es
sub
clc
pop
imul
stos
push
int
xchg
dec
stos
dec
and
adc
add
push
jae
subb
cwtl
lods
inc
icebp
shlb
mov
or
push
popf
adc
xchg
ja
jecxz
fxam
push
xchg
sti
xchg
mov
fstps
mov
insb
cmp
dec
lock
lret
xlat
push
flds
jecxz
and
stc
push
stc
imul
jmp
mov
inc
xor
aas
dec
dec
fs
cmpsl
fninit
pop
ja
inc
jl
repnz
sbbl
not
repz
push
lds
xor
xor
ret
push
insl
push
inc
sbb
dec
jmp
add
movsl
cmpsb
push
adc
mov
imul
mov
pusha
mov
add
cs
lds
sbb
xchg
rcll
es
lock
cmpsb
cmc
push
into
mov
xchg
pop
stc
pop
mov
push
dec
mov
es
mov
dec
adc
je
pop
dec
jge
xchg
sub
test
sbbl
adc
xor
pusha
sub
fimuls
mov
movb
ficompl
sub
std
icebp
mov
stos
xchg
test
jge
sub
sarl
in
mov
xchg
push
daa
sti
sub
inc
inc
out
xchg
xlat
jmp
imul
mov
stos
xchg
call
test
cmp
dec
sbb
in
lea
das
xchg
pop
adc
pop
push
test
rol
push
insl
fsubr
sahf
push
pop
mov
lods
xchg
jmp
pusha
sub
and
xchg
jl
mov
add
stc
sub
push
and
dec
sbb
out
rcrb
jnp
inc
mov
mov
cli
xor
pop
add
cs
mov
scas
call
xor
mov
mov
pop
gs
mov
popa
pop
xor
fdivs
pop
hlt
mov
stc
jge
adc
ret
xor
sbb
mov
lock
adc
fsubrs
stc
test
mov
out
jae
jno
and
fldcw
inc
adc
add
push
fs
decl
push
insl
push
pop
outsl
xchg
ss
fistl
adcl
add
ret
jae
sub
ret
les
push
imul
jns
mov
inc
outsl
cmp
mov
mov
aaa
lcall
loopne
mov
in
jle
roll
insl
cmpsl
fmulp
fsubrl
mov
sbb
push
xchg
lret
push
test
cmpb
sbbb
cs
add
movsb
test
in
fwait
dec
mov
imul
push
jle
repz
adc
scas
jbe
jb
ficompl
cmp
push
js
or
les
push
ds
cmp
pop
testb
cmovbe
add
sahf
mov
and
out
or
test
lret
cld
movsl
ss
inc
enter
mov
aaa
xchg
test
lcall
loop
jbe
xchg
and
and
push
cs
pop
xor
subb
sbb
data16
sbb
scas
aaa
adc
sub
fdiv
or
inc
push
mov
imul
sub
jp
xor
lret
add
icebp
mov
and
lods
adc
test
add
testb
cmp
aad
shrb
cmp
clts
dec
ret
inc
dec
jbe
mov
jecxz
outsb
xchg
fnsave
mov
mov
sbb
mov
dec
push
test
pop
loop
cmp
mov
mov
popa
das
mov
xchg
scas
adc
std
push
jae
iret
dec
lret
adc
test
fidivs
pop
pop
sahf
mov
sub
adc
std
adc
loopne
add
mov
mov
mov
adc
pop
adc
cmp
lds
cli
adc
xor
jns
push
scas
inc
inc
jle
sub
or
xchg
pop
push
sahf
sub
xchg
adc
sbb
test
jle
imull
in
sub
les
add
jg
add
add
mov
adc
icebp
call
fisttpl
scas
mov
adc
mov
fidivl
fcompl
outsl
or
jg
push
sbb
addl
mov
pop
test
jmp
pop
jns
scas
stos
js
out
lods
iret
and
inc
inc
inc
out
lods
mov
cmp
cmp
je
dec
mov
pop
xor
sub
in
cmp
push
cmpl
stos
cmpsb
ret
dec
cmp
push
cli
push
repnz
jp
loope
mov
fiaddl
ret
sbb
aaa
clc
pop
lds
pop
jmp
inc
fbstp
scas
jb
loopne
ds
pextrw
pop
call
fbstp
popf
scas
jns
sti
fwait
add
push
jmp
lret
sti
lock
es
dec
lea
rcll
cmpsl
ljmp
sahf
and
add
mov
ljmp
call
fldpi
mov
push
test
xor
shll
inc
sub
lret
nop
stc
loope
pop
pop
enter
jnp
ds
cmpsb
lock
test
pusha
and
dec
push
rolb
in
push
inc
std
mov
pop
and
adc
aam
mov
pop
imul
adc
jne
ja
mov
xchg
ret
cli
dec
sbb
test
or
inc
push
add
pop
cmp
add
pop
xchg
and
mov
repnz
sub
sbb
pop
cmc
and
sbb
push
stos
jb
xchg
mov
sbb
dec
push
mov
mov
mov
mov
adc
xor
in
mov
daa
inc
jecxz
scas
lods
fs
add
fisubl
jp
or
mov
imul
mov
xlat
insb
sub
mov
push
addr16
mov
mov
lahf
or
arpl
and
adc
inc
in
test
movsb
mov
and
jp
add
xor
xchg
pop
and
inc
fiadds
and
lcall
cwtl
lods
push
sub
pop
cltd
daa
stos
leave
push
inc
push
aaa
shl
sbb
mov
jl
fcomps
and
and
aad
pop
lcall
adc
dec
lret
xor
jbe
sub
hlt
loop
add
cmc
nop
inc
mov
xor
aad
sarl
jecxz
jmp
lret
ret
push
stos
filds
cmp
and
xchg
pop
cmc
mov
inc
push
add
push
add
cli
rcrl
inc
fcmovb
das
mov
mov
dec
adc
negb
add
fstps
movsb
pop
pushf
or
imul
packsswb
pop
in
insl
lahf
aam
test
ds
mov
dec
pop
mov
fstpl
cmp
lea
movsl
test
stos
test
push
mov
xor
jecxz
movsb
mov
jmp
scas
test
and
dec
lcall
pop
addr16
sti
sbb
js
inc
in
out
cmp
stc
or
inc
cmp
movsl
shlb
pushf
lret
add
sbb
inc
jmp
pop
mov
es
cwtl
adc
add
adc
fidivrl
pop
mov
cs
daa
imull
and
adcl
jno
jp
test
add
mov
xor
fistpl
adc
stos
in
pop
or
scas
jp
out
imul
adc
mov
sbb
dec
aam
mov
jle
cmp
add
aam
adc
js
or
cld
or
cli
inc
insl
call
jmp
mov
fmull
movsl
sub
mov
ret
cmp
jb
mov
jae
rorl
insb
inc
aam
inc
fimull
insl
in
mov
in
adc
popa
push
dec
and
mov
push
sbb
dec
cmpsb
insl
inc
mov
cmp
je
mov
cwtl
movsl
push
js
xor
out
xchg
or
fwait
imull
pop
cld
sub
scas
outsl
out
lret
sub
mov
adc
sbb
dec
int
repnz
and
sub
ret
fidivl
data16
dec
inc
jge
pop
and
or
mov
or
aam
push
orl
jge
mov
mov
xor
mov
aas
lock
cmp
lock
pop
mov
int
jge
xchg
xchg
hlt
dec
test
ds
fsubrs
xchg
insl
push
cmpsl
mov
mov
fldl2e
rcll
mov
icebp
loope
lret
xor
jg
add
arpl
pop
adc
and
or
cmpsl
leave
xchg
mov
ret
insb
jo
cmpsb
xchg
push
sub
adc
jo
xchg
sahf
pop
icebp
and
push
xchg
in
or
cmp
ja
mov
cmp
lret
push
ret
push
xor
mov
inc
dec
lret
push
out
add
add
pop
inc
jno
and
sahf
std
rorl
negl
int
xchg
mov
out
add
je
push
cwtl
and
dec
adc
pop
jmp
int3
push
call
mov
xorl
pop
jp
pop
xor
iret
rorl
aaa
stos
gs
sub
pop
and
shr
cmpsl
out
xchg
fidivrl
or
pushf
and
lret
addl
xchg
loopne
out
test
xchg
lcall
movsl
xor
push
into
gs
cmpsl
add
test
outsl
repnz
lret
in
and
pop
push
aas
pushf
jmp
lret
fldcw
insl
jno
fsubr
lret
sub
mov
xchg
pop
pop
xor
lea
xor
fwait
iret
xchg
lock
and
fldenv
imul
stos
addr16
lret
jecxz
sbb
xor
xor
push
mov
inc
ret
xchg
sub
jge
lods
push
subb
in
fidivl
sahf
pop
cli
pop
clc
or
push
xor
mov
pop
ja
push
jmp
or
shlb
push
loope
sbb
roll
xchg
mov
pushf
xchg
test
lahf
mov
popf
cli
lods
mov
fcomps
mov
cmp
mov
pop
pop
and
aas
inc
push
repnz
cmpsl
mov
fisttps
mov
mov
les
pop
cmc
ja
xchg
inc
mov
pop
push
pushf
cmp
loope
popa
jne
xchg
decl
mov
xor
bound
out
addr16
pop
repnz
mov
fldcw
pop
addr16
shlb
pop
xchg
pusha
jp
push
mov
cmpsl
adc
jg
mov
cmpsl
rcl
or
jb
arpl
mov
jmp
stos
inc
test
leave
inc
popa
xor
push
jb
loop
addr16
fcomps
inc
mov
xor
or
lock
adc
jl
mov
pop
sbb
xor
pop
notl
cmp
idivb
repnz
jmp
stos
lock
xor
inc
into
xchg
adc
test
xchg
push
jl
js
out
sub
cmp
cld
je
or
xor
dec
inc
in
jbe
xchg
xchg
jb
xchg
xor
scas
insl
push
lods
inc
repz
dec
push
cwtl
lret
push
inc
je
je
je
push
xor
movsb
fwait
in
xchg
mov
inc
fs
into
mov
sbb
adc
clc
mul
flds
push
ss
mov
or
pop
fsub
subl
fs
fnstcw
repnz
fdiv
negl
mov
test
mov
pop
xorl
loop
aam
push
cmpsl
and
loope
ret
cs
sub
out
ja
hlt
mov
push
cld
mov
outsl
xchg
imul
cmpl
adc
sbb
lods
inc
mov
outsb
iret
fstl
xchg
outsl
rol
sub
pop
clc
dec
je
mov
xor
and
mov
ljmp
and
mov
insb
sbb
sbbb
cmp
iret
mov
mov
outsb
push
sahf
xchg
iret
jae
inc
xor
sbb
ret
hlt
add
xor
xchg
sbb
ror
repz
pop
mov
andb
jmp
mov
daa
ljmp
std
xchg
pop
push
sti
xchg
xchg
cmp
dec
loopne
xchg
xor
lods
andl
incb
sub
inc
pop
stos
jecxz
sar
lcall
sahf
gs
sbb
movsb
outsl
aad
mov
and
fcoml
repnz
out
mov
dec
jp
cmc
add
jne
push
inc
outsb
pushf
or
pushf
fistpl
xorb
test
pop
pop
xor
popa
sub
popa
or
and
insl
int
mov
and
aas
lea
lret
xchg
movsl
lods
inc
xlat
or
push
je
clc
mov
cmpsb
adc
shrl
or
pop
mov
fnsave
mov
xor
cmp
cmp
inc
mov
int3
stos
out
xorb
bound
cltd
inc
cld
stos
mov
js
adc
xchg
push
fs
xor
inc
xchg
aas
push
gs
xchg
movb
pop
and
mov
inc
pop
in
xchg
ja
dec
es
add
dec
push
and
or
sub
dec
add
xchg
xchg
sbb
das
lcall
adc
pop
add
ret
push
mov
movsl
mov
jae
push
inc
imul
insl
movsw
icebp
js
adc
test
jae
cmpsb
popa
lods
fcoms
js
pop
jge
out
daa
arpl
clc
xchg
int
test
fnstenv
mov
arpl
mov
imul
test
nop
pop
mov
pushf
jno
sarl
fsubp
adc
subb
stos
jbe
call
scas
xchg
add
inc
in
in
fnstcw
xchg
leave
leave
bound
aaa
or
sbb
jle
push
jnp
adc
stos
jmp
inc
in
xchg
insl
adc
inc
out
pop
data16
push
es
push
sti
inc
jno
dec
lds
out
pop
je
push
pop
mov
inc
test
inc
push
inc
popa
arpl
addr16
adcb
insb
cmc
shl
cltd
adc
add
aam
cltd
jb
ret
imul
incb
aaa
and
ja
pop
xchg
inc
fadd
outsb
lea
fsubp
arpl
shlb
imul
ljmp
adc
jae
mov
cmp
mov
pop
fists
shlb
mov
push
cmp
lock
jb
jno
lret
mov
mov
sbb
cmpsb
cmp
xlat
and
adc
xchg
mov
out
shl
mov
inc
sarl
adc
inc
lret
imul
add
cmpsl
lret
clc
or
cmpsb
cmp
or
cmpb
ja
ret
pushf
dec
pop
call
stos
push
gs
rorl
leave
sub
pushl
mov
sbb
movsl
andl
and
or
outsb
or
xor
push
mov
sbb
xor
lods
aaa
pop
mov
int3
rcrb
shll
sub
mov
mov
fidivrl
push
jbe
out
add
test
jne
outsl
jle
xchg
sbb
sub
popl
shrl
cmp
mov
xchg
xor
orb
sbb
fnsave
adc
jo
push
mov
fnstsw
retw
sbb
repnz
aaa
iret
imul
sti
sbb
mull
in
push
rcrl
mov
rcr
addr16
xor
shll
dec
add
xchg
pop
inc
add
dec
in
xor
out
xchg
ret
ficompl
jnp
adc
fdivs
jns
out
lds
add
and
xchg
sub
repz
sub
adc
das
mov
cwtl
cmpl
pusha
clc
add
es
insl
fs
imul
sbb
das
insl
add
adcl
and
insl
das
pop
pop
xor
outsb
adc
in
lods
adcl
xchg
sub
out
jp
data16
call
xchg
jae
and
mov
or
pop
int
pop
inc
push
inc
inc
cs
subb
out
popa
push
or
dec
mov
mov
mov
sub
fcmovnbe
lret
mov
push
movsb
cwtl
scas
adc
paddusb
shlb
add
loope
lcall
push
jmp
push
shl
cmp
add
shll
cli
and
not
cmpsl
adc
jecxz
push
std
daa
pop
mov
dec
mov
push
sub
test
ds
push
ret
hlt
js
stos
jbe
in
pop
lret
sbb
scas
jns
lret
loop
mov
stos
xchg
or
dec
int3
cmc
push
push
and
mov
jecxz
lret
aam
scas
jle
mov
fiaddl
and
pusha
pop
jle
mov
push
out
or
add
ds
inc
jo
mov
xchg
inc
test
xchg
xor
loop
mov
sub
mov
push
js
lods
fildll
outsl
adcl
push
jno
mov
adc
rolb
mov
test
inc
push
jg
xchg
sbb
jo
shrl
xchg
jecxz
jge
rol
jp
pop
xor
and
mov
and
cmp
int3
mov
jg
cmp
fwait
repz
adc
xchg
clc
mov
rcrb
adcl
or
sbb
inc
fwait
pop
leave
push
mov
xchg
pop
lods
mov
arpl
sbbb
ljmp
int3
push
add
je
call
imul
or
in
stos
push
dec
loope
lret
addr16
adc
test
add
xchg
mov
pop
lea
mov
xchg
out
aas
les
xrelease
inc
enter
shl
icebp
insb
out
js
sub
jb
adc
or
pusha
cmpsb
xchg
fisttps
int
clc
xor
or
aam
mov
pop
in
test
adc
or
pop
mov
jb
xchg
jnp
cmc
xchg
andb
das
icebp
xor
sub
jbe
mov
cli
ss
sarl
mov
push
cld
or
lret
push
push
inc
test
int3
aaa
cmp
mov
movsb
jecxz
das
jge
add
pop
xchg
sbb
inc
xchg
daa
std
lret
lock
ds
aaa
lods
add
movsb
xor
push
insb
scas
ret
push
xchg
mov
dec
scas
adc
scas
sbb
sti
dec
adc
insl
adc
sub
pop
in
jmp
outsb
add
xchg
lds
lea
outsb
or
lea
imull
fs
pop
int3
jp,pt
imul
inc
clc
testb
lret
jae
xchg
cmp
scas
dec
scas
cmpl
adc
test
xchg
cmp
jbe
dec
call
insb
xchg
push
sbb
dec
pop
fdivrs
sub
jne
adc
jb
iret
mov
add
movsl
fwait
mov
or
push
sbb
mov
incb
mov
pusha
test
push
jb
scas
mul
call
or
adc
lea
mov
sahf
and
jle
or
mov
insl
loopne
pop
add
sub
dec
jp
je
inc
insb
inc
adc
sbb
arpl
repz
imul
cltd
ja
mov
in
rcrb
xor
sti
xchg
and
inc
inc
pop
xor
mov
inc
or
sbb
mov
add
bound
and
pusha
sub
xchg
push
push
sub
jae
mov
loop
sub
mov
loop
mov
stos
sub
sbb
cmp
fcoms
cmp
fwait
sub
xor
aam
push
mov
xchg
push
repnz
ss
icebp
jo
jnp
cmpsb
test
xchg
push
add
mov
nop
mov
lahf
mov
mov
addr16
in
aad
xor
scas
popf
push
dec
mov
dec
call
jno
rcr
xor
lock
bound
ret
mov
mov
mov
sbb
jl
mov
orb
xorb
add
sub
and
stos
aad
int3
mov
rsqrtps
adc
or
xor
cwtl
stos
shrl
inc
xchg
or
inc
mov
push
xchg
mov
sub
ret
adc
das
xor
in
stc
sbb
sahf
push
inc
test
xor
push
out
push
jne
stos
cmp
adc
bound
out
mov
loope
dec
jne
sti
mov
lret
add
mov
rolb
in
pusha
xchg
int3
pop
test
sbbl
movsl
sub
arpl
imul
imulb
dec
enter
add
mov
sub
jns
or
in
daa
mov
test
fisubs
push
fmuls
insb
push
sbb
outsb
xchg
enter
add
push
out
pop
test
add
push
stos
cmp
mov
xchg
nop
and
add
ljmp
lea
xor
ret
jnp
jecxz
push
call
imul
imul
gs
jno
mov
sahf
andb
mov
addb
inc
dec
shrl
xor
cwtl
in
dec
sbb
dec
lcall
popf
jno
mov
dec
fsubl
xor
icebp
inc
mov
pinsrw
iret
daa
mov
aam
and
pop
mov
in
jmp
mov
dec
push
inc
mov
pop
jle
data16
fimull
jne
dec
pop
loope
xchg
ret
xchg
sub
mov
dec
sbb
cmp
inc
leave
sbbl
arpl
xchg
das
jbe
dec
test
sbb
pop
cmp
pop
cli
jns
inc
ds
sahf
xor
xchg
mov
imul
loop
jo
xor
out
test
mov
ljmp
sbb
jo
or
push
or
jnp
cld
cld
pop
es
ljmp
xchg
mov
out
push
sub
inc
cmc
jbe
clc
and
test
or
addr16
or
jbe
jns
or
enter
imul
mov
or
add
adcb
out
xor
xor
ss
xchg
lods
cmp
hlt
push
fsub
pop
push
aaa
icebp
mov
inc
dec
cmp
adc
aaa
push
test
rcl
pusha
std
jl
rcrl
mov
daa
jbe
inc
sub
sub
repnz
aam
sub
arpl
daa
and
lds
out
jl
test
sbb
test
repnz
loope
dec
fimuls
mov
je
arpl
xchg
iret
sti
pop
testl
rcl
push
cmp
jmp
sbbl
push
cmp
movb
scas
out
sbb
or
sarb
nop
cmp
jne
push
or
js
fsubl
clc
pop
test
push
leave
dec
inc
adc
jl
add
insl
pushf
push
lea
push
bound
jmp
movsb
and
lea
mov
inc
scas
jmp
sbb
movsb
repnz
lret
push
xchg
xchg
dec
cmp
fisubrs
push
sbb
add
lods
pushl
mov
adc
scas
icebp
insb
sub
enter
inc
push
popf
cwtl
scas
mov
btsl
icebp
call
xor
pop
rorb
fstps
mov
mov
push
inc
movsl
arpl
push
in
inc
jnp
pop
mov
je
mov
cltd
adc
sahf
dec
push
mov
int3
out
sbb
mov
sbb
add
dec
mov
xchg
adc
out
mov
jg
xchg
sub
filds
mov
fdiv
jns
xchg
push
or
loope
testl
cmp
mov
negl
jae
mov
loopne
cmp
mov
lods
jns
mov
mov
cmp
enter
popf
sub
adc
loope
add
cmp
mov
mov
jge
push
fdivl
or
ficoml
cmp
or
jne
inc
outsl
jecxz
popa
push
bound
ret
ss
sbb
mov
mov
lret
out
and
ret
adc
xor
jmp
lods
inc
mov
fldenv
push
nop
add
adcl
sbb
fucomp
inc
add
dec
xor
js
je
test
inc
das
jp
int
icebp
push
in
loope
pushf
scas
mov
inc
bound
test
and
push
mov
pop
cmc
mov
loopne
add
out
mov
jle
insb
repz
aas
ds
jno
daa
mov
mov
ret
rcll
sub
pop
loope
dec
cmp
and
lods
fldt
cmpsl
in
jl
bound
sub
xchg
inc
loope
and
stos
push
ss
movsb
xor
je
xor
push
lods
cmc
pop
aad
int
in
push
or
pusha
mov
out
mov
int
loop
inc
cld
sub
jmp
rorb
fcoms
mov
out
xlat
dec
and
push
ljmp
jno
sbb
loop
rol
arpl
dec
lods
and
outsl
imul
mov
jns
push
sbb
aaa
jp
jnp
enter
inc
add
sti
nop
push
fldt
lret
jle
call
and
jl
cwtl
clc
inc
mov
or
cmp
ret
imulb
scas
xor
lock
cmp
xor
jae
pop
ja
int
cli
jne
addr16
cltd
mov
push
sahf
push
xor
xchg
cmp
insb
pop
push
add
mov
insb
andl
jnp
ljmpw
push
cwtl
ds
aaa
or
loop
shl
dec
in
out
fucom
push
imul
in
mov
mov
insb
movsl
mov
loope
jle
adc
shrl
test
clc
add
add
shld
sub
push
dec
mov
jg
cwtl
lods
lcall
push
sub
jno
mov
cwtl
fsubrl
int3
or
mov
imul
xchg
mov
jno
pop
cs
test
jns
fs
int3
lret
test
enter
fucomi
push
and
aaa
or
xchg
push
ficoml
sub
lods
addr16
lret
ss
sub
pop
loope
dec
mov
adc
lea
fidivl
and
sbb
dec
dec
test
lret
sub
xchg
clc
adc
xor
mov
in
daa
push
jae
testl
xchg
ljmp
insl
mov
xlat
adc
stos
cmpsb
lret
jb
lods
jns
in
mov
in
xor
or
xchg
aad
cmp
repz
sbb
loop
insb
pop
push
jae
cwtl
mov
adc
adc
leave
cmpsb
lock
call
ret
xrelease
cltd
adc
jl
dec
pushf
aas
int
pop
cmpb
cmc
out
adc
push
test
xchg
sub
jo
jnp
mov
xchg
ljmp
out
test
rclb
repnz
adc
pushf
mov
testb
adc
push
push
mov
push
clc
popl
sbbl
mov
adc
lea
jae
xor
mov
pop
in
sub
cmp
cmp
lcall
push
ror
add
sub
sub
jne
xchg
or
cmc
int
imul
aas
jbe
dec
push
xchg
mov
xor
outsl
shr
mov
or
rorl
or
jl
or
adc
pop
mov
mov
int3
add
sub
or
xor
jnp
push
xchg
into
loop
xchg
jbe
leave
out
ss
daa
lcall
jp
sti
test
dec
cmc
mov
testl
mov
push
fbld
popa
adc
addr16
push
jb
and
sbbb
push
add
outsb
and
jo
jo
out
jno
in
jmp
mov
inc
rcrb
jle
andl
inc
mov
xor
test
jo
mov
orb
lret
test
jb
push
or
cmpb
jne
pop
adc
test
pop
in
into
gs
mov
in
add
adc
imul
insl
pushf
jmp
or
mov
mov
sbb
std
lds
js
in
and
mov
xchg
sub
adc
xchg
popa
pop
push
fwait
cmp
mov
ds
popa
jnp
lret
inc
frndint
mov
flds
ret
repz
out
dec
adc
xlat
and
cmc
or
movsb
daa
cli
pop
test
ljmp
fs
jnp
xor
lea
cs
sti
jmp
cmp
or
sbb
or
sbb
sbb
out
cld
jl
mov
test
push
fdivl
and
fidivrs
stos
clc
mov
in
fsubl
lret
mov
imul
lock
popa
jge
lock
test
fst
inc
into
and
mov
cli
push
je
in
js
icebp
je
pop
xchg
dec
stos
add
jp
xchg
ja
lcall
ret
pop
push
iret
jle
sub
push
and
mov
jnp
aaa
cmpsb
pusha
cmp
pushf
pop
nop
scas
pop
mov
sbb
sub
dec
sub
mov
test
mov
clc
inc
add
movsb
repz
jbe
clc
or
repnz
outsl
push
ret
cwtl
push
mov
or
or
add
cmp
sbb
dec
jmp
test
xor
addb
pop
fidivrs
inc
inc
mov
xchg
je
jbe
push
xchg
or
lods
mov
aaa
jmp
je
jg
jl
jae
add
enter
call
sahf
test
ret
fnsave
add
scas
mov
inc
outsl
rorb
js
xor
push
cltd
imul
addr16
jne
or
sub
cwtl
out
and
inc
fidivrl
pop
pop
cld
jae
enter
sbb
dec
sbb
push
jb
mov
cmp
mov
lods
andb
call
pop
mov
xchg
outsb
add
sti
mov
pop
mov
fidivl
imul
aam
rorl
xor
pop
jge
and
addl
andb
xor
pop
icebp
test
lret
orl
in
xchg
jle
stos
mov
std
inc
mov
inc
sarb
popa
jb
mov
clc
mov
or
shr
dec
jle
insb
js
mov
adc
mov
sbb
hlt
jle
xor
out
jmp
jecxz
add
pusha
dec
or
mov
in
dec
dec
sbb
sub
test
hlt
inc
es
mov
sub
lea
lds
dec
push
xchg
sbb
in
lods
xor
dec
pusha
aas
fbld
inc
loopne
cmp
in
jo
xlat
sbb
pop
push
sbb
xchg
cmp
nop
in
add
sbb
ds
notb
test
data16
push
neg
imul
subl
add
out
mov
outsb
and
je
dec
lods
setg
mov
or
daa
data16
inc
sbbb
fimuls
add
dec
pop
sbb
loop,pt
xchg
cmp
pushaw
stos
loopne
insl
add
daa
in
push
daa
push
dec
dec
or
pusha
push
push
sahf
add
into
cmpb
and
ficomps
sub
es
fiaddl
inc
mov
cmc
dec
mov
cli
and
pop
fwait
lock
sbb
xchg
inc
cmpsl
xor
cmc
lret
js
jge
clc
popf
mov
les
mov
jl
outsl
movsl
adc
adc
xor
xlat
add
push
xchg
fisubrs
inc
ss
mov
movsl
adc
cwtl
loop
mov
lods
add
mov
or
scas
mov
or
xchg
pop
dec
bound
nop
add
fmull
mov
xchg
jae
ret
push
sbb
jne
mov
inc
xchg
test
int3
inc
mov
data16
xchg
add
ja
cwtl
and
iret
and
dec
dec
lahf
jno
imul
or
jno
fwait
xor
mov
jge
fists
jle
sbb
cli
sub
dec
in
test
enter
inc
or
xor
add
insl
sub
mov
icebp
movsl
cmp
pop
jmp
jb
and
mov
and
test
jge
add
and
sahf
ret
mov
fnstcw
pop
pusha
testl
pop
inc
fildll
mov
jae
sbb
pop
loop
jo
ljmp
jmp
jne
test
shll
add
in
pop
movsl
cld
fucomi
outsl
dec
shl
je
xor
into
and
dec
adc
xchg
push
xchg
sub
adc
sub
leave
rcrl
xchg
sub
or
insb
jbe
dec
mov
fwait
sti
roll
push
xor
lret
jno
pop
repz
sub
adc
fcmovb
pop
test
out
adc
cmc
rcl
hlt
push
scas
push
pop
push
cwtl
mov
adc
pushf
add
xlat
push
popf
push
ljmp
addr16
push
xchg
aas
out
lds
jnp
and
inc
ret
or
es
mov
ds
inc
ret
or
data16
push
sub
push
inc
les
push
bnd
mov
push
call
js
cltd
std
clc
popf
pop
cmp
lahf
jns
inc
adc
ja
das
inc
xchg
in
dec
xchg
popf
or
insb
pop
xor
aam
mov
nop
lds
mov
mov
sub
xchg
xor
call
movsb
sti
jg
nop
daa
sbb
imul
pop
out
imul
insb
inc
ficomps
and
cmpb
fs
and
mov
mov
test
lret
push
mov
arpl
sbb
dec
sub
fisttps
lea
mov
add
jge
out
movsl
xchg
add
insl
mov
fnstsw
les
rcll
les
cmp
outsl
ss
adc
outsb
bound
mov
cmp
mov
repz
mov
dec
mov
sub
fldt
les
fs
add
loop
cmpsl
pop
fcompp
je
jle
mov
int3
sbb
mov
fucomi
sub
scas
xchg
pop
sub
or
daa
and
icebp
sbb
jge
insb
imul
mov
mov
lcall
xchg
jg
lret
sbb
sahf
cmc
shll
and
popa
fisttpl
test
das
jno
popa
dec
or
inc
sbb
ret
sbb
xlat
jae
inc
sahf
sahf
addl
sub
xor
stc
out
inc
pop
addr16
mov
pop
movsb
ljmp
and
sahf
sub
jbe
adc
rep
sub
shrl
or
jl
or
cld
xchg
lret
sub
mov
push
mov
repz
push
pop
xlat
jb
icebp
rcll
divl
into
sub
jb
lret
daa
data16
sub
enter
xlat
ljmp
sub
clc
sub
mov
std
imul
divl
jb
inc
jp
ljmp
add
mov
mov
push
adc
xchg
jle
dec
jb
mov
imul
icebp
es
scas
clc
cli
pop
insb
xor
test
mov
addr16
mov
pushl
and
dec
cmp
loop
add
test
sti
bound
orb
or
mov
lods
int3
push
ljmp
adcb
adc
arpl
jae
dec
test
cmp
jl
mov
sti
pop
pop
shll
pop
ds
sub
shrl
jno
dec
gs
xchg
inc
das
push
stos
sar
sahf
sub
cmp
mov
hlt
mov
adc
sub
mov
push
adc
or
pusha
pop
dec
popl
icebp
jb
hlt
repnz
out
cmc
aam
aaa
inc
inc
les
shrb
inc
mov
aam
jbe
loop
dec
sbb
xor
ja
cmpb
pop
cli
push
out
stos
add
ret
push
cmpsb
mov
mov
xchg
in
outsb
cwtl
jbe
loopne
aam
out
cmp
dec
aad
clc
mov
sub
sahf
ss
mov
cmp
adc
ret
mov
mov
rolb
jp
out
in
xor
stc
outsl
add
js
mov
pop
or
stc
inc
insb
gs
addr16
cmp
adc
xor
ss
xor
sub
dec
dec
call
sbb
cmp
sub
nop
sbb
negb
scas
out
pop
and
sub
xchg
in
mov
int
push
sbb
ss
add
sarb
aam
mov
dec
add
mov
push
dec
in
mov
divb
jp
pop
cltd
outsl
pusha
dec
scas
xchg
mov
stos
aas
inc
xchg
pusha
mov
int3
arpl
in
push
stos
lret
dec
pop
notl
mov
xchg
push
loopne
fidivrl
nop
mov
fisubl
aas
or
std
and
stos
dec
scas
cs
pop
lock
mov
out
mov
mov
inc
outsb
sbb
lock
xchg
js,pn
arpl
sahf
sbb
jge
pop
mov
pop
scas
aas
dec
sahf
inc
jae
inc
out
scas
dec
push
jg
pop
jecxz
and
fisttpll
int3
icebp
cmp
orl
mov
popf
pop
icebp
int
xor
mov
cld
xchg
pusha
stos
sbb
and
cmpb
lret
mov
inc
leave
insb
xchg
or
cmp
add
lahf
mov
out
aad
adc
sub
pop
rorb
imul
sbb
and
in
push
cmp
jecxz
xor
or
push
int
icebp
lcall
sub
ficoml
dec
popa
mov
cwtl
imulb
std
jle
jo
pop
xor
mov
out
in
mov
insb
or
scas
repz
push
outsl
jl
aaa
mov
sbb
rcll
ficoms
sbbb
outsl
addl
mov
fidivl
in
ret
push
or
int3
xlat
push
jmp
lret
ret
or
pop
icebp
in
lcall
jle
out
mov
mov
jb
push
push
js
mov
addr16
inc
sub
test
adc
int
push
inc
dec
pushl
in
aaa
test
testl
test
jo
and
xchg
jg
in
inc
in
mov
popa
in
sub
jo
sbb
mov
popa
js
fdivl
test
mov
xor
jne
repnz
or
roll
mov
xor
ret
dec
notl
and
lret
mov
pop
stos
push
stc
ds
pop
pushf
aas
add
js
dec
xchg
setb
xchg
add
loop
sbb
daa
rorb
and
test
lret
dec
out
inc
idivb
out
je
cmpsl
jne
mov
adc
lock
inc
cmp
and
mov
xor
mov
jns
xor
sbbl
into
popa
insb
lret
pop
cmp
shlb
pop
popf
adc
xchg
sub
nop
pop
aad
test
adc
insl
es
xchg
push
lods
lock
test
outsl
inc
adc
jb
sbb
cld
push
inc
mov
das
push
inc
test
fstpl
daa
push
dec
or
hlt
mov
fdivl
int3
jecxz
jns
mov
jnp
retw
insl
test
insl
push
cmp
push
loop
mov
aad
clc
js
clc
das
test
scas
scas
mov
cli
lret
adc
pop
xchg
or
inc
push
dec
dec
repz
mov
pushw
push
out
xchg
and
jl
push
stos
push
cs
jmp
lea
fsubrs
fisubs
loop
arpl
pop
das
push
lods
push
xlat
leave
pop
int3
sti
add
xchg
ficompl
test
add
out
std
ret
inc
adc
mov
clc
js
sbb
fisubrs
adc
jne
gs
sar
inc
mov
sbb
sbb
les
cmp
or
out
lea
adc
mov
adc
cmc
in
test
ret
cltd
insl
fs
int
xchg
mov
sarb
or
xor
fldcw
call
negl
inc
test
jp
pop
stc
fstl
xchg
xor
outsl
fmull
cmp
std
inc
mov
xchg
adc
inc
mov
add
mov
popf
cmpb
inc
popa
adc
pop
pop
xor
ret
pop
loopne
jp
test
shr
loop
add
cmp
jecxz
pop
mov
leave
push
jnp
into
arpl
xchg
out
test
add
xor
pop
or
insl
xor
test
push
jo
xorl
aaa
xor
cwtl
das
cli
push
inc
fcoms
mov
cmp
dec
scas
out
loope
rcr
sarl
rorl
mov
xchg
add
push
jns
psubd
pop
out
dec
scas
daa
inc
cmc
dec
cli
dec
jne
push
lret
iret
sub
jne
xchg
stos
and
dec
fdivrs
mov
fwait
out
fidivs
sti
gs
loopne
mov
les
sbb
and
pop
cltd
insl
jl
mov
rcrl
sub
out
jbe
into
mov
push
nop
out
je
outsb
add
dec
xor
in
xor
mov
shll
loope
mov
lret
loop
sbb
mov
lock
ret
mov
dec
fstl
or
sbb
pop
jnp
lods
and
divb
and
jge
cli
nop
shlb
xor
and
popf
loop
cmp
mov
cmp
add
cmp
mov
or
incl
lds
leave
fistps
fcompp
push
das
movsl
pop
cli
cmp
mov
jo
rcr
mov
push
push
test
sbb
lock
and
pop
cmp
orl
mov
call
mov
push
cmp
xor
or
loop
aad
mov
cmp
cmp
xor
int
push
insb
inc
lock
dec
mov
lods
movsl
cmp
xlat
push
mov
inc
fwait
xor
popa
popf
lock
push
cs
inc
in
jecxz
or
fnstsw
test
mov
int3
mov
cld
xchg
dec
sahf
cld
xchg
adc
adc
jne
in
popa
mov
pop
mov
jp
mov
shrb
in
and
iret
mov
jge
push
cmpsb
push
lods
addr16
data16
sbb
outsl
fildll
int3
add
inc
idiv
push
jmp
cwtl
jmp
pop
fdivl
adc
xchg
rolb
test
sti
pop
and
adc
mov
jnp
or
jnp
cmp
mov
mov
out
jp
insl
adc
clc
jo
inc
scas
rcrl
out
dec
loope
xchg
mov
push
popa
es
pop
sbb
aad
push
aam
notl
mov
aam
push
jecxz
lret
or
clc
sub
push
fwait
xor
xchg
movsb
ja
or
push
sbb
mov
sub
sbb
les
lret
or
or
imul
stc
and
lods
aaa
inc
fwait
pop
es
jo
lds
testl
orl
imul
lahf
cmpsb
fs
xacquire
push
test
jae
out
dec
int
sti
mov
arpl
jns
sub
pop
loopne
les
push
mov
jl
jg
int
rol
data16
popf
cmp
jecxz
test
ljmp
jno
pop
imul
repnz
out
mov
and
pop
lods
call
or
mov
adc
shlb
lahf
jmp
mov
jnp
add
lds
and
hlt
test
jmp
testb
in
int
loope
lea
sbb
fsubrs
xor
repnz
pop
push
pusha
xchg
and
sbbl
pop
popa
in
push
sub
mov
cs
in
popf
sub
cwtl
pop
inc
adc
mov
int
stos
add
xor
inc
scas
outsl
jns
and
imul
push
mov
test
xor
imul
movsl
cmp
bound
mov
sub
mov
push
mov
pop
jge
push
scas
inc
out
test
sarl
roll
cmc
mov
mov
and
jo
call
into
lods
addb
or
jecxz
dec
fldenv
outsl
daa
xchg
je
fmuls
scas
movsl
loop
push
lods
fcmovnb
aas
mov
xchg
mov
sbb
add
jp
mov
sbb
mov
je
packsswb
out
out
sub
mov
adc
cld
push
cli
mov
das
push
adc
jno
test
or
push
add
testl
add
fmuls
subb
mov
gs
push
inc
shrl
dec
sbbl
pop
cltd
mov
int
sti
adc
sbb
push
cmp
test
cli
adc
orl
mov
mov
xchg
push
movsl
jecxz
add
xchg
dec
jmp
fisubrs
xor
sbb
xor
cmp
loop
ror
subl
or
dec
sub
decb
ja
jae
test
mov
in
fucomi
dec
imul
aaa
sahf
cmp
mov
orl
xor
inc
ret
andb
lret
mov
add
addl
xor
cmp
outsl
xor
je
push
in
jmp
jp
xor
inc
js
jns
push
test
das
mov
notb
loop
sub
idiv
xlat
std
mov
mov
cmc
sub
cwtl
mov
arpl
pop
scas
sti
stos
sub
jo
mov
jp
cltd
rorb
jecxz
roll
dec
sub
push
adc
fsubrl
dec
jecxz
jecxz
loop
fsubrl
fisttpl
push
repnz
fnstcw
nop
push
lret
cmpl
dec
outsl
hlt
add
jecxz
and
cmp
in
out
push
popf
std
dec
mov
pop
data16
and
jo
repz
dec
ret
xchg
mov
mov
and
bound
jecxz
cmp
cld
xlat
mov
int
mov
push
call
into
mov
inc
push
gs
dec
mov
ret
aam
jp
in
outsl
test
add
mov
pushaw
jecxz
cmp
pop
cmc
repnz
jl
jl
movsb
loopne
popf
adc
push
inc
add
mov
adc
add
mov
rcl
push
and
sub
cltd
pop
xlat
cmpsb
mov
or
jo
xor
and
outsb
in
xor
pop
addr16
mov
adc
xor
decb
inc
jns
filds
movsl
dec
add
and
pop
lret
cld
fs
aad
mov
push
adc
mov
add
cwtl
inc
and
std
jmp
pusha
ds
in
mov
push
add
dec
imul
add
jb
dec
cmpsb
sbb
jecxz
in
fmuls
mov
push
push
or
pop
adc
xor
sbb
call
pushf
cs
mov
out
add
js
into
lea
test
mov
jge
icebp
int3
pop
mov
les
fisubs
cltd
xor
mov
cmp
aas
adcb
aad
repnz
sub
push
mov
pop
aas
or
add
push
rcrl
pop
push
dec
lds
data16
xor
dec
jnp
sbb
add
pop
or
in
push
xchg
aam
int3
jae
dec
pop
fiaddl
sahf
popa
lock
inc
popa
sub
cli
mov
in
jne
pushf
cmp
shrb
icebp
mov
and
cltd
std
mov
movsl
xor
sub
ljmp
ss
dec
je
fidivrl
test
mov
mov
push
fstps
fisttps
pusha
cli
jo
aam
cmpsb
pop
cltd
mov
dec
repz
jp
pop
hlt
adc
xchg
sub
adc
mov
int3
mov
jns
cld
jno
stos
and
incl
push
xchg
xlat
xor
notb
aas
imul
or
rcrb
sub
imul
shlb
lret
jmp
popf
out
cld
mov
dec
das
ljmp
push
inc
mov
pop
movsb
adc
mov
and
stos
dec
pusha
pusha
add
jg
and
xchg
movsl
dec
mov
lods
cmc
sub
hlt
mov
and
mov
pop
jae
aaa
push
sbb
cmp
pop
xchg
lea
push
mov
fldt
inc
xchg
aam
mov
enter
in
pop
ds
xor
sub
fidivrl
jge
scas
and
xor
mov
xchg
cmp
test
or
push
leave
pop
lock
jmp
push
inc
test
outsb
out
pop
mov
mov
bound
lret
add
or
insb
sub
mov
jo
les
jno
lcall
cld
repz
ss
inc
mov
aas
push
pop
lahf
mov
jo
shll
negb
mov
mov
mov
test
xchg
stos
jmp
or
pop
popf
pop
in
push
inc
adc
push
adc
lds
jbe
cli
sbb
pop
and
jo
dec
es
pop
lahf
ret
lret
lcall
add
sub
rcr
dec
test
inc
xlat
push
ja
stc
mov
out
sub
rcrl
cmp
or
popa
jb
push
call
xor
test
aam
add
sub
jo
movsl
cmp
fisubrs
iret
imul
pop
jno
dec
std
loope
outsl
ljmp
mov
mov
das
das
in
and
rol
jno
ret
lcall
jne
and
xchg
out
outsb
add
jns
je
cmc
adc
sti
xchg
pop
outsb
xchg
jns
ret
mov
sbb
xabort
inc
rorl
sbb
hlt
lahf
ret
mov
notb
jbe
xchg
add
into
outsl
and
pop
outsl
add
dec
das
mov
sub
into
pop
test
mov
data16
lods
outsl
push
enter
outsb
movsb
xchg
cmpsl
sub
cmp
icebp
adc
and
nop
sbb
xchg
loopne
pop
push
in
sbb
jl
push
pop
lea
and
loope
fcmove
pop
or
lret
cmp
sbbb
cmp
pop
fisttps
sbb
cmp
lret
andl
sbb
cli
scas
mov
nop
enter
mov
sbbl
push
repz
andl
mov
pop
pop
lods
and
add
outsl
daa
insb
insb
stos
xorb
or
cmpsb
or
scas
pop
aad
dec
push
jl
add
lods
aad
fisttps
fistpll
pop
ficoml
cmp
sub
out
dec
xchg
xchg
outsl
push
int
push
push
jp
inc
cmp
cwtl
das
and
push
pop
push
loop
mov
enter
adc
sub
jp
outsb
lods
dec
xlat
cli
inc
int
jae
out
mov
loopne
nop
idiv
gs
sbb
mov
push
xorb
lods
mov
mov
fildl
mov
leave
pusha
clc
stos
stc
test
dec
jb
cmpl
adc
cmp
ljmp
out
das
xchg
sub
inc
xor
push
cli
dec
fsubr
ret
rcrl
fxch
pop
pusha
and
lret
insl
or
pop
mov
and
push
popf
js
mov
fiadds
xlat
js
and
add
nop
lods
and
and
pop
mov
cmp
movsb
cmpsl
lahf
push
flds
outsl
lret
test
divb
out
cli
and
add
pop
pushf
dec
lret
mov
sahf
mov
sbb
add
in
popf
jge
andb
lahf
imul
outsb
inc
inc
jo
inc
fcoml
push
and
out
loopne
imul
cltd
sti
xchg
inc
ficoml
or
cwtl
xchg
cltd
xor
cmp
arpl
arpl
ljmp
imul
mov
sub
out
je
dec
add
inc
je
dec
pop
call
mov
adc
mov
outsb
or
jg
ja
jle
sub
incl
test
and
push
js
loopne
or
mov
es
lods
in
jecxz
xor
test
pop
loope
popf
adc
js
loope
and
jmp
pop
movsb
aas
push
lods
xor
mov
jge
pop
jmp
clc
jae
fcmovne
adc
mov
orb
mov
je
mov
mov
data16
js
pop
or
adc
addb
add
out
sbbl
mov
push
outsl
sub
mov
sub
test
in
push
outsl
dec
push
sarb
ds
xlat
mov
enter
lds
shrl
fnsave
cmc
inc
jne
dec
xor
or
mov
push
fwait
andl
popf
fs
push
insb
add
jl
adc
movsb
cmpsb
inc
push
fucomp
sub
mov
cltd
int
out
add
repz
mov
xor
add
jns
sub
sbb
mov
shll
fnstsw
ret
repz
or
scas
pop
mov
stos
mov
movsb
in
out
mov
add
dec
pop
dec
sbb
clc
mov
shll
mov
sub
in
add
in
imul
scas
js
cmpsl
jnp,pt
adc
mov
add
pop
mov
fsubs
pop
ret
xchg
adc
cmpsb
dec
jecxz
inc
push
movsl
xchg
int3
out
xchg
or
or
dec
push
mov
leave
out
cmpsb
cmp
dec
inc
les
pop
lahf
push
cmp
test
adc
mov
add
mov
popf
lods
shl
sbb
pusha
bound
and
mov
dec
test
cmp
sbb
imul
ret
lret
bndstx
jne
mov
pop
sub
dec
lods
call
aam
adc
inc
pop
lret
outsb
mov
mov
adc
pop
xchg
xor
int3
jmp
hlt
mov
lret
sahf
xor
dec
pop
cmp
xchg
enter
fucomi
inc
repnz
fdivrl
int
mov
pop
and
xchg
shll
xor
push
cmpsb
jge
mov
enter
pushl
enter
pop
bound
sbb
mov
js
js
xor
lcall
xchg
cs
or
inc
push
les
fsubs
out
mov
shl
adc
push
pop
jnp
push
cmp
data16
nopl
cli
in
in
xchg
sbb
in
adc
cmp
mov
mov
lahf
dec
mov
in
movsl
jo
push
jno
sub
dec
ds
hlt
xor
xchg
aaa
add
dec
sbb
and
aad
sub
out
nop
icebp
sahf
xor
add
ss
push
repnz
jo
push
mov
push
pop
icebp
mov
dec
sbb
fnsave
es
push
xchg
xor
jmp
pop
push
mov
in
lock
push
aas
outsb
jp
mov
push
in
dec
in
loop
leave
push
xor
or
aaa
sub
sbb
gs
mov
push
xor
adc
loop
fcompl
test
cmpsl
sbb
mov
cltd
add
js
inc
out
dec
imul
add
mov
push
push
push
arpl
xchg
xchg
fsubl
mov
lods
jmp
push
stc
popf
popa
sub
insl
adc
jmp
aaa
push
cmp
xchg
dec
outsl
repnz
arpl
insb
leave
jns
stc
sub
mov
lahf
adc
dec
ret
mul
fbld
push
lret
jae
scas
fbld
mov
es
sub
test
adcl
mov
cmp
xor
push
lock
int3
repz
pushw
jle
es
xor
jl
xor
push
jb
xor
popa
outsl
into
lea
arpl
or
jne
fdivl
xchg
mov
mov
mov
push
push
push
shll
mov
sbb
lds
sahf
adc
xor
dec
lret
in
push
adc
xchg
mov
fnstcw
sahf
and
ret
dec
popf
mov
insl
rcll
sbb
xchg
pop
lret
popf
je
pop
pop
adc
xor
push
jl
mov
and
mov
fnstsw
cmp
in
shrl
je
lock
fisttpll
ljmp
stos
rcrb
rol
jg
xlat
mov
rcll
scas
add
aas
mov
xchg
push
push
sbb
es
sub
xchg
inc
dec
jl
xlat
cli
push
sbb
in
dec
lea
push
mov
std
push
sub
or
sub
add
pop
ds
mov
fmull
dec
or
dec
jle
lock
mov
dec
loopne
in
nop
inc
fcmovnbe
ja
loope
xlat
adc
xchg
cmp
outsb
jnp
cmp
add
pop
cmp
xor
adc
push
cltd
fists
xor
and
push
lret
rol
push
stos
jp
xor
cmp
jmp
mov
push
push
adc
or
adc
insb
mov
lcall
lcall
scas
xor
pop
add
inc
xchg
inc
ficompl
movsl
jo
add
std
sbb
jmp
dec
push
cmp
inc
pop
lds
jmp
inc
fstps
ja
fsubl
pop
mull
inc
ja
xor
push
inc
push
or
es
xor
xor
pop
insb
fdivp
lea
xchg
pop
cmpsl
sub
xchg
sub
jne
dec
cmpsl
iret
hlt
cmp
repz
ljmp
jne
lea
fstl
gs
stc
adc
push
mov
add
stc
popf
clc
lcall
xchg
test
jae
mov
test
lea
ja
stos
or
pop
aas
jae
adc
mov
pushf
test
jl
cmp
in
rcr
call
fbld
dec
fstpt
cmp
or
pop
insl
pushf
je
push
das
mov
fucomip
ret
sbb
mov
adc
mov
jbe
lahf
outsl
mov
sbb
lret
mov
insl
xor
outsl
dec
xor
loope
shlb
testb
movsl
test
addr16
sub
jb
inc
fdivp
jne
call
mov
ds
sbb
insl
lock
mov
iret
loope
leave
hlt
push
push
dec
test
out
xlat
into
outsl
cmp
xor
arpl
add
std
mov
lea
mov
and
push
xor
mov
insl
lea
int
loopne
jmp
cmp
xchg
bswap
shl
movsl
dec
dec
and
out
lret
mov
stc
loop
mov
fprem1
mov
mov
jne
aam
in
and
mov
xor
loop
cmp
out
es
test
xchg
in
jbe
ja
roll
cs
inc
xor
cmp
dec
mov
shl
pop
sub
push
xchg
mov
sbb
shlb
popf
scas
movsl
loop
fldcw
push
mov
iret
daa
xor
cs
stc
ds
pop
cltd
push
leave
ljmp
xchg
jge
loopne
mov
inc
pop
sti
xchg
jns
pop
sbb
cltd
test
inc
mov
lds
sub
cmp
sub
and
jle
hlt
es
fsubrp
mov
and
clc
jg
dec
mov
into
or
outsb
push
xor
lods
mov
mov
jno
std
xchg
movsl
scas
mov
xchg
test
sub
and
cmpb
pop
imul
fmuls
scas
imul
popa
xor
adc
or
push
ret
inc
lods
hlt
aaa
lds
ret
jg
arpl
mov
loopne
cli
xchg
inc
add
mov
dec
bound
push
xor
sbb
dec
jle
sbb
jge
cli
adc
or
pop
adc
xchg
jae
cmpsb
dec
xor
ret
sbb
nop
mov
adc
aaa
pop
dec
ror
rorl
add
push
stos
xchg
and
push
leave
adc
push
enter
adc
ja
push
lcall
loopne
in
add
call
iret
inc
sarw
xchg
jg
jne
test
nop
mov
push
add
rcrl
pushf
sbb
jb
lcall
cld
sub
je
pop
mov
push
xor
mov
cli
push
push
pop
adc
push
into
xor
lea
sahf
mov
cmpsb
jecxz
mov
push
icebp
sti
das
fnstcw
imul
lcall
cmp
fiadds
test
test
sbb
inc
push
cmp
jp
cwtl
stos
fld
lret
addr16
pop
inc
enter
test
into
fnstenv
cmpsb
aaa
mov
mov
rcrb
into
xor
rcrb
icebp
inc
push
sbb
fnstcw
loopne
sub
in
pop
es
mov
decb
pop
rorl
push
clc
mov
popf
fs
shll
jo
loop
pop
mov
test
or
enter
sub
adc
mov
pushf
xor
je
and
mov
bswap
cs
sbb
xor
inc
out
gs
bound
roll
aaa
dec
or
mov
pop
hlt
mov
imul
jnp
pop
aam
mov
sub
push
jae
sbb
nop
mov
push
scas
push
ljmp
je
xor
lds
push
mov
out
push
push
popf
mov
sbbl
push
ss
fidivrs
and
xor
out
les
sub
mov
negl
push
mov
cmp
mov
repz
push
test
push
arpl
jge
mov
mov
dec
inc
int3
sub
shll
int3
push
stos
out
js
aad
xor
ss
pusha
ss
sbb
test
mov
pop
dec
pop
dec
and
xor
mov
or
in
insb
pop
pop
ret
dec
mov
dec
adc
ja
outsl
mov
fdiv
adcl
xor
sahf
pop
inc
mov
mov
sbb
and
cmp
xchg
cmp
fs
xor
jmp
andl
xor
mov
cmpsb
std
jb
ljmp
pop
or
xchg
adc
jp
ja
mov
inc
jge
in
fistpl
inc
cmp
dec
jecxz
inc
push
out
xor
push
neg
inc
fdivr
xchg
xlat
jp
push
repz
es
or
xchg
cli
mov
leave
add
pop
lret
mov
adc
mov
pop
adc
add
xchg
mov
sbb
fstl
test
dec
xchg
int
addr16
loope
cld
loop
xchg
dec
jo
or
sbbb
rol
stc
push
push
fnsave
pop
cltd
pop
ds
mov
pusha
cli
jecxz
mull
daa
in
mov
ficomps
int3
fidivrs
in
dec
lea
roll
sbb
jno
test
pop
inc
pop
hlt
jae
push
and
ret
ss
in
xchg
add
int3
icebp
and
jbe
sbb
cmp
pop
cmpsl
into
sbb
inc
jae
pop
out
orb
cmp
mov
push
xor
pop
cmpsb
lret
mov
dec
mov
testl
adc
insl
mov
mov
les
mov
pop
out
dec
icebp
ja
xor
push
add
jg
loope
mov
gs
inc
rcrl
cli
and
or
sti
mov
into
xchg
sarl
push
dec
loopne
loope
sub
je
jnp
cli
in
jp
or
mov
hlt
leave
sti
rcrl
pop
popa
frstpm(287
fcomip
cltd
inc
and
test
inc
inc
incl
daa
jns
xor
cmpb
fiaddl
mov
pop
lahf
outsl
mov
leave
dec
mov
xor
ja
out
sbb
scas
mov
ficompl
inc
inc
push
sahf
sahf
xor
aaa
jecxz
cli
nop
dec
mov
into
ja
jecxz
ret
lods
mov
in
push
loop
mov
mov
lea
popa
ret
out
xor
mov
jle
test
out
mov
scas
call
xchg
int
xor
aas
pop
aas
push
cmp
mov
add
jns
xchg
pop
clc
cmpsl
dec
icebp
xor
sub
mov
cmp
bound
cmp
or
pushf
mov
add
xchg
mov
fsubr
aam
fucomip
cmc
in
out
xor
jns
cli
es
sbb
test
sbb
jecxz
mov
sbb
test
cld
adc
and
sbb
jg
mov
icebp
push
fisubs
lahf
push
testl
mov
sbb
jle
aaa
pop
lret
sbb
dec
dec
in
in
loop
movsl
sbb
testl
cli
cld
jns
lods
inc
jecxz
pop
inc
arpl
or
pop
sti
dec
and
clc
sbb
aaa
or
ds
fdivl
pop
dec
pop
jbe
jle
roll
mov
xor
js
stos
scas
rcll
cwtl
and
insb
jg
xchg
pop
mov
aad
jns
add
adc
dec
daa
mov
lea
adcl
or
jno
mov
pop
jmp
or
imul
shrl
mov
icebp
dec
sub
mov
xchg
scas
jae
loopne
scas
inc
ret
add
and
ret
shrb
mov
insb
pop
in
mov
jp
xchg
ds
test
in
sbb
pusha
ljmp
mov
cmp
or
cmp
shrl
shrb
test
rcll
mov
dec
mov
pop
sbb
imul
in
mov
mov
sahf
rorb
mov
and
sarl
jg
fcoml
sub
call
fldenv
mov
sbb
in
mov
outsl
cmp
shr
addr16
xchg
pop
jecxz
mov
stos
xchg
insl
stos
arpl
adc
inc
or
mov
or
xor
xchg
ret
les
imul
in
lret
ds
jl
pop
movsb
cmp
dec
mov
push
outsl
outsb
clc
mov
adc
pop
sub
int3
arpl
call
jmp
lods
out
in
aaa
std
or
cmp
pop
xor
les
loopne
jecxz
pop
push
es
mov
mov
loope
pushf
pop
in
aam
dec
test
pop
mov
cmp
lea
sub
and
movd
clc
push
shl
xchg
inc
mov
cmp
negl
rol
out
jnp
add
cmp
pop
fucomi
fmul
ljmp
popa
das
iret
mov
mov
imul
test
sub
jp
movsl
push
lahf
pusha
cmp
cwtl
and
es
call
and
nop
add
xor
imul
rorl
push
mov
jne
mov
jo
cs
push
inc
xor
mov
aam
in
inc
insl
sbb
arpl
call
std
lret
test
sub
push
sar
pop
jmp
sahf
pop
jo
lea
push
out
pop
lds
loop
mov
dec
or
in
scas
or
cmp
push
popa
lods
mov
inc
into
or
or
adc
add
popa
cs
xchg
ljmp
cmc
int
inc
mov
jne
xor
testb
dec
or
cs
mov
sbb
mov
xchg
es
ja
jo
or
iret
xchg
mov
leave
jl
mov
and
lock
mov
sub
dec
cmp
sarb
gs
stos
icebp
sbb
or
xchg
jb
mov
das
cld
add
adc
inc
cwtl
jge
pop
cmc
jmp
clc
cld
mov
push
and
ficompl
mov
pop
mov
call
adc
pop
inc
or
xor
add
mov
mov
std
clc
hlt
mov
xor
aam
push
shrl
adc
push
jae
sbb
mov
inc
std
mov
inc
std
sti
mov
out
and
jl
mov
sbb
adc
or
mov
cmp
imul
stos
bound
ret
push
andl
inc
pop
inc
addr16
cwtl
lods
daa
sub
jmp
jno
jmp
popf
rol
inc
mov
push
push
add
push
int3
pop
mov
dec
out
clc
mov
hlt
sbb
nop
push
and
jmp
xchg
dec
es
dec
jecxz
cwtl
pop
in
scas
sbb
stos
ljmp
mov
add
adc
frstor
xor
lods
mov
cmc
lcall
sbb
adc
and
cltd
add
mov
call
pushf
into
xchg
xor
inc
fisubrl
dec
mov
pop
fdivrs
push
cltd
sbb
dec
rcrl
xchg
jle
xor
sub
mov
hlt
jmp
sahf
pop
jle
add
nop
dec
xchg
stos
sbb
movsb
inc
or
mov
test
pop
adc
js
mov
loopne
cmp
sbb
outsl
inc
mov
sub
lret
mov
inc
push
test
pop
xor
cmp
ja
outsb
and
lods
push
cmpsb
mov
cmp
jne
push
lods
push
scas
and
mov
jne
in
xchg
jnp
inc
icebp
xor
push
dec
aaa
iret
adc
jns
jmp
bound
out
sbb
scas
imul
movsb
mov
jnp
inc
mul
adc
or
push
jbe
push
push
push
mov
imul
arpl
inc
repz
dec
add
out
xchg
pushf
aad
sar
mov
mov
leave
mov
cmp
mov
dec
or
mov
fldt
incl
adc
movsl
and
mov
int3
fnstcw
sarb
arpl
sub
jne
and
push
je
mov
ljmp
jnp
movl
mov
mov
xchg
inc
jne
shl
leave
inc
aam
sub
dec
sbbl
push
loopne
shl
icebp
sub
inc
push
cmp
imul
mov
int
into
fwait
pushl
sbb
adc
jne
push
into
fsubl
movsl
fiaddl
mov
stc
imul
std
cmpl
xchg
cs
pop
add
pushl
jl
push
leave
sub
dec
ljmp
adc
cmp
in
push
out
adc
jmp
mov
inc
ficompl
aam
jns
jo
pop
lret
shlb
fs
adc
xor
popf
sahf
fs
add
and
mov
mov
daa
or
das
pop
inc
mov
or
cs
loopne
nop
mov
loopne
ficoms
icebp
int
bound
mov
push
and
jb
xor
push
popa
cmp
sub
mov
push
call
xchg
lds
mov
and
je
jg
aam
dec
push
pop
cmp
dec
fstpt
mov
adc
mov
inc
cld
scas
mov
sbb
push
xor
fwait
push
xor
loope
ljmp
cmp
push
xchg
mov
jno
jns
fsubrl
push
jnp
or
aad
clc
add
push
pop
imul
imul
sub
jecxz
inc
jne
std
mov
bound
cltd
or
xchg
add
cwtl
and
inc
data16
std
inc
aas
xchg
mov
jne
enter
push
icebp
mov
out
lcall
movsb
inc
adc
shlb
scas
shr
cmp
scas
mov
repz
les
mov
adc
notb
push
inc
fadd
add
cmp
loop
sbb
je
or
mov
syscall
push
addr16
lock
or
adc
jno
dec
mov
xchg
jmp
cmp
adc
out
inc
jb
outsl
jl
xor
inc
lock
xchg
shlb
enter
or
imul
jecxz
mov
daa
lcall
adc
xlat
cli
mov
test
pop
xchg
aaa
js
mov
pop
scas
pop
push
and
rorl
mov
cltd
sub
daa
test
lods
and
push
xlat
pop
xor
push
ret
cmp
mov
dec
and
sub
leave
mov
fmull
insb
jne
cltd
and
ja
insb
sub
pop
movl
and
ljmp
and
nop
sub
jle
mov
leave
sub
loopne
cli
inc
cmp
pushf
test
mov
jae
movsb
jne
and
cmp
sbb
cltd
lret
js
inc
outsb
mov
cmc
push
pop
out
mov
scas
mov
pop
cmc
xor
pop
mov
jae
repnz
pop
pop
cmc
mov
lcall
inc
int
push
lds
push
ffreep
outsl
ret
imul
jp
lds
lcall
adc
sarb
insl
jmp
shll
rcr
jg
not
push
sarb
xlat
and
repnz
test
mov
leave
out
out
mov
es
jl
insl
shll
mov
sbb
sbb
mov
movsb
pop
sbb
and
add
jl
stos
xchg
dec
and
call
imul
xor
inc
decb
ret
shrb
call
sub
and
xchg
dec
jg
jno
lea
mov
dec
dec
decb
loope
mov
int
test
fstpl
sbbl
push
test
sarb
dec
mov
movb
rol
adc
jecxz
mov
pop
rcr
icebp
push
and
loope
fwait
mov
movsb
sub
popf
hlt
out
clc
loop
imul
jmp
pusha
cmp
dec
jmp
ja
push
stos
jb
imul
jno
jns
repz
xor
lcall
imul
cmpsl
jnp
jbe
pop
xchg
sub
jo
xor
inc
push
in
jae
add
pop
xchg
mov
ljmp
dec
repz
inc
sbb
movsl
scas
lret
push
push
leave
pop
imul
stc
or
pop
jcxz
add
mov
cmc
xor
or
jmp
pop
stos
rorb
fwait
add
inc
scas
je
les
sbb
shl
adc
cld
pop
imul
xchg
push
jmp
mov
push
shlb
sbb
gs
mov
jmp
leave
movsl
movsb
xor
xlat
je
and
inc
stc
push
lret
data16
jmp
xchg
sub
sti
cltd
roll
movsb
pop
pop
pop
adcl
mov
xor
sahf
mov
insl
sarl
gs
xchg
xor
inc
pop
cmp
lahf
out
pop
jecxz
pop
xor
pop
ror
repnz
out
pop
test
jo
rorl
cmp
loopne
xchg
mov
scas
mov
xchg
pop
cli
jg
fmull
insb
aam
enter
scas
decl
fisubl
fidivl
fadd
lahf
pop
in
movsl
inc
pop
inc
push
shll
xchg
lcall
mov
mov
std
mov
imul
bts
pop
and
fisubs
lock
sarl
test
and
insl
xor
sub
outsb
xchg
jo
in
and
inc
outsb
lock
test
xor
jnp
or
in
das
mov
sub
out
xchg
imul
jl
ret
xchg
lret
mov
cmp
dec
in
addr16
cmc
or
mov
cmpsb
jns
fistpl
movsb
inc
mov
add
out
inc
int
test
mov
or
jbe
test
gs
hlt
sbb
decl
out
and
cmp
cmc
or
mov
mov
sti
add
or
test
sub
xor
add
fldl
mov
fwait
stos
andl
cmpsb
jo
fldln2
shlb
pop
inc
testl
jbe
push
iret
dec
cmpsl
cmp
cli
mov
les
jo
in
pushf
mov
xor
les
mov
scas
cmp
mov
in
sub
inc
loope
lods
outsl
jmp
stc
outsl
mov
add
nop
adcb
sahf
sub
sbb
insb
sub
repz
imul
daa
roll
in
fs
xlat
sarl
xchg
pop
frstor
pop
lock
xor
test
call
imul
mov
out
mov
imul
jo
int
cmpsl
push
xor
mov
xchg
xchg
test
push
inc
out
pop
lds
out
ja
lods
sbb
sub
pop
out
js
sub
pop
xchg
out
push
out
cmp
xchg
scas
jne
out
xlat
jno
cmc
or
jle
push
mov
cmp
lds
mov
jbe
mov
outsb
lcall
bnd
inc
pop
cmp
pop
movb
dec
add
in
cmp
fdivs
mov
mov
rorl
ret
fdivl
jno
adc
jb
xchg
int3
mov
xor
sbb
xchg
inc
jp
test
push
dec
xlat
and
imull
sbb
jno
orb
dec
pop
add
xchg
add
mov
xor
sbb
push
dec
outsb
lds
sub
test
std
aam
iret
test
movsl
xor
xchg
daa
mov
lock
push
and
lods
in
arpl
push
add
jg
jb
int
sbb
mov
out
pop
lock
push
pop
daa
inc
mov
in
sub
push
xorl
dec
scas
jle
rcrl
dec
jg
cmp
sbb
xor
sbb
pop
leave
jbe
cmp
mov
xor
pop
loopne
cmp
sti
adc
dec
testl
out
and
cmc
lcall
jne
fsub
cli
or
lods
and
adcl
jo
fucomp
xchg
mov
adc
cmp
and
sbb
cmp
push
add
inc
sub
pop
xor
das
add
push
les
jmp
push
push
aas
inc
mov
pop
outsb
fiadds
fcmovnbe
sbb
pop
inc
mulb
mov
divb
cmpsb
mov
aas
aad
and
sbb
inc
jbe
xor
out
testb
adc
inc
cmp
jl
jbe
add
and
dec
or
mov
lock
nop
pop
aam
cmp
dec
xchg
stos
jge
in
cs
jle
fwait
scas
inc
or
out
inc
jmp
xor
pop
pop
in
sbb
push
cmp
mov
xchg
sbb
jmp
cmp
mov
loopne
lods
mov
jge
lret
idivb
mov
cs
roll
adc
mov
pushf
xchg
test
es
test
cmp
cmp
cmp
pop
repnz
add
and
add
jbe
sti
mov
iret
push
xchg
jle
xor
xchg
cmp
mov
and
lods
xchg
adc
repnz
inc
int
xor
add
xchg
jne
jge
arpl
adc
sbb
sub
fidivrs
and
inc
dec
test
bound
cmp
cmp
push
repz
outsb
cmc
mov
mov
stos
les
insl
scas
push
sbb
sub
or
loop
adc
imul
add
jbe
add
sti
subl
ss
cmp
sbb
dec
mov
cmp
pop
ja
push
jecxz
ret
adc
jmp
xor
int3
shll
sub
push
stos
mov
movsb
in
test
push
cwtl
cwtl
sbb
popa
inc
xor
incl
mov
es
stos
jmp
jg
inc
mov
into
mov
lods
mov
mov
fs
mov
loope
gs
add
in
es
lock
sbb
pop
mov
jbe
cli
loope
dec
icebp
sbb
jge
movsb
sti
cmp
imul
or
orb
in
sub
loop
xor
or
rorl
mov
sub
and
jmp
add
and
mov
pop
xchg
lock
jno
stos
mov
lcall
out
gs
sarb
or
mov
mov
pop
mov
jg
lods
inc
jge
jg
jecxz
jl
xchg
xchg
push
jo
mov
cmpsl
xchg
int3
jns
push
push
js
ljmp
xlat
mov
sub
test
cmc
jne
push
cmp
inc
or
cld
call
dec
add
jle
subb
inc
dec
and
out
aam
setle
adc
adc
push
sbb
out
pop
jge
fwait
daa
xor
sub
js
jle
add
adc
adc
xchg
adc
lds
dec
aad
daa
sub
jb
pop
addr16
aam
aaa
sbb
lcall
shll
ret
pop
or
dec
enter
xchg
inc
cmp
out
jle
pusha
dec
or
or
cli
or
stos
cwtl
inc
pop
in
decb
jp
push
lcall
push
nop
addr16
xchg
mov
rcrb
sub
xchg
roll
ret
aas
adc
fwait
pop
call
cmc
cmpsl
xchg
inc
pop
repnz
push
jo
test
sub
xchg
jge
or
lods
pop
hlt
dec
fucomip
popf
call
lods
loope,pt
loopne
out
sub
stc
les
push
add
repnz
test
mov
or
cld
lret
das
jne
lret
mov
iret
sbb
into
repnz
fiadds
out
mov
jmp
or
xor
call
repz
push
xchg
pop
xchg
out
mov
imul
mov
xchg
jno
aas
sub
push
jo
xchg
pop
in
ret
push
pop
mov
fbld
pusha
rclb
xor
inc
mull
dec
pop
andl
lods
xchg
adc
fs
not
js
fcompl
jge
pop
xchg
aas
jno
mov
jne
jae
ss
into
mov
mov
int3
arpl
adc
gs
mov
in
cs
call
mov
sub
data16
sbb
enter
dec
mov
lret
adc
push
inc
mov
sub
lods
fiadds
ror
mov
notb
adc
push
imul
subb
lcall
and
mov
ljmp
out
popf
cmc
jg
dec
mov
jns
push
push
cld
sahf
cmp
test
enter
enter
pushf
sub
mov
or
test
nop
stc
das
loopnew
push
lods
clc
xor
xor
int
shll
jp
insb
into
loope
decl
ret
cmp
jge
xchg
push
xchg
or
lret
push
rorb
xchg
jbe
ja
nop
fidivs
ret
dec
push
fadds
out
mov
adc
lret
inc
test
cld
mov
loope
xchg
sahf
stos
insb
dec
xchg
jno
cli
stos
lahf
mov
fadds
test
or
call
nop
sub
cltd
add
bsf
mov
xchg
aam
xorb
mov
or
aas
push
push
sbb
sub
popa
mov
lcall
inc
es
sub
sub
movsl
cmpsl
jbe
aad
hlt
repz
mov
nop
jmp
mov
pop
sub
inc
fwait
xor
mov
and
testl
mov
add
into
xor
xor
xlat
test
int3
xor
daa
in
test
dec
mov
es
adc
sub
adc
cmp
or
sbb
popa
add
cmp
sbb
inc
aaa
mov
ss
test
dec
and
xor
int3
pushf
and
sub
xor
enter
fucomip
cmp
push
out
ja
add
xor
fmul
mov
jbe
dec
loop
cwtl
std
xchg
mov
jge
lods
cmp
dec
test
push
mov
cmp
ficoms
cmovb
jnp
mov
icebp
or
int
push
scas
test
imul
cmc
mov
bound
repz
push
jle
inc
ljmp
jg
xor
mov
and
adc
rorl
sbb
in
in
ds
insb
rorl
add
jle
arpl
add
dec
stc
je
jns
cmpb
out
jb
out
aas
xchg
aad
pop
nop
mov
xchg
gs
sbb
cwtl
mov
cli
nop
mov
add
insb
push
and
aad
test
or
test
dec
pop
call
inc
jl
sbb
xchg
mov
fmull
mov
pusha
jns
rcrl
lcall
outsb
dec
stos
mov
f2xm1
stos
mov
test
fisubl
and
push
enter
fiadds
imul
mov
pop
inc
cmp
xchg
xor
scas
dec
add
push
adc
push
add
mov
dec
fiaddl
jle
test
into
mov
mov
cld
xlat
push
push
dec
cwtl
movsl
cmp
jbe
sub
pop
int3
imul
xor
jns
xor
add
mov
jbe
xchg
and
fsubrs
shll
inc
stos
mov
addr16
ret
leave
data16
mov
enter
pop
rol
and
icebp
lock
and
pop
mov
mov
pop
aam
xlat
pop
dec
loopne
je
lock
ss
jecxz
mov
lds
rcll
clc
inc
mov
cmc
mov
es
mov
out
push
inc
inc
out
xchg
inc
jmp
inc
sbb
pop
out
sete
out
xchg
loope
mov
int3
add
rorb
mov
bnd
and
mov
call
test
andb
jg
lret
pop
add
inc
cmp
int3
roll
imul
push
jne
cmpsb
jb
cld
in
cmpsl
ret
inc
fldcw
adc
loopne
rcrl
pop
xchg
lahf
mov
jg
lock
dec
pop
xlat
and
mov
xchg
or
push
out
rcr
mov
inc
in
test
mov
push
and
sub
mov
pop
in
scas
fwait
lods
loopne
loope
inc
in
call
pop
subb
jae
outsb
cmp
sbb
jo
insl
pop
xchg
mov
test
sbb
sbb
push
jle
mov
pop
mov
and
ss
adc
lcall
loope
movsl
or
inc
mov
fmul
mov
bnd
and
ret
sbbb
push
popf
jmp
sarl
inc
push
mov
stos
popf
xor
xor
fistl
xor
jg
sti
jnp
inc
lods
pushf
scas
frstor
mov
hlt
testb
xor
push
pop
jae
push
push
ficomps
lds
xorb
jns
sbb
test
in
jle
push
mov
cmpsl
jo
xor
mov
cmp
push
or
enter
in
lds
adc
lock
add
adc
push
lods
jmp
test
notb
ss
out
gs
mov
mov
mov
xchg
dec
addb
push
rcl
hlt
xor
mov
ja
dec
add
out
pop
ficoml
and
cmp
add
aaa
push
xor
and
dec
je
jbe
lods
inc
cld
aad
push
imul
insl
push
xor
insl
sarl
sub
or
pop
ret
and
lcall
add
mov
pop
push
sbb
ret
push
and
gs
xlat
mov
packsswb
mov
rcl
pop
xor
mov
bound
mov
fs
push
fmull
sbb
inc
push
inc
into
pop
mov
int3
mov
add
std
inc
xor
out
inc
jns
test
gs
test
jle
pop
jp
add
xor
push
mov
out
icebp
inc
mov
jne
fisubs
mov
aaa
xchg
daa
sbb
adc
push
cmp
aad
dec
outsb
orb
out
stos
dec
rcl
js
les
jecxz
inc
in
scas
add
jno
lret
shrl
loope
imul
sti
lcall
int3
mov
out
mov
pop
cmp
cmc
pusha
xor
fucomip
stos
in
and
cwtl
jg
ret
add
mov
add
xchg
and
adc
rol
add
loope
repnz
cmp
push
ficomps
mov
es
loop
push
inc
lock
dec
je
les
repnz
or
test
mov
xchg
xchg
and
jns
jg
sub
out
and
stc
into
arpl
divl
jg
hlt
dec
repz
xchg
sub
or
push
jnp
loopne
loop
xchg
loopne
insb
pop
out
ret
pop
std
fdivs
push
loopne
or
and
mov
cs
negb
jb
xor
pop
pop
cltd
ss
xor
roll
dec
xchg
in
cmp
loope
cs
cmc
ret
xchg
outsl
lcall
or
fnsave
dec
fs
shrl
out
add
shrb
dec
cmp
cmp
dec
and
into
mov
jle
push
or
adc
push
or
mov
add
inc
out
shl
cmpsl
cltd
jmp
or
call
leave
pop
insl
shll
mov
push
js
xchg
stos
mov
push
out
fs
mov
and
pop
imul
sbb
cmp
push
aam
jns
adc
test
sbb
push
shlb
aaa
imul
jg
mov
ds
cmc
int3
or
sub
pop
aas
adc
xchg
inc
rcrl
js
jge
mov
popf
out
loope
push
jmp
add
pop
ja
add
pop
fcomip
leave
test
adc
cmpsl
test
or
or
pop
roll
and
push
pusha
push
sti
dec
popa
and
xor
cli
inc
push
and
xchg
arpl
lahf
mov
inc
or
push
lds
imul
cmp
push
std
ss
pop
pop
mov
pop
xor
das
inc
push
lock
pop
and
dec
xor
ds
movsl
ljmp
and
mov
dec
fiadds
pop
mov
add
adc
in
add
mov
call
mov
addr16
jns
out
sub
pop
push
addr16
enter
sbb
sub
aad
arpl
test
lods
jge
dec
outsl
fimull
or
push
cmpsb
les
or
in
jb
jecxz
cmp
lods
pop
sahf
fdiv
pop
daa
aaa
xchg
test
mov
popf
icebp
ljmp
popf
add
add
insl
sbb
mov
or
xor
mov
lahf
push
jmp
int3
pop
into
xor
loope
mull
les
add
sti
cmp
mov
push
movsb
jno
push
push
push
frstor
and
mov
lods
push
gs
iret
stc
push
repnz
xor
cmp
or
stos
mov
fisttps
daa
pop
in
pop
pop
repnz
sti
mov
ret
mov
pop
pop
test
in
aad
sub
lods
mov
cld
dec
filds
stc
in
aas
hlt
or
mov
out
pop
sar
or
imul
xchg
and
mov
daa
and
test
fldcw
wrmsr
dec
hlt
inc
insb
pop
in
push
bound
ljmp
pop
out
iret
inc
stos
xchg
mov
push
dec
filds
fs
pop
ljmp
imul
mov
mov
cmp
sbb
jle
cmc
and
sbb
lds
mov
cmpsb
sub
in
xchg
inc
and
jle
stc
sbb
data16
xor
xchg
jg
or
in
mov
fwait
jb
mov
or
enter
sbb
mov
cmc
gs
mov
push
pop
js
push
mov
int
mov
mov
sub
xchg
addr16
lret
sbb
push
dec
inc
stos
rclb
push
jp
jmp
fsubr
ljmp
adc
add
adc
loop
or
leave
divl
negl
push
test
movb
mov
shl
pushf
xor
dec
std
gs
pop
jp
mov
scas
mov
pop
idivl
jl
pop
sahf
mov
cmp
add
mov
into
inc
mov
fldt
outsl
xchg
lret
xchg
pusha
out
mov
out
sub
pop
xchg
in
jne
pop
decb
in
jg
in
adc
addr16
jne
xchg
jg
xor
pop
xor
ffree
pop
push
sbb
jp
in
aaa
aaa
mov
in
andl
fcomps
clc
std
mov
xchg
daa
dec
aad
loop
in
sahf
push
ss
sbb
movsb
inc
push
push
in
das
je
mov
lds
pop
or
cmp
push
out
mov
clc
vaeskeygenassist
add
dec
and
cmpsl
sbb
pop
or
pushl
divl
mov
add
jbe
lret
cs
sbb
cmp
push
arpl
fldl
fbld
aas
clc
std
jo
aad
xchg
mov
out
std
pop
fimull
pop
xchg
mov
out
pop
imul
into
cmp
sub
fildl
xor
and
cmpsl
inc
aam
jmp
inc
add
add
movl
jmp
mov
sub
push
dec
xor
movsl
je
jl
mov
pushf
clc
out
xor
push
cld
sti
outsb
repnz
rcll
repnz
jb
dec
ds
sbb
xchg
pop
leave
cmpsl
push
pop
popf
movsl
ret
into
jae
aaa
sub
lret
addb
push
popa
xchg
addr16
mov
lret
jb
aam
dec
and
call
adc
xor
pop
lock
inc
ja
aam
pop
mov
mov
sbbl
add
pop
out
leave
pop
xlat
std
mov
push
ds
add
push
ret
xor
lcall
es
nop
ljmp
ja
pop
test
pop
xchg
mov
mov
pusha
and
dec
pushf
aaa
mov
add
pusha
fs
inc
jb
gs
xchg
int
pop
mov
pop
xchg
or
dec
scas
fs
and
push
mov
icebp
fcmovnbe
mov
xchg
test
fnstenv
leave
sbb
test
fbld
pop
push
cmc
in
pop
sbb
pop
insl
loop
out
pop
dec
dec
sub
lds
dec
mov
mov
aad
les
movsl
ja
cwtl
rol
cwtl
dec
mov
mov
push
inc
loopne
rep
push
daa
js
pop
loop
jecxz
add
inc
inc
fidivrl
es
mov
loopne
dec
lret
mov
aad
or
outsb
out
pop
out
add
jle
dec
inc
mov
jne
mov
aaa
lret
push
subb
dec
dec
in
outsb
pop
xchg
adc
jp
int
std
lcall
loopne
sub
adc
int3
cmpsb
adc
sub
shld
es
pop
rcrl
push
jo
pop
fidivrs
outsb
pushf
and
lds
jp
out
test
add
inc
test
push
mov
xchg
je
dec
mov
sti
or
ret
xor
pop
stc
sub
scas
dec
lods
cmc
mov
jp
fadds
add
xchg
mov
sbb
rcrb
stos
dec
jp
rol
xchg
or
sbb
xchg
mov
cmp
into
popf
in
and
jns
or
xchg
fstl
lods
push
inc
iret
mov
xchg
add
test
mov
xchg
out
pop
fists
xor
fneni(8087
adc
pop
test
into
sub
test
mov
mov
in
dec
pop
pop
jecxz
push
push
mov
in
pop
xchg
cmpsb
sbb
into
data16
push
in
aas
push
inc
fmull
mov
push
pushf
or
stos
adc
cmpb
xor
dec
gs
loopne
cmp
mov
in
push
fadd
xchg
pop
jo
or
les
jbe
lock
or
das
inc
add
sti
adc
push
or
jbe
mov
pop
push
sub
mov
rolb
add
jbe
adc
ret
pop
mov
pop
xchg
nop
dec
sbb
sbb
mov
sti
xchg
mov
mov
and
mov
xlat
adc
dec
fstps
or
shlb
mov
pushf
ja
cmp
add
ficompl
adc
mov
mov
imulb
dec
movsl
mov
dec
in
inc
cld
mov
sbb
bnd
aad
pushf
imul
sbb
push
insl
mov
lock
dec
push
repz
push
shl
push
shlb
xchg
and
insb
add
scas
xchg
adc
pop
sbbl
test
add
insl
push
scas
mov
sbbb
mov
push
out
cmp
push
in
xchg
jns
lret
test
divb
pop
jecxz
lcall
push
scas
or
fidivs
out
sbb
dec
xor
aaa
pop
mov
lret
jmp
xorl
imul
add
inc
lret
pop
fisttps
cmp
jmp
cmc
aam
shld
push
sub
push
dec
std
shrb
inc
imul
sub
xchg
xchg
movsl
mov
add
and
ds
data16
pop
push
mov
add
rolb
pop
push
lret
fldenv
sub
dec
pop
cmpsb
mov
add
xchg
mov
sbb
scas
ret
sub
and
leave
and
movsl
cmp
push
xor
int3
xor
orl
add
clc
adc
jg
inc
pushf
xchg
test
mov
or
test
outsb
adc
mov
xchg
gs
pop
int3
in
inc
imul
xchg
mov
daa
xlat
inc
add
int
popf
test
cmpsl
ret
jo
cmc
inc
adc
inc
sbb
adc
sbb
push
xorl
imul
pop
stos
inc
push
sub
sub
insl
out
add
pop
mov
in
sub
cs
and
das
addb
mov
and
or
xorl
fldl
or
cltd
mov
mov
stos
mov
stos
inc
rcrl
leave
xor
mov
in
cld
sub
aaa
pop
push
and
stos
shl
movsb
or
ret
stos
inc
jo
dec
aad
repnz
pop
shll
pop
out
ss
outsb
loope
fidivs
dec
or
scas
roll
mov
jo
mov
fnstcw
loopne
les
xor
mov
es
ret
rcrb
cs
mov
ss
aas
dec
mul
int3
sub
leave
adc
lret
into
jecxz
mov
adcb
cld
lods
inc
enter
rcrl
mov
mov
lea
cmpsl
cld
inc
xchg
push
sahf
xor
in
call
mov
pop
into
push
inc
pop
fisttps
mov
repz
adc
cmp
cmp
cltd
out
pop
insl
xchg
in
nop
jp
scas
jmp
mov
push
jae
sub
ds
sub
fwait
mov
cmpl
jecxz
dec
aas
loope
sub
adc
mov
xchg
outsl
inc
jl
fsubl
sub
add
lcall
ja
xchg
sahf
ret
push
push
sub
and
pop
sahf
inc
pop
jg
scas
daa
mov
cmp
push
jo
outsb
adc
lahf
js
lds
push
lods
xchg
out
std
jbe
andl
fnsave
dec
testb
or
mov
mov
scas
or
loop
and
mov
outsb
stc
movsb
pop
test
iret
pop
fstpt
out
pop
std
fbld
sbb
leave
imul
fs
push
repz
jl
or
dec
mov
cmp
sub
jnp
xor
cmp
mov
jne
outsb
fdivrs
enter
movsl
cmp
fdivr
jnp
aaa
mov
pop
jl
imul
xorb
data16
and
xchg
add
cmpsb
inc
xor
sahf
in
cmp
lret
call
incl
fwait
xchg
push
fcomps
mov
adc
cmp
sbb
int3
dec
inc
popl
ljmp
iret
wbinvd
cs
adc
stos
jnp
or
jp
clc
insb
enter
xchg
inc
in
add
call
mov
inc
sbb
mov
inc
mov
out
pushf
xchg
cs
fstpl
pop
ret
mov
and
bound
stos
xchg
addr16
or
cmpsl
iret
mov
sbbl
xlat
fcomps
into
cld
bound
pop
cmp
push
cmpb
xor
pop
adc
fsubr
mov
sub
aam
jecxz
sub
insl
nop
cmc
and
cmp
mov
mov
jne
vdivpd
xchg
dec
mov
jp
push
xchg
xor
push
lahf
and
std
aad
jo
cs
fucom
lea
jmp
push
add
mov
shll
int
mov
inc
sub
enter
pop
mov
movsl
in
repz
es
outsb
hlt
jge
loope,pt
sbb
sub
test
scas
mov
out
xor
mov
in
jbe
ret
loop
ror
enter
dec
mov
outsb
adcl
mov
mov
push
outsl
pushf
iret
jno
add
mov
xor
fiaddl
fists
pop
mov
push
outsl
jg
mov
cwtl
clc
add
or
cmp
sub
adc
stc
shlb
fsubrs
cmpsl
rclb
sbb
iret
or
push
insl
xchg
mov
adc
xchg
cli
mov
fwait
jo
movsb
sarl
xlat
icebp
or
sti
inc
sbb
sub
fidivl
fdivrl
fisttps
gs
rclb
mov
mov
scas
fnstenv
mov
and
negl
jno
push
daa
adc
push
pop
cmpsl
fidivrl
scas
xchg
out
xchg
jae
lods
fwait
repz
xchg
jb
pop
jns
pop
sub
lcall
insb
shl
push
jno
and
mov
jle
inc
lret
addr16
sbb
jl
pop
aaa
outsl
mov
sbb
das
cltd
cmp
idivl
inc
popa
jp
push
mov
cmpsl
mov
dec
mov
and
ljmp
add
add
daa
lcall
pusha
arpl
insl
js
jns
adc
adc
ds
sbbb
add
mov
sub
mov
rcll
andb
lds
movsb
negb
and
adc
xor
fucom
fs
pop
jge
xchg
mov
push
sbb
rol
test
inc
xchg
fdivs
sbb
pop
loope
dec
dec
sub
cld
int
outsb
jbe
inc
fstpt
mov
and
in
jno
adc
cmp
iret
popf
or
imulb
mov
mov
out
inc
sbb
cmp
aas
cmp
xchg
aam
punpckhwd
xor
std
sub
lea
push
jl
repnz
mov
test
mov
mov
shll
and
sub
jb
inc
cld
cmp
sti
inc
outsb
jae
out
xchg
mov
mov
clc
xchg
jmp
or
pop
shlb
or
jnp
fwait
cmp
xchg
jbe
cs
and
lds
subl
outsl
push
push
inc
in
aaa
mov
push
adc
out
insl
mov
adc
jnp
pop
mov
adc
push
sbb
movsb
xchg
cmp
jo
mov
or
and
xchg
cmp
mov
mov
stos
and
cwtl
add
xchg
and
adc
or
bound
pop
mov
outsb
add
and
and
mov
dec
mov
lret
inc
push
fnsave
repnz
rep
or
setl
daa
push
xchg
int
pop
scas
push
rorb
and
lahf
jno
pop
addr16
or
adc
jb
insl
jnp
repz
inc
movsl
icebp
in
int3
mov
repz
add
rcrb
mov
out
xchg
mov
push
cmp
out
mov
lock
and
mov
inc
mov
imul
iret
inc
push
add
add
jno
mov
mov
cmp
mov
jns
sbb
jle
jp
aaa
lahf
in
arpl
ror
inc
lds
push
adc
mov
push
inc
push
cmp
and
jo
xchg
jge
cs
scas
jge
test
insl
sbb
es
cld
jmp
cli
push
xchg
pop
sbbl
xor
icebp
movsl
pop
mov
ljmp
cmp
clc
ja
cwtl
xor
sahf
xor
sti
cmpl
aas
push
inc
mov
or
loop
xor
shlb
testb
out
mov
scas
push
ljmp
ljmp
or
mov
adc
outsb
add
aam
jne
mov
hlt
jge
aam
and
and
lods
or
orb
loop
clc
ret
or
jo
pop
imul
idiv
and
mov
jbe
sub
mov
inc
mov
jmp
xor
cmp
cmc
js
out
sub
mov
mov
pop
std
cmp
or
mov
cmp
jecxz
out
cltd
imul
test
in
xor
nop
testl
iret
push
dec
outsb
mov
ret
jno
or
negl
push
push
clc
dec
push
scas
leave
popa
push
out
movsb
rcll
aas
mov
movsl
or
push
adcl
sbb
or
and
pop
push
leave
cltd
and
movsl
call
push
test
xchg
mov
xor
xchg
mov
iret
xor
fcomps
fwait
pop
push
inc
or
jp
notb
insb
or
or
push
repz
pop
add
xchg
daa
mov
or
pop
pop
test
in
mov
pusha
shll
or
fcoml
cmpsl
lcall
adc
stos
flds
addl
rcrb
mov
lock
adc
popf
nop
sbb
imul
mov
lret
dec
adcb
add
jg
push
add
pop
fildl
adc
cmp
jmp
inc
cpuid
pop
imul
adc
fimuls
jns
je
jmp
adc
adc
inc
sub
mov
sbb
cmp
sub
jmp
lcall
hlt
daa
or
testb
dec
add
mov
mov
push
mov
ljmp
mulb
pop
divl
mov
mov
inc
repnz
pop
mov
dec
hlt
sbb
adc
xlat
pop
out
push
push
mov
xor
xchg
lahf
xchg
push
mov
addb
cli
test
dec
push
and
fisubs
dec
cmp
cli
subl
stos
imul
pop
in
loopew
ja
dec
gs
cwtl
out
cmp
mov
xchg
jle
push
and
insl
mov
je
test
stos
rcr
mov
mov
fcomps
mov
mov
push
xor
cmp
popf
xor
stos
adc
push
push
adcb
push
lcall
jmp
idivl
mov
cmp
jne
fbld
adc
mov
loope
test
mov
fsub
push
hlt
cmp
cmc
inc
pop
ds
repz
lahf
adc
xor
mov
push
out
dec
dec
inc
int
stos
sbb
inc
ret
test
jle
hlt
push
add
pop
rorl
mov
sub
ja
fs
rclb
cmc
stos
mov
movb
or
lahf
divl
out
arpl
loopne
xchg
push
jb
cmp
pop
jno
and
add
pop
cmp
push
icebp
lods
or
push
jne
sub
jp
and
adcb
xor
bound
mov
cmp
xor
adc
mov
mov
push
lret
outsl
jns
rorl
out
das
or
ret
mov
xor
or
jb
or
and
add
ds
es
insw
xchg
mov
sbb
fiaddl
add
xchg
dec
insl
jg
popf
scas
mov
sbb
das
cmp
dec
movsl
xor
fucomp
inc
mov
mov
das
push
xchg
xchg
jne
idivb
imul
dec
jae
push
in
lods
mov
pop
adc
movswl
adc
pop
mov
stc
mov
pusha
lret
xchg
or
mov
sbbl
dec
pop
push
cmovs
jns
test
into
pop
addr16
aas
int3
mov
dec
ret
xor
sbb
jle
adc
jl
jge
pop
popf
push
or
clc
jecxz
les
daa
mov
jp
mov
mov
cmc
pop
sub
cs
sub
sbb
fisubs
mov
cmpsl
mov
fldt
dec
lret
push
leave
dec
mov
outsl
xchg
xor
or
jns
scas
and
and
int3
dec
push
lea
in
insl
shlb
clc
or
faddl
fadds
dec
push
out
sub
int
sub
outsl
stos
andl
lret
ljmp
lds
dec
je
arpl
inc
push
into
out
cmp
stos
push
int3
pop
mov
mov
push
inc
frstor
pop
dec
and
fldcw
dec
inc
mov
das
xchg
ss
vhaddpd
dec
push
jle
test
aad
insl
adc
lret
insb
ret
adc
push
jmp
loopne
stc
push
or
jne
rclb
repnz
fcoml
push
repnz
dec
adc
push
outsb
pop
sarl
mov
cs
repz
je
incl
jp
gs
jno
fdivrl
xor
jbe
jmp
int3
enter
das
imulb
mov
pop
jno
adc
in
xor
jno
sub
fs
and
and
and
cmpsl
pop
out
xchg
imul
lock
nop
jb
out
xchg
clc
test
cmp
mov
inc
fistpl
xchg
lods
sbb
sbb
inc
mulb
popf
arpl
pop
sbb
mov
or
mov
push
cltd
ja
mov
aad
or
add
mov
push
or
add
lods
add
xchg
adc
adc
adc
mov
or
jge
xchg
push
mov
push
jmp
fldcw
int
cli
mov
rorb
popf
lods
or
aaa
ret
sar
mov
push
insl
pop
fbstp
sahf
inc
fidivrl
cld
push
cli
sahf
popa
stos
mov
xor
popa
out
cmp
outsb
adc
ss
mov
in
mov
sub
adc
push
and
or
cmpsl
insl
mov
sbb
dec
pop
push
sbb
shl
or
jle,pt
pop
stos
jnp
cli
adc
rcll
pop
out
xor
cmc
js
sahf
ljmp
lock
mov
or
cwtl
outsl
les
push
addr16
out
std
inc
shrl
mov
fnsave
xchg
add
aad
andl
loope
sti
adcl
lret
jb
sub
ja
and
nop
inc
xor
loop
cmp
repz
lock
iret
xlat
outsb
shll
idivl
mov
into
xor
xchg
hlt
inc
fstps
xor
push
jnp
orl
or
adc
sub
xchg
mov
ljmp
outsb
adc
jmp
push
jne
js
mov
leave
fstpt
xchg
mov
repnz
mov
in
inc
cwtl
fistpl
push
cmp
fmuls
bnd
cmpsb
inc
jmp
fsts
test
sarl
stos
clc
jg
les
jns
cmc
push
sbb
jae
sub
in
add
fmull
xchg
cmpsl
pop
cmp
scas
scas
sbb
inc
xlat
outsb
ja
subl
inc
insb
enter
dec
and
pop
imul
sti
aaa
jl
pop
push
and
fsubs
mov
std
nop
out
divl
cmpsb
sbb
addr16
ja
daa
cs
lcall
push
sub
pusha
and
mov
fcmove
mov
xchg
imul
data16
mov
pop
int
xchg
inc
frstor
js
sub
lods
in
adc
int
cmp
repnz
mov
fdivrs
jmp
test
mov
dec
xor
cmc
mov
dec
cmp
es
fwait
mov
movsl
call
and
cmc
pop
shlb
pop
xor
push
push
dec
cs
and
or
cmp
andl
shlb
dec
jmp
stos
mov
inc
sub
pop
xor
push
idivl
shrb
lods
lcall
int3
out
lret
movsl
cmp
ret
add
movsl
je
nop
and
out
mov
outsl
adc
mov
mov
je
cmpsb
sub
push
enter
popf
xorl
mov
in
imul
adc
push
rcr
int3
jo
mov
out
loope
aaa
rol
stc
pop
pop
call
rclb
mov
mov
and
dec
xchg
ds
loope
xor
add
cltd
push
out
shlb
loop
mov
dec
xor
jns
or
xchg
mov
cmp
pop
jle
rcrl
call
arpl
test
ss
or
push
aas
repnz
clc
inc
sbb
cmp
lock
fstpl
inc
push
rcrl
mov
add
xor
pop
out
ret
sub
or
fwait
imul
out
movsb
and
jg
outsb
test
push
jg
test
push
jo
popf
mov
sbb
lahf
dec
iret
cmp
add
jb
or
nop
sub
jl
xchg
inc
mov
mov
push
inc
scas
fimull
scas
add
xlat
insl
aas
or
push
adc
jecxz
jne
adc
or
mov
add
insl
sub
mov
mov
jmp
cmp
pop
jae
out
xchg
loop
add
push
mov
and
pop
push
jns
jmp
cmp
jo
jge
xor
and
pushf
sbb
sti
jno
dec
loope
mov
imul
repnz
icebp
js
fists
mov
pop
mov
lods
mov
mov
out
lods
imul
popa
mov
std
or
cmp
jnp
pop
pop
imul
scas
inc
add
pushf
scas
fucom
std
nop
push
mov
pop
fcomps
jle
xchg
repz
aad
popf
stc
js
jg
ljmp
hlt
das
pop
push
lcall
and
and
fnstenv
test
leave
mov
mov
xlat
adc
mov
adc
lds
addr16
fistps
xchg
add
ror
xlat
pop
xlat
xchg
incl
leave
adc
jno
jns
add
add
faddl
mov
lock
fyl2x
dec
adc
stc
aad
mov
sbbl
adc
pop
sbb
aaa
call
pop
sbb
bound
and
lods
aam
sahf
pop
data16
mov
xchg
push
call
fdivrl
addb
xchg
out
push
ret
xchg
mov
mov
or
stos
xchg
fwait
xchg
fsubrs
push
bound
aam
jae
jae
xchg
adc
dec
xchg
mov
jno
in
fstps
inc
pop
mov
jecxz
mov
out
sti
into
mov
movsb
out
mov
push
or
adc
jne
jmp
lahf
int3
les
or
fsubrs
fmul
sbb
imul
mul
xchg
pop
fistps
mov
sbb
mov
lcall
push
test
negb
or
lods
adc
mov
add
mov
clc
jae
pop
jecxz
popf
cmp
xchg
xchg
xchg
scas
push
or
shlb
dec
pusha
out
test
aam
jp
pop
inc
test
dec
aad
jne
xchg
xchg
lcall
xor
out
inc
fbstp
xchg
divl
mov
icebp
sbb
mov
ret
jno
into
movsl
xorb
fcomps
jno
adc
cmp
push
or
js
xchg
outsb
pusha
insb
aad
mov
insb
jle
aad
sub
pop
stc
inc
xchg
dec
pushl
cmp
sbbl
and
cmp
pop
pushf
lea
dec
sub
incl
cmp
and
push
addr16
sub
xchg
out
xor
adc
sbb
int
pusha
daa
out
popa
imul
or
xor
and
fs
push
xchg
xchg
dec
cmpsl
int3
cmp
outsb
sbb
adc
xor
icebp
enter
in
jae
inc
xlat
dec
mov
mov
shrl
roll
xor
lea
int3
sbb
mov
push
xchg
mov
inc
jecxz
sahf
lods
in
mov
clc
loop
jmp
mov
dec
push
jmp
lea
pop
mov
pop
cmp
in
cmpsl
hlt
js
jecxz
outsl
ret
fldt
test
test
gs
dec
out
test
xchg
or
lds
and
in
inc
jbe
and
sub
cmpsl
pop
mov
shr
mov
and
inc
sub
cmpsb
inc
jle
test
or
adc
into
sbb
xor
inc
std
icebp
les
push
pusha
add
hlt
jle,pn
cmp
pop
in
add
out
movsl
sahf
pop
scas
inc
mov
scas
outsl
xor
repnz
shrb
xchg
outsb
and
mov
mov
cltd
sub
js
mov
and
std
jmp
aad
nop
icebp
mov
imulb
dec
insl
pop
mov
lcall
xor
nop
loopne
rcr
je
gs
sahf
cli
xchg
shl
leave
xor
repz
inc
push
out
push
sbb
test
sub
push
movsl
xor
sub
xchg
push
das
ja
sub
cmp
inc
mov
mov
test
xchg
cs
nop
lods
inc
ret
cs
or
and
sbb
cld
cld
out
imul
inc
test
mov
imul
clc
in
jbe
add
pop
icebp
ret
add
jo
push
shll
arpl
sbbb
sti
iret
test
stc
in
mov
xchg
shlb
or
mov
or
jle
out
gs
mov
negl
stc
or
sub
fidivrs
popf
dec
xor
mov
sbb
stos
pop
add
jb
dec
adc
sbb
inc
js
mov
les
push
cmpsl
mov
xchg
xchg
adc
fwait
xor
jmp
testl
or
dec
daa
test
or
fnstcw
mov
ljmp
sarl
pop
pop
out
insl
mov
fpatan
mov
aaa
push
call
ret
push
xchg
enter
repnz
pop
je
mov
aaa
ret
frstor
xor
lea
add
test
sub
jle
movsl
fs
xor
repz
loop
nop
add
mov
ja
push
and
repz
add
mov
add
rclb
leave
mov
movsb
mov
sti
mov
mov
pop
push
jns
xor
arpl
mov
adc
out
add
add
test
jmp
xchg
xchg
or
imul
aad
lcall
xor
mov
xor
test
jge
mov
xor
fxch
mov
ret
sbb
outsb
push
mov
or
xchg
rol
or
ret
jl
adc
cmp
insb
push
push
rclb
mov
out
rcr
mov
push
nop
push
jmp
xchg
mov
pop
xor
popa
adc
loopne
insb
or
pop
ficomps
loop
ds
jnp
and
cmpsl
sub
jge
mov
out
push
je
jno
jecxz
lret
or
stos
in
fstpl
lcall
jge
iret
lret
add
hlt
mov
mov
into
rcrb
mov
mov
sub
je
loop
add
js
mov
loopne
jmp
mov
or
daa
or
adc
inc
call
mov
shlb
jp
and
lret
out
fstl
int
push
fdivs
pop
sub
dec
sbb
xor
js
js
dec
inc
xor
movsb
test
aas
stc
and
int
mov
leave
mov
adc
mov
pop
cmp
or
mov
jb
pop
inc
jne
je
push
sbb
stc
cmp
arpl
decb
pop
movsb
cmpsl
iret
xor
push
sbb
into
xchg
inc
fdivrs
cwtl
test
or
add
pop
sahf
sahf
in
mov
in
clc
loope
out
adc
jl
sbb
inc
jge
mov
add
jecxz
pushf
cltd
testl
iret
push
ljmp
xchg
mov
mov
jnp
jmp
add
inc
ror
je
xor
pop
sbb
decb
adc
xchg
lea
in
xchg
xchg
adc
mov
or
fidivl
fwait
repnz
cmpsb
mov
test
xchg
scas
add
inc
popa
ds
cmc
mov
cmp
adc
adc
or
mov
cwtl
jne
pop
jecxz
fs
add
xor
out
xchg
es
pop
xchg
mov
scas
sub
xor
pop
xor
outsb
int
pop
out
mov
pop
arpl
aad
dec
xlat
adc
sbb
and
adc
fiaddl
mov
sub
dec
xchg
call
cwtl
mov
arpl
ret
std
mov
outsl
xchg
inc
dec
insb
sub
pop
fstpt
xchg
xchg
add
cmp
shrb
xor
mov
fnstcw
lods
cmpl
xchg
add
std
cltd
es
loope
out
cli
in
test
cmp
mov
mov
shlb
inc
repnz
das
movb
push
sbb
pop
cli
cmpsb
cmp
xchg
shll
hlt
cmp
adc
loopne
nop
loop
es
sub
mov
jecxz
push
mov
fnstsw
push
jle
adc
or
insb
add
mov
pop
mov
adcb
and
jle
cmpsb
inc
sub
and
xchg
cmp
mov
sbb
stc
xor
mov
sahf
or
mov
in
inc
fldt
mov
sbb
loopne
pop
mov
movsl
call
test
xchg
dec
hlt
loop
aaa
in
xchg
daa
pop
or
mov
scas
jns
daa
mov
mov
sub
out
mov
xor
mov
sub
xchg
adc
push
out
test
jge
cmp
loop
ret
test
sub
nop
andl
pop
addr16
ret
test
mov
jl
cmp
xor
inc
fld
rcll
adc
xor
jle
pushf
loope
sbb
movsl
pushf
movsb
sar
mov
clc
inc
int
ljmp
mov
leave
out
xchg
shr
into
mov
push
in
loopne
mov
sbb
xchg
jcxz
jae
scas
sbb
fisttpll
sub
mov
jle
notb
sub
dec
and
mov
cmp
mov
dec
xorb
sbb
shll
dec
or
add
sub
dec
push
les
in
mov
push
mov
push
dec
dec
lock
push
push
fisubrs
push
sbb
add
mov
aad
mov
xlat
dec
adc
dec
push
clc
and
dec
sbb
inc
in
shlb
repnz
in
cmp
sbb
leave
lcall
push
mov
shrl
shrb
clc
cmp
add
mov
pop
jmp
mov
mov
push
push
mov
fdivs
cmpl
xor
cmp
xchg
lds
cld
int3
mov
jg
testb
sub
and
sbb
push
in
jno
bnd
dec
popf
rcrb
imul
mov
roll
test
sbb
add
and
mov
mov
xor
lds
divl
shr
fisubl
cli
and
jne
mov
inc
jmp
je
addr16
jae
aaa
push
pop
sbb
push
pop
inc
push
out
jl
xor
sbbl
dec
pop
inc
popf
data16
nop
cmp
sbbb
mov
inc
adc
mov
adc
dec
mov
mov
xor
add
fdivs
jns
jns
sbb
mov
mov
mov
dec
out
clc
ret
dec
jmp
push
jmp
adc
or
out
jle
pop
mov
test
in
clc
dec
leave
es
out
in
repnz
pop
movsl
and
jmp
adc
xor
cld
xlat
pop
scas
jo
shr
test
and
jbe
fucomip
ds
js
in
inc
fldt
jmp
in
lahf
outsl
jns
or
jne
loope
mov
and
shrb
mov
imul
out
call
push
jb
cmp
adc
hlt
mov
sbb
cmpsl
stc
bound
jp
and
lds
mov
sbbb
stos
or
fsubrs
pop
add
in
test
and
arpl
xchg
mov
cmp
sub
je
out
sbbb
mov
lock
fidivrl
cs
mov
or
pop
sbb
fld
divb
pop
cmp
out
ret
shl
in
js
lods
xor
in
fbld
iret
pop
add
flds
and
xchg
stos
enter
fs
out
in
repnz
rclb
or
mov
dec
popf
cwtl
repz
jo
xchg
inc
xor
clc
cmp
call
les
jmp
push
insl
cli
jne
cli
or
dec
shlb
lds
mov
pop
aaa
mov
pop
mov
in
mov
mov
push
cmpsl
cltd
out
rclb
fcmovnb
movsb
addr16
cmpb
clc
ror
pusha
or
xor
imul
call
mov
sbb
add
loop
shl
mov
inc
pop
xor
pop
mov
or
fcmovbe
dec
mov
pop
jmp
adc
or
nop
mov
mov
test
std
mov
daa
mov
lret
push
mov
sahf
iret
cmp
adc
out
mov
jecxz
push
ret
sbb
dec
subl
rolb
mov
insb
ret
mov
jae
jno
mov
jmp
pop
inc
cltd
ja
scas
gs
mov
pop
aad
cmp
xlat
jp
mov
ret
daa
fstpt
push
mov
ror
cmp
gs
mov
int3
or
ss
inc
fisubrs
ja
loopne
iret
push
jmp
rcrb
and
cmc
and
out
adcb
jmp
loopne
leave
and
test
stc
pop
mov
je
sbb
popf
icebp
lods
cmp
pop
ss
mov
ds
inc
lock
ja
je
roll
movsl
jle
cltd
jbe
dec
jmp
mov
add
incw
xchg
aas
pop
insl
push
fsubr
xchg
ficompl
jb
pop
sbb
push
or
out
fcomi
adc
xchg
call
dec
in
inc
enter
insb
fistpll
or
xchg
int3
inc
pop
aaa
sbb
mov
push
mov
leave
pop
xor
fs
mov
pop
movsl
xchg
add
adc
scas
inc
shrb
repnz
loopne
cmpsb
cmp
adc
inc
jl
pushf
mov
out
mov
push
push
movsb
mov
in
ja
into
ds
lret
push
jbe
add
cwtl
mov
movsl
push
jbe
jmp
std
movntps
inc
mov
dec
mov
mov
push
addb
mov
js
repnz
sub
mov
dec
jmp
inc
xlat
sub
lahf
push
mov
jle
mov
test
outsb
lahf
xor
in
shlb
lcall
repnz
inc
push
cmpsb
lds
in
xchg
pop
and
fucom
jnp
push
cmpsl
ljmp
dec
push
imul
lock
xchg
leave
pusha
xchg
stc
sbb
insb
addb
mov
imul
inc
cmp
lds
loop
faddl
mov
mov
fisttps
fcoml
out
mov
stos
je
push
movsb
mov
in
add
xor
stos
repz
mov
dec
xor
mov
mov
outsb
adc
mov
lods
mov
inc
stos
jmp
outsl
dec
lods
outsb
dec
mov
das
insl
mov
xchg
jp
jo
xchg
jnp
or
testl
push
jle
pop
pop
and
insl
push
xor
cwtl
popa
test
mov
icebp
mov
mov
push
sub
inc
aam
or
sbb
adc
daa
dec
xchg
mov
addr16
test
dec
scas
fstpt
sub
and
pusha
cs
in
push
xor
push
les
xor
lret
xchg
cmc
movsb
inc
add
xor
mov
out
mov
cli
mov
dec
ss
dec
push
ret
in
inc
sub
filds
or
repz
mov
mull
adc
cmpsb
push
push
fwait
push
jge
in
xchg
lcall
dec
loope
xor
inc
jg
aad
jbe
pop
out
pop
pop
mov
icebp
adc
ss
adc
in
sub
push
inc
jle
fisubrl
xchg
aam
adc
int3
into
xor
mov
jl
loop
call
mov
fwait
sub
in
pop
xchg
cs
pop
in
dec
cwtl
jns
jb
push
and
ret
js
icebp
mov
xor
pop
and
jo
push
aad
jne
cmp
add
cmp
add
xor
int3
cwtl
das
mov
add
test
cmp
mov
push
in
ja
fstps
aad
testb
pop
das
or
nop
mov
add
addl
aaa
add
test
jnp
daa
sbb
imul
xor
inc
and
enter
jl
cmc
pushf
lds
xor
scas
int3
mov
xchg
dec
add
xchg
mov
nop
lods
fsubp
js
into
insb
ja
data16
cwtl
push
fisttpl
xchg
aam
dec
test
insb
mov
jae
mov
mov
shll
cs
sub
pop
out
dec
fldenv
ret
cmp
mov
sub
sti
les
cli
mov
decl
adc
sarb
dec
jns
out
inc
fistl
jo
imul
ret
push
xchg
push
and
das
mov
adc
pop
rorb
xor
jecxz
dec
icebp
mov
fidivrs
loopne
test
inc
pop
dec
std
mov
call
fstl
add
nopl
shl
mov
movsl
mov
sahf
rclb
mov
sbb
and
aas
loop
fcomp
jmp
aaa
addr16
jl
out
mov
popf
sbbl
adc
das
divl
dec
in
scas
pop
jb
push
imul
in
pop
dec
testl
fs
jnp
sahf
lcall
clc
loope
mov
lock
jge
lahf
notl
or
int3
popl
xchg
out
clc
or
popa
push
sub
enter
pushf
mov
sahf
test
sub
and
inc
sub
test
inc
or
adc
imul
mov
dec
ljmp
test
mov
pop
insb
aam
je
fnstenv
and
mov
or
pop
inc
sbb
dec
mov
lock
ret
cmpl
psubsb
jns
mov
cmp
testb
fcoms
push
or
push
cltd
lock
sti
push
cmpsl
xchg
fwait
enter
mov
dec
daa
lcall
xchg
outsb
jae
and
js
push
jb
out
push
out
ja
jo
movsb
jbe
pop
dec
testl
xor
je
push
mov
cmp
mov
xor
out
mov
dec
mov
shlb
xor
std
lock
mov
arpl
enter
xor
je
pop
mov
ss
movsb
mov
cli
ljmp
stos
cltd
xor
fnstsw
lret
mov
out
jb
cwtl
das
test
shlb
mov
rclb
push
jne
mov
insl
addr16
inc
mov
jo
ret
test
mov
fidivl
xor
xchg
sbb
mov
ljmp
jno
out
mov
dec
jmp
or
test
lods
mov
dec
jecxz
push
dec
mov
testl
mov
into
inc
add
stc
mov
sbbb
dec
in
jnp
idivb
shlb
adc
mov
mov
xor
push
or
iret
mov
sbb
pop
adc
or
and
in
arpl
loope
inc
push
mov
lret
imul
sarb
data16
add
insl
fisubrs
flds
or
push
sbb
sub
xor
imul
shlb
mov
fiadds
out
xchg
jno
cmpb
mov
push
jl
adc
pop
es
das
mov
dec
aam
lahf
xchg
sti
subb
inc
pop
push
insl
test
push
cli
mov
push
loop
fnstcw
shl
mov
sub
inc
sub
mov
jno
test
pop
pop
jb
fstp
sti
fstpl
inc
test
push
faddl
inc
stc
jbe
test
add
shrb
clc
jae
cmp
sub
stc
sub
mov
pop
push
out
adc
jnp
test
or
std
cmp
ljmp
sahf
xchg
pop
stos
inc
add
mov
leave
sbb
mov
cmp
mov
mov
push
ss
fdivs
movsl
mov
call
adc
fldt
shlb
jae
cmp
mov
mov
stos
cmpsl
ret
ret
mov
xchg
add
sbb
out
rcll
enter
cltd
and
int3
xchg
dec
cmpsb
lahf
aam
sbb
in
loopne
sbb
cmp
lock
adc
icebp
es
mov
add
jns
pop
add
dec
cli
mov
insb
pushf
xchg
pop
sti
pusha
pop
inc
test
js
das
popf
mov
or
dec
stos
mov
push
inc
mov
in
inc
xchg
mov
push
or
jge
jp
fimull
cmp
sar
aas
xchg
cmpsl
aaa
cmpsb
lods
sub
arpl
inc
lods
in
xlat
mov
inc
sti
xchg
mov
and
jg
adc
mov
push
stos
js
pop
les
push
pop
inc
popa
addr16
es
add
cmpsl
sbb
xor
mov
mov
sbb
es
out
mov
inc
orb
into
mov
push
out
int3
add
and
mov
out
subb
dec
mov
in
push
in
lret
mov
push
inc
stos
icebp
cld
js
or
nop
out
sti
or
popa
aas
add
ret
pop
loopne
push
addr16
mov
js
add
out
pop
lret
lahf
push
rolb
les
cmp
xor
fistpl
mov
mov
dec
xor
xchg
cmp
aas
inc
pop
push
repz
lock
xchg
add
xchg
pop
adc
test
mov
pop
mov
xor
and
xchg
pop
cmpsb
cmp
mov
or
and
outsb
push
sbb
jle
daa
ds
lahf
xchg
add
in
clc
inc
fnstsw
setge
dec
mulb
sti
xchg
and
inc
mov
lcall
push
sbb
jns
lret
mov
cmpsb
cmp
in
sbb
and
xchg
lock
jg
inc
ret
loop
sbb
aam
cmpsl
mov
xorb
xor
jnp
loop
dec
fnsave
imul
dec
rorb
ja
jp
adc
popa
mov
jo
pusha
pop
sahf
sbb
ficompl
add
jb
adcl
sbb
jl
pop
or
loope
jge
insl
aam
push
or
mov
ss
xchg
cld
roll
mov
lret
dec
call
sahf
sbb
orl
xor
dec
bound
aas
push
pop
jmp
dec
sbb
xor
adc
test
outsb
add
inc
int3
sub
xchg
stc
aas
scas
cmp
or
in
and
mov
mov
mov
lahf
jg
sbb
ret
outsb
or
lods
movsb
enter
xchg
push
mov
sub
mov
mov
xchg
shl
and
xor
mov
cmp
dec
nop
outsl
jp
inc
lods
sbb
mov
shll
add
das
pop
mov
dec
or
test
xchg
daa
jbe
popa
jnp
data16
lcall
shlb
aam
movsb
push
xor
jns
xor
out
movsl
jg
pop
cmp
pusha
pop
jne
loopne
sub
imul
sahf
mov
dec
jno
movsl
pushf
in
lret
mov
pushf
sub
lock
dec
mov
stos
push
imul
fidivs
icebp
and
test
rol
enter
in
pop
notb
adc
sbb
dec
push
and
add
inc
jecxz
stos
aas
aam
test
mov
xchg
sub
xchg
in
mov
sub
js
adc
mov
insb
mov
popf
pop
or
sbb
cli
stos
loopne
sub
pop
xor
call
push
sub
scas
movsb
jecxz
out
add
cmp
mov
sub
or
xchg
ss
dec
loopne
push
dec
and
cmp
ss
xchg
ret
pop
cs
stos
ja
xchg
mov
shlb
fidivrl
lretw
mov
xchg
lods
loop
or
fxch
push
rcl
rcrb
scas
push
xor
je
mov
pusha
push
push
daa
jge
push
scas
mov
cmc
mov
cmpsl
xor
mov
pop
test
rcrb
movsl
adc
popa
scas
mov
loop
pop
xor
dec
leave
arpl
sti
sub
clc
push
scas
int
scas
icebp
cli
ljmp
scas
movsb
mov
mov
sub
ss
outsb
sub
gs
leave
pop
add
shrl
mov
adc
sub
fdivl
xchg
adc
add
test
lcallw
mov
out
test
jmp
sbb
and
addr16
mov
sub
dec
push
sub
push
mov
je
scas
cmp
sub
xchg
loopne
cltd
fmulp
ret
movsb
in
lcall
ror
xor
sub
fisttpl
mov
jo
xlat
mov
in
sub
scas
ficoml
push
inc
pop
sub
push
dec
arpl
sbb
jle
cmp
push
dec
pop
outsb
call
mov
dec
stos
inc
popf
push
scas
insb
mov
imul
jno
inc
inc
shrl
adc
mov
sbb
xchg
mov
jge
mov
sbb
or
or
pop
scas
inc
enterw
fisubrl
mov
fadds
and
push
xor
mov
outsl
cmpsb
lock
idivl
or
sub
mov
shrl
cld
xchg
sub
ret
rcrl
into
pop
cmc
xchg
into
jecxz
adc
pop
cmp
push
jecxz
mov
mov
xlat
adc
sub
mov
roll
mov
push
dec
loope
es
sub
loopne
test
xor
lcall
mov
jne
ret
shll
jl
jecxz
push
loop
mov
rclb
daa
mov
in
inc
stc
xchg
nop
cmpsl
push
xor
ja
jecxz
jns
push
popf
push
dec
sbb
pop
push
inc
xlat
in
jnp
inc
jge
fldt
cld
loop
sbb
mull
jne
xchg
int3
testl
sbb
rcr
inc
pop
adc
lret
popa
dec
sti
pop
push
popa
xchg
roll
lcall
adc
fs
sahf
jno
mov
shrb
std
inc
aam
mov
inc
mov
shr
cwtl
hlt
jge
divl
push
mov
loop
scas
movsb
jmp
arpl
mov
jbe
aas
add
adc
in
das
in
xchg
sti
xchg
lcall
mov
mov
or
pop
adc
out
jbe
fdivl
je
inc
xor
push
rcrl
movsl
fistps
mov
lods
jns
inc
xor
adc
pop
sbb
rcll
add
cmp
xchg
pop
inc
cmp
push
add
ds
pop
ret
inc
in
imul
lds
adc
mov
mov
subb
mov
int3
mov
dec
insb
sub
jp
xlat
pop
shrl
loop
push
repz
jge
outsl
pop
int3
mov
mov
push
add
mov
cmpsl
cld
xchg
decl
add
or
fists
adc
inc
movsb
call
jmp
mov
xchg
cld
nop
mov
out
xchg
inc
bound
and
fsubrl
or
ljmp
sub
fsubl
push
ja
clc
into
dec
stos
jbe
pop
xor
lret
loopne
idivb
imul
test
jmp
jp
fisttpll
in
mov
jns
push
pop
adc
xchg
dec
inc
test
pop
jle
loopne
lcall
and
loopne
cmpsl
adc
shrl
jp
mov
lock
sbb
je
sbb
dec
dec
lods
testl
xlat
sub
xchg
xor
out
call
dec
rcrl
mov
cmp
jbe
push
shr
mov
ret
arpl
mov
push
stos
xchg
push
mov
sbb
lods
das
cmc
cmpsb
cmp
add
les
pop
cwtl
hlt
js
imul
mov
in
loope
push
inc
rcl
and
clc
in
jle
xchg
jg
dec
push
add
adc
movsb
push
aam
jl
bound
xlat
cmc
sub
mov
push
cmp
cmpsb
mov
jl
arpl
in
inc
push
push
test
jno
jb
movsl
mull
inc
orb
sub
aam
inc
rorb
jno
cmp
test
ja
in
outsb
nop
mov
int3
cmp
and
jne
shl
fcmovu
sub
test
mov
mov
out
mov
push
sub
icebp
loop
sbb
jns
leave
cmp
repnz
ljmp
dec
mov
sahf
xor
std
mov
jne
mov
push
rolb
test
movb
enter
sti
xchg
mov
into
lock
xor
push
roll
shlb
int
ret
ljmp
push
pop
adc
xor
les
adc
xlat
aad
loope
sbb
out
loop
int
movsb
out
test
dec
add
inc
push
sub
push
stos
adcl
mov
lock
xchg
adc
in
inc
cmp
icebp
mov
jns
test
sub
mov
pop
das
aas
cmpsl
add
lds
xor
sub
lret
add
test
les
sub
push
xchg
jnp
mov
pop
push
mov
data16
ds
cmp
adc
sbb
rorl
std
xchg
les
lcall
add
test
and
cmp
rcrl
dec
jo
jle
adc
fs
and
lret
fnstsw
jno
jne
push
cmp
addr16
rcl
ret
pop
out
je
add
hlt
sbb
cmp
cld
jle
test
lahf
stos
ror
ljmp
push
call
mov
xor
cmp
add
sub
imulb
push
or
mov
add
mov
pop
gs
xor
and
test
call
arpl
test
imul
scas
inc
push
sbb
out
pop
sahf
sbb
iret
and
test
je
sbb
rsqrtps
sub
iret
sub
cmp
xlat
dec
or
out
inc
add
scas
arpl
push
push
filds
repnz
xchg
clc
scas
loopne
lret
clc
xlat
or
fcoml
outsl
jmp
adc
cwtl
test
cmp
arpl
jmp
push
lea
outsl
ljmp
cwtl
imulb
loope
mov
movsb
jecxz
push
inc
push
loopne
mov
inc
or
mov
sub
xchg
mov
add
stos
int
sub
leave
pop
mov
cmpsl
mov
stos
xor
or
cmp
adc
dec
push
pop
jne
push
mov
dec
mov
dec
jo
aam
add
repnz
int
sbb
xchg
scas
shrl
mov
jo
xor
dec
cmpsb
loop
outsl
sub
or
mov
mov
cmp
mov
push
mov
loopne
mov
jle
and
testl
jg
scas
ret
ffreep
mov
sbb
stos
inc
insl
pop
repnz
or
inc
into
sub
dec
adc
imul
push
ja
ds
andl
or
adc
xchg
cmc
imul
lea
sahf
mov
push
and
mov
jae
repnz
aam
iret
mov
cs
movsl
lds
cmpsb
or
shl
repnz
pushf
mov
rcrb
ss
loop
addr16
mov
and
add
xchg
test
add
and
jmp
rcr
mov
push
aaa
mov
mov
xchg
cmp
add
lds
out
test
mov
cmp
mov
xor
dec
ficoms
or
clc
and
sbb
add
je
test
cmp
xor
stc
popf
into
mov
aaa
int3
pop
adc
mov
jmp
pop
lea
lcall
bound
test
mov
iret
out
xor
fisttpl
jg
rcl
ds
cmp
pop
pop
add
pop
jne
es
xchg
jae
cmp
sub
pop
dec
push
lods
jmp
jg
jmp
shlb
inc
push
or
xor
shl
push
dec
push
insb
stc
add
mov
push
gs
addr16
fbstp
jns
iret
inc
mov
xchg
scas
call
fdivrs
leave
xchg
rol
scas
gs
mov
filds
push
insb
call
mov
cmp
out
xchg
push
and
in
ds
lods
lds
jb
xchg
push
cmpsb
and
stos
dec
leave
xor
xchg
push
mov
in
fwait
xchg
and
mov
jnp
jns
jle
push
mov
je
gs
mov
add
inc
cmpsb
adc
out
in
lahf
mov
xchg
xor
pushf
adc
repz
imul
or
stc
or
sbb
sbb
nop
push
test
nop
dec
mov
pop
loop
sbb
pop
adc
cmp
jecxz
pop
loope
and
pop
ljmp
mov
in
mov
stos
lret
pop
out
cld
cmp
xor
das
pop
aad
int3
push
mov
aad
scas
push
outsb
shll
xlat
outsb
pop
hlt
xor
loop
jbe
sub
inc
lods
test
lret
cmp
fisubl
nop
out
stos
pop
push
je
lret
bound
jp
mov
ror
dec
inc
pop
shrl
aam
cmc
mov
mov
rcrb
not
rcrl
or
js
ljmp
insb
jb
mov
xchg
dec
loop
movsb
push
outsb
insb
shlb
jg
insb
mov
aad
jmp
es
pushf
push
or
cwtl
xor
cli
bound
out
imul
fdiv
fimull
in
insb
inc
and
and
xchg
addr16
lods
lods
adc
mov
cmp
mov
add
test
fwait
adc
into
push
cli
jnp
xchg
add
pop
andb
je
add
add
xchg
in
adc
inc
pop
aad
adc
loop
movsb
mov
fbstp
xlat
jmp
lret
or
dec
add
rcr
and
dec
add
pop
cmp
fsubs
push
ds
stc
sbb
aaa
push
ds
test
jns
push
and
mov
rolb
lea
inc
cli
adc
cmp
cli
into
enter
cld
mov
dec
push
out
aas
push
popa
mov
cmpl
into
fsubl
outsl
inc
pop
mov
xchg
lahf
popa
lods
xchg
std
push
out
out
sbb
cwtl
jmp
cmpsb
mov
push
sub
lcall
enter
mov
out
mulb
dec
or
mov
sbb
push
outsl
push
call
movsb
sti
call
repz
add
leave
mov
xor
in
pop
adc
dec
icebp
mov
into
fcompl
call
or
addr16
add
mov
stos
inc
notb
dec
rcrl
mov
adc
cmp
dec
dec
pop
mov
dec
es
aas
push
push
push
sahf
leave
movsl
ds
in
mov
je
ljmp
inc
fadds
xchg
les
shlb
pop
imul
push
std
fwait
pop
jle
imul
mov
loope
int
mov
pause
jmp
add
xor
ss
pop
out
or
sub
popf
dec
pop
not
pop
mov
dec
add
je
lahf
loope
popf
or
sbb
mov
jns
fstl
je
push
and
cltd
pusha
sbb
arpl
out
and
or
cli
jmp
movsb
or
movsb
xchg
shrb
shlb
mov
mov
sub
cmc
inc
adc
clc
adc
jmp
imul
push
out
inc
test
or
and
orl
cmpsb
lock
pop
daa
jl
insl
movsb
dec
stos
test
cpuid
repnz
cmc
or
in
push
push
dec
mov
or
inc
inc
fisttpll
jmp
aaa
mov
clc
loope
adc
jb
and
enter
nop
mov
ret
push
mov
fildll
mull
sbb
shlb
rcll
push
sbb
and
je
pusha
lea
lods
icebp
stos
mov
mov
pop
xchg
fldl
decb
insb
pop
push
ss
jae
cmpsb
pop
stc
orl
fidivs
mov
or
fsubrs
add
je
push
and
das
xchg
andb
and
pop
fnstcw
test
addr16
mov
fldenv
mov
dec
inc
push
icebp
aad
push
repnz
cmpsl
dec
pop
bnd
sbb
push
dec
add
cltd
pop
in
inc
sbb
sbb
cli
arpl
stos
repnz
pop
call
fsub
test
jecxz
gs
loope
cmp
push
jae
dec
sbb
mov
nop
fstpl
cmp
imul
push
aam
mov
pop
fistpl
mov
ret
out
add
add
xor
mov
dec
out
push
ds
lods
frstor
pushf
push
rorl
inc
mov
sub
cltd
ja
loope
loope
push
adc
jns
dec
dec
dec
mov
loope
or
adc
adc
or
fwait
dec
into
or
dec
loopne
xorb
insl
lods
mov
push
sub
testl
jg
jecxz
pushf
pop
sub
loope
aas
in
imul
out
jp
mov
mov
pop
in
int
fs
dec
mov
adc
cmpsl
add
add
andl
loopne
ja
cmp
scas
mov
pop
fidivl
push
pusha
cli
xor
out
add
push
andl
inc
in
fisttps
shrb
mov
cmpsl
pop
stos
add
lret
jns
pop
pop
imul
sar
lret
outsb
iret
dec
cld
push
jae
loopne
popa
mov
fucomi
or
mov
push
sub
insb
sbb
dec
int3
lret
jp
imul
pop
xchg
imul
and
scas
out
scas
xchg
iret
mov
adc
inc
pop
and
cmp
fsubr
sarl
push
xor
push
lcall
int
fnsave
mov
mov
insb
sub
movsl
xchg
notl
sub
ja
loope
faddl
push
push
ds
cmp
jg
xchg
js
mov
call
jne
aas
dec
insl
addb
sub
push
movl
sbb
add
jg
insb
sbb
pop
repnz
mov
mov
cmpsb
push
sti
adc
fnsave
pop
dec
sbb
pop
push
mov
jne
das
sahf
loope
lret
data16
sub
arpl
test
loope
mov
mov
push
jo
ss
mov
shrl
aam
adc
std
and
iret
imul
mov
push
lahf
mov
sub
fsubr
mov
cmp
mov
mov
mov
mov
and
xor
les
test
push
pop
loopne
cmp
xchg
fcompl
hlt
mov
adc
pop
inc
adc
sbb
bound
fcmovu
mov
mov
adc
lahf
jne
fcmovu
repnz
push
jmp
cmp
orl
or
rcrl
lock
xchg
int3
pop
sbb
rclb
loopne
xor
inc
test
push
or
sub
pop
mov
stos
push
cld
ret
enterw
inc
mov
add
repnz
ficoml
jo
js
shlb
xor
jno
lods
jb
in
push
int3
pop
loope
xor
push
scas
in
inc
in
outsb
lcall
xor
int
pop
mov
mov
mov
sbb
inc
insl
ds
addr16
fadd
push
mov
or
shl
filds
ret
rolb
dec
dec
out
sbb
hlt
push
stc
dec
add
dec
pop
movsb
xor
cli
mov
shll
aad
mov
inc
divb
data16
dec
pop
mov
and
fsts
push
hlt
jge
add
push
mov
push
mov
ja
sub
stos
cmp
lds
cmc
inc
push
jbe
push
add
add
pop
mov
sbb
mov
testb
jno
xlat
mov
cld
popa
pop
pop
sub
fwait
mov
enter
dec
fcoms
aaa
and
adc
adcl
ret
adc
adc
insb
jge
sbb
int3
loopne
pop
xor
xor
pop
in
and
outsb
xchg
fildl
inc
cmc
jl
shll
mov
negb
cmpsl
xchg
jle
mov
sti
sub
mov
cli
adc
arpl
pop
sbb
into
fwait
addr16
push
movsl
jge
xlat
mov
and
push
imul
push
adc
cmp
das
addr16
out
outsl
hlt
cmp
loope
imul
push
jo
adc
ret
pop
test
mov
ret
mov
flds
mov
fistpl
mov
cmp
sub
fs
xor
das
imul
add
jecxz
xchg
into
inc
or
inc
jecxz
test
cs
jno
int3
aas
and
or
js
inc
sub
cs
inc
xchg
lods
ja
dec
dec
cltd
and
rdmsr
faddp
out
cmp
mov
or
mov
sub
data16
pop
repnz
imul
ds
out
mov
repz
pop
lea
rolb
push
sti
pop
or
test
push
pushf
mov
cltd
test
mov
mov
sub
adc
ret
push
std
xchg
call
out
outsb
shl
or
xchg
mov
jge
sbb
mov
jl
nop
sub
ljmp
std
adc
or
push
sub
lods
addr16
into
stos
and
pop
pop
cmp
inc
lret
pop
sub
pslld
xchg
jge
fdivrl
loope
test
cmp
sbb
dec
pop
xchg
add
sbb
inc
and
mov
mov
fidivl
xor
les
dec
ret
fimuls
push
mov
dec
pop
insl
and
mov
scas
sub
or
stos
out
sti
shlb
out
in
pop
mov
popl
clc
sahf
pop
mov
popa
sub
out
pop
lahf
pavgb
loop
out
popa
pop
mov
xchg
adc
imul
and
jmp
or
dec
xor
jecxz
into
sub
xlat
movsl
clc
pop
cwtl
lods
sub
jmp
adc
xchg
mov
lods
cmp
push
xlat
push
cwtl
data16
inc
mov
pop
and
jecxz
sbb
add
rcrl
faddp
int3
cmp
and
andl
xchg
scas
sarl
cmc
mov
sbb
mov
xlat
fnstsw
fisttpll
and
cmp
test
add
inc
hlt
cmp
jbe
pop
in
push
fwait
popa
mov
test
in
in
mov
jnp
out
add
and
mov
into
dec
adc
mov
jne
sub
xchg
stc
in
fnsave
test
outsl
jnp
or
xor
mov
std
sarl
loopne
pop
call
fists
movsl
stc
int
mov
sub
jns
and
fbstp
lods
jae
stc
js
dec
xor
pop
lea
ficoml
jge
clc
push
jno
stc
les
dec
add
add
cltd
sub
push
xor
jno
movsb
mov
or
push
xor
das
inc
cmp
mov
jp
sub
outsl
mov
lock
int3
inc
dec
push
or
insb
xchg
sti
cmpsl
mov
adc
push
pop
push
or
fs
mov
shll
jno
call
mov
into
jno
imul
loop
mov
scas
mov
shll
xchg
push
sbb
mov
push
pop
cmp
std
or
mov
enter
mov
xchg
cwtl
dec
xor
mov
and
idivb
mov
popf
pop
out
cmp
in
and
pop
jbe
aam
pop
dec
idivl
js
cwtl
xor
in
sbb
ficomps
outsl
mov
int
leave
inc
enter
jmp
mov
cmp
cltd
add
sbb
add
out
xor
jmp
sti
cmp
ds
insl
jge
repz
jbe
mov
jg
mov
inc
cwtl
fst
mov
jg
lods
cmp
and
das
movsb
hlt
mov
rcrl
dec
mov
pop
sete
mov
cwtl
dec
ja
jecxz
les
add
movsl
stos
dec
mov
outsl
nop
lahf
pop
test
mov
or
fistps
call
mov
sub
imul
inc
fwait
xchg
fmul
das
push
out
mov
imul
add
and
imul
mov
cmp
or
mov
push
mov
or
rcrl
sub
ss
push
xchg
xorl
ss
test
mov
dec
cmp
cmp
adc
pop
jne
cmp
test
jle
xor
mov
and
daa
rolb
jmp
or
daa
lds
pop
lods
xor
or
jl
mov
cmpsl
ds
mov
int3
mov
jne
jp
cld
pop
cmc
pop
and
jne
jp
or
cmc
ja
cmp
pop
mov
add
cmp
mov
inc
push
pop
int
lds
enter
jae
jmp
sub
scas
sub
lea
hlt
lret
jp
bound
rclb
scas
mov
adc
in
xchg
xor
xor
pop
or
sahf
fnsave
cmp
pop
call
dec
mov
jl
jo
lods
rorb
scas
pop
cmp
add
les
fidivrs
jecxz
jle
repz
imul
andb
sub
mov
jb
inc
pop
dec
mov
cli
xlat
pusha
pop
shlb
dec
or
aad
sbb
mov
xor
in
gs
test
fnstenv
aas
mov
in
bound
push
nop
cmp
out
les
int
cmp
mov
pushf
inc
cmpsl
push
mov
sub
mov
mulb
fdivr
cmpsl
sbb
dec
sar
rorb
leave
out
xchg
adc
mov
inc
out
lock
sbb
lods
mov
cmp
leave
test
out
lcall
ss
imul
xchg
xchg
scas
cmp
das
ret
cmp
fistpll
xor
je
pop
es
sbb
inc
fnsave
bound
aaa
sahf
adc
jle
scas
in
data16
je
push
shll
mov
add
or
adc
xlat
push
insl
sbb
cmp
mov
daa
mov
lea
cmpsl
ds
pop
repz
cmp
push
push
push
lock
mov
jne
insb
jmp
xor
sub
sub
and
jecxz
cmp
imul
jecxz
add
xor
pop
ret
dec
mov
mov
pop
sarl
mov
data16
cmp
lods
sub
sarl
sub
scas
jno
iret
outsb
das
das
lods
cmp
push
cmp
inc
add
pop
dec
sarb
out
and
mov
and
xor
jbe
mov
cmp
jecxz
xor
or
xchg
cmpsl
outsb
push
cmc
mov
xchg
ss
aaa
and
xor
repz
push
gs
push
rolb
cmpsb
cmp
xchg
test
dec
loope
dec
xchg
push
mov
mov
hlt
jle
aas
pop
adc
or
xchg
loope
enter
andl
mov
fsubrl
cmp
pop
sub
insb
shll
out
xorb
xchg
fistl
rcrl
pop
aaa
cltd
and
shlb
int3
push
mov
into
movsl
sbb
aad
lret
pop
shr
rcll
push
or
daa
fldcw
rcrb
pop
fisttpll
push
addr16
xchg
inc
test
jp
sub
dec
xchg
outsb
sbb
fnsave
cmc
mov
ret
adc
iret
clc
cmp
jmp
lea
xor
adc
adc
push
int
sbb
xor
mov
xor
dec
add
pop
pop
xchg
pop
mov
add
xor
mov
and
pop
adc
mov
push
and
adc
sbb
faddl
push
test
cltd
push
dec
gs
cmp
aam
les
clc
push
or
aaa
setge
sbb
or
sbb
enter
mov
and
mov
popf
iret
mov
sbbb
or
rorb
mov
ljmp
jno
inc
out
push
stc
les
ret
mov
jb
dec
adc
add
inc
cmp
subl
mov
fstl
cltd
dec
mov
push
decb
aam
clc
jg
insl
push
sbb
dec
pop
jmp
adc
pusha
cwtl
in
clc
sub
sub
repz
xchg
mov
adc
lret
int
mov
sbb
mov
adc
pop
into
and
sti
pop
push
ds
dec
sub
andl
popf
push
iret
scas
scas
and
mov
scas
add
mov
iret
dec
add
hlt
mov
sbbb
pop
xchg
adc
mov
cmpb
add
inc
cmpsb
ds
repnz
and
pop
pop
cmp
shrl
xor
scas
mov
pop
pop
mov
das
sahf
mov
rorb
jbe
cmpsb
dec
int3
std
fsubl
gs
inc
adcb
hlt
outsl
enter
xchg
mov
setle
mov
and
in
out
inc
mov
push
jo
dec
mov
dec
in
mov
fistl
out
insl
pop
fmul
in
gs
das
andl
mov
mull
cmp
out
cs
dec
pop
in
mov
mov
add
insl
mov
insb
lock
in
sbb
into
das
push
insb
push
or
in
pop
add
push
sub
inc
sbb
pop
xchg
inc
fsubl
shrl
xor
lods
mov
test
inc
xor
lret
test
sub
pop
out
push
sbb
cmpsl
mov
fnsave
inc
mov
lock
mov
loope
add
cmc
push
add
sub
adc
dec
mov
mov
push
mov
add
xchg
fcompl
mov
jnp
sbb
cmc
aad
pushf
imul
mov
pop
mov
aas
fisttpll
iret
loop
mov
mov
xchg
dec
fisubrl
rcrl
sbb
ja
mov
int
push
cltd
cld
push
loopne
pop
test
outsl
jnp
xchg
test
sbb
jns
cmp
outsl
cmpsb
loopne
fstpt
push
aaa
adc
ret
xchg
scas
out
cs
inc
test
fists
or
call
scas
icebp
pop
xlat
movsb
ret
repz
iret
clc
pop
inc
addr16
ficomps
fisubrl
sbb
fnstcw
enter
test
gs
jo
mov
mov
leave
cltd
imul
mov
and
sbb
mov
or
pop
hlt
fdivs
add
add
cli
insl
mov
insl
jnp
out
mov
jge
insl
xchg
daa
mov
pop
push
hlt
mov
test
sub
pop
mov
mov
pusha
aaa
scas
cmpsb
sbb
hlt
dec
pop
inc
mov
bound
add
dec
dec
fdivrs
jp
enter
dec
xchg
movsb
cmp
push
pop
xor
or
in
mov
jl
jecxz
xchg
pop
mov
jle
mov
mov
push
test
sbb
pop
les
inc
jae
fistl
xchg
int
dec
aas
or
xlat
cli
mov
mov
ret
movsl
sub
int3
pop
movsl
sub
pop
mov
jmp
andb
lea
test
stos
fildll
adc
pushf
xor
ds
outsl
fidivrl
sbb
xchg
test
pop
push
stc
ss
sub
popa
fcomps
jb
jno
fldcw
cs
adc
fisttpll
xor
jl
xchg
test
jg
adc
leave
push
cmp
ljmp
ljmp
sub
push
outsb
xor
cmp
fwait
repnz
test
xchg
rolb
dec
cltd
mov
das
repnz
lahf
mov
shr
adc
push
shll
ljmp
addb
sbb
dec
fstps
lea
ss
imul
lcall
jae
arpl
sbb
push
add
js
sub
int3
out
lods
add
cs
lods
jns
scas
mov
into
xchg
insb
cwtl
mov
out
inc
movsl
icebp
xlat
mov
jnp
xchg
dec
inc
sbb
lret
arpl
or
shl
jns
jae
add
out
dec
cmp
lea
je
push
fcmove
dec
or
sahf
mov
testb
lods
mov
xchg
cmc
loopne
mov
dec
stos
mov
rcrl
pop
movsb
xchg
outsl
pop
mov
test
push
xchg
stos
out
fadd
mov
call
jne
and
jns
push
lds
mov
push
push
in
push
not
xchg
iret
idivb
adc
andl
xchg
std
jno
out
mov
stos
xor
subps
xor
and
xchg
push
mov
es
pop
dec
popf
cs
inc
popa
mov
dec
sti
sub
loopne
dec
inc
repnz
mov
push
add
inc
adc
xchg
pusha
pop
loop
dec
loopne
pop
sahf
gs
hlt
mov
fsubl
mov
inc
sub
push
pop
and
sub
mov
cmp
js
mov
and
pop
sbb
dec
iret
mov
imul
add
fcompl
jle
in
outsb
cld
pop
xlat
addr16
push
test
dec
or
fisubl
loop
clc
insb
daa
in
lea
xchg
adc
pop
cmp
sbb
daa
jnp
xlat
mov
jmp
jbe
cmp
mov
int3
repnz
in
jo
hlt
test
pusha
ficoml
sub
inc
mov
ljmp
cmp
aaa
hlt
test
cmp
loop
repz
in
jns
sub
loopne
pop
dec
pop
dec
sbb
xchg
aaa
imul
aad
add
xchg
or
xor
in
aas
hlt
jmp
add
or
pop
insb
push
jmp
psrlw
outsb
cwtl
pop
mov
cmp
js
out
test
inc
jbe
jle
in
xorl
jo
mov
faddl
mov
in
andl
adc
cmp
and
or
imul
cmp
arpl
xchg
sbb
shrl
xchg
hlt
orl
in
sti
in
outsb
fwait
cmp
inc
cmpsb
mov
test
test
mov
out
test
push
imul
andb
cmp
in
sub
dec
mov
icebp
aaa
vpmovusdw
enter
lret
xchg
adc
cmp
adc
call
mov
or
cmpsl
ret
clc
dec
lret
ljmp
cmp
or
add
sarl
aam
aas
push
int
pop
add
dec
rolb
ds
xor
test
xor
in
pushf
jle
inc
popa
mov
jle
mov
stos
push
lret
imul
mov
push
test
sbb
dec
ret
jge
dec
mov
test
rcll
aam
repz
test
inc
pusha
and
std
call
faddp
add
cmp
xor
js
out
fs
sub
mov
shll
inc
dec
lahf
stos
jecxz
cld
xchg
cmp
clc
push
jge
mov
cmp
xchg
jg
subl
iret
lds
lret
jb
pusha
lock
lret
jns
jae
inc
das
cmp
adc
pushf
popf
sbb
mov
xchg
sub
andb
dec
aaa
mov
insl
or
pop
test
lret
dec
cmp
inc
mov
pop
repz
inc
mov
push
aad
mulps
loop
fwait
mov
add
mov
pushf
das
sbb
push
jo
jnp
scas
jne
push
and
pop
jl
jae
xchg
popf
fildl
shll
sbb
jbe
push
jge
mov
add
sar
stos
cs
push
and
je
and
in
cld
mov
and
lock
sbb
mov
cmp
dec
ds
es
rcr
jae
xor
mov
xchg
pop
or
mov
dec
imul
lods
or
clc
cli
jge
test
cwtl
and
sub
dec
loopne
and
cmp
insl
aad
pop
enter
insl
test
mov
test
fdivrl
test
cmpsl
shr
or
mov
push
mov
sub
lock
pop
mov
out
mov
adc
rolb
push
mov
shlb
sbb
add
adc
data16
pop
loope
xlat
sbb
cmp
mov
shl
pop
ret
in
dec
jns
adc
inc
loop
dec
jne
add
jmp
jge
jmp
push
sub
mov
popa
sahf
xor
in
call
cld
add
jg
push
cmp
push
out
add
push
aad
lret
mov
and
mov
shlb
fists
fcoml
das
mov
fnstenv
mov
dec
add
pop
stos
adc
xor
xchg
add
loop
jp
jmp
in
fstl
push
inc
jne
call
xor
jmp
aam
pop
jne
jns
pop
pushf
dec
xor
stos
inc
daa
cwtl
decb
xchg
loope
into
and
pop
dec
lods
pop
mov
movb
mov
add
mov
pop
out
stos
rorl
mov
stos
sub
add
lods
pop
cmpsl
xchg
push
lds
xlat
dec
dec
add
sub
aam
jns
sbbb
shr
sbb
xchg
inc
add
scas
decb
mov
jns
mov
xor
andl
xchg
push
int3
mov
insb
jle
loop
in
test
push
loop
seta
cli
adc
lods
into
das
mov
int
std
push
mov
push
or
mov
pop
cli
pusha
test
out
in
sub
lods
push
xor
outsl
stos
mov
xchg
sub
icebp
mov
push
aad
xchg
jnp
pop
insb
push
xchg
sbb
out
lock
inc
mov
mov
inc
adc
pop
jb
or
cmp
fidivl
mov
adc
hlt
addl
mov
mov
pusha
push
push
leave
cmpsb
cmp
andb
in
jno
xchg
mov
mov
popa
or
movsb
mov
aad
xchg
mov
adc
lfence
dec
dec
lds
outsb
outsb
sbb
xor
out
fldcw
stos
std
mov
jg
pop
repz
cmp
pop
mov
jo
popa
clc
sub
adc
and
jg
scas
shrb
ja
pop
insl
negl
jmp
mov
and
icebp
test
lds
inc
inc
dec
pop
sti
cmpsb
orl
adc
out
jmp
adc
aas
mov
aad
insb
nop
add
push
cmp
pop
stc
push
cmpl
cmc
test
jecxz
inc
jmp
cs
jo
mov
bndstx
push
sbb
or
dec
loop
aad
mov
pop
cmp
cltd
fldenv
dec
ds
mov
add
pop
in
cs
into
lahf
aas
adc
add
loop
iret
imull
subb
pop
lret
in
daa
sub
arpl
lahf
int
in
push
shlb
lahf
sub
push
jo
jae
mov
stos
xchg
mov
outsl
mov
in
lea
roll
cs
pop
adcb
add
mov
mov
sbb
push
movsb
popf
adc
pusha
ljmp
stos
pop
xchg
lock
outsb
add
mov
add
je
in
clc
insl
pop
ficoml
bound
cmp
arpl
lret
lahf
ss
enter
je
aam
dec
inc
push
xchg
cmp
in
xor
xchg
cmc
push
mov
mov
sahf
out
xchg
outsl
cmpsl
cmp
vpinsrw
jecxz
cmc
push
pop
outsb
or
xchg
addl
fwait
lock
lea
or
out
push
in
and
rorl
inc
push
fadds
repnz
mov
ret
adc
push
inc
mov
sbb
test
out
xchg
inc
pop
pushf
sub
scas
cmp
fldt
in
pop
add
xor
pop
push
in
aas
lods
inc
les
sbb
aad
xor
mov
das
adc
shl
fstpt
sbb
xor
nop
in
mov
xlat
pop
outsl
or
in
mov
hlt
sub
cmpsb
add
xchg
loopne
dec
push
enter
scas
shrl
pushf
cmc
lcall
and
xchg
js
mov
cmc
xchg
cmp
cmpsb
les
mov
dec
out
and
xchg
pop
es
dec
fsub
stos
sbb
aad
dec
outsl
lret
loop
in
in
xchg
lods
push
loop
cmp
ljmp
fcmove
arpl
jae
and
stos
mov
xchg
lds
cli
jnp
cli
push
in
adcb
sahf
popa
lret
mov
gs
int
cmp
cmp
jo
outsb
adcb
pop
lret
mov
mov
pusha
imul
adc
imull
adc
arpl
xchg
xchg
ror
or
mov
dec
or
ret
in
cli
std
pop
in
test
mov
or
shll
mov
and
mov
ds
xchg
xchg
je
in
enter
pop
je
mov
popa
mov
mov
and
into
into
gs
and
bound
pop
xchg
inc
fistl
insb
lea
dec
pop
mov
adc
lock
mov
dec
mov
jge
sbb
cmc
mov
pop
hlt
mov
adc
scas
push
dec
js
cltd
and
inc
sub
and
dec
push
or
push
jg
arpl
and
enter
dec
pushf
ljmp
mov
mov
sarl
inc
shlb
sub
in
push
xchg
xchg
add
cmp
daa
int3
icebp
xorl
lea
pop
mov
xor
xor
stc
mov
popl
add
aas
repnz
xlat
sub
int3
lds
les
cmp
fprem1
pop
cmovle
dec
call
sbbb
pop
int
push
fnstcw
mov
mov
inc
cld
sbb
add
call
xchg
repz
dec
addr16
loop
mov
ds
jne
lock
push
push
out
mov
mov
mov
mov
jns
mov
dec
mov
or
mov
pop
pop
xorl
js
loope
pop
lock
adc
add
idivb
bound
or
lock
or
adc
mov
cld
push
lcall
push
xor
in
xchg
leave
sbb
add
and
pop
add
shrb
dec
loopne
dec
out
cld
inc
sbb
mov
jge
arpl
ss
orl
into
insl
dec
aad
push
mov
insb
clc
adc
pop
cmp
dec
jl
xchg
cmp
sub
nop
cmp
mov
add
push
mov
xchg
sbb
mov
loope
pop
es
xor
mov
push
xchg
repnz
das
scas
pop
test
pusha
push
lcall
bound
lret
test
or
mov
lock
pushf
sarb
cmc
pop
call
cmp
jno
cmp
out
cmpsl
js
xor
jg
int
add
inc
shrl
in
xchg
inc
inc
rcrl
rclb
xor
xchg
mov
out
pop
mov
mov
pop
mov
nop
bound
and
test
inc
loopne
fistps
or
orb
mov
out
mov
jne
addr16
lcall
out
scas
sub
or
pop
lret
cmp
add
in
mov
add
in
rclb
sub
or
sarl
pop
cmp
mov
hlt
sarb
out
xchg
rorb
insb
cmp
jmp
add
addr16
or
lcall
push
in
push
gs
inc
insb
fwait
lock
push
call
inc
enter
fisubrl
push
pop
adc
lds
fistpll
enter
jle
sbb
push
ljmp
cli
mov
inc
adc
push
test
mov
fs
mov
lcall
popa
mov
jg,pt
jmp
xor
arpl
dec
adc
lahf
xor
xor
push
xchg
adc
lods
push
mov
jno
in
pop
inc
aaa
subl
outsl
push
popa
sbb
ror
orb
jmp
or
imul
sub
loop
int3
adc
cmp
xchg
mov
shll
lds
mov
dec
out
push
rcr
aas
pop
pop
hlt
mov
ds
in
int3
jbe
jns
shll
push
aas
loop
repz
push
and
push
lea
adc
xchg
jg
mov
xor
mov
push
outsl
push
sub
xchg
push
push
mov
pop
jb
ja
add
pop
inc
mov
mov
stos
fstpl
sub
rol
jbe
mov
jbe
ret
add
cmp
or
fsts
xor
mov
push
push
jg
lea
les
xorl
movsl
xchg
jnp
test
test
push
adc
xchg
adc
mov
lods
mov
add
add
iret
adc
call
xchg
mov
jmp
xchg
fcomps
jns
sahf
clc
xchg
rolb
fistps
dec
imul
sub
cmp
pop
repz
fucomip
xor
lret
xor
cltd
inc
cltd
mov
les
adc
and
pop
and
inc
je
add
push
cmc
adcl
inc
addr16
xor
lret
and
test
insb
mov
scas
xchg
ljmp
aad
push
fwait
ss
lods
sbb
ret
jae
fistpl
and
fs
mov
mov
imul
ljmp
call
xchg
push
jge
shrb
inc
inc
pop
into
cs
xor
pop
sahf
or
xchg
push
and
int3
xlat
rclb
jae
std
inc
fmul
fwait
and
pop
pusha
xor
fadds
ret
and
dec
push
in
sub
and
sahf
pusha
daa
outsl
shll
cmp
je
jb
jns
xlat
mov
lds
pop
scas
mull
sub
jb
dec
std
jl
gs
pop
jae
jge
adc
jp
xchg
cmp
inc
in
repnz
dec
mov
push
fistpl
lds
repnz
or
fisttpll
mov
pop
addr16
add
mov
jns
sub
repz
sub
xchg
sub
add
sub
pop
push
cltd
dec
mov
ja
inc
ficompl
lret
lahf
jg
leave
push
dec
xchg
xor
mov
pushf
mov
and
call
cmpsl
inc
adc
dec
push
in
into
pop
pop
add
repnz
je
subb
adc
xor
mov
pop
pop
mov
in
fsubl
leave
sub
in
imul
icebp
rorl
and
sub
loope
sub
push
xchg
add
sbb
rcrb
jb
add
les
dec
cli
adc
movsl
xor
or
and
cmpsl
sbb
fldl
xchg
jo
fldcw
mov
imul
mov
outsb
fwait
jl
cli
cmp
shll
jns
fcomip
repz
test
jg
pusha
mov
mov
sar
lea
jecxz
jno
adc
aad
jo
lods
loope
pop
es
jp
xchg
push
int3
inc
sbb
lea
and
nop
lret
xor
insl
and
arpl
cmp
push
insl
ds
xchg
cli
icebp
mov
sbb
mov
and
mov
jo
sub
and
pop
xchg
mov
mov
pop
jb
inc
xchg
mov
rcrb
inc
sahf
repnz
js
mov
decl
iret
lret
mov
in
sub
iret
pop
mov
scas
adc
es
iret
aad
lods
fisttpl
mov
clc
mov
cmpsl
dec
xor
or
aam
jbe
pop
mov
push
paddb
mov
pop
or
mov
out
or
jle
aam
push
icebp
push
or
xchg
sarb
ja
jl
add
sar
test
adc
mov
cmpsl
lcall
push
shll
xor
fsubr
pop
lock
adc
mov
leave
cmpsb
arpl
lea
push
push
jl
es
push
xor
xchg
cmpsb
cld
inc
sub
inc
sub
push
lret
jge
mov
push
xchg
ret
dec
cltd
mov
das
jl
lods
inc
sub
dec
or
jmp
lods
fmuls
sub
xchg
sahf
test
fisubs
aaa
dec
mov
cltd
xor
adc
push
add
xchg
div
mov
sbb
dec
dec
icebp
clc
dec
data16
jo
jae
enter
lods
stc
enter
push
scas
negl
sahf
imul
aaa
mov
aaa
mov
jae
js
shr
add
cmp
push
sbb
mov
mov
inc
imul
pusha
into
xchg
sbb
mov
sahf
push
xchg
or
adc
sbb
outsb
cmpsl
push
andl
adc
mov
fcom
out
or
lods
jg
and
or
outsl
jb
fxch
mov
pusha
clc
adc
xor
test
xchg
sub
std
pop
mov
std
fdivr
or
xchg
cmp
sub
xchg
mov
rcll
add
pop
icebp
xor
sub
mov
lock
jmp
call
cld
cmpsl
stos
sub
stc
gs
pusha
push
pusha
mov
mov
mov
pop
xor
fstps
jno
out
xchg
jge
mov
hlt
shlb
es
pop
mov
cmpsl
push
mov
hlt
jle
cmp
dec
pop
jge
pop
test
adc
and
pusha
sbbb
ljmp
call
daa
sub
pop
outsl
pop
leave
pop
push
dec
mov
push
push
mov
mov
icebp
mov
ja
mov
inc
jmp
ret
ljmp
imul
xchg
jbe
sbb
repnz
push
pop
jnp
mov
es
xor
mov
rorb
and
std
adc
or
out
int
jg
or
lret
sub
dec
in
jne
sti
sub
fisubrs
sub
jno
leave
mov
ret
outsl
rorb
mov
sub
ljmp
pushf
mov
push
xchg
mov
add
mov
aaa
ret
pop
sbb
aaa
dec
jle
into
insb
loope
cmpsb
ss
into
fs
pop
jo
mov
cltd
call
mov
inc
fiadds
dec
dec
in
push
loopne
mov
push
fwait
sti
daa
outsb
fbstp
inc
push
ljmp
xchg
sub
xchg
xchg
push
jge
sub
aad
add
in
mov
add
in
push
mov
xchg
xchg
jnp
xor
das
and
cli
push
push
lret
pop
xchg
jae
lret
sbb
popf
cmp
les
fbld
fucomi
jmp
push
call
mov
fisubrl
add
lret
push
inc
mov
mov
sbb
mov
or
ljmp
loop
mov
mov
push
scas
adc
sbb
jmp
cmp
pop
in
xchg
push
sub
mov
negb
std
cmpsb
pop
in
lret
pusha
mov
lahf
sbb
addr16
jae
cmp
stc
mov
movsb
icebp
add
in
jae
cltd
xor
sarb
dec
push
cltd
in
std
ret
fldcw
in
inc
add
js
dec
hlt
fnsave
arpl
nop
dec
out
ljmp
dec
or
cmp
mov
pushf
push
mov
les
add
enter
adc
add
mov
test
push
mov
cmp
hlt
mov
sbb
pop
sub
lret
cmp
adcb
inc
imul
add
addb
mov
nop
push
loop
fidivrl
sub
mov
inc
xor
push
sahf
fs
xchg
sbb
mov
xchg
sbb
gs
das
insl
shll
mov
fwait
xchg
mov
repnz
jnp
fs
rep
sub
jp
ret
or
lock
sub
cmp
nop
push
dec
adc
shl
pop
cmc
jnp
roll
jno
bound
icebp
insl
or
push
jp
pop
adc
add
mov
push
pop
ja
cli
adc
sub
loopne
cs
push
add
insb
xor
fldt
add
fcmovbe
cltd
mov
xor
inc
xacquire
cmp
inc
cmpb
stc
xor
push
fstl
je
mov
hlt
add
scas
pop
lods
or
stos
sub
xchg
cmp
push
out
or
xchg
dec
movsb
fbld
lock
pop
push
aas
rclb
nop
push
aad
jmp
sub
mov
jo
fdivrl
test
jecxz
mov
sbb
add
mov
xor
pop
fildl
pop
movsb
adc
je
faddl
in
fidivl
in
pusha
adc
and
push
lret
ud1
lods
mov
xor
out
popa
adc
les
adc
mov
sbb
mov
std
mov
and
mov
jns
mov
int3
xor
arpl
neg
pop
testb
loope
and
out
sub
push
push
inc
xor
mov
xchg
loop
pop
jg
roll
repz
and
fwait
mov
adc
jl
je
or
js
jg
sbb
xor
sbb
add
and
pop
dec
adc
dec
cmp
pop
xchg
mov
idivl
ljmp
mov
cld
movsb
outsb
test
gs
push
or
mov
pop
mov
out
push
in
pop
cmpsl
jo
add
aas
jnp
sub
xchg
adc
sahf
int
in
mov
mov
mov
mov
shrb
mov
or
push
pusha
cmpsb
mov
ror
int3
imul
test
out
xchg
sub
pop
dec
cmp
jnp
mov
adc
push
fisubrs
or
cmp
fs
sub
dec
lret
xlat
mov
mov
cmpsl
repnz
rcrl
mov
push
mull
cmp
jae
lcall
dec
pop
imul
mov
cmpsb
dec
int
testb
cmc
in
xor
outsl
rcrl
ljmp
or
pop
insb
mov
xor
or
add
push
fbld
sub
loope
inc
and
jne
sub
call
outsl
clc
stos
cmp
in
adcb
in
fs
sub
loopne
test
mov
push
sarb
pop
dec
clc
imul
mov
pop
insl
fwait
sbb
scas
inc
xor
inc
call
mov
sahf
subb
mov
mov
aam
pop
fistpll
sar
pop
lock
popf
and
fidivl
push
mov
dec
in
push
xor
test
repz
add
scas
jae
pop
scas
imul
push
sbb
jg
out
xor
lret
das
sub
mov
orl
xor
adc
sub
xor
jns
ret
test
jno
and
mov
int
insb
inc
mov
rep
xor
clc
add
test
imul
mov
sub
dec
adc
dec
stc
or
mov
fstpl
in
add
xchg
mov
ret
cmc
ljmp
int3
mov
xchg
outsl
mov
repnz
shrb
fadd
pop
fistpl
shlb
popa
mov
inc
pushf
hlt
mov
add
jecxz
or
aas
push
pusha
lcall
cmp
test
and
pop
mov
bound
ds
add
jb
fsts
ds
into
fnsave
imul
stc
pushf
mov
sub
sahf
pop
imul
sbb
jge
pop
xchg
sub
nop
pop
stc
xor
or
and
adc
stc
dec
sbb
cmc
adc
inc
mov
sahf
mov
inc
addr16
lea
out
jae
fs
cmc
mov
xchg
jbe
cmp
mov
cmc
xchg
lock
mov
out
and
add
add
sbb
mov
clc
shlb
gs
jns
and
ret
inc
repz
xcrypt-ctr
cmpsl
sbb
ds
call
sbb
repz
gs
idivl
mov
mov
mov
and
mov
add
or
lods
or
mov
and
call
dec
rorl
inc
std
je
mov
jne
dec
sub
pop
xor
cmp
pop
jl
mov
mov
ficoml
xchg
jg
and
ret
in
daa
mov
int
stos
stc
sub
in
pop
sbb
lcall
cli
jne
ret
mov
jno
pop
int3
dec
xchg
or
pop
mov
sub
lods
outsl
push
loopne
test
cmp
inc
lea
push
lahf
xchg
je
xlat
xor
inc
int
and
fstpt
xchg
pop
adc
frstor
push
mov
cmp
and
ja,pt
inc
daa
scas
inc
test
rolb
outsb
fnsave
out
lcall
mov
rol
jns
loope
hlt
lds
in
push
rclb
mov
push
mov
cmpsb
xchg
pop
cmp
lock
or
fistps
dec
add
ja
add
enter
iret
xor
test
sbb
or
in
outsl
add
xchg
stos
sbb
jbe
addr16
cwtl
mov
push
imul
or
cmp
cmp
push
adc
adc
cli
jo
rcll
fwait
dec
icebp
mov
and
dec
out
pop
inc
arpl
xor
pop
add
add
pop
aas
rorb
repnz
xchg
pop
add
mov
ss
stos
outsb
mov
ret
shl
and
lret
dec
add
jl
shrb
pop
adc
inc
pop
xchg
sbb
hlt
push
out
test
xchg
xchg
push
in
in
mov
mov
fsubrs
jno
cmpsb
mov
mov
jbe
xor
call
inc
fdivl
test
cmp
inc
fisttpll
fcmovnu
mov
inc
jno
out
addl
loope
sbb
adc
push
inc
pop
adc
or
adc
mov
cmp
sbb
daa
xor
adc
sti
push
leave
int3
stos
inc
push
mov
add
xchg
mov
add
jbe
clc
sub
jae
xchg
push
add
mov
add
mov
and
push
push
shll
jmp
arpl
push
pop
adc
xchg
push
and
push
and
fucomp
mov
divl
adc
icebp
sarb
out
mov
push
xlat
out
xor
mov
xor
idivl
jp
test
stos
fsts
jmp
dec
fidivrs
xchg
stos
cmpsl
push
sbb
inc
dec
cmp
cmpsb
jg
pop
enter
sub
scas
sbb
cmp
les
sbb
or
push
ds
leave
xor
xchg
inc
iret
pop
cmp
and
shlb
ss
addr16
push
pop
sarb
popa
xor
clc
sbb
outsb
mov
imul
lret
sbb
std
add
pop
cltd
pop
dec
mov
mov
push
sbb
out
jge
mov
lahf
and
sahf
adc
jle
in
rclb
xchg
cs
scas
nop
lods
sub
into
sbb
mov
mov
rcr
les
out
sub
xor
lret
and
movsb
inc
push
lea
xchg
jno
xor
xor
sub
cmp
inc
fdivl
lea
cmp
arpl
mov
mov
lahf
pusha
pop
lretw
cld
xchg
sar
mov
lock
ficoms
xchg
pushf
ds
mov
imul
aam
mov
mov
ficoms
insb
leave
divl
cmpsl
xchg
sti
test
rorl
add
and
sub
inc
inc
arpl
xor
orb
movsb
push
fdivl
xchg
loopne
leave
in
mov
sub
mov
popa
ljmp
adc
shll
cmpsl
int3
mov
push
mov
rolb
xchg
mov
cmp
mov
jecxz
mov
push
cmp
jecxz
icebp
sbbb
sti
es
inc
lret
mov
xchg
mov
int3
sbb
jl
sbb
push
sbb
andb
jbe
pop
xor
repz
std
shlb
stc
jb
push
mov
push
mov
js
xchg
dec
push
lcall
fs
jae
mov
or
pop
enter
jg
cmp
sub
sub
inc
rorb
in
scas
push
aaa
mov
cmp
popa
shll
add
dec
pop
pusha
mov
mov
add
xor
push
push
inc
rclb
xor
adc
push
call
aam
inc
push
and
xor
in
pop
dec
cltd
xchg
test
stos
mov
andb
ret
or
xchg
add
push
mov
in
sub
add
enter
cld
lock
sub
xor
push
shlb
mov
popa
push
lock
xor
jno
movsl
dec
cmp
enter
push
loope
lret
call
loop
cmp
mov
nop
add
and
add
imul
jmp
pop
lods
pop
sbb
ds
xor
cld
lret
mov
mov
pop
push
js
das
push
push
cmp
pushf
or
test
hlt
orl
movsb
in
pop
add
mov
loopne
imul
in
movsb
jecxz
in
mov
gs
arpl
pop
icebp
add
push
mov
shl
adc
stos
mov
je
fcomip
imull
pop
adc
popa
and
sbb
fnstsw
in
mov
lret
sbb
push
push
out
jmp
inc
and
xchg
sbb
int
cld
ret
adc
outsb
jle
repnz
stos
add
shrl
sbb
dec
ret
fisttpl
addr16
pop
cltd
xchg
xchg
pop
das
mov
into
enter
repz
jp
pop
in
mov
pusha
mov
decl
jl
cld
in
sbb
daa
cli
dec
pop
adc
movsb
repnz
cli
test
iret
arpl
outsb
xor
leave
dec
inc
enter
lds
out
or
xchg
add
lret
insb
fists
dec
ljmp
decl
sbb
cmp
push
xchg
mov
cli
jmp
xorl
mov
lret
xchg
jmp
jo
mov
add
add
jmp
negl
mov
and
mov
push
fwait
pusha
lods
lret
cmp
push
insl
add
mov
pop
jne
shll
into
add
cmp
aaa
pop
push
rcl
fnstsw
cs
movsb
fcompl
push
es
pusha
xchg
shrb
pop
push
mov
mov
xorl
cmpsl
mov
mov
xlat
mov
movsb
jecxz
cltd
call
popa
lock
dec
and
jnp
jmp
xor
inc
sar
mov
in
pushf
pusha
sbb
mov
sarb
popf
arpl
pop
cmp
mov
fsts
jns
icebp
mov
les
push
xchg
outsl
adc
mov
outsl
out
push
js
test
pop
mov
int3
ss
in
in
sbb
push
std
nop
sub
jns
xchg
and
in
stc
adc
lret
dec
and
xchg
and
fldcw
adc
jns
sub
pop
sar
mov
or
popa
ja
insb
jne
out
call
mov
or
stos
xor
shl
jb
call
adc
pop
add
out
mov
mov
push
aad
lods
adc
and
sti
imul
idiv
adc
andb
decl
test
adc
stos
inc
pop
cli
subl
jae
adc
orb
ja
lahf
sahf
or
rclb
test
rcrl
mov
sbb
mov
push
jno
mov
mov
test
in
mov
imul
imul
adcl
enter
push
mov
adc
push
push
lds
jmp
aam
repnz
pop
cmp
inc
iret
loop
or
cltd
cmp
add
inc
inc
cmpsl
idivb
outsb
sub
sbb
data16
push
sbb
outsb
in
pusha
cmp
mov
jmp
icebp
popa
pop
pop
rcrb
imul
insl
adc
addl
inc
jmp
or
shrb
xor
lret
sti
xchg
mov
jg
push
jge
fildl
ja
cld
dec
fnstsw
push
sbb
add
or
xchg
dec
sub
lea
mov
sbb
dec
add
adc
jp
test
xchg
add
push
lret
std
jmp
lock
ss
arpl
and
pop
mov
ljmp
popf
cmc
fidivl
lds
sub
pop
sub
ss
movsb
loopne
sbb
sarl
mov
insl
xchg
add
ret
std
cltd
jecxz
push
and
and
push
push
push
out
outsb
cmp
or
jae
mov
push
outsl
je
and
aaa
sub
stc
push
cmp
inc
notl
or
adc
int
andb
xor
shlb
xor
mov
mov
in
or
inc
add
jae
in
sub
mov
test
imul
inc
mov
push
call
test
pop
add
hlt
insb
ljmp
sahf
fdivrl
repz
adcb
jecxz
negl
push
xchg
dec
or
and
out
xchg
inc
cmp
mov
xchg
call
jp
push
mov
sbb
mov
pushf
shl
dec
cmp
sahf
mov
out
and
scas
pop
sub
into
fwait
ss
ret
pop
fwait
mov
and
lock
hlt
cmp
mull
movsl
cli
out
rcrb
dec
cmp
and
or
out
xchg
adc
data16
int3
fstpt
dec
out
in
mov
ret
cmp
sarl
fs
xor
sub
adc
leave
dec
out
cmp
inc
xchg
sti
rclb
dec
pop
pop
mov
and
inc
sbb
push
jne
nop
mov
adc
pop
add
cmc
fmuls
jno
xchg
inc
add
jne
xorb
xchg
mov
add
jge
push
mov
nop
gs
mov
cmpsl
adc
adc
or
mov
loopne
sub
sbbb
push
ret
cmpsb
mov
test
adc
mov
xchg
into
pop
lea
xor
push
out
arpl
pop
jb
clc
mov
repz
lods
inc
mov
loop
xor
outsb
adc
add
icebp
icebp
cltd
xchg
pop
testl
outsb
push
push
xlat
bound
shl
es
jmp
mov
cs
pop
rol
rcrb
pop
repz
imul
cmpsl
sbb
cmpl
dec
insb
cmp
popf
jo
and
inc
add
inc
das
lahf
aaa
mov
pop
mov
add
mov
and
in
sub
mov
push
sahf
mov
lahf
cli
push
lahf
jo
mov
rol
sbb
pop
cmpsl
lahf
push
shl
add
in
rcr
ret
mov
push
rcrb
lahf
test
shll
mov
push
cmpsb
popf
cmpsl
add
popf
push
sarl
sbbl
pushf
clc
sahf
fwait
std
jns
loop
call
add
adc
lcall
lds
pop
or
imul
loop
mov
mov
sahf
mov
inc
xlat
xor
decb
lods
pop
jno
rolb
jmp
dec
test
je
imul
adcl
dec
xchg
lea
push
cmp
stos
inc
jne
arpl
jae
leave
pusha
push
xchg
xchg
mov
sti
mov
out
scas
fdivl
incl
movsl
test
fidivrs
pop
cmp
dec
loopne
out
mov
sbb
lret
jb
push
inc
or
movsl
sbb
inc
xlat
mov
in
xor
aam
sub
fcompl
push
xchg
add
add
dec
mov
imulb
ljmp
pushf
jge
sbb
xor
sub
adc
shl
cmpsb
adc
xlat
jno
xchg
arpl
xor
fneni(8087
mov
popf
stos
xchg
jns
scas
into
arpl
in
enter
call
lea
lock
mov
xlat
fsubrs
hlt
sub
mov
out
jg
sbb
xor
push
inc
sti
dec
mov
lahf
movsb
lds
dec
jp
out
scas
add
mov
ds
xor
loopne
aaa
ficomps
fildl
mov
int
and
adc
xchg
push
ljmp
jno
aaa
popa
insl
xchg
lods
lret
ja
push
int
mov
shrl
ficomps
lds
iret
sti
mov
mov
inc
faddp
jb
out
stos
clc
test
int3
xor
mov
mov
push
cmc
das
xchg
xor
movsb
pop
dec
cmpsl
fs
jno
pop
mov
add
mov
loop
cmpsl
les
mov
test
in
es
fcoml
mov
jmp
pop
adc
sub
in
add
push
fwait
cmc
fistl
xchg
movsl
ja
mov
bound
dec
sub
jp
test
mov
cmp
shrl
ljmp
and
ficomps
sbb
add
mov
xchg
mov
push
int
dec
negl
jb
frstor
and
mov
jmp
pop
sub
push
mov
or
xchg
add
xchg
fldenv
push
cli
inc
xor
testl
jg
cltd
mov
pop
je
sarl
ret
mov
push
mov
fwait
test
mov
les
dec
mov
xor
loop
insl
mov
xchg
fdecstp
lods
inc
sub
add
mov
mov
cltd
out
sub
push
test
add
enter
sti
iret
fiaddl
fsubrs
dec
scas
add
mov
cmp
jb
shrb
movsb
lock
push
gs
fisubl
out
push
ljmp
inc
ret
call
shll
test
mov
popa
stos
mov
dec
in
xlat
cmp
movsl
es
pop
mov
or
mov
or
jp
xor
xchg
js
adc
fdivrp
or
add
fisubrl
ret
rdtsc
sbb
bound
mov
dec
outsl
or
mov
add
cli
daa
push
jb
scas
ss
je
insl
mov
jg
inc
jb
cmp
scas
inc
inc
subl
lcall
ds
inc
movsb
mov
push
cmpsb
cmp
mulb
cmpsl
xchg
pop
imul
inc
sahf
mov
sbb
and
lret
repnz
out
sahf
testl
add
das
xchg
add
pop
divl
sti
scas
jmp
daa
mov
pop
pop
or
inc
jle
fs
bound
shrl
lcall
cwtl
sbb
mov
movd
push
fwait
sub
and
repnz
xor
sahf
test
mov
xor
push
bound
xor
mov
push
xor
push
mov
push
hlt
or
and
push
leave
in
sub
cltd
sub
or
sub
pop
xor
mov
loope
fdiv
fidivrl
or
cmpsb
ds
xor
dec
je
sbb
jo
sarl
daa
cmp
xor
lret
lret
in
push
in
xchg
or
dec
aaa
ja
enter
das
or
ss
jne
xor
and
inc
pushf
int3
add
dec
shll
gs
fldenv
nop
push
jmp
add
aas
adc
call
ret
not
fcomps
pop
imul
outsl
int
shrl
cmp
loop
insl
adc
and
call
int3
hlt
mov
out
push
inc
dec
and
cmpsb
lret
dec
dec
xchg
sub
stos
imul
imul
or
push
das
test
out
movsb
aas
cld
or
icebp
xor
jmp
sbb
je
fbstp
pop
test
mov
push
negl
call
cmp
pop
cmp
clc
icebp
aas
stos
outsl
in
sbb
daa
mov
jge
dec
js
mov
pushf
shrl
subb
fmuls
movsl
jl
sbb
jno
out
add
sub
cmp
icebp
jp
add
fdivl
push
es
push
inc
xchg
push
js
rolb
aad
icebp
minps
fbld
out
push
in
xchg
adc
call
les
xchg
outsl
cltd
or
mov
sub
mov
or
ss
mov
mov
es
aad
data16
loopne
dec
pop
add
ss
push
inc
mov
push
movsl
out
push
jge
xor
pop
popf
and
loopne
and
cmpsb
adc
push
mov
dec
xchg
fnstsw
shrb
dec
loop
add
mov
das
insl
aam
add
mov
pushf
inc
pop
cmpsl
pop
imul
cmpsl
loope
les
cli
addr16
fcoml
adc
cld
addr16
dec
sbb
test
and
push
in
xor
rorb
jmp
sarl
mov
fidivs
fistpl
gs
scas
mov
hlt
sub
les
int3
fcom
mov
inc
addr16
into
dec
stc
rcrl
push
call
push
iret
outsl
mov
movsl
cmp
aad
pusha
and
pop
lcall
in
test
fiaddl
sub
adc
jo
sbb
insl
bound
add
arpl
jb
shll
mov
jmp
imul
dec
mov
dec
movsl
cmpsl
mov
mov
push
mov
ss
add
and
call
ficompl
ja
xor
push
jae
addr16
pop
test
push
pop
loop
and
xchg
pop
mov
pop
jb
lahf
mov
test
rcrl
add
and
mov
daa
fidivrs
shl
push
cli
xchg
xchg
cmp
mov
loopne
add
orb
sub
lcall
and
jge
movsl
mov
nop
push
sub
sub
pop
pop
pop
jb
add
jo
pop
lods
sti
pusha
lods
iret
cmp
lods
push
or
push
cmpsl
mov
mov
shrl
cltd
push
mov
data16
lock
push
jecxz
mov
mov
ret
ss
sub
data16
dec
loopne
mov
les
addr16
or
push
jno
pop
int
iret
push
fdivs
fs
jp
arpl
addb
xor
adc
scas
out
test
xor
addr16
add
or
sti
mov
cmovge
mov
fucomi
xchg
fistl
xchg
add
sub
or
popa
cli
sti
loope
fistl
jl
sub
xchg
xor
inc
hlt
in
ret
cmpsl
out
aad
mov
mov
dec
mov
mov
negl
fnstcw
into
mov
pop
jno
scas
lret
add
jno
jb
fldl
pop
je
test
leave
icebp
sub
and
jae
popa
jno
pop
mov
aam
bound
sbb
sti
or
cmp
pop
pop
dec
cmp
ja
loope
arpl
xlat
into
enter
lods
or
add
xor
test
push
fsubs
out
stc
clc
push
pusha
stc
add
cld
lret
cs
cmpsl
sbb
out
cmp
sbb
bound
cwtl
xchg
fcoml
icebp
xchg
push
push
cwtl
push
js
pop
stos
cld
movsb
pop
ljmp
loope
push
pushf
lods
cmp
xchg
sahf
cmp
and
cmp
stos
inc
adc
movsb
cmp
imul
call
leave
dec
outsb
mov
rcrl
jle
shrl
push
loope
aad
jbe
sbb
call
cmp
pop
lret
mov
insl
lcall
xor
and
pop
iret
pop
scas
ljmp
sub
mov
test
inc
add
aas
ss
dec
jo
js
int3
xchg
loope
adc
lcall
fidivs
fs
cmc
leave
in
mov
out
dec
cmc
mov
cmp
aad
fwait
inc
cmpsb
inc
push
pushf
test
jp
movsb
mov
lds
inc
insb
pop
dec
push
int
or
gs
adc
je
in
pop
adc
sub
inc
lods
stos
fildll
dec
push
lcall
lcall
sub
jg
fdiv
mov
bound
into
inc
ja
mov
out
andw
or
sbb
mov
inc
push
mov
in
fsts
cmp
icebp
mov
cmp
jl
pushf
and
jle
sub
sbb
push
add
cmpsb
ss
ss
out
lahf
push
xor
push
jmp
adc
roll
ret
shrb
repz
mov
in
addr16
and
jne
mov
cmpsb
dec
scas
aad
cmp
jge
mov
xchg
aas
aas
jg
call
addl
cmp
imul
insl
in
pop
outsl
gs
mov
xor
or
rolb
pop
adc
push
insl
mov
lret
mov
jo
in
cmpsb
inc
imul
lahf
pop
inc
push
ss
das
inc
mov
notl
xchg
push
out
push
loope
js
outsb
add
iret
pop
mov
sub
pop
sahf
xchg
inc
in
jae
cwtl
push
push
test
enter
cli
pushf
pop
add
dec
lods
adc
sbb
mov
push
jno
fnstenv
pop
std
and
xchg
idivl
daa
mov
cltd
mov
cmp
jp
lds
inc
sub
stos
push
sbb
inc
sbb
je
pop
sub
mov
stos
jnp
lods
sub
das
mov
inc
push
sbb
dec
xor
fucomp
push
dec
rcrl
adc
dec
or
iret
jp
out
js
sti
mov
xlat
mov
arpl
out
sub
mov
fsubp
jge
sub
push
adc
lods
inc
inc
pop
pop
mov
arpl
fisubl
sbb
adc
dec
mov
jne
xchg
rcrb
js
add
push
xchg
sbb
shrl
mov
pushf
or
xchg
cs
movsl
sbb
cwtl
jns
shll
jle
rcrl
xor
dec
shrb
stc
out
push
iret
sbb
jbe
lock
sub
pop
inc
xlat
push
cli
xchg
call
or
jb
sub
lcall
movsl
cmp
imul
cmpl
cmp
pop
data16
pop
repz
divl
movsl
xor
or
mov
sarl
lock
sarb
imul
js
les
xchg
lock
jecxz
fidivs
ds
or
mov
pop
roll
addr16
lods
jno
and
cmpb
pop
inc
icebp
jns
es
pop
imul
jg
scas
mov
inc
push
mov
pop
mov
popf
hlt
addr16
stos
cmp
jge
xlat
sahf
mov
jp
ljmp
ret
sub
pop
bound
push
dec
sub
jl
fwait
test
cltd
call
xchg
and
movsb
pop
stc
into
dec
mov
jmp
push
sbb
mov
xor
mov
sub
dec
xlat
ss
xor
rclb
rcrl
dec
shlb
mov
jl
pushf
jae
and
push
fiadds
sbb
loopne
xchg
mov
add
jnp
fimuls
rcrl
test
je
pop
shl
mov
call
inc
rorb
enter
lahf
test
lds
mov
cmpsb
cmpsb
cmp
dec
push
std
mov
cmc
test
pop
jae
dec
sbb
mov
cltd
fisttpl
insl
js
stos
push
out
pop
fcomi
add
pop
repz
orl
leave
push
sbb
cmpsl
outsl
nop
mov
repz
setbe
xchg
push
and
inc
gs
lret
dec
in
faddl
mov
or
lret
cwtl
adc
dec
mov
idivl
arpl
fwait
jle
or
shll
out
add
cmp
inc
call
in
in
push
mov
or
jle
movsl
cmp
sub
mov
xor
push
lods
in
mov
or
xchg
jecxz
mov
xor
jmp
sbb
jae
movsb
pop
and
push
add
stc
cwtl
lock
leave
les
mov
adc
dec
shrl
ret
dec
mov
xor
lds
mov
push
mov
push
or
movsl
cmp
insb
push
test
sahf
add
mov
jg
fnstenv
pop
pusha
fistpl
cmp
shrl
xor
mov
mov
cmp
fdivp
movsl
push
adc
dec
jle
push
or
shrb
and
mov
loope
repnz
jle
dec
out
mov
cs
xchg
gs
lds
mov
add
das
sti
lea
dec
xor
and
xchg
popa
imul
ss
xlat
dec
mov
sbb
push
lret
imul
js
or
xchg
mov
push
popf
sbb
jmp
pop
insl
xchg
sbb
sbb
mov
xchg
dec
icebp
imul
push
ss
and
out
dec
dec
inc
pushl
or
cmp
lods
imul
dec
pop
sub
xchg
lods
inc
aad
lods
stos
push
out
pop
pop
cmp
daa
dec
loope
dec
dec
data16
adc
mov
cmp
cmp
sub
push
and
movsl
xor
cmpsb
dec
cmp
pop
cmp
daa
out
fs
push
out
lds
xor
mov
ficoms
push
pushf
adcb
xor
pop
loope
xchg
jge
mov
push
roll
roll
jmp
fisubrs
imul
sub
mov
and
mov
inc
inc
test
dec
and
movsb
inc
push
imul
mov
cmp
pop
stos
xchg
andb
push
xchg
insl
mov
or
xor
pop
xchg
push
js
adc
sub
leave
jecxz
pop
mov
add
call
stos
daa
outsl
mov
lods
cltd
and
repz
mov
fsubs
lock
mov
rclb
mov
mov
mov
aam
testb
or
cli
lock
adc
jno
cwtl
mov
fsubr
popa
lret
xor
mov
les
jecxz
cmp
nop
pop
ds
mov
cmp
push
cmpsl
lret
out
dec
sti
out
dec
cwtl
xchg
pop
int
cmp
mov
mov
dec
dec
int3
pop
outsl
imul
addb
jbe
jecxz
inc
and
jb
hlt
cmpl
mov
into
pop
outsb
or
cld
popa
clc
iret
add
in
pushf
int3
cltd
movsl
iret
notb
jnp
dec
mov
je
jecxz
les
loope
pop
pushf
or
aas
sub
rorl
into
push
pop
xor
push
fnstsw
mov
inc
arpl
and
clc
iret
les
lret
pop
int3
lret
cld
stos
or
mov
into
xchg
pop
outsl
and
adc
cs
jnp
repnz
dec
push
loop
clc
mov
shrb
stos
int3
mov
or
mov
mov
int
scas
decl
fidivl
fadds
fldl
inc
jmp
add
xchg
push
dec
add
inc
push
int
out
movsb
ficompl
in
bound
mov
out
ficomps
xchg
lcall
adc
ds
movsb
out
jb
pop
dec
pop
addr16
iret
fwait
loop
sahf
stos
cwtl
das
repz
ret
jno,pn
pop
push
scas
or
js
mov
pop
mov
sbbb
or
shl
or
fs
test
test
popa
jmp
imul
cmp
sub
arpl
call
pop
leave
xor
mov
fwait
lret
adc
call
or
pop
push
mov
shll
push
inc
ljmp
dec
lods
outsl
in
jl
sahf
push
js
xchg
add
test
scas
mov
std
mov
sbbb
xlat
test
lea
andb
popa
mov
shll
push
mov
mov
and
dec
out
cmp
and
int3
fimuls
pop
pop
mov
in
sub
hlt
dec
inc
pop
jecxz
insl
jle
mov
rcr
testl
push
rcl
lahf
adc
jb
stos
push
dec
cs
out
and
push
adc
add
jno
in
in
cld
jnp
xlat
hlt
inc
mov
pop
jle
iret
ljmp
movsb
ljmp
adc
xchg
lods
push
or
imul
pop
movsb
pop
sbb
add
movsb
divl
pop
jecxz
inc
sbbb
push
xchg
les
stc
aad
mov
iret
xchg
outsl
dec
aam
jnp
xchg
pusha
dec
les
adc
mov
clc
aaa
push
sub
cmp
popa
sub
mov
loopne
in
or
stc
mov
stos
jmp
lods
outsl
xchg
aam
cmc
mov
sbb
mov
in
jae
push
mov
popf
push
and
push
aaa
mov
push
stos
fdivrs
pop
leave
test
movsl
xchg
ljmp
aam
and
xchg
into
imul
mov
inc
jg
mov
test
aad
or
xor
in
fwait
cmpsl
pusha
fwait
mov
cmp
call
popf
repnz
inc
or
jle
out
pop
insl
pop
jnp
ss
push
test
jle
push
dec
pop
jo
outsb
lret
or
mov
mov
jp
jo
jle
mov
mov
gs
lret
jns
inc
push
sbb
xor
mov
jo
adc
cmp
sbb
adc
xlat
or
xchg
test
push
rcr
fwait
std
sub
sub
mov
lret
call
pop
je
jg
or
jo
cwtl
inc
or
aad
icebp
dec
push
push
arpl
push
fbstp
xor
ror
insb
imul
xchg
cmpsl
cli
aam
jecxz
jge
cmp
add
cmpsl
out
dec
sbb
popl
push
jmp
push
outsl
gs
out
and
pushf
dec
aaa
dec
mov
cwtl
adc
leave
sti
sub
scas
mov
clc
out
lcall
or
popa
xor
sub
cmp
pusha
jne
add
shll
xchg
fiaddl
sbb
xchg
rcrl
ss
xchg
mov
dec
pop
outsb
mov
xchg
movsw
sti
xor
and
jecxz
mov
and
mov
adc
jae
or
leave
pop
sub
dec
sub
mov
inc
les
aas
dec
leave
pop
pop
mov
rcl
xor
cmp
imul
sbb
inc
cmp
je
aaa
inc
fsubrl
out
mov
add
inc
mov
ds
and
movsl
push
inc
xor
popa
movl
mov
nop
je
xchg
push
inc
les
mov
loop
dec
xor
mov
mov
addb
sub
call
mov
xchg
lds
les
cmpsl
push
cmpsb
pop
mov
mov
nop
mov
push
sahf
pop
push
nop
pop
repnz
sbb
jns
xchg
test
in
int
fnstcw
fildll
push
mov
js
lods
jo
pop
movsl
stos
sbb
pushf
adc
sarb
pop
add
mov
ljmp
ja
aas
jae
xlat
jmp
inc
mov
or
mov
jno
lcall
pusha
jecxz
inc
leave
push
xchg
xor
bswap
pop
lods
pop
cmp
cmp
mov
inc
xlat
xchg
lods
cmp
test
push
push
gs
push
cs
daa
pusha
cmp
in
imul
mov
daa
push
add
cmpsl
pop
dec
out
nop
cmp
cmpsb
insl
ds
rcrb
in
mov
stc
mov
insb
nop
inc
inc
jle
cmc
ror
sbb
xchg
out
fsubrp
inc
shl
mov
xchg
jl
out
out
lahf
jge
bound
sub
jmp
aad
test
insb
jb
fnstsw
push
and
fcoms
inc
scas
add
fisubrl
inc
push
adc
mov
jp
push
lcall
add
cld
push
scas
fnstsw
push
shrb
aad
lea
inc
pusha
pop
push
xor
mov
xchg
ret
mov
pop
push
lods
adc
aaa
icebp
cmpsl
imul
ds
loop
pushf
dec
out
addr16
mov
add
pop
lea
xchg
and
fidivs
inc
pop
aaa
or
dec
mov
sub
xlat
outsb
inc
mov
cmc
cmp
mov
cld
fldl
and
and
out
cmp
xchg
insb
jb
lds
sub
mov
loopne
jno
dec
mov
daa
ret
in
lahf
rcl
call
lock
jge
and
adc
imul
xchg
js
int3
movsb
push
lds
pop
mov
pop
pushf
cmp
pop
xor
pop
outsl
rorl
loope
jle,pn
sub
or
cwtl
loop
insb
add
fdivl
popa
jmp
gs
cli
xchg
jne
xchg
jbe
mov
decb
sub
out
fldcw
cmp
dec
int
cmp
bound
jnp
or
xchg
sbbl
jo
in
movsl
push
mov
loop
and
cli
fsubrp
pop
out
push
jl
enter
je
shrb
xchg
insl
add
jb
mov
popa
mov
jbe
stos
or
mov
fwait
push
jns
aas
xchg
pop
dec
push
mov
imul
cmp
mov
lods
dec
dec
sbb
jle
mov
pop
fs
std
movsl
cmp
sti
dec
xchg
stos
mov
inc
fdivrl
rcl
cmpsb
dec
arpl
arpl
je
mov
sub
sti
pop
mov
sbb
insl
cs
sti
dec
es
adc
dec
fcoms
clc
or
popa
jg
sub
or
pop
mov
inc
hlt
mov
mov
popf
sub
mov
push
popf
mov
xchg
xchg
dec
filds
adc
sub
mov
sub
mov
or
ret
xor
push
push
cwtl
pop
aaa
mov
mov
enter
fmuls
stos
mov
and
sub
icebp
mov
lret
lods
xchg
pop
mov
sub
xor
adc
aam
loopne
jmp
inc
mov
loop
push
adc
loop
and
mov
add
inc
xchg
or
xchg
mov
aam
dec
mov
les
jle
cmp
pop
fwait
xor
xor
negl
sarl
xor
pop
pop
mov
aaa
sub
test
jns
inc
loope
xchg
mov
dec
test
sub
vunpcklps
scas
cmp
lcall
inc
cmp
jg
adc
popa
ret
xor
push
gs
pop
cltd
push
pop
ret
das
mov
out
sub
dec
jno
jecxz
jo
mov
lods
jp
xchg
mov
or
insb
push
cs
push
xchg
test
gs
cs
pop
movsl
lahf
and
sub
addr16
sahf
or
mov
test
fldenv
ficoml
add
fiadds
repz
lret
ja
jb
and
xorl
or
scas
shll
fldt
jae
mov
lods
push
call
stos
sub
imulb
adc
es
das
pop
mov
mov
and
fcmovu
aaa
loopne
sub
lock
ds
out
cmp
or
push
js
pop
and
sub
xchg
testb
cmp
lahf
sbb
mov
jecxz
xlat
ljmp
out
jo
pusha
mov
jbe
imul
call
scas
out
xchg
cmp
int3
mov
jmp
pop
mov
mov
notl
outsl
int
lret
push
inc
fmul
imul
mov
pushf
popa
add
test
in
mov
pushf
cmp
es
mov
aad
jge
sub
scas
sub
hlt
adc
imul
mov
cwtl
test
or
in
push
fs
addr16
dec
pop
cmp
and
loope
cwtl
mov
push
or
cmp
and
pop
in
mov
cmp
pop
xchg
fimuls
sarl
lods
fdivl
sbb
mov
jne
adc
rolb
in
jg
das
fsubs
lea
aas
vsqrtps
pop
shl
push
test
iret
shll
lret
fnsave
mov
mov
adc
xchg
adc
jne
std
jo
pop
sub
dec
test
dec
loop
out
mov
sti
xchg
and
mov
sbb
cmpsb
mov
jns
leave
cltd
insb
jbe
add
sub
jns
sbb
cmp
in
pop
or
aaa
dec
sbb
cmp
stos
xchg
and
inc
insb
mov
das
push
lods
inc
push
aam
xor
orl
cmc
push
xchg
je
xor
ret
and
mov
addr16
xlat
les
pop
mov
sbb
jle
stc
es
jae
inc
sbb
mov
fsubs
pop
call
adc
cmpsl
pop
sahf
and
in
push
pop
inc
xlat
mov
mulb
and
add
lods
mov
xchg
sbb
lea
shr
or
scas
mov
fdivrl
jb
inc
imul
xchg
mov
mov
mov
or
or
ja
mov
adc
sub
fdivrl
push
cwtl
add
and
fnsetpm(287
dec
rorb
and
cmp
imul
sahf
push
mov
jp
fs
mov
add
fs
xor
lahf
call
push
sub
lret
and
and
xchg
push
cmp
mov
test
sbbl
popf
pop
xchg
sub
cmp
icebp
lods
jo
and
int3
push
fsts
push
dec
negb
jmp
out
xorl
or
scas
xchg
add
into
lea
push
xor
fidivrs
stos
subl
sarb
out
enter
mov
mov
adc
mov
add
add
sub
lret
mov
pop
ds
test
andb
jmp
test
pushf
lea
pushl
jmp
add
mov
add
xchg
popf
pop
fwait
inc
cmp
lcall
data16
std
gs
shlb
fidivs
xchg
scas
cmp
dec
loope
inc
out
push
dec
inc
push
or
lret
and
cltd
sub
lret
adc
lods
xchg
cmpsl
fimuls
in
std
daa
inc
jno
in
ret
cld
ja
psadbw
fcoml
xchg
ds
mov
mov
test
imul
les
push
xlat
mov
fidivrl
cmp
ss
ret
xor
mov
movl
cli
lods
or
psllw
out
popa
loopne
xchg
xchg
adcb
test
out
xor
mov
mov
mov
add
sahf
popf
clc
add
xor
gs
sar
es
cmp
mov
dec
aam
mov
pop
divb
mov
xchg
inc
out
insl
addl
rep
add
push
bndstx
mov
fldenv
jb
adc
sbb
mov
in
notb
mov
ljmp
mov
mov
int
scas
cmp
push
jle
test
dec
mov
and
lea
out
jo
add
stos
and
xchg
jge
ss
stos
adc
aaa
xor
jno
jle
or
dec
xor
popa
mov
inc
out
xchg
gs
out
push
dec
inc
movsl
and
jg
mov
aas
mov
xor
cltd
test
cld
xchg
enter
and
dec
cmc
mov
inc
add
popa
push
hlt
lret
dec
xchg
jmp
shlb
aam
daa
inc
pop
dec
push
xchg
stos
sbb
xchg
fsubrl
push
sbb
push
hlt
and
arpl
xlat
xchg
inc
push
out
mov
ficompl
clc
test
cmp
add
or
xor
dec
inc
pop
fistpl
xchg
ss
cltd
not
shrb
fisubrl
sbb
jb
repz
call
adc
popa
lret
sbb
mov
cmp
sbb
jmp
cmpsl
cmp
loop
add
xor
and
jbe
inc
fcompl
test
adc
xor
mov
popa
jae
push
pusha
jg
dec
shrl
rep
call
aam
in
mov
sub
andb
inc
test
and
add
jge
das
mov
push
inc
mov
loop
jle
or
lds
cli
popf
push
or
xchg
cld
pop
xchg
imul
inc
xor
fisubs
imul
faddl
sbb
outsl
cmp
cmp
fcoms
cmp
push
decb
adc
push
repnz
mov
popfw
adc
ficoml
jg
divb
lret
in
xchg
pop
xor
out
xchg
bound
pop
xor
inc
inc
cmp
or
es
xor
leave
xchg
in
cmp
cmpsb
clc
sbbl
ljmp
pusha
push
out
pop
add
fstl
xor
fs
pop
inc
idivl
jg
mov
pop
outsb
call
leave
add
xchg
mov
leave
out
out
sbb
add
add
int
mov
fcomps
sub
sahf
nop
sbb
xlat
inc
add
sbb
loope
pop
pop
iret
scas
popf
sbb
mov
pop
js
cmp
pop
adc
aad
mov
inc
push
and
and
js
repnz
mov
loopne
pusha
popa
add
mov
jge
mov
lret
sub
xchg
lcall
pop
stc
lea
cmp
add
jo
mov
sub
adc
mulb
das
movb
sub
fs
jecxz
aam
clc
cmpsl
adc
out
push
mov
mov
mov
jnp
ret
mov
cmc
rolb
rcrb
and
xlat
mov
pop
outsb
lock
cmc
stos
and
pop
cmc
push
push
adc
jnp
push
lret
movsb
pop
pop
pop
jno
mov
pop
jecxz
cmpsb
repnz
ja
cmp
fsts
mov
cld
mov
data16
adc
xchg
pop
adc
pop
out
push
sbb
mov
jp
add
addr16
adc
pushf
popl
std
idivl
or
push
in
sub
lea
mov
pop
mov
xor
cmp
or
loop
ds
mov
pop
in
mov
aad
int
lds
pop
pushf
mov
ljmp
scas
push
out
xchg
insb
mov
sbb
scas
push
inc
cli
and
add
inc
sub
or
xchg
jnp
repnz
push
add
fs
push
clc
sub
jle
push
jp
ret
mov
cmp
sbb
outsb
gs
pop
fwait
add
and
add
outsb
mov
add
adc
enter
mov
xor
dec
adc
mov
test
lret
cltd
call
movsb
pop
lcall
cmpsb
sbb
sub
cltd
in
subb
add
insb
shrl
test
jnp
push
add
roll
out
stos
cmp
xor
stos
pop
sub
push
sbb
jo
fwait
in
dec
fildl
xchg
sbb
ds
xchg
repz
test
dec
fistl
xchg
pop
and
imul
out
popa
mov
flds
pop
push
fistps
push
cmc
xchg
mov
push
bound
test
mov
mov
push
in
add
aas
sarl
mov
cmpsl
xchg
push
mov
cmp
lds
imulb
test
mov
inc
push
call
adc
cli
pop
std
xchg
mov
sbb
sahf
lock
pusha
stos
stos
jp
pop
in
call
dec
add
stos
ja
dec
add
pop
jg
cmp
dec
pop
cld
dec
jbe
outsb
mov
add
sub
jmp
lea
shl
jne
pop
push
loop
add
sbb
mov
xor
pop
add
inc
lret
in
dec
mov
mov
in
inc
mov
cs
jmp
or
lea
pusha
jp
push
adc
and
and
bound
ja
dec
out
pop
lock
xchg
insb
lods
cmc
mov
ret
push
repz
repnz
fstps
jmp
or
outsb
nop
daa
pusha
pop
sub
mov
jge
cmp
inc
mov
xchg
push
in
mov
pop
sbb
aaa
push
dec
roll
testb
jnp
data16
jns
aam
scas
jns
or
leave
inc
movsl
xchg
addr16
sub
imul
and
enter
or
sbb
jl
and
sbb
imul
cmpsb
call
test
add
lds
sub
mov
add
das
loop
xor
lds
mov
push
ja
fnsave
pop
cmp
xchg
jmp
dec
dec
dec
loope
mov
je
xchg
iret
mov
xor
fs
pop
out
insb
sahf
jg
loop
fmul
lret
popa
pushf
jno
into
andl
sar
gs
pop
insl
cld
xor
cmp
xchg
rol
jns
cmp
data16
ljmp
aam
testb
insb
lret
lcall
and
sarl
sbb
popa
int3
lds
cmpb
mov
lcall
in
xchg
pop
insl
xchg
sub
cwtl
mov
mov
je,pt
pop
xor
in
mov
add
xor
arpl
loopne
and
in
test
lock
pop
fistl
sahf
js
xorb
fsts
pop
xor
int3
push
cltd
xor
bound
fs
in
pop
popa
dec
repz
std
push
decl
jbe
jl
add
test
or
xchg
decb
add
aaa
and
jb
jnp
mov
jle
mov
ficompl
dec
mov
pop
repnz
dec
lods
aad
jnp
stos
nop
daa
fisttpll
or
imul
popf
sub
cmpsl
aam
adc
mov
je
lods
fisttps
jbe
mov
icebp
jns
std
jo
test
or
je
hlt
lods
pop
push
subb
lahf
and
mov
push
jmp
jbe
addr16
cmp
aas
je
mov
insb
jae
js
or
inc
repz
shlb
mov
mov
or
int3
ljmp
inc
lods
lds
mov
xchg
jp
insl
mov
sbb
mov
mov
pop
add
loop
push
je
mov
xchg
inc
and
push
ficompl
repnz
dec
adc
mov
orl
fists
insl
mov
jmp
fwait
dec
into
test
add
clc
inc
lods
mov
add
push
test
xchg
out
dec
test
cmp
mov
rcrb
xchg
mov
sbb
pop
xor
in
jecxz
ret
cwtl
xor
push
xchg
mov
mov
lahf
or
es
mov
test
stos
add
pop
xor
pushf
inc
iret
jbe
data16
bound
bound
loopne
fdivrs
ja
add
xor
jge
dec
dec
movsl
rorl
and
sbb
cmpsl
leave
inc
adc
xor
test
cmp
xchg
stos
xor
mov
into
xor
imul
fsubrl
test
test
sbb
cmp
cmp
pop
push
test
mov
and
mov
xorb
push
mov
push
call
sub
mov
xor
sub
mov
loope
out
mov
mov
fnop
repnz
aad
daa
push
repz
ds
ds
dec
fidivl
outsb
inc
pusha
fwait
and
mov
xchg
ret
outsb
sti
lea
xlat
mov
imul
push
icebp
push
lds
aaa
inc
in
mov
jp
int
cmp
inc
lahf
adc
lahf
xor
xchg
sub
add
scas
clc
dec
push
jo
daa
sub
xchg
xor
cli
rcr
cwtl
cmp
mov
push
xchg
cmp
fisubl
das
mov
xchg
lds
mov
out
in
test
pop
mov
js
mov
xor
sub
mov
dec
stc
pop
dec
aas
rcr
jecxz
in
mov
cmp
fildl
push
sahf
stos
aaa
and
shll
jmp
or
das
lock
repz
loop
dec
jp
inc
xor
jo
repnz
iret
data16
rclb
daa
call
lret
outsb
rcr
fnstcw
push
int
jl
loop
rep
rol
insb
adc
jb
ret
cmp
dec
loop
cmp
loop
imul
iret
data16
adc
xor
or
jo
mov
ljmp
jmp
repnz
shll
addr16
mov
nop
jmp
cmpl
or
sub
es
mov
mov
push
mov
int
jo
or
dec
add
addr16
xor
jp
or
inc
xor
lock
or
fs
sbb
jmp
sbb
loop,pt
je
sbb
cld
push
mov
or
mov
jne
test
lods
sbb
and
mov
rorl
pop
jmp
insb
sar
adc
pop
or
sbb
and
std
mov
pop
out
je
imul
mov
or
test
bound
adcb
fisttps
in
rcr
jmp
std
inc
fs
or
int
sbb
inc
fwait
nop
mov
mov
add
mov
mov
dec
pop
out
mov
mov
pop
scas
mov
add
push
push
bnd
cltd
pusha
mov
adc
fmuls
arpl
push
dec
push
mov
sbbb
sbb
pop
cmp
mov
lret
mov
rcll
sub
adc
fwait
lcall
push
fimuls
jmp
sbb
mov
xlat
ret
test
sbb
inc
ret
loop
push
arpl
sub
push
jns
and
je
daa
inc
pop
jb
or
rcrl
jns
add
adc
or
cld
mov
jmp
pop
fisubrl
inc
jle
sub
int
push
jae
or
insl
ficoml
test
fldt
xchg
mov
call
pop
aas
xor
lea
push
inc
fildll
mov
mov
pop
out
pop
cld
or
push
subb
xchg
xchg
add
mov
das
aam
mov
scas
mov
mull
insl
add
sbb
adc
test
mov
fsubrs
jg
mov
scas
test
xor
stos
sbbl
jecxz
push
incb
cli
push
sbbl
jecxz
cli
jno
bound
or
push
push
jne
inc
pop
or
rorb
je
sbb
dec
or
icebp
ficoms
cmp
sbb
mov
dec
add
shll
in
mov
mov
jg
adc
pop
inc
xor
push
adc
xchg
out
cltd
imul
and
add
push
push
fdivl
arpl
shlb
sbb
sbb
fdivl
sub
sbb
fstl
dec
fbstp
incl
cmc
aam
xchg
ret
add
sbb
outsl
mov
pop
mov
aad
lret
stos
loope
pop
in
xor
orb
mov
cs
cmpsb
push
xchg
and
movsb
or
lods
ljmp
insb
div
adc
outsl
push
or
and
popa
adc
push
mul
mov
sub
insb
push
shl
test
imul
imul
inc
clc
aam
dec
dec
xchg
mov
ds
lahf
rclb
scas
inc
test
aaa
push
push
jnp
inc
lods
mov
cmpsb
shrl
lock
scas
sbb
in
filds
into
sbb
mov
mov
push
jg
sbb
mov
xor
xor
insb
dec
adc
push
xchg
fbstp
adc
mov
jge
xorl
sbb
xor
mov
mov
and
lcall
inc
mov
ret
mov
fsubs
movsl
out
push
lods
jg
add
hlt
test
mov
inc
xchg
ss
addr16
nop
lret
jne
sarb
syscall
cmp
test
cmp
ret
xchg
gs
test
mov
sbb
mov
adc
mov
cltd
cmp
sarl
xchg
insb
in
mov
add
nop
imul
pop
les
or
std
jbe
push
addr16
test
or
sub
push
std
mov
push
sarl
aam
push
loop
pushf
lret
sbb
lret
lea
test
xchg
sub
fisttpll
test
push
sub
int3
sub
adc
mov
and
dec
pop
mov
nop
das
pop
cmc
lahf
pop
mov
cmp
hlt
popf
jae
jl
sbb
push
stos
add
int3
lret
xor
dec
inc
mov
mov
mov
mov
mov
mov
insb
int
les
inc
pop
pop
mov
rclb
mov
shll
rclb
in
ljmp
dec
push
sarb
fwait
or
call
repnz
or
sbb
nop
xchg
rcrl
or
mov
jg
pusha
mov
sub
inc
addr16
arpl
notb
push
mov
cltd
jbe
jmp
adc
lahf
jge
pushf
scas
jnp
xor
lock
inc
xchg
repz
and
fidivl
shlb
mov
fnstenv
fisubl
push
nop
and
inc
or
mov
xchg
popa
aaa
and
xchg
add
int
and
xchg
push
pop
mov
je
jns
aaa
pop
xor
jbe,pn
pop
cmp
push
mov
and
push
insl
sub
leave
dec
or
cs
pop
lds
pop
cmp
leave
dec
es
dec
and
xchg
xchg
push
sbb
call
sub
ss
lods
push
das
std
cltd
in
xor
rclw
popf
add
mov
clc
mov
jb
insb
pop
mov
xor
jbe
cmc
lds
inc
xchg
in
js
mov
sub
or
sub
cmpsl
dec
jl
xor
or
or
adc
ss
daa
xchg
cmp
incl
push
mov
jb
pushf
scas
mov
push
mov
pushf
daa
dec
out
movsb
adc
mov
jp
lock
rolb
mov
shll
test
test
mov
aaa
into
add
and
insb
daa
pop
imulb
rorl
stc
mov
in
aas
adc
dec
jecxz
aas
mov
jl
in
xchg
fldl
cmpsb
sub
mov
mov
or
mov
fidivrs
dec
push
sub
push
hlt
push
xchg
adc
adc
sbb
cmp
mov
fsub
movsb
or
iret
data16
and
lea
gs
loope
jp
sbb
andb
cltd
repz
dec
mov
mov
ficomps
shrb
mov
divb
nop
xlat
add
xchg
enter
and
cmp
sarb
fistpl
lret
ret
lcall
jbe
mov
sbb
test
scas
lea
sbb
mov
movsb
lea
dec
popa
scas
sub
xor
add
inc
sbb
insl
jge
pop
in
vmwrite
pop
popf
and
vmread
fsubl
push
ss
mov
insb
aaa
daa
push
imul
xor
sub
inc
sbbb
jecxz
pop
jno
mov
scas
aas
fwait
sub
xchg
sahf
add
xchg
dec
jb
std
insl
out
mov
int3
pushf
pop
mov
cmp
or
jmp
popf
sbb
cmpsb
out
in
in
lds
inc
inc
push
aad
push
popa
iret
add
out
inc
mov
rcr
nop
dec
mov
movsl
mov
mov
adc
aas
push
shll
xchg
clc
test
sub
std
mov
icebp
dec
out
adc
jb
andl
xor
xor
xor
xchg
sti
xchg
les
fwait
jp
cmpl
push
lret
push
dec
out
int
mov
ret
dec
and
int
jg
outsb
cltd
xor
mov
data16
inc
ds
mov
pop
outsb
lret
movsb
scas
mov
xchg
dec
inc
gs
mov
jb
rclb
loope
xchg
jne
int3
dec
jecxz
jb
shll
call
lds
xor
pop
int
mov
movsl
fldenv
xor
arpl
stos
jmp
xorl
adc
sub
mov
sbbl
sarl
test
mov
mov
mov
enter
stc
or
fucomip
iret
and
shl
inc
jl
jo
fisttpll
xchg
mov
jae
inc
dec
sub
jo
out
push
cmp
sbb
sbb
dec
xor
cmp
cmp
fstps
seto
mov
incl
xrelease
aaa
dec
lods
and
adc
or
cmc
adc
or
mov
mov
pop
mov
xor
imul
popa
std
jbe
stos
sti
shll
push
push
pusha
xchg
pop
mov
or
andb
cmp
test
mov
push
pop
pop
add
nop
inc
dec
xor
adcb
add
test
add
push
inc
pusha
clc
cmpsl
mov
pop
test
fmuls
arpl
pop
mov
jbe
pop
pop
push
xchg
pop
sub
or
nop
pop
mov
rclb
clc
xchg
cmp
in
sbb
cltd
inc
adc
adc
and
cmp
xchg
adc
je
and
scas
nop
insl
push
inc
js
add
test
xlat
add
push
mov
scas
inc
push
subb
cmpsb
aas
int3
dec
jo
test
xor
addr16
dec
push
jae
stos
jae
cs
adc
ss
bound
aas
push
or
inc
mov
and
xchg
adc
add
cwtl
adc
ja
pop
mov
sbb
sarb
pop
pop
push
out
dec
in
sub
fadd
testl
aas
pop
and
cmp
pop
add
xor
out
repz
lods
test
in
into
dec
mov
sub
popf
mov
add
or
sub
adc
xor
repz
inc
lods
icebp
clc
std
mov
pop
push
int
mov
cmc
shrl
fbstp
cmpsl
je
jae
cmp
mov
arpl
jecxz
cmp
dec
rorl
mov
xor
push
addr16
pop
mov
sbb
push
cld
lcall
stc
pop
fistl
ds
xor
rcll
push
push
stos
xchg
iret
push
lahf
jo
inc
sub
and
faddp
ja
mov
jmp
das
and
xchg
sbbb
fwait
jge
xlat
repz
scas
dec
cmp
dec
pop
out
jns
push
and
push
inc
sahf
sbbb
call
sahf
inc
push
out
data16
lea
stos
movsb
mov
das
jge
pop
test
scas
push
int3
mov
in
and
dec
and
ret
inc
push
sbb
jns
xor
dec
fs
fs
or
fstl
mov
jge
test
push
adc
jb
test
std
scas
cmpsb
lock
test
or
mov
mov
inc
sbb
popa
cmp
lret
xlat
inc
test
sbb
cmp
movsb
push
outsl
testl
jb
out
setle
adc
mov
adc
lahf
push
shlb
js
fistpll
insb
inc
leave
mov
inc
insl
cmp
stos
leave
jns
jo
push
mov
mov
push
cs
ss
jp
mov
adc
bound
lds
repz
icebp
jge
lods
xchg
roll
fwait
cmpsl
bound
in
pusha
hlt
shl
jge
or
in
jnp
data16
jbe
add
in
xor
out
test
sbb
xchg
js,pt
outsl
sbb
mov
or
and
stc
mov
imul
lcall
xchg
loop
fstpt
add
dec
sub
jnp
mov
cltd
inc
ret
xorl
xor
sbb
loop
insl
negl
imul
les
inc
jns
shlb
sbb
clc
sahf
xchg
adc
mov
jecxz
sbb
or
push
mov
and
fidivl
addb
rcrl
dec
and
xchg
dec
dec
dec
sub
adcl
nop
scas
and
xchg
jno
das
shlb
xchg
mov
push
rcrb
mov
fcmovb
rorb
dec
jg
nop
push
scas
aam
lahf
sub
mov
mov
sbbb
nop
jb
mov
or
ds
jge
sbb
call
or
fidivrs
lcall
xchg
add
sub
jno
lds
push
inc
imul
sub
cmp
mov
or
shrb
cmc
push
imul
lret
xorb
fiadds
mov
lea
out
mov
add
cli
pop
clc
sbbl
cmp
ja
les
mov
popf
rep
adc
jns
cmc
mov
xor
mov
fdivs
cmp
in
std
push
leave
ss
add
xchg
mov
sbb
push
test
and
xchg
test
inc
fwait
in
mov
push
pushf
push
sub
mov
imul
mov
push
push
stc
inc
insb
aas
sbb
jnp
add
add
inc
leave
sbb
or
inc
stos
xlat
cmpb
dec
movsb
inc
pop
dec
or
bnd
xchg
lock
insb
push
mov
sbb
sub
fidivl
enter
sbb
jbe
sub
or
jle
cmpsl
js
pop
cltd
mov
out
xor
rclb
icebp
mov
ja
lods
sbb
outsl
add
leave
mov
sahf
push
outsl
dec
cmp
ljmp
xchg
add
sarb
iret
int3
outsl
daa
int3
clc
bndstx
or
pop
mov
dec
movsb
sbb
loop
jecxz
add
dec
in
sahf
adc
mov
imul
hlt
inc
test
adc
xchg
out
mov
loope
push
cs
cwtl
insb
leave
push
pop
or
mov
jge
jns
cmpsl
pop
lret
and
repz
bound
sub
mov
jg
xchg
movsl
and
mov
dec
loop
in
sarl
fistps
mov
lahf
testl
arpl
lods
ja
xor
into
sub
jbe
iret
mov
cmc
cmpsb
jb
jle
addr16
jnp
pop
and
test
and
dec
mov
xor
mov
test
out
sti
push
pop
jne
mov
xchg
adc
mov
cmp
adc
sbb
into
xor
cmp
shl
shrb
test
and
sub
stos
xchg
imul
mov
mov
push
and
filds
lret
std
scas
int3
sbb
std
mov
add
incb
loope
fists
lods
fsubrs
push
pop
repz
or
mov
mov
aaa
jno
lods
ss
push
push
or
lret
mov
add
ds
inc
pop
test
les
mov
cmc
sbbl
dec
dec
fcoms
out
xchg
int3
or
push
cli
pushf
xchg
sbb
pop
mov
dec
add
in
inc
cmp
mov
push
jl
mov
cmp
loope
add
jecxz
lahf
filds
xor
cmp
lret
test
add
xchg
outsb
aad
or
push
dec
push
data16
xchg
inc
in
adc
les
mov
dec
jns
fsub
cli
or
into
and
lds
adc
out
inc
loop
jmp
xor
ficomps
push
and
daa
stos
xor
ds
insb
dec
pop
pop
lret
mov
mov
xchg
call
and
pop
sbb
ret
imul
adc
mov
mov
aas
lock
dec
shll
sub
adc
sub
std
xchg
orb
cmp
fld
ficomps
or
je
pop
loop
lods
call
rep
jbe
xlat
into
inc
addr16
test
adc
jo
xor
outsl
inc
jae
in
js
sbb
push
mov
xchg
lea
cmpsl
sahf
ljmp
jo
ret
xchg
mov
pushf
sbb
repz
stos
xchg
cld
ret
fistpll
push
inc
mov
stos
inc
mov
jb
xlat
push
xchg
cltd
mov
inc
pop
mov
in
and
sbb
inc
insb
xorl
dec
loopne
and
pop
lahf
stos
inc
shrb
mov
orl
mov
movsl
aas
jno
ja
xor
lret
roll
xor
hlt
inc
mov
shrb
or
mov
fistpll
xor
pop
mov
jp
bound
in
sub
xchg
sahf
fwait
or
pop
sbbb
fnstenv
clc
jns
adc
mov
jbe
aaa
das
ficoms
fdivr
cmp
test
sbb
push
lods
xchg
sub
and
in
push
pop
xor
jnp
imul
pop
sbb
aas
inc
fdivrs
pushf
into
js
das
mov
add
xchg
xchg
push
cltd
repnz
daa
xchg
xor
jp
push
xchg
movsl
in
call
scas
das
push
or
test
fs
leave
inc
inc
lods
inc
cs
repnz
mov
mov
stc
mov
fcomip
out
sbb
out
pop
iret
sbb
test
out
test
jb
imull
xchg
popa
sbb
mov
pop
or
xchg
dec
arpl
loopne
push
add
repnz
rol
lods
jae
mov
stos
cmp
out
sarl
mov
and
outsb
or
insl
push
sti
fucomip
roll
cmp
sbb
ja
test
mov
cld
in
jmp
movlps
inc
dec
in
mov
test
sbb
jg
in
jnp
popf
gs
aam
push
lret
or
arpl
sbb
push
cmp
jns
jmp
fcmove
inc
andl
in
sti
pop
xchg
pop
inc
sbb
jns
rcrb
mov
sbb
and
out
fnstenv
or
daa
mov
orb
jae
loopne
icebp
push
push
arpl
addr16
or
xchg
ds
mov
mov
inc
jb
negl
test
jno
testl
lea
fisubs
inc
and
cltd
push
aad
or
cmpb
mov
jmp
and
push
das
addr16
insl
data16
cwtl
sub
insl
jnp
ds
push
cmp
insb
dec
dec
jno
dec
fidivrs
and
xchg
inc
jecxz
xor
sti
sahf
popa
out
push
aam
sub
repz
push
fimuls
mov
sub
aam
or
xor
xor
inc
pop
xchg
inc
xchg
jae
fsubrs
icebp
ficoms
js
and
fisubrs
sbb
or
mov
ret
cmp
stos
cld
int
mov
iret
daa
aad
outsl
cli
ret
ret
je
subl
loope
pop
fcomip
insb
sbb
mov
enter
pop
out
scas
xor
add
cwtl
ds
mov
arpl
xchg
rcrb
sbbb
loopne
inc
sbb
aas
int
std
out
popa
stos
xchg
in
test
lret
mov
scas
push
pop
ljmp
and
ret
mov
sbb
scas
pop
es
cmovs
mov
das
push
stos
cmp
jecxz
pop
xor
test
mov
mov
cmpps
mov
mov
inc
rorl
decl
in
lcall
xchg
out
popf
fildl
sub
mov
jae
mov
call
notl
imul
popf
aaa
jle
movsl
mov
and
aas
lcall
cmp
push
inc
pop
mov
mov
jp
dec
lock
xchg
cltd
je
pop
mov
outsb
mov
cmc
adc
fimuls
sbbb
sbb
pop
inc
sbb
cmpsl
andb
push
jno
movsl
mov
pop
insl
repz
sbb
repz
rcll
scas
lahf
loopne
jns
shlb
icebp
cmp
adc
fwait
push
je
push
fwait
xor
mov
gs
ja
mov
in
jp
push
sbbl
cmpsb
ret
lahf
mov
in
adcb
inc
sarb
leave
pop
cwtl
in
mov
shll
js
mov
jae
test
sti
pop
std
outsb
mov
rclb
cmp
mov
push
mov
shrl
fisttpll
movsl
add
ret
pop
fnstenv
jecxz
dec
stc
inc
push
xorb
insb
js
mov
push
cwtl
push
inc
sbb
inc
fwait
repnz
and
add
sbb
inc
jo
movsb
pop
mov
or
xchg
ljmp
out
cmp
rcrb
pop
out
out
mov
imul
pop
jo
add
ss
shl
mov
adc
add
fwait
cmp
inc
out
andb
mov
mov
sub
nop
test
clc
mov
or
cmp
jae
adc
imul
loop
jg
cld
mov
icebp
lahf
ljmp
adc
mov
ljmp
sub
sub
scas
add
sti
in
inc
mov
cmp
pop
ss
or
cmp
lret
adc
cmp
inc
mov
xchg
xor
xor
inc
jne
sbb
xchg
xchg
cmpsl
sbb
and
or
xlat
mov
push
inc
and
dec
rol
out
xchg
int3
or
dec
ret
repnz
stc
insb
dec
inc
insb
int3
jbe
add
inc
fisubrl
lret
xchg
sub
dec
fiadds
cmpsb
popf
xor
lods
hlt
popl
inc
mov
popf
fwait
sub
push
roll
add
in
outsl
adc
cltd
pop
and
and
and
movsb
shlb
das
scas
inc
in
loop
test
int
push
and
mov
jne
insb
jl
lahf
inc
pop
in
scas
inc
cmp
test
push
int
adcl
enter
jl
lcall
call
sbb
out
lock
stos
and
jo
sub
cmp
ror
mov
dec
pusha
cmp
push
mov
jns
lret
into
sbb
loop
mov
sbb
cmpsl
mov
and
cmp
xchg
fwait
arpl
mov
cmpsl
sbb
cmp
jnp
out
movsl
loopne,pt
fisubs
shl
mov
mov
lods
gs
pusha
insl
lods
insb
or
or
repz
push
jmp
xchg
xchg
test
mov
mov
pop
jmp
adc
imul
mov
jmp
out
add
fldl2t
cmpsb
xchg
dec
pop
in
xor
mov
sbb
push
insb
loopne
cltd
fildl
jecxz
pop
mov
in
clc
dec
or
mov
jno
mov
sbb
xchg
gs
das
cltd
shrb
xor
shlb
xlat
jnp
sub
cld
push
mov
fs
js
xlat
sbb
and
jp
ds
push
fdivs
shl
cli
jecxz
test
mov
loope
rcrl
inc
mov
pop
push
ljmp
mov
add
mov
lcall
xlat
pusha
cmc
xchg
xchg
clc
dec
xlat
sub
scas
push
sbb
imul
jge
pusha
and
mov
int3
stc
test
xlat
jg
rcrl
push
dec
jmp
xchg
push
sbb
push
or
pop
mov
and
push
nop
inc
dec
pop
jae
inc
mov
mov
fidivrl
or
xor
cs
lret
or
lahf
sub
cmp
clc
dec
es
push
adc
imul
popf
jmp
pop
cmp
dec
or
out
roll
imul
mov
lea
js
icebp
fbstp
push
add
inc
pop
jbe
mov
mov
decb
xor
es
adc
test
jns
in
pop
cmp
cmp
push
mov
or
mov
cmpsb
dec
mov
inc
add
sub
rcrl
icebp
insb
xchg
ret
repz
divb
imul
jb
jne
push
mov
loopne
repz
sbb
loope
and
test
jmp
mov
rol
bound
imul
dec
push
sub
insl
cmp
inc
push
shl
push
jle
xchg
fsubrs
out
add
lods
mulb
pop
js
insl
test
lods
pop
idivb
fdivrl
hlt
lahf
in
pop
sbb
outsl
fdivl
fs
ds
mov
das
idivb
popa
xor
shl
stos
aam
fstl
fldt
addr16
pop
lods
mov
mov
pusha
dec
mov
push
divb
mov
push
fisubl
int
cmp
fs
mov
xor
movsb
jecxz
push
mov
popf
in
adc
movb
jno
out
mov
out
popa
lret
out
push
test
inc
sbb
xchg
inc
and
into
enter
sbb
bound
mov
repz
mov
sub
into
movb
arpl
leave
cs
in
test
lds
inc
fadds
movsl
pop
jbe
push
xchg
cs
push
add
dec
ret
fcomip
pop
insb
js
imul
inc
cmp
sbb
ds
or
pushf
shll
adc
and
mull
push
rorl
xorb
dec
pop
sub
mov
sbb
mov
sub
xor
pop
mov
subb
pop
in
cmp
into
loope
insl
and
pop
je
inc
scas
inc
je
xlat
jb
and
in
xor
push
je
scas
outsb
gs
dec
pop
jge
in
test
or
daa
inc
arpl
int
sti
sahf
jbe
inc
sbb
icebp
inc
cmpsl
out
add
inc
ficompl
mov
or
fs
mov
xlat
popf
xor
enter
daa
mov
xorb
enter
sub
stc
out
fidivs
imul
std
or
xchg
rorl
mov
push
aaa
and
ret
test
or
es
movsb
dec
in
mov
int3
xchg
pcmpeqd
fwait
cld
scas
or
mov
pusha
sub
ficompl
fidivrs
or
xchg
dec
and
out
stc
inc
pushf
cli
jno
ja
ret
jbe
rcll
sub
xchg
cld
fistps
out
loopne
mov
les
mov
in
mov
xchg
add
aas
inc
jnp
xchg
mov
in
iret
and
jbe
stos
mov
cli
cs
xchg
and
sbbl
adc
mov
stos
sbb
push
push
or
mov
mov
jae
dec
mov
clc
mov
scas
pushf
mov
pop
add
jbe
sahf
repnz
mov
sbb
dec
adc
cs
push
repnz
add
js
and
jmp
pop
fistps
icebp
shlb
inc
push
scas
add
mov
xchg
sbb
mov
cmp
insb
inc
call
fnstsw
mov
imul
divl
cmp
adc
popf
jns
mov
push
ja
fsubl
adc
jnp
addl
sbbb
and
and
out
lods
pushf
out
lret
push
loop
out
repnz
pop
adcb
xor
out
ret
adc
push
and
adc
inc
out
cmp
pop
jbe
das
pop
lods
and
jbe
stos
psraw
test
sub
and
mov
out
inc
inc
mov
jnp
jne
mov
std
cmp
test
sbb
imul
fistps
cwtl
sbb
call
and
mov
hlt
mov
outsl
add
and
cld
ret
outsb
and
pop
orb
lcall
mov
cltd
cmp
outsl
in
arpl
cmp
aad
repz
pop
sysenter
lret
cld
push
fidivrl
ret
fstpt
scas
and
adc
inc
mov
mov
push
xchg
repnz
mov
dec
lret
lock
jo
sbb
sub
fxch
out
in
mov
pop
out
xor
sarl
add
sub
xor
xchg
in
js
push
xor
xchg
xchg
fsubr
aas
aas
dec
loopne
push
push
jo
imulb
lods
inc
sbbl
xchg
add
jnp
xchg
mov
popf
insl
loopne
mov
cmp
push
movsbl
pop
dec
ljmp
jno
pop
push
mov
sub
mov
mov
push
cmp
out
inc
icebp
sub
dec
lods
mov
add
dec
mov
lret
icebp
dec
scas
movsl
sahf
scas
cmpsb
testl
and
pop
fnstenv
rcll
mov
pop
mov
out
stc
inc
add
nop
repz
lret
dec
pop
jl
jp
test
inc
pop
negb
xchg
sub
cmp
out
pop
daa
cs
xor
pop
mov
sarl
or
sbb
xchg
dec
nop
daa
jl
sub
cltd
push
scas
jb
adc
hlt
add
test
loop
adc
xor
hlt
in
lret
movsl
mov
loop
pusha
setp
sbbl
pop
jns
insb
push
rcrl
xchg
dec
jnp
jo
cmpsb
adc
jne
enter
shll
sahf
mov
pop
adc
cltd
std
call
push
inc
sarb
pop
mov
jnp
cmpsb
dec
push
sub
sti
repnz
xchg
and
test
xchg
lds
cmp
xchg
ficomps
sbbl
jno
xchg
in
push
test
jno
jno
scas
sub
fmull
daa
scas
pop
popf
mov
fsubl
mov
cmp
inc
pop
pop
in
xchg
jno
aas
mov
test
and
cld
ljmp
test
ficoml
xchg
mov
fisttpl
push
or
stc
adc
add
xchg
and
or
cmc
enter
pop
icebp
sub
mov
nop
fmul
xor
xchg
aas
push
sahf
add
mov
sbb
rcll
sub
fstl
mov
add
dec
jmp
adc
mov
pop
push
test
pushf
test
mov
mov
call
mov
loop
imul
lcall
in
xorl
or
and
jp
lret
pop
out
cld
ffreep
fcompl
mov
jo
jg
nop
xchg
test
xlat
outsl
arpl
sbb
iret
xor
or
lods
jmp
popf
ja
push
and
dec
ss
in
add
lret
mov
xchg
dec
imul
jbe
inc
stos
stos
pop
aaa
adc
adc
mov
dec
mov
cli
mov
mov
bound
push
and
popa
mov
ljmp
out
and
sub
sub
repz
inc
lret
push
jge
mov
lret
add
mov
inc
lock
iret
pop
invd
enter
mov
pusha
add
pop
mov
pop
and
aam
pop
xor
jmp
push
in
outsb
daa
mov
in
jmp
sbb
cltd
sbb
in
add
adc
pop
xor
mov
daa
mov
dec
in
cli
xchg
repnz
sbb
insb
xchg
rorl
jns
or
xchg
fbstp
xor
fwait
push
out
cmp
mov
fldcw
ljmp
sub
xchg
xor
dec
xchg
push
inc
pop
dec
jae
xor
add
in
inc
loope
xchg
dec
out
sti
lahf
pushl
and
out
inc
add
jnp
scas
cmp
lods
out
stos
ja
or
jg
shld
cltd
sbb
addl
scas
outsb
lret
mov
fst
test
lock
loopne
jp
fcmovnb
adc
cmovge
iret
cmpsb
adc
inc
adc
dec
mov
jne
arpl
sbb
xchg
popf
mov
sub
jg
xor
pop
jecxz
jno
cmp
outsl
jnp
subl
dec
xchg
jbe
mov
out
leave
adc
cmp
out
inc
jno
mov
popa
ljmp
aas
and
pop
rorb
inc
shlb
lret
cld
dec
jb
cmp
es
sub
mov
add
xchg
cwtl
lods
push
std
testb
cld
outsb
add
push
mov
and
sbbl
adc
sub
mov
push
imul
mov
stos
jbe
subb
loopne
mov
cmc
xchg
sbb
mov
cmp
adc
ret
loope
bound
cmc
hlt
add
mov
pop
ret
mov
sahf
mov
pop
pop
stos
call
cmpsb
and
sbb
ret
cmpsb
out
imul
mov
sub
adc
test
iret
push
mov
cmpsb
cwtl
rcr
sbb
ss
sbb
pop
pop
xor
and
mov
stos
mov
xor
aaa
pop
fldenv
sbb
mov
mov
ja
outsb
leave
call
dec
jnp
jl
sub
test
in
jns
push
push
imul
pusha
jg
adc
test
lahf
fxch
sti
pop
adc
es
stos
cmpsl
cmp
std
in
push
movsl
and
aad
cmpsl
ds
pop
inc
lret
jl
add
cli
in
ss
fcmovbe
cs
imul
jns
lcall
sbb
arpl
stos
xlat
jmp
cld
test
xor
pop
popf
sub
mov
pop
inc
push
push
jnp
jmp
fimull
jg
idivb
sub
mov
call
cmp
subl
dec
add
adc
arpl
jns
int3
sti
jl
aad
cwtl
mov
idivb
sub
dec
je
mov
mov
repz
iret
cmp
lods
inc
ja
push
out
and
push
sub
xchg
inc
insl
sub
cmp
gs
and
push
jmp
cwtl
mov
pop
sub
jne
lds
lods
sbb
fisttpll
add
mov
rcll
push
minps
mov
ja
arpl
scas
xchg
cmpsb
scas
jmp
xor
mov
dec
popa
push
adc
imul
mov
push
jg
call
lcall
push
in
call
jecxz
shll
rcrl
push
adc
daa
outsl
xor
pop
xchg
sub
sub
pop
hlt
call
call
bound
fisttpll
push
aas
repnz
cmpl
out
inc
sbb
int3
add
jno
push
cli
pop
pop
clc
aam
mov
or
aaa
mov
ret
xchg
aas
jecxz
bound
out
xchg
sbb
mov
nop
in
mov
add
push
mov
fidivs
push
into
fdivrl
push
adc
les
ret
nop
adc
xor
mov
mov
in
push
call
or
or
sub
jns
roll
add
xor
inc
adc
arpl
cmpsl
adc
ss
and
pushl
std
mov
dec
pop
push
sub
mov
hlt
in
icebp
sub
inc
cmp
push
cmp
imul
sti
or
adc
pop
xor
addr16
pop
xchg
push
test
dec
inc
loope
jb
fsubrl
js
in
dec
mov
xor
xor
andl
fcoms
xchg
xor
mov
cmp
lods
pop
pop
insb
push
lea
out
les
test
lret
stc
loop
xchg
clc
push
push
stc
adc
rcrb
push
mov
mov
sbb
call
jmp
in
dec
movsb
push
mov
lds
stos
push
dec
aaa
addb
dec
jle
out
imul
shlb
insb
cltd
loopne
aas
adc
push
mov
sbb
or
jne
mov
mov
movsl
out
mov
cmpsb
mov
mov
loope
addr16
cltd
sub
push
cmp
pop
sub
ficoml
aam
and
sub
mov
dec
repnz
loop
aam
das
packsswb
pop
pushf
cltd
inc
lret
mov
sbb
cmp
cli
push
pop
pushf
push
cli
mov
in
ja
scas
mov
sbbl
sub
ficoml
leave
sub
mov
xor
xchg
inc
push
jne
sbb
nop
or
mov
mov
inc
call
pop
mov
inc
cmpsb
loope
test
jmp
mov
push
sub
xchg
dec
jne,pn
movsl
rorb
adc
and
xchg
pop
pop
xor
jne
cwtl
push
mov
push
or
pop
cli
push
pop
out
stc
or
out
pop
paddd
test
popa
pop
data16
cmpsb
inc
je
testl
call
xor
outsl
fisttpl
cmpsb
sti
dec
xor
sete
stos
inc
mov
pop
aam
out
out
movsl
cmp
cmp
lret
xchg
and
int3
pop
sub
cmp
dec
jae
sub
mov
loope
pop
mov
les
mov
aas
inc
fnstsw
in
jge
imul
xchg
dec
xor
mov
or
cmp
inc
and
jae
xor
dec
xor
mov
xor
xchg
out
hlt
addr16
les
inc
mov
jge
add
lods
add
push
outsl
not
imulb
fsubrp
sbb
sbb
fnclex
push
sub
jle
mov
xchg
loope
jle
lods
andb
mov
mov
sub
jns
addr16
stos
inc
or
cmp
sub
xlat
insl
dec
mov
inc
jl
or
or
dec
lods
push
movsl
sub
inc
rcrl
subb
inc
fcomps
add
push
push
negl
jmp
out
mov
bswap
ss
repnz
cltd
mov
shl
cmp
les
andl
in
jp
das
dec
loopne
mov
push
hlt
in
outsb
cmp
dec
adc
sbb
add
pop
sub
mov
inc
push
clc
pop
mov
push
fwait
push
lea
mov
mov
shl
in
push
fwait
loop
stc
or
sti
xchg
or
inc
cmpsl
insb
pop
imul
jp
xchg
ficoms
dec
insb
inc
push
sahf
clc
ds
mov
xorb
mov
jns
fs
and
orb
sub
enter
sbb
testb
push
push
lods
inc
add
xor
or
mov
rcrl
dec
fucomip
int
test
mov
add
xchg
test
leave
push
xchg
dec
xlat
pop
mulb
mov
lahf
rolb
mov
mov
hlt
dec
pop
cwtl
sbb
or
xchg
idiv
fdivrl
in
inc
shrl
sbb
not
lods
cmp
lret
notl
fsts
loop
nop
dec
and
repnz
mov
fs
pop
add
in
add
arpl
push
xor
jnp
mov
push
lret
pop
iret
insl
push
lahf
sbbl
jns
dec
aam
cmpsb
sbb
unpcklps
cmp
ss
inc
pushl
or
fadds
inc
pop
push
int3
rcr
xchg
pusha
mov
fwait
cmpsl
lods
call
popf
inc
sbb
mov
jg
shll
xchg
jbe
push
pop
test
paddd
dec
loopne
mov
imul
mov
push
test
out
test
cli
jne
jecxz
mov
cmp
push
xchg
lods
mov
xlat
and
xor
mov
nop
mov
call
jg
loopne
loopne
add
mov
adc
sarl
imul
adc
test
cmp
fsubrs
psubusw
pop
ror
repz
das
pop
cltd
shrb
push
ret
addr16
mov
jge
or
cmc
les
pushf
xor
call
aas
fwait
outsb
pop
jbe
jg
data16
jge
ja
mov
test
pop
push
push
jno
ret
jns
fisubrs
add
mov
outsb
and
fisubrl
addr16
jg
jo
mov
xlat
rcrl
pop
mov
mov
loopne
mov
sub
xchg
in
mov
jnp
mov
out
and
or
ret
sbb
mov
cmpsb
or
pop
movsl
insl
test
shll
inc
addl
cmp
popf
scas
lds
fcmovne
sahf
add
ret
test
repz
and
or
jecxz
sub
into
add
jp
xor
iret
data16
push
xor
ret
je
or
mov
push
outsb
add
sbb
ss
push
jp
lahf
fst
sti
mov
out
loop
jge
insb
add
test
inc
pop
rcrl
imul
daa
fxtract
pop
xchg
imul
xchg
mov
and
mov
xor
and
mov
aam
pop
mov
cld
or
cmpsb
inc
les
lcall
mov
lock
std
mov
mov
inc
stos
scas
std
lcall
push
push
stos
inc
aam
cmpsb
dec
fwait
jno
dec
in
popf
push
imul
xorb
mov
sarl
push
cs
cmpsl
cs
es
fildll
int3
data16
stos
es
mull
mov
jp
mov
bnd
pop
adc
rcl
scas
xchg
arpl
lahf
imul
aam
mov
add
pop
out
nop
ljmp
and
call
mov
or
mov
push
dec
addr16
lods
jo
pop
rcl
sbb
ret
fld
stc
add
shrl
es
cmp
loope
repnz
adcl
jle,pn
mov
movsl
push
add
add
jge
pushf
fwait
outsl
shll
fstpl
pop
push
flds
cs
mov
movsl
leave
mov
imul
sbb
jo
ret
lcall
icebp
shl
push
and
cmp
call
adcl
push
leave
lods
js
mov
loope
popa
iret
idiv
dec
add
jno
xchg
and
pop
repz
leave
xor
mov
jnp
ret
jp
add
add
and
movsl
push
mov
mov
mov
out
shll
xor
call
and
jo
or
adc
push
iret
push
outsb
jl
lock
loop
ja
jge
add
jns
jne
stos
jle
cwtl
sti
arpl
inc
enter
fs
mov
adc
leave
imul
ret
vpunpckhqdq
daa
cmpsb
push
das
mov
scas
cmp
push
out
fwait
pusha
adc
and
push
jl
js
xchg
sahf
loopne
shl
in
pop
mov
mov
loop
xorb
stos
mov
mov
rcr
xor
imul
mov
das
cmp
sub
loope
add
cwtl
fs
push
jnp
aad
incl
ret
cli
push
mov
mov
sbb
add
ja
fs
xchg
lret
sub
push
mov
cmp
jb
cmp
xor
mov
sar
adc
push
mov
sbb
jmp
adc
and
inc
pop
hlt
push
mov
orb
mov
mov
psllq
nop
and
xchg
imul
dec
movsl
sarl
repnz
jecxz
or
and
fucomp
or
out
inc
cmpsl
xchg
sbb
or
xorl
mov
into
dec
cmp
clc
imul
push
mov
add
cli
dec
mov
or
add
in
cwtl
xor
gs
and
test
movsb
mov
ret
xor
or
rcrl
addr16
int
fwait
adc
bound
fdivrp
xchg
push
call
sbb
mov
xchg
ds
cmp
imul
stos
mov
inc
push
sti
test
jnp
divb
mov
mov
and
jo
js
push
lret
xlat
aas
dec
icebp
dec
mov
movsl
dec
jmp
mov
lods
and
pop
arpl
jmp
and
pop
push
clc
test
mov
sbb
lock
inc
cmpsl
in
adc
fwait
cli
mov
sarb
add
cmp
inc
out
xchg
dec
fbld
inc
pop
scas
data16
rcl
sub
push
dec
repz
shrl
fbstp
sbb
adc
fldl
add
mov
sub
xchg
stc
popf
xchg
dec
addr16
sub
jmp
pop
test
push
popf
inc
aam
inc
out
hlt
popf
loop
mov
lock
sti
scas
dec
fnstsw
sbb
lea
filds
stos
xchg
inc
fcompl
mov
pop
xchg
adcl
rorb
mov
es
scas
dec
sub
int
insl
xor
mov
sbb
jl
or
push
pop
mov
xlat
sub
int
pop
sub
xchg
cs
xlat
pop
xor
mov
mov
mov
cwtl
xchg
scas
or
shl
sub
je
pop
test
adc
or
cmp
mov
call
sub
cmp
jp
add
mov
adc
push
lea
add
inc
scas
fdivrl
ljmp
in
inc
add
push
cltd
push
dec
add
sti
notl
stos
add
or
pop
jg
enter
shrl
dec
pop
int3
inc
into
icebp
nop
fsubp
dec
xchg
and
sbb
js
pop
mov
adc
and
sbb
sub
jge
orb
pop
mov
push
shrl
and
xorl
fucomip
fstl
mov
or
cmpsb
add
outsb
adc
sub
pushf
lods
fstpl
jp
sbb
add
push
and
cs
mov
out
rcl
icebp
add
mov
outsl
mov
aam
sbb
loop
lahf
lcall
or
test
adc
push
cmpb
in
dec
mov
das
push
or
mov
rorb
stos
sbb
dec
fdivrs
rcrl
xchg
adc
outsl
pop
mov
cwtl
test
fs
mov
jmp
std
and
pop
sahf
adc
xor
sbb
mov
cld
cmpl
cmp
fcmovb
loop
hlt
dec
or
adc
cmp
lea
movl
test
xchg
pop
xor
jb
ret
mov
jecxz
inc
cwtl
mov
sub
mov
outsl
cs
xchg
mov
sbb
shl
ljmp
dec
popa
clc
sti
gs
dec
dec
cltd
jg
mov
aad
inc
into
arpl
iret
jge
xor
or
sub
rcr
mov
or
lock
inc
pandn
jp
not
nop
mov
movsb
dec
lahf
iret
pop
jp
dec
fdivrl
mov
out
aam
mov
jnp
mov
inc
aad
rcrl
push
cmp
xor
rcrl
or
insl
jnp
cli
sub
add
jns
and
arpl
lods
scas
push
test
push
cmp
fiadds
mov
inc
je
enter
fwait
sti
adc
aaa
into
in
lahf
push
call
or
xchg
mov
add
sbbl
sbb
cmp
mov
data16
pandn
shrb
pop
pop
push
add
shrl
bnd
cmpsb
jecxz
lahf
stos
xor
jnp
lds
jno
pop
lods
mov
or
call
mov
jns
fwait
xchg
mov
mov
pop
xlat
das
jecxz
or
mov
pop
gs
xchg
jbe
int
mov
test
pop
loopne
dec
or
std
movsl
rorb
bound
fsubrs
std
adc
or
shr
jp
push
and
xchg
cwtl
fwait
sbb
push
add
lods
rcr
jbe
mov
pop
out
std
cltd
insb
xor
cmp
cmp
or
icebp
and
and
shll
jb
xchg
xor
push
int
pop
lock
mov
out
mov
lahf
fucomp
in
scas
dec
pushf
mov
adcl
sahf
mov
sahf
arpl
xchg
in
into
in
inc
ret
fidivrs
mov
aam
negl
push
xchg
out
daa
repz
iret
sub
mov
dec
jns
cmp
lahf
mov
push
jno
and
in
out
popa
icebp
sbb
call
push
xchg
xor
dec
decl
xchg
aas
loop
stos
mov
test
jle
lahf
mov
outsb
lock
das
adc
fsubl
inc
enter
adc
xor
in
dec
mov
push
daa
jl
test
dec
adc
cmp
cmp
cltd
mov
jle
xor
outsl
lea
ror
popa
jl
testb
cmp
add
sbb
xchg
leave
mov
sub
push
lea
ds
pop
jno
sub
xor
std
nop
lahf
inc
push
xor
add
sbb
cmp
stos
mov
insb
mov
mov
cmp
mov
mov
jae
loope
xor
and
xchg
dec
inc
clc
adc
in
dec
aas
mov
fstps
popa
popa
push
add
mov
in
or
jne
pop
leave
in
sti
fwait
xor
pop
push
sbb
or
pop
sar
jbe
pop
addr16
mov
xor
hlt
lcall
adc
loop
lock
out
je
fs
cmp
test
and
jne
xchg
sbb
popf
mov
xor
cmp
lods
arpl
lret
sbb
enter
mov
insb
repz
push
lcall
in
stos
in
subl
adc
movsl
dec
cmp
out
sbb
or
sbb
push
adc
mov
inc
les
in
pusha
or
dec
cmp
pop
mov
pop
fcmovu
and
cli
rclb
sbb
cwtl
fildl
lahf
negb
cmp
leave
insl
daa
addr16
mov
or
in
or
lock
or
push
icebp
inc
fwait
sti
sbbb
pop
inc
fdivl
test
mov
pop
arpl
sbb
lods
cmp
rcl
ret
pop
xor
mov
mov
imul
je
mov
or
movb
es
jecxz
aas
icebp
push
sbb
adc
push
test
ja
cmp
mov
ret
adc
dec
or
fidivrl
insl
or
out
cmp
sub
imul
xchg
dec
inc
mov
pop
mov
mov
lahf
mov
mov
lods
bound
pusha
cmp
push
stos
divl
xor
pop
sbb
mov
cmp
stc
lcall
xor
das
or
pop
ss
aad
gs
mov
in
xor
xchg
sub
jg
mov
lss
mov
clc
xchg
jmp
fistl
or
outsb
push
das
jns
lret
lea
ds
add
lea
into
adc
scas
in
jb
jno
neg
xchg
dec
scas
adc
jno
sti
mov
out
sbb
mov
ljmp
sarl
fs
cmp
jno
nop
dec
cwtl
in
andb
fldt
push
mov
jns
stos
out
repnz
sbb
mov
insl
rclb
jecxz
loopne
loopne
or
lahf
int
sub
mov
repnz
loope
cld
dec
aas
sarl
sbb
addb
cli
mov
nop
addr16
adc
movsb
xchg
in
inc
dec
icebp
hlt
lods
lds
jmp
out
cs
jmp
push
in
push
push
or
scas
cmp
cmp
dec
adc
sub
cs
mov
les
adc
xchg
sub
mov
popf
mov
movlps
fcoms
mov
inc
cli
adc
mov
jecxz
mov
int
out
daa
outsl
and
push
jmp
or
jo
and
shlb
pushf
add
out
sbb
add
sti
fwait
inc
pop
adcl
cmp
arpl
cmp
rcl
outsl
sbbl
ficompl
fsubl
jno
iret
arpl
xchg
cmp
out
vaddps
push
mov
push
jle
insb
mov
call
js
mov
test
mov
scas
and
aad
into
push
test
shr
xor
xor
lods
mov
sbb
pop
cltd
ret
daa
into
xor
arpl
push
jns
push
inc
std
lcall
aaa
sbb
mov
leave
cmpsl
lods
ret
adc
mov
addr16
and
mov
jae
out
ficomps
add
bound
sbb
je
les
popf
push
test
or
xor
clc
testb
push
or
lock
jp
es
sub
sub
andb
or
imul
jmp
pushf
jbe
dec
imul
dec
loope
mov
sbb
push
aas
pop
rcr
into
lcall
std
sbb
cmp
or
aas
jns
jo
mov
divb
cld
aaa
outsb
ja
inc
test
xchg
mov
scas
jp
pop
pop
inc
roll
test
push
or
inc
test
fisubrs
lcall
mov
div
inc
sbb
push
daa
ljmp
xor
bound
sbb
movsw
mov
into
pop
pop
pop
push
jecxz
fimuls
inc
loopne
mov
mov
or
mov
lahf
and
and
movsb
sub
popa
ljmp
adc
das
adc
add
mov
sbb
push
imul
mov
pop
roll
in
adc
inc
cs
sub
push
ljmp
insb
dec
add
ljmp
jno
fwait
jp
into
out
mov
popf
mov
mov
popf
cmp
aad
lock
jno
js
testb
stos
add
loopne
jbe
data16
jb
mov
mov
jecxz
xchg
adc
repnz
or
xor
pop
fbstp
xchg
xchg
lods
enter
int
aad
lods
jbe
fmulp
adc
sbb
call
mov
cmp
mov
fcomip
inc
sub
dec
and
or
bound
mov
lds
scas
inc
mov
mov
repz
fwait
inc
mov
adc
ret
xor
fs
cmp
sub
hlt
pop
mov
repnz
idivb
int
xchg
cwtl
push
jnp
push
call
icebp
lahf
sahf
clc
rclb
call
jmp
repnz
sbb
xor
fnstenv
mov
inc
repnz
push
or
sub
fidivl
inc
push
mov
loope
jmp
ss
into
xchg
daa
cld
mov
movsl
cmp
imul
adc
rcrl
push
sahf
pop
xchg
es
sub
int
testl
jecxz
xchg
pop
and
stos
loopne
sub
lods
mov
fs
scas
xor
fbstp
lret
pop
push
sub
mov
pop
mov
stc
jno
andb
incl
fnsave
sbbb
mov
imul
sbb
testw
adc
rol
pushf
arpl
insl
mov
add
imul
mull
mov
sub
inc
fsubs
stos
mov
xchg
mov
sbb
cmpl
sbb
cmpsl
bound
sub
lods
sbb
hlt
andl
jnp
adc
push
pop
in
mov
pop
call
aas
bound
ror
push
jmp
push
fstps
sub
fucomip
push
sahf
incb
outsb
xor
push
and
sahf
inc
lret
mov
fcomi
add
inc
inc
popf
stos
or
cmp
clc
sub
adc
sbb
jae
imul
dec
aas
insl
stc
pop
mov
sahf
cmp
sub
push
inc
jmp
call
mov
push
sub
lea
sub
mov
lret
in
test
jo
les
adc
int3
inc
inc
inc
pop
jp
inc
fnstenv
ss
in
jb
or
in
xlat
nop
add
inc
clc
jae
scas
outsl
arpl
add
adc
push
mov
and
sub
adcb
insb
dec
daa
repnz
xchg
cmc
xlat
mov
out
xorb
test
dec
dec
dec
cli
add
or
inc
ficoml
mov
cmp
lret
bound
in
push
scas
push
addr16
push
pushl
out
mov
push
xchg
sub
dec
loopne
cmc
stos
in
ret
jmp
inc
jns
test
push
mov
rcr
outsl
mov
push
movsl
test
xchg
push
xchg
push
dec
hlt
push
pop
dec
adc
mov
outsl
jecxz
jge
clc
or
sahf
fiadds
xchg
mov
lods
pop
jbe
data16
fs
lret
icebp
mov
and
mov
and
mov
dec
add
cmpsl
das
fmuls
mov
jno
cli
cli
insl
adc
andb
push
mov
push
vunpckhps
xchg
loop
cs
xchg
or
xor
cwtl
pop
es
int
mov
sbb
inc
gs
aaa
es
imul
ret
mov
mov
push
repz
hlt
mov
lods
popf
ret
jmp
mov
fiaddl
ss
cmp
loope
jg
pop
repnz
in
int3
jp
gs
mov
and
xchg
in
aas
dec
bound
cmp
cmp
mov
dec
jo
pop
sub
rorb
pop
in
and
or
pop
xlat
inc
in
mov
loop
jmp
xchg
mov
rcrw
adc
push
int
loopne
lods
addr16
push
test
mov
das
sti
jl
faddp
dec
push
sbb
ret
into
stc
enter
push
movsl
sahf
int
xor
shrb
sbb
fmul
add
out
mov
outsl
rcr
aam
xor
pop
popa
pop
mull
call
jge
and
sbb
pop
cmpsl
mov
loop
pop
clc
xchg
lods
ret
mov
xor
outsb
clc
mov
addps
xchg
mov
xchg
cmp
cli
mov
jle
sbb
popf
imul
scas
inc
sarb
int3
and
icebp
xchg
dec
ja
stos
inc
mov
push
cmpsb
setne
xor
adc
cwtl
xor
addr16
and
xor
inc
xchg
xor
nopl
outsb
jno
ljmp
hlt
inc
pop
fists
push
mov
and
movsb
pop
fld
adc
in
pop
dec
adc
testb
xlat
adc
pop
in
les
push
xchg
or
insl
out
sbbb
push
repnz
push
mov
xor
sbb
sub
cmpsb
movsl
movsb
push
ja
sub
loop
dec
mov
jge
inc
push
xchg
test
mov
pop
sbb
adc
out
mov
aad
scas
sub
gs
add
mov
xchg
fmul
movsb
and
adc
repz
mov
shrl
mov
xor
repnz
out
and
mov
jge
fwait
negb
imul
movsb
outsl
pop
out
loopne
mov
movsl
add
xchg
popa
sbb
add
out
in
mov
push
mov
add
imul
lcall
jnp
mov
cwtl
ds
mov
pushf
xor
stos
in
jecxz,pn
dec
icebp
sub
cmpsb
pop
adc
and
loope
inc
mov
insl
test
xor
fstpl
mov
lahf
js
nop
stos
rcrb
cmpsl
enter
xor
inc
sub
jmp
push
in
inc
mov
dec
mov
stc
inc
mov
rcl
les
xor
iret
popf
inc
notl
dec
mov
pop
ss
push
xor
lds
inc
popa
int
pop
ret
lret
mul
sahf
gs
pop
lods
xchg
and
mov
or
xchg
cmpb
out
cmc
std
adc
jp
jbe
pop
pushf
push
js
mov
push
sbb
cmp
aam
jo
aam
pop
out
aam
mov
shl
sbb
cmc
push
sub
aam
lahf
push
sub
jns
inc
push
xlat
das
push
leave
js
xor
scas
mov
mov
sbb
out
sub
lea
push
cmp
inc
xchg
sub
sarl
popa
pop
scas
rcl
insb
sub
mov
jns
pop
jo
cmpsl
mov
xlat
shlb
loop
icebp
pop
inc
jno
stos
adc
imul
xchg
push
out
addr16
or
pop
test
sahf
xor
aad
mov
mov
stc
xor
sub
cmp
sahf
mov
rcl
movsb
repnz
cmp
xchg
add
lods
mov
jle
lds
lock
rcl
jg
fsubl
pushl
test
lret
xor
dec
dec
ss
jne
mov
add
jae
clc
arpl
dec
icebp
sbb
fists
sbb
pop
jmp
test
ret
aaa
or
imul
jecxz
push
icebp
dec
subps
pop
jno
xchg
pop
xchg
scas
sbbb
cs
mov
jo,pn
in
sub
mov
xchg
js
mov
test
loop
mov
ljmp
lea
cmc
lea
in
push
out
adc
sarl
icebp
insb
cld
addl
or
ljmp
addb
jb
test
or
pop
dec
lahf
xchg
sbb
cmp
aad
adc
xchg
cmp
cmpsb
insb
outsb
into
inc
mov
mov
daa
adc
xchg
sahf
sub
negl
pop
lret
ret
pop
stc
pop
sbb
adc
mov
ret
enter
in
mov
and
sets
fdivrl
push
push
aas
and
out
inc
mov
shr
inc
adc
add
jbe
xchg
pop
pop
mov
xchg
lds
insl
jae
repnz
clc
mov
dec
insb
sbb
sub
test
pop
xchg
inc
mov
jb
fsubr
mov
fisubs
inc
and
push
je
sub
out
xchg
mov
cld
enter
adc
pop
mov
dec
aaa
out
pop
jg
cmp
sub
insb
mov
push
sbb
les
out
xorb
out
push
call
movsl
mov
xor
das
lods
add
out
cwtl
add
jp
pop
mov
cmpsb
notb
mov
cld
xchg
data16
xor
add
cmp
pop
mov
mov
xchg
stos
lock
xchg
sbb
pop
jb
aas
stos
inc
xchg
ss
sbb
loop
lods
mov
mov
push
flds
fisubrl
rclb
mov
push
cmpsl
cwtl
notb
out
pushf
add
insl
mov
jmp
out
mov
es
mov
cltd
adcb
sahf
jae
xchg
fidivs
mov
cmpb
mov
push
jmp
push
mov
jge
jae
cmp
push
jecxz
dec
movsb
adc
imul
adc
add
and
and
rclb
inc
jg
jg
imul
mov
mov
cmp
pop
mov
cwtl
jno
pop
insb
lds
stos
dec
movsl
mov
lods
sub
out
mov
gs
or
in
inc
lds
sti
int
lcall
xchg
sti
or
pop
lahf
insl
xchg
jo
cmp
aad
pop
push
loope
push
add
and
dec
mov
jmp
imul
mov
mov
push
jecxz
and
push
inc
ja
jmp
les
mov
push
mov
dec
ret
add
jae
adc
ljmp
fwait
sarb
scas
and
inc
stc
dec
and
cmp
jne
dec
push
jle
data16
fsubrl
cwtl
push
mov
mov
mov
mov
adc
repnz
xlat
cmp
test
cwtl
cli
push
seta
adc
fwait
jo
ret
xchg
outsb
adc
testl
shrl
andb
xor
mov
out
or
add
adc
mov
ret
sbb
jbe
scas
mov
xor
pop
pop
mov
outsb
repnz
push
pop
cmc
dec
lods
inc
les
push
pop
movsl
jle
out
mov
std
jp
ficoms
sub
aaa
subl
cltd
inc
sahf
in
xchg
inc
fwait
jecxz
and
clc
pop
sbb
pop
gs
aam
movsl
loop
mov
imul
jge
sbb
filds
jbe
or
lock
outsb
mov
shrl
adc
add
cmp
gs
adc
out
pop
in
push
inc
lock
rorl
cmpsb
add
sub
pop
push
mov
fcoms
test
scas
out
sub
mov
es
ljmp
pushf
pop
pminsw
jl
nop
popa
push
mov
mov
incb
push
sub
popa
sbb
jns
cmc
mov
pop
adc
stos
and
enter
push
and
xchg
mov
data16
or
mov
mov
shr
ret
lea
scas
test
jae
mov
adc
xchg
clc
push
push
pusha
mov
push
std
add
cld
imull
mov
shll
in
fdivs
push
repnz
addb
jns
ja
xor
test
ret
jle
inc
loopne
movsb
sbb
mov
mov
adc
and
and
and
imul
cli
stos
in
push
ljmp
call
out
daa
cmpl
add
adc
pop
imul
hlt
sub
dec
fwait
xor
mov
cwtl
xchg
mov
sub
stos
in
jp
jmp
pop
sub
and
add
mov
gs
lret
jne
shrl
lock
lahf
mov
adc
insl
inc
or
cs
hlt
mov
cli
xor
fisubrl
daa
repz
xchg
fistpll
add
testb
icebp
xchg
bound
ret
mov
xchg
mov
mov
movsl
imul
xchg
adc
and
je
or
dec
nop
dec
mov
adc
push
jae
cmpsl
jecxz
cmpsl
lds
movsb
enter
inc
std
lock
rcrl
pop
dec
jae
pop
push
jb
pusha
and
dec
sbb
push
pop
lret
and
push
ret
ds
daa
mov
mov
inc
and
test
sbb
cltd
xor
fbstp
cmp
mov
aad
cmp
push
push
jns
loope
fbstp
add
sbb
in
add
push
in
push
mov
jl
pop
add
std
mov
das
mov
cld
xchg
out
mov
pop
xchg
adc
xor
push
pusha
jnp
mov
mov
mov
mov
in
pop
mov
fstl
into
loop
inc
xchg
mov
and
scas
dec
loop
ljmp
daa
inc
mov
dec
cmpsl
jp,pn
sti
pop
shrl
mov
mov
int3
mov
lock
add
mov
loop
test
cmp
xor
or
and
push
push
xchg
ror
int
xlat
and
jb
xor
fldenv
and
xchg
cs
inc
fldenv
ret
call
in
mov
jno
sti
fcoms
int3
and
shl
mov
mov
sti
rorl
jge
orl
out
repnz
xchg
and
sbb
test
jp
push
xor
adc
out
out
sub
mov
xor
jmp
sbb
sbb
leave
int3
jmp
jmp
ljmp
call
jmp
adc
jb
push
mov
loopne
cwtl
cwtl
fldl
jns
mov
fdivl
lods
sti
jbe
add
xchg
xor
fcomip
addr16
insb
fbstp
push
cld
lcall
lock
es
loope
out
test
inc
or
mov
mov
je
fiadds
fimuls
mov
lret
gs
icebp
into
int
jmp
lods
cltd
or
push
cmp
movb
aam
or
inc
test
and
push
sub
fcompl
sahf
jbe
ja
in
repnz
out
push
test
clc
xchg
sbb
mov
aam
imul
mov
bound
in
jnp
aaa
jecxz
cmp
adc
pop
push
add
mov
jno
lea
int
sub
inc
sub
pop
jo
imul
pop
push
or
and
mov
mov
testb
add
cmpsb
or
sub
scas
sub
fiadds
push
cmc
inc
adc
and
ss
jp
repz
std
mov
fidivrs
iret
push
movsl
xor
cltd
mov
fimull
push
sub
inc
add
mov
outsb
jno
cmp
rcr
ljmp
mov
int3
dec
or
xchg
jecxz
imul
dec
or
sub
xchg
adc
jmp
js
notl
mov
jle
ljmp
jnp
xchg
ljmp
lods
test
pop
test
flds
scas
insl
add
aam
add
ficompl
scas
or
dec
aam
push
jo
ret
or
mov
push
pushf
xchg
sub
jno
mov
jno
lahf
mov
xchg
aaa
into
scas
sbb
in
add
xor
ffree
movsb
xchg
adc
inc
lods
xor
daa
in
cmp
lahf
test
gs
mov
lods
testb
jl
mov
js
mov
loopne
mov
imul
loop
imul
vxorpd
insb
add
call
loop
push
cmpsb
push
push
pop
pusha
dec
cmpsb
mov
dec
fsubp
fstps
jl
mov
into
mov
mov
cmpsl
mov
and
jns
cmp
lea
into
arpl
mov
cmp
sbbl
mov
loop,pt
xchg
mov
add
xor
cmp
cmp
in
out
sub
insb
sti
mov
mov
xchg
cmp
adc
int3
or
dec
pop
mov
cmc
mov
hlt
nop
fisubrl
scas
das
push
pop
fldl
sub
or
jb
jecxz
or
outsl
and
outsb
aas
xchg
xchg
addr16
jp
into
pop
rclb
pop
adc
mov
aas
add
cmp
fcoml
sub
push
fs
fsubrl
ret
pop
and
test
js
inc
pop
lret
add
sub
fildll
and
jp
lods
pop
cmp
fldcw
fcmovnb
popf
xor
and
mov
fisttpl
xchg
cmp
insb
mov
les
bound
sub
aam
cmp
cmpl
push
es
adc
leave
inc
xchg
add
push
and
and
sahf
sub
and
aaa
sub
mov
shll
adc
jle
lcall
jg
stos
mov
mov
mov
stos
es
fsubrp
negl
rclb
fdivl
jle
test
sbb
lret
imul
or
or
mov
xchg
xchg
insb
and
mov
mov
inc
clc
cmp
je
pop
push
adc
xchg
jge
loopne
and
mov
cmp
jl
dec
sub
mov
enter
cmc
or
inc
sub
in
outsl
lcall
jmp
in
add
in
or
or
lahf
test
pop
decl
lods
out
negl
lea
call
add
mov
stc
addr16
call
add
outsl
or
add
cmpsl
cmp
inc
sarl
jno
mov
fisubl
stos
adcl
mov
pop
outsb
push
add
push
movsl
and
pusha
jae
and
dec
imul
and
shrb
into
sbb
inc
pop
lods
cmp
or
mov
sbb
incl
xor
cli
repz
aaa
jo
sbb
push
cmpsb
sbb
mov
sarb
mov
jb
cmpsb
and
cs
inc
mov
aaa
push
ror
pusha
add
std
jo
dec
out
jl
cmpsl
xchg
imul
icebp
jnp
jecxz
xor
add
push
push
dec
dec
mov
mov
push
out
imull
lea
mov
push
aaa
push
test
pop
popf
ret
jl
and
add
es
enter
cmp
aam
sbb
loope
fisubs
lea
cmpsl
xchg
sub
cmp
add
loop
into
lcall
mov
popf
ds
mov
dec
mov
js
ljmp
inc
inc
lods
cmp
inc
cwtl
and
lret
mov
sbbl
inc
int
add
mov
xor
je
push
mov
ds
or
jecxz
cmp
add
mov
jmp
sbb
ds
or
adc
fistps
mov
mov
xor
insl
loop
or
push
mov
cmp
lret
inc
cmp
in
push
xor
into
mov
lret
cmpsl
arpl
sub
jl
sbb
test
or
mov
jb
mov
xchg
pop
mov
out
jge
lods
ja
jbe
jge
pop
xchg
shrl
shl
cmpsb
repnz
lock
push
sarb
jmp
adc
loope
sub
sbb
dec
gs
out
xchg
sub
pop
hlt
push
push
in
addr16
xchg
jmp
push
rorb
or
jo
inc
pop
sbb
xor
cmp
cmp
xchg
mov
and
xor
xor
imul
xor
pop
mov
sbb
std
sbb
cmpsl
add
cmpl
leave
ret
push
or
jae
outsl
xor
shrb
jge
movsb
jo
mov
or
gs
pop
test
or
fs
inc
les
scas
xchg
fnstsw
mov
jo
repz
mov
gs
fstps
int
ret
leave
sarb
repnz
mov
or
pusha
clc
or
adc
stos
mov
insb
add
push
xor
test
adcb
andl
hlt
xchg
in
cli
jne
add
pushf
add
adc
pop
repz
jp
sbb
add
jmp
push
pusha
fisttps
lret
dec
sbb
rorb
fwait
xchg
pop
mov
es
scas
sub
push
jns
mov
push
push
aaa
lea
incb
xchg
sahf
push
jecxz
int3
xchg
dec
add
outsl
aas
imul
lea
inc
mov
inc
bound
push
mov
scas
aaa
xor
add
mov
add
out
enter
jmp
dec
mov
repnz
inc
das
cmpsl
subl
or
xchg
mov
jmp
add
cwtl
test
rorl
jmp
xlat
and
repz
mov
sub
and
push
leave
mov
jns
repz
pop
movsb
lret
pop
mov
xchg
adc
test
sbb
aad
int
clc
loop
rclb
adc
in
lahf
pop
out
cmp
test
shll
decb
out
xor
cmp
push
pop
repnz
sub
pop
mov
lock
dec
shl
jns
call
lcall
enter
and
pop
mov
push
or
mov
mov
cmpsl
loop
sbb
scas
lea
cmp
repz
test
or
test
dec
push
mov
lds
decl
rclb
fimull
xor
jb
daa
hlt
push
inc
fimull
push
fsubrl
push
adc
les
push
push
repz
sbb
sub
lea
es
push
sbb
push
adc
xor
lret
and
iret
stc
in
and
addb
movb
scas
xchg
push
lods
inc
jle
ljmp
push
inc
lret
dec
lds
dec
loope
mov
imul
hlt
jmp
and
test
jg
xchg
lods
xchg
sub
jns
ss
mov
mov
push
dec
xlat
xor
movsl
fs
push
cltd
cmp
push
and
jl
dec
pop
repz
push
in
das
shl
dec
std
aad
push
cwtl
mov
or
jnp
cmp
je
fldenv
inc
jae
jle
popf
jg
test
lret
add
xor
out
jnp
and
pusha
fldt
inc
push
or
xor
mov
add
test
inc
hlt
pop
es
mov
cli
mov
addr16
push
mov
movsb
imul
std
je
cs
lock
push
xchg
sub
mov
xor
adc
xor
arpl
pop
adc
xor
cwtl
sahf
mov
xchg
sar
add
loop
push
and
cmp
xor
mov
leave
lds
adc
mov
nop
addl
in
lret
cmp
sbb
lock
push
movsl
cmp
sti
sti
cmp
cmp
xchg
dec
cltd
jns
mov
ljmp
movsl
js
aad
fiaddl
mov
cmpsl
push
push
adc
mov
ja
ds
out
test
cmp
daa
xchg
jno
cmc
xchg
shr
push
sub
scas
out
adc
xchg
sub
adc
daa
cmp
adc
dec
pop
add
mov
and
add
cwtl
push
mov
sbb
cld
cwtl
push
fstl
hlt
fs
lods
dec
into
adc
scas
mov
adc
insb
mov
divl
out
push
jmp
in
fwait
sbb
out
mov
mov
mov
pop
cmpsb
push
push
dec
stc
inc
pop
sub
stc
testl
gs
jle
pop
test
outsl
daa
pop
jl
test
outsb
or
mov
dec
es
adc
outsl
mov
icebp
ds
add
mov
outsb
mov
fdivrs
mov
adc
mov
enter
xor
lret
xor
cmp
sub
cwtl
mov
sub
or
mov
out
imul
push
xor
pop
ds
out
std
dec
jecxz
stos
and
mov
int3
push
je
rorl
out
fcmovnb
loope
and
dec
dec
ja
rep
add
push
or
int
test
std
mov
inc
xor
out
push
jmp
add
sbb
into
in
xchg
imul
push
fsubrs
pand
mov
push
jmp
shlb
mov
jmp
pop
or
sub
pop
mov
out
outsl
adc
rcll
idivl
das
jno
test
orl
mov
fadds
es
mov
int
xor
out
addr16
inc
in
test
fcoml
mov
cld
aaa
cmp
push
dec
mov
sub
xor
aam
cmpsb
pop
das
push
push
cwtl
lds
loop
lods
xchg
pop
jl
jge
movsl
jecxz
push
dec
jge
repz
sbb
daa
or
push
and
mov
outsl
stc
add
or
dec
movsl
stc
cmp
cmp
sbb
mov
inc
dec
and
mov
cmp
mov
pop
and
aas
dec
inc
in
cld
mov
leave
fs
xchg
lods
inc
sbbb
lret
lret
and
lcall
inc
in
idiv
nop
sub
dec
pop
in
aad
int3
cmpb
mov
clc
push
pop
fists
stos
enter
xor
xchg
mov
ja
lods
mov
sbb
dec
xor
jg
lret
xchg
jge
adc
out
pushf
shl
cmp
pop
ja
add
mov
mov
or
std
inc
jecxz
dec
ret
pop
movsl
jns
inc
test
ret
xchg
scas
jmp
imul
mov
lcall
push
xlat
or
aam
add
cmp
adc
jge
outsb
sub
xor
pop
mov
fsubl
enter
adc
test
arpl
cmpsl
sbb
or
push
flds
dec
mov
cld
js
pop
push
inc
sub
cmpsl
push
lcall
xor
or
cmp
sub
cmp
fidivl
bnd
inc
clc
sahf
in
xchg
push
inc
repz
xor
jl
fisubl
dec
xchg
sub
movsb
jne
pop
lret
jmp
mov
loop
lcall
mov
pop
pushf
inc
aam
aas
shl
repz
mov
pop
sub
xchg
dec
out
jmp
stos
stc
dec
insl
je
sbb
leave
dec
sbb
and
leave
jecxz
cld
repnz
in
adc
sub
jecxz
addr16
jno
xchg
arpl
lcall
loopne
pop
iret
lcall
outsb
mov
in
shrb
xor
inc
mov
scas
xchg
cmovno
add
loop
test
shrb
in
push
push
mov
lock
xchg
or
cs
pop
icebp
shrb
mov
mov
ljmp
push
jb
dec
add
add
or
and
xor
lahf
jbe
ret
mov
cmp
pop
shrl
pop
jns
xchg
mov
lcall
aam
inc
and
lcall
aad
ss
and
nop
ljmp
test
movsb
xor
adc
mov
pop
dec
lods
repz
je,pt
std
lea
outsl
xchg
jmp
test
mov
bound
mov
mov
pop
jge
mov
sbb
les
shrl
rorl
js
daa
inc
or
pop
cmp
into
cmc
pop
dec
jo
lahf
mov
inc
pop
xor
aam
or
sbb
sub
clc
mov
imul
mov
adc
pop
xchg
ja
lock
jecxz
pop
adc
std
pop
push
adc
add
cmp
movsb
push
jge
ljmp
jbe
sbb
jno
inc
add
push
shlb
xchg
hlt
or
loop
sub
push
in
out
test
addr16
lret
cwtl
push
push
inc
movsl
mov
sub
ss
cmc
addr16
sbb
xorl
ja
aad
jl
jbe
inc
mov
inc
and
sahf
dec
pushf
add
loop
mov
jnp
scas
push
inc
addb
popa
hlt
inc
stos
cmp
push
movsb
scas
call
shrb
and
sub
mov
stc
fs
js
push
mov
pop
xchg
dec
mov
jg
adcb
sti
push
ficoms
push
popa
std
pop
icebp
loop
dec
rclb
imul
add
jno
aad
mov
cmp
subl
aas
dec
outsb
shlb
push
jle
inc
pushf
xchg
outsl
sbb
fstps
push
xchg
adc
fiadds
push
sbbb
pop
sti
jb
aam
dec
mov
mov
xor
cmp
inc
jmp
inc
inc
xchg
mov
lret
xchg
cmc
add
or
test
ljmp
inc
movl
push
jae
push
ljmp
out
aam
sub
jae
out
jle
sbb
mov
imul
sub
nop
fcmovb
cmp
js
and
dec
dec
shr
jp
xor
lea
loop
ret
js
insb
in
push
cltd
in
jns
cwtl
das
leave
dec
sbbl
pusha
dec
in
sbb
test
fdivl
lahf
mov
inc
cmp
outsb
daa
call
inc
iret
arpl
inc
ficompl
push
or
lods
lret
dec
push
int
lods
inc
hlt
int3
arpl
in
rolb
ljmp
cmp
test
test
xor
shll
jle
ret
scas
add
int
dec
sbb
les
or
lock
add
int
push
mov
mov
mov
mov
inc
push
ret
mov
test
mov
gs
movl
jle
mov
mov
xor
in
sub
mov
jmp
fisttpll
add
inc
sub
flds
push
out
push
xor
repnz
inc
rorb
or
or
pop
addl
inc
dec
rcrl
push
jl
xchg
dec
popf
mov
jmp
jae
fsubp
xchg
fidivs
inc
xchg
inc
ret
test
sbb
adc
inc
mov
or
xchg
sarl
outsb
sti
pushf
aam
in
push
pop
std
lcall
or
xlat
jns
push
adc
sahf
xchg
xlat
repz
dec
or
push
loop
mov
mov
push
out
sub
enter
add
dec
dec
pop
cmp
fistps
mov
stc
push
lds
clc
jae
or
jmp
or
in
mov
out
js
in
dec
in
pop
push
lock
test
inc
mov
cs
jg
xor
enter
sbb
mov
test
adc
dec
jecxz
test
out
sub
jnp
int3
dec
stos
or
in
call
sbb
test
or
xchg
inc
cmp
add
aaa
stos
mov
push
int3
fsts
cmc
test
jnp
loope
jp
dec
mov
lock
loop
inc
ds
jb
push
out
mov
sbb
hlt
test
and
cld
inc
cmp
dec
test
cwtl
sbb
loopne
add
ficomps
test
fidivrs
mov
add
les
dec
fwait
xor
mov
pushf
jae
sub
sbb
or
xor
repnz
repnz
nop
das
xor
mov
xchg
pop
add
out
xchg
lock
ret
mov
lahf
sub
xchg
sbb
cmpb
popf
repnz
sbb
dec
mov
jg
xor
mov
fistpl
mov
les
mov
lea
pop
out
bound
lret
fsubl
dec
arpl
data16
lahf
pop
cwtl
mov
xor
out
js
popf
stc
adc
repnz
xor
mov
jg
stos
notb
add
cmp
stos
nop
mov
pop
mov
sti
lods
andl
or
inc
sti
or
aas
es
in
das
mov
mov
xor
jecxz
push
test
js
incl
fmuls
jecxz
iret
fdivs
pop
imul
mov
sbb
pop
jo
fidivrl
and
add
jge
ret
mov
movsl
and
in
sbb
scas
adc
or
xor
fmuls
sub
sub
fildll
les
leave
loop
lea
pop
int3
lret
testl
jo
pop
xchg
sbb
shl
mov
out
push
push
mov
rol
test
call
sahf
push
jmp
mov
sbb
pop
fists
repz
and
ret
popa
lcall
xor
inc
push
or
lahf
enter
xchg
xchg
push
iret
jmp
push
lahf
xor
add
xor
jg
dec
add
xor
jle
mov
push
jmp
fadd
scas
test
sahf
sbb
cmp
imul
cmpb
cmp
pop
adc
out
jp
inc
lock
in
mov
inc
lods
inc
inc
gs
inc
adc
fisubrs
push
test
xchg
mov
cmpsb
aaa
jle
stos
mov
test
cmpsl
mov
push
jg
popf
and
lahf
and
nop
sub
stos
insb
int
dec
lret
dec
imul
adc
hlt
pop
orb
test
outsl
pop
mov
lahf
ret
loope
cltd
cmp
inc
leave
push
push
and
aad
sbb
shlb
loopne
inc
mov
xor
dec
pop
dec
mov
mov
call
sbb
mov
push
jmp
inc
and
push
or
lret
cltd
inc
into
fistps
pop
pop
fs
mov
jmp
add
int
xchg
outsl
jns
repnz
insb
insl
jge
add
ja
icebp
mov
xor
aam
xchg
inc
outsl
ret
outsl
iret
es
outsb
cmp
rcrb
insb
xor
sub
jp
lahf
addr16
and
insl
pop
shll
ja
cmpb
cmc
sub
es
or
jp
decl
in
std
adc
enter
ret
jb
sahf
pop
jmp
fnstsw
push
loop
adc
mov
lods
cmp
xchg
push
cmc
mov
shlb
sti
ljmp
or
test
push
fiaddl
add
pop
sub
adc
loope
push
repz
sbb
jg
sub
sti
xchg
xor
sbb
test
mov
scas
lods
push
out
inc
dec
je
bnd
leave
lds
mov
inc
sahf
mov
xchg
mov
test
mov
mov
dec
xor
sbb
test
shlb
in
mov
mov
enter
add
mov
mov
mov
jo
pop
cwtl
lea
jo
mov
push
bound
cld
addb
cwtl
das
imul
cmp
sub
inc
insl
loop
jnp
push
stos
test
fsts
xchg
push
lds
mov
cmp
mov
cs
mov
cmpsl
cmp
and
adc
shll
pop
cmpsl
push
lock
ja
pop
lods
jnp
stc
and
mov
lret
cmp
or
out
sbb
pop
and
or
cmp
xor
hlt
cwtl
add
inc
orb
stc
adc
xor
and
popa
dec
and
mov
xchg
fnsave
lcall
xchg
negl
aas
sub
mov
pop
mov
add
mov
icebp
iret
xor
js
dec
sahf
sbb
cmp
jo
jbe
cmp
imul
je
or
in
jne
lea
xor
dec
les
cmp
adc
ret
jp
jmp
jnp
dec
scas
decl
mov
mov
in
clc
push
lea
mov
dec
movsl
xor
loop
jb
jmp
out
jo
sbb
arpl
fadds
dec
aam
aaa
add
cmp
vpunpcklqdq
xchg
jbe
mov
jbe
lret
aad
out
sbb
mov
inc
arpl
stos
test
pop
push
aad
adc
rcr
scas
out
les
loopne
cs
push
mov
je
js
xchg
mov
pop
cmc
add
sbb
mov
int
sarl
mov
out
lods
mov
ss
ja
aas
adc
xor
jnp
add
jns
adc
repz
and
ljmp
push
pusha
inc
rcll
push
mov
outsb
insb
fistps
cmp
aad
dec
jmp
in
inc
lods
fsubp
jbe
dec
std
dec
in
jle
cmp
or
ret
fstpl
pop
or
jno
lcall
dec
pop
icebp
int
push
loope
addr16
sub
dec
ja
mov
pop
inc
incl
pushw
xor
scas
ret
xor
jmp
push
fists
xor
xchg
dec
rclb
sub
insb
daa
cmp
or
jg
and
sahf
jg
pushf
stc
fiaddl
dec
hlt
xchg
incb
sarl
mov
mov
or
inc
in
stos
cmp
inc
bound
cmp
pop
sub
pushf
fcom
xchg
sub
mov
clc
jp
inc
sbb
push
outsl
imul
test
subl
scas
movsb
dec
add
fisubrs
mov
xchg
add
lds
and
mov
cmpsl
push
lock
pusha
pop
popa
mov
js
xor
xchg
pop
inc
in
shl
test
inc
ljmp
mov
pop
lds
fisttpll
dec
scas
cld
sub
mov
fs
inc
push
push
sbb
xor
jne
test
cmp
add
add
lcall
cmp
mov
popl
lods
loope
jge
push
xchg
adc
dec
jecxz
inc
aaa
cmpsl
xorl
cmp
inc
mov
xchg
push
add
jg
mov
push
pushf
scas
enter
cmp
inc
in
sbb
sub
lds
xlat
jae
pop
fs
xchg
cld
ds
sbb
in
test
insb
add
imul
fnop
inc
mov
fsts
test
push
out
pushf
sbb
shrb
adc
test
sbb
fistpll
inc
in
cmp
mov
daa
sub
cmc
mov
call
adc
insl
js
imul
outsb
sbb
stos
fmull
cmp
pop
mov
insb
inc
lret
cs
lods
xorl
sbb
xor
pop
or
or
sbb
xchg
dec
imul
cmc
push
addr16
std
orb
pop
in
sub
std
ja
jmp
push
and
sbb
mov
sarb
or
pop
mov
cmp
outsl
lret
pop
lret
pop
imul
sbb
mov
aaa
into
fstps
inc
xor
inc
test
xor
cmp
mov
xchg
mov
adc
jecxz
mov
repnz
pop
fistpl
repnz
and
inc
inc
mov
and
jno
inc
inc
lcall
data16
cs
pop
xchg
leave
test
cmc
push
lods
loope
pop
lods
bound
xor
test
sbb
jne,pt
or
sub
adc
push
repnz
cmp
fs
xor
stc
adc
hlt
popa
jl
not
cmc
pop
push
pop
test
adc
mov
mov
xchg
pop
insb
sub
jmp
roll
sub
jmp
or
mov
cmovns
andb
xorl
mov
dec
add
push
sbb
push
cltd
stos
xorb
mov
or
sub
popa
mov
subb
mov
adc
pop
jne
ss
pop
cmpb
jbe
outsl
in
iret
pop
jg
cmp
data16
sub
subl
faddl
and
push
inc
and
inc
sahf
jge
and
stc
xchg
pushf
scas
les
sbb
dec
call
fs
pushw
ds
int
inc
idivb
dec
ljmp
insl
aaa
fsubrp
mov
or
jg
xor
cltd
xorb
dec
add
jg
mov
push
popa
jnp
push
jo
je
lret
sti
clc
call
add
jmp
xor
test
xor
lods
inc
out
jno
subl
stos
jbe
dec
or
mov
add
and
imul
mov
out
mov
pop
icebp
xchg
and
std
in
jmp
fistl
popa
jns
pop
test
xchg
dec
fdivr
bswap
jno
adc
add
mov
jo
and
jge
popw
jmp
mov
adc
adc
mov
je
mov
insl
cmp
mov
push
fs
sub
mov
and
push
lods
ljmp
xchg
mov
pushf
sub
sbb
or
notl
mov
cwtl
sbbl
jnp
push
out
movsl
cmp
jb
stos
lret
sub
bound
mov
mov
aas
lret
imul
mov
jge
and
cmpb
inc
pop
pop
xchg
add
notb
mov
test
cwtl
sbb
pop
mov
lock
cmpsl
xchg
call
xchg
xchg
push
sbb
sub
push
fsubrs
push
addl
add
or
pop
subb
or
xor
inc
fidivs
stc
outsl
sub
inc
mov
xor
fs
xchg
scas
jge
ja
outsl
cs
add
ljmp
mov
sbb
daa
cmp
iret
sahf
negl
rorb
mov
mov
xchg
call
into
sbb
rol
rolb
out
sbb
sub
mov
add
ljmp
cmp
push
sub
loopne
dec
cwtl
and
fcmovnu
bound
sub
sub
int
jmp
sbb
jne
mov
cmp
jecxz
jno
or
add
jge
clc
dec
lock
push
inc
aam
and
out
in
popf
ljmp
mov
nop
stos
inc
and
ds
std
dec
pop
pop
ret
mov
jl
cwtl
sti
rcll
nop
mov
inc
pop
andb
lods
lret
nop
daa
std
out
mov
les
addb
xchg
sub
scas
push
sahf
lret
xchg
stc
jge
and
jp
in
sub
dec
jecxz
mov
xchg
push
push
icebp
jb
xchg
bound
popf
lods
sti
push
inc
scas
mov
add
pop
call
arpl
shrl
push
stc
and
rolb
dec
cmp
ret
enter
push
pop
sahf
fmulp
inc
xchg
mov
adc
ljmp
sahf
ret
ds
test
mov
sbb
mov
jp
inc
sbb
mov
int3
mov
add
shr
pop
add
lea
sub
push
rol
jg
shl
bound
pop
sahf
xor
sbb
sarb
or
pop
adc
xchg
outsb
sbbb
fnsave
sub
xor
xchg
xchg
dec
push
mov
icebp
cli
pushf
fadds
jb
aas
or
sub
mov
in
sbb
lock
mov
sub
xor
add
outsb
push
incl
dec
ret
insb
xchg
push
cltd
push
adc
stc
mov
sbb
lds
jg
mov
dec
stos
adc
popf
andps
adc
sbb
mov
mov
xchg
dec
push
xchg
mov
insb
arpl
inc
scas
push
push
sarl
and
cmp
std
mov
cmp
xchg
dec
lahf
mov
push
inc
dec
addr16
inc
sbb
cltd
mov
pusha
mov
jns
mov
lods
inc
sub
dec
mov
lock
cmp
outsb
push
push
mov
mov
mov
imul
mov
xor
gs
test
mov
or
int
inc
jle
push
ja
push
inc
mov
dec
and
mov
addr16
test
test
out
mov
pop
xchg
fcomi
js
or
cs
mov
iret
push
test
hlt
and
orl
cld
push
lods
adc
or
fsubrs
stc
or
out
xchg
sahf
mov
xchg
out
daa
xor
mov
mov
sub
setp
xchg
sub
mov
add
inc
lock
fndisi(8087
lock
sbb
inc
or
pop
mov
mov
pop
loop
cmp
lock
insb
mov
stc
push
call
xchg
das
sbb
out
subb
pop
imul
adc
adc
or
jne
lret
sbb
inc
pop
xchg
mov
dec
push
add
dec
les
ljmp
mov
sub
cmc
stos
inc
sahf
mov
std
jl
sti
or
push
mov
gs
addl
or
dec
sbb
ja
dec
fwait
lea
stos
xchg
mov
sub
mulb
pop
sbb
push
xchg
call
insb
adc
jns
lds
imul
cmp
cmp
sub
in
pop
movsl
in
stos
ss
push
lret
jl
jmp
mov
adc
iret
faddp
jecxz
adc
jae
shll
dec
xchg
inc
daa
push
bnd
xor
jnp
adc
xor
stc
and
cmpsb
cmp
insl
xchg
les
push
fsubs
iret
push
xlat
stc
gs
xchg
imul
sub
jp
xor
loope
shr
std
xor
mov
cltd
pushf
xor
pusha
xchg
ficompl
mov
insl
pusha
out
pop
sbb
mov
push
ss
cld
dec
push
stos
mov
fs
push
out
add
es
imul
xchg
xor
inc
insl
rcll
sti
pop
or
xchg
sub
pop
fwait
jbe
dec
adc
or
sbb
sbb
mov
add
lea
movsb
xchg
in
popa
jecxz
push
xlat
or
xor
adc
sub
mov
addb
ss
mov
aaa
cs
add
es
pop
xlat
fcmovne
push
dec
jae
sbb
dec
aad
sbb
jnp
daa
mov
sub
mov
mov
adc
xchg
sub
dec
out
sub
dec
fs
cld
xchg
fwait
or
lock
pop
inc
push
mov
dec
jo
ret
aas
les
insl
out
jne
xor
in
adc
sub
js
das
lret
daa
mov
aas
addl
jbe
inc
xchg
gs
ffreep
cmp
test
call
mov
mov
mov
movsb
repnz
int
ret
fwait
outsb
loope
jo
push
shll
push
mul
dec
aad
call
dec
mov
int3
aas
xchg
lods
lahf
stos
sub
jge
sahf
loope
adc
push
dec
inc
adc
jl
xor
ljmp
jno
in
data16
mov
mov
hlt
sahf
std
sbb
xchg
orl
xor
int3
addl
loop
inc
cwtl
repz
pop
testb
jmp
or
fidivrl
js
mov
push
fs
dec
add
push
mov
mov
fldl
dec
pop
dec
in
jnp
dec
loope
cmp
lea
sub
mov
test
push
push
test
add
sbb
sbb
into
jb
xchg
mov
into
sbb
mov
dec
inc
pop
cwtl
loopne
lret
pop
add
shr
and
sub
or
das
adcb
or
std
pop
sahf
pop
mov
cmc
jge
fistps
call
leave
gs
lods
adc
cmp
out
rcl
stos
xlat
push
std
add
mov
push
pop
sahf
aas
popa
sbbl
jge
adc
mov
call
ljmp
aam
aam
jno
xor
cmp
std
mov
jae
push
push
dec
scas
push
popf
scas
mov
aam
es
xor
cmp
hlt
mov
jl
ret
pop
xchg
popf
in
inc
adc
jo
or
out
js
fsubl
mov
rorl
fidivs
lea
cltd
xor
sub
mov
jl
dec
cmpsb
je
jno
sbb
xor
push
gs
push
insl
cmp
mov
ja
lods
test
adc
cmc
jmp
mull
iret
xchg
inc
pushl
aaa
gs
add
xchg
cs
jno
ss
mov
mov
add
sti
inc
mov
stos
xchg
faddl
mov
je
pop
gs
ret
inc
mov
sub
and
inc
popf
lods
ljmp
ret
push
call
popf
xor
test
push
jge
mov
pushf
xchg
out
add
loope
ja
dec
loopne
sub
jl
cmpsb
pop
pushf
popf
inc
ljmp
or
pop
in
addr16
push
aas
popf
jg
mov
add
push
inc
cmp
sarl
loop
mov
fwait
jb
inc
imul
dec
aad
cmpsb
outsl
mov
aam
sub
repz
jo
adc
insb
cli
lock
int3
sbb
mov
jbe
int
cwtl
push
jae
pop
xchg
in
jnp
jecxz
inc
bound
scas
stos
jne
cmpsb
arpl
leave
pushf
inc
je
testb
cmp
adc
jo
out
imul
sub
lahf
and
insl
pop
mov
push
in
das
adc
mov
aas
cmpsl
fstps
or
loop
inc
push
jnp
dec
and
adc
dec
pop
popf
jp
push
je
inc
dec
pop
inc
test
mov
mov
and
rcll
jmp
adc
or
push
pop
cmp
call
cmp
roll
lds
in
pop
ret
mov
in
push
mov
je
fwait
scas
mov
stos
shlb
sbb
cmp
adc
mov
pop
dec
push
mov
push
nop
stos
inc
xlat
lock
mov
rcl
loop
in
dec
lret
clc
push
rorb
mov
add
jp
aad
add
jge
add
xchg
into
mov
add
out
aad
out
dec
lret
outsb
dec
shlb
sub
jg
and
mov
and
mov
shll
push
inc
pop
push
dec
dec
jge
mov
pop
clc
loope
mov
push
in
mov
inc
and
inc
cwtl
pop
cld
inc
lea
sahf
std
fwait
lods
and
jp
jo
push
push
mov
or
imul
addb
push
wrmsr
or
in
push
sub
imul
mov
ljmp
jp
cmpsl
shrl
xchg
adc
xchg
cmp
fwait
jmp
es
das
mov
mov
push
sub
cmpb
mov
or
or
hlt
je
stc
mov
test
pop
movsl
out
pop
jo
sub
and
inc
mov
xor
cmp
loopne
mov
mov
mov
and
adc
pop
dec
cli
leave
test
ja
add
inc
push
arpl
push
inc
mov
fiaddl
cmp
cmp
jle
jecxz
xchg
jle
out
xor
bound
inc
arpl
fs
xor
in
roll
add
mov
mov
dec
jae
das
popa
out
adc
mov
jmp
andb
movb
in
cmp
xchg
out
gs
push
ja
pop
lods
jno
jbe
cli
pop
adc
in
es
dec
or
insb
fbld
cmpsl
push
jl
push
push
iret
rcrb
mov
cmpsb
hlt
dec
out
sub
dec
xlat
shrb
jge
push
and
rolb
std
jo
outsl
enter
sbbl
mov
rorl
pop
sbb
and
mov
insl
add
dec
cmp
mov
lret
loope
xor
lsl
mov
iret
xchg
add
jle
mov
or
lahf
jnp
jns
out
sub
xchg
pop
adc
add
ret
mov
or
inc
jns
sbb
lock
sub
sahf
fwait
xor
pushf
das
add
xor
cs
out
mov
mov
jg
sub
mov
jne
push
mov
xor
lahf
nop
int
jae
jns
lcall
mov
jmp
out
and
popf
push
inc
ljmp
mov
int3
std
aaa
pop
xor
arpl
xor
jne
xchg
xchg
sbb
pop
mov
sub
or
or
in
xchg
dec
fistl
adc
shrl
lea
mov
cwtl
mov
cmp
xchg
and
pop
jle
aas
add
pop
out
xchg
mov
xchg
cmp
xchg
rclb
sbb
addb
sub
mov
repz
xchg
add
xchg
out
sbb
bound
cmc
shl
xchg
popa
or
outsb
sub
cs
pop
icebp
loopne
fadds
repnz
xor
add
sbb
mov
in
cmp
movsb
push
dec
and
pop
fsubrs
loop
dec
sub
lea
mov
ficomps
shll
adc
pusha
jge
ret
gs
add
pop
xor
jmp
adcb
test
lea
sub
push
pop
xlat
outsl
push
adc
mov
add
fiaddl
mov
shlb
inc
xchg
mov
imul
xchg
ss
int
aam
xchg
stc
out
and
sub
mov
out
mov
sub
ss
mov
lahf
negb
and
sbb
or
push
cmp
addr16
test
mov
xor
sahf
mov
and
jp
jne
out
inc
mov
push
ja
ds
inc
adc
pop
cltd
arpl
psllw
push
lahf
push
push
mov
mov
or
je
adc
push
xor
shlb
ds
out
fwait
jbe
call
std
xchg
sbb
icebp
arpl
popf
mov
aaa
jbe
insl
cmp
and
mov
in
jl
lret
or
shll
adc
add
push
dec
bound
into
lea
in
sub
jp
into
enter
adc
daa
gs
mov
jbe
daa
lods
jae
adc
movswl
les
add
sub
add
mov
inc
fwait
cmp
push
mov
sbb
shrb
adc
repnz
sub
cld
das
stc
mov
imul
mov
xchg
out
mov
aad
ficoml
rcrl
cmc
and
pop
movsb
sbb
mov
sbb
mov
loope
pop
mov
movsl
xorb
jnp
shrd
push
cmp
int3
jle
cmp
lods
jg
loop
mov
subl
add
std
dec
icebp
sarl
testl
mov
shll
push
push
inc
daa
dec
aad
cmp
decb
mov
push
shll
push
arpl
jne
add
stc
sub
lea
cld
fiaddl
fsubr
push
shlb
ss
mov
mov
repz
stc
popa
pop
push
mov
mov
call
aam
push
nop
dec
adc
ja
lea
leave
loope
sbb
stos
sbb
in
pop
mov
dec
and
mov
shl
mov
xlat
pop
mov
xchg
scas
mov
shrl
xor
pushf
test
sub
xor
dec
aad
push
xor
loopne
mov
mov
pop
cmp
push
hlt
dec
inc
xchg
mov
mov
in
xchg
jmp
adc
inc
mov
or
iret
mov
push
out
mov
loopne
ja
stc
scas
into
aad
xchg
addr16
int3
xchg
cld
dec
jg
imul
dec
test
hlt
int3
xchg
notl
sbbl
jecxz
sahf
div
aad
loope
pop
adc
sahf
fs
iret
mov
int3
lret
mov
ret
xchg
jg
xlat
nop
adc
dec
add
je
lods
push
pop
inc
or
inc
adc
dec
bound
sbb
shrb
data16
inc
sbb
jg
jp
sub
sbb
dec
std
inc
dec
dec
pushf
xor
xchg
jp
jns
mov
mov
mov
pusha
in
mov
in
negl
and
mov
outsl
dec
xor
mov
pusha
lods
lret
sub
aas
push
mov
fs
ja
and
adc
jmp
cmc
jg
or
mov
mov
push
mov
ja
sbb
adc
bnd
outsb
stc
sub
in
divb
shr
xchg
mov
sbb
and
and
sub
clc
test
ret
out
nop
lcall
adc
xor
ret
mov
in
mov
xchg
lret
inc
rcrl
js
jb
jg
rol
jg
ss
pop
jl
dec
enter
adc
xchg
add
jle
addr16
fincstp
aaa
shl
adc
push
scas
imul
push
inc
jne
adc
jecxz
mov
push
arpl
jb
lret
xchg
jmp
sbb
mov
shll
lock
mov
cmp
les
xor
cmpl
mov
inc
pop
ds
cmp
mov
jnp
sbb
sbb
cmp
mov
test
mov
movsb
shrd
pusha
andb
add
xchg
test
clc
nop
loop
mov
cmp
jne
adc
adc
and
fidivrl
mov
mov
sub
mov
lret
push
xor
jmp
mov
lods
xor
push
dec
cli
test
imul
pop
jecxz
inc
jne
sarb
aam
shlb
fisttps
shlb
sbb
or
sbb
pop
dec
push
out
mov
mov
jo
in
pop
dec
mov
cmp
inc
pusha
pop
lahf
lods
cmp
stc
in
stos
aam
pop
icebp
push
movsl
fsubl
fbstp
add
xor
mov
push
or
mov
daa
push
mov
jo
dec
sti
pop
jnp
adc
xchg
notl
shl
adc
inc
sub
rcrl
in
les
inc
rcrl
and
fisubs
inc
popa
mov
jge
js
lcall
scas
nop
loope
ss
sahf
mov
shlb
sbb
push
shll
test
push
inc
sarb
add
out
pop
jecxz
stos
and
mov
rorb
lods
nop
push
movsb
les
rorb
cltd
jmp
sbb
ret
inc
leave
xchg
shl
js
or
std
and
cltd
push
dec
inc
mov
sub
std
or
mov
jg
fisubrs
cwtl
test
cmp
mov
xor
in
pop
loope
dec
mov
test
mov
aam
jo
mov
jle
movsb
mov
pop
stc
or
jnp
iret
push
pusha
pop
jbe
outsb
loope
sbb
jnp
or
push
mov
enter
sti
add
fisubs
negl
sbb
mov
push
jmp
mov
jne
lods
jb
inc
sub
in
cmp
scas
shlb
add
imul
pop
cmp
adc
lcall
loop
lods
sbb
cs
addr16
push
nop
lock
sbbb
call
mov
add
mov
sub
fcompl
sub
dec
testl
cmp
lods
cmp
xorl
test
mov
outsb
ljmp
icebp
xlat
jle
push
enter
nop
pop
pop
repnz
add
adc
out
pop
push
cltd
test
mov
imul
push
xchg
fisttps
repz
popa
notb
push
fidivl
xlat
outsb
and
pop
in
dec
cmc
pop
jle
imul
jp
dec
out
pop
pop
push
push
testl
popa
icebp
pop
dec
and
lret
in
cld
or
enter
pop
fidivrl
mov
xor
jmp
cli
jp
push
lods
stos
inc
js
cwtl
xor
loope
sahf
fwait
push
mov
inc
xor
add
mov
add
repnz
fwait
loope
stos
cmp
pop
adc
jle
nop
push
in
lock
jge
xchg
mov
jp
lock
mov
push
or
test
in
addl
call
and
fldcw
movl
jl
repnz
movsb
xchg
xchg
in
stos
and
scas
test
mov
push
mov
sahf
test
or
lds
lods
add
lods
push
out
and
sbb
scas
clc
sub
sub
jg
cmp
inc
lcall
pop
dec
mov
mov
xlat
and
sub
das
aad
xorb
add
lret
cld
jge
jmp
stc
shlb
data16
pop
lret
adc
xchg
mov
jge
cmp
leave
push
and
sar
inc
jmp
push
das
andl
push
imulb
sti
aas
pop
pop
dec
xlat
insb
sub
aam
or
out
jp
sub
imul
jns
aaa
jecxz
xchg
add
adc
mov
adc
xchg
ja
les
ljmp
cld
clc
or
xchg
push
es
sbb
dec
les
int3
jne
cmp
lret
mov
mov
movl
mov
pop
fnsetpm(287
jnp
sbb
or
cltd
xorl
dec
lock
pop
js
push
mov
cmp
mov
scas
pop
arpl
jae
push
jo
jp
jp
lea
mov
dec
and
repz
mov
in
test
jns
fstl
dec
mov
scas
movsl
jmp
jo
je
pop
mov
or
andl
or
mov
andb
and
xor
mov
sbb
push
loope
js
inc
or
mov
adc
sub
pop
dec
fsubs
pop
jbe
adc
jae
pop
mov
push
jge
in
add
fadds
mov
pop
xchg
dec
pop
push
icebp
pop
popf
jns
xchg
cli
in
dec
xor
dec
mov
xchg
lret
xchg
insl
sbb
shrl
or
sbb
mov
insl
dec
mov
shll
rcll
add
push
cmp
in
pop
add
test
pop
dec
pusha
inc
ret
stc
add
xor
jg
pop
inc
mov
mov
dec
mov
loope
jg
pop
and
sub
dec
add
imul
inc
jle
ljmp
mov
and
inc
movsb
mov
jg
outsl
pop
lods
in
inc
lock
pop
and
out
mov
out
inc
je
jb
cmp
outsl
lret
add
lret
xlat
les
push
jg
stos
sub
pop
xchg
jle
vpcmpgtb
and
sub
iret
push
bound
mov
xchg
leave
in
jge
cltd
std
or
dec
adc
movsl
movb
mov
movsb
jno
sub
test
push
push
xlat
and
loop
xchg
push
lcall
in
pop
mov
arpl
jne
les
pop
aad
mov
cmp
mov
mov
push
mov
sarl
mov
fistpl
pop
fs
ret
rcrl
jmp
lret
scas
call
es
xchg
mov
inc
pop
jne
or
push
insb
pop
push
cmp
aaa
sub
outsb
imul
test
sbb
shlb
inc
je
andb
popf
jo
ss
fdiv
sub
mov
fcoml
add
loopne
sbb
inc
push
in
iret
adc
xchg
dec
stos
cmc
dec
insl
sbb
or
div
shl
mov
cmc
adc
push
jae
and
insb
fsubrs
ljmp
jmp
ja
dec
mov
mov
mov
sti
xor
mov
pushl
pop
or
or
xor
xchg
out
mov
add
push
jae
mov
push
imul
adc
jns
inc
mov
xchg
pop
cmp
push
sti
icebp
out
sahf
adc
cmp
xor
insb
sbb
jno
sbb
or
in
aas
dec
mov
mov
mov
outsb
mov
scas
xchg
push
aaa
and
lret
xlat
pop
lret
mov
loopne
mov
xor
test
jle
pop
mov
test
or
les
and
mov
testl
adc
cmpsl
jmp
pushf
cli
ja
push
test
shlb
pop
nop
das
cmp
push
cld
push
add
add
inc
sbb
jl
mov
lcall
aaa
mov
fwait
jbe
testl
xchg
repz
sbb
jb
sahf
and
jo
mov
loop
mov
call
stos
xor
sub
inc
mov
int3
call
cmp
stc
insb
outsb
fcoml
lea
sahf
pop
ja
fs
xchg
jo
or
jg
dec
pop
icebp
or
and
outsb
flds
stc
test
gs
xchg
int
in
jp
shrl
lods
adc
fmulp
sti
sahf
sub
mov
stos
sti
test
fmull
xchg
cmp
or
repnz
mov
inc
push
push
xor
cs
xor
stos
inc
divl
push
popl
inc
arpl
cmp
xchg
mov
into
dec
popa
xor
sbb
stos
mov
subb
mov
add
test
adc
popf
mov
xor
jae
dec
fs
jns
fnstsw
imul
cmc
shr
movsb
sbbl
repnz
add
cmp
add
les
push
mov
aaa
std
es
cmpsb
cmp
in
mov
sbb
mov
ret
mov
sbb
bound
or
int3
sub
cmp
scas
add
adcb
mov
fs
add
fwait
dec
fadds
int3
mov
or
arpl
scas
jnp
or
push
enter
lock
sbb
ljmp
fcmovnb
fs
sub
test
lods
nop
mov
sub
movsb
inc
xor
pop
nop
sahf
loopne
xchg
jge
aas
loop
insl
inc
jge
subl
rorb
movsl
adc
or
push
sbb
cmpsl
xchg
call
add
icebp
xlat
fucomip
mull
ss
jecxz
adc
mov
sar
movsl
test
pop
out
cmc
and
xchg
jns
lds
mov
cli
fisubrl
mov
mov
add
sub
dec
or
cmp
mov
int3
jno
dec
sub
aad
push
jecxz
cvttps2pi
ret
movsb
fdiv
js
lahf
add
and
push
xchg
cmp
pop
seto
dec
jns
cwtl
mov
je
pop
pop
sbb
sbb
in
lcall
icebp
cmpsb
push
insl
lods
push
cmp
or
push
sub
jl
mov
addr16
rolb
lahf
xorb
ds
loopne
adcl
arpl
rorl
popa
into
jne
lret
inc
mov
xchg
xor
or
or
xlat
sub
push
ret
pop
cmp
ffree
add
pop
fstl
pop
lock
call
addl
fwait
push
mov
popa
xor
push
mov
mov
les
call
and
test
int3
sti
popf
rcrl
mov
pop
out
aaa
fs
addr16
pop
ljmp
insb
fidivrl
or
aaa
ljmp
push
cmp
push
std
adc
jb
mov
fstl
sub
arpl
adc
sbbl
movsl
mov
std
lcall
in
test
fs
cmp
jb
into
pop
adcl
inc
shr
jle
xchg
pushf
movsl
xor
mov
popa
leave
mov
iret
mov
push
mov
or
cmc
sti
lcall
movl
insl
sbb
jb
push
movsb
lods
enter
or
aad
adc
cmc
stos
cwtl
mov
or
xor
sbb
pop
lock
hlt
mov
xchg
add
sbb
cmp
xlat
xchg
aad
mov
mov
hlt
in
or
inc
clc
and
lea
jle
mov
mov
fcmovne
arpl
stos
jne
fcompl
adc
sub
pop
mov
fs
jp
test
mov
cltd
sbb
add
mov
arpl
mov
and
xor
and
cli
in
fisubrs
cwtl
cmpps
sarb
ds
jnp
adcb
fstps
jmp
mov
push
push
insl
adc
jecxz
xor
xchg
imul
or
dec
stos
cmpsb
int
leavew
sub
pop
sbb
fwait
pushf
mov
movsl
ret
fs
out
daa
mov
leave
out
xchg
into
in
imul
repnz
lea
xchg
sahf
add
sbb
jle
mov
mov
xchg
add
mov
pushf
cli
into
aad
imul
jbe
lret
or
sub
popaw
in
in
adc
in
subb
aaa
jle
pop
mov
jl
and
jno
test
outsb
iret
aas
clc
or
aad
mov
jbe
les
int3
xor
mov
mov
inc
lret
jp
les
fs
lret
push
movsb
jmp
or
xchg
xchg
dec
adc
rcll
insb
js
xor
push
cmpsl
cmp
dec
cmp
pop
out
loopne
jle
pop
sbb
dec
pop
push
pushf
ja
sub
cwtl
and
lret
shl
push
in
pop
xor
xor
adc
xor
fs
popa
xor
scas
int3
mov
roll
xchg
scas
loope
sub
lret
mov
sub
add
pop
andl
test
cs
mov
mov
imul
aas
dec
sbbl
ds
shrb
xor
test
inc
push
jmp
dec
xchg
mov
js
pop
imul
sub
shl
clc
add
aaa
mov
arpl
sahf
scas
xor
aas
add
jns
stc
inc
inc
icebp
lcall
cltd
cli
mov
enter
div
cmp
rolb
or
movsb
addb
sub
out
cmpsl
jg
pop
pop
push
mov
sub
add
xor
icebp
es
xor
add
push
aam
mov
les
cltd
cmp
add
xchg
and
in
fisubs
iret
and
push
scas
mov
test
sbb
mov
testl
mov
inc
push
stc
xchg
inc
stos
out
rcrl
dec
adc
cmp
aam
push
push
int3
mov
sbb
into
outsl
cmp
xchg
in
lods
jne
ds
test
shlb
push
daa
call
add
cmp
push
add
or
add
stos
sub
xor
daa
xlat
adc
test
add
xor
mov
stos
inc
xorb
xchg
lret
pop
dec
and
movsb
aas
mov
test
xor
ret
bound
pop
cltd
lea
in
stos
mov
mov
jmp
cmp
test
lret
mov
lahf
ja
nop
sub
adc
bswap
clc
scas
hlt
inc
ljmp
jbe
sbb
cmp
in
daa
xchg
adc
jbe
and
xor
insl
mov
xchg
jnp
inc
mov
pushf
cmp
cmp
nop
xchg
pop
lock
cmpsl
lods
xchg
insb
xchg
call
or
std
dec
mov
jge
pop
fdivp
push
aad
cmp
jecxz
rep
aad
dec
pop
adc
lcall
inc
std
xchg
orl
jb
push
inc
ja
repnz
call
mov
jb
test
stos
hlt
jno
cwtl
out
scas
xchg
js
and
test
xchg
pusha
or
cmp
in
jne
push
ds
xchg
push
adc
xchg
jp
xchg
and
out
adc
ljmp
xchg
fnsave
add
inc
sub
dec
fldln2
repz
aam
mov
test
mov
sub
lcall
cwtl
bound
scas
push
sub
ja
out
dec
fcomi
js
ljmp
test
xchg
iret
cltd
addl
jbe
cmp
call
xor
jo
std
leave
pusha
bnd
fadd
out
mov
aad
addl
adc
mov
fwait
cmp
ficompl
sub
sub
mov
stc
outsb
testb
pop
push
ljmp
inc
bound
in
aad
xor
std
sub
aam
xchg
add
and
data16
mov
push
sub
add
jmp
movsl
sub
dec
adcb
pop
mov
pop
mov
push
mov
mov
push
in
adc
sub
jnp
mov
dec
cs
ffree
push
stos
outsl
pop
in
xchg
test
stos
sub
pop
jae
out
jnp
mov
lods
movsb
test
sub
es
lock
jmp
fnstcw
add
adc
push
xlat
scas
fwait
add
sarb
and
mov
xchg
xor
push
rorl
xchg
cmp
and
add
test
mov
into
push
jo
cmp
in
daa
in
jno
aaa
stos
cmc
sbb
mov
mov
repnz
cli
jne
rcrb
imul
popa
jo
scas
pushf
stos
inc
inc
rcr
add
jb
pop
mov
cmpsb
sbb
or
inc
mov
stos
adc
mov
xchg
out
js
lcall
cmpsb
movsl
jl
cmp
scas
dec
outsl
js
outsl
jo
ljmp
pushf
mov
loopne
pop
and
mov
ljmp
jns
shlb
mov
stos
xlat
gs
int3
dec
fnstenv
mov
inc
fwait
add
jge
test
arpl
popl
xor
pushf
xor
cltd
hlt
in
push
push
and
pop
mov
int
xchg
sbb
rcl
cmp
pop
fdivrl
jecxz
pop
push
jns
lcall
scas
shll
cmc
pop
cmpsb
into
nop
pop
add
and
and
jp
dec
push
add
adc
sub
inc
ret
pop
je
dec
dec
test
in
sub
jae
icebp
in
and
xchg
jmp
inc
aaa
ret
dec
ljmp
insb
inc
int
sahf
cmc
mov
lret
bound
sub
cwtl
and
fs
push
subb
lret
push
mov
jle
lahf
jge
adc
mov
pop
mov
scas
and
xchg
call
aad
movsb
xchg
push
testb
pop
rcrb
xlat
rcrl
int
and
fimuls
pop
psubsw
dec
cmc
add
mov
sub
jb
out
test
jle
lods
jns
mov
cltd
xor
aam
cltd
mov
inc
ljmp
mov
popf
dec
push
jb
or
sti
data16
test
out
pop
sahf
aaa
mov
xor
das
cmp
pusha
aaa
lahf
mov
add
push
jp
jns
cmp
js
mov
js
test
clc
faddl
inc
push
filds
mov
outsb
sbb
adc
pop
or
and
hlt
fldenv
push
imul
push
outsl
jmp
cmp
lcall
js
mov
dec
leave
insl
pop
push
cmp
loope
jmp
fbstp
js
add
pop
and
mov
test
lds
imulb
dec
pop
mov
rcl
dec
ficompl
test
test
inc
rolb
sub
mov
mov
cwtl
in
mov
dec
sub
and
mov
pop
call
cmp
dec
pop
leave
daa
addl
mov
xchg
cmp
fs
loopne
push
xchg
cmp
out
in
dec
out
pop
jo
mulb
cmp
jne
jns
cmpsl
sarl
std
adc
jecxz
mov
cmpsb
filds
ds
int3
push
pop
lods
gs
pop
cmp
aam
cli
and
pop
mov
jl
dec
insb
sub
pop
out
cltd
les
mov
add
add
mov
shll
xlat
pop
imul
and
in
dec
xorl
add
mov
test
cwtl
add
jle
adc
push
nop
lods
aaa
jmp
repz
mov
pop
negb
imul
pusha
push
icebp
push
in
xchg
sbb
sub
daa
mov
pop
out
les
in
xor
aaa
lret
cld
mov
xchg
dec
mov
lret
les
outsl
ret
out
jecxz
fsubrp
cmp
nop
movsb
sti
les
dec
inc
pop
xor
test
dec
mov
stc
into
ds
rorb
aaa
jbe
adc
cmc
jl
jb
mov
inc
sbb
sbb
test
cmp
pop
mov
add
jg
cmp
push
mov
or
test
xorl
sbbb
jl
dec
scas
mov
jl
cmp
inc
pop
sbb
sbb
mov
dec
pusha
xorb
add
adc
inc
ret
hlt
dec
scas
inc
xor
fisubrs
rcrl
out
xchg
cmp
xchg
xor
xor
sahf
notl
xor
mov
test
adc
data16
xor
inc
cld
mov
movsb
repnz
jle
mov
and
pop
dec
std
js
mov
inc
jge
pop
xor
pop
iret
addb
sbb
mov
into
inc
pop
add
out
and
push
scas
inc
test
mov
rclb
addr16
cs
pop
mov
push
jg
xor
rorb
std
xor
dec
fs
mov
dec
cmp
pop
insl
cmp
xchg
les
jmp
filds
adc
fidivrs
pushf
imul
aad
inc
icebp
insb
add
punpcklbw
jge
je
int
addr16
sbb
cs
cwtl
push
adc
test
push
xchg
in
dec
insb
les
cmp
bound
inc
mov
add
ja
shl
add
fdivrp
cmp
inc
rol
sub
pop
jbe
ret
ret
ja
xor
bound
mov
xor
imul
cwtl
or
pop
rol
adc
mov
xchg
mov
out
ds
mov
fisttpl
ret
gs
and
icebp
or
or
jg
push
popf
loope
fxch
cmp
inc
xlat
pop
rcrl
inc
inc
push
bound
xchg
sbb
call
and
cli
cmp
sbb
xor
jnp,pn
pop
xor
xchg
dec
in
cmpl
adc
pop
mov
into
xor
lret
dec
mul
jl
sbbl
adc
movsb
das
push
sub
popa
add
bnd
sti
icebp
fdivs
das
dec
and
cmp
leave
insb
movsb
scas
mov
lret
cmove
jb
sub
mov
test
sub
mov
nopl
daa
jp
sub
std
pop
jecxz
nop
inc
inc
sub
dec
pusha
add
sub
sub
fdivrl
add
in
sahf
push
jno
stc
mov
lock
adc
out
addr16
xchg
push
jbe
mov
test
cmp
imul
jno
outsl
mov
mov
mov
push
cmp
mov
iret
enter
fsubrl
pop
jnp
and
and
int3
pop
div
sbb
pop
les
cmp
js
add
lea
inc
sbb
xchg
hlt
sub
jno
lods
sub
popf
jo
add
out
js,pn
stc
test
sbbb
out
dec
mov
push
xor
pushf
pop
sub
fmul
notb
add
mov
cmc
fmull
mov
sbb
xor
lcall
out
inc
adc
bound
lret
shlb
or
mov
or
imul
out
push
push
dec
add
push
icebp
push
aaa
test
insb
lret
and
sbb
pop
addr16
lret
hlt
pusha
ret
test
sbbl
cmpl
jbe
mov
push
rclb
mov
sbb
sbb
xor
jmp
xor
mov
xor
scas
jle
in
imul
jae
jno
pop
mov
mov
cmp
aas
ja
or
fistpl
icebp
orb
mov
stos
mov
loopne
je
and
mov
js
sub
dec
pop
jbe
cmpsl
das
mov
jl,pt
jo
mov
xor
add
imul
jns
arpl
sbb
mov
loopne
frstor
lcall
pusha
sti
dec
pop
jp
pop
les
loope
cmp
sub
sub
lea
das
mov
inc
lea
addr16
inc
ds
int
rolb
pushf
int3
mov
repnz
cld
notl
leave
in
test
push
xor
adc
adc
iret
jmp
into
lret
xchg
in
xchg
addl
andb
xor
shlb
cli
add
xchg
jnp
sub
lahf
jecxz
das
mov
imul
dec
or
dec
mov
sbb
xchg
xorb
and
xchg
ret
inc
stos
inc
jne
repnz
pop
push
inc
lea
js
sub
inc
sahf
int
and
fiaddl
mov
pop
cmpsb
and
aad
mov
stc
mov
out
popfw
test
xchg
dec
data16
pop
sbb
mov
fsubs
popa
add
mov
cwtl
add
iret
push
cmc
insb
push
lods
lea
mov
in
sahf
jno
add
jae
sub
stos
rol
jg
je
lret
adc
add
cld
outsl
aam
mov
mov
mov
pop
mov
sar
cmp
xchg
sbb
insb
and
insl
imul
jge
cmpsl
push
sbb
pusha
mov
or
mov
aas
lock
push
out
and
add
psrad
lods
add
stc
insl
sub
bound
repz
sarb
xor
cwtl
jo
sti
xchg
imul
xor
nop
aaa
push
fsubp
cld
mov
sbb
cmc
adc
xchg
adc
in
lock
add
or
sub
in
dec
inc
sahf
sbb
aas
sahf
xor
rcll
jle
cmpb
and
pusha
adc
xchg
mov
hlt
jle
scas
add
sub
enter
mov
stc
mov
pop
jge
add
cmpsl
push
ljmp
jno
xchg
jae
lea
mov
and
repnz
shll
in
scas
dec
cmp
mov
fisttpl
movl
pop
mov
insb
mov
mov
pop
in
dec
jb
adc
cltd
mov
movsb
adc
mov
lcall
dec
lcall
iret
mov
daa
lret
push
push
inc
mov
xor
in
enter
mov
rol
cmp
dec
mov
shrb
inc
pop
jno
sub
lds
negl
mov
add
inc
icebp
add
dec
add
lcall
cltd
fwait
push
movzbl
xchg
movsl
in
pusha
sbb
adc
in
cs
jmp
cltd
inc
xchg
loopne
fdivr
mov
cmp
add
pop
dec
mov
mov
and
push
enter
lret
xor
fcoms
xchg
push
mov
repz
mov
inc
xchg
xchg
push
push
sbb
cld
mov
into
fbstp
ja
loop
mov
popf
xor
jbe
dec
fs
push
movsl
fbstp
jg
out
and
push
dec
stos
jns
mov
cmpl
jne
fsubl
cmp
mov
call
cmpsl
fimull
pop
and
jo
mov
push
adc
aad
out
jno
jl
xchg
jle
jns
loopne
icebp
sbb
outsb
orl
leave
dec
daa
inc
mov
push
xor
or
inc
test
out
xchg
adc
adc
add
or
mov
ds
sbb
out
push
and
or
mov
pop
dec
xchg
ds
dec
lret
or
lret
xchg
mov
cmp
push
mov
fstpt
mov
dec
mov
pop
mov
adc
repnz
cmpsl
rcrl
jbe
out
int
push
or
in
fsubs
popf
mov
cmpsl
push
out
ja
loopne
or
lea
test
fiaddl
xchg
add
and
lcall
fwait
stos
ss
out
loop
inc
adc
dec
movsl
cmp
or
std
dec
add
movsb
movsb
les
xlat
pop
mov
mov
int3
xor
call
add
es
das
lahf
jno
cld
mov
push
mov
fxch
add
ja
pop
jb
pusha
xchg
test
aam
adc
icebp
or
out
push
jne
mov
das
ret
lds
shrb
scas
mov
and
mov
das
test
test
in
test
fcomp
inc
adc
je
lods
andl
scas
cmp
or
sbbl
add
popa
movsb
cli
iret
pop
test
inc
jmp
xchg
cs
xchg
push
mov
ret
out
mov
and
lcall
dec
es
push
imul
jg
xchg
pop
je
fstpl
inc
xchg
sub
mov
sub
jg
push
cmc
ficompl
or
sub
push
jge
or
jp
inc
in
mov
mov
pop
nop
ss
out
dec
in
shll
ja
stc
repz
jecxz
aad
leave
inc
pushf
lods
mov
shlb
dec
call
mov
das
shll
pop
pusha
mov
xor
mov
xchg
mov
jle
jne
jne
jge
mov
and
push
fsts
mov
ret
mov
cmp
fidivrl
or
ror
push
xchg
sub
in
xor
in
push
push
repnz
cmpsl
cmp
jecxz
fidivs
paddusb
lods
jp
aam
jg
jp
ret
jno
or
rorb
insl
repnz
xor
orb
mov
sahf
call
mov
rcrb
insl
add
sub
or
inc
jae
add
adc
push
sub
jecxz
out
jg
leave
cwtl
in
cmp
sbb
ds
in
lods
push
pop
mov
mov
mov
repnz
stos
add
add
add
mov
mov
mov
sarb
or
aad
ljmp
les
insb
adc
out
mov
pop
cmp
cmp
sub
sub
jge
lods
push
adc
adc
push
cmp
mov
ret
pop
mov
fimull
xchg
mov
int
cmp
loopne
insl
sub
dec
push
xor
cmp
imul
push
push
outsl
push
sar
mov
sub
jl
mov
cmp
mov
in
insb
mov
push
inc
out
jmp
xchg
dec
das
fidivs
ret
ja
adc
adc
sub
mov
mov
cmp
jbe
add
andl
int3
lea
ret
rclb
mov
xchg
jae
cwtl
or
rclb
shl
test
int3
add
pop
jbe
je
mov
in
lcall
lcall
and
movsb
lcall
pop
and
and
scas
cmp
fwait
cmp
fnstcw
dec
cmp
pop
cmp
in
rcrl
fdivrs
cwtl
leave
gs
pusha
insb
scas
sub
fildl
enter
inc
mov
setns
inc
mov
mov
lock
jbe
inc
std
cmp
sti
add
sbbb
xor
jmp
pop
outsb
and
adc
jp
pop
nop
pop
jp
stos
cmc
push
mov
mov
fsts
int3
sub
test
cli
sub
pop
sbb
mov
inc
movzwl
loope
xchg
xor
test
stos
push
mov
mov
shlb
push
loope
sbb
xchg
sub
mov
sbb
into
xorl
outsb
insl
iret
sbb
outsb
cmp
pusha
mov
insb
fwait
jbe
cli
in
push
fnstenv
push
jb
adc
fsubrs
push
pop
scas
xchg
xor
jmp
jbe
push
loop
es
stos
ds
xchg
mov
adc
jecxz
test
push
mov
adc
mov
xchg
shll
je
and
fcmovnbe
ja
pop
sti
lahf
push
adc
and
pushf
insb
push
jne
loope
jmp
gs
mov
aad
ds
and
arpl
pop
sti
cld
inc
test
inc
mov
std
ljmp
popa
dec
in
movsl
rcrl
notl
test
lret
cld
and
mov
lret
sarb
pushl
xchg
add
lds
addr16
and
lea
test
mov
inc
pop
test
cmpsl
cmp
movsl
lahf
les
shrb
xchg
shrl
test
test
mov
xchg
adc
notb
jmp
pushf
pop
push
or
ljmp
add
jno
dec
cmp
mov
insl
adc
roll
sbb
int
orb
jge
xor
adc
rcl
fimull
cs
fmull
jg
icebp
es
xor
and
or
cmp
pushf
andb
sti
leave
pusha
sub
fwait
out
mov
cmp
rcll
mov
test
dec
sbb
cmp
js
test
lret
and
mov
mov
push
lods
mov
fstl
inc
mov
out
popa
adcl
scas
and
cld
outsl
cmpsb
lret
push
decb
mov
cmp
ret
lret
in
insb
fwait
push
sbb
lcall
push
jbe
test
xchg
push
scas
rcl
aam
cmp
sub
std
pop
inc
mov
pop
cld
fnstcw
jecxz
dec
sbb
xchg
adc
mov
ret
ficoms
xchg
mov
int3
dec
add
int3
push
sub
sbbl
jp
inc
aam
inc
xchg
fs
outsb
and
rcrl
mov
clc
insl
in
or
ficompl
mov
loope
sub
xchg
std
aas
out
fcomps
sub
jp
rclb
dec
loop
jae
or
pop
icebp
sarl
push
ret
add
xor
shr
outsb
pop
mov
mov
add
fisttpll
sarl
adc
mov
int
ret
leave
pop
cmp
fcomps
mov
cmp
pop
push
imul
mov
cmp
push
pop
enter
push
imul
sarb
lcall
cltd
push
or
outsb
dec
cmpsb
sbb
fisubrs
loop
pop
adc
mov
mov
cmp
adc
xchg
mov
adc
mov
xor
in
int
pop
add
dec
in
jecxz
fdivrs
movsl
push
push
push
xchg
pop
sub
xor
movsl
push
xchg
xor
ljmp
mov
cs
in
test
rorl
movsb
mov
aad
lock
and
jb
insl
out
mov
jecxz
arpl
cmpsl
out
sub
or
xchg
cmp
sbb
mov
shll
fidivrs
add
jno
push
xchg
push
out
cmpsl
cmp
mov
repz
fldcw
mov
testb
jp
rolb
outsb
or
imul
sbb
pop
enter
stos
sub
pushf
sbb
pop
mov
popf
js
ret
adc
mov
fsubrs
repz
inc
lret
push
fwait
adc
xchg
sub
mov
sub
sub
mov
dec
or
sbb
xor
cmpsb
and
inc
fidivl
loopne
mov
ss
fsubrs
sbb
xchg
addr16
xchg
or
into
or
and
stos
out
mov
lcall
pusha
mov
in
mov
or
loopne
in
mov
mov
mov
js
and
lcall
ret
inc
jbe
inc
pop
xchg
fmul
loope
jne
mov
dec
mov
test
fistps
mov
in
mov
cmp
imulb
imul
jecxz
in
into
cmp
push
cwtl
jne
cmpsb
dec
push
sub
je
dec
les
lahf
pop
push
jno
adc
in
cs
out
pop
xor
push
outsl
pop
insl
hlt
pop
sbb
ror
sub
aam
test
jbe
int3
mov
rcll
sahf
cmc
mov
fdivs
cmpsl
data16
and
shr
sub
sbb
test
xchg
pop
aaa
or
movsl
mov
cmpl
outsb
enter
in
das
inc
inc
int3
pop
insb
in
mov
and
call
and
mov
lahf
jns
adc
mov
xor
mov
jae
push
fidivrs
jl
ret
incl
shll
les
and
cmp
xor
xorl
out
sub
iret
dec
addb
push
outsl
push
cltd
fidivs
jne
lods
and
rcrl
pop
jbe
xchg
rcrb
mov
push
in
cmp
shll
loopne
fcompl
out
push
jne
xor
or
cmpsl
mov
ret
sbb
shr
test
cmpsl
or
loopne
pop
mov
test
stos
jl
fisubrs
jbe
fs
shr
notl
rorl
or
repz
mov
fists
cmp
jmp
and
or
or
loopne
xchg
xchg
sub
lock
insl
scas
mov
jmp
push
or
bound
push
adc
aam
adc
inc
int
dec
lods
lods
push
cmp
subl
inc
mov
or
xor
push
movsl
dec
adc
clc
dec
sub
icebp
fcmovu
cli
dec
mov
push
pop
mov
jecxz
mov
loope
sti
dec
mov
lods
ret
ss
inc
daa
and
fs
cwtl
stos
scas
popa
cli
out
push
mov
inc
cli
inc
xor
push
inc
out
or
jmp
xchg
add
enter
adc
fwait
imul
cli
sbb
cmp
aam
leave
cmp
jmp
inc
add
dec
fidivrs
push
adc
in
das
push
adc
mov
mov
ds
adc
ds
bound
cli
adcl
xor
xor
cmp
xchg
and
push
lods
pop
cmp
in
cmpsl
add
and
push
push
je
mov
lret
or
xor
loopne
xchg
insb
push
insb
int3
xchg
pop
cs
pusha
push
sub
mov
das
add
outsb
js
leave
and
sub
adc
outsl
mov
mov
cld
out
das
mov
insb
dec
lcall
imul
xchg
sbb
jns
rorl
or
jo
mull
out
push
fsubs
xchg
mov
pop
mov
in
jge
pop
inc
or
ja
lret
push
lret
adc
incb
jae
fwait
jnp
sbb
mov
es
or
adcb
testb
sti
inc
lahf
shl
dec
pop
ret
mov
popa
mov
cmpb
push
movsb
push
mov
test
int
mov
rorl
inc
add
scas
rcll
notb
out
fcompl
push
sahf
call
popa
pop
mov
and
fwait
outsl
pop
in
xabort
jl
ret
xchg
sbb
push
or
cmpl
xchg
imul
insl
and
mov
orb
dec
pop
ret
ficoms
mov
cmp
sti
dec
pop
fidivs
in
arpl
xchg
outsl
lods
pushf
lds
gs
adc
inc
push
inc
insl
and
mov
xor
mov
divl
imul
and
jns
xchg
and
cmp
stos
inc
pop
xchg
cmp
xchg
rorl
pushf
pop
xor
lods
lahf
mov
ret
jle
sbb
pop
leave
ret
cld
and
inc
xchg
sub
add
test
enter
lahf
adc
mov
jb
jne
imul
popf
jl
pushf
test
ret
sti
stos
jecxz
add
xchg
dec
shrb
inc
insl
sbb
mov
or
add
pop
lea
and
dec
subb
add
jle
adc
repz
mov
inc
pop
outsb
jl
lret
sbb
sahf
lods
push
repnz
popa
sbb
ljmp
inc
das
pop
and
ret
fimull
and
into
and
rclb
jle
adc
popf
add
fiaddl
bound
dec
xchg
dec
xlat
add
daa
out
mov
push
mov
scas
xchg
jno
inc
pusha
xchg
dec
mov
lds
add
xchg
lds
es
iret
into
hlt
push
inc
insb
test
jg
or
dec
xlat
fucomi
aas
fnstcw
incl
daa
xchg
lret
enter
aad
push
jbe
xor
in
inc
mov
dec
adc
in
js
xor
fidivs
xchg
lret
mov
out
ljmp
jg
js
jge
stc
leave
fdivl
xchg
in
ljmp
cld
lahf
test
mov
cmp
or
inc
cmc
inc
cmpsl
dec
sarl
mov
in
adc
test
iret
push
shr
mov
insb
xchg
mov
push
imul
test
fstps
xchg
inc
xor
lods
dec
sti
pop
call
and
fsubrl
dec
testl
dec
jne
stc
pop
jle
adc
inc
jns
cmpsl
mov
adc
pop
inc
cld
jecxz
pop
icebp
aaa
push
pop
not
cmp
mov
jne
mov
iret
xor
or
mov
mov
arpl
loop
push
mov
rclb
roll
lret
sub
fcoms
loope
sti
lds
inc
repz
loop
fistpll
pushf
cwtl
mov
pop
loopne
sub
push
aas
push
push
adc
fs
nop
and
fs
in
jmp
cmp
push
inc
jle
jbe
pop
jno
and
or
aam
mov
les
insl
cmp
int
push
js
pop
in
pop
push
pushf
xor
out
test
mov
lds
adcl
add
mov
lcall
rclb
test
pop
bound
push
clc
jns
mov
xchg
ss
xchg
jge
js
push
push
addr16
imulb
js
xchg
inc
push
adc
sub
push
imulb
dec
lret
clc
nop
mov
push
lret
aas
dec
fists
xchg
scas
aas
sbb
out
push
pop
sbbl
fs
xchg
mov
pop
daa
mov
aam
nop
jae
icebp
out
sti
aam
fisubs
jle
and
out
lock
dec
or
fld1
xchg
sbb
push
stc
outsl
shrl
inc
int
addb
faddp
jo
ret
push
imul
orl
loop
cmpsb
call
dec
outsl
jb
jecxz
pushf
mov
xor
push
sbb
xchg
xor
scas
ds
lret
test
in
sub
inc
js
lahf
nop
add
nop
aaa
bound
loope
dec
adc
lods
push
xlat
mov
aam
scas
es
sbb
insb
int
fs
test
xor
mov
dec
fstpt
dec
outsb
shr
repnz
cmp
fwait
adc
mov
and
hlt
push
jns
push
adc
sbb
sub
mov
repnz
adc
cwtl
fists
std
leave
inc
lock
sti
andb
jle
imul
cmp
lods
inc
xacquire
jg
push
jl
jecxz
jns
sub
mov
aaa
mov
in
jl
add
test
iret
fs
roll
xchg
adc
mov
in
rolb
push
sti
mov
imul
sub
or
pusha
test
aam
xchg
loop
xchg
sbb
lahf
dec
enter
test
push
mov
clc
testl
pop
jo
jle
enter
push
mov
jns
xor
pop
loopne
pop
call
push
xor
or
sarl
lcall
xlat
inc
test
cs
sbb
mov
call
adc
arpl
jnp
jle
mov
lret
in
jo
add
pop
xchg
mov
popf
sbb
outsl
lahf
inc
cmpsb
movb
jp
fisubs
mov
and
ret
loop
iret
sub
dec
notb
cld
inc
add
or
mov
aaa
mov
jl
mov
mov
pop
mov
stos
imul
push
mov
and
std
jmp
mov
push
xchg
or
arpl
movl
mov
fisubs
mov
sbb
ss
jo
rcll
mov
call
sub
movsl
jnp
inc
sbb
sbb
pop
call
int3
and
dec
std
subl
mov
lds
add
lds
sbb
push
mov
repnz
push
lea
inc
fsubrl
push
insb
push
popf
pop
bound
cmpsb
fwait
pop
movsl
xchg
xor
push
xlat
inc
add
test
jbe
cmpsb
or
mov
sub
in
dec
pop
rol
mov
cmc
mov
iret
push
sbb
jp
add
cmc
inc
sub
and
fwait
or
or
insl
add
incb
xadd
xchg
nop
inc
inc
dec
inc
ds
pop
push
xchg
out
test
sbb
fldt
or
and
cli
adc
js
sbb
out
rcrb
inc
push
pop
jge
loopne
inc
mov
or
lds
push
inc
test
pop
outsl
cmpsb
adc
push
inc
aas
cltd
mov
push
cltd
fcmovb
mov
push
pop
lcall
nop
xor
mov
icebp
jge
adc
rcll
adc
pusha
push
jmp
inc
call
popf
or
mov
adcb
mov
pushf
fnstsw
ret
pushf
fsub
jmp
mov
test
jl
mov
repnz
out
mov
icebp
mov
shll
shlb
xlat
ss
pop
dec
aam
push
leave
mov
cld
cld
push
sub
or
scas
les
lret
mov
cmp
repz
jg
cmp
xchg
adcl
mov
inc
sub
cltd
pop
mov
pop
sub
jl
add
mov
loope
daa
mov
stc
and
jae
decl
repz
fmull
mov
clc
xchg
out
lods
dec
jns
cmp
jecxz
ret
sbb
xchg
pop
fdiv
xchg
in
mov
add
push
nop
push
inc
push
push
lock
pop
mov
add
cs
lcall
js
sbb
sbb
mov
adc
daa
adc
lret
add
mov
insb
rorl
cmpb
cld
pop
push
mov
or
aas
push
jg
xor
fwait
sub
in
xchg
mov
ss
xchg
sub
dec
dec
inc
push
sub
test
sti
int3
mov
subl
in
dec
sbb
jns
pop
lock
insl
dec
fdivrl
lea
lcall
mov
jle
imul
dec
push
add
fisubl
js
mov
mov
mov
mov
pop
mov
and
mov
mov
ret
cmc
pusha
jge
ret
in
pop
pop
sbb
pop
mov
cmp
cld
cmp
adc
std
xchg
sub
lret
movl
fbstp
dec
les
add
pop
jb
sbb
mov
cmp
iret
mov
push
jns
pop
inc
and
jmp
or
test
notl
icebp
cwtl
mov
idivl
mov
clc
and
adc
aad
push
sahf
xor
cli
pushf
xor
in
fisubs
cmpl
int3
mov
add
insb
add
cli
lods
jmp
ds
and
outsl
fists
pop
and
cmpl
outsb
mov
fstps
and
jno
mulps
in
xchg
sahf
mov
dec
jecxz
idivb
sbb
dec
push
inc
in
out
jae
xchg
push
sbb
popf
dec
xchg
dec
add
in
mov
js
xor
pop
and
test
ljmp
test
insl
aam
int3
xorl
push
lret
inc
lret
xchg
or
xchg
shlb
push
cli
sbbl
push
jg
inc
repz
pop
and
or
dec
pop
bound
rclb
popa
add
jb
enter
lds
ja
rol
adc
cmp
inc
pushf
addr16
shlb
jp
and
in
inc
and
rcrl
pop
sahf
push
insb
mov
mulb
pusha
push
es
mov
and
imul
mov
lcall
mov
lock
or
cmp
sub
adcl
repnz
mov
jmp
popa
mov
shlb
xchg
lret
mov
sbb
das
shll
and
xchg
mov
mov
sub
inc
push
nop
push
xlat
jns
leave
fwait
mov
xchg
pop
ret
push
lcall
sbb
mov
jb
pop
cltd
jo
mov
sub
adc
mov
pop
test
fsts
je
fidivrl
dec
add
or
scas
xchg
fwait
dec
call
sbb
dec
dec
pusha
movsb
pop
dec
jmp
mov
aaa
imul
iret
cld
pop
or
fstp
inc
push
and
sti
popa
in
test
repz
adc
push
xor
jecxz
imul
mov
fiaddl
xchg
rcll
lock
jge
push
repnz
movsb
aaa
adc
and
sbb
xchg
sub
cmp
in
add
xchg
cltd
jo
scas
out
fcoms
test
shll
dec
arpl
icebp
sbb
or
lods
cmp
int3
jbe
pop
xor
xchg
insb
test
cmc
fidivrs
and
inc
imul
inc
xchg
push
in
iret
pop
sahf
rcrb
cmp
sub
cmp
loop
les
jecxz
nop
fdivl
push
subb
xchg
insl
sub
ljmp
pop
test
push
hlt
inc
ds
lahf
mov
dec
rclb
jnp,pn
mov
andl
das
test
in
mov
adc
mov
sub
xlat
mov
repz
test
andb
push
shrb
push
jae
and
and
std
inc
into
inc
and
rcrb
jo
fisubl
jb
fsubrl
xchg
and
fwait
jns
xorb
jl
shlb
dec
xchg
add
test
adc
daa
leave
push
out
test
jp
push
enter
dec
mov
scas
out
idivl
push
out
add
sbb
mov
addr16
mov
sub
and
inc
jmp
jecxz
adcb
fnstenv
sbb
lock
push
sarl
mov
vunpcklps
and
push
mov
ljmp
add
mov
lret
mov
insl
jmp
outsb
outsb
jecxz
adc
iret
cmpsb
out
jg
icebp
mov
je
cltd
inc
push
adc
stos
fdivs
mov
push
fsts
pavgw
fs
adc
cmp
dec
mov
cmp
jmp
ja
sub
and
jl
pop
mov
fstpt
jge
jo
mov
pop
add
mov
cmp
ljmp
sub
sub
insl
addr16
xchg
mov
mov
jg
inc
loope
jmp
rcrl
xlat
rorb
mov
stc
cmpl
xchg
sub
mov
add
fdivrl
cwtl
xchg
das
cmp
ret
filds
shr
jge
cs
adc
adc
mov
mov
xchg
in
mov
aad
jle
pushf
out
fidivl
sbb
cli
cmpsb
test
iret
and
fbstp
sbb
outsb
jl
jnp
pop
mov
or
shr
mov
mov
jns
inc
pusha
sbb
loopne
es
pop
push
adc
loope
inc
int3
jl
xorl
lock
mov
dec
adc
pop
enter
pop
sub
sahf
bound
xor
mov
sbb
jecxz
mov
arpl
or
pop
nop
cmpsl
ljmp
xor
pop
data16
shlb
pop
scas
shll
ss
push
sbb
lock
cs
mov
and
push
loope
cltd
and
add
mov
or
mov
dec
pop
sti
out
aam
add
mov
xchg
push
mov
clc
pop
divb
or
jecxz
es
or
lret
fsts
and
mov
gs
pop
pushf
test
adc
adc
mov
mov
push
cmp
cmpsb
add
inc
add
cmpsl
cmp
push
mov
mov
cmp
loop
sbb
sub
repz
popf
cmp
or
jp
mov
jg
jbe
mov
rcll
stc
sahf
subl
xor
orb
dec
or
pop
inc
mov
mov
xchg
out
sbb
add
mov
or
jb
outsl
fsubl
adc
mov
push
or
push
loopne
or
jle
stc
cmpsb
cmpsl
inc
gs
neg
push
cmp
sbb
pop
sbb
push
sarl
mov
sbb
mov
dec
push
xlat
push
call
mov
int3
gs
push
inc
cmp
xor
jl
lcall
aaa
push
push
or
fnstenv
fdivs
pslld
push
and
jo
cs
pop
je
cmp
sub
sbb
scas
rcrl
les
test
clc
fldln2
pop
cmc
jo
mov
iret
dec
sbbb
cmp
jb
mov
andb
jno
jnp
into
orl
ret
push
shll
mov
push
mov
jnp
dec
mov
sbb
cmp
mov
hlt
cmpsl
sahf
pop
mov
shll
pop
mov
cmp
mov
arpl
nop
add
movsl
shll
imull
test
stos
dec
pop
call
testl
and
das
push
cwtl
and
les
ds
xlat
fdivl
insl
in
lahf
adc
ljmp
imul
or
inc
push
inc
xchg
fisubl
mov
push
push
sub
test
cmpsb
push
repz
or
pop
in
out
push
sti
out
add
fistpll
and
jo
sub
insb
mov
inc
inc
in
xchg
xor
mov
inc
mov
test
xchg
sbb
jge
jge
pop
imul
test
dec
cpuid
mov
sbb
push
jmp
aad
cltd
adc
jge
xor
jne
pop
shrb
andb
aaa
pop
enter
lock
sahf
xchg
in
dec
sbb
pop
shlb
inc
fimull
test
rclb
jne
rorb
mov
pop
push
push
xchg
jne
and
mov
push
and
xor
push
rcr
mov
not
repz
ss
shrl
stos
inc
fldl
call
xor
cs
fldt
mov
xchg
aam
js
add
rolb
sar
xchg
add
lcall
sbbb
mov
repz
add
mov
dec
pop
jns
out
and
movsl
test
push
push
jno
sub
shl
mov
pop
cmp
shl
mov
cmp
xlat
push
sarb
xchg
test
test
pop
mov
lods
cmp
pop
jbe
add
pop
or
add
dec
int
hlt
push
ljmp
push
push
stos
inc
movsb
pop
jg
ret
push
pop
mov
aam
repz
negb
les
das
scas
xor
or
lods
inc
stos
xchg
mov
in
or
ja
ficomps
psubsb
dec
jns
adc
imul
aas
jbe
fwait
lret
in
data16
fsubl
mov
and
lcall
dec
icebp
mov
repnz
test
add
push
xchg
sub
inc
mov
push
sahf
pusha
mov
rcl
add
lret
call
or
pop
pop
pop
dec
cmc
scas
jo
adc
stos
pop
popf
xor
loopne
dec
xchg
mov
mov
xlat
adc
loope
xor
inc
push
sub
rcr
dec
in
repnz
push
push
mov
cmpsb
mov
lds
adc
sub
in
rol
pop
push
pusha
lods
inc
xchg
sbb
cmp
push
or
push
ljmp
jno
lods
mov
mov
int
xor
fs
xchg
lock
adcl
jnp
sbb
stos
imul
scas
call
dec
lahf
sahf
sub
mov
xor
cmp
shlb
adc
push
mov
lods
add
inc
mov
sub
inc
mov
xchg
sub
mov
inc
sub
mov
dec
xor
sbb
mov
mov
fistl
jmp
xor
jno
pop
movsl
insl
ja
jle
and
fs
stc
cmp
les
shll
clc
mov
pop
cld
add
xchg
sub
or
in
xchg
inc
mov
or
push
xor
mov
and
inc
mov
imul
scas
fsubrs
mov
jge
sbb
dec
loope
jp
mov
ja
mov
pusha
pop
inc
push
flds
mov
and
rorb
dec
shlb
add
inc
or
dec
xlat
stos
adc
fldl
push
mov
mov
inc
negb
mov
xchg
in
lret
pop
xchg
or
cld
xchg
mov
mov
insb
rcll
cmp
jnp
sarb
jecxz
cmp
and
or
and
pushf
cs
ljmp
mov
data16
xchg
jle
inc
lock
xor
xor
lret
pop
shlb
dec
inc
call
add
push
stc
in
push
lcall
dec
or
sti
mov
add
subl
ja
pop
sub
inc
out
or
push
mov
sub
movsl
mov
lret
pop
and
addl
cmp
dec
sub
pop
pop
xchg
lret
pop
in
pop
and
out
mov
loop
jecxz
inc
add
int
inc
and
adc
cmp
mov
pop
add
or
mov
sti
and
shr
jbe
xchg
add
insl
mov
mov
sub
mov
aam
sbb
prefetchnta
add
fucomp
adc
nop
fwait
mov
and
xchg
mov
rorl
sub
popf
fs
scas
clc
cmpsl
shll
fsubrs
repz
insb
rcrl
inc
data16
sbb
mov
fildl
sub
cmp
test
sbbb
xchg
mov
loope
add
sub
jnp
ss
fidivs
xchg
cwtl
pop
ret
push
sti
fwait
sbb
incl
mulb
sub
out
mov
dec
xor
sub
xchg
int
ficompl
mov
mov
jp
pop
cmp
mov
pop
inc
mov
fs
mov
loope
fisubrl
test
int
mov
inc
sbb
je
dec
mov
int3
ficoms
mov
daa
out
inc
sbb
shrb
pop
loopne
pop
loop
dec
mov
and
mulb
stos
jp
in
xchg
fwait
ss
lahf
jnp
lcall
sub
in
dec
int3
fimuls
push
pusha
lock
fwait
sub
shlb
out
aam
imul
imul
in
mov
push
repnz
iret
mov
ret
data16
xchg
mov
movl
mov
xchg
adc
or
ja
test
or
hlt
sbb
jle
cmp
pusha
cmpsb
mov
mov
stc
inc
add
enter
jb
push
in
aad
mov
mov
cld
inc
lock
mov
or
insl
add
rcll
push
dec
xchg
jle
and
push
push
jmp
xchg
sbb
mov
sbb
dec
sbb
nop
jns
push
push
push
clc
out
jo
test
adc
mov
fstl
stos
add
adc
pop
dec
add
js
in
fimuls
pop
insb
lret
les
mov
and
shll
sub
cs
dec
jns
mov
pop
sub
lahf
lea
mov
dec
mov
add
dec
hlt
test
mov
nop
pop
mov
xchg
nop
mov
sub
push
mov
adc
mov
xor
add
rolb
jmp
out
jle
xor
or
dec
in
mov
out
jmp
aam
hlt
or
test
cmpsl
dec
jne
leave
fldpi
and
loopne
or
sub
xor
loope
out
xchg
gs
xor
into
and
arpl
push
push
pop
cmp
fcmovnb
dec
popa
inc
mov
cmc
shlb
call
cmp
iret
insb
fisubl
xor
in
dec
loope
in
fildl
pop
lahf
adc
adc
je
mov
rcrl
stc
popf
inc
mov
push
call
cltd
data16
cltd
push
test
xchg
dec
jecxz
in
sub
cs
outsb
jae
in
dec
pushf
mov
insb
jno
cmc
mov
pusha
push
push
popa
mov
or
or
jbe
xorl
fistpl
aas
add
inc
cltd
das
lret
js
pop
dec
loope
xchg
mov
out
imul
ficompl
addl
ret
lret
xor
mov
call
push
pushf
xchg
add
cmp
mov
jo
sub
les
mov
xor
xchg
push
sbb
fbstp
xorb
movsl
xchg
mov
shrl
lods
inc
cltd
icebp
add
repnz
movsb
fucomp
and
cmp
push
sbb
in
lret
and
imull
add
mov
aaa
sbb
xchg
jmp
pop
pop
fsubs
mulb
js
out
dec
mov
mov
test
aaa
push
and
lcall
adc
popa
inc
dec
sbb
js
jg
stos
arpl
mov
iret
lods
jbe
push
pop
addr16
jne
sub
xchg
xchg
sub
adc
inc
mov
test
sbb
lods
add
sbb
push
adc
pop
cmp
mov
pop
aam
mov
dec
jb
cmp
ret
dec
les
in
and
xor
jl
scas
xor
jns
andl
and
push
mov
lcall
leave
xlat
push
adc
jno
xchg
and
in
test
int3
mov
js
outsb
or
incl
in
fmulp
push
fcompl
ljmp
lock
xchg
adc
dec
lds
xchg
sbb
in
stos
push
lcall
inc
rol
in
jmp
mov
int3
rcl
sub
repnz
nop
aam
and
cmc
subl
lret
lcall
xor
loopne
mov
jnp
inc
lods
add
repnz
dec
cmp
lcall
push
lods
cmp
xchg
or
sub
scas
push
loope
sbb
icebp
mov
jmp
clc
xchg
xchg
ds
jne
mov
jmp
cs
mov
pop
sub
mov
dec
pop
scas
jge
xor
and
and
imul
dec
mov
es
adc
test
xchg
shrb
pop
cmp
cmc
xchg
aas
aaa
scas
push
add
mov
mov
jno
inc
mov
repz
xchg
cwtl
jbe
inc
mov
outsl
outsl
aaa
test
adc
cmp
jbe
jge
inc
es
int3
imul
lods
add
mov
popf
sbb
adc
iret
out
adc
lods
das
mov
xor
mov
mov
imul
mov
mov
test
or
int3
mov
push
fldpi
pop
imul
or
jne
pop
shlb
xchg
loope
push
jle
sbb
montmul
cmpsb
subl
sub
lock
and
test
add
icebp
mov
add
mul
fnstsw
mov
dec
mov
pop
mov
dec
pop
push
mov
or
dec
rcrl
push
icebp
movsb
jle
mov
push
in
test
cli
inc
jns
std
add
add
movlps
aaa
orl
dec
mov
cmp
sub
xorl
pop
sbb
ret
notl
outsl
addb
in
push
leave
sub
aam
jle
fdivp
push
ljmp
mov
roll
addb
xchg
push
fs
stos
xor
lcall
pop
push
insl
stc
and
jge
cmc
in
jp
enter
inc
nop
cltd
dec
stos
in
cltd
adc
or
movsl
inc
insb
mov
dec
dec
mov
push
xor
add
mov
das
psadbw
and
mov
mov
shl
movsl
sarb
cmp
mov
in
mov
and
int
repz
leave
test
cmp
sub
mov
push
repnz
push
fstl
push
scas
daa
mov
xchg
aas
ret
cmp
in
push
sub
neg
cmpb
or
into
gs
ss
sbb
std
sbb
jl
cli
xchg
pop
sub
sbb
sti
bound
add
cmp
cmpsb
daa
and
mov
in
jns
dec
xchg
mov
pushf
aas
jmp
pop
add
repnz
jg
fdivrl
push
insl
jbe
cmp
xchg
mov
insb
out
cmpsb
jecxz
mov
ror
cli
pop
push
jp
imul
xchg
cmpsl
sbb
cs
mov
pop
inc
jnp
xor
ffree
cwtl
push
jne
cmpsb
add
jg
lods
and
dec
xchg
test
sbb
jb
sub
and
and
and
cmp
or
inc
pop
sbb
outsb
lods
mov
adc
jp
es
cmpsl
mov
mov
ret
dec
outsb
jmp
cltd
stos
mov
into
sbb
mov
sbb
mov
call
pop
fldt
pop
push
inc
xchg
add
ds
sub
or
lods
sub
cltd
ja
push
out
into
shll
jno
cmp
mov
xchg
aas
xor
jbe
shll
dec
and
scas
xchg
jp
pushf
ret
xchg
sbb
xor
loope
or
mov
mov
add
push
add
jg
cmp
and
pop
cmp
into
sub
jg
getsec
into
jle
movsb
mov
add
cmp
push
dec
pushf
mov
lock
xchg
insl
dec
mov
adc
shl
rol
cltd
xor
jb
arpl
cmp
pop
jle
out
test
sub
or
dec
and
push
xor
pop
push
scas
or
les
out
or
add
pop
test
cmp
inc
xchg
aaa
stos
sub
popf
add
xlat
shr
cmc
mov
hlt
dec
or
jge
in
sbb
sbb
push
sbb
ficomps
mov
lret
mov
jo
cmp
mov
inc
sbb
rcrl
jb
scas
jb
outsb
lret
mov
js
pop
ret
mov
fldenv
mov
mov
jmp
and
ja
mov
mov
push
fwait
nop
inc
cld
mov
and
cmp
lods
outsb
add
fiaddl
dec
or
mov
adc
aaa
lahf
xor
jae
xor
xchg
mov
push
sbb
incl
xor
mov
jae
adc
imull
in
cmpsb
xor
fprem1
mov
dec
fs
pop
lea
hlt
mov
cmp
test
pop
mov
push
xor
push
jmp
and
jno
mov
orb
xor
into
mov
jo
lret
movsl
pop
testb
sub
push
and
xchg
inc
clc
or
jae
stos
fwait
hlt
fldl
cmpsb
sti
out
or
sbb
test
lcall
mov
ja
test
mov
lret
dec
int
mov
fidivl
mov
adc
mov
xchg
xchg
mov
xchg
cmp
fiaddl
xlat
cmp
in
test
inc
ljmp
pop
pop
mov
shll
sahf
stos
mov
jnp
and
out
dec
mov
fmull
mov
clc
sbb
cmp
test
and
lret
in
xchg
aaa
xchg
imul
inc
nop
mulb
mov
cltd
jle
dec
pop
shll
cmp
cmp
lea
fmull
negl
sub
xchg
mov
into
mov
leave
mov
test
lock
int3
lea
mov
mov
sbb
js
xchg
xor
adc
xorb
xchg
ljmp
cmp
cmp
pop
fs
call
cmp
mov
dec
adc
jne
sbb
fucomip
xor
xor
mov
inc
sti
fwait
mov
out
aas
push
sub
das
out
cmpsb
imulb
aad
jnp
test
or
and
test
daa
push
scas
mov
loopne
sbb
pop
mov
test
jp
add
mov
sbb
cs
push
dec
sub
jge
jle
scas
pop
iret
daa
xchg
jmp
stos
mov
mov
bound
dec
inc
xlat
loopne
add
popf
push
mov
cmp
leave
int
mov
push
mov
jp
xor
dec
shll
and
adc
xor
cmp
inc
popf
jnp
out
mov
xchg
jns
testl
pop
outsb
sbb
jmp
ds
jg
pop
lret
lret
repnz
add
xchg
mov
out
clc
bound
and
pop
inc
les
cld
push
xor
je
repz
xchg
sbbl
add
mov
inc
call
pop
xchg
fwait
repz
repnz
jl
cltd
cmpl
xor
scas
fs
dec
inc
sbb
stos
hlt
cmp
loopne
cmpb
daa
andl
xor
cs
xchg
mov
mov
push
orl
inc
sbb
xor
clc
or
pop
addr16
xchg
notl
rol
cmp
pop
bound
mov
mov
mov
lret
xor
dec
in
je
cltd
in
pop
cmp
xchg
sbb
or
mov
xchg
sub
cmp
mov
and
roll
enter
inc
xor
or
or
repz
lock
shr
test
xchg
rol
mov
xor
jno
fisubrl
inc
stos
sub
aaa
xchg
dec
fwait
xor
fwait
sahf
in
inc
out
mov
fsts
mov
mov
aaa
sub
in
pop
lock
sbb
pop
cmp
mov
push
mov
das
pop
ret
sub
push
xor
adc
dec
and
cmp
es
mov
sti
ja
outsb
adc
stos
cmp
je
test
push
lcall
cld
rorl
push
mov
sub
push
xlat
repz
mov
dec
push
inc
dec
adc
push
shlb
movsb
mov
cmp
pop
in
inc
aas
xor
loop
cwtl
pop
insl
pop
inc
xchg
rcl
into
push
fstpt
pop
sarb
xor
adc
jge
fwait
jbe
sahf
jge
sub
fstps
incb
call
xor
or
pop
into
xlat
and
cmpl
adc
mov
add
adc
nop
jle
adc
hlt
shr
pop
imul
or
sub
pop
test
mov
mov
jbe
mov
pop
xor
jp
add
daa
pushf
fidivs
std
inc
push
mull
xchg
stos
fidivrl
jecxz
aad
arpl
inc
js
jmp
sahf
xor
aas
sbb
push
jae
jle
push
mov
icebp
add
cld
js
inc
stos
pop
pop
sub
adc
lock
imul
movb
or
push
rcrl
icebp
mov
sub
mov
cmp
pop
hlt
inc
jb
int3
fidivrs
push
mov
push
sub
jae
pop
shlb
test
mov
push
add
pop
push
addr16
mov
xchg
mov
lods
fldt
mov
xor
js
mov
jbe
into
aaa
mov
sti
xchg
sub
lcall
popf
xor
cmovle
sahf
push
in
inc
mov
mov
repz
insl
or
push
in
push
in
push
sub
je
mov
repnz
rorb
rol
cmp
cmpsb
jo
jmp
loop
incb
imul
push
imul
jb
mov
inc
rcl
imul
sub
sbb
mov
and
dec
je
or
iret
ds
in
jecxz
mov
mov
mov
pop
mov
loopne
or
jne
cltd
mov
and
xchg
fwait
pop
scas
inc
mov
or
adc
lea
rcll
out
pushf
shlb
sbb
lahf
sbb
mov
xlat
add
or
push
je
pop
nop
cmpl
fimull
into
gs
in
pop
or
inc
popa
mov
jae
or
push
cmp
add
xchg
add
out
inc
cmp
mov
lahf
imul
test
fstpt
lahf
cmp
ret
pop
rcrl
out
push
lahf
idivl
push
xchg
sbb
cmp
cmp
jl
xchg
sbb
pop
jbe
subb
and
lods
icebp
into
pop
dec
adc
jg
mov
or
cmpsb
loope
jbe
mov
arpl
jbe
ret
xor
loope
lock
and
pushl
loop
test
aad
mov
sbb
dec
mov
mov
out
xlat
cmp
das
outsb
pop
outsb
push
nop
dec
cmp
je
sub
test
mov
sahf
das
iret
mov
jmp
popf
inc
mov
adcb
mov
insl
scas
aaa
lahf
js
or
imul
xchg
leave
adc
xlat
mov
xchg
or
cwtl
cld
jmp
push
mov
jo
repz
push
fcom
cmp
and
push
test
lods
push
ja
es
ss
sbb
mov
arpl
jmp
cmp
fcomp
lret
loopne
popf
into
inc
enter
addr16
imul
or
mov
and
xor
pusha
xchg
sub
imul
jmp
jl
and
ds
jmp
mov
adc
scas
int3
pop
mov
lds
fidivl
test
xor
in
ret
movsb
cwtl
sub
orl
shrl
js
or
or
cmpsl
mov
test
shl
push
inc
rorl
ja
icebp
mov
jle
jne
push
daa
inc
test
jb
loope
jg
movsl
sub
pop
xchg
ret
push
out
pop
ret
hlt
push
imul
leave
pop
test
icebp
cmp
lahf
ficoms
lds
xchg
cmpsb
inc
push
push
scas
or
xchg
bound
data16
fiaddl
orb
and
pop
mov
dec
into
adc
sub
mov
in
daa
inc
mov
fcoms
fldenv
test
stc
je
and
adc
mov
cmp
xor
loopne
inc
fldenv
push
jo
and
push
dec
outsl
lret
dec
mov
nop
lock
in
test
icebp
insl
dec
adc
add
add
lods
popa
negl
mov
subl
pop
inc
xor
jmp
test
jae
bnd
das
push
test
or
in
lret
in
popf
stc
dec
mov
mov
push
jae
inc
jl
mov
hlt
sbb
xor
lret
sti
xor
inc
sbb
imul
pop
fldt
into
imull
stc
out
sub
xor
inc
cmp
fstp
in
xor
jbe
lahf
mov
add
jg
in
popa
pop
xchg
push
mov
rcll
lods
scas
aaa
int3
jne
mov
movsl
mov
subl
rcrl
xor
movsb
pop
dec
pop
mov
sub
inc
pop
jns
cmc
mov
xchg
mov
push
push
dec
out
cmp
mov
shrl
jecxz
pop
jle
cmp
subb
out
xchg
and
je
sbb
sti
fwait
loop
mov
test
dec
pop
outsb
loop
xchg
xor
mov
jns
pusha
pop
repnz
inc
fisttps
jmp
gs
movsl
gs
test
jl
ret
jnp
sti
mov
cmp
or
push
in
loopne
inc
pop
pop
mov
movl
pop
inc
and
mov
mov
fidivl
faddl
call
cmp
pop
xor
cmp
pop
and
inc
push
xchg
sub
lea
cld
in
test
add
les
inc
in
xchg
pop
sub
xor
jb
cmpsb
xor
mov
cmpsb
rcrb
aad
clc
or
mov
loopne
inc
mov
cld
cli
sbb
lds
inc
icebp
es
in
xor
pop
in
ljmp
popa
jl
push
out
xchg
outsb
sbb
in
loope
das
xchg
add
orb
scas
mov
pop
adc
xor
mov
mov
mov
push
aam
rcr
mov
push
subl
pop
sti
loopne
mov
xchg
adc
jp
mov
outsb
add
lret
pop
and
inc
jbe
adc
clc
sarb
inc
jne
mov
rcll
push
mov
cld
and
mov
stc
xchg
sub
stos
ds
cmpsb
mov
fmul
jb
ja
test
push
arpl
repnz
fs
out
repz
jae
jne
daa
arpl
mov
add
stos
lret
xchg
popa
andl
call
in
das
sbb
xor
or
pop
push
mov
add
lahf
jb
xor
and
mov
xchg
and
pusha
pop
pushf
repz
adc
rcrb
pop
mov
inc
repz
test
inc
jge
sti
popf
out
pop
xchg
push
inc
lcall
sub
enter
mov
jb
cmpsl
rorb
cli
mov
icebp
sub
xor
roll
sarl
fildll
repz
dec
mul
push
sub
jle
shrl
lea
int
repnz
xor
jle
pop
ja
rol
movsb
xchg
stos
mov
jmp
bound
xchg
inc
dec
es
mov
xor
jne
loopne
pop
lea
out
push
sub
mov
inc
jno
dec
sub
lock
adc
testb
cmp
xchg
sub
aam
xchg
ret
mov
push
push
ss
fcomip
push
testb
cmp
orb
ret
std
push
clc
leave
ds
cmp
lret
popl
or
mov
imull
pop
xchg
jns
int
cli
add
jns
sub
lock
aad
lock
imul
jo
dec
aam
pop
mov
add
mov
dec
push
les
mov
pop
lahf
push
shll
dec
add
in
adc
sbb
jl
mov
ret
sub
std
ljmp
cmp
mov
xor
dec
or
shll
xchg
mov
sub
and
ret
roll
or
jle
mov
jp
pop
cmpsl
insl
fwait
shrb
jb
and
xlat
shlb
imulb
mov
xchg
subb
sbb
adc
imul
aad
sbb
pop
and
push
cmp
xchg
test
cmc
andb
and
mov
sbb
dec
mov
lret
ficomps
sub
inc
and
je
rcl
lcall
fmuls
test
mov
lods
mov
test
push
push
dec
clc
or
jns
loope
ljmp
pushf
outsl
pusha
pop
test
jge
imul
icebp
mov
fstpl
int
ja
out
lock
or
popa
negl
mov
mov
and
test
sbb
pop
xor
imul
jge
lgdtl
out
inc
sub
fs
jne
out
shrb
rcrl
cmpsb
mov
pushf
xor
jns
mov
cmp
inc
adc
movsl
scas
out
jns
idivl
ss
mov
adc
jnp
mov
testb
mov
ja
dec
movsl
sbb
out
xchg
ljmp
jne
inc
mov
test
sarb
fidivrs
loop
lret
loop
inc
inc
pop
jne
dec
adc
and
mov
test
add
inc
dec
xchg
sub
fs
cmc
mov
pop
mov
imulb
gs
pop
movsl
inc
fisttpl
pop
cmp
mov
push
in
dec
std
pop
scas
push
sbb
sbb
das
jg
aas
pop
mov
or
fs
cmp
sbb
xchg
data16
inc
insb
xchg
cltd
fwait
adc
push
mov
ret
fisttps
test
push
pminub
test
pop
jge
dec
pop
add
jnp
jg
rolb
dec
gs
daa
cmp
pop
insl
pop
out
scas
xor
arpl
jge
jnp
and
pop
lods
mov
pop
or
ss
aad
loop
sbb
movsb
mov
add
sbb
lea
adc
push
mov
ja
std
cmpsl
jle
iret
cmpsb
sbb
inc
stc
je
jge
pop
out
lock
and
lahf
lock
lret
testb
test
inc
fldl
jne
jo
and
and
jmp
dec
mov
add
daa
rorb
dec
les
dec
xchg
jmp
push
stos
test
arpl
mov
out
inc
inc
mov
mov
daa
scas
in
push
mov
xchg
jmp
dec
dec
test
sub
cmp
push
ret
mov
xchg
xchg
xor
sub
imul
dec
adc
cmp
imul
enter
xchg
or
pop
andl
sub
outsl
cmp
stos
cmp
ljmp
and
cwtl
or
sub
add
jb
in
pop
mov
pushf
daa
cmp
adc
pop
mov
jae
popf
mov
push
cmp
mov
mov
int
adc
sub
nop
paddb
add
add
cmpl
sbb
push
jbe
arpl
sbb
clc
or
mov
aas
xchg
sbb
jmp
aam
cmc
add
mov
or
adc
das
cmp
ljmp
sbb
mov
insb
adc
jae
shlb
ret
cmpsl
push
jbe
mov
shlb
mov
xchg
mov
mov
inc
stc
addb
mov
jg
jmp
dec
fldt
sub
xor
fsubl
hlt
addr16
js
cltd
movsl
xor
and
hlt
dec
adc
pop
sbb
decb
cli
mov
xchg
xor
je
push
or
pop
dec
lods
pop
pop
lods
add
adc
jns
mov
cmc
clc
fcomi
dec
dec
sbb
xchg
lock
mov
mov
insb
sbb
andb
jmp
cmpsb
cld
jle
inc
mov
inc
fucomi
ficomps
lds
and
fbld
mov
mov
inc
shll
fidivl
or
jno
pop
cmpsl
sbb
cmp
mov
dec
pop
addl
mov
imul
test
push
push
mov
pop
loopne
iret
andb
or
mov
push
arpl
into
jno
push
cmp
in
fdivrp
ja
lret
aad
leave
enter
mov
into
jae
adc
mov
mov
in
fs
enter
loopne
mov
lret
es
sbb
jp
push
and
loop
or
data16
pop
cwtl
jl
cmp
in
test
lea
add
push
subl
es
insl
sub
jp
ret
and
mov
fcmovu
inc
arpl
adc
roll
sub
jnp
adc
xchg
dec
add
adc
daa
inc
jbe
or
movsl
aad
fidivs
mov
mov
and
inc
fnsave
ss
sbb
mov
mov
fcompl
cmp
das
push
jecxz
or
push
and
adc
dec
push
mov
pop
xor
into
lcall
inc
mov
setno
ret
push
and
cmpsl
inc
jecxz
fisttps
and
fld
or
ljmp
jg
jb
dec
mov
movsb
jns
shrl
fstl
cmpsl
cmp
xchg
xor
mov
jp
les
pop
cmp
pusha
and
lcall
pop
int3
pushf
or
push
clc
or
inc
cmp
cmp
pop
ss
push
rorb
mov
sahf
cmc
dec
std
sbbl
jo
lahf
stos
jae
iret
sbbb
xor
sbb
inc
test
pop
cld
dec
pop
or
sbb
mov
out
aam
lods
pop
cmpsl
test
cmpsl
es
cwtl
call
xchg
or
push
mov
sar
push
push
out
cmp
fbstp
sar
or
push
outsl
xchg
jge
sbb
repz
lods
or
mov
cmpsl
xor
mov
ja
pop
sbbl
stos
pop
icebp
jmp
mov
cmpsl
inc
out
inc
pusha
arpl
pop
xlat
js
mov
cmp
pop
lret
xor
xor
je
cmpsb
jg
jb
and
jmp
mov
add
arpl
xchg
mov
ret
clc
mov
push
sub
adc
jmp
mov
xor
push
push
mov
shll
sbb
imul
add
jge
inc
and
push
mov
stos
jle
add
inc
push
sub
adc
test
pop
cmp
xlat
lock
adc
hlt
imul
lret
dec
sub
idivl
daa
clc
dec
push
jno
in
sbb
andb
xor
cmc
test
lock
inc
and
mov
daa
aam
insb
jmp
ud0
scas
stos
insl
in
jecxz
push
or
or
adc
and
mov
lea
loope
ja
adc
sbb
sub
je
mov
cmp
mov
call
push
dec
xlat
dec
fnstsw
sub
lcall
fisubs
rclb
mov
jbe
push
add
incb
popa
fadds
fwait
scas
ds
mov
push
repnz
je
pop
mov
pop
pop
imul
imul
cmp
fs
inc
test
xchg
test
adc
cmp
addr16
out
sub
lret
xchg
fbld
jbe
fldenv
dec
nop
into
adc
pushl
loope
push
ja
pop
mov
fnclex
mov
ret
sub
or
inc
mov
shlb
jo
xchg
fisttpl
sub
add
roll
lcall
cmp
pop
pop
fwait
xor
rcrl
inc
insb
mov
out
adcl
cltd
xor
adc
pop
fsts
push
das
cwtl
das
mov
sub
in
pop
mov
inc
call
and
adc
faddl
or
pop
xchg
imul
sahf
xor
imul
mov
insl
stos
daa
mov
lds
idivb
pop
and
arpl
adc
mov
lret
daa
inc
lods
pop
in
add
addl
inc
xlat
les
testb
push
adcl
sub
or
aaa
scas
inc
addr16
into
xor
xor
push
js
fistl
icebp
xor
fadds
mov
cwtl
pop
js
shll
test
cmc
aam
dec
loope
js
sbb
dec
mov
cmp
adc
adc
into
and
iret
xchg
pop
mov
imul
mov
add
test
mov
inc
mov
sbb
dec
jo
jns
jmp
push
mov
fstps
mov
adc
aam
cmp
pop
mov
or
fbstp
xlat
popw
sbb
jno
mov
setb
mov
iret
xchg
inc
mov
loope
adc
fs
out
xchg
fadds
sbb
jo
inc
jbe
stos
jge
loop
jne
mov
pop
xchg
mov
aaa
push
in
mov
pop
inc
push
jge
inc
scas
aaa
lret
add
inc
iret
ss
lea
jbe
lods
sbbl
pop
jge
or
lret
mov
sub
dec
scas
outsb
mov
test
iret
or
push
push
sub
lods
and
sbb
mov
pop
cmp
sbb
aas
ja
je
or
movsb
mov
loopne
ret
pop
daa
shl
pusha
sahf
dec
loope
stc
adc
rcrb
ss
andb
cmpsb
fidivrs
js
bound
adc
lahf
mov
out
pop
sahf
adc
inc
xor
popa
subl
adc
fmuls
mov
or
pop
mov
sbb
pop
add
sub
jmp
idivb
sti
daa
jns
aas
push
fwait
sub
add
popa
int3
mov
out
inc
dec
pop
jno
xlat
outsb
xchg
adc
sarb
push
pop
cmp
cld
in
and
push
or
dec
inc
adc
js
das
cmp
lretw
dec
inc
iret
lock
aas
add
jb
test
subl
jecxz
cmp
fists
out
stc
ja
jbe
je,pt
pop
mov
jae
mov
pop
and
lock
pop
xchg
or
xchg
in
xchg
cmp
sarb
stos
loope
jg
das
mov
imul
sub
daa
lock
test
loope
pop
sbb
ja
xor
jns
popa
push
loop
cmpsb
or
lahf
jae
sub
jns
adc
stc
adc
add
inc
fiadds
cmpsb
mov
outsb
into
push
mov
in
pop
push
lods
dec
ficoml
jg
jb
pop
push
jp
outsl
insl
lcall
add
iret
out
xchg
cmp
pop
loop
xchg
lret
mov
sti
inc
ja
cld
mov
ret
pop
div
cmp
pop
sub
cmp
dec
fwait
add
cltd
imul
outsl
sbb
mov
ljmp
call
sub
xor
je
lret
lods
ljmp
xchg
popf
shll
or
xor
cmpsl
inc
dec
xchg
js
int3
xchg
adc
fdivl
inc
clc
aaa
mov
mov
jns
lea
lret
push
outsl
push
inc
stc
mov
pop
in
out
push
rcll
sub
mov
push
jmp
or
add
cmpsl
xor
fldcw
pop
push
xor
sbb
xchg
bound
hlt
pop
mov
iret
and
pop
shlb
fsubr
repz
dec
and
push
mov
ret
xor
lea
mov
pop
test
stos
inc
in
dec
aad
adc
out
xor
adc
test
or
hlt
xor
stc
lock
lea
cmc
aam
xchg
pop
loopne
daa
cmp
mov
in
arpl
leave
inc
popl
xchg
js
outsl
ljmp
inc
std
pop
xor
jmp
aaa
sub
jmp
aam
mov
mov
lret
shll
jge
mov
lock
xchg
jae
repz
mov
mov
gs
test
scas
mov
push
push
nop
test
and
pushf
mov
mov
stc
xorb
mov
sbb
sub
and
push
daa
mov
mov
call
dec
mov
dec
adc
push
sbb
mov
or
jecxz
mov
imul
pushf
aaa
cmpsl
mov
cmp
idivl
aas
and
inc
fimull
pop
xlat
out
popa
jp,pt
scas
jno
cwtl
pop
out
sub
xchg
scas
add
std
aas
mov
cmp
xchg
sbbl
xchg
xor
insl
mov
dec
jle
movsb
mov
int
outsl
jp
mov
pop
pusha
int3
rcrl
inc
jge
adc
aad
push
adcl
cmpsb
cmp
popa
xor
js
jge
loopne
rep
pop
inc
pop
lret
push
mov
dec
outsl
xor
push
out
pop
xor
pop
aam
div
sahf
popf
stc
mov
mov
add
mov
fiaddl
jne
inc
mov
pop
in
test
popf
cmp
je
fiadds
xchg
cmp
dec
add
mov
xor
pop
cmp
psllw
sbb
add
out
loop
jle
in
push
mov
mov
mov
dec
call
fildl
add
cli
cmpsl
mov
pop
add
mov
cltd
mov
or
cs
adc
adc
fmuls
sarb
inc
pop
icebp
inc
stos
data16
mov
lret
test
gs
pop
inc
xor
cmpsl
bound
or
adc
fbld
mov
push
and
push
js
inc
mov
sbb
mov
daa
sub
sub
dec
out
test
sbb
movsb
es
mov
xchg
mov
divl
into
insb
int
mov
loop
sbb
movsb
cmpl
push
push
mov
clc
imul
xchg
add
test
int3
repz
pop
stos
cmp
sub
loop
icebp
inc
lea
rolb
popa
jo
jbe
inc
mov
mov
pop
and
mov
out
add
add
mov
adc
dec
push
dec
sbb
or
addr16
jge
in
jno
push
mov
ficoms
and
or
test
test
aam
out
sub
jle
inc
inc
inc
dec
xchg
fwait
xor
jbe,pt
lods
imul
fsubrp
push
out
or
insb
pusha
std
lret
cmc
mov
jb
popf
rorl
rcrb
int3
movsb
iret
mov
and
inc
insb
mov
push
loopne
xchg
pushl
rcrb
fsincos
or
std
aam
mov
imul
cmp
adc
xchg
arpl
dec
sbb
ss
addr16
out
testb
popf
sahf
sbb
jb
mov
ljmp
jecxz
adc
call
pop
mov
fwait
dec
je
stos
inc
outsl
ljmp
mov
mov
xchg
dec
fnstenv
xchg
cmc
push
inc
push
pop
mov
sahf
jbe
in
aas
out
sub
nop
inc
mov
cmp
jo
mov
jno
push
pop
bound
mov
pop
mov
xchg
jb
jne
xor
xor
xor
sbb
push
dec
pop
fwait
bound
inc
insl
dec
mov
jle
dec
out
push
shl
iret
shl
pop
push
push
jge
subl
push
shll
dec
stos
mov
xchg
and
add
sub
mov
ret
pop
pop
or
adc
sbb
aam
mov
xor
inc
jbe
xor
pop
adc
jns
dec
data16
push
and
xchg
push
mov
pop
negl
push
lret
sub
cwtl
and
mulb
loop
jb
popa
inc
rep
dec
test
inc
xchg
pusha
dec
cltd
sbb
dec
inc
pop
mov
xor
mov
push
fwait
sbb
data16
push
or
aad
scas
xchg
loopne
mov
cli
add
sbbl
aad
mov
ror
ret
add
pop
xor
push
or
fwait
cmp
mov
push
mov
sbb
repz
xor
push
out
push
movb
rorb
push
mov
aad
cwtl
jecxz
xlat
dec
sub
jo
ja
ds
sbb
mov
nop
push
aas
pop
rcrb
insl
jnp
mov
or
adc
add
fidivrs
push
shrl
xor
js
dec
push
ljmp
jno
mov
fists
imul
ljmp
xchg
pop
pusha
push
test
and
mov
fldcw
cmpl
out
sub
cli
sub
cmc
inc
mov
inc
cltd
mov
add
dec
popf
adc
shl
ja
stos
insb
ret
fisubl
mov
call
aaa
pop
out
insb
ficoml
cmc
insb
arpl
scas
ss
daa
cld
pop
mov
add
aad
fiaddl
and
movsb
cmp
jp
push
repnz
lahf
mov
out
mov
ret
js
mov
fwait
cltd
mov
cmp
cwtl
outsl
sbb
mov
mov
ja
into
dec
loope
insl
jp
xchg
js
out
rorb
add
rcrb
loope
sbb
fcoml
out
pop
lods
jge
sahf
jle
nop
rclb
mov
jmp
lods
mov
shll
mov
sti
fwait
shrb
xchg
push
mov
jge
cmp
xchg
pop
outsb
clc
loop
jmp
arpl
outsb
lret
lret
stos
mov
mov
push
sbb
xor
ja
xchg
sub
jns
xchg
and
outsl
add
push
clc
xchg
lds
sti
mov
aaa
loopne
sbb
push
in
jne
mov
cld
push
lods
and
pop
jnp
and
dec
or
jmp
daa
repnz
out
xlat
or
mov
inc
adc
data16
mov
int3
add
divb
clc
bound
mov
data16
andb
js
or
pop
loopne
movl
das
add
sub
pop
icebp
dec
xchg
iret
subb
scas
dec
and
int3
pop
mov
push
ljmp
out
inc
jmp
or
sub
setnp
imull
mov
push
dec
inc
fnstsw
daa
cmc
adc
sahf
xlat
pop
dec
lcall
sti
leave
mov
or
jb
jmp
jnp
jecxz
aas
sbb
mov
or
subb
xchg
in
inc
jnp
das
jae
xor
add
dec
loop
loope
fldl
in
pop
mov
or
stc
sub
lock
aaa
or
xchg
aas
sub
in
adc
imul
push
pop
mov
cmpsb
dec
mov
cmp
xchg
lret
and
cwtl
das
negb
sbb
cld
xor
pop
imul
push
mov
stc
cmpsb
cli
stos
inc
xchg
xor
and
imul
shrb
dec
gs
or
mov
popa
push
pop
pop
sbb
and
subb
loope
js
and
test
mov
jg
sub
and
pushf
popf
ds
add
js
js
fcmovb
and
adc
push
mov
and
inc
mov
sbb
sub
scas
es
dec
std
arpl
jnp
les
or
pop
pop
ljmp
lock
fbstp
mov
jnp
mov
adc
cmp
popf
xor
rorb
in
inc
je
out
sub
fadds
mov
add
pusha
imul
and
sahf
mov
mov
cltd
mov
cli
mov
pop
in
jo
test
jnp
mov
fimuls
mov
jmp
subl
mov
ss
repnz
inc
bound
lods
inc
mov
fdivp
pusha
xchg
dec
in
xorb
out
xchg
hlt
add
mov
xor
jo
sarb
xchg
add
push
xor
jbe
fwait
sub
xchg
add
rorb
jl
xchg
std
testb
push
mov
xor
pop
push
movsb
sbb
stc
mov
int3
pmaxsw
ret
nop
mov
xlat
add
cmp
js
pop
loope
dec
mov
dec
popa
sbb
into
in
lret
notb
icebp
fldt
aaa
aas
rolb
push
es
mov
iret
inc
cltd
loop
cli
sbb
test
sbb
mov
leave
push
adc
and
mov
cmc
xrelease
das
test
aad
xchg
das
jb
out
aam
sub
dec
loope
xchg
push
or
ret
mov
lds
xchg
mov
imul
cltd
mov
stos
push
mov
test
mov
test
pop
sti
out
adc
shr
add
jecxz
cmp
xchg
adc
dec
int
mov
lcall
call
lods
lock
add
stc
insl
ds
test
push
cs
hlt
xor
dec
fistpll
xlat
mov
dec
and
ds
xchg
sti
ljmp
inc
insl
or
mov
sbb
push
movsb
cmovg
push
andl
sbb
jecxz
sarl
test
ret
js
call
outsl
stos
outsb
mov
data16
vpcmpgtb
insl
cld
jp
sub
add
inc
adc
dec
psubusw
ret
adc
in
sbb
lods
inc
hlt
cwtl
outsl
loopne
push
dec
pop
call
nop
popf
arpl
jecxz
aas
and
mov
pop
dec
stc
adc
jae
sub
push
outsb
mov
and
pop
push
and
sbb
mov
movsb
and
mov
cmc
jp
mov
fsubl
ret
rcrl
mov
repnz
mov
mov
int
adc
push
out
enter
in
pop
jge
jle
sahf
sahf
loop
xchg
ljmp
lret
aad
popa
outsl
hlt
xlat
ljmp
mov
test
es
xchg
push
sub
iret
jl
add
push
dec
lahf
sti
test
icebp
xor
sub
ret
pop
loope
test
cli
fidivl
sti
xchg
xchg
popa
sbb
sbb
push
js
mov
test
or
mov
data16
xor
and
jmp
daa
fnstcw
test
mov
add
jb
cmpsb
aaa
popf
or
pusha
nop
es
and
cwtl
stos
aas
daa
mov
bound
stc
lea
mov
fidivrl
lods
repnz
dec
lcall
outsl
mov
dec
jle
stos
xchg
and
and
rcr
sub
loopne
inc
and
scas
mov
call
mov
bound
ficompl
or
inc
push
cmp
sbb
fwait
or
hlt
mov
xchg
sub
insb
jmp
aas
push
xchg
lret
push
lds
fldt
push
imul
xchg
popw
mov
jae
push
jnp
add
dec
fidivl
inc
adc
jns
stos
shrl
ds
adcb
insb
mov
xchg
sbb
scas
loope
cmpl
cmp
cmp
dec
xchg
and
push
dec
rcrb
out
daa
cmp
stc
int3
pop
lds
fwait
mov
jle
adc
cli
jne
mov
lock
pushl
fisubs
cld
addr16
mov
mov
sub
push
sarl
push
xor
sbb
jae
mov
cmc
cmp
ja
enter
push
jmp
jnp
and
lret
jno
cwtl
arpl
inc
jo
pcmpeqw
xlat
cmp
xor
es
lcall
lds
cwtl
jge
sbb
dec
mov
lods
cmp
jg
jo
shlb
lret
sbb
sbb
mov
xor
xor
jnp
inc
push
shll
and
and
jo
sar
xchg
add
push
sbb
adc
call
es
daa
cmpsl
sub
xor
and
das
popf
lret
add
repnz
pusha
clc
xchg
sti
xor
jg
leave
pop
inc
in
or
sub
adc
dec
or
stos
push
scas
ror
xchg
std
addr16
xor
out
xor
mov
push
shrl
add
es
in
and
pop
in
push
sahf
sub
xor
or
sub
dec
add
imul
dec
mov
shll
inc
mov
xor
int
sarb
ja
test
pop
push
out
loope
out
cs
jp
pushf
insl
sub
rorb
add
push
out
std
in
pop
rcrb
mov
aad
icebp
mov
test
rcrb
mov
enter
inc
mov
in
pop
adc
fsubr
loop
pop
sub
cld
inc
aam
outsb
xchg
inc
fcmovnb
sub
and
addr16
out
shrb
arpl
in
dec
push
fsubrs
mov
repz
or
rcl
insb
inc
shrl
xor
je
xlat
stos
cltd
mov
mov
adc
clc
or
lods
mov
xlat
nop
into
scas
inc
add
dec
in
and
insb
add
lods
insl
sub
sbb
stos
ret
mov
sti
addl
aas
and
mov
outsb
sub
or
rol
xorb
mov
stos
lcall
shrl
lret
push
mov
in
outsl
push
pop
fs
insb
mov
inc
or
mov
xchg
js
stos
loopne,pt
push
cli
stos
ret
add
adc
mov
into
xor
pushf
add
rorb
mov
pop
push
iret
sub
xor
xor
sbb
ret
pop
scas
nop
push
jbe
cmc
mov
fildl
xchg
lea
push
mov
xor
mov
mov
dec
mov
pusha
mov
adc
cmp
xchg
ljmp
icebp
es
sbb
lcall
ja
xchg
jge
lods
inc
add
adc
mov
jbe
cmp
inc
push
mov
int
sbb
jg
jge
pusha
mov
cli
cwtl
fstp
mov
data16
inc
lods
pop
das
cmpsb
das
xlat
mov
pop
icebp
loopne
stos
stos
insb
jle
imul
mov
loopne
xchg
rcl
and
js
outsl
sub
adc
push
jg
in
mov
ret
outsl
sbb
mov
insl
fnsave
lret
insl
jb
int3
fiaddl
push
cmp
lcall
sti
push
adc
mov
cmc
shll
adc
jmp
add
pop
xchg
lock
arpl
push
adc
cmp
popf
stc
mov
data16
pop
imul
mov
pop
xor
inc
fdivr
adc
cmc
mov
rclb
outsl
decb
sbb
sahf
mov
add
nop
cmp
in
cs
xchg
xor
sbb
nop
push
sar
sarl
jge
xchg
jno
cmpsl
adc
dec
jecxz
in
adc
repnz
ss
ss
das
shlb
push
dec
mov
cmp
repz
loop
sub
xchg
adc
add
mov
test
xlat
xor
adc
das
xchg
popf
leave
lods
adc
cmp
push
call
xor
and
jnp
lahf
xor
sbb
inc
into
loopne
fcmovne
scas
loopne
mov
inc
stos
jle
lds
mov
push
mov
xchg
in
out
mov
mov
cld
loope
jno
fstl
pop
stc
sub
xor
bound
sub
and
lods
pop
mov
add
bound
fbstp
mov
push
je
subb
stos
xchg
loopne
pcmpeqb
in
and
xor
sbb
push
jmp
cmc
imul
ja
je
sub
aad
int3
shrl
push
lea
push
xor
dec
inc
push
in
jb
mov
xchg
stos
repz
mov
icebp
lds
test
or
or
clc
sahf
mov
add
aas
dec
adc
iret
out
les
std
and
inc
iret
inc
fsin
sbb
pusha
ja
xchg
stos
inc
ficomps
add
sub
outsb
subb
push
or
mov
testb
in
in
push
shr
mov
jp
stos
xor
add
xchg
test
add
mov
adc
leave
jecxz
sub
pop
sbb
add
push
repz
jb
shll
int3
add
decb
sbb
sbb
jbe
cmp
adc
inc
fwait
jne
int
jg
jmp
arpl
cmp
adc
ret
sbb
fs
daa
lcall
fwait
cmpsl
scas
sbbl
dec
lahf
cld
push
js
xor
xor
jb
xchg
sub
sahf
or
sbb
xor
or
jb
fwait
scas
pop
mov
adc
ja
xor
rcrb
pop
push
in
lds
paddsb
mov
jnp
in
mov
mov
jp
lret
inc
in
das
xorb
mov
mov
xor
popf
push
adc
dec
cmp
leave
popf
or
mov
fdivrp
jl
ret
mov
add
rcr
inc
push
pusha
stc
push
jo
js
inc
adc
add
xchg
test
mov
pop
push
push
mov
mov
cmp
cmp
mov
repnz
lahf
inc
scas
scas
jbe
ja
push
jno
cwtl
jl
mov
pop
mov
outsb
mov
mov
cwtl
jge
popf
mov
inc
bound
pop
out
enter
popa
outsb
push
test
or
adc
and
add
adcb
adc
aam
mov
xor
pop
cmp
jo
push
daa
shrl
pop
mov
icebp
sbb
sub
sub
jnp
sub
loope
les
inc
sbb
adc
cmp
pop
fldcw
or
mov
or
aas
jbe
in
dec
inc
jne
hlt
mov
shlb
xchg
sbb
in
sub
lods
cmp
fwait
outsb
cvttss2si
shll
movsl
mov
xchg
sahf
inc
stos
pop
mov
push
pop
and
mov
daa
lcall
mov
jp
loopne
mov
icebp
jl
push
orb
pop
pushf
aaa
dec
mov
xchg
mov
jecxz
sub
lret
jg
jg
ror
mov
cmp
jle
mov
pop
ret
push
leave
pop
cmp
loop
fistps
xor
xchg
sub
mov
test
pop
loope
pop
sahf
push
or
sahf
xchg
and
cwtl
pop
mov
mov
loop
and
fisttps
repz
cmp
or
dec
pop
jbe
push
push
aad
pop
mov
lahf
das
notl
fcoml
out
cmp
insb
mov
push
inc
insb
sbb
bound
iret
imul
inc
xchg
push
js
cmc
adc
in
rolb
femms
xchg
inc
xor
popa
leave
popf
stc
push
and
notl
lds
or
sub
push
sbb
dec
adc
lods
and
mov
pop
push
jge
sbb
sub
lret
push
xchg
imul
xor
das
mov
add
push
cmpsl
inc
push
pop
nop
jge
mov
mov
mov
mov
xor
sbb
lea
stc
xchg
push
lods
push
jmp
clc
cmp
rcr
in
push
push
adc
pop
dec
cltd
push
fisttps
negl
in
fsubrp
aaa
xchg
mov
sbb
mov
fadds
test
xor
pop
mov
xlat
pop
pop
mov
dec
cltd
cld
xchg
mov
cmp
mov
fldt
mulb
sub
cli
pop
scas
push
stc
jno
pop
xchg
add
push
xchg
mov
cmp
push
pop
pusha
mov
inc
jg
cli
mov
bound
outsb
loope
or
push
xchg
bound
mov
sbbb
adc
ljmp
mov
mov
addr16
nop
ret
cs
mov
mov
inc
push
mov
dec
in
lods
fsubrl
inc
jne
js
cs
and
push
repz
pop
fmuls
ret
pusha
subb
xor
test
stos
pop
sub
aam
test
je
fadds
fs
loope
jne
add
push
jecxz
and
adc
xchg
out
pop
movsl
inc
stc
mov
cltd
mov
dec
in
jl
fcomps
push
ficomps
push
testl
movsl
les
xorl
add
mov
fdivs
xchg
jle
fimuls
stos
pop
cmp
dec
dec
mov
add
movsl
aam
es
jp
sbb
addr16
rorl
adc
dec
or
pop
pop
addr16
mov
add
sbb
aaa
or
jp
sbb
sbb
aaa
into
inc
loopne
repnz
cmpsl
push
inc
sbb
sbb
or
mov
fcomip
mov
nop
insl
sub
jnp
mov
mov
repz
cmp
cli
pop
inc
and
and
stc
testl
rclb
daa
mov
and
ljmp
or
imul
nop
das
add
and
add
sbb
pop
int
test
jp
scas
add
in
jae
mov
dec
iret
pushf
stos
mov
dec
lock
pop
movsl
xchg
dec
jb
ljmp
popa
mov
ljmp
jno
scas
mov
hlt
mov
fnstsw
pop
mov
adc
clc
xor
and
roll
ror
pop
enter
pop
inc
fidivrl
add
rol
push
dec
jns
inc
pop
xor
es
jns
jb
aad
lahf
cmpsb
inc
mov
cmp
xchg
jmp
hlt
push
xchg
lods
mov
into
iret
andb
mov
ret
jns
mov
cmpsb
aas
and
pop
adc
ret
sbb
add
mov
fwait
pause
je
inc
lcall
shll
in
inc
out
movsb
test
mov
fcomi
sub
sahf
mov
inc
mov
call
inc
cmp
cmp
pop
out
mov
into
shll
cmp
repz
push
scas
stc
sbb
push
es
sbb
and
cmp
jecxz
adc
das
and
mov
adc
sub
dec
cmp
negb
cmp
xchg
lahf
negl
xor
or
insl
inc
clc
xchg
adcl
add
mov
in
xor
test
or
mov
test
inc
sbb
fcoms
cltd
daa
jnp
mov
mov
aas
sbb
lds
leave
clc
sar
push
xor
sbbb
mov
push
int3
popa
out
addr16
xchg
and
lea
adcb
mov
and
jnp
pop
loope
adc
out
into
xchg
pop
push
and
data16
mull
inc
push
stos
in
in
loopne
mov
leave
out
pop
out
leave
pop
scas
out
enter
mov
lahf
ss
iret
mov
pop
mov
mov
stos
leave
jo
test
ja
sub
in
push
and
es
pop
sbb
dec
jae
addr16
es
fidivs
mov
mov
cmp
in
fs
add
pop
inc
pusha
in
fdivs
imul
mov
ficoms
inc
sub
lea
cmp
cmpsl
rcr
lret
icebp
fsubrl
sahf
and
cwtl
pop
cwtl
push
inc
dec
jns
lahf
sub
dec
sbb
cmp
mov
js
push
mov
mov
adc
jl
pop
dec
jo
mov
call
scas
dec
outsl
sub
scas
test
lods
cmc
mov
loop
lahf
adc
sti
and
es
mov
fisttpl
lcall
in
pop
mov
subb
ds
or
cltd
test
mov
push
inc
fstp
fs
sub
cs
push
pop
add
pop
jne
fcmove
pusha
test
push
mov
leave
loopne
out
jbe
or
arpl
xor
inc
mov
scas
fwait
pop
inc
in
aas
sub
pop
push
lcall
sub
or
iret
mov
push
shlb
jb
pop
sub
in
dec
cli
test
dec
sub
loope
rclb
xchg
cmp
push
sub
pop
mov
int
cli
mov
sub
sti
lea
adc
xchg
mov
cwtl
cli
scas
imul
and
popa
subl
dec
and
es
xchg
inc
mov
test
rcrl
jge
push
inc
xor
inc
pop
pop
push
sbb
push
iret
cmpb
js
stc
pop
xchg
sub
xchg
xor
lcall
pop
cmpsb
or
sbb
pop
pop
jno
scas
add
adc
mov
pop
mov
cmpsb
lods
mov
in
add
adc
push
and
lock
movsl
adc
and
shlb
jmp
mov
shl
sub
mov
add
loopne
sub
mov
pop
sub
insb
les
jbe
xchg
xchg
scas
mov
test
inc
jae
xor
fwait
pop
das
imul
cmp
jb
mov
lret
adc
rcrb
push
nop
daa
out
scas
scas
lcall
and
inc
jo
xchg
mov
decb
fstps
sub
or
rdtsc
xlat
mov
or
adc
cmpb
adc
pushf
xchg
loop
ret
jle
movsl
dec
xchg
xchg
addr16
push
in
orl
mov
je
out
repz
lret
sub
insb
sub
push
mov
je
cmp
and
outsb
fdivrl
mov
cmp
jbe
addr16
jg
insl
test
xchg
fmul
mov
dec
inc
out
mov
ljmp
pop
fmulp
or
inc
gs
adc
mov
adcb
xor
xchg
push
jl
jg
cmp
sub
mov
enter
fnsave
mov
popa
mov
jnp
mov
out
push
fwait
scas
out
dec
jae
push
sbb
fwait
jb
xor
and
stc
xchg
mov
addr16
adc
fs
adc
push
mov
outsl
in
gs
rorb
push
add
jns
out
mov
and
push
aad
mov
call
sub
sub
call
mov
cmp
add
bnd
sbb
inc
adcl
aad
inc
neg
push
js
testb
jl
es
mov
test
sub
stos
mov
repnz
push
clc
repz
sub
jbe
adc
into
dec
mov
shrb
and
sbb
je
dec
dec
in
movsb
jo
mov
dec
pop
insb
add
inc
pusha
cmpsl
cmp
cmpsl
orb
mov
adc
cmc
sbb
mov
jge
popa
jns
test
nop
sbb
xchg
out
xor
mov
mov
sbbl
push
outsl
daa
pop
cmp
push
repz
sub
inc
out
mov
loope
int
mov
enter
mov
sbb
push
mov
fisubl
hlt
leave
mov
mov
call
je,pt
dec
dec
xchg
xor
push
mov
shll
in
pop
cmp
or
movsb
xchg
gs
fs
and
mov
ret
push
pop
sub
popf
hlt
mov
pop
mov
mov
sub
iret
icebp
sub
sub
sub
sub
bnd
mov
andb
lods
movsl
dec
mov
add
xlat
aaa
clc
lcall
push
mov
mov
cltd
xor
sub
dec
rolb
xchg
mov
not
mov
pusha
shll
jge
psubusb
fs
je
push
xlat
fisubrl
dec
inc
clc
mov
fnsave
iret
ss
lahf
negl
rorb
stos
cmpsb
sbb
pusha
fidivl
jge
push
stos
nop
jb
fldenv
mov
loopne
js
or
jbe
cmp
dec
xchg
add
incl
xchg
test
sbb
and
pop
inc
arpl
mov
subl
push
sub
jae
call
push
imul
xchg
xchg
lcall
push
jle
lods
movsb
pop
pop
xlat
or
jle
popf
jae
dec
pop
mov
mov
ret
push
xchg
andb
fdivl
push
gs
pop
pop
aaa
mov
mov
xchg
jl
push
mov
lcall
sub
and
in
outsl
jo
sbb
cmp
shrb
shr
mov
sti
mov
xor
mov
into
jno
and
scas
mov
xor
js
testb
rcrb
repnz
int
jns
sarb
push
gs
add
sbb
jl
add
in
popf
stc
sbb
or
cwtl
xor
mov
lahf
iret
scas
vsubpd
cmpsb
ret
adc
cmp
inc
push
pop
sub
sbb
or
push
inc
out
and
jp
cmp
pop
sbb
dec
leave
xor
shrb
mov
sbbb
repnz
jecxz
sub
mov
enter
ret
stos
dec
mov
aad
jno
cltd
loop
pop
hlt
and
jp
jmp
xor
mov
jnp
sub
or
or
jnp
sbb
jo
ja
mov
push
xchg
inc
inc
js
and
sub
test
pop
pop
outsl
push
out
push
mov
jmp
loope
fwait
hlt
cmp
or
in
mov
cld
push
icebp
lods
subl
pop
lahf
mov
cwtl
scas
add
idivb
push
add
pop
idivl
cmp
fiaddl
sub
mov
pusha
aad
mov
popa
cmp
popa
adc
mov
cmp
sub
push
insb
movsb
outsl
mov
mov
scas
pextrw
pop
inc
lods
pop
cmpsb
adc
jecxz
sbb
loopne
or
xor
scas
imul
repz
push
push
or
xchg
xor
and
cmp
loop
scas
adc
and
std
repz
out
xchg
adc
out
dec
pop
std
mov
dec
jmp
test
lret
data16
aas
shl
sbb
loopne
xchg
int3
in
cmc
fwait
popf
sbb
cs
push
rclb
lods
jnp
push
sbb
std
dec
das
fwait
data16
aas
pop
jo
jecxz
int
mov
dec
out
xchg
add
stos
sub
sbb
aas
fcmovbe
addr16
in
test
or
jl
lret
push
sbb
cltd
popf
lods
aad
mov
popf
jb
dec
adc
hlt
hlt
fmuls
shll
shll
roll
seta
sti
fwait
push
dec
cltd
push
dec
scas
jmp
cld
out
push
sbb
and
into
aas
imul
imul
popa
clc
shrl
jg
mov
sub
popf
js
adc
cmp
filds
frstor
imul
scas
ret
xor
outsb
data16
mov
insb
mov
sbb
and
add
insl
xchg
add
sub
popf
cmc
cli
mov
xor
out
les
jnp
bound
sub
out
nop
ret
xchg
es
fbld
int
loope
cmpsb
mov
out
lock
jecxz
inc
xor
mov
jb
jecxz
stos
mov
sub
xchg
add
aas
or
pop
popa
nopl
addr16
mov
mov
imul
fnstsw
sub
test
mov
lock
repnz
mov
int
bound
mov
cmpsb
fildll
push
repz
inc
sbb
in
fcomps
xchg
dec
dec
cmp
cmp
mov
shr
cltd
xor
inc
shrl
xor
movsl
out
dec
xlat
ja
lods
inc
push
ljmp
cmc
mov
negb
in
mov
andb
sahf
xor
sub
daa
mov
jmp
ds
push
mov
and
pop
mov
cmpsl
ds
insb
arpl
pop
and
cmp
rclb
cmp
cwtl
das
jg
popa
clc
shlb
pop
out
inc
divps
jle
iret
lretw
shrb
push
rcrl
movsb
cmp
roll
ret
bound
jbe
lods
gs
mov
iret
and
add
lods
loope
test
jo
mov
repz
add
shlb
es
mov
in
add
cmp
jae
or
lret
jno
mov
pop
sub
scas
add
cmp
enter
push
outsl
mov
out
and
cmp
jge
adc
xor
add
jge
mov
pop
push
sub
mov
xor
pop
dec
or
cmp
pusha
shrl
xchg
ficoms
ljmp
push
cmp
lods
or
loop
push
loope,pn
rcr
pop
sbb
test
outsl
imul
mov
and
daa
test
sub
frstor
insb
push
mov
jmp
mov
stc
jp
push
mov
adc
and
sti
lret
lock
mov
add
aaa
or
mov
fsqrt
and
adc
push
or
mov
mov
jp
lahf
outsb
cmp
and
std
mov
pop
cmp
insb
ljmp
cmp
push
in
jle
push
imul
mov
loop
sbb
add
mov
xchg
movsl
cmc
mov
pop
leave
mov
adc
ss
xor
sbb
std
mov
push
mov
add
out
sbb
pop
mov
rcrl
ds
or
pop
cmp
jo
or
mov
enter
cld
adc
push
jp
push
inc
jo
push
jne
or
push
in
fstpl
or
orl
adc
bound
insb
inc
shlb
mov
cmp
lret
lea
pusha
testl
sub
add
sub
lea
pop
mov
push
xor
pop
jne
xor
pop
adc
dec
pop
xchg
jecxz
pop
repz
jp
sub
jnp
cmp
or
loope
push
mov
aas
push
adc
inc
insb
js
js
cltd
repnz
jl
pop
xor
fsts
xor
outsb
mov
xchg
jecxz
mov
pop
lds
push
lods
aam
ret
mov
std
test
popf
popf
mov
icebp
sti
fwait
pop
and
negl
xor
movsb
es
pop
lcall
inc
mov
sbb
sub
jbe
lods
xor
inc
push
out
push
sbb
mov
outsb
mov
sub
test
inc
sbb
das
ja
mov
andb
hlt
pop
fldenv
aas
sbb
mov
pop
jne
add
imul
pop
ret
mov
stc
xchg
jb
sub
insl
inc
xlat
fnsave
jmp
stos
xorl
fnstsw
inc
fs
out
xlat
ljmp
push
or
inc
fwait
scas
je
xorb
xlat
cmp
jge
xor
test
imul
dec
pop
and
arpl
fdivrl
mov
jle
mov
mov
in
push
fidivrs
xchg
cmp
and
iret
lods
bound
jae
or
xchg
and
push
mov
loop
ficoml
ljmp
shl
in
push
into
std
jno
lahf
gs
xlat
cmp
sbb
jno
addr16
xchg
mov
inc
adc
sti
stos
mov
jg
sarb
les
or
sbb
jbe
xlat
fisubrs
push
dec
xor
inc
mov
movsl
mov
add
lret
and
adc
test
cmpsb
cwtl
fbld
gs
nop
xchg
mov
je
jge
jecxz
loop
push
mov
inc
sarl
lods
stos
or
cli
pop
sub
jb
dec
into
cmp
aas
out
nop
mulps
pop
cmp
push
push
int
in
neg
jae
or
in
inc
lods
stos
test
sbb
pop
push
ljmp
jp
xor
outsb
push
ror
fdivrs
mov
enter
testb
inc
loop
dec
shrl
mov
mov
imul
pop
lock
mov
adc
mov
mov
iret
mov
in
dec
push
mov
push
aaa
fnstcw
adc
bound
xchg
inc
ds
jne
pop
jb
xchg
and
rcr
xor
mov
jae
pop
lods
xchg
shll
dec
loopne
or
ss
xchg
idivl
lcall
push
mov
fnstcw
and
cmp
dec
add
cwtl
mov
sbb
movntq
repz
clc
adc
fsubrp
daa
dec
pop
mov
int3
mov
fs
mov
mov
fbstp
movsb
xchg
clc
sahf
repz
jne
mov
adc
jns
cltd
shlb
add
pop
push
mov
outsl
aam
adc
mov
call
pop
add
push
leave
test
es
and
jg
and
push
jae
mov
ljmp
lcall
sahf
test
inc
icebp
mov
adc
fistpl
sub
push
mov
ja
add
sbbl
and
mov
jo
nop
push
rep
mov
clc
jo
mov
add
iret
jecxz
outsl
iret
cmpsb
sbb
scas
call
fs
mov
sbb
xor
pop
sub
push
inc
xor
add
push
int3
fsubr
andb
int3
lock
inc
pop
xchg
int3
jge
mov
cmp
sti
push
inc
aaa
or
stos
ja
xchg
ljmp
jne
dec
xchg
ds
push
insl
dec
fistpl
cltd
mov
inc
fstpl
jle
or
push
lcall
sub
ds
scas
addb
icebp
inc
cmp
add
out
ret
scas
push
and
addr16
fs
xchg
or
mov
mov
push
in
cld
subl
pop
pop
jb
movsl
in
sbb
arpl
aam
lods
outsb
jecxz
mov
loope
test
test
mov
mov
sbb
jae
ja
test
stos
sarl
or
and
push
ljmp
inc
xlat
imul
xor
mov
inc
push
push
mov
push
loope
push
mov
xchg
sub
pop
ss
aaa
pop
popf
lock
insb
push
or
stos
jne
pop
or
rcrb
test
push
jge
out
mov
in
out
add
cmp
adc
ds
mov
nop
imul
push
pop
mov
sbb
sub
sub
fcomps
jo
addr16
shr
inc
or
inc
fistps
ret
inc
popf
push
sbb
inc
cmp
shrl
inc
cmp
dec
inc
fdivl
inc
pop
fdivs
es
xor
cltd
jae
inc
cltd
ficomps
mov
inc
stc
aas
mov
clc
jae
sbb
adc
sub
pop
mov
inc
adcb
inc
addr16
and
cmp
nop
neg
lret
jo
in
shl
mov
jge
rorb
loope
adc
pop
fcoms
clc
loope
inc
mov
fdivl
and
int
cli
jns
xor
inc
push
jge
int
push
jmp
and
or
jo
sub
push
fcomp
lret
pop
rcr
push
jge
xchg
xchg
fidivs
aaa
test
loop
pop
cmpsb
mov
xchg
sahf
das
iret
mov
out
ret
push
in
push
les
loope
mov
pop
rorb
loope
rclb
mov
sbb
mov
fdivrl
clc
movsl
cmp
and
das
sbb
xor
stos
in
data16
and
lea
stc
in
push
ror
rcl
fcompl
jle
push
scas
insb
push
or
dec
and
add
inc
jbe
pushf
adcl
insl
sahf
mov
push
push
in
dec
fisttpl
scas
out
push
xchg
iret
insl
cmc
shrb
sbb
and
rcrb
dec
sbbl
andb
out
pop
adc
mov
loopne
movsl
sbb
ja
or
cmp
xlat
jmp
jns
mov
dec
inc
fdivrl
testb
fdivp
js
test
mov
out
push
cwtl
xor
fdiv
sbb
nop
pushf
imul
aas
push
icebp
jecxz
gs
push
lock
lret
add
hlt
mov
enter
stos
dec
pop
fadds
jnp
inc
cmp
movsl
cmp
test
pop
and
pusha
movsl
add
mov
xchg
fsubrl
cs
popf
push
stc
and
loope
inc
in
adcl
jno
imul
mov
data16
movsl
or
jnp
jnp
cmp
lds
sti
loop
insb
adc
outsl
ret
lret
shrb
bound
scas
push
test
ret
popf
cld
nop
daa
rcll
xor
std
xchg
xor
fistps
adc
cmpsb
imul
sti
jmp
insb
gs
sbb
xchg
and
inc
dec
aas
push
cmpsb
test
push
fcmovb
fidivs
jp
cmp
push
andl
or
inc
fiaddl
cmpsb
popa
icebp
cmpb
cmp
mov
dec
loop
ret
sub
fsubrl
pusha
daa
andb
dec
and
jmp
push
sbbb
inc
add
mov
mov
sub
pop
pop
add
xor
lods
in
repnz
push
ljmp
jb
bound
jns
xor
xchg
push
or
lock
into
gs
pop
icebp
adc
or
cmpsl
adc
mov
mov
cmp
scas
mov
cmp
mov
push
mov
mov
sbb
testb
inc
adc
push
cmp
andb
xlat
jmp
cmc
aaa
movsl
mov
fbstp
xor
cld
xchg
aas
push
icebp
insl
rcl
jo
cmp
cs
pushl
les
in
stos
sbb
test
sub
je
xor
mov
xchg
sub
push
in
testb
dec
xchg
xchg
push
push
mov
test
add
outsl
add
mov
push
scas
nop
xor
in
ffree
pop
femms
testb
jne
push
sbb
sbb
out
ficompl
movsb
cmp
call
aas
aad
mov
pop
push
pop
ljmp
cmc
push
fstpl
fcomps
dec
dec
jge
jae
push
or
movsl
mov
das
cmp
fs
sub
nop
sub
stos
inc
xchg
or
test
mov
js
shll
stos
jnp
dec
lret
dec
popa
data16
jecxz
mov
aas
mov
int
loope
mov
fcmovne
sbb
dec
jne
pop
lahf
mov
mov
in
push
and
dec
pop
xchg
dec
dec
loop
dec
mov
push
imulb
lock
out
cmpsl
xrelease
mov
rorb
mov
push
mov
inc
fiadds
out
push
and
xchg
addl
sub
mov
scas
jb
adc
jl
sarb
push
fildl
mov
mov
scas
sub
shl
loop
popa
icebp
push
call
mov
push
xchg
mov
push
pushf
fistpl
lahf
into
das
rcr
add
mov
or
js
mov
int3
and
data16
lret
push
repz
xorb
icebp
inc
es
or
dec
das
pop
xor
sar
push
mov
std
fstps
jmp
add
pusha
sbbb
jl
call
xchg
push
leave
or
pop
mov
xchg
and
xchg
stos
cmp
mov
cmpsl
or
add
jb
outsb
roll
je
xor
mov
fisubrl
mov
sub
cmpsl
jge
fildll
outsb
add
cs
mov
pop
rol
push
xchg
stc
dec
dec
popa
cmp
iret
jno
mov
dec
je
decb
xor
out
or
add
cld
jl
adc
in
cmp
mov
sbb
test
enter
cmp
pop
dec
lret
out
jmp
xchg
xchg
inc
fs
pop
popf
imul
fldcw
add
fnstcw
and
loop
movsb
jg
add
xchg
popa
mov
mov
aam
sub
sub
icebp
mov
and
rcll
pop
xor
or
add
sub
out
nop
sub
adcl
or
out
push
ds
cmp
imulb
cltd
std
rorb
mov
outsl
andl
dec
loope
jg
inc
in
push
mov
dec
scas
add
xor
das
loopne
out
dec
in
out
cld
jg
scas
hlt
outsb
or
adcl
lea
in
or
jo
fwait
test
push
outsb
int
sbb
repz
sbb
dec
xchg
cmp
dec
jnp
push
and
add
jge
mov
cli
or
push
fadds
test
add
sbb
inc
mov
sbb
xchg
pop
fdivrl
xchg
dec
arpl
sub
push
repz
xchg
jb
inc
cmp
sub
lcall
xchg
pusha
ret
in
or
jbe
into
outsb
cmp
into
sbb
mov
jmp
mov
shr
pop
fchs
push
rcr
push
jmp
lods
je
test
push
pop
fwait
cmc
ja
cs
xchg
mov
orb
lock
pop
mov
setle
sbb
in
xor
lods
push
push
or
lcall
jl
inc
pop
inc
pop
mov
ja
leave
or
out
jb
in
cwtl
xor
fs
xchg
pop
inc
cltd
leave
jnp
jl
out
loop
icebp
bound
and
mov
sbb
movl
aad
cmp
xchg
jbe
inc
mov
push
loopne
test
aas
loope
stos
stos
ss
ret
movsb
mov
or
call
insb
pop
jg
xor
cmp
icebp
into
stc
sub
pop
xchg
add
cs
jno
push
pop
cmp
cltd
jo
addl
mov
fnstenv
sub
pop
cmc
mov
idivl
sarl
jl
or
cmc
jg
and
and
fcomps
gs
jle
lahf
and
mov
mov
xor
add
loop
rcrl
aas
in
int
lods
shl
mov
bound
popa
inc
mov
test
and
sbb
incl
mov
pushl
adc
neg
jno
mov
pop
and
ss
repz
pushf
adc
stos
jne
mov
pop
adc
adc
dec
add
dec
lock
xlat
jmp
lods
cwtl
mov
xchg
stc
sbb
mov
imul
idivb
and
push
es
xor
xchg
flds
loope
lahf
mov
push
dec
push
sbb
cs
sub
dec
ret
push
out
pop
scas
lds
fnstenv
fdivl
ficompl
enter
or
mull
cmp
and
xchg
jno
sub
push
push
arpl
inc
mov
cmc
ficompl
icebp
mov
fincstp
ja
stc
xchg
movsb
mov
xchg
call
and
jne
xor
lea
push
pop
cmc
sbbb
fdivr
jl
sbb
pop
jnp
test
in
es
fists
adc
aam
movsb
add
sbb
insb
popf
or
fnsave
movsb
gs
add
and
ffree
icebp
xchg
cmc
inc
xchg
jmp
inc
jno
insb
aaa
in
mov
mov
loopne
call
pop
scas
inc
notb
xor
xchg
push
repz
xchg
push
sub
or
and
bound
dec
mov
add
test
imul
add
mov
dec
iret
xor
cmp
lret
push
mov
data16
mov
mov
stos
xchg
sub
push
jno
cmc
ja
test
mov
jmp
fsubrs
cmc
pop
and
xor
or
clc
repz
xchg
add
out
cmpsb
pop
add
es
xchg
test
fwait
cmpsl
or
cmp
rol
outsl
lock
fdivl
call
loope
and
std
jns
and
mov
xchg
rclb
ret
or
out
sub
cmpl
fcmovu
xor
push
jge
or
and
movsb
ret
sub
cmpsb
xor
arpl
imul
pusha
and
adc
std
insb
mov
js
ret
movsb
in
push
and
add
test
lds
pop
pop
cmc
js
hlt
adc
test
fsubr
scas
xlat
outsb
and
les
adc
addr16
mov
cmpl
add
test
scas
xchg
dec
mov
mov
adc
fstl
mov
xchg
loopne
or
mov
sub
cwtl
addl
push
jp
in
xchg
or
in
int
sbb
jp
movsl
pop
out
xchg
add
addl
movsl
fbld
test
loop
fs
les
dec
in
aas
addr16
imull
fcompl
and
mov
or
sub
js
sbb
bound
push
or
and
jne
mov
les
fsubs
mov
shlb
rcll
mov
fwait
push
add
dec
mov
rol
mov
pop
ret
call
fsts
lret
test
mov
rol
cmpl
addb
xchg
pop
test
imul
fisubrs
inc
test
fnstsw
sub
pop
xchg
lods
jmp
xor
fidivrl
rclb
in
rclb
adc
mov
shll
mov
orb
mov
fcmovnb
aad
lea
dec
mov
dec
xchg
lods
fucomip
jbe
dec
lods
test
sub
idivb
data16
inc
pop
sub
and
imull
adc
lods
mov
mov
or
sub
sub
xor
sub
cltd
and
xchg
rdtsc
enter
enter
pop
xchg
lea
je
jo
dec
int3
and
loop
push
cmp
sbbl
pop
int
cmp
scas
mov
pop
sbb
push
push
xor
adc
push
push
xchg
jmp
inc
xchg
xor
jns
pop
push
xchg
add
enter
aad
fs
pop
sahf
outsb
aaa
int
sbb
popf
mov
cmpsb
je
fwait
and
ss
clc
adc
frstor
outsl
pop
mov
inc
fidivrs
jns
int3
lret
fnsave
mov
jnp
push
aad
mov
lret
xchg
stc
cmp
cmc
setle
test
ss
or
decb
sub
cmp
cmpsb
dec
clc
push
insb
enter
xrelease
xlat
xchg
or
push
icebp
xchg
jns
icebp
mov
out
cmpsb
mov
fistpll
std
sahf
std
or
mov
aaa
imulb
int3
jge
fs
cmp
dec
xchg
xchg
in
inc
mov
aad
pop
faddl
sbb
mulb
ret
ss
xchg
and
mov
incb
aam
and
push
add
roll
loopne
inc
cmp
add
dec
mov
push
ret
jae
imulb
frstor
sahf
nop
ljmp
inc
push
je
ljmp
mov
int3
out
add
daa
mov
mov
push
push
pop
add
xchg
out
lret
pop
clc
sahf
jno
adc
dec
cs
outsb
insl
rorb
es
ljmp
pushl
arpl
jns
clc
and
sahf
xor
xor
mov
call
mov
es
cli
pop
push
push
test
lods
jne
jo
fisubrs
mov
repnz
jae
sub
mov
dec
push
xor
add
add
fcompl
mov
in
jecxz
das
sub
dec
lea
movsb
mov
roll
fmull
sbbb
push
out
or
movsl
adc
roll
mov
stos
and
sbbb
ret
pop
notb
scas
mov
add
dec
stos
add
fnsave
rol
push
add
fldenv
aaa
xor
out
stos
mov
xchg
add
ss
call
mov
es
test
sbb
mov
sbbw
xor
pop
mov
mov
stos
adc
test
mov
test
jle
jne
nop
loopne
mov
inc
in
aam
test
leave
pop
mov
or
test
daa
stos
js
lods
pop
repnz
xor
jo
dec
pop
or
mov
ret
outsl
mulb
mov
cmp
or
adcl
fcomip
jmp
jmp
mov
push
in
test
sbb
mov
movsb
rcrl
inc
addr16
xor
sub
cmp
mov
jno
scas
mov
into
aad
jbe
xor
mov
int
test
fs
adc
mov
pop
dec
dec
dec
jns
push
fsub
xchg
ret
push
sarb
push
bound
adc
ds
or
jbe
fnsave
aad
sub
mov
jns
push
setae
cmp
xchg
mov
xor
or
sbb
inc
push
fwait
inc
add
fildll
popf
pop
or
cmpsl
ds
into
popa
adcb
call
mov
xor
mov
xchg
daa
pushf
xor
in
aas
outsb
xor
dec
arpl
lods
push
lods
rcrb
ret
cmp
fs
mov
cmpl
loop
mov
mov
adc
lahf
subb
dec
add
hlt
jl
movsl
shll
sbb
inc
lods
xchg
xor
sub
inc
mov
adc
dec
xor
cli
push
aad
testl
sbb
or
aaa
lea
out
mov
pop
int
daa
or
cmovnp
adc
dec
inc
scas
push
in
imul
into
test
iret
ss
aas
xor
sub
add
mulb
jo
cwtl
xchg
stos
pop
iret
pop
fwait
mov
dec
mov
loop
shl
adc
cmp
in
out
aaa
aad
and
int3
cmp
addb
xchg
stos
pop
and
lock
push
xor
pop
xchg
loopne
aad
mov
imul
sarl
adc
pop
ss
add
push
or
test
mov
mov
sbb
xor
pop
or
jb
mov
call
out
mov
sbb
add
xor
sahf
sub
push
pop
mov
ja
hlt
xor
add
loop
cs
out
pop
leave
pop
push
lea
dec
sbb
inc
les
xor
addr16
daa
outsb
lret
adc
mov
mov
rolb
mov
lret
dec
dec
pusha
mov
lret
sti
push
sti
xor
inc
mov
cmc
in
pop
xchg
xchg
dec
add
sbb
ja
ss
cmp
ret
in
loope
mov
gs
push
aas
fidivrl
in
lahf
sbb
dec
leave
sbb
fisubs
jecxz
xor
arpl
add
mov
icebp
dec
pushf
lcall
xchg
mov
cmp
lods
call
pop
mov
loope
jno
nop
push
stos
jge
push
out
mov
xchg
paddd
stos
mov
icebp
inc
fisubl
adc
bound
sbb
mov
and
dec
add
flds
outsb
fxtract
ret
mov
or
mov
outsl
cmc
daa
mov
sub
push
shl
icebp
pop
pop
adc
pop
stos
cmp
mov
xchg
and
xchg
adc
int3
arpl
inc
xchg
std
fdivrl
ficoms
inc
cmp
xchg
xor
es
xchg
cli
jb
aaa
in
push
lcall
xchg
cmp
aaa
xor
cmpsl
out
adc
push
shlb
aam
add
push
mov
xlat
insl
imul
aaa
jae
pop
push
xchg
lods
call
dec
and
xor
in
and
dec
inc
in
aad
xor
mov
mov
xchg
iret
pop
movsl
stos
inc
xlat
jge
cli
and
lea
cwtd
add
dec
faddp
sbb
divl
xchg
sbb
int
mov
out
inc
mov
cmp
pop
sahf
xor
mov
and
xor
fidivs
data16
mov
or
into
imul
adc
cmpsb
lock
push
sarl
fcmovnb
popa
dec
sub
outsb
enter
dec
hlt
jle
push
inc
shll
inc
dec
sub
aaa
xchg
loopne
lods
xchg
push
add
inc
add
mov
cmp
jg
dec
out
or
aas
jbe
inc
popf
sbb
or
sahf
jno
dec
stc
push
subl
xchg
ficoms
cmp
xor
cli
jae
dec
xchg
push
sub
stos
push
mov
xchg
inc
call
movsb
stos
xchg
pop
sahf
mov
lods
ja
sbb
ret
xchg
test
pop
xchg
or
ret
cmp
pop
dec
pop
lock
jbe
inc
and
cmpl
pop
or
test
sarb
out
add
push
mov
js
and
mov
pop
adc
inc
ljmp
testb
addl
adc
adc
jmp
call
cltd
insb
iret
fidivrs
data16
mov
sbb
dec
in
fistl
jae
inc
add
push
or
clc
jbe
xor
jmp
mov
xchg
pop
mov
lret
mov
and
push
ss
sti
push
mov
lds
xor
icebp
das
mov
lidtl
mull
xchg
jo
fsubrl
dec
push
cltd
dec
mov
push
rclb
repz
sti
adc
in
jle
or
fcmovnb
push
push
push
das
mov
clc
popf
jae
dec
data16
ljmp
data16
cwtl
fiadds
std
aad
pop
sub
xor
jns
dec
test
inc
data16
lcall
mov
rol
outsb
fcoms
shrb
int3
push
fldenv
mov
shr
stos
push
and
xchg
add
into
in
cld
lcall
pop
sub
xchg
pop
jl
in
push
sbb
push
icebp
in
inc
xchg
and
inc
stos
jmp
shrl
xor
in
jnp
insb
push
push
cmp
call
fs
sbb
bound
cmp
lods
insb
mov
test
mov
push
jge
loop
mov
movl
xor
push
bound
cmp
or
pop
stos
inc
cwtl
jle
inc
arpl
subb
addr16
popf
xor
in
add
or
jae
mov
jno
jge
das
outsl
jge
or
xchg
int3
mov
mov
test
mov
andl
aas
dec
testb
cmpsb
or
lcall
ret
and
inc
imul
or
out
inc
and
add
push
aad
rcrl
js
andl
lcall
add
es
push
in
xchg
imul
push
addl
jle
repz
jp
or
lock
scas
adc
mov
jmp
mov
in
repz
fiadds
xchg
int
mov
cs
fdivl
leave
add
push
xor
push
into
and
fdivp
and
mov
add
cmpsl
out
inc
arpl
inc
test
andl
lret
push
cmp
dec
call
aam
or
or
push
repz
xchg
sbb
add
jp
push
subb
push
jmp
inc
das
pop
stc
or
and
mov
sbb
sbb
adc
jne
sti
jl
fimull
mov
pop
push
fistl
scas
inc
lods
jno
adc
leave
jae
les
in
sbb
jmp
push
dec
xchg
gs
and
sbb
jle
iret
push
push
xchg
imul
hlt
aam
gs
xchg
int
mov
xor
pop
aad
add
mov
leave
lods
jae
jmp
lret
data16
inc
movb
popf
lock
test
aaa
test
lock
sarb
dec
rcr
test
mov
add
ja
or
in
pcmpgtd
dec
movsl
mov
loopne
test
xchg
mov
adc
sub
das
jg
add
xor
pop
mov
mov
fisubrl
das
sbbl
loopne
repz
dec
or
lret
scas
inc
cmp
adc
dec
and
push
sub
fdivrl
rorl
sub
lds
stc
lods
add
test
mov
fidivs
mov
push
cltd
clc
and
adc
enter
movb
mov
cmp
sub
out
pop
xchg
mov
stos
imul
fcoms
push
xchg
stc
mov
or
stc
inc
mov
inc
popa
jbe
sahf
xor
in
js
cltd
sbb
rorl
dec
dec
xor
ja
add
mov
xchg
push
daa
fsubrs
sti
cmp
xor
mov
cwtl
cwtl
inc
popa
add
movsb
mov
hlt
mov
inc
pop
loop
aas
andl
subl
sbb
aad
or
rcrl
jnp
xor
out
repnz
fmuls
decl
cmpsb
mov
add
bound
sbb
sbbl
cmp
lods
hlt
test
wrmsr
push
xor
pop
sbb
cmp
fs
push
scas
faddl
jae
and
add
testl
fwait
cmc
adc
test
inc
jmp
sub
icebp
movsl
push
lret
fnsave
sarl
outsb
lcall
mov
xchg
sub
xlat
scas
cmp
pop
lcall
cmp
movsb
add
clc
loopne
mov
inc
and
lcall
ret
movsb
test
out
imul
add
mov
andl
addr16
mov
insl
stc
rcll
xchg
in
das
xchg
rorl
jno
ja
fisubrl
hlt
dec
arpl
ret
add
push
std
push
addr16
icebp
int3
dec
and
xchg
jle
in
test
aad
xchg
cs
pop
nop
or
hlt
loop
es
sahf
imul
fdiv
xchg
xor
xlat
or
sbb
lea
push
mov
repnz
push
adc
mov
daa
mov
pop
xchg
inc
fmull
mov
jle
fdivrp
and
dec
add
sub
cmpsl
mov
std
into
lret
fisubrl
cmp
sub
bound
jge
push
loope
jae
je
ja
jl
dec
cmp
dec
xlat
sbb
mov
mov
add
pop
es
pop
rcl
out
jmp
lds
jnp
out
scas
sbb
aam
nop
in
test
dec
icebp
mov
or
fwait
rolb
cld
xor
or
test
pop
xor
mov
sbb
in
push
mov
jg
insb
xor
sbb
jl
ja
dec
add
pop
imul
inc
mov
lods
xor
jg
or
loopne
xchg
mov
xlat
or
rcll
cmc
cmpsb
xlat
xchg
mov
xlat
sub
or
aad
mov
jnp
adc
addr16
ret
imul
add
enter
mov
fisubrs
jb
scas
movsb
xchg
pusha
sub
add
mov
lock
or
loope
mov
cmpsb
dec
push
lret
mov
pop
mov
call
pop
std
adc
inc
daa
push
je
insl
popl
and
sub
mov
push
stos
add
xor
mov
mov
jle
adc
cmpl
nop
scas
push
mov
push
push
fwait
dec
mov
pop
cmc
cli
push
aaa
hlt
mov
mov
sub
and
lds
repnz
testl
int3
dec
fs
lods
gs
into
push
lock
jmp
int
add
mov
push
jmp
aad
fdivl
call
mov
cmpsb
lods
xlat
adc
aad
dec
or
mov
call
ss
mul
sbbl
pop
push
mov
stc
inc
jae
jge
mov
push
dec
into
cmp
mov
fimull
xchg
lods
ljmp
pushf
arpl
cmpsl
cmp
sti
sub
pop
into
jne,pn
std
aaa
repnz
loopne
pop
mov
fstpl
int
cli
sub
fsubrp
mov
hlt
push
cmpsb
lds
test
arpl
aam
iret
sbb
lea
arpl
xor
fs
mov
out
xchg
sbb
sbb
into
insl
iret
data16
lock
xchg
aas
int
dec
lret
addr16
mov
or
mov
sbbl
sarb
mov
sbb
ds
mov
daa
jb
out
sub
aas
dec
sub
pusha
ret
cltd
mov
shll
in
and
adc
loope
xor
scas
sub
mov
adc
push
loop
sub
aad
ss
lods
scas
jmp
repz
fimuls
out
sbb
xor
inc
lods
scas
sbb
sbbl
js
lahf
int
mov
aaa
mov
xchg
add
popa
mov
add
aam
add
jecxz
clc
fisubrs
sub
cld
repz
xchg
int
mov
dec
xchg
inc
fistl
das
cmp
rolb
fs
push
push
ljmp
inc
cmp
and
test
pop
lds
sahf
add
popa
mov
push
insb
sahf
jg
and
mov
roll
xor
lret
js
mov
and
adc
pop
cmc
adc
je
jp
or
test
mov
push
add
ret
outsl
sub
scas
nop
rcrb
inc
test
mov
insb
cs
and
out
sbb
bound
jge
push
sbb
xor
imul
lods
cmp
xchg
mov
xor
xchg
out
cld
and
pop
cwtl
lea
hlt
lret
je
dec
pop
or
xchg
sub
in
das
lds
mov
dec
lods
rcrl
mov
out
pop
repnz
mov
mov
mov
mov
xchg
jl
in
es
sbb
xchg
pusha
mov
arpl
mov
inc
pop
setle
or
popf
mov
je
mov
xlat
mov
scas
lcall
mov
push
adc
dec
fdivrs
int3
loope
mov
add
mov
mov
dec
fwait
cmp
push
inc
cmpsb
das
dec
jecxz
dec
push
sub
or
fsubrs
pusha
fwait
lods
sbb
lret
bound
cmp
mov
mov
cmpsl
jecxz
lods
lret
loopne
lods
mov
out
ljmp
jo
arpl
mov
fwait
xchg
xor
push
ss
push
xchg
stos
inc
sub
mov
bound
scas
pop
jnp
jae
repz
enter
into
sti
xor
push
fs
pop
sbb
sbb
sbb
cmp
sub
lret
inc
mov
mov
gs
pop
mov
repz
aam
inc
loop
subb
cmp
sbb
sbb
stos
cmp
or
leave
orb
mov
mov
pop
or
pushl
push
mov
add
sbbl
ret
xchg
mov
fmull
out
sub
test
rorb
shll
pop
lock
cmpsl
ret
ss
xchg
pop
mov
shll
xor
scas
sub
and
clc
mov
jb
cmp
fdecstp
mov
mov
test
dec
js
xchg
push
js
les
inc
sbb
std
xchg
inc
fmul
push
xor
inc
aaa
push
loop
insb
rcll
mov
cmpsl
int3
js
xchg
stos
lods
cmp
scas
pop
add
mov
ret
and
js
push
push
lods
inc
mov
jns
ss
mov
xor
xlat
outsb
insb
push
or
int3
arpl
sub
bndstx
mov
rorl
jae
movsb
lret
dec
loopne
loopne
xchg
adc
inc
dec
insb
pop
xchg
cs
fidivl
outsb
push
loopne
dec
test
lret
or
pop
repz
lret
xchg
xchg
jp
lds
cmpb
xor
xor
xchg
fwait
mov
push
es
push
ljmp
mov
xor
pop
sbb
xor
and
mov
sub
dec
out
mov
les
cmp
shr
mov
test
inc
popa
cmpsb
jecxz
adcb
mov
repz
outsb
js
test
test
sub
call
or
jmp
pushf
xor
mov
imul
daa
imul
pop
sub
push
inc
xlat
in
xchg
pmaxub
repz
jle
inc
bound
fidivrs
jmp
xchg
jmp
loopne
vphadddq
testl
ja
and
cmp
in
cwtl
mov
push
mov
cwtl
cs
sub
pop
add
adc
orl
clc
popa
adc
test
sub
loop
fs
lcall
mov
mov
out
add
push
popf
fmuls
fwait
lret
dec
outsb
xchg
sub
add
pop
enter
sub
idiv
inc
sub
in
add
cmp
pop
pop
es
xchg
call
cmc
lds
adc
jecxz
push
inc
arpl
shlb
xor
cltd
xor
ja
rcrl
dec
popf
out
jno
push
jo
pusha
fnstenv
cmpsl
test
jnp
ret
leave
pusha
xor
dec
jo
fsubp
add
movsl
adc
xchg
push
push
fwait
lods
jns
xchg
inc
cltd
scas
sti
mov
cs
xchg
sub
xor
push
sbb
lock
arpl
pop
out
test
sbb
fcomps
push
push
jno
popl
leave
mov
adc
cltd
aaa
insl
shrb
int
cmp
mov
stc
xor
jnp
push
push
lds
jg
sti
into
enter
mov
xchg
or
sub
sbb
fistpl
xchg
cld
pop
leave
cmp
scas
arpl
xchg
ja
add
xchg
cwtl
sbb
or
repnz
mov
ljmp
inc
fnsave
xlat
hlt
mov
push
insl
sub
ret
cmp
hlt
sub
pushf
ret
repnz
mov
movups
fstps
adc
dec
xchg
mov
pop
jb
repz
fs
add
sub
adc
xchg
jbe
jmp
add
sti
out
dec
push
xchg
mov
leave
test
in
xor
stos
arpl
mov
mov
fs
add
out
or
in
sub
xchg
scas
aas
sub
dec
mov
insl
or
jmp
add
jo
or
lods
icebp
stos
and
fld
or
mov
push
call
or
cmp
pop
in
pushf
repnz
jmp
aam
cld
and
xor
and
cmpsb
imul
jp
scas
stos
jecxz
jl
push
lea
stos
and
inc
xor
mov
dec
jae
enter
push
mov
rorl
lods
jmp
fistps
sahf
inc
push
add
fdivrs
xchg
mov
push
call
inc
pop
jnp
out
test
gs
dec
xchg
sub
lea
mov
fisubrs
out
pop
and
in
push
out
arpl
imul
arpl
imul
mov
mov
cmp
mov
test
das
or
cmp
rcrl
mov
dec
div
shl
jae
ds
rorl
rcll
lcall
adcb
out
add
fdivrs
mov
sahf
mov
es
lock
fnstenv
mov
in
mov
jp
dec
imul
mov
movsl
sbb
in
test
imul
jo
hlt
mov
pop
xorb
jl
mov
test
outsb
roll
int
jne
pop
xchg
push
and
xor
lock
scas
sbbl
pop
xchg
lahf
push
sub
sub
sub
nop
das
mov
jle
imul
inc
loope
sbb
aas
outsl
cmp
popf
imul
sub
adc
dec
xchg
mov
inc
bound
int3
xchg
shl
leave
dec
test
aam
in
out
std
loope
in
cltd
jecxz
cwtl
aad
push
mov
sbb
push
hlt
cmpb
into
outsb
mov
leave
xlat
push
push
cmp
add
dec
sub
mov
ret
mov
xchg
cwtl
sbbl
xor
arpl
hlt
dec
sub
loope
imul
es
jl
rclb
add
pop
push
mov
addr16
jae
js
out
and
mov
push
rcr
mov
mov
jbe
cmp
adcb
sub
pop
push
lods
ljmp
and
lahf
mov
leave
imul
pop
xor
cmpsl
stos
cmp
and
aad
clc
dec
xor
jnp
das
mov
fnstenv
add
mov
jns
add
stc
and
std
push
sbb
test
sbb
or
cli
sub
jnp
shll
inc
push
mov
pop
pop
lret
ds
insl
jge
cs
sub
adc
pop
imul
neg
das
mov
adc
xchg
sbb
cmp
xchg
xchg
out
xchg
enter
or
add
cmp
test
jg
adc
xor
ss
jmp
mov
adcb
aam
test
adc
push
add
cmpsb
or
and
test
jmp
lock
sarb
insb
mov
imul
ja
test
inc
sub
jp
xor
test
mov
aad
outsl
mov
lahf
mov
push
out
jecxz
mov
xchg
ret
das
shl
cmpsl
pop
jmp
out
subb
dec
xchg
in
ja
out
fstp
sar
scas
inc
cmp
mov
mov
pusha
xor
adc
cwtl
movsl
and
sbb
mov
lret
add
add
adc
sbb
jle
test
xchg
rol
xchg
out
cmp
xchg
out
dec
push
xchg
pop
inc
loope
scas
fstl
filds
lods
add
inc
pop
ss
insb
or
sbb
pop
xchg
pop
das
xlat
fdivrs
add
lods
mov
adc
jae
hlt
lahf
dec
ds
push
adc
aam
adc
lock
ljmp
lods
dec
inc
les
iret
insb
test
jg
fstpt
shlb
pushf
mov
fs
push
into
ljmp
aas
aas
fbstp
or
je
or
clc
push
adc
push
jbe
push
xor
cmp
gs
insl
add
jge
adc
adc
adc
cltd
mov
jp
pop
add
aaa
mov
in
cmp
pop
je
out
sbb
pop
cmp
scas
shll
mov
sbbl
leave
pop
negb
xor
in
das
cmp
add
mov
out
inc
mov
pop
divl
adc
ret
fistpll
adc
inc
xchg
or
inc
out
data16
jae
sbb
xchg
push
pushf
std
divb
stc
js
fldt
inc
lea
push
add
je
xlat
cmp
push
mov
in
mov
pop
outsl
mov
mov
dec
add
sbb
or
mov
dec
mov
shlb
in
jl
in
jae
xchg
bound
jno
pop
cmpsb
scas
std
xchg
flds
dec
jae
lret
push
push
push
filds
cmpsl
cli
bound
jg
pop
jge
adc
ret
ds
clc
fsubr
mov
shll
jge
bound
push
nop
leave
sbb
xchg
out
inc
xchg
hlt
xchg
push
rcll
lahf
enter
shl
shl
pop
lea
cmc
jg
fucom
andl
push
inc
loop
test
lret
out
mov
jb
jae
dec
xchg
lret
fwait
dec
insl
sbb
jge
stos
lret
mov
sbb
add
dec
loope
pop
fidivl
xor
jnp
lods
inc
iret
adc
pop
cs
lret
icebp
stos
jmp
insb
lods
cli
sbb
and
cmp
mov
popa
xor
repz
push
jno
test
mov
lds
mov
cltd
xchg
movsb
ror
nop
push
add
jg
fsubrl
or
adcb
inc
mov
mov
xor
scas
cmc
mov
ja
mov
add
push
xor
xchg
popa
aam
xchg
sub
dec
jg
stc
mov
scas
inc
imul
shlb
popa
in
fidivs
add
cld
pop
out
pop
pop
or
mov
mov
xchg
add
push
nop
jnp
test
cs
push
dec
push
mov
and
adc
rcl
xor
sub
adc
orl
xor
ja
cmp
cmc
shrd
sub
loop
fldt
adc
shlb
sub
mov
jno
and
jnp
lock
aam
xchg
push
push
ljmp
inc
inc
rcrl
movsl
xor
push
xor
mov
mov
mov
int3
into
cmp
push
push
sahf
sbb
push
jp
xor
adc
scas
push
cmp
fsubp
cmp
popa
add
mov
mov
ss
insb
mov
push
sbb
out
cld
push
cmp
mov
icebp
stos
xchg
sub
xlat
add
idivb
andl
mov
addr16
js
xchg
fldln2
test
sub
or
add
xor
lret
mov
adc
xor
or
ficomps
into
roll
sbb
jns
cmp
xchg
sbb
call
push
in
push
push
jno
mov
mov
inc
fs
mov
xlat
outsb
jl
adc
iret
insb
add
sbb
int
fisttpl
jnp
pop
repz
pop
sub
jo
out
lock
scas
add
jl
clc
jae
push
pop
mov
repz
jnp
ret
jnp
js
fndisi(8087
data16
push
fcompl
xchg
pop
push
sub
scas
fstpl
test
and
fidivs
mov
push
stos
sbb
inc
testb
mov
adc
fbstp
jecxz
mov
push
cli
outsb
out
pop
xchg
das
adc
jae
push
fnstenv
or
mov
add
addr16
dec
enter
sub
sub
bound
mov
gs
int3
xchg
mov
xor
into
xor
cmp
push
test
inc
xor
arpl
fistps
jg
or
es
in
test
jno
add
xchg
stos
loope
clc
mov
mov
cwtl
pop
push
fimuls
lds
ss
or
mov
int3
mov
in
lret
es
xor
and
fimuls
adc
xor
bound
ret
aas
loopne
mov
fldl
iret
jno
leave
in
test
mov
dec
movsl
jl
in
adcl
outsl
add
and
sahf
push
mov
lret
mov
xor
enter
cmpsb
cmp
inc
gs
mov
shlw
mov
sbb
push
adc
push
fldcw
push
test
and
int
mov
inc
in
pop
push
jae
cmpsl
fists
xchg
push
fbld
sub
sub
cmp
mov
pop
movb
loop
data16
fidivrl
imul
sbbb
imul
sbb
push
ljmp
push
push
es
ja
cwtl
inc
cmp
imul
mov
cmp
in
rdpmc
enter
cmp
stc
in
xchg
dec
inc
pop
mov
pop
sub
in
aas
inc
pop
pop
jp
jmp
js
push
add
jb
ror
sub
sbbb
xor
ficoml
jne
jb
lods
sbb
aam
and
xchg
add
or
rcrl
into
add
ret
jne
or
outsb
dec
loopne
push
sub
mov
ja
fisubrs
and
dec
dec
test
jl
outsl
push
dec
lret
subb
popa
jnp
rcrb
sbb
mov
add
push
dec
push
dec
fdivl
push
cmp
inc
sub
enter
xchg
orl
sub
jmp
cwtl
shlb
jg
xchg
mov
lcall
imul
scas
ror
sti
sbb
or
jp
sbb
js,pn
cmp
popa
enterw
fs
lods
mov
das
call
cmp
cmpsl
dec
xor
test
movsb
divb
inc
popa
xchg
sbb
test
fsubrp
sahf
dec
iret
adc
popa
aas
pop
cmp
fcmovnbe
ret
loop
pop
scas
shlb
es
ret
pop
sub
out
pop
pop
cmp
push
cmpsb
mov
int3
jle
ds
push
cmp
cmc
and
xchg
mov
ja
in
inc
fistl
sbb
add
xor
sub
cli
cmc
push
push
test
mov
pop
mov
outsb
lea
sub
std
add
cs
mov
int3
adc
aas
push
je
xor
adcl
stos
dec
cld
lock
gs
pop
adc
cmpsb
inc
cmp
test
icebp
jle
mov
pop
mov
cmp
fwait
or
push
into
pop
inc
popa
nop
out
ficomps
pop
out
call
in
movsl
aad
and
xor
loope
fwait
push
montmul
cmpsb
test
frstor
push
jmp
in
xchg
sahf
sub
jae
mov
in
inc
fldenv
fdivs
stc
jge
inc
test
int
dec
mov
out
repnz
mov
inc
xor
fstps
or
mov
mov
cli
stos
sub
jnp
jl
pop
outsb
sub
xchg
das
cmp
push
mov
movsb
into
dec
adc
jns
add
pop
fnsave
out
sub
xchg
clc
or
xor
mov
mov
pop
out
in
ret
add
ja
sub
pop
mov
js
mov
adc
imul
lahf
negl
pop
dec
shlb
or
add
sub
shll
pusha
sarb
in
pop
repz
push
shl
shrb
jg
shl
hlt
mov
cmp
stos
pop
test
push
inc
pop
pop
or
xchg
data16
sub
into
fldl
sbb
or
pusha
aam
jbe
lcall
aad
popa
xchg
pop
in
ja
pop
loope,pn
testb
iret
adc
push
shl
cmp
daa
jl
ret
rcl
movsb
pop
loope
or
sbb
lahf
addr16
inc
fistps
je
lret
fdivs
or
pop
ds
clc
or
mov
inc
pop
mov
inc
lahf
cmpsb
sti
mov
shr
mov
jno
iret
sub
in
movsl
in
test
push
call
scas
nop
in
inc
pop
lods
adc
stc
test
xlat
xlat
int
push
mov
and
xchg
pop
je
xchg
dec
das
and
jle
lahf
mov
add
push
ljmp
xor
or
pop
stc
decl
pop
popf
shlb
fadds
inc
int
and
popf
das
inc
iret
leave
xchg
sub
xchg
not
cs
pop
adc
leave
mov
jae
outsl
mov
je
scas
jns
insl
sbb
xchg
mov
push
xchg
in
or
push
dec
rorl
popl
in
dec
mov
and
or
push
pop
push
icebp
dec
or
out
cmpsl
jmp
stc
je
mov
mov
aam
cmpsl
fwait
mov
add
xor
into
push
imull
test
out
fidivs
arpl
pushf
jmp
jns
pushf
push
lcall
sbb
sbb
dec
mov
das
jnp
sbb
lret
push
ficoml
push
pop
cld
jecxz
jne
sub
xchg
stos
push
pop
mov
lds
push
loop
or
xlat
or
cltd
adc
mov
ds
jmp
shll
std
jmp
aad
stc
xor
inc
mov
jne
stc
das
sub
mov
cmp
cmp
out
sbb
int
outsb
les
add
cmpsb
jp
in
cltd
in
jmp
sbb
pop
sub
int
out
je
xchg
mov
ror
xor
mov
in
filds
and
cmp
and
inc
xor
sahf
lods
jb
into
int3
lea
mov
push
ss
outsl
lods
shl
cs
jg
or
xor
into
pushf
outsl
rep
in
mov
cmp
push
xchg
jl
repz
in
mov
loope
lcall
and
jp
add
cmp
cltd
es
in
push
xor
fs
push
push
ret
sub
sub
dec
inc
fidivrl
jmp
scas
add
loop
cmp
inc
stos
aas
int
cmp
movb
push
fs
mov
lret
cld
jmp
xchg
outsb
jne
mov
pop
push
inc
push
sbb
jecxz
jecxz
fdivs
cwtl
push
fisttpll
xor
in
sub
cmc
into
fwait
jnp
lock
sarb
mov
or
pshufw
mov
pusha
add
fcompl
movsl
jecxz
push
xor
cmp
call
les
pushf
or
sbb
inc
notb
imul
shr
fwait
imulb
pop
test
lret
iret
add
outsl
mov
jmp
jg
pop
aas
loope
pop
xchg
sbb
movsl
je
mov
mov
sub
fwait
sbb
cmp
sbb
sub
and
test
add
loop
push
out
in
incb
cmp
lret
shr
or
iret
sbb
push
in
cli
icebp
repz
stos
sbb
mov
xchg
inc
inc
fildl
xor
jae
jne
lret
into
jl
arpl
data16
pop
jbe
or
add
rcll
int
sub
icebp
inc
leave
fistps
loopne
stos
pop
sub
mov
dec
cmp
pop
xchg
add
dec
adc
sbb
add
in
loopne
roll
sbb
aad
cmpsl
mov
outsb
add
shll
imul
xchg
xchg
sub
push
or
and
adc
daa
mov
popa
mov
das
shrb
mov
mov
dec
xchg
mov
dec
lds
aam
xorb
dec
or
xchg
lock
fs
sbbb
xchg
cmp
pusha
push
inc
dec
cmp
cli
inc
push
jbe
cwtl
lahf
push
lret
xchg
adc
jae
pop
les
push
iret
cmpsb
jb
mov
sbb
aas
imul
addr16
je
xchg
data16
push
mov
clc
fcomps
inc
shll
movsl
movl
xchg
stc
enter
sub
push
lret
sbb
and
cli
lahf
hlt
mov
loopne
in
pop
xlat
pop
inc
test
mov
cld
jle
xlat
mov
sub
bound
mov
int
mov
in
js
pop
cmp
adc
jmp
test
or
lahf
test
pop
icebp
push
movsl
es
inc
je
add
sti
xchg
sub
add
pop
pop
push
into
daa
test
je
cld
add
fidivs
cmpb
mov
in
ds
insb
in
or
pop
jmpw
inc
push
das
mov
push
popa
testl
jle
fwait
lret
ret
jne
mov
cmp
jmp
testl
pop
sbb
xchg
insb
add
lahf
sub
xor
sub
aaa
andl
in
push
and
cld
mov
sbbb
mov
scas
std
jo
loope
arpl
add
ss
push
or
fistps
mov
loop
mov
fsubp
jl
mov
lret
fildl
daa
inc
ss
shl
stc
addl
inc
add
fwait
rorb
pop
xchg
push
int3
loope
fs
hlt
or
lret
data16
and
xor
and
ljmp
push
mov
loope
dec
rcl
xchg
mov
cmp
add
sbb
pushf
or
xchg
add
cld
inc
lods
mov
scas
bswap
or
sbb
add
adc
push
sbb
jno
inc
jae
fdiv
inc
and
ret
pop
cmpsl
push
dec
fs
lcall
add
leave
mov
xor
imul
push
icebp
cltd
nop
jo
mov
dec
fbstp
into
inc
les
mov
mov
gs
addr16
pop
stos
or
call
jg
push
pop
jbe
aas
add
in
add
cmc
out
jns
aam
fsubrp
cmpsb
jg
jle
mov
shll
cs
xor
jmp
sbb
roll
pop
leave
push
inc
jl
fwait
imul
cmp
cli
daa
push
in
cmp
mov
jecxz
sbb
gs
jle
stos
and
lods
add
jne
dec
xchg
dec
cmp
pop
pop
sar
or
dec
pop
or
add
rclb
adc
frstor
mov
int
xor
jbe
dec
mov
inc
pop
mov
push
sub
mov
dec
aam
mov
adc
cmpl
dec
mov
fmull
cmp
fs
push
sub
les
cmp
in
jb
arpl
cmp
sti
fwait
addb
dec
mov
xor
or
popa
xor
push
lock
sbb
ficompl
push
push
lock
mov
inc
sti
outsl
pop
cmp
xchg
lock
mov
cmp
and
js
lock
dec
mov
or
add
pop
loopne
lea
cmpsb
in
movsb
xor
mov
insl
insb
jecxz
add
xchg
mov
jbe
push
jecxz
or
enter
mov
jb
push
jecxz
movsb
pop
jge
lret
sbb
fs
enter
cwtl
stos
shrb
shrl
shll
out
bound
outsl
adcl
add
jge
sub
xchg
jle
mov
xor
loope
push
sub
cs
xchg
stos
jbe
ja
fs
adc
into
popf
mov
mov
inc
pop
repz
cltd
or
sub
cmpsl
ret
fs
sbb
mov
lahf
xor
es
fstpl
push
shl
or
ss
cli
xor
sub
sub
test
jg
mov
jge
mov
fisubrl
push
add
push
aam
lea
shll
leave
push
or
jns
mov
rorb
push
jo
popf
test
push
scas
adc
adc
add
dec
js
lcall
xor
shll
lea
cmpsb
scas
jp
pop
xchg
outsb
test
dec
lahf
xchg
push
mov
call
lret
jmp
fdivs
imul
and
in
stos
push
lds
pop
cmp
jne
dec
inc
jo
outsb
add
jo
xlat
lret
or
sbb
test
or
xorb
mov
or
out
idivb
mov
adc
mov
fs
lcall
mov
sbb
repnz
fcomps
movsb
ja
out
call
rcrb
rcll
jno
mov
test
cli
enter
add
je
in
das
cmpsl
test
test
jp
fldcw
add
popf
push
push
adcb
pop
xchg
repz
mov
jg
cmp
xchg
pop
movl
mov
jmp
subl
sar
adc
jnp
loope
bound
sti
int3
std
sbb
enter
xor
xchg
clc
mov
call
sub
sahf
stc
call
push
fwait
repz
loope
js
xchg
mov
test
sbb
jns
mov
xchg
aaa
mov
push
add
mov
cmc
and
xchg
scas
add
sarl
and
push
sbb
out
inc
clc
vmwrite
jge
inc
jno
adc
imul
sbb
cli
dec
aad
jmp
mov
rcrl
stos
mov
fsub
loope
jmp
loop
int3
rcr
decb
sbb
xchg
xchg
add
cltd
cmpsb
xchg
popf
jg
jge
sbb
mov
xor
xchg
stos
sub
pushf
or
mov
pusha
es
pop
lock
notl
xchg
rcll
lret
test
repnz
sub
mov
test
ljmp
cmp
popa
xor
push
fsubrp
stos
fwait
stos
shlb
xor
aad
loop
cwtl
daa
dec
movzbl
cmc
rclb
sbb
jns
cwtl
das
push
xchg
fcompl
in
out
jae
or
dec
std
push
test
cli
cli
jg
fistpll
ss
jecxz
stos
sbb
xor
pop
iret
pop
sub
lret
mov
lea
mov
jo
addb
xlat
jg
and
jb
xor
shrb
dec
mov
int3
arpl
por
sbb
outsl
jnp
or
into
js
scas
addb
sub
ds
pop
rcrl
add
sbb
pop
test
xchg
lcall
xchg
arpl
test
or
pop
push
mov
xor
adc
mov
add
into
enter
xchg
adc
mov
test
clc
or
dec
out
pop
hlt
movb
fisubrl
pop
pop
inc
fucomp
mov
push
and
mov
or
inc
lea
in
lods
mov
xor
sbb
pushf
mov
stos
nop
outsb
cmpsl
inc
fisubrs
out
gs
fs
into
mov
pusha
add
sub
sbbl
cwtl
incb
negb
add
aas
les
scas
movsl
sti
lret
and
xor
cmpb
ret
mov
dec
dec
mov
sbb
mov
sub
xchg
mov
inc
scas
sbb
cmp
ja
fsubrs
mov
ds
dec
lods
js
js
int3
and
jecxz
movsb
les
imul
pop
push
mov
sub
cwtl
daa
into
mov
sbbb
int3
mov
outsl
mov
shl
nop
lds
decl
mov
je
push
and
jl
jmp
in
mov
mov
lret
in
out
pop
lods
mov
sbb
push
cmpsb
pushf
gs
adc
jmp
aam
and
jp
les
dec
lret
hlt
jbe
jge
aam
jae
sbb
aam
call
dec
or
pop
xor
or
and
push
pop
cwtl
sbb
add
sbb
and
test
ret
and
jle
xor
cli
push
shr
push
in
clc
and
loopne
mul
sub
push
lret
mov
jmp
in
xchg
out
pop
xchg
jb
into
jmp
fsubl
fstpl
mov
sbb
es
jo
push
sub
push
insl
mov
call
sbb
mov
xor
xchg
in
push
es
add
lds
nop
dec
mov
cltd
ljmp
xchg
popf
jg
push
xor
xor
mov
ja
out
mov
mov
pop
push
inc
sbb
leave
cld
pop
push
inc
ret
into
mov
sbb
enter
dec
add
and
hlt
push
push
mov
or
lds
icebp
sahf
les
sbb
jno
test
mov
bound
into
inc
ja
or
cmp
rorl
fdivrs
lods
and
stos
fwait
xchg
outsb
dec
pop
ret
mov
test
cmpsb
imul
lret
in
std
sbb
cltd
test
dec
push
xor
jb
mov
or
adc
lahf
xchg
dec
sub
sbb
ds
dec
in
sbb
jle
cmp
leave
daa
or
add
push
mov
inc
ja
cwtl
into
sub
int
pop
mov
dec
push
cltd
sahf
lret
out
aaa
ss
inc
sti
ljmp
add
into
sub
jecxz
es
cmp
mov
adc
and
mov
out
sbbb
xor
and
jnp
jno
fiaddl
adc
xchg
bound
sbb
adc
push
in
pop
insl
test
jnp
jp
pusha
sub
pop
cmp
sbb
daa
xlat
rep
aam
mov
decb
jb
or
add
bound
cmp
xchg
orb
imul
sbb
add
test
stos
es
sbb
out
popa
je
inc
std
xchg
push
mov
adc
je
dec
xchg
sbb
sub
push
call
inc
xor
out
ffree
test
xchg
and
mov
test
arpl
sbb
int3
ror
lret
mov
cmc
clc
sbb
inc
imul
lock
pushf
xor
xor
movsl
xlat
mov
insb
outsb
scas
fsubs
xor
mov
lods
jns,pn
pop
jne
jecxz
movsl
imul
jae
insl
xor
mov
mov
xor
out
aaa
push
xchg
adc
dec
xor
xchg
dec
pop
dec
mov
cmp
bnd
popa
clc
rcrl
jg
xchg
out
std
or
jmp
pop
stc
scas
pop
cltd
decl
mov
mov
clc
movb
xor
xlat
rep
jns
test
ds
fbstp
push
or
cmp
push
rcr
insb
inc
test
arpl
ljmp
es
mov
fsubs
mov
cld
or
fcmovne
dec
pop
mov
sbb
push
mov
pop
fisttpl
in
inc
repz
stos
dec
ljmp
sbb
es
add
inc
fsubl
das
repnz
fidivl
ss
aad
sub
cmp
sub
sahf
pop
pop
fcoms
jl
inc
scas
call
in
sahf
and
jg
popf
add
mov
cmp
and
rcl
aad
pusha
jl
sarb
and
inc
jmp
cmp
loope
shll
stos
xchg
add
mov
mov
int
adc
fs
jbe
fisttpl
jge
jnp
repnz
and
aam
fldcw
cmpsl
call
stc
cli
pushf
add
ljmp
mov
loope
ret
repnz
outsl
dec
hlt
xchg
imul
les
loop
fistpl
aas
mov
push
sub
push
movsb
cmpsb
mov
daa
or
jno
sbb
inc
pop
call
std
data16
movsb
cs
add
or
ja
in
test
xor
enter
dec
rclb
xor
cmp
sahf
sub
add
cmp
fxch
dec
cmp
lods
fucomip
loop
inc
cmpsl
pop
sub
pop
dec
sahf
ja
test
xor
add
scas
inc
mov
push
push
jno
xor
and
mov
adc
andl
or
xorb
or
sbb
sub
or
mov
jg
mov
sub
daa
jmp
call
and
stc
xor
outsl
scas
xor
dec
loope
mov
lcall
jb
xor
dec
jb
jle
outsb
lods
aad
enter
imul
push
dec
stc
xor
popa
dec
sub
push
outsb
decl
jnp
rol
in
mov
cmp
xor
dec
je
fdivl
and
jb
dec
mov
sbb
iret
arpl
push
fcmovne
xor
sbb
movsb
nop
clc
sahf
clc
adc
aam
into
mov
lret
push
pusha
int3
adc
stos
mov
sub
and
popl
or
cmpsl
add
add
sub
cltd
push
adc
mov
into
movsl
xor
call
in
out
dec
dec
rorb
jae
or
les
push
stos
lds
mov
mov
mov
call
fprem1
inc
sarl
mov
pushl
aas
sub
cmpsl
mov
fwait
mov
mov
dec
in
pop
out
in
outsb
sub
std
lea
dec
dec
xchg
stos
leave
arpl
push
xchg
push
iret
and
jl
pop
cmp
sbb
dec
movsl
rorl
jo
dec
dec
and
leave
mov
in
lea
rcl
push
pop
sub
cmpsb
fst
bound
and
dec
xchg
stos
pop
or
jmp
aaa
inc
or
fidivl
adc
loop
jmp
movsb
inc
mov
dec
push
int3
mov
mov
sub
repz
out
pusha
dec
xchg
js
bndstx
in
adc
movsl
fwait
repnz
lea
iret
and
cmp
mov
inc
inc
adc
mov
popa
test
sarb
mov
imul
pop
scas
xchg
in
mov
sub
lock
push
jg
adc
popf
mov
pop
sbb
mov
mov
lock
out
ret
adc
int
sahf
inc
jecxz
and
mov
subl
jbe
mov
lret
ds
jo
adc
scas
jge
pop
gs
xchg
jge
and
mov
lahf
jbe
jmp
add
dec
imul
das
adc
rcrl
and
mov
add
or
xchg
dec
pop
test
dec
jb
xchg
scas
mov
enter
cmc
or
daa
sub
push
mov
or
add
insl
mov
or
jp
sti
sub
pop
daa
fdivl
mov
pop
push
jne
xor
gs
mov
stc
lcall
and
dec
in
in
mov
mov
mov
jl
in
pop
mov
sub
fiaddl
jmp
and
xchg
mov
mov
adc
sub
js
pop
hlt
or
adc
mov
stos
testl
jmp
mov
push
test
imul
sub
ficoms
push
pop
in
mov
adc
or
mov
rcll
lea
clc
push
test
insb
xor
les
adc
add
daa
add
ss
pop
xor
sub
test
cltd
push
dec
out
scas
bound
fidivs
je
and
inc
lret
mov
subb
xchg
lods
pusha
sbb
mov
xchg
sub
jmp
sahf
xor
cmp
std
cltd
mov
outsb
adc
sbb
mov
mov
pop
or
xor
bound
inc
aad
jecxz
inc
testb
and
push
movsl
cmpsl
shlb
mov
sub
or
lea
adc
addb
and
ret
daa
in
mov
sbb
out
das
xor
sub
out
sub
test
mov
es
insl
enter
jnp
bswap
mov
mov
fnstcw
jg
push
aad
cmp
sub
adc
push
test
add
jg
push
sbb
xor
adc
icebp
inc
lock
ror
add
jbe
pop
stos
add
lcall
mov
push
push
sub
ss
ss
out
ljmp
fdivs
test
ja
jg
or
ja
lcall
push
fwait
test
cmpb
pop
ret
or
jbe
mov
leave
lods
xchg
or
stos
jl
aaa
mov
mov
add
pop
add
or
hlt
fcmovnb
shr
and
cwtl
push
jb
jne
sbb
mov
sbb
adc
push
int3
jg
and
xor
sahf
daa
mov
xchg
push
xor
xchg
jno
push
call
jbe
aaa
stos
subb
cltd
cld
xchg
or
cwtl
out
rcll
cmp
push
inc
cmp
or
adc
push
jno
inc
pusha
andl
mov
cmp
lcall
mov
nop
sbb
sahf
mov
mov
repz
mov
out
pop
or
mov
and
pop
and
lods
mov
ficomps
push
push
mov
fs
notl
pop
sub
rorb
popa
lds
push
dec
cs
jp
nop
fmul
dec
cmp
jbe
aad
pusha
repz
sbb
push
inc
add
adc
push
push
inc
lcall
movsl
ss
sub
push
lods
fistpl
test
xor
mov
cmpsl
out
addr16
cld
or
inc
add
lcall
sar
cmc
in
and
cmpsl
jb
imull
loop
or
fcoms
jae
jnp
shlb
mov
inc
fldenv
push
xchg
sbbb
sub
es
jmp
stos
add
dec
loopne
inc
out
addr16
and
push
aad
add
mov
not
inc
fiadds
in
scas
jnp
daa
gs
push
jmp
je,pt
addl
mov
mov
int3
lret
stos
bswap
shlb
push
sub
in
xchg
add
lods
jecxz
fwait
lret
pop
inc
pop
fisubs
mov
dec
add
sub
popa
inc
mov
jns
repz
mov
dec
test
mov
in
push
in
jo
mov
jp
fwait
lret
in
dec
in
cltd
sbbl
jmp
cmc
sbb
mov
aam
repnz
push
cmpsb
mov
mov
sbb
add
lahf
in
mov
xor
and
xor
push
data16
and
test
std
add
aas
insb
cmp
dec
sub
dec
push
imul
jl
subl
iret
xor
and
add
mov
mov
mov
test
and
cli
pushf
cmpsb
imul
stos
sbb
test
lret
xor
mov
imul
out
aaa
fdivs
ret
inc
clc
in
repz
mov
mov
fdivrl
int
sub
sarl
push
cmp
cmpsb
mov
or
sbb
rorb
adc
imul
testb
or
sub
repnz
into
les
jp
subb
dec
in
sbb
xchg
dec
mov
mov
pop
fwait
and
and
xchg
aad
mov
dec
scas
cmp
leave
xor
cmp
mov
ret
cmp
sub
fcoms
mov
pop
ljmp
pusha
stos
enter
adc
inc
pop
loopne
outsb
inc
pop
mov
mov
sub
cmp
mul
ret
pusha
imul
sub
test
or
fildll
enter
scas
cld
jb
pop
push
or
pop
jl
mov
pop
and
push
in
ja
and
jbe
outsb
jns
imul
in
jbe
decl
cmpsl
xchg
imul
inc
cmpl
sub
movl
scas
jmp
addr16
mov
out
cmp
mov
and
mov
ficomps
adcl
int3
jl
xor
mov
xor
mov
dec
adc
out
test
or
fidivs
jg
cwtl
stos
jl
mov
push
and
push
cmp
loopne
inc
test
pop
mov
out
outsb
xor
or
and
pop
jmp
test
popf
sub
add
inc
stos
pop
adc
jmp
inc
push
popf
lods
js
dec
dec
sarl
sahf
push
ret
push
out
stos
sahf
and
jg
hlt
cmpsl
sub
lds
jp
inc
pop
icebp
jno
jae
mov
cld
cwtl
pop
add
add
out
add
arpl
push
inc
dec
bound
imul
lods
imul
int
jmp
lods
int
dec
jmp
test
stos
mov
xchg
mov
lret
movsb
rcrl
pop
mov
dec
out
push
or
inc
xchg
mull
or
popa
xchg
and
js
and
mov
mov
lea
mov
scas
lods
test
and
adc
sbb
cld
gs
mov
movsl
mov
add
lock
daa
mov
fnsave
movups
int
loop
movsl
shrb
fstpt
aam
xchg
lods
xchg
sbb
add
dec
push
inc
cltd
inc
mul
das
imul
mov
mov
les
jmp
mov
or
or
cmp
push
in
enter
mov
push
jmp
outsb
xlat
jo
inc
dec
mov
std
lret
jae
push
sahf
leave
inc
in
jne
fucomp
scas
mov
aam
sbbb
push
push
xor
cmp
adc
je
movsl
inc
sahf
lods
mov
fucomp
and
xchg
icebp
jb
aas
push
fld
mov
add
pushf
movsb
js
cltd
subb
daa
mov
adc
dec
aam
push
sub
fistps
testl
imul
fnstenv
push
sbb
pop
in
or
mov
divps
fcomps
mov
test
cltd
dec
and
cli
lret
xchg
shr
out
xchg
ss
mov
test
fnstcw
push
jno
mov
sti
divb
enter
daa
iret
dec
mov
out
cmp
mov
insb
adc
popf
sbbl
fbstp
sti
les
shlb
xchg
daa
inc
clc
popf
int
dec
xchg
lea
pop
cmp
test
mov
rcrb
xchg
arpl
aad
lods
icebp
push
mov
mov
mov
or
popa
xchg
jg
mov
test
fdivrl
pop
lret
mov
std
psrlw
xchg
push
out
jo
push
lret
lahf
and
test
push
out
loope
fistps
jne
xor
or
pop
aaa
test
mov
push
xor
dec
ret
aaa
mov
sub
test
cmp
cmp
nop
add
ret
sbb
loope
mov
lcall
movsb
dec
mov
movswl
and
xor
movsb
and
insl
jae
mov
add
lea
xor
push
out
lds
mov
adc
push
lock
stos
imul
ja
pop
jmp
outsl
mov
adc
add
add
dec
xchg
sub
adc
pop
jg
lock
sub
daa
xor
loope
aaa
push
jb
pop
inc
fwait
mov
fstps
cmp
adc
mov
ss
cltd
jge
xchg
mov
fwait
push
stc
les
ss
loope
lret
push
pop
cmovno
repz
test
enter
addl
mov
add
dec
in
hlt
adc
mov
imul
insb
add
daa
push
test
lods
pop
sbb
xchg
mov
rcrb
mov
in
js
cmc
mov
cltd
mov
and
mov
sub
push
test
add
jbe
xor
sbb
jg
xor
mov
lcall
dec
and
scas
inc
xor
adc
test
fdiv
cmp
xor
imul
lock
mov
sbb
mov
in
cli
adc
xchg
popa
jnp
pop
pop
and
push
in
outsb
mov
dec
mov
aas
adc
cli
dec
lcall
adc
and
push
jle
sub
sub
ret
sbb
out
js
pop
mov
dec
sarb
xor
stos
push
push
popf
mov
jge
jb
dec
outsb
xchg
pop
jecxz
hlt
cli
push
subl
loope
mov
ss
push
fisubl
stos
push
call
loop
negl
test
push
mov
mov
mov
push
loop
adc
test
adc
sub
push
xchg
add
add
cld
stos
pop
and
rorl
leave
jo
pushf
roll
nop
jnp
in
dec
in
add
pop
fbstp
jae
xchg
add
mov
add
ja
mov
jg
fdivrl
inc
imul
inc
jmp
jge
incb
ljmp
xor
push
and
lea
loope
insl
fs
and
dec
cmp
rcl
dec
pop
xchg
and
imulb
adc
lods
sahf
call
jo
xchg
xor
xchg
mov
insl
pop
push
addr16
enter
jl
mov
or
jmp
aaa
out
in
push
repnz
cwtl
pop
ret
mov
lds
inc
and
fwait
adc
sbb
cwtl
xor
mov
push
sahf
lret
addr16
or
push
sbb
addr16
or
push
sbb
fcompl
jne
ljmp
jo
repz
test
loopne
cmp
dec
dec
pop
add
pop
in
clc
cmpsb
clc
loopne
mov
cwtl
fsubrs
adc
test
out
xchg
and
psraw
and
mov
idivb
hlt
push
clc
loopne
movsl
pop
xchg
pop
aaa
mov
push
xchg
in
lea
adc
and
and
inc
and
arpl
test
scas
xor
push
pop
or
gs
leave
sbb
jne
mull
ret
es
adc
push
xorb
subl
jne
fidivl
shl
mov
pop
mov
pusha
das
cmp
shr
cli
pushf
sbb
cmpsl
es
pop
pop
enter
popf
xchg
inc
int
nop
pop
rcr
cmp
lock
jmp
pop
aad
sbb
stos
mov
or
add
cmpsb
movq
mov
cs
mov
hlt
add
or
inc
push
ljmp
push
dec
pop
lret
lods
ret
xchg
lock
cld
mov
shrb
push
repz
sti
cli
sub
xchg
pop
push
sbb
or
arpl
add
repnz
mov
sti
sbbl
lods
in
sub
cmp
negb
pop
push
push
adc
pushf
popa
inc
xchg
test
push
shl
cmp
push
or
cld
fwait
test
add
sub
mov
xchg
cmp
cwtl
call
push
or
adc
mov
repz
out
aam
ja
mov
push
bound
ljmp
inc
stos
pushf
ds
test
pop
dec
in
test
xor
jbe
adc
jecxz
scas
sub
lods
sbb
jge
push
daa
out
ja
xchg
jne
jmp
cmp
leave
imul
dec
mov
movsl
shll
pop
in
and
xchg
inc
push
stos
sbb
cmc
pop
push
shlb
and
call
dec
scas
jge
outsb
std
mov
and
rcll
fcomip
sti
and
iret
xor
outsb
sub
test
add
testb
cmp
movsb
loop
fimull
jo
xor
push
xor
fcmovnbe
repnz
sbb
pop
mov
mov
jnp
xor
popf
decb
arpl
mov
dec
loopne
mov
dec
inc
int3
pop
or
sub
sub
mov
mov
test
aad
sbb
add
movsl
dec
mov
push
xchg
cmp
in
sbb
lock
push
arpl
out
mov
popa
pop
shl
rorl
mov
bound
pop
jmp
loope
jnp
icebp
adc
mov
sahf
movsl
mov
cmp
cld
into
fsubrl
rolb
leave
ret
fwait
lock
out
dec
in
jg
in
and
pop
cmp
negb
test
adc
push
icebp
sub
lds
paddusw
call
mov
pop
dec
insb
cld
insl
shlb
loop
clc
fwait
das
mov
popa
inc
mov
inc
mov
insb
ret
push
mov
pop
sarl
pop
adc
xchg
jmp
imull
je
jmp
xor
and
negb
jae
shrb
lea
cmp
out
or
ljmp
sahf
mov
dec
or
dec
testl
fisubrs
sub
xlat
push
hlt
lods
pop
test
pushf
mov
fnstenv
fistl
fucomp
mov
or
cli
jns
in
xorb
pop
scas
xchg
test
dec
int3
ficomps
pop
out
popf
shl
pusha
mull
dec
loopne
mov
mov
fistps
cmp
scas
fistl
sbb
cmp
mov
inc
into
outsl
jnp
test
add
lods
xor
lret
xchg
dec
and
mov
call
push
jl
push
mov
xchg
mov
fwait
popf
pop
ret
in
lods
adc
sub
jecxz
cwtl
mov
cmpsb
xor
jo
iret
es
inc
int
push
jp
ret
mov
scas
cmpsl
ds
jg
xor
js
mov
dec
in
cwtl
mov
roll
rclb
sub
mov
inc
outsb
das
jne
and
mov
popw
sbb
dec
leave
cli
xchg
sti
imul
fbld
out
cmp
clc
jne
push
jl
push
shlb
iret
ret
or
test
or
rolb
mov
inc
arpl
orl
dec
dec
in
push
inc
and
fmul
loop
push
lret
jmp
dec
sub
imul
ret
mov
jmp
or
das
or
and
push
notb
dec
cmpb
cmp
jb
repnz
add
movsb
add
test
and
cmp
hlt
out
fistpll
inc
decb
inc
scas
aas
xchg
pop
xor
mov
cmp
dec
icebp
lret
mov
mov
clc
invd
loop
aad
and
sbb
clc
pushf
jp
or
mov
setnp
mov
cmp
cli
xor
xchg
dec
dec
ljmp
cltd
hlt
jns
subb
and
mov
lds
pop
mov
jb
pusha
pop
sub
jb
bound
scas
dec
addr16
arpl
loopne
aas
pop
mov
jmp
ds
call
andb
clc
pop
jb
cld
jp
sub
and
inc
cli
inc
inc
dec
add
mov
mov
mov
fsts
mov
ljmp
push
inc
fsubrl
popa
mov
ret
add
dec
rorb
cmp
jle
xor
iret
cmp
add
cltd
mov
cmc
mov
stc
push
test
jmp
into
rol
sbb
xor
ffreep
int3
arpl
stos
aam
loopne
inc
fnstcw
xchg
imul
or
jl
int3
movsl
in
mov
pop
xor
out
mov
ret
std
or
mov
cwtl
int
sbb
sub
xor
hlt
xchg
sbb
mov
or
push
mov
in
sub
xchg
stos
push
mov
inc
insl
inc
bound
sub
test
push
xchg
pop
loopne
sub
mov
jb
mov
push
adc
or
fistpl
push
pop
mov
xchg
add
fidivs
inc
sbb
fldl
sub
pop
loope
mov
push
xchg
dec
mov
cmpsb
cmp
push
jmp
push
bound
test
push
mov
daa
in
cmp
sub
insb
jle
inc
nop
je
repz
xchg
and
and
sbb
xchg
pop
xor
daa
mov
popf
sub
dec
adc
mov
push
jecxz
frstor
xlat
jmp
icebp
jge
aam
das
add
mov
and
pop
pop
aaa
aad
jp
popa
xor
push
jmp
aaa
outsl
subl
inc
stos
lcall
out
mov
mov
xor
mov
adc
inc
sbb
jns
xor
cmc
mov
in
push
in
mov
xchg
jecxz
sbbl
mov
popf
push
icebp
xor
add
pop
inc
lahf
xor
es
sub
inc
int3
movl
sbb
or
adc
pushf
add
rclb
push
lods
sub
add
cmp
sbbb
push
pop
push
jecxz
sahf
add
movsb
cmpl
orb
rol
pop
xchg
sti
cmp
jo
xchg
or
cmp
enter
mov
jl
addl
out
mov
inc
xchg
pop
mov
shlb
push
inc
mov
push
dec
imul
lock
sub
sarl
ficompl
or
imul
sbb
mov
cmp
rol
lcall
andl
mov
lock
and
pop
fildll
mov
pop
pop
cltd
dec
lock
sub
push
jno
inc
or
sbb
pop
jle
loop
jbe
enter
dec
mov
aas
push
cld
sub
sub
scas
test
xor
and
jnp
jecxz
data16
outsb
mov
cmpsl
cmp
jo
cmp
mov
aaa
das
xchg
stos
fimull
xchg
jmp
leave
add
dec
mov
jp
sbb
push
pop
mov
xor
das
inc
sub
outsb
and
pavgb
inc
push
aas
ljmp
push
jle
push
push
and
jl
sbb
mov
ret
repz
and
outsb
mov
inc
bound
in
fdivp
sbb
push
test
es
std
adcb
fiadds
jb
mov
push
in
inc
pop
repnz
inc
jbe
int3
cltd
jbe
aas
push
out
cs
xchg
sbb
das
ret
sub
popf
lods
xor
enter
outsl
fcompl
int
mov
int
push
lods
xchg
out
pusha
int
gs
push
jb
fucomp
notl
ss
int
cmp
jecxz
mov
adc
or
xchg
mov
int3
sub
cmp
mov
cmp
cmpsb
aam
push
and
aam
in
outsl
sbbb
insl
pop
out
in
icebp
or
cltd
lock
arpl
sub
pop
add
mov
sub
cli
out
jne
sbbb
les
pop
fdivl
ja
xchg
icebp
and
xchg
pop
xor
push
retw
jne
pop
sbb
xor
mov
xor
arpl
dec
sub
fcomps
aad
jb
push
into
pushf
mov
dec
ljmp
mov
daa
jno
inc
mov
mov
dec
roll
push
pushf
cmpsl
loope
int
mov
ss
fsubrs
out
cmpsl
inc
inc
push
mov
loop
adc
out
pop
in
sbbl
in
dec
and
mov
sub
insl
lret
jae
xchg
and
js
jae
test
xchg
and
xor
xchg
fsubrs
add
fmull
mov
jmp
jmp
xor
shll
cli
sbb
cld
xorl
cmp
rcl
call
pushf
xor
in
jb
or
mov
fisubrl
lods
stos
lahf
jb
stc
mov
jecxz
call
jb
aad
out
xor
jo
sbb
sbb
dec
testl
mov
insl
sub
pop
fs
mov
and
sti
popf
push
insb
iret
sbb
jnp
cld
das
icebp
insl
jne
mov
jl
rolb
ja
int3
movb
dec
xchg
pop
dec
shll
or
out
pop
stos
fidivs
stc
sbbl
push
in
dec
repz
mov
ret
test
int
xchg
jecxz
add
xchg
dec
sti
jbe
rolb
or
fimuls
in
adc
iret
mov
int3
mov
xor
movsl
ljmp
xor
xor
pop
mov
ljmp
pushf
jg
inc
pop
dec
mov
or
popa
lock
push
xlat
or
mov
mov
test
sbb
inc
mov
insb
sbb
sbb
sbb
dec
dec
jle
movsl
in
fisttpl
enter
movsb
mov
cmp
cmp
insl
test
pop
popf
hlt
adc
leave
lods
mov
pop
and
adc
inc
fucomp
adc
loopne
cmp
xorl
jns
xchg
test
mov
ds
or
jmp
push
inc
in
xor
cmp
enter
cmp
outsl
je
inc
pop
mov
inc
pop
outsl
lret
xor
dec
mov
in
lods
inc
ret
cs
dec
data16
xor
xchg
in
push
in
inc
or
inc
arpl
jle
dec
pop
add
cmp
test
lahf
jmp
sbb
lds
fwait
pop
hlt
outsl
cltd
and
and
cmp
std
aad
loope
pop
jl
push
lods
sbb
test
jl
jge
jl
scas
adc
dec
push
leave
loopne
fcoms
mov
mov
jecxz
dec
inc
cmpsb
not
sub
lods
or
pop
mov
das
in
adc
lds
cltd
loopne
lret
lea
test
cmp
popf
das
jns
hlt
aaa
or
jno
aam
cmp
inc
je
xchg
nop
aas
aas
roll
pop
xor
mov
sti
xchg
sti
aas
je
lahf
sbb
mov
inc
popf
repnz
cmp
add
push
test
and
adcl
fistpll
lea
push
lock
cld
inc
in
xor
sbb
or
lcall
frstor
call
mov
mov
test
xchg
lds
add
adcb
and
mov
shlb
xchg
sub
rorl
xchg
repnz
nop
xchg
xor
inc
aaa
sbb
add
faddp
xor
xlat
jp
or
cwtl
stos
pop
jno
jo
adc
idivl
jmp
sub
add
jb
add
pusha
mov
js
out
jmp
add
or
sub
cs
push
push
testl
lods
fwait
adc
xchg
dec
jae
mov
out
pushf
xorb
add
aam
fsubl
pop
cmp
in
shll
bound
dec
inc
inc
sar
xchg
inc
arpl
cwtl
pop
fs
mov
out
fistpl
or
call
ret
sub
rcrb
in
outsl
cltd
push
add
int
stc
mov
or
insb
adc
jecxz
or
jle
lods
mov
cmpsl
add
incb
cmp
inc
or
inc
and
fstl
and
inc
outsl
inc
clc
cld
insb
cmp
pop
dec
mov
loop
push
cmp
fdiv
in
adcl
push
imul
daa
imul
in
mov
pop
or
lcall
ja
sar
jno
mov
aam
adc
pop
lea
cld
not
xlat
push
push
shl
fst
lods
add
movsl
gs
jns
push
jmp
cmp
add
jmp
dec
sbb
mov
insl
jge
enter
scas
inc
roll
loop
mov
cmpb
jae
pop
xchg
mov
mov
ljmp
rcrb
and
adc
pop
cmp
das
stc
imul
or
ret
add
dec
lods
and
lret
loope
sub
in
imul
cmp
test
jnp
jb
lahf
imul
mov
sti
movd
mov
nop
cmp
int3
push
movsb
mov
sbb
sti
inc
out
xchg
lea
jns
xlat
mov
cmpsl
dec
dec
pop
stos
add
adc
xor
jno
dec
shrl
xlat
scas
adc
clc
sub
cmp
in
xchg
push
or
aad
lret
jb
mov
jne
test
push
out
sub
cltd
or
outsl
test
roll
std
out
xchg
out
fnsave
or
sti
jne
mov
inc
pushf
xchg
rcrb
jmp
popa
adc
add
add
into
xchg
inc
sahf
dec
sti
ljmp
or
outsb
dec
sbb
out
popa
xor
mov
cmc
sahf
push
rcll
popf
jg
ret
mov
and
adc
jo
xor
sti
mov
mov
insb
xchg
push
mov
out
stos
das
sahf
push
mov
or
int3
jnp
ljmp
test
jecxz
sbb
outsb
test
shrl
adc
imul
jno
inc
jmp
sbb
cltd
sbb
jp
push
xor
test
ret
sub
add
mov
cwtl
das
xchg
inc
sbb
lcall
push
cmp
pop
repz
push
cmp
xchg
pop
sub
pop
jns
mov
cmp
jg
sbb
mov
mov
loopne
out
adc
insb
jge
mov
jp
out
cs
adc
icebp
dec
aad
leave
push
jno
xchg
jecxz
leave
es
sbb
xchg
mov
idiv
xchg
arpl
dec
test
sbb
push
ss
enter
aas
mov
or
adc
pop
cmp
add
add
xor
lcall
push
fdivrs
mov
mov
jmp
dec
add
or
and
out
js
sti
mov
loop
rcl
outsb
add
sub
sahf
mov
mov
sbb
mov
int3
retw
mov
fdivrl
mov
imulb
sti
jge
cmp
adc
insl
jge
inc
sub
xchg
or
mov
jecxz
inc
pushf
iret
dec
mov
scas
cmp
and
adc
ret
hlt
sbb
jbe
xchg
mov
jnp
fdiv
mov
outsl
je
fs
adc
repz
fwait
add
cli
test
xchg
loop
pop
mov
fprem1
call
fsts
fnstsw
jb
lds
mov
sub
clc
pop
repnz
or
in
or
movsl
and
rcrl
push
push
mov
cmp
leave
shlb
pop
cmpsl
icebp
adc
inc
int3
das
jns
xor
pop
fwait
dec
lock
push
je
jb
js
mov
fimull
incl
xor
je
js
xchg
mov
popf
push
mov
push
sbb
ss
bound
imul
push
mov
pop
test
xchg
les
inc
pop
jb
jae
sbb
jno
push
lods
ljmp
adc
fcoml
insl
push
push
int
jne
xor
xorl
dec
mov
push
shrb
mov
test
xchg
loope
cmp
and
aam
jbe
aam
mov
cmp
adc
inc
push
mov
sahf
lock
out
inc
sbb
xchg
rorb
push
les
in
jmp
or
jnp
clc
cmp
xor
sbb
mov
ret
cmp
daa
fcomi
rorl
es
or
movsl
inc
sub
mov
or
ds
add
cli
or
adc
shrl
pop
fsubr
pop
mov
push
push
jbe
fcompl
outsl
push
push
enter
xchg
push
and
pop
inc
clc
outsb
test
ret
sub
or
out
sti
sbb
mov
mov
stc
or
mov
push
mov
xchg
xchg
sbbb
lea
add
repnz
mov
ja
mov
fisubl
jo
add
fistps
aaa
loope
inc
cmc
or
lods
or
xor
iret
and
outsl
movsl
out
cli
sub
jecxz
stos
inc
sub
or
aas
dec
test
sub
adc
lods
sub
xchg
add
sti
add
jo
aas
rorl
cltd
test
mov
lret
adc
in
fdiv
mov
lock
xlat
xorb
clc
loope
cmp
jecxz
ljmp
mov
sbb
sahf
add
sub
in
add
lcall
mov
ljmp
push
mov
aaa
inc
lds
in
xchg
inc
inc
sub
xchg
test
test
ja
cmp
adc
sub
or
and
fidivrs
icebp
pop
or
mov
sti
push
mov
xor
test
xor
adc
js
test
and
cs
xor
pop
xor
push
add
mov
or
push
fucomp
pop
jge
adc
out
mov
shrb
scas
rol
cmpl
cmp
bound
mov
icebp
push
popf
push
or
adc
pusha
sbb
and
pop
daa
outsl
sub
data16
imul
or
or
fmull
push
mov
cmpsb
lock
adc
push
xor
leave
push
insb
cltd
std
dec
adc
mov
in
std
inc
xchg
mov
inc
push
dec
mov
inc
ficomps
and
mov
inc
push
int
or
adc
mov
xor
mov
insl
test
popa
mov
orb
loope
dec
dec
pushf
aam
xchg
test
dec
lods
mov
pop
ds
jnp
mov
or
adc
push
sub
insb
push
loope
hlt
xchg
aas
push
dec
xor
aaa
push
pop
test
pop
leave
fwait
sti
addr16
pusha
sub
or
or
nop
aaa
enter
mov
inc
flds
dec
pop
outsl
call
sbb
push
mov
inc
icebp
negl
mov
add
dec
cmp
cmpsl
pop
jbe
jmp
cmp
ret
jo
cmp
pop
sbb
pop
sub
clc
pop
outsb
scas
aas
or
int
hlt
leave
xchg
push
lods
lods
add
stc
lock
lret
sub
pop
jle
mov
daa
mov
push
inc
inc
data16
les
ret
cld
xor
sti
in
and
xor
cmpsb
xchg
mov
in
push
inc
inc
shlb
ljmp
nop
push
mov
pop
dec
andb
sbb
stos
movsl
call
fdivrl
sub
mov
mov
dec
or
lods
fadd
dec
push
hlt
sbb
in
out
mov
mov
inc
int3
jae
pop
xlat
push
adc
adc
and
aam
xchg
dec
mov
inc
je
test
sbb
clc
pop
mov
jg
cmpsb
sbb
inc
xabort
loope
aaa
sbb
std
fldenv
xor
sti
push
inc
add
arpl
cmc
dec
jecxz
mov
in
push
sub
ret
cmp
arpl
xor
flds
xor
mov
cltd
pop
imul
ror
and
pop
push
imul
push
sub
icebp
cmpsl
arpl
pushl
mov
push
xchg
push
push
das
cmp
pop
adc
push
pop
jecxz
or
mov
mov
mov
cmc
data16
adc
test
arpl
outsl
mov
sbb
dec
inc
sub
out
xchg
dec
dec
mov
inc
cmp
sarb
leave
scas
sti
mov
jns
hlt
cmp
or
dec
dec
cmp
pop
push
mov
xor
negb
mov
in
inc
sub
clc
aas
add
idivb
scas
xor
sbb
push
js
int3
movsl
mov
addr16
xchg
xor
call
test
add
popf
sbb
pop
lahf
outsl
add
jnp
adc
dec
int3
pop
jno
mov
icebp
pop
clc
mov
xchg
pop
aaa
push
mov
je
fimull
jge
jnp
daa
mov
push
sbb
icebp
adc
int3
aad
push
fnstsw
xchg
shll
adc
adc
arpl
aas
pop
cmc
and
fbstp
inc
jl
test
mov
push
ss
cld
sbb
cmpl
decb
dec
mov
dec
icebp
movsb
mov
inc
popa
jg
mov
add
jge
cs
and
inc
and
fs
lret
push
or
mov
cmp
in
mov
and
fisttpl
cs
sbb
sti
outsb
jo
mov
dec
mov
mov
mov
lret
sbb
mov
mov
shrl
sbb
push
sbb
xor
pop
outsb
jge
sahf
jl
xor
mov
jl
xchg
or
pushf
mulb
mov
mov
pop
cmc
outsb
pop
shl
nop
jl
ret
add
pop
mov
adc
sbb
mov
sub
xchg
or
dec
pop
js
movsl
cmp
fstps
ret
fucomip
pop
and
inc
adc
mov
xchg
cmovs
xlat
rolb
cmp
je
cmp
shll
or
pop
addr16
fbstp
das
dec
in
cmp
insl
add
or
lods
rol
ret
push
inc
add
push
pop
dec
push
addr16
fsubs
mov
and
scas
jmp
or
into
pop
inc
inc
push
dec
inc
push
inc
std
xor
pop
pusha
mov
sbb
ja
or
adc
and
shrb
xchg
call
in
ret
out
xorb
outsl
out
push
icebp
xchg
adc
xchg
test
push
adc
lock
testb
xchg
jmp
negl
jo
push
inc
in
or
std
xor
pop
cwtl
and
xor
shrb
daa
mov
sbb
repnz
fldt
dec
aas
lods
inc
xchg
pop
and
sti
jns,pn
push
and
cmp
pop
test
fsubrs
daa
cwtl
dec
testb
sahf
adc
mov
std
inc
stos
xor
adc
push
cltd
mov
fsubp
jl
ds
xlat
outsl
insb
push
popf
sahf
mov
out
jmp
cmp
jo
cmp
aad
push
push
loopne
pop
jg
xchg
mov
lret
lock
sbb
mov
and
dec
pop
or
adcl
jns
gs
xor
mov
movsl
fsubp
ljmp
xor
mov
andb
xchg
pop
push
cmc
jns,pn
imul
out
das
push
xchg
push
sub
cmp
lea
sbb
movsl
lock
loope
xchg
movb
out
adc
incb
test
fldcw
fnstsw
lret
cmp
fsubl
mov
icebp
jns
das
mov
int3
jp
sti
mov
push
push
jno
add
jmp
fldt
cld
and
jns
or
xor
xor
ds
movsl
xor
inc
cmpsb
sbb
add
add
xchg
int
fwait
aas
in
pop
jb
adc
stos
or
inc
stos
pop
mov
test
jmp
sub
sti
cmp
add
adc
mov
jg
inc
pop
test
cltd
mov
into
xor
test
imull
fsubrs
scas
int3
lods
mov
jmp
inc
sbb
mov
add
aas
shlb
push
pop
jg
insb
lods
lds
pusha
stos
dec
lret
sbb
inc
sbb
inc
and
lahf
lock
adc
into
xor
cld
and
aam
add
xchg
sub
mov
insl
dec
dec
add
dec
insb
mov
and
pop
push
test
nop
add
mov
iret
mov
xchg
jbe
xchg
hlt
sbb
out
inc
idivb
mov
lds
fcoml
push
mov
sub
test
mov
mov
sbb
sarl
fcoms
xor
sub
xchg
sub
add
aaa
jns
stc
dec
arpl
daa
xor
jmp
sahf
cltd
jle
hlt
push
call
dec
sbb
inc
shll
jb
sbb
in
insl
mov
stos
adc
mov
add
imul
sti
adc
lds
jp
ja
pop
jbe
pushf
dec
iret
xchg
adc
adc
jge
loop
and
mov
scas
mov
lret
sbb
fbstp
or
bound
jo
add
xchg
add
xchg
sbb
pop
in
shlb
jbe
xchg
inc
push
fwait
test
sbbb
js
dec
in
lcall
addr16
neg
cmp
movsb
das
push
mov
sbb
js
jle
mov
jmp
mov
xlat
pop
jp
fistpll
das
cmp
add
cli
stos
jo
xlat
push
mov
sbb
in
ret
cmp
insb
jnp
inc
xor
or
into
scas
cmpsb
add
cmp
inc
or
and
out
test
inc
out
or
add
push
and
push
mov
xchg
jecxz
stos
mov
nop
aas
test
lcall
les
dec
fstpl
xor
xchg
and
mov
int
notl
test
mov
std
iret
dec
and
imul
sbb
sbb
pop
daa
mov
daa
shrb
sbb
mov
mov
pop
and
dec
lock
xchg
js
mov
jge
fldenv
or
ret
mov
test
aaa
lss
inc
lcall
mov
sarl
mov
adc
and
sbb
fs
addr16
cmp
icebp
stos
test
dec
xchg
shl
outsl
rcrb
mov
sarl
fistpll
mov
bound
or
cmp
dec
mov
xor
addr16
sub
fwait
je
test
jecxz
jmp
cmpsb
jnp
sbb
fmull
mov
mov
push
mov
mov
fbld
mov
xchg
insb
rcrb
gs
xor
inc
xor
dec
and
sahf
sarl
sbb
jge
and
mov
lods
pop
call
push
out
ljmp
out
inc
push
jmp
inc
lcall
inc
and
leave
shl
jle
xor
shlb
pop
daa
mov
and
mov
sbb
push
jnp
xchg
inc
into
fidivl
pop
and
repnz
and
call
mov
sbb
lret
out
es
test
push
ljmp
pushf
inc
gs
xor
mov
test
icebp
mov
cld
inc
fdivr
fisttpll
inc
je
and
dec
push
shlb
mov
adc
int3
ds
sbb
push
fdivs
adc
jmp
or
mov
sti
cmp
lahf
pop
push
pushf
dec
mov
jecxz
mov
xchg
mov
aam
pop
push
jnp
call
pushf
push
sbb
push
fdivl
or
cmc
mov
jbe
lcall
or
inc
fidivs
iret
xchg
mov
inc
sbbl
lahf
and
popf
push
jbe
pushw
cltd
cmpsl
jae
jbe
aad
push
rorb
cmc
jo
loope
mov
inc
lods
jmp
and
jmp
rsm
mov
fmul
push
or
jecxz,pn
stc
repnz
aaa
mov
je
xchg
push
inc
lods
aas
mov
subl
or
test
pop
push
sub
xor
test
push
out
hlt
push
adc
mov
jle
add
mov
roll
fnstenv
mov
jge
out
iret
mov
jae
cmpsl
xor
jg
stc
adc
adc
lock
sbb
ja
push
sbb
dec
cmp
or
mov
dec
rorl
dec
sub
lods
dec
in
add
ja
ljmp
stos
sbb
dec
xchg
sbb
das
sbb
shrb
andb
into
xchg
sub
lock
or
cltd
cmpsb
fcmovne
cs
xor
cmc
lret
add
cwtl
push
jo
adc
fdivs
xchg
or
leave
aaa
mov
in
jo
or
xor
jg
clc
or
push
in
loopne
mov
mov
ss
out
jne
jmp
add
in
stos
add
nop
and
cmc
push
pop
xchg
jl
push
or
cmp
mov
lcall
jnp
push
lods
sbb
pop
nop
dec
xlat
push
dec
ja
jge
fwait
jge
xchg
or
sub
push
in
mov
xor
int
ret
sub
jecxz
insl
or
mov
push
inc
ss
push
int
stos
or
dec
pop
adc
jmp
addl
pusha
popf
xor
push
mov
jg
leave
data16
cli
jns
xchg
outsb
xchg
ss
adc
dec
outsl
xor
rorl
sahf
sub
cmc
xchg
les
lret
inc
hlt
mov
add
mov
testl
aas
std
stc
pop
mov
clc
enter
xor
xchg
xchg
inc
stc
stc
inc
push
sbb
xchg
pop
cltd
test
add
inc
ret
pop
cmp
loop
xchg
test
mov
push
adc
push
lds
and
int3
loopne
call
repz
cmp
xor
push
push
andb
push
xlat
sbb
out
movsl
mov
aam
stos
xchg
push
pop
mov
jge
sub
sbb
xchg
js
sbb
dec
rcl
pushf
rorb
xor
mov
and
push
mov
mov
lahf
mov
mov
adc
ss
inc
gs
pop
inc
adc
loop
xchg
test
push
aaa
das
mov
addr16
imul
and
inc
mov
fildl
xlat
push
or
fs
subl
shlb
pop
push
sub
scas
cld
aaa
sub
jl
and
mov
pop
pop
pop
lock
mov
mov
mov
pop
je
inc
and
fstps
mov
lea
aas
mov
xor
inc
dec
inc
fdivrl
or
xorl
mov
inc
es
jne
inc
loop
lcall
sub
xchg
movsl
nop
test
lcall
inc
mov
dec
inc
pop
cmp
in
push
cltd
sbb
jmp
gs
cmp
and
fdivl
jbe
sub
sub
mov
fsubrl
ret
repz
mov
fmuls
add
fsubr
jns
fs
into
sub
pop
insl
add
push
xor
into
and
cli
mov
adc
and
dec
sbbl
xchg
inc
mov
jmp
pusha
or
inc
cmp
pop
fcomps
lock
enter
fldenv
sub
aam
sub
jns
push
or
lret
sbb
stos
add
clc
nop
mov
cmp
shrl
loope
adcb
push
ss
xchg
pop
inc
int3
jmp
in
in
lods
aad
xchg
mov
inc
clc
icebp
mov
adc
sbbb
fstpl
xchg
cmp
test
lret
xlat
leave
stos
test
sahf
cmpsb
imul
pop
mov
lods
inc
jmp
pop
push
fstpt
jbe
test
test
insb
adc
mov
lahf
mov
jnp
fisubs
push
leave
je
icebp
mov
add
out
lcall
adc
shll
and
cmp
imul
lret
icebp
inc
jno
sub
cwtl
mov
mov
jle
jae
loop
outsb
roll
or
cmpsl
js
hlt
jno
dec
pop
mov
into
test
pushf
jno
mov
xchg
mov
je
out
inc
mov
sbb
in
dec
addr16
scas
mov
into
xor
inc
inc
movsl
or
push
insb
scas
mov
icebp
mov
cmpsl
shll
aaa
adc
push
jmp
add
sub
pop
ja
push
lock
daa
mov
pushf
fdivs
dec
cmp
repnz
jns
mov
xor
xchg
dec
and
pop
xor
mov
jns
insb
test
sahf
rolb
or
sbb
test
inc
fcompl
xor
jg
add
mov
push
fwait
add
les
cmp
xchg
aam
inc
les
andb
mov
popf
mov
dec
in
jecxz
pop
or
pop
pop
adc
cmc
pop
outsb
and
les
std
test
cwtl
lds
out
imul
cmc
rolb
mov
cltd
and
iret
and
mov
stc
adc
repz
xlat
mov
and
push
inc
dec
test
pushf
daa
cmp
xchg
popf
out
cmpb
outsl
xchg
out
aam
jb
aam
inc
loopne
xorl
rcll
dec
pop
icebp
jl
xlat
repz
js
mov
jg
pushl
fadds
mov
sub
sub
ficomps
cld
enter
lods
cmp
sbb
in
xor
data16
mov
xchg
inc
xchg
or
sbb
nop
in
mov
cmp
jbe
or
cli
std
pop
sub
sbb
mov
daa
pushl
sbb
outsl
rol
and
jb
sahf
daa
add
stc
xor
loope
adc
call
pop
sub
mov
xor
add
dec
cmp
insb
outsl
jl
out
js
negl
sbb
idivb
jne
repnz
and
jae
dec
js
daa
aas
jo
les
xor
pop
sbb
stc
lods
dec
int3
sbb
xlat
outsl
leave
add
je
mov
cmc
mov
cmpsl
adc
repnz
inc
aam
or
rolb
dec
shll
add
pop
xor
in
adc
sub
and
sub
imul
dec
in
test
mov
ret
cli
xchg
hlt
arpl
cmp
adc
and
adc
inc
inc
mov
add
inc
arpl
and
lds
jbe
addr16
cmp
pop
int
xchg
fistpl
push
mov
shlb
pushf
in
icebp
les
cmpsl
out
pusha
sub
xchg
mov
push
bound
insb
jle
and
sbb
add
mov
gs
mov
or
dec
cmp
call
mov
sub
dec
andb
pusha
jge
sbb
adc
jle
and
inc
push
lock
sbb
insb
or
mov
clc
repz
sub
pop
sub
fs
jecxz
adc
cmpsb
cli
xor
pop
cmp
xor
arpl
dec
jle
scas
pop
inc
mov
popa
cmp
out
ja
fndisi(8087
cmovae
inc
add
cmp
shrl
sbb
cmp
and
dec
mov
jnp
lret
imul
mov
lret
jne
and
mov
inc
mov
fstpl
push
pusha
fisubl
rcl
fiadds
cmp
arpl
fstpl
mov
mov
xlat
stc
pop
notb
call
ss
jl
clc
push
inc
fstpt
sbb
in
or
mov
bound
and
ds
arpl
add
cmp
rol
pop
lods
mov
push
outsl
fcoml
xchg
dec
pop
fdiv
mov
cmp
leave
adc
pop
jbe
ja
cld
ds
popf
or
test
adc
ljmp
mov
rolb
in
aam
jae
and
iret
xchg
cmp
or
aas
mov
jo
cmpsl
ds
cmc
int3
inc
cmp
and
gs
cli
stc
jb
outsb
jge
xchg
jbe
les
xchg
mov
xor
push
sub
stos
inc
out
xor
cmp
xor
sub
aaa
and
in
mov
push
aaa
pop
dec
or
xor
outsb
stos
clc
sahf
fcmovnu
scas
sbb
test
push
out
addr16
or
mov
in
cmp
lahf
jecxz
andl
mov
pusha
dec
loopne
mov
jbe
lret
dec
push
mov
mov
test
cmp
and
dec
adc
scas
cmpb
ljmp
mov
pusha
dec
sbb
hlt
shrb
mull
mov
addr16
nop
fisubrs
lret
in
mov
sub
dec
divb
add
enter
xor
sbb
aad
adc
call
and
mov
lods
lock
into
mov
rcll
add
sub
outsl
pop
push
mov
pop
mov
or
and
jle
and
mov
ja
stc
sub
push
dec
pop
loope
gs
pop
sub
push
jle
andb
and
push
xor
data16
cmp
mov
mov
sbb
cmp
icebp
mov
leave
call
add
fsubrl
lcall
dec
int
mov
shll
fcmovnbe
mov
adc
or
mov
dec
movsl
inc
or
mov
stos
and
test
sbb
das
lds
mov
pop
in
fldt
inc
loopne
cmpl
enter
outsl
cmpsb
push
xchg
stc
xchg
mov
or
dec
pop
rcll
subl
das
les
std
subb
push
xchg
cmpsb
nop
sub
cmpsl
mov
sub
cmpsl
out
shl
repz
aaa
aas
nop
mov
shll
test
loope
push
jecxz
test
mov
aad
mov
popa
out
cmp
js
jmp
and
in
and
fs
shl
jne
adc
ds
push
jg
cld
xchg
add
enter
aas
jmp
mov
mov
lret
aad
mov
dec
jl
adc
lcall
shll
cmpsl
mov
cmp
bound
xchg
rcrb
push
insl
cmp
lret
in
jg
inc
fcomp
xor
and
xchg
decb
loope
ja
jmp
cmp
fwait
incw
and
iret
pop
add
repnz
jns
lahf
rcrb
cmp
loop
cmp
xchg
xchg
sbb
inc
popa
out
add
mov
push
cwtl
cmp
push
stos
scas
and
scas
dec
inc
dec
mov
mov
popa
out
inc
mov
movsb
nop
neg
mov
in
jmp
pusha
sbb
aad
loope
mov
pop
pop
jo
stos
mov
lcall
cmpsl
push
push
aaa
cld
mov
cs
xor
jp
mov
adc
mov
push
cs
or
pop
out
xchg
daa
mov
xor
cmpsb
repnz
loope
stc
iret
mov
sub
or
mov
clc
or
aam
pop
xchg
rcl
or
scas
add
mov
pusha
ljmp
mov
jno
jo
adc
sbb
dec
dec
int3
jecxz
or
ljmp
mov
aad
fwait
adcl
loop
jmp
fs
add
push
xor
stos
inc
pop
rorl
mov
idivb
int3
frstor
jns
push
or
push
aad
mov
pop
hlt
aaa
rcrl
mov
lock
lods
and
dec
movsl
jae
rorb
andb
xor
mov
loop
xchg
pop
or
or
sti
or
cmp
rorl
loop
jne
int
push
jmp
lods
or
mov
int3
jne
loopne
out
movsl
in
add
shll
cmc
fwait
lret
mov
jmp
pop
xor
test
xchg
cmpsl
sahf
pop
insb
inc
xor
lods
dec
iret
fnsave
loope
ja
adc
jmp
xor
pop
ret
pop
sti
inc
rcr
mov
add
xor
jne
mov
in
add
std
rclb
xor
mul
jb
imul
nop
daa
movsb
dec
es
sbb
nop
and
mov
sub
jecxz
in
out
mov
xor
int
push
inc
imul
xor
push
in
cli
adc
xor
clc
or
sub
rclb
pusha
push
stos
inc
mov
test
leave
in
mov
pop
jb
fstpl
add
adc
push
mov
mov
repnz
push
adc
mov
in
sub
leave
pop
int
jae
dec
push
insb
jb
adc
mov
mov
int
push
stos
out
stos
sbb
inc
shlb
add
or
fisttpl
lock
pop
insl
inc
sti
jae
jb
stos
sarb
mov
sub
or
cmp
dec
hlt
ss
sub
scas
pop
mov
push
in
je
loop
rcrb
cld
jg
data16
xchg
lahf
fistpll
xchg
jne
or
xor
mov
xchg
xor
rcl
out
or
cs
std
push
mov
push
mov
push
into
lahf
nop
ds
mov
arpl
push
dec
and
jecxz
ss
outsl
out
xchg
sub
dec
out
xchg
inc
out
pusha
and
dec
mov
into
loop
cmc
adc
mov
loop
mov
ret
jl
pop
mov
xchg
jge
mov
cmpsb
in
xlat
pop
lods
aas
or
xor
outsb
divl
adc
mov
pushf
xor
push
push
lcall
and
lds
sbb
push
mov
leave
cmpsl
dec
mov
mov
push
lahf
int3
mov
jge
shl
xlat
mov
cmp
dec
mov
xchg
fnstenv
push
ljmp
in
mov
lock
xor
ljmp
mov
lea
ss
loopne
dec
loopne
test
ficoms
lss
ljmp
loop
popf
shlb
out
out
fiaddl
or
out
mov
gs
daa
cltd
xorb
lcall
push
jns
int3
gs
sbb
mov
cmpsb
jge
ljmp
inc
out
lret
out
out
movsl
in
cmp
sbb
sarb
mov
xor
xchg
sbb
ljmp
pushf
sbb
jno
cmp
mov
andb
pop
loopne
or
and
repnz
idivl
adcl
xchg
sub
rcrb
or
pop
lahf
cwtl
lcall
dec
imul
pop
scas
and
mov
divl
or
test
pop
push
mov
out
rclb
inc
lea
lcall
lcall
outsb
push
in
cwtl
mov
shlb
dec
adc
xor
mov
pop
xchg
pop
js
mov
ja
push
test
outsb
ljmp
jb
pop
jbe
rcr
mov
in
nop
push
movsb
enter
pop
daa
int3
sub
cld
or
mov
arpl
jbe
aad
pop
cmp
mov
mov
adc
jns
push
lods
fistps
and
sub
dec
add
adc
and
loopne
mov
inc
iret
repz
sub
inc
ss
pop
lcall
mov
xchg
sbb
or
lea
inc
xchg
sbb
les
inc
addr16
dec
or
loop
sbb
je
shrl
jle
leave
xchg
mov
or
xor
movsl
cmp
or
ret
jp
popa
and
scas
jge
fcomps
and
test
loop
lds
inc
shl
inc
aaa
shrl
nop
dec
test
xor
test
dec
cld
scas
dec
xlat
or
xchg
sub
out
jge
inc
mov
jo
into
loop
pop
jo
mov
lret
jecxz
mov
or
mov
fwait
hlt
jns
idivl
xchg
add
cmp
xchg
xor
lahf
inc
sbb
sbb
xlat
jecxz
jo
and
adc
inc
mov
xor
test
movsl
sbb
clc
adc
push
js
aas
test
ret
stos
jnp
fucom
test
adc
adc
mov
push
in
popf
sub
sarl
test
rcl
rorb
pop
lds
jg
adc
sbb
mov
pushf
out
leave
push
or
cmp
pop
push
mov
mov
ljmp
xchg
aaa
add
pop
mov
fiaddl
xchg
or
mov
dec
adcb
push
lods
nop
stos
loop
mov
imul
ret
pop
jno
xchg
jo
pop
insl
fcom
inc
sbb
repnz
dec
je
lock
insl
ljmp
imul
jl
jbe
cmp
jecxz
stos
push
aaa
sbb
mov
decb
sbb
test
ret
or
jecxz
xchg
int
cwtl
stos
xor
inc
jae
stc
daa
xchg
hlt
arpl
mov
hlt
mov
add
adc
lds
push
in
and
pop
xchg
mov
loop
cmp
cmp
cmp
stos
cmpsl
inc
cld
pop
je
mov
and
sub
enter
test
mov
and
push
mul
lret
cld
push
xlat
pop
jp
in
pop
pop
out
push
mov
clc
imulb
dec
sbb
dec
jo
leave
call
mov
rol
mov
scas
adc
pop
adc
push
sbb
jbe
dec
inc
pop
dec
in
test
ss
mov
mov
loopne
or
dec
xor
fsts
pop
xchg
mov
push
gs
push
int
popf
data16
push
mov
pop
mov
int
push
ljmp
jno
loopne
inc
std
or
xor
lret
push
out
push
in
fwait
pop
lret
cmp
or
nop
sub
mov
xchg
addr16
sbb
cmp
inc
shlb
mov
call
mov
jne
ljmp
sub
push
adc
sbb
push
movsb
jge
add
ret
pop
insl
add
popa
pop
imul
or
pop
or
cmp
adc
add
scas
sub
dec
popa
clc
jp
aas
sbb
adcb
lret
repnz
rolb
xor
mov
push
or
test
xchg
in
inc
xchg
inc
inc
hlt
imul
jmp
stos
mov
les
add
loopne
pushf
out
inc
add
ret
lods
jecxz
movsb
pop
cli
inc
test
insb
jno
fnsave
scas
mov
cmp
subl
clc
pop
cmpsb
insl
mov
sub
xor
add
sbb
adc
pop
pop
inc
fcoms
and
mov
adc
jg
lds
pop
add
mov
sbbl
in
dec
lahf
mov
or
jno
cmp
mov
add
xchg
adc
popf
ret
mov
into
push
mov
xor
sub
daa
sub
adc
int3
loop
movsl
lret
mov
push
cmpsl
sbb
pop
inc
push
hlt
cmp
addr16
xor
dec
ja
sub
add
inc
pop
lods
sahf
ss
outsl
push
jge
jecxz
inc
lcall
jno
push
pop
orb
pop
in
sbb
sbb
push
sub
aam
sub
cmc
mov
into
xor
ja
jp
fstpl
or
insl
cmpsb
inc
and
mov
rol
in
test
aad
mov
pushf
jg
or
jge
movsb
and
aaa
inc
mov
or
pop
sub
test
lret
notb
xor
sub
rorb
fnsave
and
mov
cmpl
mov
inc
sbb
aad
or
cmp
sbbb
int3
dec
jnp
and
loope
cmpsl
mov
cmp
int3
mov
push
out
ret
push
je
jne
or
ficomps
out
jmp
int
in
das
xchg
mov
stos
mov
test
jg
sub
lea
pop
sahf
push
mov
pcmpeqb
push
out
jne
scas
xor
aam
dec
rcrl
pop
xor
dec
fisubrl
arpl
push
jb
pusha
and
pop
push
fmuls
lods
xlat
jbe
stc
testb
ficoml
das
fincstp
sub
es
inc
pop
loopne
repnz
rcrb
xchg
daa
cmpsl
clc
cli
inc
mov
or
xor
loope
arpl
push
lea
adc
ss
jmp
out
enter
in
lahf
ss
sub
pop
das
cmp
adc
sub
add
cwtl
xor
xor
mov
fs
stc
sbb
xchg
sub
mov
jns
leave
sbb
mov
test
mov
or
jb
sub
outsb
add
adc
jae
aad
mov
cmp
sar
xor
push
test
out
sub
fidivs
shlb
jcxz
jae
lret
inc
push
movsb
fwait
sbb
cmp
nop
jae
repnz
xchg
mov
int
cmp
pusha
add
je
rol
xchg
or
jg
sarb
insb
out
jbe
push
flds
aas
shrl
sbb
popa
lods
nop
sbb
stos
ret
mov
adc
jne
stos
shr
xchg
add
pop
mov
icebp
inc
fdivp
enter
push
stos
int3
cld
or
icebp
cltd
es
adc
cwtl
adc
test
mov
and
dec
push
inc
arpl
xchg
mov
cli
orb
inc
mov
data16
dec
lret
sub
cmp
test
pop
test
repnz
inc
lret
xrelease
xchg
inc
fs
int3
pushf
sbb
out
dec
and
pop
sub
jbe
pop
xor
push
mul
fnstsw
adc
aad
and
mov
dec
pop
lock
shl
stos
notl
data16
cli
pop
decb
pop
xor
jecxz
xchg
or
cmc
aad
cltd
push
adc
orb
inc
and
call
outsl
jnp
nop
fsin
cld
mov
jmp
inc
das
mov
cmp
adc
in
xor
outsl
inc
stos
cmp
insb
lret
xor
call
mov
lret
dec
pop
icebp
lahf
aad
dec
push
scas
nop
popl
push
jge
mov
pop
sub
mov
test
cmpsl
fisubrl
fdivs
daa
lock
cmp
pop
cltd
cmp
mov
mov
lahf
orb
fisubs
pushf
enter
mov
fcomp
jg
jmp
inc
sbb
mov
or
lret
mov
gs
ficompl
xor
inc
xchg
xchg
pop
arpl
aam
hlt
xchg
jg
repz
xchg
aam
insl
dec
jl
rol
mov
fwait
stc
jg
sub
cmpsl
imul
pop
mov
lock
xor
test
xor
stos
loope
std
fcoml
mov
push
adc
pop
adc
loope
adc
xchg
xor
mov
xchg
push
aad
add
outsl
dec
adcb
into
cmp
hlt
stc
and
lods
adc
enter
add
xor
pushf
scas
pop
pop
push
dec
mov
pop
pop
ffreep
xor
jns
push
or
cwtl
movb
mov
xchg
call
in
cmc
sahf
pop
rclb
jno
or
and
sub
in
mov
das
icebp
pushf
pop
mov
inc
cmp
dec
aaa
sub
push
stos
xchg
pop
fstpl
xchg
addr16
xchg
dec
rolb
std
rcrl
xor
mov
lahf
xor
dec
jl
and
js
dec
xor
xchg
pushl
out
xor
mov
push
rep
xor
imul
mov
pop
jae
adc
daa
int
movq
das
xor
or
mov
cmp
mov
add
push
pushf
jo
dec
jle
xchg
adc
aam
pop
add
adc
pop
push
xchg
dec
add
mov
popa
dec
stc
arpl
pop
lds
cmc
or
movsl
test
popf
push
sbb
call
adc
jmp
push
ja
jge
xchg
mov
aad
dec
movsb
cmc
cmp
repz
jmp
popf
stos
fisttpl
lcall
testl
push
testb
ljmp
bound
out
jo
xchg
sub
lret
or
xor
pusha
adc
subl
ljmp
jno
arpl
shll
test
cmp
repz
cs
call
scas
add
fld
or
sub
out
mov
out
cmp
sub
fwait
scas
cmc
dec
push
push
xchg
ljmp
sahf
dec
xchg
xchg
jae
jb
cwtl
xchg
and
push
in
push
inc
aad
icebp
add
xor
mov
pop
inc
mov
mov
scas
inc
pop
pop
jns
dec
and
and
adc
ja
and
out
inc
or
mov
sbb
and
inc
pusha
testl
es
lods
dec
mov
push
outsl
testl
add
loop
mov
insl
or
mov
mov
shrl
scas
outsb
mov
fwait
xorb
adc
dec
fstpt
cwtl
pavgb
hlt
int3
inc
mov
dec
pop
xor
inc
data16
cmp
rol
jp
aaa
push
insb
das
dec
mov
test
movsl
scas
fbstp
je
enter
or
xorl
test
ret
jl
insl
add
out
std
mov
jge
jns
push
xchg
pop
out
hlt
push
xchg
jnp
jl
fistpll
addb
cmp
dec
fiaddl
jnp
loop
or
out
mov
cltd
sbb
fwait
shrb
popa
xlat
mov
nop
test
mov
insl
sbbb
jp
jo
std
xchg
dec
pop
pushf
sarl
bound
daa
stos
divl
and
cmp
sub
rorb
cmp
push
pusha
mov
jmp
sbb
repnz
inc
movsb
inc
bound
dec
sti
adc
adc
arpl
icebp
neg
lods
adc
mov
inc
push
lcall
push
fwait
xor
out
lea
fucomip
mov
pop
inc
fldl
sti
xchg
add
scas
jns
sahf
stc
xchg
sbb
sarb
push
mov
adc
bound
shrl
insb
xor
xor
ds
cmp
sti
aas
rclb
xchg
les
adc
incl
xchg
pop
or
xchg
sbb
jbe
lock
pop
sub
leave
push
in
dec
or
movsl
ds
enter
push
lock
mov
ja
xchg
cltd
sarl
jnp
icebp
arpl
and
cld
dec
push
inc
cmp
mov
push
out
lods
jl
and
mov
in
call
jmp
cmp
mov
dec
mov
xchg
out
push
imul
lret
cld
cltd
xchg
notb
dec
cmp
shl
add
stc
shrb
shlb
mov
lock
loopne
xor
es
adc
and
push
ja
arpl
jae
out
js
mov
xor
sbb
mov
ret
leave
decl
mov
icebp
push
mov
sub
inc
pop
jp
xchg
mov
loopne
sbb
jmp
movsl
pop
xchg
pop
std
xor
fcomi
add
stos
sbb
fdivl
inc
sub
into
into
cmp
jmp
inc
mov
or
adc
addl
or
js
pop
jae
lcall
lods
lods
ja
push
jb
dec
in
in
shrb
pop
loope
stc
fwait
cmp
and
pop
cmp
jbe
push
xchg
adc
pop
add
ljmp
stc
push
xor
pop
repnz
das
repnz
mov
fwait
push
jmp
xchg
mov
and
sub
leave
icebp
popf
divb
pop
popw
bound
movsl
xchg
fcmove
jge
enter
loopne
mov
andl
dec
sti
mov
inc
lcall
and
insl
ljmp
ret
and
mov
loope
xorb
mov
add
mov
adc
rolb
lahf
es
pop
sub
sti
jmp
cs
jg
pop
cmp
xchg
and
adc
mov
bound
or
mov
lock
or
push
cmp
mov
pop
les
enter
push
sti
xlat
dec
cltd
lea
hlt
cmp
out
call
adc
add
mov
xchg
jle
push
cmp
lret
lret
lods
cmp
mov
fdivs
adc
jge
dec
xor
mov
test
icebp
pop
test
inc
pop
xchg
fcomps
adcl
xor
lahf
inc
cmp
subb
addl
out
fcomps
leave
sub
push
in
fldt
cmp
out
subl
adc
jge
fiadds
mov
sarb
popa
xchg
or
jmp
pop
pop
aaa
jl
xchg
pop
inc
cmp
adc
mov
mov
adc
pop
es
dec
jbe
mov
push
repz
dec
aas
outsb
adcb
mov
js
test
mov
cltd
xor
lods
adc
fimuls
mov
insl
and
mov
mov
inc
pop
in
ret
nop
or
je
fisttpl
aam
sbb
mov
pop
hlt
fiaddl
mov
mov
aaa
test
cmpsl
push
testl
and
mov
mov
xchg
call
or
cmp
inc
repz
cmpsb
test
inc
xor
jp
ficomps
xlat
icebp
stos
push
add
sub
jge
sbb
inc
movsb
bnd
lcall
and
sbb
incb
jne
and
fistl
insb
add
fadds
and
mov
push
movsb
imul
add
add
jl
aas
loop
adc
xor
sti
xchg
scas
push
rcll
sbb
es
pop
cmp
test
jns
inc
ret
mov
repnz
lahf
xchg
cmp
aaa
push
sub
push
and
push
lods
push
popf
xor
mov
mov
adc
xchg
nop
clc
jmp
dec
in
or
insb
xchg
cmp
cmpl
sti
xlat
pushf
out
xchg
clc
sbbb
aam
push
cmpsl
rcrl
lock
dec
aas
repnz
add
fwait
ljmp
popf
jecxz
mov
out
ja
in
das
jl
and
int
jmp
add
das
fcmovu
cmc
mov
mov
arpl
aam
lods
cmc
pop
xor
pop
pusha
add
in
xchg
aas
mov
nop
out
sbb
mov
jae
push
movsl
sahf
add
mov
jmp
jge
inc
cmp
jg
sbb
aas
xor
mov
push
jmp
lret
push
xor
fs
mov
nop
push
xchg
mov
inc
vpcmov
jb
mov
adc
jns
jp
jnp
jmp
das
adc
mov
fldt
add
inc
sbb
mov
ljmp
xchg
sbb
outsl
out
or
xor
mov
xor
push
int3
and
sub
mov
mov
repnz
jns
cmpl
fdivr
xchg
loopne
jecxz
sbb
inc
mov
push
out
pop
dec
push
inc
outsb
jl
xor
xchg
rolb
out
mov
push
sbb
mov
add
pop
in
cmp
sbb
push
dec
inc
jae
addr16
je
call
outsl
pushf
scas
neg
sarl
popa
sbb
pop
loope
sarb
call
sub
sbb
out
mov
data16
mov
fs
data16
cs
fistpl
out
mov
mov
dec
rolb
dec
mov
dec
jnp
jb
sahf
sbb
pop
pop
cmp
mov
mov
pop
test
cltd
or
cmp
repz
push
adc
test
sub
bound
xchg
fdivl
cwtl
ret
sar
xor
sahf
loop
pop
push
mov
sub
les
pmuludq
cmp
daa
inc
xor
addb
jp
daa
hlt
mov
jmp
ret
sbb
or
shlb
jne
push
dec
out
mov
mov
mov
and
aas
les
sub
jle
inc
imul
hlt
mov
dec
pop
arpl
enter
mov
inc
mov
fisttpll
popf
rcl
mov
mov
pusha
dec
in
aam
sub
adc
call
repz
test
mov
adc
mov
pop
imul
cmp
xor
adc
call
ds
adc
dec
and
inc
pushf
jns
rclb
xlat
das
clc
push
loopne
faddl
push
sub
pop
push
xlat
das
push
fcompl
test
clc
pushf
mov
jnp
push
leave
inc
lret
and
in
xchg
outsb
xchg
es
adc
cmp
icebp
xchg
push
jp
jmp
andl
loop
jge
pop
lret
xlat
dec
fwait
sub
aaa
je
sub
aad
repnz
insl
add
mov
mov
sti
es
aaa
daa
push
into
and
mov
mov
daa
jns
fcoml
or
sbb
les
add
in
xor
inc
aaa
dec
jnp
data16
mov
jns
iret
test
clc
xchg
cmp
lahf
or
jbe
aaa
iret
xchg
test
jnp
pop
lods
cmc
xlat
or
lret
loop
mov
add
or
aam
cmp
mov
testb
std
add
test
xor
jl
les
outsb
xchg
adc
fiadds
ss
xchg
clc
xor
or
xchg
xchg
push
cwtl
sub
mov
mov
mov
inc
lret
ss
xor
xchg
cltd
mov
dec
xor
mov
cwtl
cmc
push
test
mov
and
mov
mov
test
lret
bound
jp
and
hlt
mov
hlt
push
jmp
jmp
jo
sub
xsha1
cmpsb
or
mov
aas
sbb
add
jb
gs
xor
sbbb
fcomps
mov
inc
sub
or
jl
and
testb
xlat
or
push
stos
pushf
lods
idivl
xor
mov
rcll
pop
ss
dec
test
insb
mov
cmp
fs
xlat
dec
xchg
loopne
loope
lock
mov
and
cwtl
jo
lcall
pop
push
mov
icebp
movsb
jnp,pt
stos
push
js
xor
mov
ljmp
jge
hlt
adc
mov
jle
adc
jae
bound
inc
hlt
mov
fsubs
sbbb
dec
out
cmp
adc
mov
fldl2t
cmpsb
mov
jae
jg
cmp
mov
lock
popf
les
fldz
mov
sub
daa
scas
mov
stc
insl
jp
dec
xchg
push
jae
aas
inc
ljmp
stos
aad
sti
mov
jp
mov
and
sub
xchg
pop
test
lods
icebp
mov
lret
iret
fmuls
xchg
jp
cmp
pop
cwtl
stos
into
push
mov
jae
jmp
inc
mov
xor
adc
jno
inc
ficoms
pop
test
stos
out
mov
mov
inc
or
xchg
sub
push
sarl
imul
aas
mov
jle
leave
stos
aas
divl
fs
inc
push
out
movsl
mov
addr16
out
or
and
ret
xchg
xor
or
scas
pop
addr16
loopne
xchg
ret
hlt
mov
mov
mov
orl
pushf
push
jbe
sub
mov
daa
fbld
es
push
ret
in
into
in
jo
xchg
ss
jae
lahf
insb
popf
das
jg
mov
mov
pop
push
xor
push
jge
mov
stc
nop
cmp
sub
adc
and
dec
jge
stos
mov
mov
jl
mov
shlb
sub
inc
inc
cmp
xchg
clc
mov
lds
or
mov
hlt
test
mov
pop
jb
cwtl
das
jle
pop
or
mov
test
popf
jmp
daa
adc
dec
loop
ss
adc
pop
test
ja
push
adc
xchg
cmp
push
lods
adc
aaa
jne
xor
fldt
inc
jmp
mov
mov
jge
mov
inc
cmpsb
cmp
call
sbb
test
popa
fbstp
lea
insb
add
pop
fwait
incb
outsb
cld
mov
sub
lods
add
mov
pusha
sti
dec
sbb
mov
inc
pushf
iret
addl
mov
shrl
fistps
loop
lea
ret
jns
sub
cwtl
stos
aas
or
insb
push
mov
adc
adc
mov
out
loop
mov
cs
push
push
cmp
out
mov
jo
cltd
ret
loop
mov
xchg
lds
cld
jmp
xor
mov
je
dec
scas
inc
bound
and
fwait
fwait
ljmp
and
in
orb
out
adc
inc
mov
push
test
mov
iret
mov
les
mov
add
loopne
pop
ss
jns
or
xchg
jne
inc
mov
imulb
ja
mov
add
test
sub
inc
cmp
jnp
jno
and
add
fwait
sub
out
xorl
jo
cltd
int
add
imul
sub
mov
sbb
xchg
sti
popf
sub
push
xchg
scas
add
sub
adc
push
pop
mov
xor
insl
cld
loope
lock
lods
outsl
xor
pusha
aad
add
popf
out
in
pop
dec
mov
loopne
and
xchg
lahf
jno
in
rorb
sti
pop
and
dec
push
insb
cld
jnp
cmpsb
mov
push
lods
ja
mov
xlat
mov
push
jns
xor
sbb
adc
movsl
inc
or
loopne
int
pop
cmpb
inc
inc
in
scas
insb
push
xchg
daa
sbb
push
js
scas
jge
je
adc
call
dec
jnp
jnp
testb
andl
push
xchg
push
xor
je
roll
jmp
lods
push
outsl
loop
dec
popf
jb
adc
xchg
jecxz
and
test
pop
out
sbb
aas
loopne
jmp
mov
cmp
push
test
jle
jo
jle
xchg
rorl
mov
stc
sub
inc
movsb
mov
adc
adc
adcl
and
xchg
aam
xor
fsubrp
pop
xchg
inc
xchg
mov
jl,pt
mov
clc
rol
out
loope
fxch
dec
pop
dec
mov
outsl
imul
xchg
or
out
cli
push
push
shl
rcl
pop
hlt
adc
in
jnp
fs
orb
mov
mov
movsb
dec
pushf
pop
mov
mov
arpl
adc
dec
loop
xor
jbe
push
xchg
xor
in
jne
shlb
cmpsl
mov
mov
repz
push
call
and
jo
js
fcmovbe
pop
xlat
das
mov
aaa
cmp
inc
nop
inc
into
aad
fsubrl
rolb
or
jnp
sbb
mov
int3
scas
lods
jge
add
jne
and
enter
cli
stos
inc
or
jecxz
outsb
test
xlat
sbbl
cmc
movsl
ffreep
adc
mov
cwtl
adc
mov
andl
mov
ret
imul
lds
mov
aam
and
mov
lret
and
mov
sbb
push
mov
mov
cs
incb
or
mov
fsubrl
arpl
mov
push
mov
inc
test
push
aas
jo
test
pop
xor
cmp
into
inc
aam
outsl
and
xor
imul
mov
stc
popf
sub
sbb
jl
inc
push
inc
mov
iret
mov
int
mov
xlat
ror
push
pushf
je
es
push
and
sahf
jmp
xchg
mov
jmp
cmp
push
or
mov
mov
push
andl
in
mov
cld
xchg
enter
aaa
mov
add
push
jbe
jae
test
mov
dec
lea
nop
xlat
addr16
and
push
jno
imul
adc
adc
xchg
outsl
and
subl
filds
test
js
xlat
shll
fiadds
dec
movsl
lods
pusha
stos
inc
pop
cmpsl
cld
outsb
jns
push
stos
pop
mov
inc
cltd
jp
loop
mov
mov
pushf
cs
mov
xlat
shr
sbb
jo
push
jmp
orl
xchg
test
mov
idivl
push
and
movsb
mov
lock
fs
push
sub
shr
adc
pop
repnz
mov
xlat
in
jp
test
and
repz
ret
jmp
testl
jle
imul
sub
lds
out
mov
les
cmc
rcr
mov
jbe
pusha
add
inc
scas
mov
jnp
adc
insl
pop
scas
xchg
add
and
cmc
lods
loopne
jne
cltd
scas
mov
jno
in
push
xor
fdivrs
mov
add
adc
xchg
sub
cmp
jne
mov
insl
add
scas
popa
clc
sbb
mov
sub
jnp
mov
xchg
sub
rorb
lahf
ret
sbb
jg
ljmp
jecxz
in
jno
or
rclb
stos
inc
rcrb
jae
xchg
mov
dec
jno
cmp
sub
cld
xchg
and
mov
loopne
ds
imul
iret
call
icebp
mov
mov
xor
cmc
cmp
loope
outsb
sbb
pop
jbe
repz
je
xchg
mov
daa
inc
filds
push
sub
or
ficomps
stc
fdiv
pop
jno
jne
jae
push
movsl
or
inc
sti
mov
outsb
in
mov
ss
test
mov
mov
jge
notb
pop
decl
mov
xchg
mov
or
mov
dec
es
inc
enter
mov
ror
push
in
je
incb
inc
js
ljmp
sbb
mov
push
xor
and
inc
loope
mov
mov
dec
leave
xor
incb
pop
push
mov
inc
imul
mov
lea
pop
adc
or
push
mov
push
sbb
iret
dec
pop
jbe,pt
ret
push
inc
xchg
mov
push
sub
sbb
out
xchg
rorl
push
xor
das
push
and
add
in
and
xlat
inc
pop
sbb
int
dec
jmp
inc
push
aas
push
nop
and
push
in
icebp
push
push
in
xor
lods
mov
push
stos
push
xchg
fistl
or
or
sbb
dec
ficoml
push
jg
ljmp
ret
insl
es
les
xchg
pusha
ljmp
jne
outsb
push
pop
lahf
jle
cs
aad
rcll
jle
es
insl
jge
in
mov
cld
and
out
loope
shrl
and
pop
push
xchg
in
mov
test
cmp
int
pop
cmpsl
sub
push
adc
test
mull
lods
pop
sahf
mov
in
sub
ficomps
insl
std
popa
push
test
es
mov
mull
cmp
mov
test
in
mov
jb
inc
mov
imul
repnz
shrl
rolb
in
dec
and
dec
inc
popa
dec
out
addb
inc
out
xchg
cli
iret
arpl
cltd
dec
inc
fdivrs
rcll
dec
xchg
xchg
sub
mov
mov
mov
mov
imul
nop
std
jbe
pop
movsb
xchg
pop
scas
or
lods
ljmp
jno
repz
mov
fwait
cmp
ret
jne
rclb
sub
xor
xchg
xchg
fisttpll
mov
adc
mov
sub
fimuls
xchg
stos
inc
out
aad
adc
xchg
test
jno
addl
and
adc
cmpsb
and
hlt
lea
add
ret
out
test
add
xor
cli
jae
and
pusha
test
and
xchg
and
pop
pop
push
push
mov
mov
data16
divb
repz
insl
repz
lret
jb
jno
sti
lret
shll
pop
test
add
add
pop
jg
cmpsb
movsl
sub
shll
scas
push
repz
sbb
imulb
mov
mov
cmp
aam
lods
fimull
sub
dec
dec
pop
and
loope
fistps
lcall
aad
dec
mov
dec
insl
insb
sub
test
ret
inc
fsubp
jb
lcall
push
inc
pusha
pusha
adc
and
aas
xor
sub
fidivl
mov
in
test
lahf
cltd
fnstenv
or
jp
inc
jmp
imul
lock
jae
fidivs
pop
aad
cmp
push
lahf
adc
mov
xor
ljmp
sbb
cmp
jno
iret
std
rclb
call
jae
xchg
cmc
cmp
jl
push
fidivrs
fs
sub
sub
icebp
iret
jb
out
lds
inc
fmul
test
sub
rcr
pop
add
inc
cs
repnz
inc
pop
sahf
or
or
loopne
mov
push
cmp
mov
pop
pop
mov
dec
repz
pop
adc
mov
inc
repnz
dec
lret
mov
fmulp
fists
test
fsincos
and
cmp
loope
add
mov
mov
add
ss
int
mov
mov
jge
into
fdivrl
mov
or
mov
cwtl
lods
push
sbb
adc
xlat
dec
movsb
lock
xchg
jge
int
inc
ja
std
jae
aas
pusha
xchg
stos
mov
std
in
mov
jge
sbb
icebp
sti
sbb
lods
insl
push
or
mov
and
xor
cmp
push
stos
inc
mov
xor
into
xlat
leave
pusha
or
sbb
out
sub
pop
xor
pop
xorb
lcall
les
xchg
push
aas
adc
lods
cltd
xor
aad
cli
jbe
mov
movsl
xchg
jne
nop
test
mov
rorb
push
mov
push
cmpsb
xchg
pop
pop
xchg
andb
add
je
gs
std
mov
cs
push
push
lock
or
lock
outsb
out
arpl
push
pop
inc
rclb
pop
xchg
enterw
in
sbb
pop
fldl2t
cld
xchg
and
sbb
ret
cmp
inc
scas
icebp
cmc
fldcw
insb
xchg
in
xlat
lds
xor
cltd
fsubr
inc
daa
mov
shlb
bound
mov
push
repnz
fidivrs
adc
xor
scas
mov
pop
hlt
add
push
sub
sbb
pop
jnp
lret
sbb
jle
mov
enter
je
pop
adc
rorb
adc
dec
int3
arpl
mov
stos
adc
test
mov
mov
in
test
dec
mov
ja
and
std
test
dec
push
cmp
mov
imul
cmc
je
dec
pop
lods
pop
shl
cmp
or
ficoml
mov
mov
push
inc
cmp
mov
imul
sub
aaa
mov
jle
repz
dec
insb
stos
sub
test
mov
cmp
pop
addr16
test
pop
fdivrl
lret
cmpl
nop
loope
ja
dec
bndstx
add
movsb
fnstsw
mov
popf
mov
dec
xchg
jns
lret
mov
rcll
hlt
iret
mov
daa
cltd
sbb
xor
lcall
push
push
outsb
mov
cmpsb
sbb
lahf
mov
or
pop
andl
jbe
lock
mov
push
push
adc
fildll
mov
repnz
mov
movsl
jg
sub
lds
fcompl
inc
int3
sub
push
into
stos
or
push
inc
dec
hlt
pop
lahf
pop
xor
ljmp
jge
rorl
jne
and
ret
or
sahf
into
in
pop
inc
gs
ret
call
xlat
dec
push
inc
mov
pop
sub
mov
pop
cltd
xor
in
xchg
stos
andb
lods
dec
scas
scas
es
js
jmp
lahf
push
test
shll
lods
iret
xchg
add
lods
and
cwtl
das
or
fcmovu
ljmp
clc
rcrl
int3
arpl
push
data16
mov
jne
push
call
xor
pop
pop
int3
pop
jg,pt
lret
mov
fbstp
in
sbb
sub
push
clc
adc
mov
xor
aad
orl
adc
imull
cmp
add
jne
repz
push
lcall
mov
xchg
in
fldcw
jg
cmc
pop
sub
and
movsl
add
fbstp
sub
nop
push
std
pop
dec
dec
testb
jl
into
push
xor
aaa
xchg
in
sbb
scas
or
clc
out
pop
lods
adc
nop
test
cmp
mov
jno
mov
clc
fcomps
mov
dec
fs
xchg
clc
fs
adc
aaa
inc
jo
clc
push
mov
sti
fwait
jnp
xor
sub
stc
adc
adc
mov
dec
jnp
push
sarb
sbb
sti
xchg
sti
frstor
lcall
and
test
frstor
jp
fs
jmp
sub
call
sti
xchg
popa
push
adc
sub
sub
test
bound
into
jns
stos
pop
pop
sahf
fldl
sti
add
xor
pop
out
xchg
sbb
xor
jl
mov
dec
insl
jae
dec
sbbl
sbb
in
adc
lea
mov
stos
mov
push
iret
pop
movsb
sub
jecxz
cmp
adc
cmp
push
ret
jnp
mov
xchg
insl
pop
mov
sahf
and
into
cmp
ss
push
cs
push
pusha
das
sbb
rorb
js
and
jo
cld
stos
scas
movsl
mov
lret
jecxz
aas
fistpll
notl
cmp
adc
bound
testl
and
aad
add
scas
not
cs
loopne
dec
ljmp
jb
rclb
push
jo
insl
data16
lods
daa
and
int3
cmc
stos
arpl
arpl
je
aaa
aam
sbb
adc
fimuls
add
arpl
pop
outsl
mov
bound
sbb
pop
xlat
jle
or
loope
inc
push
out
push
or
xor
push
push
fidivs
addr16
or
cld
or
mov
loopne
jbe
xchg
and
popl
imul
das
cs
push
jb
pop
mov
subb
cld
push
jno
xchg
cltd
cs
int
int
cmpsl
ret
xchg
jae
push
pop
fcmove
push
mov
mov
sub
adc
das
stc
rcrl
inc
jge
mov
cs
cmp
dec
dec
test
mov
cmp
shlb
cmp
adc
out
test
sub
push
add
movsb
lahf
fists
aas
stos
fnstsw
sbb
xchg
jns
cli
jmp
push
jmp
mov
loope
jnp
movsl
cmp
push
aaa
notb
and
inc
adc
subl
movb
mov
es
dec
lea
repz
aad
outsb
xchg
push
sub
and
fs
bound
jo
cltd
pusha
popa
xchg
fcoms
sub
push
inc
or
add
sub
push
cltd
jno
mov
fmull
jb
cmpsl
mov
xchg
mov
xlat
repz
dec
in
out
add
push
das
imul
loope
push
aas
sbb
jg
insb
adc
push
mov
hlt
testb
add
testb
and
enter
inc
pop
out
xchg
in
sub
pop
add
popa
inc
cmpsb
add
popl
pop
add
xor
cld
cmpsl
adc
pusha
shlb
sti
insb
lea
leave
lcall
ljmp
mov
add
xchg
rcll
shlb
pop
out
sub
mov
aad
mov
daa
ja
pop
loop
sbb
out
subb
xlat
lret
sbb
or
push
pop
cmp
addr16
dec
insb
xchg
cmc
or
mov
add
dec
sbb
push
xchg
leave
shll
nop
sbb
movsb
in
movsb
cmp
aas
aad
out
test
imul
cmpsb
bound
xlat
or
or
idivl
ds
mov
out
sti
jns
mov
inc
xor
dec
cmp
sbb
sub
cmp
inc
in
jle
fs
repz
in
into
testl
jp
jle
pop
jp
stc
hlt
adc
xor
inc
popa
or
das
xchg
or
dec
jbe
out
testb
in
test
jecxz
imul
add
push
cmp
mov
push
sub
xchg
xchg
sub
lret
xor
std
sbb
aaa
mov
and
xlat
jmp
ja
fisubs
jl
and
cmpsl
or
and
dec
ret
cltd
es
push
cltd
jne
lods
lods
inc
and
fwait
sbb
cmp
push
and
cmp
pop
pop
cmp
xor
je
mov
pusha
shlb
out
lahf
cmpsb
push
aas
test
xchg
or
xor
pusha
ds
outsb
adc
pop
out
out
mov
xchg
cwtl
lock
pop
or
mov
sub
into
dec
out
fs
into
push
subl
fwait
movsb
or
xor
cwtl
das
pop
push
imul
xorb
and
imul
xor
cmp
xchg
scas
adc
std
cltd
cmp
cli
or
cld
je
fcompl
popa
or
dec
test
iret
das
cmp
pop
insb
pop
sbb
test
pusha
sbb
sbb
push
inc
ret
bound
into
outsl
cmp
outsl
add
rcrb
mov
stos
cmp
cmp
sub
into
sbb
ds
jo
scas
stos
push
lret
fmul
cld
subl
xor
jmp
test
jae
cs
pusha
mov
adc
inc
ljmp
mov
fcoml
testb
pop
adc
sbb
sbbb
notb
dec
mov
loopne
mov
push
pop
sub
jb
punpcklwd
cmpsl
jb
sub
out
pop
and
std
out
rorb
or
loope
dec
out
push
add
dec
mov
int
jo
das
xor
push
jb
push
shl
dec
mov
cli
repz
pop
mov
and
dec
pushf
cmpsl
loope
mov
or
data16
sub
pop
lock
iret
xor
ret
fwait
inc
sub
shr
mov
xor
repnz
pop
cwtl
notl
fisttps
je
cs
fadds
dec
ss
fsubs
cmp
andb
jae
and
iret
in
add
xchg
xchg
scas
aaa
add
or
jl
push
xor
pop
imul
mov
int3
jno
imul
xchg
cmc
clc
adc
mov
out
lock
dec
in
out
cmc
js
loopne
jnp
cmpsb
jp
pop
sub
test
mov
mov
fstps
ja
sub
js
push
add
aam
clc
pop
mov
dec
fildl
dec
adc
aaa
mov
xor
cltd
push
push
bt
fbstp
lea
lock
push
sbb
jmp
or
adc
push
pop
add
mov
dec
aaa
and
xchg
push
mov
sbb
jp
push
andb
mov
les
std
mov
js
cltd
stos
inc
out
fiadds
call
enter
int3
fs
xor
or
popa
add
faddl
cmp
mov
adc
rcll
xor
jo
in
cmp
insl
shll
cmp
dec
xchg
insl
adc
lahf
loop
fwait
fwait
lods
push
test
push
int3
sub
ja
or
addl
cmpsl
stos
repz
ds
cs
sub
pop
xor
and
mov
outsl
mov
cli
mov
xchg
rcrl
xor
adc
mov
mov
sub
insb
push
xchg
rclb
sbb
mov
dec
idivb
fstpt
or
int
and
pop
pop
and
fbstp
pop
or
adcb
cmp
dec
gs
cmp
jmp
orb
and
or
adc
or
test
stos
push
jb
mov
dec
and
cltd
popa
sbb
mov
sub
roll
pop
out
and
xor
aad
adc
sub
inc
fadds
test
cli
fnstcw
aam
call
test
sub
sbb
mov
jnp
xchg
movsb
adc
mov
inc
popf
cmp
inc
jae
ret
fisubrl
outsl
and
push
scas
push
sub
push
xchg
fs
cmpsl
fisubl
cmpsl
add
sub
repz
mov
mov
jl
loope
lret
mov
mov
sbbl
jl
lahf
mov
enter
push
jg
orl
inc
out
and
repnz
dec
inc
xchg
mov
fistps
adc
in
mov
adcl
inc
pop
inc
inc
stc
xchg
sahf
xor
ljmp
cmc
cmp
jo
les
dec
pop
sub
pop
lods
cmpsl
repz
icebp
movsl
and
push
insb
push
data16
jno
movsb
push
inc
inc
aaa
or
ficoml
or
pop
jl
daa
adc
pop
jnp
in
repz
cmp
in
xchg
cmp
rorl
mov
movsl
popa
orb
push
setae
loopne
imul
loop
lock
add
pop
xor
fisttpll
aad
and
add
inc
fwait
mov
mov
xor
call
jge
out
int
jne
mov
loopne
movsb
adc
rorl
push
js
out
sti
mov
jg
lds
bnd
pop
popf
out
mov
xchg
pslld
test
push
repz
repz
and
mov
sub
add
push
int
or
gs
pop
test
dec
pop
les
xchg
sub
pop
adc
mov
aad
xor
test
cmp
rol
inc
arpl
xor
and
push
cld
pop
sarl
pop
or
adc
call
inc
xchg
ds
xchg
sub
mov
aad
add
sub
mov
pop
dec
in
and
and
xchg
inc
adc
imul
sbb
lcall
and
push
fistpl
ds
out
sti
fidivrs
nop
gs
pusha
dec
inc
shll
dec
and
inc
shlb
insl
cmp
int3
cmc
rcrb
mov
out
ret
daa
dec
fldcw
lahf
out
test
ror
sbb
and
push
stos
inc
push
mov
enter
xchg
mov
fdivl
arpl
sbb
mov
or
sbb
xlat
sti
data16
jne
mov
xor
xor
popf
add
xor
lcall
movsb
stos
inc
iret
mov
imul
xor
je
fldt
fwait
inc
sahf
jmp
out
lods
mov
loopne
sahf
or
iret
mov
call
mov
in
mov
or
das
dec
or
cmp
arpl
add
in
and
dec
int3
out
mov
popa
xor
cld
lcall
bound
ds
out
test
hlt
xlat
jmp
iret
or
in
cltd
test
nop
iret
push
js
cmp
push
lods
lret
xlat
push
push
mov
pop
fwait
stos
into
or
lea
mov
loopne
xor
into
cltd
or
mov
pop
scas
and
push
add
mov
xor
inc
or
std
into
lock
lods
sti
cmp
jg
cltd
xor
mov
push
inc
push
arpl
mov
push
push
ficomps
lock
xor
dec
inc
sbb
pop
cmp
dec
mov
loope
or
and
pop
mov
daa
or
cs
in
dec
wbinvd
std
xor
sub
cmp
enter
fildl
popa
int
aaa
xlat
repz
push
int
lock
xlat
rcrb
push
lods
call
inc
scas
call
lcall
jne
cli
mov
adc
push
dec
sub
rorl
jbe
scas
xor
in
pop
test
outsl
andb
enter
xchg
mov
pop
cmpsl
pop
push
je
dec
xchg
scas
icebp
add
int3
ficoml
in
jmp
mov
mov
lock
adc
sbb
push
icebp
les
das
pop
out
xchg
lret
outsb
orl
adc
enter
jns
jno
pop
dec
lock
adc
lret
mov
push
in
repz
mov
in
and
sti
or
inc
cli
call
lock
jb
loopne
loop
clc
int
push
adc
jae
xor
push
push
loop
mulb
jo
mov
out
aas
pop
into
adc
add
jns
leave
mov
and
pop
ss
sbb
scas
shll
add
loope
sub
pop
scas
les
mov
scas
mov
add
sub
vrcpps
outsb
outsl
adc
sbb
xchg
cmp
cld
mov
add
pop
jne
xchg
push
or
fwait
xor
inc
adc
mov
psubb
int3
aad
jecxz
notb
mov
fsubrs
pop
inc
lahf
xchg
jle
in
inc
dec
movsl
hlt
aas
popf
lds
push
push
adc
gs
sub
push
mov
mov
nop
daa
scas
pusha
jbe
inc
scas
mov
inc
add
pop
ljmp
mov
sub
rorb
dec
or
sub
sub
shlb
ret
jl
or
and
idivb
mov
add
lcall
andl
mov
sbb
jns
stc
xchg
cmpsb
sbb
std
insb
call
sti
jbe
icebp
stos
inc
and
addb
jg
pop
sahf
lahf
inc
jl
or
and
ret
adc
pop
jns
cmpsl
mov
xor
mov
lea
mov
dec
insb
xor
sub
insb
push
cwtl
sub
adc
mov
xor
push
movsb
or
loop
xor
inc
sub
pop
push
fidivs
dec
insl
js
push
gs
jno
add
leave
dec
pop
sub
push
xchg
mov
sbb
test
inc
xchg
xor
dec
inc
out
push
push
and
sbb
int
jbe
push
xor
xor
dec
shld
out
ret
push
sbb
das
xchg
xchg
lods
cmp
push
in
mov
decl
mov
fadd
mov
loope
aaa
aas
jnp
mov
sbb
mov
aam
in
push
xor
sbb
pop
fpatan
sub
xor
dec
cmp
dec
out
dec
jp
lret
lret
sub
cs
cmpsb
ret
repz
sbb
ljmp
mov
mov
adc
xlat
sbb
mov
cmp
mov
cmp
ror
testl
push
sub
push
ret
fstpt
mov
jp
jg
xor
cs
pop
push
fiaddl
dec
lea
add
xor
xor
add
mov
addr16
add
xchg
fsubrs
in
adc
in
das
cmp
int
and
jae
into
lea
push
popa
jg
jno
andb
push
jb
inc
xchg
ljmp
insl
clc
lret
rorb
jecxz
jnp
inc
and
sub
cwtl
mov
js
int3
daa
xor
int3
jecxz
testb
sarl
loopne
movsb
mov
pop
fbstp
cmc
scas
sahf
push
pop
inc
fbstp
adc
insl
cltd
jb
mov
aam
loopne
sub
mov
xor
shrb
jg
test
ds
mov
sti
or
out
inc
xchg
lcall
insb
out
sarl
ret
sub
inc
xchg
xor
loop
lods
inc
inc
adc
push
inc
pushf
fdivs
jns
mov
int3
xchg
mov
dec
aaa
lods
cwtl
mov
cltd
js
mov
int3
outsl
jle
in
cmp
inc
dec
loopne
ss
jl
aaa
addr16
mov
fildl
xlat
mov
push
sub
xor
into
pop
inc
loopne
and
out
lock
xchg
push
movsl
mov
out
xchg
pop
pop
sub
mov
mov
inc
jmp
add
inc
mov
loope
mov
out
or
add
test
xchg
mov
adc
sub
insl
add
dec
imul
push
inc
popf
xchg
fldenv
and
jno
xchg
outsb
xchg
stos
outsl
pop
scas
xchg
into
nop
xor
or
lahf
cmpsl
ss
push
jbe
hlt
hlt
cld
jg
mov
jnp
pminsw
and
mov
in
pop
sub
testb
data16
xchg
mov
jl
inc
or
int
xlat
mov
jno
inc
mov
cwtl
inc
pop
xchg
pop
jb
imul
rolb
jae
xchg
jg
mov
pop
out
mov
fidivl
pop
cmp
js
stos
jbe
jne
aaa
adc
or
mov
fistps
push
fnstenv
mov
stos
lods
jmp
adc
hlt
jnp
cmp
mov
lret
imul
fs
insb
xor
mov
mov
fidivs
adc
enter
aaa
data16
dec
sub
dec
imul
lock
loope
pop
adc
fnstenv
mov
testl
or
inc
adc
lret
xchg
repz
xor
mov
cmp
dec
inc
outsl
sub
pop
insl
mov
sub
dec
and
pop
push
jl
xlat
cltd
xor
and
data16
xchg
ffree
add
hlt
mov
xor
xchg
mov
lcall
ret
pop
add
adc
jge
xor
or
lock
adc
mov
inc
push
inc
cs
xchg
fsub
data16
sbb
dec
pushf
cmp
out
ss
inc
sub
je
addr16
and
push
loope
inc
sahf
scas
cmp
ds
lret
shlb
rcrl
or
cld
jecxz
sbb
dec
fidivrs
ret
push
pop
icebp
pop
push
js
out
int3
icebp
ficoml
and
sub
int3
inc
sub
jae
shl
sbb
mov
mov
mov
cmp
scas
dec
int3
push
mov
add
mov
xor
jmp
in
jo
pop
cmp
xchg
inc
movsl
push
jne
add
dec
and
add
cmpsb
push
mov
icebp
adc
jecxz
sub
mov
or
jecxz
inc
fwait
movsl
test
jbe
lret
xor
in
test
in
pop
adc
or
xor
sub
inc
loope
or
pop
inc
or
add
add
sahf
sub
mov
adc
fisubrs
imul
push
movsl
and
mov
jo
lret
mov
shll
fsub
jp
inc
into
dec
out
xlat
repnz
xor
call
imul
xor
dec
in
into
arpl
call
fucom
pop
in
dec
rorb
or
mov
cmpsl
mov
or
cmc
xor
movl
mov
fstpt
push
ljmp
insb
shll
ret
push
cwtl
cmpsb
inc
movsl
cmp
mov
ret
xchg
pop
cmpsl
inc
pusha
cli
out
movsl
add
sbb
inc
pop
mov
aam
mov
adc
inc
inc
fidivl
fs
mov
sub
inc
cltd
xor
out
mov
mov
fs
jmp
or
dec
and
test
add
loop
inc
fisubrs
mov
jmp
insl
je
dec
out
adc
adc
adc
push
aas
std
ds
mov
and
pop
jg
cmp
das
mov
jb
inc
mov
popa
inc
push
mov
xor
jbe
test
jno
scas
andb
aas
call
cmp
fnstsw
lret
xor
sbb
adc
mov
push
idivl
cmc
stc
sbb
mov
fstpt
clc
xchg
clc
stc
dec
mov
sbb
jp
movsl
cmp
inc
cmp
lea
sbb
and
and
out
lds
jb
repnz
iret
sbbb
loopne
mov
mov
repz
scas
add
or
les
fdivl
call
inc
ficoms
cmp
sub
cwtl
insb
inc
dec
cmp
fdivrs
sti
bnd
outsl
jno
sahf
adcl
repz
mov
sbb
imul
ret
in
mov
ret
mov
aad
stos
pusha
stos
loope
pop
hlt
int3
test
js
sub
push
imul
fadds
pop
insb
int3
push
mov
or
test
pop
inc
adc
mov
add
fsubrs
xor
rcrb
gs
ficompl
dec
cmpsl
sub
aam
in
mov
stc
jmp
or
cmc
inc
daa
push
scas
loop
loopne
pusha
mov
push
outsl
adc
loopne
mov
out
sbb
inc
push
sbbl
xlat
dec
aad
pusha
addb
out
loope
into
insl
push
out
fildl
adc
pop
imul
hlt
push
jecxz
xor
mov
jbe
mov
mov
leave
mov
shll
dec
jo
cmp
fmulp
inc
in
sbb
in
shll
xchg
mov
push
jo
xlat
jl
sbb
iret
cs
pusha
lock
push
or
cmp
xchg
mov
icebp
fisubrs
orl
data16
test
dec
movsb
sub
dec
add
imul
aam
jns
or
or
adc
sbb
outsb
bound
loop
and
sbbb
push
jle
scas
into
mov
xor
push
add
jge
bound
jb
stos
sub
in
rorl
push
lods
pop
sbbl
fcoms
imulb
dec
pop
aam
dec
cmpsl
xchg
mov
push
jo
or
stc
cli
push
mov
sbb
mov
mov
mov
lea
out
mov
in
dec
add
loope
and
mov
fdivrl
pop
sub
mov
iret
mov
inc
pop
inc
sub
nop
test
adc
inc
fld
cmpsl
mov
notl
xlat
outsb
mov
fcomi
mov
cs
lods
pop
cmpsb
mov
shlb
xchg
jg
imul
sarb
scas
clc
pushf
xor
ret
imul
xchg
xchg
dec
add
xor
push
jmp
sbb
sahf
xor
dec
fcoms
sbb
test
fisttpll
lahf
sub
in
notl
cmp
test
out
sub
insl
or
xlat
pop
cli
pop
adc
pop
enter
add
push
xchg
cmp
push
dec
jmp
gs
add
mov
xor
jb
in
jno
in
and
int3
ficoml
mov
push
and
pop
pop
repnz
dec
or
stos
pop
pop
notb
pop
push
call
lods
test
push
cmc
pop
adc
pop
out
fsubs
imul
push
xor
inc
mov
pusha
sbb
lret
ss
jp
pop
and
cltd
cmp
leave
out
pop
pop
mov
pop
adc
adc
push
outsb
add
aaa
ret
push
inc
mov
and
imul
push
mov
adc
sbb
push
mov
pop
mov
mov
cmpsb
in
push
cltd
push
in
ljmp
arpl
and
gs
lea
jg
shlb
cld
lock
pop
mov
mov
fld
out
daa
into
xchg
mov
outsl
mov
js
dec
in
cltd
push
push
mov
into
sub
sub
push
sbb
dec
cld
cmp
shrb
pop
sbb
or
in
push
daa
add
sub
inc
popf
pop
dec
lea
xchg
sti
loope
push
push
jmp
xchg
pop
test
and
jge
leave
int3
xchg
scas
dec
or
jbe
push
loopne
ret
jns
add
lcall
loopne
cld
iret
insl
adc
lods
add
into
jo
repz
stc
xlat
adc
or
add
rcrb
mov
push
cwtl
sti
stos
fsubs
xchg
sub
cmp
sbb
movsl
mov
jmp
xor
dec
push
pop
push
dec
in
mov
jl
jns
sbb
ljmp
jns
sahf
frstor
aas
ss
out
push
pop
dec
mov
add
sub
dec
loop
leave
sub
jg
ljmp
mov
popf
jnp
gs
mov
mov
pop
push
mov
scas
mov
lds
movsl
mov
pusha
sub
cmp
and
pushf
fstpl
negl
shlb
cmp
pop
mov
or
stos
and
cli
xchg
invd
xchg
imul
pop
stos
push
insb
sti
jp
cmp
or
mov
ffree
ret
in
test
test
lret
dec
jecxz
out
cs
inc
push
push
test
cmp
rcll
andb
jbe
inc
scas
inc
jae
sbb
movsl
dec
cmp
xlat
mulb
cmp
and
jle,pt
cmp
aad
xchg
mov
or
inc
mov
jp
fucomp
orb
pop
addr16
es
jge
lret
in
xchg
int
xchg
xchg
add
sub
fs
push
push
jno
or
int
mov
les
bnd
pop
test
add
lret
and
mov
popa
jno
jp
pop
movsb
daa
arpl
lods
jno
ja
popa
call
in
jb
pusha
vpsubusw
pop
mov
xchg
inc
sbb
es
std
mov
cld
scas
jno
xchg
scas
outsb
or
xchg
push
jg
pop
mov
je
es
pusha
and
cli
mov
insb
test
push
imul
mov
xchg
std
test
into
stos
daa
and
mov
jae
push
push
cmpsl
mov
jecxz
enter
pop
repnz
jno
sub
pop
jecxz
or
mov
mov
ss
shll
stos
aas
inc
jo
jb
pop
mov
lcall
sarb
stc
in
enter
dec
das
jae
outsb
xchg
dec
fstpl
int
int3
icebp
es
xchg
jae
sbb
lock
ds
pop
xchg
lcall
imul
and
cs
outsl
inc
mov
icebp
rcl
or
adc
pop
push
hlt
push
adc
rcll
push
fldl2t
xorl
push
imulb
stos
inc
repnz
sub
dec
adc
aad
fisubl
pop
push
jae
dec
mov
ret
pop
lahf
mov
in
insb
lret
lret
fisubrl
gs
inc
es
outsl
lds
cmp
out
shr
mov
fdivl
das
ret
jb
dec
clc
sahf
jle
stc
popf
sbb
jle
push
mov
popa
add
scas
add
jb
scas
mov
pop
sbb
mulb
xchg
divl
rclb
mov
xor
pop
mov
dec
aaa
call
mov
movsl
cmp
je
pop
xor
lods
adc
pop
sbb
inc
bswap
xchg
mov
xor
xlat
sbb
test
data16
dec
mov
sub
jbe
cld
outsb
pop
push
shll
int3
adc
lods
jmp
jae
jmp
or
sub
sarl
sub
fs
xor
dec
add
sub
add
sbb
rclb
sbb
cli
push
mov
dec
add
pusha
sarb
fwait
shrb
repnz
jle
sub
xor
sub
or
push
xchg
pop
jge
test
loope
add
ljmp
daa
cmp
test
pop
or
pushf
jl
testb
xchg
xchg
ja
and
sti
cs
sub
lods
cmovge
cmp
sbb
out
or
call
dec
out
push
cmp
pop
in
dec
notb
fistpl
addl
and
sub
es
xlat
inc
fsubrs
call
hlt
and
imul
pop
iret
jb
je
jns
xchg
shrb
test
sub
mov
jp
inc
or
addr16
fwait
sub
push
movsb
lea
js
loop
scas
xor
xchg
jbe
inc
sub
pop
addr16
jmp
imul
out
out
and
in
mov
jl
xlat
jle
std
lahf
push
sbb
por
add
cmpsl
fucomi
cmp
adc
subb
dec
xorb
in
inc
in
gs
sub
dec
test
jg
xchg
insl
jge
fwait
insl
fbld
push
sub
nop
loop
rcl
bound
dec
fnstsw
mov
push
inc
fcompl
sbb
stc
adc
or
mov
cmp
call
mov
int3
fs
adc
lret
push
dec
fs
lea
dec
or
fsubrl
mov
xchg
pop
call
or
cli
and
lret
push
pop
fmul
push
xor
push
hlt
inc
or
gs
inc
and
xor
iret
jmp
xor
or
adc
or
inc
repnz
jo
lahf
repz
insb
aas
mov
ja
ljmp
clc
or
cmp
es
or
popf
adc
es
pop
lahf
stos
das
sub
test
mov
lods
cmp
loope
push
fcoms
push
fisubl
sub
mov
lods
sub
sbb
subl
inc
scas
enter
int
sbb
mov
add
loop
push
pop
push
jne
imul
sbb
and
mov
cwtl
sub
leave
popf
cmc
data16
sub
imul
adc
jg
jo
cmp
ljmp
sbb
in
mov
cmc
fsubs
push
jb
int3
mov
ss
mov
lahf
mov
inc
movsb
sub
push
or
test
cmp
inc
adc
mov
arpl
inc
imul
pop
sahf
sub
push
out
add
xor
ret
stos
jne
mov
mov
mov
mov
lahf
fs
movsb
cmpsl
push
popa
loop
int
rol
pop
repnz
pop
and
xor
arpl
or
or
test
scas
mov
hlt
jge
jg
addr16
sbb
roll
stc
lret
loope
push
or
mov
push
dec
or
out
push
addr16
cmp
mov
imul
addl
xchg
lahf
pop
cltd
es
cmp
jnp
es
add
out
adc
inc
outsl
loope
or
inc
mul
add
mov
jns
mov
cmpsl
mov
fisubrs
xchg
cmp
jbe
pop
pusha
add
divb
and
outsl
imul
in
mov
pop
clc
nop
daa
movsb
shll
popa
xchg
fdivl
repnz
aad
fs
sub
lcall
in
sbb
add
jge
sbb
xchg
lahf
test
repnz
dec
loop
jmp
cs
imul
and
in
mov
aaa
imul
mov
adc
xchg
inc
adc
shl
sbb
stc
inc
sub
stos
xchg
cmc
lahf
mov
movb
inc
in
sbb
adc
inc
dec
mov
cwtl
mov
out
pop
mov
fucomp
mov
adc
and
nopl
fstpl
ret
ds
and
imul
mov
dec
and
outsl
mov
jg
or
addr16
mov
sub
and
shlb
mov
add
mov
dec
pop
test
out
jg
push
push
sub
mov
push
popf
xor
in
cmp
aam
cmp
addb
stos
pop
scas
jmp
notb
ss
mov
xorb
mov
and
loop
stc
and
mov
mov
and
imul
sbb
adcb
add
clc
xor
arpl
pop
cmc
mov
call
in
pop
and
fdiv
mov
ds
dec
gs
sbb
adc
pop
mov
push
jnp
jbe
rcrb
mov
rclb
ljmp
cmpsl
mov
mov
mov
mov
sub
mov
jnp
in
cmc
mov
data16
aam
popf
mov
int3
jno
jns,pn
fiadds
ret
dec
outsl
pusha
cli
dec
imul
popf
insb
mov
daa
adc
pop
mov
into
fbstp
mov
call
lret
insb
jnp
imul
shlb
movsl
mov
xchg
lock
adc
cmp
mov
rcr
andl
loopne
xsha1
cmpsb
mov
mov
sbb
push
popf
call
popf
pop
imul
push
push
or
insb
test
cwtl
outsb
scas
mov
dec
iret
push
aam
pop
mov
xor
mov
data16
sub
pop
sub
xor
push
les
xor
cld
pushf
sub
in
loopne
imull
cmp
xor
pusha
inc
xchg
add
push
jno
pop
or
aas
sbbl
adc
mov
aad
mov
pop
push
out
jae
pushf
lea
sbb
arpl
lock
rcl
ljmp
pop
movsl
outsb
cmp
test
mov
imul
jnp
aaa
mov
xlat
ss
fdivrp
sub
mov
add
clc
mov
sub
mov
sub
loope
pop
movups
xchg
pop
scas
xchg
mov
jae
subl
ret
pop
mov
xchg
aad
cld
das
insb
movsl
ljmp
xor
sub
or
shlb
imul
jb
stc
es
outsl
add
aam
cmp
cmc
mov
inc
sub
mov
inc
stos
lea
jbe
add
jl
push
sub
sub
push
popf
rcrb
mov
pop
fnstenv
push
out
push
pop
jl
andl
enter
pop
movsb
cmp
xor
mov
jp
stos
ds
fistl
xor
cmp
xor
into
insb
mov
push
notl
inc
filds
jo
gs
fadds
adc
adc
dec
add
dec
arpl
pushf
and
mov
dec
cmpsl
xor
sbb
jge
xor
mov
cmp
mov
leave
not
jae
pop
imul
movl
and
mov
cvtpi2ps
insl
xor
ret
inc
ss
mov
lcall
mov
ljmp
ljmp
scas
lret
add
ds
xchg
popf
inc
add
cmpb
lds
push
jmp
shrb
push
or
aas
cmpsl
lea
icebp
stc
shlb
sub
jle
shll
lret
push
inc
movsl
add
and
add
sub
jno
jae
pop
sub
mov
xchg
add
or
adc
fwait
mov
xchg
or
xchg
push
fld
loop
cld
push
inc
xor
fiadds
mov
movsb
xor
pop
pop
dec
dec
xchg
fsubs
pop
add
decb
arpl
cmpl
rol
js
or
xchg
or
jl
mov
popa
insb
sub
inc
push
shrl
inc
test
das
pop
fldt
inc
adc
scas
xchg
jnp
dec
clc
cmp
xchg
sbb
push
push
mov
push
inc
mov
lods
jg
aam
cld
pop
xor
cmp
jecxz
mov
fwait
ret
xor
sub
or
jecxz
push
popf
repnz
xchg
fwait
insb
dec
cmp
mov
hlt
mov
shll
pop
loopne
push
fwait
idiv
xchg
cmp
mov
pop
js
mov
addr16
cld
jae
addr16
repz
pop
test
push
or
jnp
movsl
fld1
out
cltd
imul
in
std
lock
push
jno
xchg
sbb
pop
pop
add
sbb
cmp
out
jecxz
icebp
mov
cmp
xchg
fs
jb
mov
je
cld
and
adc
jnp
outsl
cmc
cmp
fcoml
pop
jae
lods
pop
out
sbb
nop
jl
cmp
mov
and
sahf
pop
push
aad
sbb
push
cmpb
aaa
dec
push
pop
add
nop
inc
gs
mov
fiadds
xor
js
add
xchg
arpl
mov
sub
mov
sub
icebp
pop
out
insb
xchg
jo
mov
sbb
add
scas
sub
test
loop
mov
shrb
sarb
int
test
insl
aad
dec
xchg
jecxz
int3
cmp
loope
cmp
leave
adc
sub
stos
mov
insl
ljmp
mov
lods
fwait
je
xor
scas
sub
dec
lea
push
mov
push
inc
xchg
sub
mov
stos
mov
xchg
cli
xchg
fldt
mov
test
add
in
data16
xchg
and
pop
dec
jmp
dec
out
dec
add
pusha
push
jp
das
pop
xchg
cmc
mov
or
pop
ja
push
insl
mov
movsb
xchg
mov
push
fdiv
lods
dec
dec
shll
ret
mov
icebp
adc
fucomip
cmp
ficoms
sbb
mov
das
add
idivl
mov
mov
pop
or
cmc
jo
xchg
mov
imul
xchg
jg
mov
aam
mov
js
jnp
andl
rclb
pop
clc
or
adc
inc
in
push
mov
loopne
or
cmp
daa
lea
test
xor
and
test
jecxz
xchg
or
mov
jmp
mov
jmp
sti
rcrb
add
clc
jle
subb
push
xor
mov
jno
xor
push
mov
hlt
imul
sub
bound
pop
nop
push
out
leave
inc
push
add
test
push
or
jecxz
push
add
inc
dec
cmp
jecxz
repnz
cmpl
jns
add
popa
mov
mov
push
outsb
jecxz
jl
jmp
in
cmp
insb
shrb
lret
aas
adc
out
add
lcall
push
mov
fwait
sti
ds
rcl
jnp
push
xor
in
inc
fcoml
fldl
cwtl
jmp
enter
dec
out
fsubrs
notl
in
add
adc
arpl
into
ljmp
fidivs
adc
jae
push
mov
iret
call
pop
mov
cwtl
in
inc
std
mov
in
daa
imul
test
xchg
stos
pop
jg
dec
inc
mov
fildll
xor
add
jbe
lods
in
clc
or
pop
pop
insl
jle
iret
data16
jbe
sub
nop
push
dec
in
es
fadds
mov
pop
lahf
mov
or
sarb
adcl
mov
push
dec
scas
pop
ja
bound
cmp
mov
jge
dec
ret
insb
into
sub
sub
aam
std
dec
cmpsl
cmp
cwtl
imul
pop
mov
push
inc
lock
scas
pop
testl
rcrl
mov
sahf
leave
mov
push
jns
jp
inc
les
mov
jb
insl
adc
scas
cld
add
mov
add
fcompl
mov
out
lret
pop
hlt
jno
fstps
xor
in
cmp
sbb
shrb
fisubrs
enter
jns
inc
ret
xchg
adc
jbe
adc
pop
scas
andb
cmp
ljmp
push
fistl
mov
test
add
mov
fidivrs
cmpsb
popf
pop
loop
add
sub
pop
jp
mov
mov
les
push
dec
loop
xchg
loop
bound
lods
and
out
movsl
in
ret
dec
fsts
inc
clc
lea
daa
daa
jl
inc
int
inc
unpcklps
scas
xchg
inc
fs
mov
pop
insl
imul
push
nop
pusha
jle
and
or
stc
inc
add
mov
mov
lods
sbb
dec
jmp
xchg
lock
hlt
sbb
pop
lahf
pushl
push
scas
add
jb
stos
sub
mov
ret
repz
xchg
jno
inc
sub
dec
loop
pop
inc
out
fdivs
xor
out
xchg
test
leave
inc
fidivrs
push
aas
lock
or
jmp
jns
arpl
ret
es
repnz
adc
push
dec
mov
ret
sbbb
dec
in
push
and
fsubrl
push
adc
mov
in
sub
pop
mov
jmp
sub
push
fstpt
mov
jno
addb
cmp
fnstsw
and
xor
inc
push
push
add
lods
loopne
xchg
or
repz
ds
mov
test
std
sbb
xor
push
mov
fmul
sbb
sbb
das
mov
pop
mov
xor
hlt
mov
dec
ljmp
repnz
push
inc
cli
inc
xchg
sub
test
call
pushf
cli
jg
pop
shlb
cmp
jne
sub
dec
push
loop
outsl
loop
sbb
xor
hlt
dec
call
imul
in
inc
push
mov
inc
mov
mov
test
aaa
push
mov
inc
dec
and
aaa
andb
sub
rclb
mov
cmp
add
shrb
imull
mov
insb
shlb
daa
dec
dec
ficompl
data16
xchg
jo
inc
aad
mov
int
cltd
add
loopne
fwait
mov
mov
sub
adc
pushf
jg
or
cwtl
sub
and
mov
mov
lret
pop
pushf
mov
dec
out
dec
sbb
pop
cmp
bound
pushf
adc
jb
mov
lahf
je,pn
add
xchg
jg
js
mov
cmpsb
imul
les
and
add
sbb
in
repz
pop
cs
jl
push
and
cmp
adc
mov
mov
push
adc
lea
rolb
lock
idivb
pushf
sub
imul
or
repz
xor
xchg
icebp
or
ret
sbb
iret
push
lret
clc
mov
mov
dec
and
mov
aad
pop
dec
loope
stos
enter
jmp
mov
cmp
cmp
push
repz
les
test
add
cmp
xchg
cmp
aas
push
and
enter
arpl
xor
and
xchg
cmp
imul
int
subl
mov
test
pop
js
orl
sti
mov
lahf
dec
mov
mov
into
lahf
cs
insl
push
xor
popa
clc
inc
adc
mov
mov
add
cmc
jl
pusha
inc
test
mov
test
shrl
fs
lea
ds
sti
lods
push
sub
mov
aam
fs
lahf
cmc
in
mov
xor
push
movsl
mov
fstpl
test
push
loop
xor
fdivr
loop
ja
and
pop
fisttpll
push
out
mov
in
mov
mov
push
loop
sub
mov
xchg
cs
shlb
dec
mov
xorl
aam
xchg
pop
xchg
outsb
and
mov
push
popa
cmc
cmp
je
dec
cmp
lds
or
add
out
push
je
inc
sbb
jge
cmp
inc
push
cmp
int3
dec
loopne
mov
push
les
adc
cs
push
dec
add
lret
std
movsl
pop
repnz
int3
pop
jbe
push
mov
and
pop
inc
lret
leave
test
shll
push
stos
adc
hlt
lods
cld
mov
subb
repz
out
add
rolb
cmp
adc
test
jmp
adc
enter
pushf
mov
je
les
lds
cmc
push
clc
sahf
xor
stos
testl
mov
pusha
sub
sbb
or
into
icebp
test
add
fcmovnu
cvtps2pd
sub
jb
sub
ficoml
inc
push
cli
sbb
adc
ss
push
sti
lea
xchg
cmp
stos
cmp
xor
call
dec
xchg
int
lds
repz
pop
and
mov
shrb
xlat
ret
movsl
sbb
or
xchg
adc
mov
pop
pusha
testl
jle
sar
push
icebp
popa
sbb
in
jb
pop
mov
pop
out
test
add
lds
jl
push
adc
mov
dec
stos
inc
jp,pt
inc
lods
pop
leave
int
je
fldenv
pop
negb
dec
fisttps
jge
mov
cmpsl
ds
push
dec
out
jns
or
jne
adc
jno
aam
sbb
dec
sbbb
mov
leave
push
test
inc
jne
stos
cmpsb
mov
jb
ja
mov
sbbb
mov
add
push
pop
repz
je
jp
imul
insb
jbe
push
imul
fnstsw
into
pop
fsubrs
jae
mov
ret
jl
pusha
jo
cmp
lahf
fcos
xchg
or
pop
cmp
mov
ret
jbe
mov
dec
jns
jge
int
cmp
mov
ljmp
jb
aaa
mov
testb
out
pop
sbb
sahf
xor
icebp
pushf
fs
sarb
xchg
jo
sbbb
xchg
sbb
ret
sub
fidivl
out
imul
cmp
xchg
mov
popf
push
movsl
iret
push
hlt
mov
stos
adc
xor
js
sbb
shrl
cmp
sub
jle
mov
in
inc
fidivrs
fbld
adc
dec
mov
lds
or
lcall
sub
dec
and
push
imul
lea
xchg
inc
fcmovb
mov
popa
clc
sbb
cs
bound
sbbb
sub
aaa
je
mov
insl
mov
cld
xchg
aas
aam
mov
popa
sbb
push
cmpsl
mov
fdivl
push
clc
into
sub
xchg
sub
dec
loope
xchg
repnz
mov
aas
jecxz
adc
xor
pushf
xor
icebp
mov
mov
hlt
sub
sbb
mov
movsb
cmp
inc
xlat
fisubl
xchg
call
movsb
inc
xlat
fdivr
fidivs
cli
pop
cmc
sub
xchg
xchg
mov
call
or
cmp
pop
push
pusha
lahf
ss
and
imul
push
in
repnz
lret
sti
pop
cli
xchg
mov
repnz
lods
inc
repz
dec
fisttps
cwtl
or
int3
mov
adc
insl
cltd
fdivl
mov
icebp
in
je
lea
push
lods
insl
xchg
ljmp
pop
dec
in
ds
inc
outsl
xchg
test
mov
arpl
pop
jb
xor
xchg
dec
jecxz
mov
lret
sub
xor
push
mov
popa
in
adcl
fistpll
push
sbb
mov
clc
hlt
outsl
adc
pusha
mov
jbe
mov
fcomi
mov
pop
decb
leave
popa
scas
ja
fldl
popa
clc
cs
jnp
push
out
xchg
jle
cmpsw
mov
aad
in
xorl
pop
icebp
add
add
jmp
shll
movsl
loop
fcoms
jns
leave
stos
add
jg
jp
pop
stos
out
rcll
pop
hlt
xor
out
ljmp
or
xchg
out
sub
mov
mov
push
sbb
fwait
out
xchg
mov
mov
outsl
es
pop
mov
mov
inc
outsb
adcb
aad
push
or
add
mov
ja
mov
ss
lea
js
stos
lods
or
xchg
cmp
jmp
outsb
add
ds
call
mov
mov
cmc
scas
inc
sub
mov
js,pn
jg
cld
fbstp
jge
mov
xlat
outsb
sbb
or
inc
inc
mov
test
or
sbb
out
push
jbe
jg
jecxz
divb
fldenv
jne
inc
test
inc
sub
mov
jne
push
arpl
xchg
in
stc
xchg
mov
popf
xor
arpl
mov
cli
xchg
cwtl
pop
bound
jl
test
mov
adc
or
jle
dec
scas
and
les
lret
adc
scas
sub
push
popa
jle
and
jg
imull
jge
inc
mov
shrl
bound
xchg
cmp
call
mov
sbb
in
xchg
inc
pop
hlt
js
inc
gs
mov
mov
imul
lcall
mov
cltd
cmp
xor
xchg
mov
aad
sbbb
andl
xchg
push
mov
mov
into
mov
imul
test
jno
xchg
mov
js
mov
dec
pop
mov
fs
cltd
mov
and
xchg
lcall
dec
shrb
aad
enter
push
out
and
pop
cmc
es
or
xor
sbb
fnstenv
adc
sub
and
jg
std
lock
test
in
jnp
sbb
jl
aad
adc
xchg
repz
daa
mov
test
jl
movsb
test
lret
jmp
std
mov
or
cmpsb
push
jb
leave
mov
les
clc
mov
test
push
xor
ja
pop
cmpsb
rclb
sub
int
rcll
add
fs
negl
push
call
pop
sarl
aas
negl
in
dec
sub
leave
pop
shlb
add
mov
cld
sbb
sbb
add
mov
add
je
push
sbb
xchg
sti
fmuls
or
ljmp
ret
repnz
call
dec
fbld
cmp
fcomip
pop
pop
repnz
jo
gs
jae
mov
leave
pusha
mov
mov
cmp
mov
sbb
adcb
inc
fidivrl
shrl
pop
sbb
xor
mov
cmp
daa
mov
sbb
inc
sahf
add
pop
xor
test
in
pop
jo
loopne
inc
sub
into
repz
jae
enter
dec
jmp
and
imul
sti
icebp
mov
fmuls
cmc
mov
insl
inc
ficomps
mov
call
cmp
lods
inc
add
push
lea
lret
loop
scas
int3
jecxz
jae
adc
lret
sti
push
sbbl
movsb
adc
jecxz
mull
fcomip
inc
scas
inc
je
shrl
xchg
dec
in
xchg
xchg
jecxz
push
adc
xor
mov
xor
fdivl
fnstsw
rorb
stos
adc
loopne
stos
inc
popa
add
nop
aaa
orb
mov
sub
aad
roll
mov
hlt
push
call
xor
and
leave
mov
pop
aad
push
insl
dec
idivb
cmp
dec
pop
out
jge
inc
fdiv
lcall
inc
in
les
arpl
cltd
aas
dec
jecxz
mov
fidivs
adc
cwtl
inc
faddl
or
pusha
cltd
cs
lods
out
jge
outsl
mov
aas
push
jg
jne
frstor
mov
add
sbb
push
jmp
in
cmp
dec
in
and
mov
incl
insl
xor
outsl
push
push
out
fs
pop
ja
nop
imul
lods
jge
dec
jg
dec
mov
push
xor
js
addr16
inc
popf
mov
lret
stos
pop
jns
jl
sub
ficompl
popa
xlat
aaa
repnz
test
mov
daa
std
adc
rclb
out
filds
dec
add
jg
add
and
mov
outsl
pop
clc
xchg
mov
dec
mov
mov
jo
iret
pop
outsl
mov
mov
icebp
jb
into
adc
ficoms
sbb
out
nop
pop
inc
xchg
sahf
push
and
xchg
sbb
movsl
adc
negl
sbb
fmull
or
jecxz
adc
adc
std
mov
out
sbb
in
mov
add
mov
icebp
out
aam
mov
fwait
stos
push
xchg
insb
jmp
xchg
lret
into
je
test
pop
fldt
mov
sbb
movsl
pusha
outsb
insb
xor
xchg
mov
loope
mov
pop
rcrl
dec
les
adc
mov
and
xor
mov
inc
inc
lret
pop
mov
xor
mov
or
insl
cs
out
lods
les
maxps
jg
lcall
dec
pop
add
andl
test
pop
aam
pop
cwtl
dec
mov
dec
arpl
gs
fisttpll
sbbb
adc
or
add
adc
fldcw
xchg
inc
add
adc
and
push
loop
push
ret
lock
test
jb
bound
aas
lea
dec
inc
xchg
xchg
pop
and
mov
ja
jecxz
arpl
shrb
test
jne
inc
mov
nop
popf
xor
push
adc
add
adc
and
or
sub
pop
shrl
cs
mov
mov
test
adc
jnp
mov
add
jle
add
adc
das
hlt
adc
inc
xchg
push
dec
sub
xor
shld
mov
xor
xor
xor
cmc
push
pavgw
and
lods
aad
outsl
mov
mov
in
fwait
mov
lret
loope
test
inc
or
stos
inc
test
gs
inc
xor
lds
xchg
bound
data16
inc
daa
sbb
cmpsb
arpl
cmp
ljmp
loope
inc
lret
repnz
jmp
or
rorl
psubd
mov
push
lods
mov
and
in
rclb
and
cld
jp
dec
inc
rcrb
add
dec
stos
inc
sub
ficoms
jl
nop
push
ljmp
xor
cmpl
into
dec
shll
les
mov
jle
mov
mov
jae
mov
incb
cmpsb
cmpsl
gs
inc
shl
lcall
insl
outsl
cwtl
xor
ret
arpl
mov
pop
leave
and
xlat
pop
dec
call
sahf
imul
xchg
pop
popa
dec
in
jg
push
inc
mov
fdivl
sbb
xorl
test
push
cmpl
lea
inc
ja
outsb
leave
sub
sub
or
loop
mov
xchg
in
xchg
mov
pop
mov
outsb
loop
mov
push
push
jae
push
das
addr16
inc
push
pop
xor
dec
push
xor
sti
sbb
inc
mov
sub
inc
scas
jbe
shll
inc
cmp
sahf
mov
cmp
js
stos
xor
je
in
ret
cmpsb
pop
pop
sarl
mov
pushl
adc
repnz
leave
repz
rcrl
sbb
nop
mov
and
adc
scas
mov
js
out
scas
jb
add
subb
outsb
xchg
rorb
test
jnp
shll
or
hlt
dec
scas
mov
int
fcomi
dec
mov
pop
ljmp
imul
inc
fistl
sub
test
xor
push
in
loopne
into
inc
or
outsl
punpckhbw
out
mov
or
clc
xchg
xor
rcr
jae
sahf
ficoml
and
or
test
add
and
and
js
jns
mov
xor
xchg
fmuls
dec
mov
or
shlb
mov
pop
xor
movsl
jle
cmp
push
test
jo
dec
in
es
lods
mov
xor
in
jecxz
pop
std
cmp
fdivrl
push
enter
fsubrp
dec
sub
xorb
mov
andb
sbb
xchg
inc
fsts
xchg
add
cmp
jno
xor
push
xor
decb
push
adc
xor
cld
xchg
out
push
enter
pop
sar
sarl
lods
cmp
repz
push
test
mov
cld
pop
mov
adc
popf
xchg
cmp
cmpsb
cmp
test
or
mov
and
icebp
xchg
fistpll
faddl
cmp
mov
lahf
sbb
xor
stos
pop
add
dec
mov
iret
cmp
sub
shrb
xor
mov
inc
mov
and
movsl
pop
sarb
repnz
mov
fldt
rorl
add
subb
or
mov
in
lock
iret
add
xchg
rcll
imul
cmc
sbb
mov
cmp
xor
xlat
outsb
fsubrl
out
pop
jmp
in
jle
mov
jge
insl
add
push
rcl
jge
mov
cmpsl
mov
cmp
jne
jnp
pop
sbb
xor
lods
pushf
mov
xchg
pushf
jge
and
lods
mov
imulb
aad
or
dec
rolb
adc
jg
call
subl
pusha
mov
icebp
and
out
jmp
push
addr16
test
loope
lods
mov
or
xchg
stos
pop
cs
sub
int3
nop
ret
or
in
rcrl
jnp
xchg
xlat
mov
mov
mov
cli
sahf
test
ja
xchg
pop
stos
stos
add
cmpsb
and
jg
into
xchg
mov
pop
lds
sbb
movsb
sahf
jbe
sub
icebp
push
or
xchg
mov
cmc
adc
cwtl
mov
push
ss
jg
pusha
xor
mov
xlat
mov
hlt
or
cmp
pop
or
es
cmpb
sbb
daa
bound
sbb
cmp
xor
loop
xchg
mov
lret
pusha
sbb
fstp
scas
fs
or
shrl
add
xchg
push
or
push
nop
inc
inc
fsubrs
jmp
lods
push
aam
add
jp
imul
pop
push
mov
out
and
out
icebp
xchg
and
jecxz
inc
mov
pcmpeqw
xchg
pop
and
sub
sbb
fs
aaa
sub
mov
push
sbb
cmpsb
xchg
xlat
dec
push
pop
std
sbb
xchg
mov
in
rcrb
add
sti
xor
arpl
aas
fs
cmp
pop
sti
push
pop
sub
decl
or
adc
ret
sti
xor
sahf
add
xor
cmp
outsb
shr
popa
fwait
int
stos
inc
idivl
pop
les
or
sarb
pusha
mov
insl
mov
and
lret
pop
sbb
icebp
push
mov
pop
cmc
push
and
shrl
dec
xchg
push
in
sub
inc
pop
dec
xchg
mov
pop
inc
lods
pop
pop
sub
rcrl
addr16
sbb
xchg
js
xchg
test
shlb
sub
xor
mov
mov
pop
inc
lds
cli
ds
or
jmp
fdiv
mov
mov
push
iret
pushl
out
lahf
rclb
mov
scas
ds
fisubl
imul
mov
rcr
out
cmp
dec
mov
pop
adc
pop
inc
xchg
stc
sbb
dec
sahf
sbb
cld
imul
cs
stc
sub
cmp
inc
push
xchg
sub
push
ljmp
pusha
into
cmp
popa
testl
popa
cmp
lods
adc
push
int
xchg
or
push
mov
xor
xchg
cli
jmp
xchg
mov
fildll
in
ja
cltd
xchg
inc
xor
add
stos
mov
xor
xchg
jl
or
xorb
scas
mov
idivb
mov
clc
xlat
dec
icebp
ds
jecxz
adc
fwait
mov
pop
mov
jp
pop
shrl
mov
loope
mov
adc
sahf
jnp
pop
mov
dec
pop
test
and
insb
cmp
xor
lds
xorb
xor
aad
sahf
jne
dec
mov
fcompl
mov
pop
ds
mov
mov
mov
mov
add
pop
jns
insb
scas
jno
repz
nop
mov
cmp
add
out
dec
into
inc
mov
pusha
enter
mov
pop
movsl
loopne
jo
cwtl
scas
push
mov
call
js
cmpb
mov
xor
pop
mov
jo
push
adc
push
pushf
cmpsb
cmp
dec
filds
leave
ja
and
and
jns
idivb
jbe
loope
jge
insl
stos
aad
jno
push
outsl
mov
repnz
mov
js
sti
cmp
mov
adc
xchg
jle
dec
in
xor
xchg
xchg
inc
int
jns
ja
lcall
lahf
test
lret
out
fcompl
or
loope
jle
xchg
insl
out
call
rorb
clc
and
fs
xor
push
out
xor
test
fildl
sub
lds
rorl
or
les
jp
xchg
sub
imul
xchg
je
cmp
in
cwtl
adc
enter
insb
mov
jge
ds
mov
mov
push
ficoms
nop
test
aaa
mov
nop
in
ret
adc
mov
ret
cmpsl
in
dec
in
mov
pop
shll
cmp
pop
insb
push
cli
pop
aas
and
lea
adc
cmpsb
pop
stos
in
xor
dec
imul
inc
lahf
bound
inc
lea
stc
xor
scas
dec
in
pop
sahf
sbb
cmp
or
jno
inc
push
sahf
cmp
pusha
stos
sbb
dec
loope
dec
out
xor
adc
fmull
sub
sub
xor
lret
bound
mov
dec
imul
pop
outsb
lods
dec
addr16
and
addr16
xor
dec
jp
orl
fisubs
push
lock
adc
inc
shll
divl
hlt
push
mov
mov
mov
ficoms
ljmp
shl
adc
mov
adc
push
push
dec
jno
and
rorb
jnp
inc
inc
popf
mov
sub
mov
stos
jae
pusha
push
lret
fdivs
mov
stos
int
push
fmul
xchg
push
add
jecxz
andl
pop
ja
inc
test
sub
lret
cmpsb
push
mov
lahf
test
or
test
insb
mov
xchg
jge
adc
push
mov
adc
ljmp
xor
aam
je
addr16
xor
fwait
xchg
adc
scas
cmpsl
push
nop
mov
or
insl
push
sub
mov
inc
popl
movsb
dec
jle
cmp
stos
and
popa
lahf
dec
mov
sahf
and
mov
test
pop
ret
mov
icebp
inc
mov
mov
dec
lret
pop
out
jbe
inc
int3
mov
xor
mov
inc
lahf
cmpsl
sbb
test
in
jle
add
aaa
jmp
jne
and
pop
cmp
mov
adc
sbb
inc
fcoml
movb
dec
adc
mov
dec
das
mov
rcrb
push
or
xor
add
sub
push
enter
cmp
or
adc
cs
aas
xor
loopne
test
inc
pop
pusha
sbb
aaa
jl
dec
inc
data16
dec
inc
dec
les
pop
cmpsl
push
dec
sarb
pop
negb
dec
insl
fistpll
mov
pop
sub
fidivrl
hlt
jo
push
cmp
mov
insb
idivb
mov
mov
pop
xor
lahf
jb
add
or
xchg
sbb
mov
mul
sbb
iret
ds
or
jbe
mov
mov
ss
popf
mov
hlt
cmp
int3
push
rclb
and
ret
fisubl
dec
inc
or
inc
dec
sarb
push
stc
daa
mov
fidivl
adc
inc
nop
jnp
sbb
pop
scas
bound
add
sbb
sbb
cli
and
ret
push
pusha
fdivl
fisubrl
scas
jae
sti
or
and
xor
adc
xchg
lods
leave
pusha
dec
mov
mov
ljmp
pushl
or
jno
imulb
inc
aas
jge
jle
lret
inc
xchg
cmp
adc
inc
or
lods
inc
leave
adcl
lret
fldcw
push
pop
fldl
push
imul
xor
mov
xor
in
popa
aaa
testb
add
and
dec
mov
in
mov
pusha
cmp
mov
push
jae
stos
xorb
je
cltd
mov
jecxz
lahf
mov
push
popf
pop
jns
out
pop
inc
xchg
mov
fisubrs
imul
xor
notb
pop
fadds
cli
xor
sarb
out
mov
jns
test
jp
pushf
arpl
cmc
inc
adc
lahf
test
ds
in
or
das
adc
mov
cli
pop
jns
sbb
mov
ret
fisubs
pop
mov
loopne
and
add
fbstp
push
cmpsb
inc
push
lea
sub
lods
push
cmp
inc
pop
sbb
cmp
mov
lock
jo
pop
movsl
dec
lahf
sbb
movb
sbb
pushl
sbb
std
push
adc
inc
aad
dec
mov
mov
inc
test
mov
lahf
adc
ret
cmp
addr16
cmp
aad
mov
rcll
stos
loop
cld
sub
movsb
cmpl
cwtl
xchg
pop
adc
loop
sbb
mov
das
cmp
sbb
inc
or
lea
gs
jmp
lret
js
mov
ret
les
sbb
xchg
xchg
mov
fisubl
fisttps
bound
test
cwtl
xchg
inc
cltd
inc
into
sub
jbe
xor
or
and
dec
sub
fs
jp
sub
cltd
pop
mov
mov
sti
das
jo
jno
js
fnsave
gs
std
scas
daa
loope
mov
mov
or
or
popf
popf
push
iret
mov
xor
pop
mov
stos
je
addb
in
mov
loopne
pop
lds
mov
hlt
cmp
inc
jbe
mov
sarl
push
rorl
cmp
push
jge
mov
mov
mov
push
outsl
jae
nop
xor
jle
outsb
nop
loope
sbb
dec
iret
mov
sbb
mov
cs
sbb
cmpsb
test
lret
lret
add
or
out
xchg
test
je
addb
loope
dec
loop
add
repz
sub
lret
add
xor
xlat
cmp
jg
clc
outsl
cwtl
fidivrs
ret
dec
adc
test
add
inc
lods
pop
int
pop
popf
andb
stc
xor
jo
mov
cmc
push
in
es
adc
sub
pop
push
fisttps
pop
and
dec
sub
mov
and
mov
cmpsb
jnp
sti
adc
inc
mov
add
adcl
mov
test
jle
jno
push
aaa
or
ja
dec
mov
fsubl
les
fwait
push
into
and
scas
jbe
jo
or
mov
icebp
sbbl
push
mov
mov
dec
sbb
and
mov
je
bound
into
movsb
fnstsw
sub
mov
out
pop
or
sub
outsb
mov
lock
ljmp
sahf
mov
clc
sahf
pushf
movsb
pop
or
adc
out
mov
push
mov
sbb
orb
push
out
jbe
sbb
stc
xor
mov
xlat
outsb
aad
imul
sbbl
iret
inc
fdivrp
aas
inc
xchg
jl
and
add
jp
xchg
dec
mov
lds
enter
out
stos
and
pop
cld
jl
lret
mov
jmp
popf
fucomi
push
movsb
shl
test
dec
mov
pop
loope
enter
pop
jle
adc
jecxz
add
add
test
je
test
xor
adc
add
pop
ja
lahf
arpl
test
jmp
sbb
outsl
lret
push
xor
mov
test
lret
sub
cmpl
dec
mov
ficoms
push
fwait
ja
rorb
push
popa
test
int3
pop
test
mov
mov
sbb
sbbb
cmp
aad
pop
in
divl
rorl
iret
adc
lret
xchg
push
dec
mov
inc
lret
cmp
sti
loope
sub
dec
loopne
cmp
std
das
std
jp
sbb
mov
cli
push
dec
xchg
int
sub
test
push
mov
ss
jle
or
push
mov
cmp
xchg
sub
rorb
out
xor
ja
inc
fnsave
mov
adc
les
es
xlat
push
popa
das
cmp
jno
mov
inc
xchg
inc
int3
adc
sbb
test
adc
sub
and
inc
cmp
push
jle
aam
pop
xor
ss
lcall
addb
insb
xchg
imul
or
pop
add
pop
mov
xchg
mov
leave
rcrb
push
cli
sarl
dec
and
loopne
push
or
xor
and
and
or
pop
xchg
idiv
jl
xlat
aas
mov
cmp
sbb
test
push
cmpsb
push
pop
xchg
arpl
aaa
add
mov
rorb
push
subb
sbb
into
aas
fnsave
mov
mov
test
jmp
mov
mov
ja
lods
dec
mov
dec
pushf
pusha
int3
sub
or
gs
ret
push
aad
pop
cmp
cmc
jns,pt
lods
stos
jl
in
lret
add
adc
shr
loop
call
jbe
mov
dec
xorl
popa
lods
imul
xchg
jmp
lds
mov
xchg
insl
jae
push
jmp
xchg
hlt
sbb
test
paddd
icebp
mov
nop
jmp
or
ss
leave
dec
xor
sarl
or
dec
pop
loopne
sbb
lcall
outsl
cwtl
push
jne
pop
push
js
mov
mov
mov
sub
xchg
cmp
jns
inc
pushf
nop
cmp
mov
cwtl
push
add
insl
xchg
push
and
inc
cwtl
pop
mov
insb
pop
test
lods
aas
mov
push
jmp
push
add
ret
sbb
imul
jecxz
pushf
xor
mov
in
xor
sbb
inc
pushf
into
xlat
cmp
adc
sbb
call
shrl
fdivl
int3
sbb
popa
stos
call
push
ljmp
jecxz
aam
and
rolb
cmp
outsl
jbe
inc
mov
xor
push
mov
sbb
push
loopne
cmp
loopne
xor
cmp
sub
pop
or
fs
and
imul
xchg
mov
leave
std
inc
mov
mov
fldl
loope
and
ret
sbb
cmp
cmp
sub
xor
nop
pop
in
lds
test
ret
repz
dec
les
xchg
js
lret
lds
icebp
push
cltd
xor
call
test
sub
movsb
aam
or
fists
js
pop
mov
mov
cmpsb
mov
cmc
push
lret
test
ret
push
or
dec
mov
ret
call
mov
ljmp
into
add
lret
cmc
outsb
xchg
int
push
fst
fidivrl
ljmp
movsb
pop
sub
push
lods
sub
add
mov
leave
push
add
lods
mov
cmc
daa
scas
test
sarl
scas
jb
push
stos
xor
jp
fists
mov
rclb
push
rorl
aam
mov
push
out
pop
repnz
or
adc
pop
lods
inc
lea
cwtl
das
dec
scas
lret
outsb
mov
mov
rcl
repz
pop
sahf
test
mov
and
test
clc
inc
fisubrl
mov
popa
clc
jnp
dec
in
pushf
jg
into
pop
insb
add
mov
and
inc
mov
inc
aaa
xchg
fnstenv
pop
pop
mov
testl
out
cld
push
jmp
adc
jno
dec
imul
and
mov
push
mov
fnsave
mov
xchg
mov
fcompl
mov
hlt
mov
aad
inc
rcrl
pop
ja
rcrb
cmp
testl
lds
rcll
mov
xor
push
ret
pop
pop
repnz
fldt
ds
xor
push
pop
mov
add
mov
sub
scas
inc
fcomp
mov
mov
xchg
inc
fld
push
ds
call
pop
repz
ds
out
rcrl
and
out
insl
jae
adc
rcrb
mov
dec
addb
push
xchg
scas
dec
push
in
jle
sbb
add
cli
xchg
adc
xor
ss
xor
add
xchg
shrl
push
inc
dec
adc
nop
aam
pop
xchg
inc
cwtl
push
ljmp
adc
jge
ja
cld
mov
sub
insb
jp
pusha
leave
and
xor
rolb
cld
push
or
das
cmp
ret
sbb
mov
call
xchg
cli
cmp
adc
mov
cld
cmp
sbb
bound
cmp
cmp
pop
lock
adc
jl
inc
fidivl
jb
add
adc
mov
inc
movsb
and
out
mov
jle
or
cmp
movsb
lcall
outsb
mov
mov
cmp
dec
dec
dec
or
inc
mov
decb
nop
mov
sbb
outsb
aas
cld
push
cmc
sub
lock
xor
or
cmpb
out
jnp
mov
xor
fildl
stc
nop
sbb
inc
fdiv
in
insb
xor
sti
sar
cld
out
lret
or
mov
imul
jecxz
jno
add
jbe
aaa
mov
mov
ljmp
roll
fs
mov
mov
pop
mov
adc
dec
jb
pop
jp
and
push
xor
movsl
imul
xlat
sub
mov
fwait
mov
test
std
pop
xchg
popa
cmp
scas
daa
nop
push
xorl
sub
cmpl
nop
mov
sbb
cld
js
loopne
cs
jge
xor
pop
pop
sbb
gs
adc
pop
rcr
scas
daa
test
loope
and
int3
test
jne
pmaddwd
dec
mov
cli
pop
das
inc
cmp
add
inc
adc
and
gs
mov
shlb
inc
mov
inc
dec
lahf
xor
movsb
pop
mov
icebp
jmp
or
inc
mov
call
psubq
cmc
cmp
imul
std
inc
add
idivb
mov
sbb
daa
icebp
cmp
sbb
leave
mov
es
mov
fst
sbb
jmp
aaa
jno
and
xor
and
aad
mov
loopne
xchg
adc
mov
imul
mov
das
in
into
push
call
sub
mov
lret
mov
pop
cmp
dec
test
xor
lret
cwtl
movsl
cmp
orl
stos
pop
scas
sbb
jecxz
or
cmp
jp
mov
sbb
sar
push
bound
push
mov
cwtl
std
notb
into
push
mov
sub
movsl
test
lahf
imul
mov
cld
nop
pop
hlt
add
inc
adc
sub
jmp
mov
adc
shrl
ficompl
or
jae
rcll
add
out
test
add
shll
or
imull
inc
adc
add
sbb
fsubrl
mov
dec
ljmp
pushf
popl
iret
or
je
dec
or
insl
loopne
repz
das
cmpsl
adc
dec
or
lds
sbb
mov
add
in
and
pop
int3
addr16
add
push
clc
lahf
decl
in
inc
or
scas
cmc
pop
add
push
pop
push
cld
adc
lret
sub
addr16
bound
lahf
inc
xchg
or
mov
add
cmp
call
jmp
xor
enter
cwtl
sbb
lret
xchg
cmc
pop
in
xlat
loope
popf
std
jbe
int
mov
je
aaa
lret
sbbl
push
roll
xchg
mov
push
jle
lcall
mov
hlt
stos
xor
adc
int3
xchg
lret
xchg
mov
out
je
ljmp
fs
aaa
pushf
inc
ja
xor
xchg
jmp
dec
adc
iret
out
add
push
jl
pop
pop
lret
jl
mov
lods
dec
pop
iret
xchg
popf
lahf
pop
add
sahf
inc
test
addr16
xor
jle
mov
outsb
push
mov
add
outsb
icebp
jne
or
call
lds
lret
xchg
sub
cmp
jmp
and
mov
fldenv
data16
orl
aas
mov
repnz
psubsw
pop
sbb
inc
push
xor
sub
orb
cltd
std
rorb
sub
cmp
cmp
fwait
arpl
mov
inc
div
pop
dec
xchg
sbb
sahf
lcall
pop
adc
jo
mov
mov
mov
sbbb
imul
dec
sub
cmc
jne
pop
sbb
lods
xor
orl
rcl
xor
shlb
add
push
sbb
mov
mov
loop
daa
xor
mov
sub
les
mov
jnp
mov
mov
movsl
sub
int
mov
pop
mov
cmp
mov
pop
cmpsl
xor
mov
rclb
cmp
scas
adc
lds
in
push
jno
mov
pop
lahf
cmp
xlat
pop
cmp
aad
mov
inc
or
pop
cld
or
mov
push
xchg
inc
xchg
aam
dec
fmulp
mov
and
movsb
or
fmull
and
add
push
add
pop
scas
sub
and
mov
cmp
aam
and
cmp
aas
and
cld
push
push
add
xchg
inc
idivl
and
imul
adc
lods
add
mov
int
mov
push
add
into
and
push
pop
mov
inc
xchg
sbbl
mov
into
fidivrs
jb
sbbl
es
in
add
fidivrl
adc
pushf
pop
and
leave
pop
cli
jle
sbb
stc
mov
jnp
push
sub
sub
xor
gs
mov
and
inc
das
test
dec
mov
mov
and
imul
cmp
mov
jg
mov
jge
cmpsl
xor
bound
xlat
ss
adc
sub
push
mov
pop
jle
push
push
dec
popa
xchg
inc
ja
mov
pop
pusha
push
xchg
inc
mov
cmp
cmpsb
das
fsts
jl
popf
adcb
push
dec
in
fnstcw
cld
or
dec
push
sub
into
or
jl
adc
js
dec
outsb
or
jnp
jb
dec
dec
shrb
sub
fdivrl
xchg
sub
adc
aad
lea
or
jp
repnz
inc
dec
sub
inc
lret
hlt
fdivl
int
incl
fnstcw
je
outsb
push
sti
jae
xlat
xorl
fidivrs
addr16
outsl
bswap
xchg
and
fldcw
gs
ja
dec
jge
dec
push
cmp
inc
jo
loope
jl
test
inc
popa
xchg
mov
dec
or
jae
dec
mov
test
lcall
or
or
shl
or
out
test
lcall
lea
sub
pop
sbb
jl
insl
inc
push
add
jae
dec
mov
cmpsl
cmp
fsubrs
and
sub
enter
xchg
cmp
lcall
aas
pop
in
xor
js
sub
and
ss
mov
lods
pushf
inc
mov
mov
mov
hlt
pop
mov
cmpsl
cmp
cwtl
inc
mov
sarl
sbb
and
push
cld
imul
lods
jnp
pmullw
insb
mov
and
enter
inc
or
lods
push
cld
mov
mov
inc
jp
mov
xchg
test
les
mov
lods
push
insl
push
xor
lds
mov
xchg
and
inc
or
mov
scas
push
out
in
mov
inc
jge
mov
xchg
sahf
aaa
les
and
push
outsb
push
int
mov
xchg
mov
mov
and
scas
sub
daa
mov
popf
inc
sti
fsubs
xchg
pop
push
mov
mov
and
xor
mov
jl
rorb
ss
mov
test
push
xchg
mov
push
add
fadds
out
daa
test
aam
je
aas
add
xchg
mov
mov
hlt
imul
mov
add
push
fs
rcrb
mov
pop
mov
int3
data16
pop
incl
in
pop
pop
mov
dec
dec
push
divl
popf
in
jmp
inc
or
ljmp
jno
aad
scas
push
dec
test
and
adc
dec
mov
and
push
mov
jne
sbb
mov
cwtl
push
or
dec
add
mov
adc
ret
dec
adc
and
ret
aas
add
sub
movsb
xor
mov
loope
roll
iret
pop
or
cmp
test
xchg
push
je
lret
push
aam
jae
mov
repz
inc
adc
sti
cltd
fwait
adc
pusha
ret
add
xor
add
in
fwait
aaa
adc
mov
call
jmp
xchg
inc
sub
mov
pushf
arpl
imul
sbbb
rorl
mov
popf
je
leave
cmp
and
cltd
cs
inc
adc
jmp
cmp
cld
add
test
in
dec
fisubrl
out
arpl
mov
pushf
inc
enter
lcall
test
mov
or
lahf
aaa
pop
lahf
cmp
mov
and
or
pop
movsb
sbb
pop
mov
cmpl
dec
adc
push
sbb
xor
enter
and
mov
lods
mov
pop
pusha
scas
mov
jne
xor
cmc
mov
push
ds
dec
adc
sti
gs
arpl
and
jno
sub
fwait
inc
data16
sub
jno
js
in
lods
sub
fstps
mov
arpl
scas
sub
mov
out
push
xorl
mov
mov
jae
cmc
or
cmp
dec
push
sub
roll
pop
pop
lods
inc
or
mov
lods
mov
icebp
sbb
ljmp
inc
js,pt
std
scas
and
xor
enter
mov
xor
imul
sti
fcmovnb
mov
imul
inc
lock
pushf
xchg
mov
insl
fadds
sub
sarb
pop
sarl
call
hlt
xchg
push
test
push
cld
jl
sub
sub
mov
sub
push
ret
sbb
push
pop
mov
xor
adc
xor
jle
outsl
xchg
and
les
lods
add
test
and
les
pop
mov
adc
test
lret
aaa
sub
test
cli
pop
adc
pop
stc
test
lcall
jecxz
repz
pop
aam
ljmp
sub
mov
push
aaa
mov
int3
mov
leave
jae
insl
in
cmp
daa
xor
pusha
pop
jmp
pop
jge
gs
and
lods
popf
or
leave
mov
arpl
mov
ds
aad
xchg
push
rolb
push
icebp
scas
daa
cmp
test
and
sbb
into
fstpt
mov
inc
fld1
aam
into
add
push
inc
push
pushf
xchg
jns
in
sahf
inc
mov
movsl
sub
test
outsl
rcr
jg
andb
test
jle
cs
outsb
cltd
inc
push
stos
and
mov
testb
or
and
pop
mov
orl
inc
dec
add
cmp
fsubrs
mov
cmpsl
sarl
pop
and
int3
popa
fsubrl
cmpsl
scas
jns
lahf
fstpt
pop
shll
sbb
std
lcall
pusha
mov
je
jge
or
add
test
pop
cmp
shrl
jns
jle
cmp
mov
xchg
fwait
cmp
mov
inc
sub
mov
push
mov
jbe
fnstsw
out
shll
pusha
fildl
inc
or
jecxz
bswap
xchg
shrl
enter
nop
inc
jge
xchg
inc
jle
ds
jb
fdivrl
imul
mov
subb
and
jp
or
push
popa
and
mov
xor
mov
imulb
pop
or
add
xchg
fcomps
push
shlb
fdivrs
aas
xchg
sbb
xchg
sub
mov
cmpsl
cs
mov
mov
pop
leave
mov
lods
sbb
xlat
ret
mov
lret
std
lcall
int
jae
add
mov
call
adc
sub
and
cld
outsl
ss
fistpll
pusha
fisttpl
ljmp
shll
pop
push
lds
jl
test
imul
mov
push
inc
and
enter
int
push
popf
cmp
and
or
int3
inc
std
push
or
roll
jle
int3
arpl
arpl
scas
xchg
stc
ljmp
cmp
movsb
jbe
mov
insl
dec
sbb
js
lahf
mov
dec
jp
mov
idivl
stos
sub
imul
div
sub
mov
test
cs
test
xchg
fildl
mov
mov
sbb
push
test
scas
ss
or
outsb
hlt
xor
lret
sub
xchg
jbe
leave
xchg
adc
fnsave
cmpsl
xor
adc
mov
aad
jo
icebp
xor
sbb
cmc
dec
xchg
and
mov
xor
fistpll
clc
add
orb
inc
push
dec
push
in
imul
movsb
push
push
sbb
loop
inc
fstpt
or
sbb
aad
adc
pop
cld
pop
dec
mov
mov
nop
stos
stos
test
mov
lahf
mov
call
scas
das
dec
test
inc
xor
arpl
pushf
xor
in
iret
xchg
ss
or
outsb
sub
mov
fsincos
cmp
loope
mov
stos
das
rcrl
adc
or
and
pop
nop
cmp
dec
out
jno
dec
dec
adc
fsubrs
xorb
jg
test
jnp
ret
stc
decb
sbb
jb
hlt
inc
out
xor
jp
jmp
hlt
sub
movsb
into
lds
test
into
mov
mov
and
xchg
pushf
jo
dec
leave
cld
pop
nop
xchg
out
imul
adc
in
jno
loope
fisubrl
call
sub
dec
pop
fdivrs
pop
stc
jl
loope
bound
lods
sbb
push
in
mov
iret
jne
cs
imul
cmp
push
mov
mov
adc
and
stos
movsb
aaa
repz
mov
sbb
add
add
pop
sub
aad
dec
adc
mov
xchg
inc
dec
mov
xor
insl
in
pushf
mov
lds
pop
push
or
pop
xorb
test
mov
xchg
xlat
rolb
pop
js
loopne
or
jae
sahf
inc
inc
bound
xchg
push
aaa
ljmp
call
cld
xor
jmp
into
xchg
imul
fs
mov
adc
adc
sarl
mov
les
add
loope
lret
imull
pop
dec
cmpsb
ss
dec
mov
lods
mov
imul
mov
mov
sahf
xsha256
jns
cmpsl
stos
icebp
test
mov
and
xor
inc
or
lods
daa
stos
roll
inc
pop
or
xor
xor
pop
outsl
inc
push
incl
dec
or
repnz
cli
inc
dec
fistpll
sahf
out
ficomps
nop
add
xor
rcrl
lds
lret
and
xor
jb
inc
adc
cmpsl
insl
xchg
dec
adc
orl
or
out
sbbl
lcall
and
test
sbb
sub
cmp
mov
adc
mov
test
fiaddl
shrl
cwtl
inc
jnp
pop
add
outsb
sahf
aas
hlt
stc
push
iret
insl
jecxz
shlb
jl
inc
lods
and
iret
popl
jg
jae
pop
adcl
add
jle
int3
or
push
roll
dec
mov
mov
movsb
pop
decb
cmp
imul
push
shlb
andb
inc
fisubs
xchg
cmp
jbe
mov
cmpsb
imul
adc
ud2
dec
adc
gs
ja
jae
cs
jae
xor
xor
movsb
aas
mov
mov
inc
pop
adc
dec
adc
dec
test
pop
sahf
loop
and
jmp
fistpll
pop
sti
cltd
lret
out
push
ret
cmp
lret
fidivrl
ret
shl
test
orl
cli
add
adcb
stc
pop
rcl
and
lret
loopne
push
lods
sub
out
pop
sbb
inc
scas
cmp
leave
inc
rol
ja
scas
push
cmpsl
sub
loope
jmp
jmp
scas
xor
cli
into
xchg
sbbl
pop
xchg
inc
or
lods
das
sti
jge
out
out
lods
xor
roll
or
pop
xor
jo
jmp
arpl
bound
sbb
scas
outsl
lea
push
cmp
add
or
sub
loop
stos
lahf
inc
pop
jne
js
inc
mov
or
mov
lea
cld
jo
sbb
mov
shlb
and
lods
xor
fidivrs
jmp
push
cld
xor
bswap
jge
push
int
imul
test
push
scas
fnsave
mov
add
pop
mov
stos
js
xor
sbb
insb
pop
inc
inc
adc
subb
or
xchg
aas
je
and
mov
pop
sarl
mov
aaa
into
frstor
repz
xor
into
sbb
addr16
inc
push
lea
xchg
mov
jp
jb
pushf
insl
jae
xor
jo
mulb
dec
mov
or
sub
push
cmp
cmc
add
mov
cmpsb
leave
mov
lods
insb
out
sub
xchg
push
ret
ficoms
aaa
mov
push
stos
mov
sbb
enter
mov
mov
xchg
push
rcrb
test
and
test
aaa
add
enter
cli
lret
cmp
mov
cmc
movsl
cli
pop
shr
es
or
jle
scas
push
ja
lds
add
dec
ret
pop
xchg
aas
cmp
mov
and
jb
scas
add
test
ret
add
lods
xchg
adc
out
das
leave
or
xchg
stos
sbb
mov
popa
xor
pop
int3
cli
adc
jnp
jmp
add
fwait
in
jae
leave
in
jne
fcoml
cmp
inc
or
shr
jne
sti
scas
xor
fidivs
ret
xor
inc
pop
incb
adcb
push
ljmp
repz
lcall
or
xchg
stos
xor
sub
negl
jecxz
sub
jo
mov
stos
push
mov
dec
add
rorb
sub
cmpsb
ss
add
mov
inc
aaa
sbb
mov
lret
xchg
call
add
in
out
xchg
pop
pop
daa
sbb
sbb
push
or
inc
xchg
inc
jge
jae
shrl
pop
push
or
test
mov
das
xor
sub
movsl
pop
push
fistpl
insb
stc
popf
sarl
fsubl
mov
shlb
mov
repz
jnp
jno
popa
jmp
sub
dec
aad
pop
add
add
cs
rolb
dec
mov
sbb
xchg
cwtl
cmp
pop
ret
pop
jl
pop
sub
dec
pop
cmp
popf
xor
sub
mov
ss
adc
fwait
aas
mov
lods
mov
push
test
test
scas
mov
adc
aaa
dec
cmp
int
xor
pop
lock
cmp
xlat
jmp
ret
xchg
loopne
cmp
ljmp
sub
jnp
mov
push
sbb
or
cmp
scas
sub
sbb
add
ret
pop
fdivl
in
loopne
push
mov
cmp
push
out
jne
cmp
fbld
mov
pop
movsl
jmp
mov
stos
xlat
faddl
nop
or
testl
pop
pop
add
dec
adc
push
jnp
adc
add
outsb
hlt
arpl
data16
bound
cs
aad
and
xchg
push
stc
pop
roll
dec
mov
mov
fcomi
pop
push
mov
in
lret
and
and
xchg
inc
inc
xchg
ds
xchg
xor
inc
push
sti
push
cmpsb
mov
sbb
cmp
xor
das
jns
inc
push
mov
pop
cwtl
inc
and
imul
nop
cmp
and
inc
inc
or
loopne
sbb
pcmpgtw
imul
in
pop
lret
jmp
adc
sub
xchg
cmp
sub
fwait
jns
pop
add
jno
xlat
adc
adc
xchg
test
jb
dec
scas
sub
ljmp
push
in
outsb
push
pop
insb
out
stos
dec
or
lds
jne
push
hlt
pusha
jp
mov
sbb
mov
scas
mov
fucomi
mov
ss
notl
loop
test
outsb
and
mov
jl
arpl
jnp
dec
in
cs
cld
and
push
cmp
test
stos
xor
cmpsl
cmp
mov
iret
shlb
call
iret
xchg
xchg
icebp
lods
xor
mov
pop
add
test
shrl
sub
xchg
pop
inc
popf
inc
movb
cmp
push
shr
and
xchg
int3
and
inc
push
idiv
enter
out
jmp
mov
cmp
jg
push
pop
out
cmp
pop
jle
data16
dec
sub
mov
enter
jne
and
mov
rorb
inc
sbb
xchg
mov
enter
jnp
lods
xor
lahf
cmp
repz
push
xor
mov
mov
dec
jle
loopne
fidivrs
clc
rorl
cs
pusha
or
mov
and
fsubl
jle
sti
mov
orb
pop
add
cs
mov
mov
dec
adc
dec
jb
pusha
in
sarl
js
push
cmp
add
loopne
ret
mov
stc
sarb
pop
lea
into
jb
mov
mov
fldl
and
ret
mov
nop
sbb
jb
addb
nop
xchg
cltd
outsb
in
sbb
test
inc
pop
mov
lods
in
ret
mov
lahf
pusha
mov
dec
dec
jns
dec
add
insb
jmp
mov
xchg
fcmove
mov
es
stc
ret
roll
inc
test
arpl
mov
mov
sbb
sarb
inc
adc
and
xchg
sub
cmp
cwtl
insb
dec
mov
orb
inc
jae
and
shrb
pop
add
repz
cltd
inc
into
into
inc
or
aaa
cltd
jne
enter
jnp
push
aas
insl
icebp
mov
stos
mov
push
sub
mov
sahf
leave
jne
fwait
enter
ret
xchg
inc
inc
jg
xchg
sahf
pop
mov
push
pop
cmp
pop
mov
inc
filds
in
push
mov
dec
or
lods
and
sti
aas
stos
inc
outsl
int3
aaa
into
std
nop
pushf
inc
mov
mov
outsb
push
sbb
push
mov
sub
sarb
mov
xchg
adc
sub
dec
adc
scas
cmc
fs
out
xor
mov
jmp
cmp
jo
rclb
ret
mov
mov
je
divb
test
cmpsb
sub
loope
or
jae
mov
mov
xchg
popa
jmp
mov
add
andb
dec
jno
repz
out
arpl
mov
or
cmp
das
jg
loopne
nop
cmp
jmp
xchg
imul
add
dec
adc
sub
imulb
addr16
daa
xor
sub
testb
popa
cmpl
aad
outsl
lock
add
cli
dec
cld
stos
xor
pushf
inc
pop
stos
adc
mov
mov
mov
shlb
jle
ja
insl
or
push
gs
rcll
in
fisttps
shr
imul
lahf
sbb
adc
ss
inc
adc
pop
cmp
mov
aas
cwtl
dec
addr16
test
or
lahf
cmp
lods
xor
sub
out
jbe
lods
add
add
push
pop
push
arpl
lods
inc
push
xor
aas
mov
mov
lods
outsb
icebp
jmp
jg
sbb
and
cwtl
jmp
cli
fs
jnp
popa
jne
faddl
inc
in
xchg
inc
or
aam
or
pop
xor
popa
push
fnstcw
enter
into
mov
insl
inc
adc
loop
imul
es
pop
cmp
rorb
sub
add
test
push
ljmp
jno
arpl
sahf
inc
aas
jb
mov
sub
andb
inc
fcoms
ret
jl
repz
fwait
ds
jmp
stos
sub
icebp
out
and
inc
movsb
sub
pop
lock
fimuls
pop
leave
rolb
sti
push
xlat
ja
out
push
cli
cwtl
faddl
pop
xchg
xchg
inc
addl
sahf
sub
call
dec
or
loop
cmc
loop
xchg
inc
xchg
xor
stos
mov
daa
scas
cwtl
cwtl
xor
leave
enter
mov
mov
lods
jp
push
out
jns
faddl
xor
mov
mov
rep
mov
sub
dec
xchg
or
popf
pop
pop
pop
mov
repz
xchg
call
in
outsl
arpl
scas
cwtl
jb
pop
iret
adc
push
repz
movsb
cld
in
or
in
lock
iret
xor
sbb
sbb
pop
dec
dec
pop
mov
pop
mov
mov
dec
push
cmp
pop
cld
dec
add
stos
xchg
and
iret
push
sub
dec
ja
leave
and
cmp
je
lret
insb
add
sarl
sub
mov
in
andb
and
fidivl
test
mov
in
mov
mov
icebp
add
and
sub
pop
cld
fdivl
mov
pop
fidivrs
adc
mov
test
dec
or
push
add
mov
sub
xor
sub
sub
ret
pop
je
cli
xchg
notl
push
mov
xor
mov
pop
add
cmpsl
xchg
loop,pt
mov
xchg
mull
and
mov
stos
xor
xchg
sahf
lcall
sub
push
pop
imul
pop
fstl
lock
movsb
cld
scas
cmp
int
push
mov
aas
and
xchg
popa
imul
ret
imul
mov
mov
incl
inc
or
rorl
push
mov
ret
and
sub
mov
inc
in
jb
dec
das
scas
cmp
es
or
add
xchg
sbb
fs
ret
inc
xchg
inc
fstpl
xchg
dec
add
daa
mov
call
adc
fiaddl
pop
pop
cld
dec
pop
jb
xor
cmp
ljmp
jb
dec
push
lret
xor
pop
cld
repz
cmpl
inc
jle
test
iret
fs
out
inc
data16
faddl
lcall
lods
jmp
pushl
mov
pop
les
mov
pop
cld
inc
mov
adc
popf
or
dec
out
mov
xchg
leave
mov
lds
inc
mov
cmpsl
enter
sub
push
clc
push
xor
and
icebp
cmp
dec
or
lds
lahf
ficompl
jae
add
scas
mov
push
in
jg
push
add
mov
inc
add
sbb
cmpsl
xor
inc
out
das
clc
adc
insl
xor
dec
fidivs
iret
mov
pop
sbb
add
je
pop
pop
ret
or
dec
push
cmp
ds
fs
xor
lret
mov
inc
shrl
sbb
stc
pop
sbb
divl
dec
mov
adc
lret
rolb
or
jb
mov
mov
and
aam
xor
push
or
mov
lcall
fucomip
leave
fwait
inc
pop
std
dec
adc
mov
lea
and
xor
daa
xchg
aaa
push
jg
fwait
xchg
test
xchg
inc
or
rorl
mov
lahf
cmp
fidivs
pop
in
js
cltd
in
pop
je
enter
jae
sahf
xchg
out
imul
jb
leave
out
ret
int
or
aas
push
adc
jge
pop
pop
xchg
pushf
out
cld
int3
cmp
jecxz
mov
add
lret
dec
pop
xor
cld
mov
jecxz
loop
mov
test
jg
loopne
aas
adc
pop
xor
imul
xor
test
jle
clc
std
bnd
cmp
mov
adc
idivl
inc
or
jle
dec
xchg
lods
xor
stc
pop
mov
lods
into
xchg
pusha
addr16
sbb
cs
pop
or
les
cmp
sub
sarl
inc
cmpsl
sub
imul
push
call
inc
or
jae
outsb
pop
orb
mov
cmp
lret
and
ret
leave
sbb
push
cli
push
push
mov
lods
arpl
mov
jne
in
bnd
or
jle
aam
adc
test
pop
add
adc
inc
orb
test
jge
test
lcall
fucomip
insb
mov
imul
test
pusha
dec
push
push
stos
insl
in
lods
push
dec
or
mov
sbb
addr16
sti
jo
sbb
jecxz
lods
cmc
adc
xor
push
xor
das
stos
mov
cwtl
cmp
fnstsw
lcall
sbb
mov
mov
add
jp
notb
pop
xchg
jecxz
push
mov
test
insl
jmp
in
mov
and
dec
out
and
and
cmpsl
xor
js
xor
in
jbe
add
das
leave
hlt
pop
lea
xor
fst
ja
xor
pop
add
jb
and
imul
inc
push
sti
cmp
das
sub
xchg
adc
aam
sbb
es
cmc
or
pop
adc
inc
jecxz
pop
fmul
xchg
testb
pushf
cltd
lock
ss
hlt
inc
ficoml
dec
inc
pop
stos
pop
imul
mov
fiaddl
test
test
xor
jnp
and
inc
push
mov
cmpsb
dec
or
sbb
inc
lret
js
enter
shr
insl
call
xchg
clc
sbb
test
stos
cs
pop
lahf
cmp
mov
int
mov
adc
test
fsubrp
je
xchg
dec
adc
mov
mov
std
xlat
jnp
mov
jp
and
inc
or
mov
stos
or
sbb
sbb
sarl
dec
or
fs
cmp
jae
outsb
mov
jne
mov
leave
xchg
andb
mov
scas
xor
leave
xchg
ret
pushf
imul
loopne
dec
adc
clc
dec
pop
into
mov
sbb
xchg
ret
out
fstpt
sbb
jo
inc
faddl
xchg
jle
pop
pusha
xsha256
cmpsb
xchg
nop
pusha
test
adc
jge
jno
fldt
jp
xor
ds
xchg
fiaddl
divb
mov
movsb
icebp
cmp
jns
add
pop
pop
add
in
jae
inc
dec
jnp
ja
pop
std
test
fdivs
test
xor
and
mov
out
sub
and
push
add
cmpsb
sbbl
int3
imul
ds
add
sbb
sti
dec
or
lods
cmp
jp
and
lea
xchg
inc
dec
cmp
xor
rolb
rcl
xor
jae
or
and
push
add
cmpb
mov
xchg
outsb
or
lods
sub
addr16
jo
pop
jle
inc
fadds
and
push
sbb
xchg
mov
shlb
mov
mov
mov
mov
sbb
aaa
repz
dec
sbb
cmp
test
repnz
aaa
int
xchg
inc
inc
adc
test
iret
add
cwtl
das
rcrb
iret
ret
jg
pop
inc
adc
es
test
sub
sub
dec
loope
push
xchg
cmp
test
lea
orl
dec
in
cmpl
fimull
fisttpll
das
xor
push
aas
pop
add
nop
cmp
jno
push
stos
stos
sub
mov
aas
repz
and
jmp
mov
xchg
icebp
mov
lock
clc
xor
mov
test
filds
inc
adc
or
push
mov
cmpb
aam
lret
push
pop
sbb
inc
xchg
add
push
xchg
cmp
mov
leave
push
xchg
pop
add
xchg
into
pop
push
call
lret
jno
xor
cwtl
inc
jmp
xor
loope
pop
add
cmpsb
daa
stos
push
jmp
pop
adc
mov
jb
mov
jbe
icebp
sbb
xorb
fidivs
cmpsb
jmp
stos
mov
mov
nop
call
add
push
out
lock
ds
imul
push
insb
notb
rorl
and
dec
jl
data16
cltd
mov
test
jle
lods
xlat
outsb
inc
or
push
xor
adc
inc
mov
mov
stos
fs
lods
ja
jbe
rol
push
repz
movsb
mov
xor
jmp
or
cmp
cmp
jbe
outsb
add
enter
loop
je
sbb
inc
ss
sub
leave
pusha
mov
out
fsub
into
gs
add
subl
mov
mov
fldt
mov
es
fstpl
jge
jns
fs
mov
fwait
xor
rolb
push
and
mov
outsb
jae
mov
mov
int3
fdivl
out
stos
sbb
sti
xchg
push
cmp
enter
mov
mov
mov
prefetcht1
dec
xor
or
xchg
sub
pop
or
mov
inc
sub
jl
fs
xchg
jl
lcall
and
cmp
inc
xlat
push
pop
sub
lea
cmc
mov
les
add
xor
fwait
xor
test
push
push
pushf
movsl
mov
outsb
out
clc
rcrl
testb
fs
xchg
sahf
std
xchg
shlb
sbb
cmp
shlb
push
lea
lea
out
or
add
insb
push
lret
lea
jg
loopne
data16
push
popf
sub
dec
and
jg
or
rcr
sub
or
pusha
mull
inc
ficomps
jle
ja
gs
scas
cwtl
pushf
xor
rolb
push
push
and
cmp
fsubrs
ja
push
test
lret
cld
in
stos
push
push
cld
xchg
push
aaa
xor
push
mov
mov
fldt
or
mov
pusha
push
stos
inc
mov
xchg
sub
aam
pop
push
lss
daa
out
pop
shlb
jp
fwait
stos
mov
test
int3
and
cmp
inc
fmuls
sub
mov
mulb
ret
hlt
addr16
das
push
pushf
xor
test
imul
outsl
out
test
sub
testl
xchg
pushf
std
xchg
into
mov
lret
sbb
cmp
shlb
jo
mov
mov
pop
add
sub
lret
bound
cmpsl
jmp
data16
pop
sahf
sub
in
test
mov
mov
inc
fcmovbe
xlat
sub
or
popa
clc
and
inc
ficomps
jg
jbe
gs
lods
xchg
popf
xor
into
sbbl
jmp
push
sbb
fnstenv
jne
push
cmpsl
xchg
testl
adc
ss
outsl
sbb
mov
fisubrl
or
push
out
inc
sub
jne
cwtl
subb
jmp
leave
pusha
add
es
pop
pusha
shlb
jns
pushf
stos
mov
test
lret
and
aaa
sbb
sub
mov
mull
sarl
cld
addr16
sub
dec
test
push
mov
jo
hlt
rcrl
clc
popl
fbstp
bound
lods
xchg
lcall
in
sbb
cmp
cmp
jo
jno
mov
es
jne
adc
ss
sub
int3
arpl
cmpsb
ljmp
cli
or
bound
jge
or
iret
aad
rolb
stc
and
inc
ficomps
adcb
jp
cld
stos
xchg
sahf
xor
jmp
mov
jno
jae
push
movsl
clc
pop
fidivs
loop
lods
adc
std
xchg
dec
xor
lret
gs
sbb
mov
cmp
lock
or
pop
out
inc
sub
or
mov
xchg
sub
ror
popa
add
mov
cmp
pop
shrl
ja
popf
test
out
xchg
leave
and
cli
add
movsl
xor
push
sub
xchg
clc
sahf
test
loope
mov
push
xor
jle
mov
cmp
mov
ret
or
loopne
ja
pop
scas
xchg
cwtl
xchg
lret
int3
jecxz
sbb
sbb
push
jmp
cmp
jb
mov
nop
daa
fsub
jbe
adc
scas
inc
xor
int3
arpl
movsb
ljmp
clc
or
popa
dec
es
mov
inc
fcmovne
aam
roll
dec
fistps
adcb
jns
std
stos
xchg
sahf
xor
std
out
push
sbb
mov
jno
jb
pop
movsb
clc
mov
loopne
lods
adc
xchg
dec
xor
arpl
popf
test
mov
cmp
out
jo
or
pop
lock
sub
push
xchg
jl
inc
scas
mov
sub
iret
lret
or
push
pop
shrb
jne
popf
cmpsb
mov
xchg
and
clc
add
cmpsb
xor
inc
fimull
sub
clc
pushf
cmpsl
dec
loop
mov
imul
inc
dec
xchg
jle
mov
cmp
mov
jno
bnd
pop
and
stc
nop
cmp
pop
pop
scas
cwtl
call
loope
sbb
jmp
cmp
jb
xchg
nop
daa
ja
adc
scas
inc
cs
int3
arpl
mov
shrl
testb
daa
das
out
xchg
es
mov
inc
fcmovne
aam
ret
stc
push
daa
dec
loopne
aas
adcb
jns
stos
xchg
sahf
xor
std
in
push
pop
pop
movsb
cmp
fidivl
jb
pop
movsb
mov
mov
ficoms
lods
nop
xchg
dec
xor
popa
insb
sbb
jmp
out
aam
pop
push
adc
inc
daa
mov
xchg
jp
inc
lods
mov
sub
decl
mov
cmp
jmp
push
jae
sahf
movsb
scas
icebp
mov
lds
cmpsl
xor
inc
fisttpl
lds
cmpsb
dec
jecxz
mov
push
sub
lahf
ss
dec
mov
jge
mov
cmp
out
les
or
xchg
cmp
jbe
sbb
enter
fucomip
push
mov
add
xor
cmp
insb
push
jae
test
xchg
sub
fistpll
adc
scas
inc
sub
xchg
sub
jg
mov
mov
imul
sub
daa
mov
mov
inc
fmul
shrb
add
arpl
sbb
dec
loope
cmp
push
ss
sbb
adc
jo
pop
mov
ret
loope
cmc
fcoml
scas
or
cs
mov
adcb
mov
jno
add
pop
repnz
and
jns
xchg
js
inc
stos
mov
cs
lret
std
push
mov
cmp
ljmp
jno
lahf
mov
ret
es
xor
inc
faddl
lds
mov
sbbl
daa
push
mov
pop
jp
mov
cmp
out
les
or
xchg
cmp
jns
pop
sbb
lds
push
mov
add
xor
cmp
imul
icebp
mov
fdivrl
push
stc
mov
sub
xchg
sub
jle
mov
mov
in
adc
shrb
repz
pop
inc
sub
scas
xchg
inc
iret
sub
add
fs
sbb
dec
loope
cmp
sbb
push
aaa
rol
sbb
adc
movsl
cmp
xor
ret
pop
lahf
mov
xchg
mov
fistpl
scas
or
add
pop
pushw
mov
jg
jmp
mov
jb
add
pop
repnz
nop
daa
push
pop
jns
ja
inc
test
lret
cld
add
orb
imul
repnz
ret
repz
adc
inc
dec
lds
fs
cwtl
mov
sbbb
repnz
and
mov
pop
ja
mov
cmp
in
les
pop
cld
xchg
cmp
loop
jo
sbb
ret
iret
fucom
push
mov
call
xor
cmp
addr16
je
orl
sub
fidivrl
or
mov
sub
xchg
sub
jge
mov
mov
in
adc
shrb
repnz
pop
inc
sub
lods
xchg
inc
ffree
int
ret
call
dec
loop
cmp
add
xchg
mul
mov
cmp
gs
les
xchg
xchg
mov
fstps
scas
or
add
pop
gs
mov
jge
jmp
mov
aam
iret
jb
add
pop
repz
nop
daa
push
pop
jp
mov
inc
cmpsl
scas
cwtl
das
loope
int3
arpl
add
orb
insb
xchg
mov
fcmovb
daa
mov
sub
inc
fldl
jle
fs
xchg
lahf
dec
in
mov
sbb
icebp
imul
or
and
mov
ds
mov
je
ljmp
aaa
cmp
sbb
shrl
mov
std
push
in
cs
je
addl
jns
or
mov
sub
into
gs
mov
mov
in
or
shrl
lock
pop
inc
sub
stos
xchg
inc
ffree
int3
sub
sti
pop
pop
dec
jecxz
cmp
add
les
push
adc
cmpsl
ds
xor
jae
imul
popf
test
xchg
mov
jecxz
lock
sbb
inc
sub
int
and
lods
mov
aad
int
or
or
cmp
xchg
sub
jnp
mov
inc
movsl
lods
cltd
xor
int
clc
add
orl
insl
test
popf
cmpsb
hlt
mov
mov
adc
inc
dec
xor
jl
gs
xchg
popf
dec
in
mov
sbb
out
insb
add
or
and
push
mov
fidivs
call
std
xchg
xor
push
sbb
mov
loopne
mov
sti
push
out
sub
ds
dec
jne
jg
pop
repz
xchg
sub
xlat
jp
or
mov
sub
data16
mov
mov
in
test
rcl
imul
or
push
inc
sub
jno
adc
ret
lret
sti
in
cld
adc
sbbl
outsl
imul
mov
and
fdivrl
aas
dec
das
fnsave
pop
fwait
cmp
mov
in
out
aad
mov
adc
lcall
and
stos
mov
in
jae
std
push
pop
cmc
aaa
push
xchg
sub
jl
mov
inc
mov
into
gs
mov
test
insl
subl
pushf
movsb
hlt
mov
mov
adc
inc
dec
xor
jp
data16
xchg
fwait
dec
in
mov
sbb
in
insb
add
or
and
rcrl
test
lds
pop
sbb
xchg
xor
in
imul
xchg
rcr
fisubs
mov
cli
pop
out
sub
ds
dec
jbe
jle
pop
repz
xchg
sub
aad
adc
repz
and
inc
shlb
jl
dec
scas
cltd
out
test
iret
aam
add
or
push
and
mov
sub
jo
adc
ret
vpavgw
adc
dec
in
xor
imul
mov
and
fcmovnb
push
or
fidivs
addr16
pop
cltd
cmp
jnp
aam
mov
push
add
push
pusha
and
test
lret
cld
add
cmc
xor
push
jl
mov
dec
mov
ret
iret
data16
cld
mov
test
insl
subl
mov
mov
adc
inc
inc
xor
js
addr16
xchg
cltd
dec
in
mov
sbb
jmp
add
mov
jo
ret
xchg
test
ret
lods
loopne
pop
push
add
xchg
xor
in
imul
mov
fsubl
mov
stc
pop
lock
ds
dec
ja
jge
pop
repz
xchg
sub
sarl
add
daa
cwtl
das
pop
inc
shrl
jp
dec
lods
cwtl
out
xchg
int
imul
or
mov
sub
outsb
je
test
das
mul
addr16
adc
dec
in
xor
add
mov
rcrl
test
jbe
gs
pop
xchg
jg
xchg
mov
in
ljmp
fwait
cmp
pop
and
cmpsl
mov
xlat
loope
jne
cli
add
xor
xchg
sub
jge
xchg
dec
mov
rcl
repz
mov
xchg
xlat
outsb
jg
or
mov
mov
adc
ds
xor
jbe
push
out
mov
sbb
sbb
mov
outsb
pop
ret
pop
mov
loope
fucom
pop
adc
call
push
mov
lcall
and
sub
aas
pop
dec
ja
jnp
pop
hlt
mov
xchg
sub
sarb
add
mov
and
cltd
xor
shrl
jns
dec
stos
xchg
out
xchg
int3
aad
jmp
hlt
mov
sub
insb
jae
test
mov
fbld
adc
dec
out
xor
add
test
and
xlat
rcrl
stos
inc
inc
sub
jbe
fs
std
xchg
scas
mov
jge
rcrb
mov
or
rclb
and
movsl
scas
inc
fsub
jne
clc
add
xor
xchg
sub
jle
test
sahf
cmpsb
pushf
xor
mov
mov
xchg
fsubrs
or
lahf
testb
repnz
and
dec
loope
inc
xor
jne
push
out
scas
xchg
sbb
movsl
cmp
cmp
mov
loope
fndisi(8087
enter
call
addr16
sbb
fwait
mov
fisubl
mov
es
ja
jns
pop
cmc
mov
xchg
sub
sarl
out
mov
and
shrl
js
dec
stos
xchg
out
xchg
lret
insl
std
out
movsb
sbb
cmc
mov
sub
push
adc
mov
frstor
push
pop
push
out
das
test
imul
mov
mov
out
aad
pop
pop
adc
jbe
arpl
pusha
xchg
jnp
xchg
lods
mov
jle
into
sbb
cmp
cmp
push
pop
and
mov
out
mov
les
idiv
pusha
divl
sbb
adc
popf
movsb
pushf
xor
mov
mov
xchg
outsl
jl
push
movsl
xchg
popf
testb
lock
and
dec
loop
inc
xor
jae
imul
lds
outsb
add
xor
push
les
mov
jns
pop
adc
add
gs
push
mov
xchg
mov
cmp
rcr
and
and
inc
js
js
pop
cmc
scas
cltd
xchg
sub
add
mov
pop
and
imul
lock
leave
insl
sti
out
movsl
pop
sbb
sub
imul
loope
ret
repz
or
xchg
cltd
andl
push
push
stos
inc
inc
daa
loopne
pop
popa
leave
pusha
xchg
jp
xchg
lods
mov
jle
int
mov
pop
push
popf
cmp
cmp
push
pop
and
mov
lock
ret
ja
cmc
std
pusha
imull
pop
xchg
sub
subl
xor
mov
mov
mov
fsubrs
fs
cmpsb
xchg
fwait
testb
out
adc
pop
or
inc
xor
jno
push
lea
mov
loopne
outsb
add
xor
mov
imul
inc
mov
pop
paddb
cwtl
sub
dec
pop
mov
test
mov
cmp
mov
and
inc
xlat
pop
inc
jns
ja
pop
cmc
lods
cwtl
xchg
cs
adc
jmp
dec
sbb
shrl
je
push
cmpsb
xchg
icebp
mov
xlat
outsb
stc
in
cmpsb
adc
ss
stos
lahf
mov
mov
fisubrl
or
push
call
pop
outsl
push
xchg
andb
ljmp
inc
ds
pop
pop
lret
jns
xchg
stos
mov
jg
int3
sbb
sahf
ss
cmp
dec
push
and
icebp
mov
ret
hlt
sti
popa
clc
sub
xchg
cs
dec
jg
jg
mov
fwait
mov
shrl
repz
mov
fnstenv
arpl
cmpsl
xchg
cltd
testl
sbb
ds
outsl
pop
imul
nop
push
call
outsl
push
adc
test
xor
pop
xchg
in
leave
pusha
or
das
out
popa
dec
and
mov
ds
aam
mov
and
inc
fcomps
jp
jbe
pop
imulb
lret
jge
std
ljmp
push
cmp
mov
mov
mul
adc
dec
xor
adc
jecxz
mov
push
or
push
jmp
pop
arpl
xchg
jg
cmp
call
or
jns
pop
lret
bound
mov
and
push
mov
add
lahf
xor
cmp
mov
lahf
cmpsl
inc
fcmovnu
sarb
stc
stc
sub
das
inc
dec
adcb
addr16
cltd
sahf
sahf
xor
in
icebp
mov
mov
fidivl
popa
adc
leave
mov
in
push
lods
sbb
dec
xor
add
dec
std
ficoms
or
dec
dec
mov
mov
adc
inc
pop
aad
push
mov
movb
add
mov
js
push
add
xor
dec
test
push
jle,pn
clc
mov
mov
lods
testb
xor
hlt
daa
cltd
add
sub
mov
sub
push
mov
repz
push
xor
mov
jo
sbb
adc
test
mov
subb
shlb
ret
pop
into
dec
mov
test
xchg
or
enter
push
popf
mov
fwait
arpl
movups
cmpsb
jmp
insl
cmpl
adc
xor
xchg
stc
lds
xchg
repnz
insl
insb
cmp
jecxz
cmp
jnp
pushf
cmp
lret
cmp
mov
into
pop
pop
adc
inc
xchg
pop
pop
inc
add
mov
pop
jno
xor
ficoms
lahf
jns
mov
jne
cwtl
xchg
mov
stos
shll
mov
fstpl
sarb
add
inc
sub
adc
rol
push
xchg
dec
add
icebp
adc
adc
lods
mov
aad
lea
outsb
cmp
pop
pop
inc
int3
out
dec
jge
push
fildl
imul
inc
leave
push
cwtl
les
xor
mov
mov
ds
xor
mov
nop
je
inc
adc
adc
sahf
adc
fstpt
cmpsb
rclb
jno
jmp
adc
adc
push
add
push
cmp
popa
jae
dec
cltd
popa
adc
data16
xchg
into
pop
es
sbb
ljmp
mov
loop
mov
popa
dec
mov
in
cmc
rclb
mov
mov
push
dec
insb
mov
mov
das
test
add
add
add
xor
add
add
add
add
insl
fcomp
cmpsb
and
out
cmpsb
mov
lea
push
pop
mov
mov
fcoml
insl
mov
and
mov
fisttpll
xchg
stos
dec
or
mov
int3
rclb
ja
sub
xlat
sbb
lahf
cmp
or
inc
dec
or
into
sub
add
lds
jae
mov
mov
inc
decl
pop
inc
and
sbb
fidivrl
out
pop
cld
or
test
pop
or
outsl
dec
push
push
add
add
add
cmp
sub
mov
and
mov
rorl
push
mov
scas
pminsw
cwtl
dec
sub
outsb
cmp
mov
in
cmp
and
adc
and
dec
lods
push
mov
xchg
xchg
mov
sarl
push
sbb
in
rclb
out
cwtl
sbb
and
pop
out
pop
add
ljmp
cmp
jle
dec
push
xor
repz
das
and
rorl
or
xor
lea
pop
or
add
nop
inc
mov
pushf
xchg
mov
xchg
lods
sbb
hlt
fistl
clc
xchg
pop
shrl
and
and
jge
xor
enter
jno
add
jns
or
push
pop
mov
decb
pop
negb
adc
mov
lock
call
lds
pusha
clc
stos
movsb
popa
push
stos
push
push
popa
push
shr
push
xchg
pop
push
stc
jp
mov
add
stos
xchg
js
sbb
out
gs
xchg
add
das
push
test
sbb
pop
mov
das
int3
pop
pop
xor
adc
stc
int3
push
cmp
adc
scas
or
sbb
dec
lea
imul
mov
popf
inc
mov
adc
bound
adc
xchg
or
cmc
das
cmc
push
sbb
dec
push
lahf
cwtl
out
addr16
out
addr16
cs
cmp
pusha
cmp
shr
scas
repz
aas
out
outsl
mov
xchg
mov
fnsave
das
lds
inc
pop
hlt
or
mov
insb
cltd
nop
xor
sbb
icebp
xchg
pop
xor
fs
adc
cli
cmpsl
mov
imul
mov
pop
shll
unpcklps
xchg
shr
addr16
fnstsw
test
int3
lret
cwtl
mov
mov
aas
sub
or
je
mov
cld
insb
mov
imul
fwait
aaa
push
cmp
xorl
fs
fwait
mov
jns
fs
push
push
xchg
xor
sub
test
leave
in
rolb
jae
rcr
xchg
xor
mov
sbb
lret
dec
inc
shlb
jno
loop
lds
and
jmp
push
fisttps
ror
out
loop
popf
fs
xchg
xchg
mov
es
push
mov
adc
jnp
sbb
nop
jne
and
mov
insl
movsl
dec
fstpl
mov
sti
rcrb
loopne
test
mov
js
out
xchg
mov
mov
sbb
cwtl
loop
and
and
push
sti
clc
or
dec
insl
or
add
push
lret
xor
out
dec
rclb
inc
cmpsb
ret
out
aas
rcrl
ds
fnstcw
ljmp
sbb
cs
mov
adc
inc
in
xor
jae
or
shll
std
add
xchg
js,pt
or
push
scas
add
scas
repz
stos
aas
orl
scas
jle
in
outsl
inc
mov
mov
sbb
push
in
and
xchg
mov
pop
int3
push
clc
jae
incb
sub
xlat
incl
dec
jne
push
sub
mov
js
push
insl
fcompl
inc
add
push
mov
add
cmp
push
scas
rcrb
movsb
aas
fsubl
and
inc
mov
call
mov
jnp
push
jle
out
lods
inc
shll
leave
xor
adc
aaa
mov
jp
or
and
xchg
xchg
daa
jns
cmpsb
jae
xchg
mov
clc
fisttpll
clc
leave
jl
iret
or
ret
jo
lahf
rclb
das
pusha
pop
jmp
push
and
int3
fisubrs
xor
aad
clc
jae
sub
call
push
push
or
push
pop
mov
pop
test
pushf
hlt
or
fstp
in
sub
sub
inc
mov
nop
adc
xchg
test
mov
popa
add
dec
mov
decb
push
xor
fwait
xor
xor
xor
cltd
ret
inc
mov
xchg
jns
int3
add
add
ret
leave
cld
cli
sbb
jo
mov
and
mov
cmpsb
mov
rorb
cmp
loope
mov
es
jae
jbe
ret
dec
mov
xchg
das
mov
and
sub
sub
and
out
jecxz
fwait
jb
or
hlt
pop
push
notl
jmp
inc
bndldx
inc
aad
lock
insl
out
adc
adc
mov
lcall
je
stc
xor
dec
lret
inc
adc
add
roll
mov
xchg
cmp
aaa
lret
out
outsl
popf
sub
xchg
aad
js
in
xor
pop
je
rcll
jbe
mov
mov
add
mov
in
sbb
cmp
dec
and
xchg
out
mov
cmp
mov
test
movsl
push
jbe
add
cli
arpl
cltd
push
or
in
jbe
stos
mov
pop
stos
and
jbe
lret
cli
pslld
sti
ja
insb
lret
mov
jae
cmp
xor
xor
xor
lcall
adc
mov
in
adc
sub
lods
fisttpl
popa
push
lahf
scas
pusha
dec
mov
cmp
dec
push
pop
psrlq
xchg
adc
cltd
add
gs
std
mov
lock
fstps
inc
mov
push
cmp
enter
repz
aas
icebp
dec
mov
scas
ja
pop
into
lcall
into
cwtl
imul
into
xchg
imul
ss
popa
into
xchg
insl
xor
xchg
outsl
addr16
lcall
clc
sahf
in
xor
lea
mov
dec
aad
mov
cmp
or
test
lods
stos
test
stos
