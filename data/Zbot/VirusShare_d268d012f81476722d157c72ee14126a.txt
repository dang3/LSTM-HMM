push
mov
sub
mov
mov
xor
mov
mov
xor
mov
cmp
ja
cmp
jb
mov
movl
xor
mov
call
cmp
je
test
je
movl
call
mov
mov
mov
mov
mov
pop
ret
cmp
je
cmp
je
mov
mov
mov
mov
pop
ret
lea
cmp
jne
movl
xor
mov
call
cmp
je
test
je
movl
call
jmp
movl
mov
mov
call
test
je
call
mov
jmp
movl
mov
mov
mov
call
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
sub
lea
movl
call
sub
call
movl
mov
lea
mov
mov
mov
mov
mov
movl
call
mov
test
je
mov
mov
test
jne
cmp
je
mov
mov
mov
mov
mov
call
mov
cmp
je
mov
mov
mov
mov
mov
call
call
mov
mov
call
and
call
mov
mov
mov
mov
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
call
mov
jmp
lea
lea
push
mov
sub
movl
call
call
nop
lea
push
mov
sub
movl
call
call
nop
lea
push
mov
mov
pop
jmp
lea
push
mov
mov
pop
jmp
nop
nop
nop
nop
push
mov
sub
nop
nop
call
xchg
adc
push
push
push
xchg
adc
push
adc
jo
adc
je
push
xlat
mov
mov
adc
jo
mov
push
push
lea
mov
xor
pop
xor
adc
or
pop
push
and
sbb
mov
lods
dec
jge
fldl
xchg
jge
fstpl
pop
stos
pop
mov
je
push
push
push
push
push
xchg
push
push
inc
adc
call
test
leave
ret
push
mov
sub
nop
nop
call
xchg
adc
push
divl
fstl
adc
mov
xchg
push
jo
adc
je
push
xlat
mov
push
dec
adc
jo
inc
pop
push
push
divl
push
xchg
adc
push
push
push
push
xchg
adc
inc
add
push
xchg
push
jo
push
push
push
cmc
je
adc
xchg
push
push
push
push
push
xchg
push
adc
adc
adc
call
test
leave
ret
push
mov
sub
nop
nop
call
xchg
adc
mov
adc
jo
cwtl
dec
push
push
lea
mov
xor
pop
xor
adc
or
test
and
lods
fstl
movsb
filds
movsb
fldl
mov
sub
push
fists
mov
mov
filds
movsb
jge
fldl
test
pop
mov
add
test
mov
leave
ret
push
mov
mov
call
nop
nop
call
xchg
push
adc
adc
push
push
cmc
js
adc
mov
push
fstl
movsb
xchg
push
jo
je
push
mov
fstl
jo
xchg
adc
inc
je
push
int3
mov
jo
sbb
fists
mov
fists
movsb
fstl
jo
int3
mov
jo
push
dec
push
push
fists
movsb
fstl
mov
rcll
fstl
jo
xchg
push
jo
add
push
mov
call
test
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
xlat
lods
push
and
inc
xchg
push
jo
push
push
push
mov
xlat
mov
adc
adc
fists
inc
fstl
jo
fists
pop
fstl
jo
fists
pop
fstl
mov
xlat
mov
mov
add
test
movl
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
mov
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
mov
fmuls
xchg
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
push
dec
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
jae
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
out
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
inc
sub
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
dec
dec
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
sbb
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
inc
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
in
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
mov
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
mov
fmuls
xchg
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
push
inc
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
xchg
and
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
out
inc
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
and
add
mov
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
xlat
sub
and
push
push
push
push
push
add
js
fnstenv
jo
mov
adc
xor
adc
sub
movsb
filds
mov
aad
jmp
mov
test
pop
fists
pop
cmp
push
jge
fstpl
pop
stos
pop
mov
add
test
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
test
adc
add
push
adc
adc
xor
adc
adc
mov
adc
adc
adc
adc
test
push
je
adc
push
push
push
xchg
adc
fists
mov
adc
sbb
rcll
push
filds
mov
adc
adc
fists
pop
fstl
mov
rcll
flds
fists
mov
jecxz
push
fstps
push
push
push
push
filds
mov
adc
adc
mov
add
test
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
xchg
adc
xlat
sub
inc
fists
pop
aam
push
and
adc
pop
mov
add
test
mov
leave
ret
push
mov
sub
nop
nop
call
xchg
adc
fists
pop
fstl
mov
adc
adc
push
push
push
fists
lods
outsl
adc
pop
filds
lods
push
xchg
fists
pop
push
adc
fsts
lods
stos
push
mov
add
test
mov
leave
ret
push
mov
sub
nop
nop
call
fists
pop
fstl
mov
fstl
test
adc
adc
fists
pop
filds
lods
push
xchg
fists
pop
insb
push
and
adc
mov
lods
stos
push
mov
add
test
movl
mov
leave
ret
push
mov
sub
nop
nop
call
fists
pop
fstl
mov
adc
push
jo
xor
adc
and
adc
dec
fists
pop
fstl
jo
fists
test
push
jo
push
stos
stos
stos
call
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
xlat
sub
inc
filds
pop
fists
pop
fcoml
adc
inc
stos
pop
mov
add
test
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
xchg
push
jo
insb
adc
pop
push
push
xlat
mov
stos
stos
stos
xchg
adc
cmp
add
jo
xor
and
jo
insb
adc
pop
push
push
xlat
mov
push
shrb
fstl
mov
fst
sub
jo
iret
insb
adc
add
jo
jo
stos
stos
fst
sub
stos
stos
xchg
adc
cli
insb
adc
add
jo
pop
test
and
stos
stos
xchg
adc
jmp
adc
add
jo
mov
sarl
stos
stos
stos
xchg
adc
test
add
jo
test
cmp
stos
stos
xchg
adc
mov
adc
add
jo
loopne
stos
stos
fst
xor
jo
mov
roll
stos
stos
stos
fstl
mov
fst
xor
stos
stos
xchg
adc
stos
insb
adc
add
jo
sub
or
jo
pop
insl
adc
add
jo
xor
stos
stos
fst
or
stos
stos
fists
pop
fstl
mov
aad
sbb
pop
rcll
push
push
push
filds
mov
push
push
adc
push
pop
sarl
push
push
xchg
adc
adc
xchg
adc
push
push
push
push
fsts
push
jo
bound
jo
inc
push
push
push
xchg
adc
push
push
push
push
fsts
mov
push
jo
dec
stos
stos
stos
fsts
mov
adc
fsts
adc
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fists
pop
fstl
and
xlat
mov
rol
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
inc
push
push
xchg
adc
push
push
push
push
xchg
push
jo
push
push
push
or
xlat
mov
fists
rclb
push
fists
rcr
adc
fists
mov
push
jo
shll
stos
stos
stos
test
mov
rclb
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
aam
adc
fists
rcr
aam
push
push
push
xlat
xchg
pop
fstl
jo
fists
mov
push
jo
sarl
stos
stos
stos
stos
test
mov
fists
aam
push
pusha
and
aam
adc
fists
mov
push
jo
shrl
stos
stos
stos
stos
test
mov
inc
adc
push
push
xchg
adc
push
fs
push
fists
movsb
fists
fstl
jo
fists
movsb
fists
fstl
jo
fists
mov
push
jo
shll
stos
stos
stos
test
mov
stos
stos
stos
xlat
jmp
push
pop
ror
push
push
push
xchg
adc
push
push
push
push
fists
movsb
fists
fstl
jo
fists
pop
fstl
jo
add
stos
stos
fstl
jo
fists
mov
push
jo
shrl
stos
stos
stos
test
mov
stos
stos
stos
push
push
push
push
fists
movsb
pop
jecxz
push
outsl
rcrl
stos
stos
stos
sub
add
push
push
sbb
xchg
mov
push
test
push
push
lods
push
push
push
fstl
mov
push
push
push
push
fists
mov
adc
filds
mov
push
inc
fstl
jo
filds
mov
stos
stos
push
push
pop
fstl
jo
fists
mov
push
jo
shrl
stos
stos
stos
test
mov
stos
stos
stos
stos
push
mov
inc
push
push
push
push
xchg
adc
push
push
push
push
fists
movsb
xlat
xchg
pusha
fstl
jo
fists
rcr
aam
push
push
push
xlat
xchg
pop
fstl
jo
fists
mov
push
jo
shrl
stos
stos
stos
test
mov
add
stos
stos
fst
in
push
push
xchg
rcrl
stos
stos
push
push
push
push
fists
movsb
fst
adc
adc
jae
rcll
stos
stos
stos
xlat
xchg
dec
fst
adc
stos
stos
xlat
jmp
push
and
rcll
stos
stos
fists
fst
sbb
stos
stos
xchg
rcll
stos
stos
push
push
push
push
adc
stos
stos
outsl
rcrl
stos
stos
and
rcll
stos
stos
stos
push
fists
shrb
push
mov
fstl
jo
fists
mov
push
jo
sarl
stos
stos
stos
test
mov
fstl
xor
xlat
mov
pop
push
aam
push
xchg
adc
push
push
push
push
fists
pop
fstl
or
stos
stos
stos
test
mov
add
test
leave
ret
nop
push
mov
sub
nop
nop
call
xchg
adc
xchg
adc
fists
mov
adc
pop
rcr
push
push
push
filds
lods
fists
mov
adc
jecxz
push
fstl
movsb
fists
test
jecxz
inc
push
adc
adc
adc
fldl
flds
push
push
push
push
fsts
mov
filds
movsb
fldl
xchg
mov
push
adc
adc
adc
adc
mov
pop
push
and
adc
add
inc
fists
mov
pop
call
test
movl
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
test
adc
push
and
test
adc
push
adc
push
and
adc
mov
add
test
movl
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
sub
nop
nop
call
fists
pop
jno
push
push
push
xor
adc
jl
fists
pop
jno
push
push
push
xor
adc
jl
fists
pop
jno
push
push
push
xor
adc
pop
fists
pop
jno
push
push
push
xor
adc
jecxz
scas
filds
pop
pop
jecxz
lods
sbb
push
push
push
adc
sbb
adc
adc
pop
push
push
fsts
movsb
gs
filds
pop
pop
jecxz
mov
pop
push
push
fsts
movsb
push
inc
call
test
mov
add
pop
pop
ret
push
mov
sub
nop
nop
call
fists
pop
fists
test
adc
fstl
lods
xor
xor
sub
add
adc
adc
test
adc
fists
pop
fstl
mov
fstl
inc
fists
test
adc
adc
adc
xor
adc
test
adc
adc
adc
adc
adc
filds
fsts
test
inc
filds
pop
fists
test
push
filds
inc
fists
lods
fstl
xor
add
test
leave
ret
push
mov
sub
nop
nop
call
fists
pop
fists
test
adc
fstl
lods
xor
xor
sub
add
adc
adc
test
adc
fists
pop
fstl
mov
fstl
inc
fists
test
adc
adc
adc
xor
adc
test
adc
adc
adc
push
fsts
lods
gs
fists
pop
filds
test
inc
filds
pop
fists
test
push
filds
inc
fists
lods
fstl
in
sbb
leave
ret
nop
push
mov
push
sub
nop
nop
call
xchg
adc
sub
mov
aad
mov
sub
add
lods
xchg
mov
fstl
adc
mov
insl
adc
ficomps
adc
fsts
lods
stos
push
mov
push
push
push
push
xchg
adc
sub
mov
xchg
adc
sub
mov
pop
fists
pop
push
adc
test
adc
push
fists
mov
push
xchg
adc
fsts
movsb
stos
push
mov
fisttps
lods
filds
lods
fists
mov
insl
adc
int
adc
adc
adc
xchg
adc
sub
mov
adc
fsts
mov
fists
pop
fstl
mov
fistps
pop
filds
lods
fists
mov
sbb
lods
fists
mov
adc
push
fsts
lods
xlat
push
push
mov
push
push
push
push
xlat
sub
mov
aad
mov
sub
fsts
mov
adc
fsts
mov
fists
pop
fstl
mov
fistps
pop
fists
lods
xchg
mov
fstl
adc
sbb
lods
xchg
mov
fstl
adc
fsts
mov
clc
fsts
lods
stos
push
mov
add
test
add
pop
pop
ret
push
mov
sub
nop
nop
call
call
test
nop
nop
call
xchg
adc
fists
inc
fstl
lods
xlat
sub
lods
push
fists
lods
xchg
lods
push
push
xchg
outsl
adc
test
mov
push
adc
xchg
push
fstl
jo
fists
test
mov
push
adc
adc
fists
pop
fstl
mov
fsts
test
push
push
mov
add
test
leave
ret
push
mov
sub
nop
nop
call
call
test
nop
nop
call
xchg
adc
fists
inc
fstl
lods
xlat
sub
lods
push
fists
lods
xchg
lods
push
push
xchg
outsl
adc
test
mov
push
adc
xchg
push
fstl
jo
fists
test
mov
push
adc
adc
fists
pop
fstl
mov
fsts
test
push
push
mov
add
test
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
jmp
nop
nop
push
mov
mov
push
sub
and
call
call
call
mov
lea
mov
call
sub
test
jne
jmp
inc
movzbl
cmp
sete
cmp
sete
or
test
jne
cmp
je
cmp
setne
xor
cmp
setne
test
je
lea
lea
test
je
inc
movzbl
cmp
setne
xor
cmp
setne
test
jne
jmp
lea
inc
movzbl
cmp
setne
xor
test
setne
test
jne
cmp
je
lea
cmp
sete
cmp
sete
jmp
mov
inc
movzbl
cmp
sete
cmp
sete
or
test
jne
movl
call
sub
testb
mov
je
movzwl
mov
xor
mov
mov
mov
call
sub
mov
leave
ret
inc
movzbl
jmp
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
jmp
lea
mov
mov
add
add
cmp
jb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
fninit
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
test
je
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
mov
lea
mov
test
jne
leave
ret
lea
push
mov
push
sub
mov
cmp
je
test
mov
je
mov
lea
call
dec
jne
movl
call
pop
pop
pop
ret
mov
xor
test
jmp
inc
mov
test
jne
jmp
lea
lea
push
mov
push
sub
mov
test
jne
mov
mov
mov
cmp
je
test
mov
je
nop
lea
call
dec
jne
movl
call
pop
pop
pop
ret
mov
xor
test
jmp
inc
mov
test
jne
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
cmp
jb
sub
orl
sub
jmp
sub
orl
mov
mov
mov
mov
jmp
nop
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
incl
add
add
incl
add
add
add
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
mulb
fcmovnbe
out
push
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
movsl
popa
icebp
push
xlat
out
push
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
and
mov
int
lcall
imul
je
icebp
sti
push
and
lret
inc
fisttps
lahf
popf
jno
lock
cmp
xchg
insl
repz
std
mov
les
jl
lock
mov
xchg
or
addr16
aad
jg
aas
mov
xor
inc
sub
incb
pop
enter
inc
in
cli
popa
xchg
jne
xlat
out
push
lods
and
adc
push
test
push
lods
and
adc
lods
and
adc
lods
and
adc
sbb
out
push
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
dec
jbe
call
lods
and
adc
lods
and
adc
lods
and
adc
inc
jae
or
or
adc
xor
lock
aas
inc
fdivrs
out
push
lods
and
adc
pop
ftst
xchg
in
xchg
adc
adcl
imul
xlat
out
push
lods
and
adc
pusha
mov
test
sti
cmpsb
and
pusha
xor
or
inc
push
out
push
lods
and
adc
addr16
or
out
push
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lock
cmp
or
out
xorb
sub
sub
addb
xchg
pop
into
iret
stos
sbb
sub
push
popf
jge
cmpsb
test
or
shlb
mov
das
and
aas
mov
mov
mov
mov
jl
out
pop
fstpt
mov
sub
add
shrb
out
pop
mov
mov
scas
ss
cmp
loopne
cmp
fdivrl
leave
sahf
movsl
adc
xor
rorl
mov
popa
test
dec
mov
jge
aas
adc
and
pop
jle
dec
scas
push
and
mov
lods
test
push
popf
out
stos
ljmp
loope
pop
rcrb
sub
push
insb
jecxz
leave
outsl
cmp
xlat
xchg
mov
dec
test
push
jo
mov
or
push
stc
imul
ret
in
es
lret
or
cmp
push
jg
aad
jnp
ljmp
add
and
insl
jp
jne
sub
fwait
loop
aaa
addb
lock
and
or
loop
mov
mov
mov
jp
pop
insl
in
and
xor
enter
sarb
sub
sahf
xor
call
addr16
adc
push
sbb
xchg
jp
stos
out
ret
cmpsb
add
adc
push
cmpsb
ja
fstps
mov
push
imul
or
lea
mov
dec
pop
ret
xchg
pop
in
ret
pop
and
xor
inc
sub
push
mov
push
add
lds
sub
sub
push
mov
jle
into
mov
xchg
iret
scas
xorb
repz
test
das
push
sbb
in
insb
bound
sbb
jmp
dec
addr16
not
pop
xor
das
cmp
inc
inc
cs
loop
out
jmp
inc
add
mov
mov
cmp
xchg
or
fidivrs
insl
stos
inc
mov
inc
inc
call
out
in
xor
mov
or
xor
dec
jns
sbb
dec
fldcw
das
inc
xor
mov
cmc
push
add
jmp
int3
pop
mov
mov
and
enter
push
cld
and
add
adcl
test
cmc
stos
inc
jl
mov
test
mov
outsb
mov
ror
push
xor
arpl
bound
sub
adc
add
std
cmp
stos
adc
cli
add
or
fld
push
mov
pop
inc
sub
lret
int3
stos
adc
add
sub
rcrl
cwtl
out
push
icebp
pinsrw
jno
xor
xor
loope
mov
pop
cmp
sbb
push
or
imul
fadd
aaa
push
xchg
adc
loope
or
jmp
jbe
shl
jmp
outsb
nop
add
test
or
push
sbb
jl
and
fiaddl
pop
jnp
cltd
dec
dec
mov
cmp
push
add
dec
enter
loop
mov
fs
lcall
adc
jae
xor
mov
insb
sbb
shrb
xchg
xchg
out
repnz
stc
inc
inc
fcmovne
fisttpl
jg
test
xchg
xchg
xchg
inc
sub
add
cmc
lcall
xchg
push
pop
sub
xor
and
push
xor
int3
fstps
inc
jge
aam
push
add
cmc
pushf
rorb
addb
fs
imul
pop
cmc
mov
dec
mov
enter
pop
hlt
lods
mull
aas
data16
loop
fstl
mov
outsl
ja
cmpsl
gs
xorb
nop
cltd
out
and
sar
push
scas
or
mov
sub
in
dec
mov
loopne
mov
push
xchg
repz
cltd
movsb
push
lea
dec
insl
stos
cmc
xchg
int
and
outsl
jbe
xchg
fwait
rcrb
mov
pop
add
rclb
popf
daa
rorb
in
cmp
push
fnstsw
lret
pop
lret
sahf
movd
fldt
imul
pop
adc
into
repz
in
jne
cmp
and
sbb
ljmp
sbb
fldt
xor
in
sub
pop
rcll
test
mov
inc
gs
mov
cld
idivb
std
lret
pop
xchg
inc
dec
add
or
jae
mov
jno
lcall
sub
movsb
and
mov
inc
clc
lahf
gs
xchg
jmp
sti
test
into
add
xor
scas
dec
movb
and
ljmp
rorb
mov
xchg
xchg
xchg
lcall
cmpsl
out
or
adc
xor
or
daa
xchg
mov
xchg
jmp
fsubl
aas
sub
movb
xchg
xchg
inc
popf
fcmovnb
mov
inc
xchg
loopne
ds
push
push
jnp
cmp
xchg
cli
push
cltd
insb
cmp
and
jge
pop
test
sub
in
jno
xchg
cmpsl
lahf
sbb
jg
and
adc
outsl
jno
fdivr
add
mov
xchg
cs
out
aas
mov
out
push
pop
sub
test
cmp
ret
pop
cmp
jno
mov
mov
inc
icebp
insb
mov
jmp
and
fsubs
mov
xchg
scas
sub
bound
adc
adc
adc
loopne
mov
imul
and
push
and
test
or
gs
imulb
mov
xor
jo
mov
arpl
pop
dec
jae
or
xchg
sub
inc
mov
sbb
inc
mov
outsb
jns
imul
adc
ret
pushf
enter
cmpl
jno
mov
fbld
out
push
lods
and
adc
and
sub
push
pushf
or
xor
and
stos
cmp
mov
push
push
cs
push
in
mov
int
lcall
jno
neg
sub
cmp
pop
adc
push
push
cs
pop
adc
sbb
xchg
cmpb
cmpb
xor
cmpb
mov
mov
lock
cwtl
pusha
inc
mov
fcmovbe
xchg
adc
inc
xchg
xchg
mov
sbb
addb
and
cld
fmull
and
xchg
sbb
gs
popf
cmp
push
adc
js
push
xchg
jl
cmp
js
aas
movsb
push
repz
inc
push
stos
push
pop
test
jno,pt
mov
fistpll
xlat
fs
pop
clc
mov
out
std
jnp
mov
inc
arpl
imul
cmp
cmp
fcmovb
sbb
mov
orb
sub
bound
pop
fnstsw
test
popf
cld
jl
push
aad
stc
sbb
int
sbb
pop
jmp
jns
or
pop
fnstsw
repz
ljmp
fnstsw
sbb
loopne
jo
aad
ret
pop
push
xchg
fmull
sub
jno
xchg
cwtl
cmp
sub
jno
xchg
cwtl
cmp
lcall
in
mov
xor
out
roll
cmpsb
fisubrl
int3
stc
xchg
iret
dec
lret
cld
subl
inc
xorb
mov
les
pop
test
mov
xchg
ds
jns
je
cmp
mov
xor
ret
dec
jo
pop
jno
inc
orb
fstpt
sub
loope
cmpsl
jno
mov
sbb
jno
inc
orb
faddl
pop
mov
popf
cmp
repz
sub
ficoml
in
popf
sarb
rcrl
hlt
ds
nop
addr16
xor
out
and
ror
dec
cmc
xchg
adc
loopne
inc
ljmp
in
into
pop
test
mov
inc
mov
cmp
xor
mov
inc
mov
out
addr16
mov
xchg
mov
mov
ds
shll
inc
mov
jo
iret
mov
aad
cmpsl
outsb
cmp
testl
push
inc
cmp
lds
repz
rorb
and
lods
push
mov
test
mov
inc
mov
lods
and
adc
iret
dec
xor
mov
dec
incb
mov
imul
cmp
nop
mov
out
jne
or
cmp
mov
cmp
ss
outsb
mov
ret
decb
mov
and
das
pop
xor
mov
pop
adc
sbb
mov
dec
dec
sbb
out
xlat
out
push
lods
and
adc
fldcw
lock
push
push
nop
in
push
call
pop
xorl
ret
push
ficomps
test
jbe
leave
push
and
sub
les
int
in
mov
mov
sbb
das
or
aas
into
test
mov
dec
adc
testb
das
cmp
lahf
push
into
call
cltd
lret
and
pop
fs
inc
cmpsl
push
cmp
push
daa
add
dec
push
adc
mov
jno
insb
hlt
gs
out
loop
inc
adc
mov
nop
mov
rorb
sbb
iret
lahf
mov
iret
imul
data16
ds
insl
sahf
cs
xorl
and
xor
push
pop
cmc
jno
sbb
aas
jg
xor
neg
mov
or
outsb
repz
cs
pop
imul
fwait
mov
pop
adc
imul
test
jns
fsubp
in
cmp
js
arpl
ss
in
pop
repnz
cs
cs
das
mov
mov
dec
iret
mov
shlb
cmp
lcall
lods
shld
xchg
xchg
dec
incb
test
shlb
mov
push
inc
dec
lret
cmp
inc
repz
inc
std
les
lret
aam
mov
ss
jnp
sbb
lea
sub
sbb
fsubl
pusha
in
jne
inc
je
and
or
mov
xor
or
adcl
dec
fdiv
cwtl
mov
cli
outsb
mov
sti
pop
jmp
outsb
jnp
pushf
jge
mov
sub
inc
push
mov
cltd
clc
jns
xchg
pop
in
mov
or
gs
test
lea
dec
sub
enter
pusha
xchg
jbe
cmpl
jp
mov
pop
sbb
fwait
or
push
clc
pop
int
cmp
int3
sub
or
arpl
daa
jecxz
adc
mov
loop
pushf
into
std
aad
and
mov
fisttpll
cwtl
xor
icebp
pop
inc
inc
mov
movsb
push
lcall
jno
std
add
aaa
sahf
mov
dec
adc
add
mov
dec
sub
int3
push
sbb
fsubrp
in
cltd
inc
lods
cli
mov
insb
out
push
xor
movsb
aam
push
sarb
inc
sarb
mov
mov
or
pop
fwait
sti
push
adc
lods
stos
gs
cli
cld
int3
push
mov
inc
lcall
leave
inc
mov
into
std
and
jecxz
xor
mov
arpl
or
mov
jno
daa
fldenv
push
pop
jae
andb
sarb
in
cmpsb
jle
fs
rolb
inc
popl
je
bound
shlb
mov
xchg
imul
xor
cmp
or
test
sti
lods
adcl
sub
test
in
cmp
std
inc
mov
jnp
shrb
dec
pop
scas
push
ficomps
ret
add
and
dec
xor
and
mov
mov
das
das
mov
mov
das
mov
movsb
xchg
jae
adc
pop
mov
fistps
cwtl
inc
xor
xchg
jae
clc
test
mov
movsb
sbb
xor
fsubrs
rcrl
or
mov
xor
and
mov
xor
pmulhw
dec
out
int3
cmc
push
cmc
mov
push
or
jl
sub
arpl
sub
mov
dec
sbb
adc
call
outsl
jne
das
or
xor
ds
enter
push
push
nop
in
push
call
pop
xorl
sbb
and
push
movl
pop
jae
out
aam
mov
mov
sbb
das
or
aas
and
or
jp
testb
fwait
pop
pop
mov
jbe
lret
and
negl
aad
daa
add
dec
push
adc
cmp
xor
jecxz
dec
out
loop
inc
adc
mov
nop
mov
rorb
mov
cmp
iret
imul
ret
insb
dec
and
cs
sbbl
adcl
jnp
pop
cmc
jno
sbb
and
mulb
fdivrs
or
xchg
mov
jp
ficompl
sbb
fwait
mov
push
mov
sti
aad
cld
test
jns
fsubp
adc
adc
ror
cld
out
arpl
ss
in
pop
repnz
cs
cs
das
mov
test
test
adc
mov
shlb
sub
fnstenv
pushf
push
test
xchg
xchg
dec
incb
inc
je
cmpsb
repnz
sti
sarl
lret
dec
pushf
ror
sbb
repnz
ret
into
fmulp
lds
lea
push
pusha
add
lret
mov
imul
xchg
out
sbb
mov
mov
arpl
data16
xchg
js
dec
sti
cli
outsb
mov
sti
pop
and
mov
jge
mov
sub
mov
add
clc
jns
xchg
pop
in
cltd
or
mov
popa
test
lea
ss
into
inc
dec
and
jb
xchg
jbe
cmpl
lret
repnz
sbb
testl
sub
or
arpl
daa
jecxz
adc
mov
std
push
in
adc
mov
mov
sarb
pop
scas
movsl
xor
icebp
pop
gs
and
push
lcall
pop
leave
xor
subb
outsb
aaa
sahf
mov
cmpb
or
jb
cwtl
hlt
dec
sub
insl
cmp
call
jmp
push
cltd
mov
arpl
and
push
push
movsb
aam
push
sarb
inc
sarb
mov
mov
or
pop
fwait
adc
xchg
mov
shr
or
mov
das
push
std
dec
sub
inc
xor
inc
lcall
cmpsl
addr16
and
lods
into
std
and
jecxz
sti
fwait
out
je
add
filds
jno
aad
fcmovb
xor
pop
jae
andb
sarb
add
cmp
test
sub
popl
xor
shl
push
sub
xchg
imul
xor
cmp
dec
test
push
mov
mov
and
mov
in
cmp
std
inc
mov
icebp
pusha
mov
add
sbb
ret
das
cmpsb
dec
int
cmp
pushf
inc
sbb
jae
add
cld
mov
das
das
mov
adc
ljmp
inc
pop
pop
fisttps
xchg
test
daa
xchg
jae
clc
test
mov
movsb
sbb
pusha
inc
fisubl
and
mov
loopne
fisttps
enter
xchg
jb
mov
stos
add
fisttpll
in
in
dec
outsb
mov
sbb
sarb
divb
jl
push
fwait
lock
or
in
mov
dec
lea
ficoms
call
outsl
jne
and
lcall
testl
int3
inc
sub
xchg
cmp
push
cld
sbb
fwait
inc
sub
pop
faddp
rcr
add
push
pop
pop
call
push
sbbl
lret
inc
add
fwait
jl
pop
repz
mov
test
sbb
add
xor
pushf
stc
dec
mov
aas
ja
dec
addr16
stc
adc
insb
movsb
out
in
pop
test
arpl
ss
jne
inc
sub
testb
lods
jns
cmc
mov
ja
cwtl
outsl
call
xchg
mov
out
mov
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
cmpl
dec
or
enter
call
xchg
jbe
jg
pop
lahf
pop
ds
das
cmp
in
loope
ds
das
cmp
in
loope
sbb
cmp
push
and
cmp
push
and
push
repz
pop
add
add
repz
pop
add
sbb
cmp
fwait
aas
add
dec
cmp
loop
lds
repz
out
push
lods
and
adc
lods
and
adc
cmpl
xchg
jbe
jg
pop
lahf
pop
ds
das
cmp
in
loope
sbb
cmp
push
and
push
repz
pop
add
jae
cmp
push
mov
adc
mov
mov
lds
jo
dec
fistl
sti
sti
cmpl
add
data16
in
lret
lret
xchg
xlat
out
push
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
xor
cmc
or
xor
xorb
mov
and
in
jmp
inc
fistl
fcompl
cmc
mov
sbb
jp
add
outsl
daa
seto
repnz
jnp
push
and
push
repnz
jne
cli
pop
js
mov
jo
xchg
sbb
gs
mov
pop
jbe
add
cltd
mov
pop
sub
sub
cmp
xor
fcompl
std
imul
mov
cld
sub
movsb
mov
aam
and
xchg
lcall
out
jge
jp
into
or
cld
loope
test
fsubrl
cmpsl
sarl
test
jp
xchg
inc
sbb
aad
push
popa
popf
lret
in
pop
or
subb
pushw
inc
pop
xchg
insl
call
insb
mov
mov
pusha
push
mov
pop
loop
cli
push
add
ds
push
mov
jecxz
lods
sti
dec
ret
mov
rorb
aam
daa
sbb
in
jmp
jmp
out
insl
add
push
fdivrs
pushf
push
jle
shlb
jne
pop
or
rcll
insb
lods
dec
mov
pop
ret
imul
mov
sbb
pop
cmp
insl
popf
les
lret
sub
into
fmuls
fwait
jnp
cli
insb
das
xchg
aam
xchg
shlb
or
add
data16
int3
shl
sbb
and
push
mov
mov
and
lock
xchg
xchg
pop
jb
add
fdivp
jno
jmp
aad
cld
popa
jecxz
push
adc
lahf
cmpsb
rolb
nop
andl
rcl
clc
jbe
inc
add
mov
mov
fimuls
xor
daa
sub
daa
lret
ja
sub
enter
dec
cwtl
pop
popf
sub
in
push
sbb
mov
stos
and
mov
outsl
pushf
and
pop
scas
xchg
jmp
sti
pop
hlt
popf
pop
js
ficoml
lret
jb
in
add
rcr
sub
add
and
cmpsb
sti
sbb
fidivl
jne
gs
mov
mov
sbb
push
sti
fdiv
pop
jg
push
ficompl
popa
dec
push
add
pop
inc
popf
ficompl
push
aas
subb
adc
pop
push
test
mov
mov
jnp
mov
lahf
aad
mov
das
pop
push
inc
cmp
mov
fadd
push
mov
inc
data16
idivb
mov
cmpsl
lret
sub
test
mov
fstps
xchg
bnd
cmc
fldenv
lock
cmp
loope
sti
popa
cmp
aam
sub
add
aaa
cmp
sbb
pop
mov
ror
enter
adc
push
loop
xor
outsl
xor
push
dec
cmp
inc
fucomp
jnp
push
xor
add
dec
adc
std
gs
sti
ds
xor
lds
int3
xchg
or
adc
sahf
repnz
jle
lods
mov
jbe
mov
aam
call
fidivl
cmpl
mov
sub
repz
xlat
cmp
outsb
dec
enter
rcrb
imul
mov
ds
mov
jmp
subb
mov
test
inc
test
and
leave
mov
adc
cmpsl
scas
or
mov
aam
ds
fs
mov
aad
and
push
in
lret
js
sbb
loop
add
ljmp
inc
push
jne
es
enter
xchg
rolb
mul
or
add
mov
push
fnsave
ds
cld
ret
push
ficoms
mov
jbe
dec
xor
and
mov
add
repnz
je
pop
loope
mov
stc
out
mov
aam
inc
dec
js
and
icebp
or
fwait
int
add
cltd
in
mov
sbb
lods
xchg
mov
mov
movsb
aas
ljmp
aas
pop
add
jp
pop
sbb
inc
adc
and
xor
ret
xchg
xor
lea
cmp
stos
mov
nop
stc
push
mov
or
inc
fstl
test
scas
inc
push
pop
xor
outsb
inc
testl
popf
insb
out
push
in
lret
mov
sbb
pop
incb
enter
inc
arpl
push
jl
stos
pushf
aaa
lcall
sbb
lods
clc
scas
das
lea
mov
movsb
hlt
pop
ret
lahf
add
out
daa
sti
pop
fsubrp
data16
sahf
mov
inc
cmp
inc
sahf
gs
pop
ret
add
sbb
xchg
fdivl
ljmp
adc
xor
sub
xor
outsl
push
hlt
or
fcompl
test
push
pop
mov
xchg
shrl
xchg
shrl
xchg
shrl
xchg
popf
clc
clc
fcompl
clc
clc
fcompl
clc
clc
fcompl
clc
clc
fcompl
mov
pop
out
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
mov
jp
cmp
push
out
cs
cmp
push
out
cs
cmp
push
out
cs
cmp
push
out
cs
cmp
push
out
cs
cmp
push
out
cs
cmp
push
out
cs
cmp
push
out
cs
mov
test
stos
push
ja
add
xchg
xchg
ljmp
ljmp
push
jg
fwait
mov
jg
fwait
mov
js
jae
xor
jae
sbb
faddl
ret
sbb
faddl
ret
sbb
faddl
ret
sbb
faddl
ret
inc
sub
inc
sub
inc
sub
inc
sub
push
fiaddl
adc
inc
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
mov
test
mov
xchg
test
mov
xchg
test
mov
xchg
test
mov
xchg
pop
mov
or
inc
xor
xchg
adc
sbb
aam
nop
ss
flds
xor
sbb
and
jl
daa
add
jle
xor
fmuls
adc
mov
xor
ret
adc
mov
xor
ret
fidivs
sub
adc
fidivs
sub
adc
inc
dec
xchg
xchg
ljmp
xchg
ljmp
ljmp
cmp
ljmp
push
jg
fwait
mov
jg
fwait
mov
jg
fwait
mov
jg
fwait
mov
js
jae
xor
jae
xor
jae
xor
jae
sbb
faddl
ret
sbb
faddl
ret
sbb
faddl
ret
sbb
faddl
ret
inc
sub
inc
sub
inc
sub
xor
lea
ss
mov
mov
sub
add
push
xor
cmc
or
ljmp
das
adc
jb
push
mov
add
mov
repz
jp
jl
adc
xchg
scas
je
fdivrs
in
adc
push
loop
stos
xchg
mov
add
out
mov
inc
xor
notb
jp
insl
adc
dec
inc
dec
inc
clc
scas
mov
out
push
lods
and
adc
mov
sub
add
push
xor
cmc
or
clc
or
mov
in
push
icebp
testb
pop
fcomps
loopne
loop
std
pop
mov
rcrl
lea
mov
sub
sub
out
mov
add
cmp
popf
movsl
rol
dec
push
repnz
sub
jge
in
add
xchg
in
jmp
fstl
cld
in
cld
inc
cmp
xlat
add
pop
jl
mov
cmpsb
out
fistpll
in
lret
iret
outsb
lahf
in
cmpsl
imull
cmpsb
mov
add
daa
or
cltd
out
adc
clc
arpl
shlb
pop
sti
sti
icebp
mov
dec
sbb
flds
sbb
shrb
sbb
push
jae
in
inc
or
inc
dec
jmp
sbb
mov
loop
stos
or
out
pop
xor
lock
fdivrp
out
mov
vmread
jmp
daa
shll
pop
mov
outsl
adc
jb
xchg
insl
xor
sbb
pop
adc
shlb
popa
sub
lds
mov
and
scas
sbb
xlat
jecxz
dec
cmc
mov
adc
roll
sbb
xor
xchg
loope
call
push
xor
xlat
cmpsb
xchg
enter
mov
pop
mov
insb
mov
dec
pop
fdivrs
enter
in
testb
ds
xchg
gs
jnp
push
clc
pop
test
or
lcall
repz
es
or
sub
daa
stc
js
jg
pop
add
and
sbbl
out
xor
add
add
shll
push
ret
orb
out
cmp
lock
ror
daa
add
push
cmpsl
shl
mov
mov
fmuls
xor
jmp
fdivrl
sbb
loopne
xchg
fisubrs
dec
enter
cltd
mov
jb
push
repz
cmp
push
dec
insb
mov
cmc
xchg
fwait
or
adcl
inc
sbb
ss
insb
jmp
leave
inc
and
addr16
mov
sarb
stc
ljmp
movsb
jne
xor
imul
outsl
mov
add
ret
add
sub
into
mov
pop
sub
pop
cmpsb
and
adc
push
pop
or
fwait
add
fs
xchg
push
aam
cwtl
sub
sarl
xor
arpl
xlat
jl
repz
hlt
inc
jl
pop
int
push
dec
insb
out
push
pop
xchg
pop
repnz
int
dec
loop
dec
pop
jg
outsb
adc
pop
sub
in
xchg
dec
out
inc
adcb
test
test
xchg
and
xor
imul
lds
mov
cmc
cmp
lcall
pop
jb
sub
xor
inc
cmp
in
into
call
ds
stos
cmpb
in
sbb
inc
add
mov
das
sub
mov
cmp
cmp
sbb
xlat
or
pop
lea
std
mov
lea
jae
fbld
rorl
push
inc
add
mov
push
rcrl
not
out
xor
mov
jle
fistpll
imul
data16
xor
mov
pop
mov
add
imul
dec
jl
sub
sahf
and
cmc
mov
xchg
movsb
xsaves
mov
nop
jecxz
adc
push
jge
imul
xchg
mov
jge
sbb
lock
jg
mov
inc
dec
or
sub
loopne
aas
pushf
xlat
jne,pn
mov
test
faddl
cmp
loopne,pn
and
loope
mov
xchg
jl
in
mov
sbb
jp
rcrb
clc
ficomps
cli
lock
loope
cmpsb
clc
cmp
sbb
pop
cmpsb
or
cmp
rorl
inc
les
push
cmp
dec
icebp
popf
sub
in
lock
add
mov
cmp
into
rorl
in
xor
subl
jg
sub
cs
inc
andb
mov
or
je
pop
xchg
cld
mov
out
mov
or
add
in
sbb
push
sub
lods
into
aas
dec
sahf
iret
pusha
rcrb
mov
pusha
fimuls
pop
ds
mov
xor
pushf
sbb
mov
faddp
shlb
aas
shr
jnp
jbe
jge
dec
xchg
mov
rcl
cli
or
out
jecxz
mov
or
bound
pop
insl
sbb
sti
lcall
pop
cmp
xor
mov
imul
repz
sbb
loopne
xchg
inc
pop
pop
mov
jns
andb
pop
dec
cmp
sbb
cmc
push
arpl
push
mov
jge
xorl
pop
loope
push
pop
xchg
test
inc
pop
scas
pop
jno
je
jle
push
sbb
cmpsl
or
in
fcompl
mov
cmp
push
jge
xor
shlb
iret
dec
lods
mov
sub
stos
loop
lret
lcall
adc
cmp
or
cmpsl
neg
cmc
out
out
pop
push
pop
lcall
fcomp
hlt
rolb
add
cmp
add
cmp
inc
cld
hlt
cmp
pop
jbe
pop
les
lret
push
add
pop
jle
shll
cmp
sub
fldl
add
pop
mov
add
nop
xchg
pusha
inc
jne
dec
aas
and
je
mov
mov
pusha
lds
or
xlat
loopne
stos
dec
test
jg
mov
outsl
dec
lea
jle
pusha
add
or
add
xchg
jg
jmp
pop
inc
xor
aas
les
in
push
div
dec
insl
jmp
cli
add
xchg
pop
dec
subb
jbe
test
rorl
sahf
jecxz
fnsetpm(287
add
stos
movsb
or
lock
and
xlat
jne
imul
add
or
cmp
fwait
rcrb
inc
inc
js
pop
push
inc
xor
xor
roll
adcb
inc
std
mov
int3
add
mov
xchg
cmp
push
adc
xor
mov
or
stos
push
xchg
sbb
adc
stos
lret
xchg
inc
aas
push
cmp
sbb
xchg
repz
clc
addl
mov
lahf
adc
das
lcall
sbb
orl
outsl
daa
cmp
adc
jno
sbb
cmp
push
add
push
ret
push
fs
adcb
or
popa
popf
push
nop
mov
out
das
sub
in
scas
daa
mov
mov
lret
pop
mov
negl
fmull
jge
ret
nop
xor
add
xor
jp
cmp
lods
mov
test
out
jle
mov
add
add
mov
mov
fcmovnu
cmp
fisttpll
inc
fxch
stos
fcos
dec
sub
mov
xor
adc
jae
xchg
mov
outsl
sarb
jne
sbb
sub
ss
loop
ret
push
push
test
loopne
sbb
insl
push
jne
xchg
nop
arpl
sub
adc
out
lret
jmp
sahf
sub
jp
jp
pop
xchg
cld
enter
add
add
inc
sub
fistps
adc
js
dec
mov
clc
or
push
test
insb
insb
push
cld
push
cmp
pop
jmp
jecxz
mov
inc
lods
orl
jae
inc
mov
add
cmp
sbb
and
dec
dec
insl
adc
jg
clc
xchg
sbb
loop
pop
loope
stos
mov
xlat
jle
adc
pushl
fldt
fs
push
jmp
sbb
mov
mov
bound
pop
dec
pop
adc
data16
mov
add
jg
call
les
adc
xchg
xor
lahf
aaa
and
xor
fwait
test
shlb
or
inc
lret
mov
cwtl
dec
sbb
repz
pop
outsb
xchg
mov
out
mov
lahf
rolb
adc
jge
insl
fmuls
jb
push
std
movsb
scas
rorb
jl
adc
stos
jmp
ficoms
outsb
mov
ja
sbb
push
rorl
lea
ljmp
xchg
loope
mov
mov
mov
sbb
testb
lahf
in
push
les
mov
and
cmp
dec
fiaddl
dec
lret
jae
sub
in
mov
mov
add
sub
pop
xchg
mov
test
fsub
jp
sub
sbb
std
movsb
mov
sbb
pop
fs
loop
stos
and
xor
pop
jp
sbb
imul
xchg
inc
aam
inc
movb
nop
push
jge
sbb
ds
pop
adc
mov
je
or
xchg
cmpsb
sbb
es
lret
test
in
mov
loop
inc
xchg
lret
sbbl
hlt
cmc
adc
insl
lods
mov
rcl
sbb
mov
xchg
shrb
stos
insb
sub
pop
arpl
and
dec
gs
fisttpl
pushf
push
arpl
popf
fdiv
pop
xor
jns
sbb
ss
sbb
push
jle
sarl
lret
add
pop
arpl
mov
enter
mov
stos
jecxz
pop
push
je
rcll
popf
mov
shl
int
mov
mov
xchg
fistpll
in
xchg
frstor
pop
cmc
add
arpl
xor
dec
les
ja
data16
sbb
loop
pushf
xchg
jns
cmpsl
addr16
mov
test
shlb
fwait
and
stc
jae
push
and
nop
fcoms
xor
inc
scas
push
sbb
or
inc
outsl
mov
jmp
jl
cli
cld
stos
cmpsb
mov
shll
dec
mov
test
outsb
orl
jnp
imul
jne
pop
shr
pop
lret
test
fnstcw
loopne
mov
lds
xor
shrl
test
aaa
xchg
adc
ficompl
mov
loopne
pusha
add
pusha
mov
int
jg
mov
xchg
xor
inc
push
push
adc
mov
je
dec
mov
push
and
das
ljmpw
out
add
mov
call
mov
and
mov
insl
jbe
lret
addr16
daa
rclb
pop
stos
ret
out
push
fisttpl
cld
mov
and
fldl
imul
sbb
xchg
xor
push
xor
xchg
push
or
std
dec
mov
hlt
xor
jbe
call
scas
sub
add
fsts
dec
mov
test
sub
fildll
wrmsr
adc
sub
ljmp
nop
cmp
dec
mov
lret
stos
jne
pop
xor
lock
daa
cli
xchg
aam
cmpsb
shrb
fstp
push
mov
push
mov
mov
fiadds
stos
push
mov
test
jno
xor
test
xor
and
mov
mov
dec
lock
in
int3
and
inc
xor
pushl
or
mov
imul
out
mov
push
add
or
outsb
aaa
pop
in
jo
cmp
jb
mov
push
sbb
icebp
push
fwait
sahf
sbb
push
lods
cmp
leave
adc
dec
rcrl
decb
sbb
scas
and
movsl
out
leave
push
lea
jne
movups
xchg
call
fisttps
ror
nop
and
jp
fs
mov
jo
addr16
jl
mov
mov
xchg
cmp
rcll
in
cmp
roll
mov
and
aad
lahf
movsb
xchg
addb
pop
or
pop
jg
push
jae
stos
xor
sub
icebp
sbb
fcomps
mov
fimull
negl
mov
je
lods
hlt
aad
test
lret
aas
jne
dec
mov
lock
mov
mov
or
cmp
repnz
mov
and
mov
lds
addr16
inc
pcmpgtd
add
decb
and
mov
sahf
rcrl
add
mov
out
xchg
or
test
lret
iret
mov
leave
lcall
mov
mov
cmp
cmp
xchg
sub
loope
push
mov
push
lods
mov
mov
addr16
ss
jle
mov
pop
adc
pop
enter
pop
or
aam
push
ljmp
shl
gs
nop
loop
mov
les
mov
cmpsl
sub
add
stc
adc
inc
push
cwtl
sti
dec
cmpsl
fs
shrb
sbb
js
inc
loopne
cmpsb
adc
xor
hlt
and
pop
cmp
add
std
repz
push
mulb
ret
and
pop
xor
scas
xchg
mov
std
add
test
mov
roll
xchg
cltd
stc
sbb
cmp
xor
fwait
iret
pop
test
xchg
fistpll
test
xchg
add
sbb
mov
pusha
add
mov
arpl
fiadds
sahf
enter
mov
xchg
sbb
into
jg
insb
mov
out
test
push
push
fisubrl
arpl
fdivrs
nop
adc
pushf
icebp
fidivrl
hlt
popa
and
jae
and
outsl
push
mov
add
mov
mov
or
xchg
and
push
sbb
sarl
mov
adc
or
jge
jns
dec
or
lock
stos
and
mov
mov
add
test
das
je
cmc
cmpl
stos
or
jmp
fisttpll
cmp
add
mov
cltd
jecxz
dec
push
roll
inc
test
xchg
mov
xor
dec
add
add
es
jg
cmovo
mov
in
jbe
xchg
mov
movsb
hlt
mov
fdivs
pop
xor
iret
and
stos
mov
push
ljmp
or
mov
lock
scas
sub
jecxz
rol
mov
jge
push
cmc
cmc
flds
mov
clc
test
push
insl
decl
sti
cwtl
jg
push
bound
mov
push
pop
push
pushf
mov
mov
push
jno
pop
xor
mov
gs
pop
mov
call
ficomps
mov
fists
push
dec
ficoml
adc
sbb
ret
je,pt
mov
adc
add
sbb
xchg
xchg
fiadds
jne
dec
adc
stos
lock
pop
addr16
xor
sbb
dec
adc
push
xchg
cli
mov
cltd
testb
sbb
mov
mov
cs
scas
dec
lds
push
out
adc
cmpl
mov
and
lds
shll
jmp
ljmp
ja
add
mov
addb
in
mov
jne
ret
clc
int
pop
mov
jg
std
mov
movsl
lahf
pop
out
mov
add
out
mov
addl
sti
int3
jmp
pushf
pop
out
pop
sbb
lods
or
insb
jmp
jmp
testb
addb
inc
rcrb
add
xchg
movsl
hlt
outsl
sbb
movsl
xor
or
js
mov
xchg
inc
dec
icebp
les
aam
cltd
call
sub
popa
mov
xor
gs
add
inc
les
lret
xchg
sbb
mov
cmc
imul
xchg
dec
jl
mov
enter
dec
popa
adc
sbb
arpl
dec
fs
and
fwait
or
mov
mov
jo
jb
stos
call
push
pushf
sbb
inc
mov
pop
or
outsl
mov
test
dec
pop
cmpsl
sub
popf
cmp
nop
repz
fadd
scas
cmpsb
adc
data16
scas
pop
inc
pop
testb
test
or
call
lahf
popa
out
xorl
lods
mov
mov
jb
jge
push
insb
and
sahf
dec
adc
pop
adc
and
push
in
pop
cld
mov
sbb
adc
orb
or
sbb
inc
int3
dec
xor
add
pop
dec
icebp
sub
fcomip
push
into
inc
je
dec
mov
loopne
sub
stos
mov
xor
add
push
lahf
lods
out
pop
adc
loope
lods
adc
lods
cld
ss
pushf
sub
js
mov
or
mov
and
lret
fcom
je
nop
sub
and
or
shl
push
push
xor
inc
push
xchg
mov
xlat
out
scas
sbb
fwait
dec
cltd
dec
push
lcall
insl
push
pop
sbb
inc
push
stos
mov
adc
mov
jl
cmovo
int3
cmpsl
sbb
cld
arpl
pop
mov
std
or
frstor
jge
inc
pop
xchg
jecxz
sbb
mov
xor
es
lahf
or
or
insl
scas
pop
pop
cmp
dec
jg
or
sahf
rcrb
dec
adc
lahf
pop
or
cmpb
iret
repnz
mov
sub
fstl
add
add
mov
fs
decb
or
jbe
je
sbb
inc
inc
pop
sub
lods
in
test
cmp
fiadds
shll
push
add
adc
mulb
dec
fiadds
cmp
xlat
filds
mov
mov
popf
inc
rol
sub
jge
add
adc
test
mov
push
inc
insb
outsb
insl
pop
pusha
pop
jmp
inc
sbb
in
and
mov
in
or
xchg
push
out
hlt
and
jecxz
cld
fisubs
cmp
int3
cmpsl
test
or
push
idivl
pop
push
popf
insl
mov
and
or
lock
cmpsl
cmc
mov
jl
or
add
mov
pop
and
cmp
sbb
mov
testl
push
sub
inc
repnz
add
xchg
jl
in
jecxz
ret
fdivrs
mov
repz
add
sbb
xchg
fiadds
inc
push
cmp
push
sti
push
adc
loop
lods
sub
test
fildl
int3
mov
subl
insl
aam
arpl
xchg
loopne
or
out
push
fcmove
xor
jb
incl
frstor
ljmp
loope
call
mov
xchg
pop
adc
sti
sub
fists
ret
repnz
mov
xchg
push
inc
pusha
jmp
pop
add
xor
and
in
test
mov
lret
push
stos
rorb
orl
dec
jno
add
xchg
popa
mov
jmp
adc
mov
ds
rolb
cld
out
xor
add
mov
inc
dec
mov
cwtl
fnstenv
xor
mov
in
mov
cwtl
test
roll
push
sub
stos
dec
push
addr16
mov
enter
stc
xchg
int3
mov
js
adc
mov
cmp
in
dec
repnz
mov
mov
cli
sub
xchg
mov
popa
push
aad
loope
sbb
ret
pop
inc
lds
push
ja
mov
shl
jge
mov
xor
negl
and
jns
cmpsb
push
stos
xchg
dec
adc
pushf
jne
mov
pusha
adc
paddsw
inc
dec
add
les
pop
aam
addr16
pushf
and
sti
xchg
inc
sti
and
iret
push
and
push
sbb
pop
pop
push
sahf
push
xchg
loope
cwtl
cmpsb
ret
push
or
jg
repz
sbb
adc
jmp
lahf
and
xchg
pop
mov
adc
pop
pop
pop
push
adc
cmp
dec
call
pop
adc
jo
mov
fwait
xor
cs
jnp
pop
xchg
jnp
in
and
aaa
mov
adcb
sub
cwtl
inc
pop
ficoml
mov
scas
xor
push
andb
sahf
pop
test
test
out
push
imul
repz
iret
cld
xor
bound
int3
or
and
sbb
movsl
gs
push
add
lea
movsl
lcall
jns
test
in
or
cmpl
rcrl
outsb
or
or
cmp
sti
mov
jnp
cwtl
fwait
dec
dec
dec
mov
adc
iret
insl
roll
xor
ss
cmpl
cmp
lea
xchg
push
pop
sti
and
inc
call
ret
les
aaa
stc
pop
ret
lods
sbb
insl
adc
sub
ss
or
imul
fsubrl
push
jecxz
ret
repz
stos
jno
ficoml
mov
pusha
sbb
dec
jl
dec
bound
push
and
adc
add
out
pushf
ret
xchg
fsts
hlt
cli
cld
add
mov
jmp
je
push
call
testb
adcl
cmp
xchg
cmc
pop
push
out
repnz
out
sbb
jo
add
jecxz
push
int
hlt
cmpsl
je
push
filds
and
sub
and
push
rclb
out
sub
xlat
cmp
xor
jae
pop
cmp
ljmp
inc
push
jbe
xchg
ss
ret
mov
add
cld
lret
mov
lea
or
leave
insl
jecxz
cmpsb
mov
scas
sbb
jb
cmp
pop
sahf
fidivl
dec
scas
mov
and
add
inc
lods
outsb
jae
sub
cmpsb
jge
xor
in
mov
data16
stos
jge
enter
iret
dec
xchg
ljmp
stos
mov
mov
lret
pop
sub
out
lea
nop
xlat
add
xor
movq
jns
xor
or
loop
xchg
popa
sub
in
xor
cld
push
sarl
adcb
add
dec
or
ljmp
push
jecxz
out
jle
jae
jp
lcall
cmp
orl
push
mov
rorb
and
mov
mov
fwait
aaa
rcrb
inc
enter
xor
jne
pop
lds
fistpll
daa
dec
add
jo
daa
mov
sbb
jl
and
mov
xchg
sub
loopne
cmp
sbb
sbb
mov
imul
lahf
inc
notb
insb
shl
pop
add
pop
into
sahf
loope
sub
movsl
fbld
outsl
adc
aas
lods
mov
std
mov
out
jne
dec
mov
test
xor
push
popa
inc
test
jb
pop
mov
or
in
add
orl
sub
fwait
or
add
mov
rorb
movl
bound
xchg
pushf
fisttpl
mov
push
lret
and
fstpt
mov
add
test
push
lods
jmp
lret
jg
fs
push
jge
js
inc
pop
js
jmp
cmp
inc
fstpl
adc
pop
idiv
stos
push
out
mov
pop
rolb
mov
sbb
lods
or
push
pop
xchg
xchg
movsl
das
mov
ljmp
and
or
and
leave
sti
dec
jb
mov
popa
mov
int3
ret
pop
out
scas
test
xor
stc
icebp
fistpll
xchg
sarb
xchg
lock
push
hlt
cmp
inc
push
push
inc
test
mov
inc
ret
data16
loop
push
or
lahf
push
pushf
xchg
out
jp
cmp
xor
rcl
sub
popaw
insl
cmpsl
test
xor
inc
outsl
or
inc
sbb
dec
repnz
push
add
or
push
xor
xlat
loop
cld
jmp
iret
pop
adc
pop
and
int3
push
jmp
dec
jae
scas
sub
lock
push
xor
dec
mov
mulb
pushf
xor
out
pop
jmp
fldcw
cmp
mov
mov
push
add
jmp
dec
js
jne
jecxz
cmp
mov
shrb
add
inc
sub
xchg
jle
mov
jg
jo
xchg
add
mov
cmp
mov
popa
test
scas
imul
enter
loope
and
pop
push
and
adc
rcrb
add
test
data16
pop
mov
sub
in
cmpsb
aad
jp
sbb
scas
dec
insl
nop
mov
cmp
test
xchg
dec
imul
mov
movq
test
andl
and
pop
jmp
ror
in
cmp
and
jne
fists
rcl
mov
in
add
sbb
idiv
sub
pop
jno
pop
test
dec
add
out
jbe
inc
lods
push
sbb
fsts
pop
mov
sti
stc
repnz
fisubs
xchg
jnp
and
dec
int
or
adc
shll
in
mov
cmp
push
rcr
lea
mov
pop
pusha
repnz
mov
sub
cwtl
stos
cld
dec
insl
pusha
test
in
mov
jecxz
fidivrl
stos
fcomps
mov
pop
jg
in
add
pop
xor
bound
in
repz
sarl
jae
mov
andl
lahf
loopne
ja
jle
gs
pop
data16
dec
cmpsl
mov
ja
inc
sahf
add
test
int3
sahf
pop
xchg
add
add
in
add
fists
inc
adc
xlat
adc
aas
shlb
xor
cwtl
and
into
out
cmp
mov
xchg
sarl
ds
shll
data16
mov
push
pop
inc
lock
pop
lcall
cmp
mov
or
mov
lock
loope
cmp
clc
dec
fistps
mov
insl
mov
sti
mov
hlt
cli
nop
test
dec
xchg
inc
pop
xor
dec
adc
sbb
aad
test
push
xlat
fucomip
test
flds
and
pop
enter
push
mov
dec
inc
push
data16
pop
daa
fsts
std
shrb
lret
fildll
stos
jl
rorl
xchg
data16
pop
leave
xchg
js
push
out
push
mov
mov
pop
add
test
and
popf
lock
hlt
stos
and
xor
adc
cmp
orl
je
fdecstp
cmp
pushf
jns
mov
lods
dec
and
dec
std
popa
dec
mov
xor
sbb
outsb
inc
lret
mov
cs
lods
inc
clc
add
out
movsb
mov
dec
loopne
cmp
dec
iret
push
ds
gs
lods
mov
cmp
pop
add
js
push
dec
mov
inc
sbb
das
adc
loope
push
cmp
push
cltd
lods
add
pop
popf
adc
iret
pusha
xchg
push
jbe
test
mov
cmp
lock
test
mov
dec
lods
and
loop
push
dec
outsl
ret
daa
repnz
aam
leave
xchg
bound
in
mov
test
mov
pop
dec
xor
lock
push
pop
inc
dec
cmp
lock
and
pop
and
lahf
rcpps
je
repnz
adc
adc
stc
pop
ret
push
scas
mov
int
fs
imul
cmc
popf
jl
push
cli
in
sbb
call
mov
push
or
lods
xor
mov
rclb
fsubrs
imull
mov
adcb
sub
inc
inc
xchg
shlb
cmpl
popf
xchg
and
imul
leave
fldt
jbe
jp
imul
pop
xor
in
ror
mov
sbb
iret
loope
fildll
lret
pop
fdivr
mov
mov
lahf
push
mov
or
push
pop
gs
push
mov
insb
and
inc
fnstsw
scas
add
rcll
xchg
add
xchg
or
cli
jnp
or
mov
jle
mov
dec
push
aam
fldl
and
jns
jno
mov
adc
dec
xlat
je
xchg
pop
sti
fsubrs
les
in
and
scas
and
lds
jno
mov
jge
push
imul
or
xor
dec
pop
fwait
and
xchg
adc
fucomi
push
mov
lahf
xor
mov
out
insl
pop
int
xchg
shr
push
jge
xor
xchg
or
iret
fcmovnb
sbb
divb
push
push
pop
loop
push
add
ret
gs
jns
lea
nop
iret
lret
mov
pop
cmpsb
les
xor
jae
pushf
mov
ret
mov
jae
xchg
mov
adcl
pushf
mov
lret
fdivrs
cmp
shlb
inc
fists
lcall
pop
or
xchg
add
mov
mov
push
out
sbb
je
outsl
dec
in
mov
jle
add
pop
mov
inc
mov
sbbb
call
pop
push
mov
out
test
sub
pushf
mov
ret
mov
jae
push
in
jns
fisubrs
jb
push
inc
and
out
cmp
xchg
inc
push
xor
xor
pop
cld
loop
mov
stos
inc
fcompl
test
sbb
push
ljmp
mov
lods
das
inc
inc
cmpsl
xchg
add
cli
fldenv
or
out
inc
cmpsl
pop
in
jmp
mov
add
fdivs
rorl
pop
mov
mov
xchg
mov
jb
gs
bound
xchg
rcr
cs
xchg
cmp
jns
mov
loopne
mov
push
mulb
jmp
fidivs
mov
setno
inc
xchg
sub
add
leave
movsb
jae
lods
jne
and
mov
push
pop
dec
xchg
inc
repz
mov
sbb
loopne
or
fnstcw
push
negb
imul
dec
mov
scas
lods
jecxz
sbb
pop
pop
clc
les
jae
mov
ret
aas
out
lahf
adc
inc
add
inc
adc
and
inc
sbb
jne
push
loope
add
xchg
inc
xchg
fstps
shr
dec
addr16
adc
xchg
push
xchg
stc
mov
sbb
into
mov
in
dec
cmp
mov
sub
inc
test
and
in
xor
push
iret
xchg
aad
cmp
cltd
ds
loopne
xorb
in
data16
add
loop
call
lods
and
aam
scas
test
inc
repz
or
sub
inc
sub
xor
mov
mov
dec
adc
cmp
jl
or
or
mov
shlb
rorl
pop
cmp
sub
out
mov
fs
popf
fists
mov
push
fisubrl
sub
pop
sbb
repz
xchg
shrl
mov
pop
ss
mov
int3
pop
jae
push
popf
add
or
cmc
leave
mov
jnp
xor
or
es
mov
add
jp
cltd
cmp
mov
aaa
imul
jl
fisubrl
mov
pusha
dec
mov
mov
or
and
sub
mov
hlt
sarl
xor
loopne
in
scas
mov
pop
sbb
jnp
pop
nop
lock
imulb
repz
xchg
outsl
pop
or
pop
ljmp
cmpsb
sar
jle
nop
add
pushf
jle
add
cmp
les
pop
int
in
fistps
add
mov
outsb
push
cmpsb
mov
mov
mov
loope
pop
cli
imul
shr
mov
sub
aam
jmp
lret
add
mov
pop
fidivs
movsb
jbe
int
in
int
std
dec
and
or
fistps
push
ds
out
in
idivb
cmp
mov
test
xor
cmp
xchg
ret
sbb
test
int3
sbb
pop
sbb
xor
push
nop
lds
sbbb
mov
sarl
test
jmp
jae
inc
add
movsl
xchg
aam
stos
or
test
push
data16
xor
test
pop
lret
fwait
pop
enter
stc
and
dec
dec
lods
xchg
out
add
cwtl
les
sbb
fisttps
cwtl
add
and
mov
lds
cmc
and
mov
jmp
sub
in
inc
xor
jb
sub
adc
sbb
and
xchg
jbe
add
jle
add
jnp
xor
sbb
scas
xchg
lods
cwtl
aam
push
rorl
jbe
pusha
mov
sub
pop
addr16
mov
inc
std
xor
mov
cmp
pushf
pusha
call
or
mov
or
addr16
mov
cmp
jae
lret
scas
and
cli
test
cmpsl
sub
es
sbb
cmp
subl
cmp
test
pushf
mov
pushf
push
mov
sub
xchg
call
stos
in
lahf
icebp
arpl
stc
cs
outsb
sbb
and
and
dec
mov
cmp
outsb
xor
add
mov
add
mov
sahf
out
test
jbe
test
dec
cmp
sti
cmp
bound
in
lds
mov
dec
jns
mov
imul
jbe
loop
mov
sbb
test
add
out
scas
mov
rclb
sub
push
push
cmp
xchg
mov
les
pop
cwtl
add
pop
pop
inc
mov
arpl
into
cmc
pusha
xlat
jns
lods
ret
pop
pusha
add
cmpsb
hlt
pop
mov
outsl
add
cmc
mov
cmp
fcoml
movsb
testl
data16
dec
jno
adc
enter
mov
je
cwtl
setns
mov
adc
pop
cmp
pop
push
test
pop
loopne
add
icebp
ljmp
pushf
xchg
mov
sub
adc
pop
or
nop
repnz
imul
sub
fwait
mov
popf
xor
stc
addr16
cmp
or
fs
cmp
out
inc
push
jp
iret
inc
pop
ljmp
lea
add
cmp
pop
subl
cmp
jmp
lods
mov
pop
frstor
mov
inc
xor
add
out
enter
sub
popa
inc
movsb
mov
fcoms
jnp
adc
add
outsb
into
inc
cwtl
push
sbb
mov
std
rorl
gs
call
push
int
jecxz
sbb
int3
imul
pop
xor
cmp
minps
mov
or
repnz
mov
pushl
inc
dec
xor
mov
jmp
movb
mov
lahf
mov
nop
pop
xchg
mov
das
aas
inc
fisubrl
jge
mov
adc
adc
jns
rorb
fsubs
lcall
inc
mov
xor
push
iret
pusha
mov
pop
adc
mov
mov
pop
mov
sbb
das
xor
adc
andb
mov
cmp
ds
pop
cwtl
mov
shl
mov
jo
icebp
jbe
push
movb
in
repz
repnz
xchg
sbbb
mov
push
aas
jnp
jb
pop
ds
mov
xor
dec
sbb
dec
icebp
rcrb
add
and
cmpsl
pop
dec
cmp
jno
lahf
data16
pop
adc
or
imul
dec
subl
cs
add
dec
int
jns
scas
jno
dec
push
insl
dec
test
hlt
adc
inc
sahf
mov
sbb
jp
xchg
aad
fisubl
loopne
daa
fmull
or
lock
imul
test
sbb
stos
jl
sbb
sahf
mov
pop
mov
xchg
and
jecxz
mov
add
shrl
dec
imul
js
adc
shr
mov
lds
cmpsb
bnd
mov
push
cmpsb
fmuls
cmp
jge
sub
or
xchg
int3
hlt
mov
or
push
fwait
icebp
jecxz
mov
push
pop
out
sbb
jb
outsl
pop
sti
int
xor
dec
stos
or
cmp
mov
in
inc
cli
jns
xchg
sbb
icebp
ret
cmp
aad
jbe
cmp
stos
out
js
cltd
movsb
fnsave
std
jne
in
je
insb
and
xor
mov
subb
or
xor
mov
and
push
fnstsw
shr
cmp
pop
fdivrp
xchg
jl
jge
lret
clc
pop
xor
test
sbb
inc
pushf
lods
movsl
loope
push
push
jae
dec
mov
icebp
int3
mov
mov
xchg
xchg
daa
and
loope
dec
repz
out
mov
push
testl
mov
pop
xchg
insb
xchg
add
dec
add
push
dec
jmp
pop
mov
push
inc
push
les
lock
ljmp
stos
xchg
dec
lods
insb
imul
push
xchg
sahf
loopne
aad
jbe
addb
and
or
jg
sbb
xchg
lret
sub
mov
lock
fcmovnb
cmp
mov
inc
repz
xchg
sbb
pop
mov
das
pop
es
popf
jecxz
stos
inc
adc
out
ja
or
xor
adc
bound
xchg
leave
mov
jge
adc
imul
or
inc
xor
xor
xchg
cs
push
adc
in
and
cmc
fsubl
xor
insb
ds
pop
cmp
sub
subb
or
push
sbb
lock
out
and
shl
adc
loope
bnd
outsb
ss
pop
pop
inc
cli
push
movl
das
inc
mov
sbb
mov
jno
push
sbbb
mov
push
pop
pusha
xchg
sahf
push
jg
cwtl
mov
hlt
add
out
sbb
loopne
pop
in
ret
mov
or
or
lods
inc
sbb
cmp
or
lret
fisttpll
stos
jg
add
cmp
test
in
push
jmp
popf
call
test
mov
pop
popf
sub
push
sub
stos
fnstenv
sbb
pushf
bound
or
fistl
jbe
jns
jmp
and
pop
jb
lret
filds
lret
ja
je
cmp
inc
lock
jmp
test
mov
xchg
xor
dec
mov
paddusw
jne
rorb
in
sbb
sbb
sti
mulb
movsb
mov
mov
mov
lds
sub
call
test
in
mov
or
jbe
push
jge
popa
mov
cmc
out
popl
std
cmp
push
js
lods
lea
orb
or
cmpsl
jl
fwait
jg
insl
stc
mov
sbb
mov
loopne
or
jb
cmp
add
mov
insb
stos
das
xlat
sbb
push
add
loope
repz
fldl
and
push
mov
push
aas
dec
jle
cld
lret
addb
and
xchg
push
push
cmp
repnz
inc
call
add
or
xor
adc
push
jmp
pop
mov
xchg
pop
lcall
xchg
cld
aad
popa
jne
dec
jecxz
repnz
inc
js
ja
mov
or
pop
test
push
sti
addr16
mov
sbb
adc
mov
mov
mov
cld
cmp
into
mov
jae
fucomp
mov
js
mov
mov
push
pushf
mov
out
movsl
or
or
addb
inc
dec
shll
mov
jo
icebp
cmp
or
sub
into
cmp
push
sub
cmc
add
imul
cmp
adc
xchg
sub
inc
mov
jecxz
xchg
bound
pop
or
les
aaa
movsb
loop
dec
sarb
arpl
sub
insb
xor
sub
into
lea
xchg
add
pop
pop
xchg
xor
sub
icebp
fldt
cmp
insl
mov
xchg
outsl
cmpsb
push
add
std
mov
cli
imul
popf
cltd
loop
sbb
push
pop
or
sub
imul
cmpsb
push
sbb
xor
jp
jle
idivl
mov
pop
cmp
mov
outsb
jb
mov
mov
adc
mov
mov
sbb
xor
sub
mov
xchg
xchg
inc
jge
dec
lock
cmp
imul
jns
loop
add
test
pop
loopne
pop
mov
rcr
cltd
or
lds
mov
push
sbb
outsb
outsb
add
ret
sbb
rcl
aad
test
cwtl
adc
adc
xor
pop
jbe
cmp
mov
pop
xchg
add
es
pop
rcll
in
xchg
and
push
inc
adc
mov
push
jnp
loopne
sahf
pop
add
adc
fidivrl
mov
fsubrl
jg
jnp
hlt
addr16
scas
push
inc
pop
mov
add
js
xchg
and
sti
jmp
cwtl
xchg
cmp
xor
jns
push
push
inc
cmpsb
pop
gs
or
cmp
lea
cwtl
xchg
mov
mov
clc
and
movsl
dec
out
adc
push
cmp
iret
das
bound
das
push
sti
shl
gs
jb
sub
rcrb
xor
je
test
in
stc
xor
push
mov
stos
sbb
std
xchg
and
std
mov
adc
pmulhw
pop
mov
ret
cmp
movsl
testl
loope
lea
loop
xor
pop
fidivrs
push
fsubrs
xlat
in
vpaddsb
or
xchg
lcall
pushf
out
xchg
and
xchg
push
loope
adc
xor
sbb
add
dec
and
pop
rcrb
fdivp
push
xchg
ds
addr16
frstor
push
mov
rolb
xchg
jl
cwtl
push
pop
push
push
mov
ret
cs
dec
xor
xor
mov
shl
cmp
xor
mov
mov
mov
fistps
inc
int
cs
xor
ds
lock
push
pop
mov
push
fcoml
push
scas
mov
in
orb
jae
popf
mov
add
sbb
jo
fistl
xchg
add
dec
pop
inc
clc
out
inc
cli
cmp
push
push
push
push
lahf
cs
ret
test
or
lods
stc
jmp
dec
dec
adc
lods
jo
jp
xchg
imul
in
and
lahf
pop
inc
and
xchg
mov
scas
jmp
mov
repnz
adc
xlat
or
sbb
push
in
imul
mov
and
insb
leave
out
add
out
lret
pop
mov
lahf
mov
lret
xchg
xor
add
dec
aam
orl
in
rcl
push
and
rcll
cmp
mov
lea
or
icebp
and
push
xchg
jg
jg
push
ss
xor
mov
testl
loope
mov
and
stos
mulb
or
insl
sbb
daa
lret
jecxz
jl
adc
pop
xchg
gs
mov
das
or
jb
xchg
and
push
mov
lret
mov
add
pusha
maskmovq
testl
pusha
xchg
das
pushf
in
clc
sub
pushf
lea
xchg
jo
push
inc
push
xchg
sub
sub
in
mov
inc
inc
std
es
xchg
lret
fisubrs
ljmp
push
xor
jle
gs
jecxz
xchg
lahf
push
add
pop
pushl
sbb
push
hlt
clc
xchg
lea
outsl
xor
cs
pop
sahf
testb
pop
fcomps
ljmp
daa
sahf
sbb
fistpll
out
mov
fisubl
push
scas
cld
out
jo
push
inc
hlt
xchg
aam
rol
xlat
jle
ljmp
int
mov
sbb
nop
xchg
gs
jae
cmp
ficoml
adcl
pop
lods
xor
jns
scas
xchg
shll
adc
push
aas
repz
sbb
mov
xchg
sbb
xchg
xchg
rclb
mov
out
sub
hlt
pop
dec
xor
cmp
mov
mov
inc
mov
aad
add
pop
stos
aam
out
rorb
outsl
enter
stc
daa
int3
or
test
sbb
cmp
cwtl
inc
lahf
ljmp
mov
inc
jnp
inc
std
cmp
cld
rcr
xchg
aaa
repnz
and
sbb
inc
mov
jl
jb
lea
fisubs
mov
push
cwtl
outsl
xchg
cmp
mov
sub
mov
or
or
adc
orl
inc
mov
mov
xchg
pop
xor
daa
imul
jb
sarb
movsb
dec
scas
test
rolb
mov
repnz
stos
and
mov
pop
lock
lahf
mov
ljmp
jb
fs
cmpsl
mov
popa
insb
dec
pop
test
cmp
dec
pop
cmpb
xchg
xchg
ljmp
jno
xchg
jb
cwtl
xlat
pusha
insb
xchg
add
in
push
cmp
lock
mov
lock
add
mov
dec
inc
and
push
jp
lret
shll
pop
in
sbb
cld
cld
sbb
loope
cli
arpl
push
xlat
xor
jecxz
iret
pop
movsb
jae
arpl
repnz
push
fisubrl
stos
nop
hlt
add
dec
outsl
rol
or
mov
testb
adc
pop
lea
or
push
scas
jae
addr16
mov
sub
leave
sbb
cs
mov
pop
jg
addr16
aas
sbb
cli
jbe
fmull
mov
and
out
dec
jmp
or
push
xchg
out
xor
fwait
imul
sbb
daa
mov
push
jle
pop
xlat
pusha
inc
or
les
add
cmc
pop
mov
sub
mov
mov
int3
xchg
or
imul
daa
pop
dec
push
adcl
mov
je
addl
repz
adc
out
sahf
xor
cmp
adc
pop
in
sub
aad
pop
mov
int
cmpsb
push
in
subb
fstpt
int
and
mov
push
mov
div
repnz
test
popf
clc
jae
pop
or
out
or
fsts
sbb
cmpsb
repnz
jns
push
add
sub
pop
mov
lods
xchg
in
jbe
sti
or
ret
stos
js
and
sarl
rol
push
fmul
add
push
std
ljmp
push
push
lcall
xor
inc
aaa
inc
xchg
push
mov
push
mov
leave
std
sub
pop
loope
and
pop
xor
sub
test
insl
adc
lea
push
lret
xor
jp
arpl
jne
pop
dec
les
je
xor
push
push
jno
xor
mov
aaa
jno
push
stos
stos
ja
ljmp
xchg
out
icebp
cmp
cs
and
push
mov
xchg
rcr
lahf
jae
into
ja
psadbw
xchg
push
mov
mov
daa
test
dec
sbb
out
es
mov
sub
push
movl
jle
shr
in
nop
mov
imul
xor
cli
pop
cmp
stos
inc
xchg
sbb
popf
push
sub
fprem
jl
sub
pop
xchg
add
inc
xchg
in
fsubrs
ja
lods
or
jmp
repnz
aad
and
adcb
repz
gs
imulb
popa
mov
punpckhdq
dec
jg
sbb
jge
lret
dec
stos
mov
fcoml
andl
rcl
jno
stos
outsb
jl
cli
iret
mov
lea
add
lea
lret
inc
outsl
or
int3
jb
cld
fidivrs
mov
jne
sub
mov
inc
mov
add
stos
cmp
imul
shl
adc
stc
out
insl
lods
and
mov
icebp
jmp
daa
pushl
dec
movsl
in
cltd
daa
imul
mov
movsl
into
jne
dec
daa
sbb
mov
int
inc
nop
bound
rcll
jo
js
xor
add
daa
pushf
ret
data16
push
mov
lock
sub
xchg
outsl
xor
mov
pop
adc
fsubp
mov
cwtl
mov
jnp
lahf
push
loop
mov
push
jo
pop
and
lcall
pop
pusha
xorl
pop
or
jge
out
inc
xchg
pop
push
mov
fidivs
cmp
mov
and
cmp
sahf
sbb
jno
ss
cmc
xchg
mov
fisubs
push
jmp
add
arpl
ss
push
fwait
addr16
jp
fsubl
jle
mov
rcrb
sbb
inc
fsubr
lahf
push
movsb
mov
jmp
lret
dec
dec
scas
push
enter
fdivrp
jb
stos
lahf
mul
cmpsb
mov
inc
xor
les
inc
adc
lret
inc
or
cmp
lret
adcl
addl
xchg
mov
fwait
adc
in
fmull
mov
fiadds
or
add
mov
stc
sub
jnp
sub
add
jecxz
adc
mov
lahf
sbb
stc
out
arpl
test
pusha
movsb
jbe
ret
pop
stos
push
sbb
jecxz
scas
test
add
int3
add
lods
and
adc
orl
lea
aam
mov
call
mov
movsb
fstps
or
xchg
or
adc
or
das
jne
cmc
pop
jns
dec
sti
mov
int
mov
das
fstl
push
inc
das
outsl
fcomps
outsl
clc
dec
mov
ljmp
icebp
fcmove
call
cwtl
push
test
cli
cmp
push
sbb
cwtl
mov
leave
xor
mov
jge
pop
clc
cmp
or
sub
outsb
xchg
or
decb
inc
sub
mov
out
iret
aas
aam
mov
xor
add
icebp
ljmp
fdiv
and
xor
in
ds
lret
pusha
call
adc
mov
jp
xlat
mov
std
pop
or
fisttpll
testl
les
mov
xor
inc
negl
lock
jmp
in
mov
mov
xor
leave
inc
inc
int3
in
icebp
in
jle
or
mov
adc
jnp
or
and
pop
push
movsb
and
mov
mov
pop
mov
jecxz
das
push
fidivrl
int
mov
cwtl
sarb
lods
mulb
xor
xchg
int3
jle
mov
and
rorb
jno
in
imul
scas
loopne
xlat
out
push
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
add
lea
mov
dec
mov
inc
dec
cmp
cmp
push
fidivs
xchg
cmpsl
or
jle
and
jp
lock
pusha
popf
cltd
add
push
mov
pusha
xchg
cmpsl
or
jle
and
jp
call
iret
rcr
out
push
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
movsl
xchg
fisubrl
mov
movsl
xchg
fisubrl
mov
movsl
xchg
fisubrl
mov
movsl
xchg
fisubrl
mov
movsl
xchg
fisubrl
mov
movsl
xchg
add
or
pop
call
leave
es
mov
ret
mov
movsl
xchg
fisubrl
mov
movsl
xchg
fisubrl
mov
movsl
xchg
test
mov
ret
mov
movsl
xchg
fisubrl
mov
movsl
xchg
fisubrl
mov
movsl
xchg
xlat
out
push
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
ss
les
mov
jl
sbb
or
int3
leave
jl
sbb
les
mov
jl
sbb
les
mov
jl
sbb
les
mov
jl
sbb
or
out
push
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
fnsave
or
push
jne
loop
lcall
mov
adc
nop
fsubp
mov
sbb
add
adc
add
cmp
cld
adc
sub
in
pushf
xchg
repnz
test
inc
movsb
mov
mov
ficomps
or
mov
and
push
adc
das
insb
fistpl
mov
test
sub
rorl
dec
data16
cltd
repz
pop
loop
or
and
repnz
fbld
jno
pop
dec
sub
sti
loope
repz
addr16
test
lds
xorb
out
mov
and
cs
mov
fdivp
sahf
insb
or
insl
aaa
mov
lcall
push
scas
test
pop
lcall
hlt
inc
jbe
test
out
std
hlt
es
cld
sbb
daa
mov
fsubs
push
aas
mov
pop
popa
cmpsl
mov
imul
out
jae
pop
pop
mov
fsubs
pop
movsl
or
mov
mov
dec
cmp
sbb
inc
jb
push
js
pop
mov
movsl
lret
fldl
insl
add
hlt
mov
and
pop
push
nop
movsl
lret
fldl
pop
cli
iret
sti
out
dec
lret
cmp
sahf
add
or
mov
adc
in
or
test
por
pop
divb
ja
pushf
push
or
scas
or
dec
mov
mov
out
mov
hlt
stos
mov
pop
and
xchg
out
out
inc
jle
and
jp
mov
jnp
mov
push
xchg
cmpsl
or
jle
and
jp
fidivrs
bnd
push
movsb
inc
pop
mov
outsb
fnstsw
aas
and
stos
mov
clc
mov
push
in
inc
daa
adc
jg
cltd
fsubrs
cmpsl
inc
pop
and
int
cltd
sub
add
movsl
test
imul
out
xchg
imul
jle
in
movsl
scas
ret
xor
jo
pusha
sub
sbb
sub
test
mov
mov
lea
inc
out
outsl
in
dec
dec
cmp
add
or
mov
adc
in
or
test
por
pop
divb
ja
pushf
push
or
scas
or
dec
mov
mov
out
mov
hlt
stos
mov
pop
and
xchg
out
out
inc
jle
and
jp
mov
jnp
mov
sbb
inc
inc
addr16
dec
sub
fs
and
loop
pushf
hlt
cmpsb
mov
into
test
xchg
push
movsb
inc
pop
mov
outsb
fnstsw
aas
and
stos
mov
clc
mov
push
in
inc
daa
adc
jg
cltd
fsubrs
cmpsl
inc
pop
and
int
cltd
sub
add
movsl
test
imul
out
xchg
imul
jle
in
movsl
scas
ret
xor
jo
pusha
sub
sbb
sub
test
mov
mov
lea
inc
out
outsl
in
dec
dec
cmp
add
jno
xlat
out
push
lods
and
adc
lods
and
adc
lods
and
adc
inc
mov
xrelease
xchg
mov
lods
and
adc
lods
and
adc
inc
mov
push
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
or
push
lods
and
adc
lods
and
adc
lods
and
adc
inc
jbe
or
out
push
lods
and
adc
lods
and
adc
inc
mov
addr16
xlat
out
push
lods
and
adc
lods
and
adc
adc
addr16
adc
stc
loop
stc
xlat
out
push
lods
and
adc
lods
and
adc
int3
add
xchg
mov
add
xlat
out
push
lods
and
adc
lods
and
adc
call
lea
or
out
push
lods
and
adc
lods
and
adc
mov
incb
adc
arpl
xlat
out
push
lods
and
adc
lods
and
adc
xlat
int3
inc
jnp
xlat
outsl
or
sti
pushf
lods
xlat
out
push
lods
and
adc
lods
and
adc
cwtl
pop
inc
lods
cmpsb
ja
or
fisttpl
adc
and
into
push
rorl
lret
jl
daa
add
jle
jl
daa
add
jle
pop
pop
adc
and
mov
lret
jl
daa
add
jle
jl
daa
add
jle
pop
orb
dec
stos
not
out
push
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
mov
jmp
test
jne
sub
xchg
dec
paddsb
out
sbb
pop
and
sbb
pushf
mov
push
mov
sbb
add
jbe
dec
sbb
shl
hlt
adc
cs
adc
je
and
add
mov
adc
out
daa
dec
pusha
ss
mov
push
imul
imul
mov
scas
and
xchg
clc
sub
mov
or
test
rorb
sarl
ret
xchg
negl
push
mov
into
loopne
addl
xchg
insl
test
xlat
dec
in
sbb
push
mov
or
jb
bound
jnp
adc
mov
arpl
int3
dec
loope
popa
push
loopne
add
cmp
sbb
jp
xchg
mov
push
insl
push
jbe
fiaddl
cmp
into
pop
push
fcmovne
push
pop
adc
in
sub
hlt
add
or
or
jns
fpatan
into
sahf
mov
jbe
mov
sbb
pop
mov
sbb
nop
jns
je
push
dec
xchg
mov
jle
push
jmpw
sbb
add
outsl
mov
aas
inc
pop
adc
imul
dec
dec
pop
popl
cmp
outsl
jmp
push
sub
outsb
mov
in
sahf
test
cld
repz
pop
sub
xor
pop
xchg
test
xlat
adc
sarb
sbb
lds
jmp
out
push
lods
lret
test
lods
mov
cmp
fdiv
ljmp
imul
cmp
jno
cmc
imul
pop
lahf
sahf
xchg
ss
je
xlat
in
mov
cmp
fldt
jmp
bound
mov
jnp
in
mov
int
pop
filds
mov
int3
adc
add
pop
mov
and
lea
clc
bound
rol
xchg
stos
mov
rcl
xchg
mov
inc
aaa
cltd
jp
in
pop
or
push
or
imul
adc
cmpsb
inc
cli
out
mov
jecxz
imull
lock
xor
mov
dec
lahf
in
push
xchg
adc
push
adc
sbb
dec
ret
mov
out
mov
mov
fwait
xor
inc
js
jbe
xchg
nop
cs
push
ss
push
popa
fistpl
out
imul
ret
xlat
jle
cltd
inc
add
adc
pop
loope
cmpsl
mov
add
jmp
pop
lock
test
and
lock
mov
or
sahf
sub
loop
jp
push
insl
stc
pop
int
lods
mov
mov
mov
adc
sbb
pop
popa
mov
pop
cs
mov
es
mov
enter
cltd
fistl
cmc
stc
jg
push
jnp
ljmp
push
imul
sub
fsubrs
inc
push
pop
loope
inc
inc
jo
das
out
dec
add
and
addr16
cli
cli
movsb
mov
xchg
fcmovbe
and
in
adc
mov
add
mov
xchg
scas
lods
shrb
mov
iret
push
dec
adc
lret
sbb
xchg
jbe
push
nop
xchg
mov
sbb
push
lods
mov
mov
fdiv
mov
jl
xchg
mov
jle
xlat
daa
or
movsb
or
fdiv
decl
push
mov
int3
pusha
ja
xchg
loop
sub
pop
nop
dec
cwtl
addr16
xchg
lds
mov
mov
mov
fcmovne
sahf
or
cmp
das
fwait
pop
dec
ss
ja
dec
or
lahf
jmp
sub
pop
xchg
sbb
mov
push
jns
nop
out
dec
inc
ljmp
cs
mov
int3
out
push
ja
mov
jp
ror
stos
rolb
sub
xchg
xor
stc
sbb
xchg
or
mov
jp
sbb
sarb
mov
sub
loop
or
mov
or
sarb
or
aad
dec
js
es
jp
outsb
push
push
jge
mov
scas
in
or
rcll
adc
in
mov
adc
pop
test
outsb
ss
dec
out
bnd
cmp
mov
fisttpll
xchg
mov
xor
pop
mov
sbb
fst
mov
faddl
jne
sub
fmulp
cli
cmp
shl
mov
subl
or
insl
pushw
in
jl
xor
add
sbb
or
out
adc
ret
sub
popa
cltd
jle
add
xchg
stc
cmp
cltd
adcb
outsb
mov
push
jbe
push
rorl
outsl
add
xchg
jp
inc
lahf
pop
xlat
pop
adc
fdivs
inc
mov
jae
xchg
add
sub
insb
jle
pop
mov
test
sbb
jb
mov
dec
adc
dec
sbb
mov
mov
and
pop
sbb
jmp
nop
sbb
clc
jnp
pop
mov
aad
mov
std
sub
push
add
fidivl
pop
inc
and
into
xchg
pop
cmp
add
outsl
sub
inc
ljmp
pop
aas
pop
xor
rolb
outsl
sbb
cli
mov
sub
lret
rorb
xlat
xchg
fnstcw
int
outsl
add
aad
cmpsb
idiv
pop
shrb
icebp
jbe
lock
xor
ss
test
js
out
arpl
aas
push
xor
scas
mov
dec
out
xchg
test
xchg
mov
jae
adc
insb
jns
in
and
sbb
sti
mov
or
int
test
dec
xor
cmpsb
stos
jb
pop
mov
cmpsl
loop
mov
cmp
inc
roll
addr16
or
popf
jbe
mov
mov
fildll
test
das
xchg
inc
pop
in
xor
test
cltd
xor
xchg
les
pusha
dec
popf
push
adc
xlat
test
sub
pop
xorb
or
cmpb
mov
mov
mov
adc
incb
and
mov
fst
sub
repnz
cmpl
jle
xchg
shll
pop
adc
mov
pop
xchg
pop
xor
inc
dec
mov
jg
mov
xor
sub
hlt
cmp
xor
inc
nop
and
outsb
mov
int
sub
or
ljmp
lock
leave
cmp
and
mov
lock
std
je
xchg
fistl
enter
ret
ljmp
test
xchg
imul
lret
jbe
sub
movsl
popf
das
in
stc
pop
mov
xchg
mov
pop
mov
mov
pusha
pop
pop
dec
push
movsb
xchg
shl
rorb
jbe
je
enter
roll
ficomps
cmc
call
enter
shll
sti
inc
or
xchg
mov
pop
pop
pop
es
xlat
es
or
data16
out
mov
jne
sbb
aaa
aas
xchg
scas
xor
ds
in
mov
dec
pop
xlat
sub
push
xrelease
movsb
push
jno
mov
lods
fs
xorl
or
rolb
mov
push
mov
aam
and
clc
je
lods
jmp
or
insb
sti
mov
mul
jbe
sub
test
dec
es
movaps
movsl
pushf
cs
cmp
mov
sub
dec
test
out
cmp
and
sarl
inc
mov
mov
mov
fdivrl
movsb
lods
ss
scas
jbe
sub
mov
insb
and
cmp
iret
dec
sub
mov
xor
push
xchg
xor
mov
xor
pop
mov
jmp
popa
dec
fstpl
cltd
and
and
lahf
sbb
inc
xchg
fsubrs
mov
pop
sbb
lret
xor
xor
dec
mov
adc
addr16
mov
icebp
xor
scas
test
inc
mov
clc
insl
sbb
jmp
pop
rcl
movsb
jecxz
cmp
shlb
xlat
jo
movsb
dec
mov
mov
xor
sbb
arpl
sub
xchg
and
push
loopne
or
xchg
and
push
test
out
xlat
out
push
lods
and
adc
lcall
stc
push
insl
and
fcoms
inc
cmp
jmp
lret
mov
add
adc
or
xchg
repnz
scas
inc
inc
xchg
movsb
out
popa
cmp
jb
loop
leave
movb
fsubs
cmpsl
ret
adc
push
movsl
cli
pop
xor
fsubs
cmp
mov
mov
pop
xor
fsubs
and
outsb
js
jmp
lahf
and
popf
out
cwtl
mov
cmp
lahf
and
popf
out
cwtl
and
inc
dec
roll
ret
cmpsb
into
rcl
test
pop
lock
pop
mov
enter
ljmp
sub
adc
ds
repz
xor
ret
lret
mov
loopne
sub
stos
mov
aas
push
hlt
loop
popa
sahf
sbb
and
adc
push
rclb
jmp
sbb
jp
mov
mov
mov
mov
lahf
mov
mov
xchg
icebp
inc
icebp
mov
lea
movsl
mov
lret
out
pop
mov
mov
or
push
fld1
inc
int3
arpl
xor
lea
movsl
mov
lret
xchg
or
xor
sahf
push
fbstp
aaa
and
gs
cmpsl
test
leave
pop
es
fs
mov
mov
rolb
in
mov
out
mov
into
cld
hlt
add
sub
xchg
mov
je
xor
mov
add
test
cwtl
mov
push
sti
lahf
cltd
or
int
cwtl
and
outsb
jnp
leave
mov
dec
dec
das
push
xor
cmp
mov
sub
test
pop
add
xchg
sbb
insb
outsl
scas
adc
fdivrl
jns
push
in
dec
add
aaa
xchg
cmpsb
jle
enter
pop
ja
pushf
movb
jb
mov
leave
sbb
roll
xlat
out
push
lods
and
adc
jecxz
adc
and
push
imulb
fiadds
pushf
mov
loope
rol
aam
test
inc
xchg
dec
or
mov
sbb
adc
mov
jae
mov
lea
sbb
xchg
imul
add
push
js
jecxz
gs
xor
xor
out
movsb
into
ja
add
xchg
mov
movsb
scas
inc
push
out
dec
cltd
jns
sbb
xchg
andl
and
push
orl
push
je
ss
andl
push
xchg
outsb
inc
jb
cli
in
cmp
dec
xchg
sbb
push
xor
sub
cltd
adc
jae
add
push
stos
mov
pop
push
in
test
cmp
inc
cpuid
sbb
jg
imul
inc
ret
mov
daa
lret
loop
enter
imul
addr16
aad
ja
dec
stos
xchg
sub
pushl
jns
lahf
dec
cmp
pop
testl
test
fldenv
mov
mov
cmp
add
mov
xchg
repz
cmp
std
pushl
add
sub
rcrb
fadd
push
xchg
push
stos
or
andl
push
mov
out
adc
inc
jns
stos
je
movsl
std
loopne
inc
fnsave
pop
pop
mov
sub
aas
or
movsb
sbb
arpl
xchg
cmp
bound
bound
repz
cmpsb
movsb
xor
fistps
lods
sub
repz
stos
cmp
icebp
mov
xlat
push
popf
insl
leave
movsl
rol
lods
lret
or
inc
xchg
mov
sbb
xorb
and
cmpsb
mov
pop
mov
jbe
pop
ret
cmpsb
xchg
xchg
aas
lcall
imul
push
out
xorb
xchg
inc
mov
fsubs
iret
xchg
inc
aaa
test
inc
push
xor
iret
out
xchg
movsl
inc
mov
cld
add
xchg
mov
pop
fistpl
pop
popa
fdivp
jg
xor
sahf
sbb
lock
sub
outsb
shlb
or
push
inc
pusha
xchg
call
stos
and
lock
xchg
and
push
loopne
or
xchg
and
push
mov
sbb
divb
mov
sub
pushf
enter
jmp
rol
out
aaa
mov
dec
cmp
mov
arpl
test
push
dec
int3
cmp
inc
cli
add
adc
les
daa
xor
jnp
std
mov
mov
ret
add
lods
shlb
in
pop
dec
jle
mov
cmp
push
xchg
xorl
mov
lret
sbbl
mov
inc
call
dec
jnp
in
adc
out
je
jp
in
jo
pop
sbb
add
loope
js
push
into
ret
jno
out
mov
xchg
call
cld
jg
scas
add
shll
mov
adc
sub
in
inc
inc
dec
std
cmpsl
jl
hlt
lock
xchg
and
test
loopne
scas
pop
dec
das
lock
adc
push
jnp
and
repz
sub
ss
pop
jg
sahf
pop
lret
push
cmp
mov
jo
ret
inc
insb
and
test
add
js
in
call
cmc
xor
rorl
adc
push
mov
into
rcl
test
push
mov
jae
mov
sbb
inc
aas
add
into
pop
popa
add
mov
shrb
rclb
push
add
mov
imul
incl
cld
popa
in
xor
imul
mov
jns
or
jmp
pop
add
nop
mov
jne
outsb
insb
arpl
outsl
jne
push
add
inc
cld
sub
jno
ss
je
ret
or
addr16
mov
mov
cwtl
xchg
pop
cwtl
notl
xchg
xlat
mov
ret
lds
test
sbb
fcompl
cmpsl
sbb
or
mov
test
lcall
shl
sbb
inc
adc
loope
jg
fcmove
cmp
in
mov
scas
popf
lcall
cld
push
pop
pop
mov
pop
sbb
jo
jns
fld
inc
aam
dec
sub
frstor
fiaddl
sahf
pop
data16
pop
xor
popa
outsl
aam
aad
mov
stos
ljmp
fisttpll
rdtsc
xor
nop
orb
mov
inc
je
adc
add
jl
arpl
xchg
aaa
test
mov
aam
push
pop
pop
inc
pop
xchg
popa
and
in
clc
mulb
xchg
mov
in
mov
int3
cmp
dec
cmp
addl
push
or
pop
repnz
push
xor
imul
jge
outsb
mov
in
xor
loop
adc
cmpsb
lcall
mov
pop
imul
jp
lea
sub
pushf
dec
sub
lahf
mov
add
lods
mov
xor
adc
or
cmp
sub
mov
cli
iret
jbe
xchg
dec
repz
mov
mov
or
mov
idivb
loopne
daa
repnz
aas
add
or
or
rcrl
cmpb
mov
sub
xorl
jae
hlt
pop
mov
insl
gs
or
pop
dec
mov
cmpsb
add
cmp
clc
cwtl
mov
clc
xor
pop
addb
mulb
out
movsl
adc
outsl
test
movsb
das
sbb
pop
mov
out
sti
popl
cmpsb
mov
mov
lret
jae
scas
fisubrs
cmp
mov
jbe
mov
rcrl
jmp
sbb
fsub
shlb
push
mov
cmp
adc
int3
xchg
jne
sbb
sub
cli
cvtdq2ps
out
mov
js
push
test
jno
mov
fistpll
clc
js
outsb
inc
shll
outsb
adc
xchg
sub
lcall
sbb
fstpl
mov
dec
sub
sub
jp
movsl
jecxz
xchg
xor
push
mov
js
add
push
in
dec
movb
ret
xor
or
cmpsb
or
add
out
adc
sub
sub
or
xchg
cwtl
lret
fcomi
sti
cwtl
dec
xor
jl
jns
lods
inc
mov
jl
push
movsl
shl
incl
fwait
sahf
pop
xor
jmp
mov
loope
and
les
mov
mov
mov
adc
jne
enter
mov
je
pop
add
jno
addl
testl
arpl
in
inc
push
int3
pop
xchg
int
inc
mov
in
les
add
cmp
scas
jge
dec
xchg
iret
cmp
push
ljmp
xorb
push
orl
or
icebp
xchg
mov
rcr
mov
rcrl
popf
jne
push
loop
dec
and
in
jb
pop
mov
dec
xchg
iret
pop
fistpll
sub
and
push
fistps
jl
adcl
sar
push
or
cmp
inc
jp
sbb
or
js
xchg
neg
push
cmpsb
mov
loopne
into
loopne
cli
add
dec
lahf
cmp
jmp
xor
stc
xor
lahf
adc
adc
mov
mov
leave
xchg
outsl
inc
fistpl
sbb
add
aaa
push
adc
push
loop
es
stc
lods
xchg
clc
adc
ds
jo
test
jns
nop
push
scas
das
fstpt
int3
or
jns
cmpl
stos
mov
testb
insb
fidivrl
jge
adc
add
jbe
mov
mov
imul
dec
mov
jbe
mov
pop
mov
cmp
sbb
subb
outsb
and
xlat
js
mov
jle
mov
je
jge
mov
mov
mov
mov
add
aas
cmp
rclb
pop
adc
mov
push
ljmp
pop
lea
pushf
mov
test
rolb
xor
in
ds
stc
sbb
fisubrl
inc
inc
sbb
sbb
mov
aad
test
movsb
push
sbb
movsl
cmp
sbb
imul
push
push
hlt
push
push
rcrl
push
sbb
add
adc
addb
dec
fs
in
loop
insl
pop
das
or
cmp
sub
scas
jg
das
mov
xorb
sub
mov
xor
sbb
add
jns
mov
fs
fwait
ret
arpl
sbb
aad
aaa
or
push
div
ljmp
push
cmp
aam
xchg
lods
jnp
xchg
je
inc
cmp
cmp
pusha
nop
mov
lock
enter
aas
xor
sbb
iret
adc
jle
push
xor
or
es
cli
push
insl
cmpl
outsl
xchg
aam
dec
jnp
pop
dec
stos
cmc
and
add
cmovbe
cmp
rcr
jo
mov
fsts
pop
lahf
lds
aas
xchg
dec
add
aad
xor
fldenv
mov
push
fmul
mov
and
adc
ret
inc
dec
jmp
aaa
mov
mov
or
jp
cs
das
cmp
aaa
andl
stc
xchg
icebp
xchg
sbb
into
mov
rorb
aas
pop
dec
mov
ja
jns
sbbl
dec
xchg
out
xlat
pop
fwait
outsb
pop
pop
push
cmp
pop
adc
mov
sbb
and
push
dec
or
insb
dec
dec
fildl
xlat
xor
or
arpl
sub
clc
aas
dec
mov
test
push
es
popf
inc
xchg
dec
adc
mov
sti
out
ret
sbb
mov
fcomip
shrb
and
pop
mov
or
mov
and
xchg
test
inc
out
outsl
sbb
ds
xchg
iret
ds
repnz
dec
lods
jle
pop
mov
sbb
pop
std
push
sbb
sbb
imul
push
loopne
es
add
cmp
push
mov
pop
loop
out
fisubrl
and
mov
cmp
push
or
fnstcw
xor
cmpsl
jle
cmpsb
cmc
jg
jns
test
imul
inc
sbbl
out
dec
shll
mov
lods
adc
sbb
mov
and
addb
int3
outsl
cwtl
mov
cmc
loopne
or
or
or
sub
push
cmp
outsb
and
inc
mov
test
das
push
and
shlb
stos
fisubs
fs
cmc
dec
orl
inc
out
incl
pop
ret
sbb
mov
lret
add
fsub
lret
clc
repz
inc
xor
push
push
leave
xchg
sub
out
sbb
bnd
xchg
sbb
subl
mov
fldenv
pop
sub
cmp
push
xor
mov
push
outsl
ss
xchg
loopne
scas
xchg
and
call
mov
ljmp
in
lret
stos
loop
xchg
popa
cmp
jp
push
or
arpl
mov
cmpsl
mov
mov
cmp
lods
sbb
xchg
xchg
ret
mov
lret
mov
xor
jp
rorb
xchg
mov
cmp
sbb
addl
and
and
outsl
pusha
inc
loop
cmp
jne
or
push
movsl
sti
adc
push
mov
scas
add
jl
ljmp
aaa
scas
mov
data16
push
mov
cli
dec
adc
sub
lods
dec
xor
fucom
iret
data16
sbb
out
dec
push
fistps
clc
jne
cmp
fsubl
sti
mov
ss
pop
dec
cmpsb
jmp
sbb
cli
loope
outsl
pop
dec
cmp
xchg
or
std
pop
jmp
inc
push
das
jle
popf
and
mov
mov
fstl
adc
fisubs
dec
sbb
fcom
outsl
mov
mov
add
mov
and
cli
push
adc
jp
or
lods
cmc
jno
lds
and
fstpl
stc
push
fmuls
mov
jle
cwtl
scas
xchg
dec
bound
loope
shrl
pop
outsl
sub
sti
xor
andb
dec
jmp
iret
pop
jo
inc
fcompl
outsl
jle
loop
mov
push
sub
sub
xor
pop
inc
pop
int
jle
pop
mov
inc
xchg
dec
test
mov
and
inc
ljmp
repz
jb
imul
adc
pop
jns
or
pop
fimull
or
loopne
xchg
push
add
daa
mov
divb
cmp
push
jp
mov
shrb
shl
jle
mov
andl
cmpsb
mov
jmp
cld
pop
sbb
lods
out
xchg
sbb
mov
xchg
je
or
add
inc
lcall
pop
nop
fnstenv
je
mov
dec
mov
ljmp
push
xor
into
call
lds
jo
and
out
pusha
cmp
xor
mov
dec
fwait
mov
mov
in
loopne
push
sbb
cmc
data16
test
xlat
movsl
leave
mov
arpl
test
or
mov
xchg
cmpl
lea
mov
push
fsub
sbb
jnp
pop
mov
cmc
mov
mov
scas
jbe
inc
call
pop
scas
sahf
add
jnp
arpl
dec
icebp
mov
test
mov
xchg
sbb
mov
repnz
mov
jge
lea
mov
fsubrp
fxch
jnp
sub
or
push
in
xchg
lock
ficoms
pop
jnp
cltd
aam
jmp
dec
inc
cmpl
fwait
adc
adc
in
xchg
pop
add
cmp
repz
imul
lods
sbb
and
sub
cwtl
mov
cmpsl
cwtl
add
mov
push
xchg
sbb
mov
inc
test
sbb
inc
repnz
jle
pop
push
jno
sub
cli
sarb
or
loopne
mov
sbbb
ja
lea
les
ret
aaa
pop
popa
mov
pop
daa
push
push
jle
mov
test
scas
ss
inc
pop
fadds
adc
xchg
adc
gs
test
xor
out
and
out
fs
sub
mov
int
xchg
push
popa
cli
sbb
jge
out
out
sti
imul
sub
mov
es
test
cld
fneni(8087
leave
pop
inc
mov
out
dec
ds
xchg
imul
das
bound
loope
cmp
sub
imul
adc
cmp
or
xor
sbb
or
outsl
push
lcall
xor
lock
loope
mov
ss
je
insb
loopne
cmp
cmpsl
xor
add
inc
popf
sbb
pop
cwtl
fidivrs
cmp
popf
enter
test
mov
sbb
inc
inc
sub
das
fistpl
aaa
push
dec
mov
mov
fnstenv
aam
xchg
nop
or
loopne
jmp
movsb
and
fcompl
popf
jb
or
roll
dec
mov
repnz
fistl
jbe
int3
notl
jnp
mov
ret
testb
jg
add
push
fldt
sub
jmp
mov
pop
frndint
xor
inc
sbb
mov
insl
out
fstl
push
test
gs
jle
enter
imul
nop
icebp
jnp
mov
sub
pop
mov
ret
gs
loop
push
dec
pop
pop
hlt
cmc
sbb
add
lret
sub
jp
lcall
xor
push
mov
cmp
sub
daa
jl
push
and
ja
dec
mov
xor
hlt
gs
push
push
psubusb
lock
lds
xor
mov
xor
or
test
mov
into
push
insb
stos
adc
sbb
ret
mov
dec
sar
mov
or
cli
xchg
inc
xor
jmp
mov
pop
xor
mov
push
mov
cld
popl
fdivr
fldcw
call
int
sbb
cmpsl
jnp
inc
inc
mov
sbbw
xor
push
add
repnz
loop
arpl
jg
pushf
cwtl
insb
sti
mov
mov
inc
xchg
mov
mov
dec
mov
loope
jle
sbb
pusha
and
jo
clc
loope
lds
mov
pop
add
jecxz
cmp
add
iret
ljmp
jg
repnz
cmp
test
in
sarb
sbb
andl
push
out
xchg
jg
imul
push
into
popf
xor
call
decb
jg
fs
or
inc
pusha
lahf
fisttps
fisubl
mov
int3
jae
cs
sbb
and
sbb
adc
add
push
xor
sarl
jns
dec
sbb
push
out
xorb
mov
jo
and
mov
sub
data16
mov
push
mov
push
icebp
enter
mov
cmp
fs
pushf
dec
lock
and
push
push
sub
ss
orb
scas
and
pushf
cmp
xor
cwtl
ja
test
push
push
sub
cmpb
test
loopne
push
xchg
ljmp
sub
adc
push
shll
jb
xor
xor
push
pop
xor
dec
setge
mov
or
or
jge
stc
sbbb
pushf
push
jle
aad
jno
aam
fdivl
ret
inc
pop
dec
movsl
push
jns
push
out
in
sbb
outsb
ret
xchg
pop
push
bound
lret
pop
and
rorb
or
jbe
cmp
data16
add
fsubs
or
lret
mov
fdivr
andl
mov
sbb
cmp
in
lock
add
aaa
outsb
orb
adc
pop
popa
mov
jge
add
fadd
cmp
out
aaa
inc
adc
xchg
xchg
pop
inc
negl
call
leave
push
cmp
push
mov
fucom
out
popa
or
add
aam
and
fdivrp
sub
and
lea
into
cmp
icebp
inc
adc
loope
pop
mov
and
mov
push
out
ja
sbb
adc
and
push
mov
scas
xchg
rcrb
andb
fmuls
mov
jbe
cltd
mov
sub
xor
push
lods
jbe
jae
rorl
inc
pop
ss
add
test
xlat
orl
test
mov
and
adc
push
mov
movsb
pop
dec
outsl
or
push
jnp
pop
mov
and
es
stos
push
arpl
push
inc
cmp
into
in
push
pop
and
js
pushf
mov
mull
cli
pop
jg
xchg
cmpsb
in
sti
mov
fisubrs
mov
fsubrl
enter
imul
loope
sbb
mov
mov
inc
inc
cmp
lods
and
adc
mov
pop
mov
mov
scas
inc
or
repz
lds
or
ja
addr16
dec
sub
fs
and
loop
pushf
hlt
xor
loope
jnp
xor
push
pop
outsl
cmpsl
mov
cmp
sahf
mov
adc
rcr
push
push
mov
sub
sbb
mov
mov
xor
mov
insl
cmp
mov
push
test
in
lods
iret
jmp
mov
xor
jae
outsb
mov
icebp
xor
xchg
xor
xlat
xchg
adc
clc
sbb
and
int
inc
fnstsw
sbb
adc
stc
or
pop
into
nop
xchg
insb
dec
sub
lret
stos
xchg
sti
push
pop
xor
mov
sti
sarl
cmp
daa
xchg
adc
sub
movsb
orb
in
lods
in
inc
les
mov
jno
js
shrl
test
mov
mov
flds
mov
mov
jne
pop
aad
dec
add
xchg
out
js
aam
rorl
push
dec
mov
sbb
push
inc
inc
dec
mov
xchg
adc
push
jns
cmp
mov
imull
xchg
jne
lcall
outsb
pop
push
in
arpl
jb
add
into
ja
push
rolb
arpl
sbb
pop
xor
jb
popf
pop
aaa
test
popa
push
jne
lea
inc
pusha
fstp
mov
pop
jge
into
mov
iret
mov
adc
mov
rorl
sub
sahf
fsubs
cmc
cmp
lods
inc
rcrb
imul
fcompl
repnz
push
inc
pop
bound
sbb
lods
add
xlat
out
push
lods
and
adc
sbb
lods
stos
jp
ljmp
push
dec
jnp
dec
adcb
aam
sbb
cld
push
mov
call
adc
jb
pop
or
ljmp
mov
or
mov
imul
out
scas
popf
jne
aad
outsb
outsl
cmp
roll
das
adc
cmp
mov
or
jb
adc
sbbl
in
add
mov
and
fisubrl
enter
imul
pop
cmp
xchg
push
add
add
dec
mov
aam
mov
add
xchg
jne
pop
pop
mov
jne
scas
dec
sbb
pop
inc
iret
aaa
rcrb
dec
pop
cmp
xchg
in
ret
push
or
orl
or
stos
mov
aas
push
inc
lods
imul
lcall
pop
adc
xchg
sbb
add
enter
cli
inc
jecxz
sbb
fstsw
outsl
mov
int
push
shll
dec
add
mov
dec
sar
sahf
out
stos
popl
inc
shlb
jecxz
fcomip
ficoms
sbb
sahf
xchg
lods
dec
xor
gs
test
xchg
test
inc
jecxz
sub
ljmp
rclb
enter
aad
add
adc
mov
shlb
add
jmp
in
xor
pusha
mov
jae
jp
sbb
and
mov
dec
add
dec
mov
pop
jmp
cld
inc
push
push
cmp
movsl
push
jo
mov
push
jecxz
mov
es
lods
jno
int
cli
inc
in
cmp
test
das
loope
dec
idivb
jl
rolb
imulb
jg
mov
negb
sbb
fstpt
test
dec
jae
pop
test
lds
xlat
add
pop
mov
sbb
gs
mov
es
push
test
int
je
push
pop
lds
cli
mov
jnp
rolb
inc
mov
jl
adc
stos
sbb
or
add
add
cmp
adc
xchg
ja
mov
repnz
aas
push
cmp
mov
incb
xchg
cli
push
out
pop
xor
push
mov
rcrl
adc
lds
sub
pushf
in
push
sbb
sub
pop
das
icebp
test
fwait
mov
mov
test
lods
cmp
mov
inc
cmpsl
ret
hlt
sub
pushf
dec
loop
arpl
sbb
andb
in
mov
inc
icebp
orl
loope
daa
mov
jae
inc
ds
mov
xor
movsb
or
ret
or
xchg
cmc
fstpt
add
sti
pop
xchg
test
lods
and
pop
xchg
jne
fs
jecxz
addr16
xchg
adc
movsb
popa
dec
stc
scas
mov
sub
sbb
insb
inc
loopne
xchg
mov
std
push
mov
aam
pop
scas
in
fwait
int3
mov
jo
sbb
mov
push
movsb
mov
adc
sub
test
mov
add
call
pop
sub
pop
or
aam
adc
jbe
aad
in
loopne
iret
or
jmp
shll
mov
xlat
orb
stos
lods
pop
add
sbb
or
aad
sbb
xor
mov
aam
pop
mov
aas
ja
mov
out
int
sarb
enter
xor
fwait
scas
xor
outsb
into
adc
sbb
adcb
fstpt
fdivrl
dec
insl
xor
subl
mov
in
inc
sub
mov
ljmp
mov
pop
jl
adc
mov
gs
call
test
mov
xchg
in
lcall
mov
inc
pushf
sbb
gs
orb
cmp
mov
adc
bound
call
pop
and
fucom
xor
or
adc
in
or
mov
aas
inc
xlat
fisttpll
sub
loope
insl
xor
cmp
adc
jno
aas
mov
daa
sub
xchg
das
pop
call
mov
xor
ja
nop
dec
testb
out
xchg
adc
test
push
xor
mov
rcrl
mov
push
mov
mov
cwtl
sub
push
adc
sbb
add
dec
fs
inc
mov
jno
bound
mov
stos
in
push
dec
push
xor
pop
pushf
sbb
inc
adc
mov
pop
mov
fisttps
xchg
xor
je
jle
cltd
xor
fwait
or
nop
bound
cmp
adc
or
or
loopne
or
lea
lahf
ljmp
rcrl
cwtl
rclb
cmc
sub
ja
test
jno
sarl
orl
sub
and
imul
ss
pop
repnz
sbb
repz
fdivs
je
pop
inc
daa
lods
stc
jns
in
cmc
push
test
dec
push
push
jg
out
lods
dec
jl
clc
and
dec
cld
in
js
lea
lea
pop
pop
mov
push
add
dec
dec
add
jb
lcall
lret
arpl
inc
mov
xchg
scas
push
fidivrs
test
mov
xchg
and
pop
sub
dec
aas
scas
push
inc
cmp
mov
mov
test
jno
rol
push
and
or
scas
std
xchg
cwtl
fcom
jge
lods
push
cmp
out
subl
adc
insl
mov
xor
sub
dec
pop
icebp
xchg
mov
jb
sti
inc
pusha
mov
jns
and
mov
shll
inc
add
inc
sub
pop
les
adc
pushf
lock
loopne
add
adc
movsb
fwait
xorl
xor
pushf
ret
sti
push
sbb
push
cmp
adc
addl
fsubrl
push
push
adc
mov
inc
cmp
mov
add
and
insb
aad
xchg
setne
mov
cmp
fisubl
clc
xchg
mov
or
addr16
in
loope
shl
popf
or
ja
adc
push
stc
mov
outsb
xchg
mov
arpl
inc
push
loope
jmp
push
xor
fs
jb
cltd
lds
rol
xchg
adc
pop
sub
jmp
dec
mov
jl
pop
je
xor
cmpsl
cli
adc
adc
imul
xor
adc
cmp
and
mov
push
xchg
xchg
jo
adc
inc
lods
mov
leave
cmp
shlb
jae
fisttpl
mull
sub
pop
shll
or
xchg
lcall
popl
cmpsl
lahf
push
aaa
frstor
xor
jb
sar
out
mov
sub
je
rcrb
lret
imul
cltd
pushf
out
mov
mov
ljmp
adc
ja
mov
lea
mov
mov
mov
testl
ja
test
aas
call
mov
insb
mov
in
imul
lea
js
pop
cmp
fcoms
mov
mov
mov
iret
into
out
and
add
xor
mov
aas
jnp
pop
jb
xchg
lea
xorl
mov
es
or
ret
push
stc
dec
push
xor
inc
daa
inc
sti
jno
jb
add
sbb
sti
clc
loopne
fsubr
mov
call
or
sbb
dec
push
sti
dec
ret
and
fstl
inc
sbb
fsubl
ffree
inc
fldt
dec
mov
dec
ds
fiaddl
stos
lds
mov
xor
adc
mov
or
inc
cmpsl
imul
jnp
mov
scas
sbb
xlat
or
xor
sbb
ds
pop
rcll
into
xor
std
clc
outsl
or
cmp
push
jle
adc
adc
jl
nop
xor
dec
adc
mov
icebp
repz
xchg
imul
mov
shl
inc
fucompp
adc
jb
jmp
mov
jmp
shrl
inc
loope
lea
jnp
into
fcom
loop
aad
and
test
push
mov
pop
or
push
and
cmp
adc
loop
mov
stc
mov
mov
xor
sbb
add
lods
pop
str
mov
mov
cs
add
aaa
je
popa
test
jmp
out
sbb
out
bound
inc
sbb
into
mov
pop
pop
dec
xchg
xor
js
js
mov
cmp
out
cli
adc
cmp
jnp
inc
call
cwtl
jne
mov
outsb
mov
addr16
or
repz
aam
aas
adc
jge
xchg
cs
insb
xor
and
push
int
xor
rclb
dec
xlat
pop
loope
and
jl
pop
mov
cli
sbb
lcall
es
add
inc
inc
sbb
orl
das
xchg
sbb
or
mov
iret
mov
es
pop
pushf
xlat
or
imul
cs
pop
or
jl
xchg
and
sbb
mov
xchg
xor
int
shlb
push
lcall
push
jge
in
cmpsb
push
xchg
jmp
mov
pop
xor
jl
jae
inc
pushf
pop
data16
xor
movsl
lods
popa
shll
pusha
pusha
gs
inc
add
adc
xchg
ret
xchg
jl
sbb
jno
cld
aad
mov
xchg
jnp
dec
lods
dec
insl
dec
mov
sahf
mov
cltd
repnz
push
adc
leave
ds
aaa
stos
test
rorl
adc
data16
mov
mov
inc
or
inc
mov
fcmove
imul
data16
and
icebp
int3
mov
jl
inc
xchg
jne
outsb
pop
stos
pop
add
mov
test
xchg
mov
push
jbe
hlt
jl
std
xor
inc
rorl
adc
xchg
xchg
loop
xor
mov
pop
adc
mov
movsb
add
fldl2t
push
cli
es
and
cltd
lea
lret
xor
or
ds
sbb
in
ss
adc
xor
icebp
repz
wrmsr
aad
sub
mov
pop
out
mov
jne
jbe
movsb
mov
cmp
test
in
mov
push
stos
aaa
pusha
loop
stos
jb
in
stc
add
mov
pop
lret
mov
cmp
add
inc
jo
dec
lea
pop
roll
xchg
out
test
mov
or
pop
negb
pop
cmpsb
rcll
inc
ret
xchg
mov
sti
dec
fstps
adcl
sbb
cmp
xchg
aad
decb
jo
test
fists
sbb
shll
xor
mov
popa
sarb
cwtl
sub
sub
sub
stc
in
bnd
stos
xchg
nop
sbb
pop
push
lea
lret
mov
dec
lods
popa
adc
test
fdivr
sahf
mov
fadd
iret
push
cmp
inc
sbb
lods
xchg
cmp
loop
xor
xor
je
cmp
test
mov
mov
les
jnp
mov
dec
push
lds
jg
mov
jp
addr16
les
into
mov
in
loop
je
cmc
imul
pop
sbb
sbb
sbb
mov
pop
mov
jecxz
aad
mov
int3
cmc
and
enter
gs
testl
mov
xchg
mov
dec
add
in
pusha
sahf
cmp
jo
in
xor
sbb
jmp
inc
lock
pop
lea
js
pop
cmp
shlb
rol
or
jle
rcr
dec
insl
xorb
jo
lcall
out
jo
and
fmull
cld
jge
pop
mov
fists
clc
xchg
popf
pop
mov
sbb
pop
xchg
jo
jmp
xchg
xchg
fimull
xchg
out
mov
ret
and
dec
sub
hlt
mov
xchg
js
inc
xor
xor
adc
mov
sahf
jmp
stos
hlt
push
xchg
icebp
pop
jl
clc
imul
movsb
mov
gs
mov
pop
xchg
and
aaa
stc
push
aad
mov
test
insl
bound
and
bound
ljmp
add
xor
cwtl
jmp
sbb
dec
in
push
xchg
cltd
cs
pop
push
insl
nop
xchg
xlat
mov
fildll
jns
xchg
dec
xor
xor
mov
rcrl
mov
je
scas
into
mov
scas
mov
mov
stc
mov
and
cmp
or
inc
add
add
jp
jmp
clc
xchg
popf
pop
mov
mov
and
inc
bound
xchg
adc
pop
inc
lods
loop
xchg
xor
add
push
call
and
jmp
xchg
add
sub
cmp
scas
leave
les
adc
xchg
fnstsw
jmp
movsb
sbbl
fdivs
pop
sub
arpl
jl
add
jg
cmpsb
pushf
in
in
inc
ror
inc
mov
insb
mov
add
and
add
arpl
cli
repz
jl
mov
xchg
push
inc
dec
mov
cmc
testl
bound
pop
mov
sbb
cmp
xchg
jle
sbb
rorb
jmp
ljmp
jg
movsl
sub
cmp
xchg
inc
hlt
jl
push
addr16
add
js
dec
repz
sahf
inc
repz
incb
out
xchg
mov
xchg
push
pop
inc
jp
arpl
fnsave
dec
dec
cmp
mov
pusha
xor
cmp
sbb
add
je
stos
popf
add
mov
arpl
jb
push
lcall
sbb
inc
das
mov
adc
mov
clc
cwtl
rclb
pop
push
adc
sarb
xor
popf
mov
mov
jg
repnz
rcrl
jo
js
push
xchg
sti
pop
push
daa
pop
add
cmp
sub
int3
aam
inc
lock
cmp
add
test
int3
mov
ljmp
movb
lock
lcall
sbbb
and
cli
add
mov
test
fnstsw
jmp
mov
cmpsb
or
push
push
push
jge
int3
add
push
mov
pop
and
arpl
ja
popa
stc
lods
jmp
shrl
mov
mov
pop
mov
mov
sbb
sub
ret
arpl
leave
into
ret
mov
shll
sbb
xor
mov
mov
inc
cmc
sbb
xchg
mov
out
ja
and
jecxz
mov
andl
clc
push
sbb
fs
and
out
rcll
xchg
mov
out
pusha
cmp
fsub
add
xchg
mov
imul
cmp
sbbb
cmc
movsb
mov
scas
nop
sbb
mov
mov
lods
mov
stc
and
movsl
or
push
add
rorb
mov
fs
fcom
test
js
add
dec
and
popa
lret
outsl
int3
dec
femms
xor
ja
add
int3
aad
xchg
loop
shl
jno
push
dec
lds
adc
push
inc
dec
sti
sub
and
mov
out
xchg
jmp
pushf
sub
add
sahf
enter
rcl
inc
xchg
adc
pop
mov
mov
pop
xchg
test
pop
mov
pop
fistpl
sub
inc
lret
mov
bound
push
pop
adc
out
jns
xor
pop
in
in
cmpl
pop
dec
xchg
aad
jns
lret
mov
in
dec
inc
fisubrl
xorl
xor
jb
outsl
fstpt
sbb
sbb
dec
mulb
xchg
push
pop
sarl
pop
cmp
push
lret
push
pop
mov
jns
sbb
rol
cmc
xor
mov
nop
or
mov
bound
repnz
data16
lret
cmp
insb
jle
popf
inc
incb
test
mov
xor
jne
sub
in
setno
pop
push
lock
fmull
mov
xchg
pop
ret
shrl
out
pop
cmp
push
adc
xor
cmp
xchg
and
into
sbb
push
lds
xchg
out
sbb
divl
mov
rclb
mov
in
jmp
mov
adc
fstps
in
sub
mov
adc
clc
jg
add
mov
jp
mov
imul
dec
enter
xor
mov
jae
sub
mov
bound
ret
stos
mov
ret
call
add
sub
add
pop
stos
dec
mov
insb
and
fisubrl
icebp
ret
mov
andb
add
dec
stos
lahf
sti
mov
repnz
daa
push
insl
cmp
mov
cli
mov
data16
xchg
daa
es
jp
xchg
lcall
enter
inc
jge
fs
pop
ja
jecxz
fmull
es
xchg
shll
push
mov
into
and
cmp
jnp
mov
xor
add
aaa
and
xlat
loopne
mov
xor
mov
push
jns
ficoms
add
jecxz
sub
inc
xchg
dec
pop
repnz
push
xor
fwait
daa
dec
push
lock
sub
js
push
hlt
pop
inc
inc
sbb
adc
add
sarb
sbb
dec
mov
mov
outsl
ds
fsubs
dec
add
pop
mov
test
outsb
fcmovbe
jae
dec
mov
shrb
xor
fildll
cmpsb
test
inc
fisubrl
nop
xchg
out
stos
call
cs
jno
rcrl
ljmp
xor
jo
push
adc
sbb
pop
adc
mov
loope
pop
mov
imul
sahf
dec
sbb
pop
mov
call
scas
xchg
aam
jmp
pop
cmp
lock
data16
xor
insb
xchg
inc
sub
cmp
mov
dec
push
shll
adc
test
in
test
cltd
sub
stos
adc
bound
ds
and
cmc
jae
aad
mov
inc
cmp
mov
add
fldenv
xchg
gs
adc
adc
pop
pop
imul
jne
pop
jmp
addr16
sti
push
lods
adcb
js
push
lock
ss
lahf
xchg
inc
dec
out
mov
and
addl
xlat
popa
push
ss
popa
xor
lock
cmp
mov
adc
out
pop
movsb
push
into
int
mov
pop
fisttps
cs
je
pop
call
scas
and
jno
mov
ljmp
fidivl
mov
dec
nop
ret
rolb
call
lahf
inc
movsb
ret
test
xchg
pop
mov
xchg
pop
roll
push
imul
stos
les
call
subl
iret
ret
xor
negb
es
cmp
pop
xchg
daa
jge
mov
xor
test
ss
jae
test
sahf
mov
xor
adc
movsl
xchg
inc
sub
adc
sub
mov
pop
out
sbb
loop
lock
lods
mov
dec
movsb
xchg
rcrb
popa
and
call
loope
and
imul
jbe
jecxz
push
mov
pushf
fnsave
dec
jecxz
xchg
popa
lcall
xor
daa
pop
lret
jle
add
xchg
and
push
arpl
jge
out
stos
mov
bound
mov
sub
sbb
mov
sbb
cmpl
add
cmp
pop
idivl
add
adc
icebp
sbb
test
rorl
dec
mov
stos
mov
cmpsb
fdivrl
sbb
jo
mov
lock
sbb
test
mov
push
xchg
push
fldl
mov
arpl
pushl
push
adc
sub
or
mov
mov
cmp
daa
sub
sub
cli
gs
push
cmp
outsb
xchg
repz
insl
aas
mov
dec
lock
cmp
sbb
sbb
cmpsb
mov
ss
imul
movsb
jae
arpl
sub
leave
and
movsl
stos
aad
inc
test
or
rcll
sbb
inc
jnp
imul
lea
jbe
pushf
inc
push
outsl
xor
pop
sbb
jmp
call
sub
mov
mov
mov
mov
lret
pop
xchg
dec
notl
scas
mov
ss
add
add
or
cld
adc
mov
adc
subb
mov
roll
shll
mov
mov
push
in
pop
push
outsl
aam
fnstcw
push
cwtl
insl
mov
shrl
lock
pop
or
push
and
pop
pop
nop
and
and
pop
sar
mov
outsb
call
push
mov
adc
mov
push
andl
movsb
rcrb
adc
cmpsb
mov
jg
jnp
add
andl
test
inc
fs
loope
call
cmp
jae
or
out
iret
sahf
xchg
dec
loop
pop
push
jl
mov
push
push
jecxz
int3
mov
repnz
aas
lods
gs
xchg
ficompl
mov
sbb
pop
jp
mov
outsl
lret
das
cmp
adc
test
out
popf
dec
add
aas
xchg
hlt
fiaddl
sahf
and
mov
fsubl
les
bound
pusha
dec
lret
sbb
lcall
in
call
daa
or
inc
add
dec
inc
xchg
jbe
divl
mov
mov
push
push
and
cmp
mov
xor
mov
pop
in
dec
push
inc
xchg
arpl
sub
mov
sbbb
mov
loopne
fs
ret
pop
in
dec
push
inc
jb
add
rcll
sub
xchg
les
pusha
popa
cld
cli
pop
repz
call
outsb
out
sti
xor
shlb
es
decb
insb
mov
inc
jp
push
mov
xor
test
inc
and
lret
cmpsl
xor
test
clc
mov
pop
xorl
mov
call
rorb
sbb
adc
push
popa
add
sbb
shrl
pushf
cltd
mov
js
outsb
inc
add
pop
nop
in
mov
pushf
pusha
mov
inc
popf
gs
lods
cmpsb
cmovns
jne
neg
sub
in
fld
xor
enter
xor
mov
adc
adc
aas
xor
jbe
arpl
push
jecxz
movsb
bound
js
mov
jbe
mov
mov
jl
cmp
ljmp
scas
mov
cmpl
subb
loope
dec
stos
sarb
mov
iret
sub
xchg
scas
push
ljmp
ljmp
popa
js
lods
dec
gs
xor
ret
xchg
push
mov
test
rorl
orl
xchg
push
xchg
cmp
lahf
sbb
jnp
sub
mov
mov
and
out
repnz
cwtl
lcall
jl
in
lds
jbe
inc
mov
jb
lcall
cmp
jne
add
mov
cmp
popa
hlt
pop
xchg
pop
inc
and
mov
mov
mov
inc
jb
ljmp
jmp
sbb
inc
test
jne
push
cmp
xchg
add
out
pushl
and
jbe
mov
je
mov
push
div
aad
in
cli
mov
mov
and
fstpl
mov
mov
push
jnp
ret
sub
out
cmp
aam
cmp
ds
sbb
sub
jle
out
ficomps
fisubrl
xchg
cmpsb
sub
sub
pop
xor
mov
adc
addb
cmpsl
xchg
jl
pop
aad
inc
cmp
sub
leave
mov
test
sub
mov
enter
dec
out
xchg
sti
outsl
sbb
cmp
inc
and
sbbb
inc
cmpsl
mov
push
lret
dec
sbb
daa
outsb
sub
adc
push
popf
ret
xor
in
inc
xor
adc
dec
push
xorl
jno
jae
arpl
adc
add
test
or
xor
cld
stos
cmp
pop
push
imul
push
addb
mov
xlat
imul
sbb
stc
mov
sbb
leave
fdivr
cmp
push
int3
leave
xor
int
xchg
gs
adc
pop
int
lret
mov
xchg
inc
test
mov
pop
sub
sarl
mov
out
xchg
lods
arpl
jecxz
jns
mov
push
ljmp
xchg
aaa
test
dec
xorl
insb
test
lods
int3
roll
in
ja
aam
xchg
adcl
adc
loopne
loop
add
jg
lret
lods
movl
icebp
fsts
test
sbb
or
std
xchg
test
mov
inc
xchg
sub
insb
aaa
mov
fwait
mov
xor
mov
jl
repnz
add
enter
add
insb
lods
jle
fld
cmp
push
stos
sti
adc
fdivs
sub
push
dec
stos
fs
cli
lods
adc
dec
mov
mov
cmp
imull
xor
xchg
mov
nop
sbb
mov
and
add
imul
add
cmp
in
shrl
adc
lods
inc
stos
in
jae
in
and
push
mov
mov
incl
xor
dec
fildll
daa
mov
jo
cmpsl
mov
sbb
and
ja
lahf
xchg
cmp
jecxz
inc
shrb
cmc
ficoms
push
cmp
sbb
clc
aaa
movsb
jno
repz
lea
and
lods
or
cmp
pop
loop
inc
fidivs
scas
sahf
xchg
movsl
mov
notb
jae
pop
push
repz
push
add
loope
sub
xchg
mov
xchg
fwait
xchg
int3
sub
adc
jle
mov
sbb
push
out
pop
jge
imul
and
push
decb
pop
cli
cmpsb
loopne
repz
add
cmpsl
shrl
mov
ljmp
arpl
std
int3
dec
fs
mov
mov
dec
fdiv
stc
inc
mov
push
adc
data16
pop
mov
adc
xor
mov
aad
add
add
icebp
lret
aas
cmp
xor
test
xor
mov
pop
dec
pop
dec
dec
es
stc
cmp
ja
scas
int
add
mov
addr16
lcall
jl
pop
scas
pop
push
inc
and
xor
mov
add
in
sbb
add
leave
xor
xor
test
mov
jecxz
mov
xor
shrl
inc
nop
les
dec
mov
mov
enter
in
sub
adc
pop
mov
cmp
mov
test
mov
jmp
jl
dec
fistpll
outsb
dec
loope
test
mov
jl
or
push
testl
ss
aas
loope
loopne
imull
test
jg
xor
pushf
scas
lret
jbe
push
pop
fdivrs
push
adc
dec
mov
and
daa
nop
mov
dec
nop
rorb
xor
imul
mov
dec
ja
mov
loopne
mov
sub
aas
inc
jle
xchg
pop
push
insb
mov
sahf
push
les
lods
arpl
xchg
mov
dec
sub
hlt
test
sbb
inc
lds
dec
mov
pushf
cli
sub
jae
clc
fabs
fisubl
xor
or
stc
push
ret
add
scas
std
add
pop
mov
mov
fcmovnb
mov
jp
out
jne
leave
shl
sub
in
rdpmc
sbb
sub
pop
call
push
jb
or
ret
xchg
cmp
jmp
scas
loope
pushf
test
test
mov
fisubs
aam
jo
lret
add
inc
jb
push
push
push
call
popa
push
outsl
in
fucomi
jecxz
xchg
push
jge
fildl
sbb
xchg
test
and
mov
lds
outsl
cwtl
xchg
fneni(8087
pop
sbb
or
sub
xchg
mov
adc
push
adc
jg
inc
shr
jge
mov
movsl
int
lret
jb
cltd
in
out
mov
pop
test
mov
xchg
mov
xchg
in
test
sub
negb
out
add
outsl
mov
pop
cld
push
mov
pop
divl
or
movsb
mov
mov
lahf
int3
inc
mov
das
or
inc
les
cltd
sub
cld
xor
push
int3
add
jmp
stc
sarl
mov
adc
inc
mov
cmp
and
mov
in
xor
in
ja
cmp
or
pop
dec
dec
clc
push
xchg
pop
mov
into
repz
nop
into
in
adc
xchg
or
cld
add
ret
cmp
insb
adc
roll
scas
hlt
insl
inc
push
leave
lahf
lods
inc
outsb
push
fimuls
push
and
mov
cld
in
rolb
dec
mov
add
dec
cmp
roll
andb
cli
scas
imul
enter
fbld
sub
push
arpl
or
push
outsl
dec
inc
push
xlat
mov
mov
pop
jns
mov
sub
in
mov
adc
pop
imul
cwtl
mov
lds
leave
jmp
imul
ficompl
mov
mov
rcrb
mov
fwait
push
test
repz
aad
cmp
call
mov
add
inc
inc
test
xor
mov
movsb
movsb
leave
stos
or
popf
lret
push
cmp
xor
add
aam
gs
lret
sub
lret
subb
jmp
aaa
cltd
mov
cmp
aaa
js
stc
icebp
call
leave
add
cli
push
or
add
jg
cld
fsubr
jae
aaa
sahf
mov
fistpl
mov
sbb
lds
mov
xor
xor
mov
fnstenv
ljmp
xchg
cld
ja
mov
addl
call
xorb
movsb
inc
jmp
dec
lret
cs
jl
dec
xchg
adc
sbb
mov
test
jecxz
xor
js
add
lcall
inc
imul
aad
push
fcmovnbe
adc
ret
pop
subl
adc
lock
das
cmp
pop
pop
repz
lret
mov
and
ss
pop
push
adc
adc
ljmp
add
push
das
pop
or
clc
xchg
das
pop
pop
leave
mov
or
call
call
sbb
cmp
in
add
mov
cltd
call
into
repnz
adc
lods
xor
jle
dec
pop
enter
pop
mov
lret
push
push
ror
insb
stos
repz
dec
jb
cmpb
sbb
sub
pusha
adc
cltd
jnp
cwtl
cmp
data16
pop
and
stos
lods
sub
testl
jnp
add
push
push
ret
fdiv
scas
jl
ss
adc
and
push
hlt
fadd
fwait
xor
es
xor
gs
mov
movsl
cmp
cmp
adc
pushf
mov
cwtl
into
inc
stos
pushf
pop
inc
repnz
outsl
pushf
jnp
push
fcomps
inc
sub
rol
xchg
sub
pop
and
or
and
jns
into
lods
jo
inc
call
jge
loop
js
mov
jmp
sti
les
and
and
mov
inc
mov
fwait
movsl
sub
pop
and
cmp
repz
push
adc
stc
mov
mov
and
push
or
fistpl
dec
sub
sub
jl
dec
clc
mov
mov
int3
clc
cltd
cmp
imull
lret
out
dec
cmp
mov
xchg
fidivrl
mov
enter
push
xchg
xchg
cmp
jge
shr
push
stos
fmulp
push
icebp
adc
int3
mov
add
lret
addl
in
xor
adc
push
inc
lods
cmp
xchg
sub
cmp
dec
jnp
mov
inc
xor
mov
sub
sbb
cmp
jmp
je
mov
mov
outsb
push
addb
fdivl
sbbb
inc
push
loopne
cmpsl
in
ss
mull
in
pop
dec
push
out
sub
cwtl
lea
inc
lahf
xor
pusha
push
int
ja
movsb
xchg
push
add
out
iret
inc
push
mov
jg
fldenv
mov
dec
ja
insl
lahf
or
movsb
mov
shlb
testb
xchg
mov
or
push
test
clc
push
outsb
mov
sahf
stos
inc
std
push
jne
and
clc
push
xor
adc
sub
jmp
ja
stc
in
loop
sarl
sub
inc
mov
push
xor
cmp
and
sti
and
and
mov
into
shl
jmp
int3
cltd
mov
fadd
movsb
push
add
daa
cmp
cwtl
in
inc
out
pop
sti
mov
mov
rorb
xchg
call
or
insl
or
insb
pop
testb
lahf
loope
add
pop
cmp
lret
insl
repnz
in
jb
mov
push
xlat
shrb
adc
jbe
mov
loopne
aaa
nop
nop
and
inc
addr16
xor
mov
push
mov
lahf
xchg
or
lods
add
xchg
jl
add
sahf
jp
idivl
fimuls
lods
jp
lret
push
inc
fcom
lock
aam
stos
daa
jnp
addr16
mov
fmull
das
shll
pop
xchg
push
mov
mov
lds
mov
scas
dec
mov
lods
dec
sub
mov
adc
bnd
and
sub
and
mov
mov
xchg
mov
mov
aam
mov
cmpsl
or
popa
push
mov
mov
rorb
repz
fiadds
testl
push
or
and
pop
xor
jle
push
or
sbb
scas
jp
clc
loop
nop
sub
neg
ja
pop
andl
jae
sbb
mov
cmp
movsb
int3
and
mov
adc
sbb
sbb
xor
push
out
and
add
ss
out
ret
cmc
sbb
sti
out
sbb
dec
mov
in
mov
scas
daa
aad
hlt
and
dec
sbbb
and
in
rclb
subl
cmp
aam
or
mov
fsubs
add
jae
adc
xchg
xchg
inc
xchg
std
inc
mov
sahf
push
ja
sub
mov
cmovl
int3
in
adc
fwait
xor
lock
jl
jp
sub
xchg
lret
int3
xchg
mov
mov
sbb
movsl
testb
scas
jl
xor
sbb
les
repnz
stos
cmp
clc
inc
out
nop
pop
nop
or
jmp
les
ljmp
sub
sbb
dec
mov
ja
scas
aas
cli
icebp
imul
out
xor
repz
dec
loop
in
std
arpl
stos
cmp
out
sbb
sub
pop
xchg
aas
cli
add
ret
push
in
xor
mov
cmp
pop
inc
mov
mov
leave
xor
sub
stos
scas
sub
jecxz
cmp
ja
push
sub
sahf
fistpl
jge
and
xor
shr
notb
insb
and
inc
add
cmp
lret
pop
jno
inc
lods
push
cmovns
das
inc
sti
mov
iret
pop
and
xor
mov
ljmp
lea
mov
inc
and
popf
call
insl
stos
in
popa
push
jbe
fwait
adcb
lret
jbe
outsb
mov
push
xor
xor
outsb
sub
mov
or
outsl
jne
jbe
repnz
mov
into
sbb
cmpsb
mov
push
add
loope
popa
push
test
cld
jge
xchg
sarb
inc
test
popa
aam
xor
lea
sarb
cmpsb
jp
fsubl
jae
pusha
mov
cmp
mov
sbb
push
inc
xlat
shr
sub
jne
ljmp
shlb
add
xor
or
and
fisttpll
sbbl
lods
cmp
cmpsb
jo
cld
add
pushf
in
or
inc
jb
adc
xor
repnz
cmp
xchg
test
leave
out
mov
lret
cwtl
dec
jbe
push
xor
push
cmp
pop
jno
xor
test
xor
pop
jp
loop
fwait
dec
adc
dec
out
gs
ret
push
and
fnstenv
mov
testl
inc
cs
rolb
test
into
std
sub
and
aad
or
decl
and
stc
inc
ss
hlt
test
jne
or
jno
mov
enter
mov
jae
negb
adc
lret
sub
jg
ret
add
mov
jecxz
sub
arpl
adc
sti
leave
shrb
in
jnp
xchg
cmc
call
andb
test
faddl
xor
mov
pop
iret
xchg
nop
aam
div
inc
jge
mov
adc
push
mov
test
leave
sti
xor
mov
xlat
xor
scas
push
jbe
vcmppd
cmp
hlt
loop
lcall
mov
add
add
mov
push
jbe
mov
inc
stc
inc
mov
adc
std
jns
mov
push
xor
mov
imul
les
aam
mov
out
fucom
pushf
pop
inc
pop
or
and
ret
push
lret
xor
and
xor
xor
push
xchg
and
xor
repz
xor
inc
popf
add
push
rcrl
xchg
inc
pop
ss
mov
mov
push
int3
push
data16
mov
jnp
cmp
jle
arpl
sub
lds
ret
xchg
xor
mov
aaa
sbb
push
testl
adc
shlb
or
mov
adc
pop
adc
popf
cmp
popa
aam
dec
in
lcall
iret
addr16
loopne
mov
addr16
lahf
pop
inc
dec
cmc
dec
pop
mov
les
aam
push
mov
and
dec
jg
sbb
rclb
mov
lods
or
push
jnp
sbb
mov
stos
test
or
cmp
fsubrp
push
scas
imul
pop
rcl
movsb
xlat
mov
jp
dec
cmp
subb
jg
sahf
mov
pop
add
adc
pop
jno
test
xchg
add
xor
loope
ffreep
fwait
push
or
sarb
and
cmp
iret
push
mov
lock
jne
lret
rorl
mov
and
fmul
xchg
inc
in
shlb
lret
dec
pop
pop
pop
inc
jns
dec
xchg
out
addb
jno
push
shl
xchg
xchg
bound
fs
hlt
pop
or
jmp
shrl
pop
cmp
movsl
jecxz
aas
es
sub
jmp
enter
dec
leave
shll
bound
out
xchg
mov
xor
test
cld
push
lea
add
shl
or
inc
test
mov
out
rclb
sbb
jnp
mov
cltd
sub
add
ret
scas
lret
pop
in
push
gs
add
mov
inc
fstp
or
testl
sbb
xchg
xchg
fistpl
ret
rcl
push
ret
adc
mov
scas
add
sub
addl
dec
cmp
jns
jg
mov
mov
roll
roll
sbb
push
adc
pop
out
xor
push
bound
jo
sbb
xchg
cld
imul
pop
lahf
cmpsb
mov
jno
xor
out
imul
daa
arpl
mov
testb
and
daa
mull
js
or
push
cmc
imul
shr
call
inc
std
stc
lods
aas
dec
loopne
pop
lret
int3
dec
mov
jo
sar
or
mov
adc
mov
mov
loop
cmp
sbb
sbb
stos
lods
movsl
push
mov
popf
loope
mov
xchg
aas
ja
mov
fistpl
cltd
mov
jnp
sbb
ret
inc
push
lock
xchg
mov
inc
outsl
sti
and
xchg
das
fiaddl
mov
cmp
out
mov
stos
imulb
popf
movsl
into
add
mov
push
push
test
inc
sbbb
adc
mov
dec
cmpsb
adc
cli
dec
jb
lock
pop
cmp
popf
lcallw
jae
mov
imul
xlat
out
cli
cmp
test
cwtl
push
ds
ret
ja
and
add
stos
jp
mov
xor
movsb
repz
enter
jle
inc
fptan
stos
scas
test
sub
mov
mov
sbbl
mov
fdivr
sbb
xor
xchg
out
sub
cmpsl
sbb
dec
test
ret
mov
push
push
adc
dec
scas
xor
pop
mov
fstpt
inc
mov
andl
mov
push
leave
fisttps
dec
push
mov
stos
mov
fs
aaa
orb
outsb
xor
push
add
pop
sbb
jle
jne
mov
bound
ljmp
pop
adc
mov
mov
or
or
jno
mov
cmpsb
jbe
fsubrs
jbe
or
in
stos
in
test
or
and
decl
mov
icebp
push
push
jno
xor
xchg
dec
adc
dec
or
pushf
add
or
xor
jne
shrb
dec
into
test
pop
cmp
cmp
mov
lahf
xor
mov
sbb
test
not
and
rclb
sub
stos
push
mov
sub
ljmp
push
adc
aad
pop
push
xchg
push
mov
js
cmp
aas
int
test
sbb
adc
push
loopne
and
cvttps2pi
add
insl
test
mov
data16
mov
or
dec
xchg
insb
inc
test
cmpsb
test
inc
subl
fdivrl
addr16
ljmp
mov
mov
sti
pop
out
icebp
xchg
sbb
out
sti
shlb
mov
adc
sbb
mov
outsl
push
pop
loop
out
inc
addb
testb
sub
or
sbb
xor
pop
out
and
mov
inc
stc
mov
and
push
shll
mov
roll
out
into
sbb
jns
cmp
mov
in
pop
test
xlat
cmp
pop
rcll
xor
stos
outsl
or
inc
dec
adc
cmp
stos
insl
add
aam
mov
xchg
pop
hlt
xor
xor
outsb
sub
cmpsl
in
cmp
fldenv
inc
lea
clc
lods
cmpsl
xor
jnp
xorb
fsub
mov
lds
enter
stos
and
fsts
jno
mov
fstp
add
xchg
jmp
mov
cmpsl
jle
mov
pop
push
das
jne
dec
xor
stos
sbb
xchg
xchg
push
sti
or
into
out
js
loopne
dec
push
xchg
pushw
aad
rcll
lret
mov
test
xlat
cmp
pop
roll
dec
fstp
mov
bound
adc
ss
or
sbb
cmp
pop
dec
jge
push
test
imul
ds
sbb
adc
dec
into
aaa
or
shr
pop
xor
jmp
shrl
sahf
cld
stc
jle
xor
push
test
mov
jmp
insl
gs
insl
xor
inc
shll
or
xchg
push
xchg
mov
stc
imul
cmpsl
xchg
test
cmp
insl
push
stos
lcall
sbb
push
dec
mov
xchg
iret
addl
scas
jae
test
xchg
mov
repnz
dec
cmp
shl
adc
sbb
cltd
fcompl
rcrb
mov
cli
mov
aaa
lret
dec
and
adc
push
loop
insb
mov
fcoms
lods
or
sub
lahf
ret
cmp
cmc
call
push
out
aam
lods
mov
mov
in
fidivl
popf
or
add
cs
xor
es
or
mov
sti
pop
out
jns
mov
out
adc
cmp
and
add
cmp
fdivrs
lret
loop
dec
mov
jp
iret
sbb
dec
lods
int
jp
dec
inc
push
inc
andl
jne
dec
mov
es
pop
cli
mov
call
bound
clc
in
push
fisttpll
fadds
fwait
inc
sti
fistpl
insb
and
or
adc
inc
fcomps
cmpsb
in
ret
mov
sub
aad
mov
mov
cmp
leave
ret
pusha
pop
dec
ss
dec
cmp
xchg
ja
insl
test
insl
adc
mov
insb
jnp
jmp
push
lods
dec
mov
fwait
dec
or
xor
push
lahf
loop
push
mov
cltd
ret
sahf
jae
out
cltd
add
push
data16
aad
mov
sbb
arpl
push
loop
and
popf
imul
mov
lods
pop
lret
push
mov
inc
pusha
mov
pop
xchg
jmp
iret
lahf
insb
sub
cmp
or
jno
add
mov
xor
xor
cmc
insb
inc
insl
les
pop
fsubl
cmp
mov
aad
movsb
shll
add
dec
inc
xchg
movsb
xlat
data16
ljmp
in
mov
dec
out
pop
je
out
jne
cli
inc
adc
loope
inc
into
mov
sbb
dec
sbb
mov
in
vmwrite
xor
mov
fsubl
jno
movsl
gs
aaa
mov
push
and
stos
sbb
cwtl
daa
scas
mov
js
pop
xor
dec
mov
outsl
mov
mov
cwtl
cwtl
xor
pop
popf
mov
xor
push
push
xchg
test
mov
mov
jle
mov
pop
dec
aaa
loop
jle
push
sub
lret
dec
lcall
mov
add
lea
pop
rcrl
aas
inc
addr16
and
xor
negl
xchg
add
dec
outsb
clc
in
shrl
jge
xorl
into
lds
addr16
sbb
jmp
aaa
mov
add
jle
push
xor
cmp
dec
jo
adc
dec
xchg
not
call
clc
push
dec
les
cld
repnz
add
sub
insb
add
movsb
xchg
dec
into
mov
pop
push
pop
mov
mov
jmp
jno
ficompl
sarb
jne
push
addr16
xchg
xchg
push
xor
fistl
xchg
int
andl
icebp
mov
mov
mov
jg
stc
rcr
lods
cmpsl
or
xor
in
pop
dec
jae
push
lds
xor
fdivl
push
addl
cmp
jl
cs
inc
shlb
sahf
push
xor
jmp
sbb
pushf
cmp
repnz
popl
inc
imul
xchg
sbb
and
jo
jmp
mov
dec
bnd
xchg
pop
call
inc
jns
push
subl
fldcw
mov
sub
rolb
xor
mov
xlat
fwait
push
or
jb
sub
jae
mov
jmp
pushf
nop
insl
sbb
jmp
call
int
das
and
test
out
mov
mov
inc
jecxz
mov
sub
push
mov
arpl
sbb
mov
or
jne
mov
in
mov
sbb
lock
dec
stos
jle
inc
stos
push
daa
push
fwait
mov
mov
adc
mov
xchg
pop
xchg
sub
dec
ds
dec
shrl
jnp
inc
and
std
xor
pushf
jg
mov
mov
jmp
sub
je
or
sub
je
mov
daa
mov
fidivrs
stos
fcoms
sbb
out
push
xor
mov
mov
mov
xchg
jnp
and
dec
sub
mov
xor
inc
aad
add
rorl
xor
shlb
aas
icebp
mov
pop
daa
fcompl
jg
loop
test
mov
mov
test
cmp
lods
fsubrl
imul
push
push
jl
icebp
or
mov
push
lock
out
inc
push
std
pop
mov
mov
repz
xchg
sub
test
sub
jns
add
daa
jg
dec
stc
fs
out
xor
lea
je
xchg
rclb
insb
imul
pop
mov
inc
sbb
test
sbb
subl
pop
pop
push
inc
push
rclb
mov
fisubs
scas
xlat
hlt
aas
ja
add
jne
lret
add
ret
pop
or
jge
hlt
imul
sbb
divl
pusha
or
in
adc
or
pop
sbb
mov
sub
pop
addb
mov
or
mov
rcll
mov
enter
iret
sub
sahf
out
jne
test
cmc
hlt
add
movsl
adc
rclb
pushf
aam
fdivrs
rolb
aas
sub
mov
les
mov
xchg
aam
mov
in
jp
cli
out
leave
mov
enter
sub
mov
ret
sbb
lcall
mov
or
out
loope
shr
dec
cltd
push
or
jae
in
filds
dec
into
dec
cmp
sbb
sbb
inc
push
ljmp
aad
hlt
cmc
inc
xchg
ljmp
sub
decl
jle
lcall
les
jmp
mov
mov
add
or
das
call
ret
adc
xchg
sub
ficoml
push
decl
and
jg
ja
sbb
out
cltd
sub
lds
jnp
stos
into
inc
and
inc
add
mov
das
lret
stos
divl
outsl
sbbl
jg
inc
test
push
neg
testb
iret
dec
subl
dec
add
rep
mov
jns
outsb
jge
sub
pop
pop
stc
cmp
cmp
push
sbb
mov
popa
lcall
jg
add
inc
ret
cld
push
pop
mov
pop
std
sub
add
lret
test
test
inc
cmp
inc
scas
cmpsb
aad
push
outsl
xor
ret
add
fimull
and
or
jg
lahf
ds
cli
jne
imul
mov
push
xchg
dec
push
inc
pop
adcl
or
mov
adc
test
fwait
xor
xor
and
sub
mov
ds
mov
lret
aad
lds
loopne
fstps
push
mov
push
insl
adc
out
ss
fisttps
ror
adc
pop
mov
adc
subl
test
rcl
lahf
decb
pop
pushf
mov
ret
aas
je
add
andb
loop
xchg
push
jnp
ret
imul
fsub
fsubrs
cmp
inc
cmpsb
mov
out
js
mov
outsb
test
aaa
mov
loopne
sti
mov
sahf
adc
xor
daa
mov
lcall
gs
addl
sahf
mov
aam
push
loopne
dec
sarl
pop
arpl
push
mov
call
inc
cwtl
pop
sub
pop
or
xor
ds
sbb
or
adc
ret
jp
mov
fisttpl
je
aaa
mov
imul
push
xchg
imul
clc
bnd
dec
mov
mov
inc
lret
cltd
push
push
lds
cmp
xorb
xorb
leave
add
xor
popa
mov
dec
test
jge
xchg
lret
cmpsb
sbb
jno
scas
stos
rcrl
sbb
outsl
mov
int3
add
adc
popf
or
lods
jb
movsl
cmp
out
mov
movl
arpl
rolb
xchg
mov
xchg
fimull
jg
pusha
lcall
in
in
xor
addr16
rcl
cmpsl
divb
mov
subb
in
pop
push
aam
imul
loopne
repz
mov
push
mov
orl
imul
dec
movb
add
enter
lea
out
dec
jl
dec
aaa
jl
dec
push
pop
add
adc
lds
or
or
cmpsl
mov
mov
push
sub
cmp
adc
pop
adc
lahf
or
rol
pop
inc
std
and
dec
loope
cmovb
jmp
aam
xchg
in
notl
sahf
xor
test
cmp
cmp
imul
cmp
cli
cmpsl
push
stc
out
cmp
pop
fsubl
xchg
loop
jne
les
pop
pop
and
xor
fsubl
lods
movlps
stos
icebp
mov
mov
scas
xchg
push
sub
adc
int3
lea
es
test
inc
push
dec
rorl
xor
hlt
push
sar
insb
jno
sti
decl
aad
inc
js
dec
adc
mov
jp
int3
inc
fsubr
imul
pusha
push
ss
inc
test
pusha
adc
inc
in
cmpb
xchg
idivb
arpl
loope
ret
xchg
jmp
jns
call
in
mov
fchs
repz
es
arpl
adcl
roll
test
stc
mov
out
mov
or
lahf
mov
adc
not
fnsave
cmc
popf
orb
fldenv
mov
adc
outsb
paddusb
jle
lret
lret
jge
jp
cmp
mov
shlb
sbb
jne
imul
loope
pushf
inc
lods
dec
sub
arpl
mov
ret
dec
cmp
test
sahf
cmp
fwait
inc
mov
in
mov
xor
int3
bound
mov
stos
push
add
ss
icebp
pop
movsb
shl
jnp
pop
sub
jmp
pop
iret
sbb
dec
adc
in
adc
mov
insb
fistl
test
aas
sbb
rcrl
outsb
jecxz
fbld
sbb
sub
clc
loope
nop
adc
push
jmp
adc
outsb
push
test
sub
jp
negl
xchg
movb
or
push
stos
xor
das
lock
push
jne
int
jmp
sbb
int3
popa
ja
pop
outsb
push
sbb
dec
or
and
lods
adc
xchg
sbb
ffreep
movsb
jg
pop
shrb
mov
or
clc
mov
xchg
cmp
je
sub
cmp
aam
and
pop
pop
push
or
inc
getsec
insl
mov
cmpsl
loop
pop
push
mov
ret
movsb
aaa
std
mov
jle
repz
jle
and
add
std
stos
cwtl
lcall
add
data16
aad
arpl
cmc
in
imul
pop
dec
test
inc
sub
popa
xchg
sub
in
rclb
mov
inc
jge
adc
sub
repz
movsb
jp
sub
imul
jnp
inc
inc
lods
and
int3
popa
add
jne
add
jecxz
clc
lret
test
add
fmulp
into
mov
ficoms
cld
out
test
jg
in
add
sbbl
jne
cmp
cwtl
and
enter
push
xchg
ljmp
ficoml
jmp
out
xor
stc
sbb
addr16
jp
jns
fwait
scas
call
stos
add
notl
negl
dec
movsb
inc
iret
enter
push
mov
sbb
test
dec
addl
fnstenv
ret
or
mov
sub
pusha
push
loopne
aam
jle
sbb
dec
data16
je
sbb
shrb
cli
out
popf
jnp
ds
ret
sahf
pop
add
dec
mov
lcall
sub
sbb
mov
mov
pusha
sarl
scas
std
xchg
ficoml
dec
in
xchg
xor
inc
dec
enter
push
leave
add
outsb
adc
mov
push
test
inc
out
lds
adc
push
out
push
jb
push
scas
sbb
cmp
std
push
fmull
pushf
mov
sbb
dec
jmp
pop
cmp
mov
negb
repnz
ds
iret
mov
lret
popa
lods
fsub
fistl
xchg
or
adc
jno
inc
bound
cmp
xchg
lea
jmp
lea
sbb
out
xor
sbb
fstp
iret
push
or
jmp
adc
enter
pop
dec
rcrl
out
pop
es
jns
sub
xchg
xorl
mov
addr16
add
push
mov
push
xorb
lahf
out
cmp
fcoms
xor
inc
popa
stos
hlt
mov
mov
in
decl
xchg
jp
into
jo
lea
imul
fs
cmpsl
mov
pop
ret
shr
dec
xchg
and
inc
pop
cltd
scas
mov
mov
mov
or
cmp
push
push
cmpsb
pop
fs
sbb
fs
lods
dec
stos
sub
and
int3
sbb
mov
sub
mov
push
adc
stc
sbb
in
cwtl
out
mov
shl
mov
or
adc
mov
dec
sbbb
pop
and
or
xchg
mov
movsb
movsl
jne
xor
ret
or
in
pop
ja
push
repz
inc
cld
adc
jp
jno
and
mov
les
rolb
or
adc
cmp
cmpsl
xchg
stc
jle
mov
mov
insl
popa
insl
scas
cmp
mov
xor
or
in
cltd
cmp
push
lods
loopne
pop
lock
in
lahf
popf
pop
fcom
in
push
bound
inc
leave
int3
hlt
mov
cmp
lcall
outsl
cmc
icebp
ret
cmp
cs
inc
notl
sahf
xchg
and
add
cwtl
cli
into
leave
mov
inc
shll
out
or
or
push
int
je
mov
cmp
cmp
xlat
cwtl
xor
mov
out
movsb
add
adc
out
jno
jns
les
dec
mov
lcall
movsl
sbb
pushf
scas
int3
ror
mov
xor
jns
xchg
sub
xchg
fcompl
pop
sbbl
std
lock
pushf
fstps
mov
mov
pop
dec
add
insl
loop
cmp
mov
clc
in
outsb
xor
imul
inc
mov
les
inc
adc
sub
cmp
jge
mov
jns
pop
lcall
or
ret
es
sbb
sub
sbb
stos
js
jb
dec
sbb
jbe
mov
sbb
xor
mov
xchg
sarb
sbb
mov
push
cmc
cmp
ret
pop
or
stos
js
shll
and
lahf
sbb
out
mull
pop
mov
and
cmpsl
test
xor
pop
cmp
inc
cmpsl
ss
fs
jecxz
adc
adc
lods
sub
add
cwtl
inc
xorl
nop
loopne
out
faddp
jl
js
jbe
dec
insb
mov
popf
shl
mov
adc
outsb
scas
pop
mov
popf
dec
mov
xchg
iret
je
sub
aaa
fwait
adc
fwait
sub
and
andl
subb
or
lahf
dec
nop
add
push
push
jmp
pusha
mov
push
mov
mov
hlt
pop
cld
add
pushf
mov
sub
fldenv
dec
fcmovnb
mov
jmp
repz
sub
dec
jo
sahf
jg
or
daa
cmp
adc
cmp
testb
mov
out
sti
fwait
dec
cmp
dec
xchg
ret
add
loopne
mov
jecxz
data16
mov
bound
adc
flds
scas
jl
push
vpaddsb
divl
mov
jne
push
and
jl
jg
je
dec
add
pop
cmpsl
aas
cmpsl
push
test
mov
addr16
bound
adc
pop
add
mov
lahf
aaa
push
faddl
push
jle
push
scas
inc
js
jecxz
xchg
mov
lock
push
std
lds
sub
ret
mov
rclb
sbb
pushf
and
jb
dec
xchg
push
mov
and
pushw
aas
xor
pusha
loop
hlt
repz
jnp
jbe
movsb
sbb
mov
inc
mov
jb
outsl
mov
subl
adc
xchg
mov
push
mov
xlat
or
jbe
mov
pop
pop
scas
xor
cmp
cmp
leave
rcrb
xlat
dec
into
push
test
mov
sub
ret
loope
mov
add
fldenv
fisttps
push
dec
xor
movsb
nop
scas
lods
repz
insb
sarb
inc
or
push
cmpsl
push
test
xor
xchg
push
xchg
pop
inc
dec
stos
push
push
push
int3
add
popa
adc
out
or
pop
loope
mov
rorb
mov
xorl
xchg
lds
and
roll
arpl
jle
or
dec
jmp
cmp
xor
mov
add
xchg
cld
inc
movsl
call
jmp
jno
movsl
mov
inc
xchg
adc
and
mov
lcall
pop
dec
ror
sub
xchg
daa
sbb
mov
mov
out
iret
mov
movsb
das
push
repz
test
or
arpl
push
mov
loope
push
enter
mov
cmp
arpl
out
shlb
adc
cmp
adc
jne
mov
mov
mov
stos
mull
inc
rcrb
outsl
xor
nop
cmp
test
push
out
xchg
adc
inc
lods
cmp
test
jl
xor
outsb
inc
mov
mov
lods
fdivl
out
xor
xchg
adc
and
movsb
std
outsl
inc
xchg
lret
cmp
sub
and
jnp
mov
cmp
and
ficompl
scas
fisubs
pop
lock
cmpsl
shlb
mov
cmp
or
or
lods
pop
test
fdivs
lahf
pop
insl
pop
sbb
xchg
lods
cmp
sub
jp
imul
scas
cli
imul
mov
sbb
in
ds
movsb
sub
fsubrl
dec
xor
movsb
xchg
xor
std
sbb
and
call
jmp
into
jno
ja
daa
pop
sub
repnz
jecxz
pop
les
mov
mov
hlt
or
jbe
sti
add
mov
ss
mov
sbb
test
rcrb
dec
outsb
sbb
sbb
sbb
jno
xchg
daa
push
mov
sub
fdivrl
rolb
and
cmp
adcl
xchg
cmp
ja
inc
adc
pop
rcrb
cli
adc
mov
sub
cmc
jns
jns
iret
addr16
push
xchg
add
add
jle
fidivrs
jp
dec
ret
mov
lret
ficoms
xchg
int3
add
cmp
push
aas
lret
ljmp
lods
cmpsl
insb
mov
lock
outsb
sti
mov
inc
mov
mov
sbbb
jbe
loop
push
mov
or
jno
outsb
std
add
rcr
shr
mov
jecxz
pop
pusha
js
xchg
sub
inc
or
imul
dec
lds
clc
and
js
cmp
hlt
sub
jae
cmpsb
stos
test
and
mov
sbb
ds
xchg
sub
sbb
lahf
cmpl
outsl
jg
pop
les
ss
inc
rorb
loop
mov
pop
push
ss
pop
mov
pop
shl
ljmp
add
ss
pop
jno
adc
rolb
movsl
daa
cld
adc
dec
movsb
rorl
dec
mov
mov
push
insb
mov
adc
enter
mov
mov
aaa
push
int
mov
enter
mov
sbbl
mov
out
pop
mov
in
test
push
cmp
nop
mov
out
xchg
pushf
icebp
or
xchg
pop
lret
insb
inc
push
mov
sbb
test
cld
mov
mov
jmp
leave
pusha
push
sub
int
add
xchg
fmul
jl
pop
lret
mov
bound
fisubs
mov
pop
xchg
mov
dec
mov
enter
xor
sbb
cmpsb
jp
cltd
cmp
stos
cmp
out
sub
mov
iret
jbe
add
and
mov
stc
in
popa
cs
dec
sbb
std
in
ja
sub
xchg
cmc
adc
sub
mov
adc
mov
adc
add
ja
ror
mov
pop
sahf
test
pop
popf
bound
lcall
ljmp
aad
fisttps
sahf
push
shrb
cld
mov
push
mov
scas
arpl
sbb
jnp
mov
inc
and
test
adc
pop
xor
sub
sub
cmpsb
aad
sbb
rolb
sbb
stos
xchg
outsb
pop
test
mov
arpl
cmpsb
jno
mov
xor
test
lods
int
pusha
icebp
mov
or
adc
cmp
lds
dec
mov
mov
lock
or
or
lea
pop
mov
add
cmc
test
xor
out
sub
cmpsb
test
mov
ret
adc
cmp
mov
das
ret
push
iret
mov
pop
mov
cmc
fwait
imul
sarl
ss
lret
mov
hlt
sub
xchg
popa
mov
xlat
out
and
xchg
sub
mov
inc
add
fdivr
in
pusha
sbb
xor
cmp
xchg
mov
adc
jmp
addr16
mov
push
into
jle
or
iret
pop
sbb
sbb
icebp
sbb
in
movl
outsl
mov
mov
or
cmc
test
sbb
cmp
ret
push
imul
jne
mov
mov
pop
and
push
dec
xor
clc
dec
es
xor
inc
jge
call
addr16
sbbb
fbstp
xor
jae
insb
loop
jne
adc
mov
sub
sbb
clc
jle
fwait
sarl
insl
scas
sub
adc
mov
jp
dec
jp
testl
and
stc
lock
leave
pop
fcoms
inc
lahf
inc
and
push
pop
or
mov
xchg
mov
pop
dec
push
js
dec
int3
hlt
popf
test
call
movsl
mov
and
lock
std
cmp
lcall
jl
incl
cltd
sbb
dec
cmp
fldcw
lods
mov
and
jbe
dec
dec
repnz
push
gs
int
dec
es
rcr
pop
mov
lret
add
out
outsl
test
xchg
add
jns,pt
mov
aam
adc
in
adc
add
xor
adc
dec
gs
cltd
jp
test
dec
outsl
movsb
les
pusha
adc
sbb
lods
bound
or
out
jbe
jnp
mov
cmpl
fcoms
sub
aaa
sub
outsb
call
lods
lahf
mov
mov
nop
sbb
cmp
rolb
shl
daa
ljmp
jge
xlat
or
pop
sahf
and
push
xchg
insb
adc
test
mov
lea
mov
cmp
leave
pop
loop
lds
pop
shrb
test
loop
add
mov
das
sti
push
mov
inc
fdivrs
scas
dec
in
insb
test
pop
dec
int
push
add
test
incb
mov
scas
adc
bnd
xlat
movsl
rcll
cwtl
and
sub
jae
insb
ja
push
push
sub
je
inc
add
in
sbb
push
add
hlt
and
sub
ja
loop
and
push
pushf
mov
mov
adc
stos
push
aas
fcoms
cmp
arpl
mov
sbb
clc
pop
xorb
adc
fdivs
test
dec
inc
loopne
mov
sarb
int3
test
iret
and
aad
mov
arpl
stos
mov
test
and
ret
and
dec
lret
arpl
nop
jne
pop
push
xor
pop
cli
and
lahf
pop
enter
lahf
gs
push
mov
mov
call
xlat
call
pop
mov
or
fisubs
out
jp
or
jp
push
data16
adc
test
in
test
out
lret
les
mov
int3
sub
gs
shrl
jnp
jae
adc
fadds
sub
cmc
sbb
out
mov
or
lods
daa
gs
xchg
lock
rcrl
das
jle
or
movsb
mov
arpl
xor
jno
jge
pop
push
xchg
mov
jg
or
dec
mov
adc
and
jno
mov
fwait
dec
xchg
push
mov
jbe
add
mov
lock
cmpl
push
add
sbb
test
jl
fs
lds
jne
gs
les
fists
sub
dec
sub
xchg
dec
add
std
cmp
movsl
push
push
mov
mov
push
mulb
mov
std
mov
add
pushf
mov
xchg
into
xchg
mov
std
rcr
add
xchg
cmpsb
movsb
push
popf
mov
sarb
stos
or
inc
in
sarb
popa
mov
mov
fstl
sarl
mov
dec
jns
adc
or
movsb
dec
dec
ret
sub
roll
xchg
xor
fcompl
addr16
pop
je
dec
fsts
cmp
aam
jnp
les
in
cmp
iret
bound
push
inc
cmp
cmp
inc
add
sub
mov
ss
inc
fwait
xchg
aad
and
shrb
ss
mov
out
rolb
inc
fdivrp
cld
imul
add
loopne
cmp
jmp
cmovs
pop
aam
mov
mov
fwait
xchg
fisttps
and
mov
loope
sbb
cmp
sub
aaa
xor
es
inc
mov
movsl
cmpsl
pusha
push
iret
aad
push
arpl
sbb
mov
sub
aad
std
add
sub
int3
inc
popa
cmpsb
jne
jne
stc
ror
in
pusha
and
subb
mov
sbb
jb
fldpi
mov
jo
cmp
les
cmp
shll
out
or
or
and
clc
cmp
adc
xor
and
aad
dec
lahf
xlat
xlat
cli
int
pop
mov
out
jp
shl
or
and
and
loope
push
icebp
lcall
loope
enter
scas
pop
jns
je
and
pushf
imul
jae
pop
mov
or
xchg
sahf
test
or
shrb
xchg
inc
jp
loop
mov
cmp
sub
jo
int
sbb
test
xlat
test
int
push
and
stc
sub
inc
adc
pop
in
outsb
test
cmp
mov
push
fcoms
ja
lods
pushf
jecxz
lock
outsl
lds
outsb
pop
sub
pop
imul
out
jbe
cltd
cmp
rclb
add
hlt
mull
mov
sub
mov
outsb
popf
clc
xchg
sub
sbb
adc
test
aas
lods
sahf
xchg
icebp
and
aad
popa
filds
popa
repnz
stos
in
push
mov
rclb
mov
sub
scas
push
dec
lcall
mov
lret
fdivrs
sbb
stos
mov
addr16
cmp
mov
mov
es
and
jnp
stc
add
in
xor
pop
dec
ja
xor
jo
test
jge
jecxz
stos
adc
push
fdivrs
sti
cmp
jge
notb
push
mov
cli
pop
leave
adc
xchg
lds
std
and
clc
mov
jg
mov
inc
iret
clc
cmp
sbb
and
and
std
lcall
and
imul
mov
push
sub
mov
ss
sti
fxch
popf
lods
insb
xchg
stos
mov
mov
shll
mov
enter
jle
orl
ret
movsl
jo
cli
cmovae
jae
pop
mov
popa
add
pop
push
call
test
sub
xchg
adc
test
pop
mov
stos
jb
aas
cltd
push
pusha
and
inc
pop
jg
adc
jo
mov
scas
in
add
cmpsb
cmp
orb
stos
mov
bound
cmpl
adc
ja
mov
in
jo
push
fcmovnbe
and
push
or
imul
sbb
popa
mov
xchg
adc
push
imul
push
pop
add
jno
cld
es
test
cld
push
cmp
aaa
enter
lods
loope
add
mov
call
add
or
sub
movsb
push
or
push
ror
scas
sub
pushf
jo
pop
lret
lret
out
dec
lods
pop
and
movsl
push
imul
mov
dec
cltd
mov
jo
sub
push
push
or
pop
push
out
fcmovnb
jnp
xor
incl
mov
mov
pop
push
cmc
iret
xor
es
add
aaa
jae
outsl
or
push
xchg
imul
cs
in
rcrb
fcoms
push
hlt
jge
insb
mov
xor
mov
clc
mov
mov
mov
pusha
mov
sbb
jno
xchg
mov
push
jo
mov
inc
enter
cmp
pop
outsb
mov
ljmp
insb
add
mov
clc
out
mov
inc
mov
inc
rorb
in
sbb
sbb
call
dec
cltd
stc
sub
inc
das
data16
jbe
int
inc
pop
popa
aaa
or
sti
ficompl
inc
out
pop
mov
aas
and
mov
out
dec
cltd
dec
mov
and
mov
jg
ljmp
dec
jl
pop
mov
ret
fnsave
xor
cwtl
in
inc
test
jecxz
int3
add
mov
lea
mov
fs
ss
repnz
adc
dec
and
sti
mov
aas
pop
sti
dec
sbb
inc
fnstsw
add
ret
add
repnz
in
dec
adc
or
loope
mov
orb
jae
hlt
mov
int3
pop
call
xor
or
or
ss
jbe
orb
imul
inc
icebp
push
in
inc
daa
mov
loope
fs
xchg
scas
push
sbb
outsl
test
test
pusha
call
cld
ljmp
and
jp
popa
cmp
gs
inc
push
das
jns
ret
rcll
push
test
mov
jbe
cmp
mov
push
xchg
movb
mov
sub
or
and
inc
jg
push
lret
lds
mov
cmpsl
xchg
cwtl
xor
add
pusha
inc
xchg
xchg
mov
sub
adc
aas
data16
pop
inc
call
shlb
pop
jns
nop
addb
insb
inc
inc
mov
add
add
movsl
jnp
or
mov
pop
decb
mov
or
cmp
andb
cmp
shl
in
nop
dec
ret
test
push
aam
int
sub
xor
xchg
aam
jmp
push
or
lahf
out
dec
js
or
dec
and
xor
adc
mov
in
inc
push
pushf
hlt
int
xor
shrb
mov
imul
out
xchg
inc
dec
pop
test
push
sub
popa
jmp
mov
pop
mov
iret
pop
sbb
cmc
in
jb
iret
fs
std
push
fisttps
test
sub
les
pop
push
movsl
lods
insl
sbb
enter
and
test
cld
xchg
aam
or
pop
jecxz
stos
xor
pop
push
push
or
fistl
pop
nop
sahf
inc
out
or
or
mov
notl
pop
pop
sbb
ja
in
push
push
movsb
push
fistps
lock
testl
mov
mov
ret
enter
mov
push
adc
adc
dec
stos
lods
out
push
rcll
sahf
mov
test
pop
out
fidivrl
popf
inc
jp
push
ss
cli
hlt
add
aam
pop
repz
xchg
arpl
xchg
clc
push
mov
je
jge
cmp
mov
sbb
mov
jecxz
adc
hlt
and
add
bound
push
nop
jle
imul
sbb
pop
sbb
and
push
mov
mov
push
jb
cmp
jle
mov
outsb
jbe
loope
test
test
ret
popf
cwtl
push
aas
push
jae
or
into
add
rcrl
sbbl
loopne
test
inc
test
loopne
and
loopne
add
sub
push
test
jae
mov
mov
push
mov
adc
sub
mov
rcll
rorb
mov
mov
mov
sahf
mov
fisubs
mov
rolb
push
pop
or
mov
mov
mov
fistl
das
push
lret
mov
mov
adc
rol
or
dec
cmp
xor
es
fsubr
leave
sar
jecxz
pop
mov
mov
and
imul
int3
adc
xchg
xlat
cli
xor
loop
and
push
out
xor
mov
in
movsl
inc
ja
loope
adc
jns
xor
pop
repz
aam
lret
int3
sub
fiadds
xchg
inc
sub
pop
and
mov
or
gs
push
inc
push
sar
enter
repz
pop
jnp
divl
mov
or
lahf
ja
lahf
in
add
or
inc
into
pop
imul
dec
push
mov
out
pop
hlt
test
stos
ficomps
fcoml
loop
push
loop
xor
pop
pop
push
cmpsb
rclb
xchg
lret
jae
cld
in
push
push
ret
adc
ret
push
pop
mov
adc
cltd
mov
cmc
push
lret
shlb
dec
push
mov
add
adc
insb
adc
stos
pop
test
or
mov
adc
mov
rclb
mov
sbbb
js
push
inc
xor
daa
pop
mov
adc
mov
pop
clc
pushf
mov
sub
or
fnstcw
sub
in
dec
cmp
xchg
addb
out
mov
jle
in
pop
add
add
mov
jns
and
sti
and
shrl
jmp
hlt
insb
add
cmp
repnz
shlb
fs
fwait
fs
pop
les
lret
push
aam
dec
shl
in
fldl
xor
sti
jmp
mov
lret
mov
imul
mov
ret
mov
mov
mov
mov
jl
cmp
jb
and
add
xchg
aam
outsl
pop
mov
add
sbb
jbe
add
cmp
test
xchg
iret
scas
cmc
pop
cmp
rcll
das
in
push
mov
fdivl
test
push
mov
mov
cs
mov
fcmovb
add
xbegin
dec
xchg
sub
pop
out
push
adc
jae
into
mov
mov
xor
jnp
insl
insl
pop
test
cmp
dec
les
sub
or
int3
sar
imul
ss
jae
repz
subl
jecxz
shrl
mov
mov
and
jmp
mov
roll
test
sub
inc
stos
push
push
mov
int
fnstcw
shlb
add
mov
jl
clc
sub
dec
int3
and
je
jb
jno
gs
ds
loop
mov
iret
insl
or
int
lea
je
int
jne
pushf
iret
inc
push
fwait
inc
add
fdivr
add
mov
mov
aas
shrb
mov
cld
jecxz
dec
jne
test
shl
jb
movsl
cmp
mov
fs
jg
adc
insb
movsb
loop
ljmp
mov
aas
andl
jle,pt
adc
in
pushl
es
mov
pop
in
je
aaa
and
scas
sub
adc
jae
xor
adc
ljmp
mov
xor
add
mov
adc
sbb
test
mov
pop
sbb
push
outsl
call
ljmp
or
or
fildll
sbb
shrl
xchg
imul
mov
dec
jae
insl
cmpsb
scas
and
dec
add
mov
mov
outsb
mov
jno
mov
xchg
or
add
ret
sbb
mov
mov
jp
fbld
loope
sub
in
aas
xchg
fcmovbe
push
cmpsl
jecxz
sbb
outsl
jle
loop
pop
insb
mov
fucomi
and
fsubs
ljmp
mov
pusha
jnp
test
sahf
push
js
aaa
aaa
or
cld
jbe
cwtl
dec
mov
mov
sbb
xchg
int3
daa
or
repz
lret
pop
inc
insb
mov
daa
add
mov
adc
lods
cs
jmp
xlat
repnz
or
jbe
and
xor
push
cmp
mov
pop
xor
push
cli
cmpsl
xor
add
xor
flds
sub
add
es
push
cmovs
mov
sub
xchg
fcoms
push
push
jo
or
movsl
add
inc
insl
fildll
in
inc
aas
mov
jmp
sbb
cld
sub
and
xor
fistpl
sub
mov
sbb
xor
cs
aaa
std
xlat
in
mov
roll
dec
cli
movsb
jae
and
cltd
sbb
pop
fwait
cmp
hlt
das
int3
sbb
scas
dec
cltd
sub
outsl
xchg
xchg
das
sbb
adc
sbb
clc
dec
fwait
ret
fdivl
out
stos
inc
pop
xchg
jl
ret
out
adcb
test
xchg
dec
mulb
fmuls
loope
arpl
push
xchg
loop
int3
adc
sti
sbb
pop
cld
inc
pop
mov
imul
insb
sbb
stos
test
fisttps
pushf
clc
mulb
push
out
push
popf
mov
fildl
push
dec
outsl
and
scas
pop
out
pop
loop
mov
mov
addr16
add
cmp
lds
cmp
nop
popf
ret
std
xor
mov
clc
aaa
imul
push
jmp
jns
or
jae
lret
fiadds
test
push
icebp
pop
movb
push
xor
inc
in
mov
and
adc
movsl
roll
enter
mov
xchg
nop
push
enter
adc
add
or
pop
ja
mov
xor
leave
push
or
aam
xchg
adc
ss
xchg
cmpsb
pop
repnz
sahf
mov
sbb
inc
jle
jmp
push
test
outsl
mov
in
fidivs
repz
dec
xor
pop
adc
out
mov
jg
mov
xor
fcoml
mov
les
jg
movsl
mov
jl
test
or
sub
cmc
adcb
icebp
shlb
pop
ds
dec
xor
fs
jnp
and
into
xchg
decb
jle
xor
jge
sbb
fmull
push
add
mov
jle
mov
jo
lock
ror
pop
nop
sbb
je
stos
es
pop
repz
lods
adc
inc
into
fs
int3
lea
out
cs
jno
stos
pusha
stos
dec
repz
mov
andb
pop
into
cmpsb
push
movb
lock
stos
in
or
sbb
sub
popa
sti
pusha
adc
arpl
hlt
addr16
lahf
inc
shll
daa
sub
pop
div
lret
outsb
pop
push
xchg
repz
insl
add
adc
mov
jo
clc
icebp
inc
sbb
stc
bound
or
sbb
dec
lret
loopne
loopne
dec
in
subl
or
push
bound
and
sbb
pop
punpcklwd
dec
outsl
movsb
insl
jp
mov
outsb
sub
dec
shl
loop
aam
loop
jle
xchg
sub
in
xchg
xchg
inc
cmp
jmp
fxch
into
jmp
popf
push
push
std
aas
hlt
cmpsb
jecxz
jns
out
jae
bound
mov
inc
and
insb
sbb
xor
jl
cmp
cli
mov
out
shll
add
xor
loope
arpl
adc
sbb
je
mov
mov
xchg
jb
mov
iret
out
test
inc
mov
push
dec
lahf
jbe
roll
movsb
addr16
ds
or
xchg
sub
insb
mov
lods
inc
xor
insl
and
push
imul
sbb
push
clc
subb
test
hlt
js
fldt
sbb
adc
pop
aad
dec
mov
cmpsb
and
mov
cltd
loop
mov
rolb
sub
aaa
inc
ret
jmp
rorb
jge
sbb
sub
mov
mov
ror
imul
shll
je
lahf
fadds
xor
mov
aaa
xchg
jge
pop
jo
sbb
loope
push
push
hlt
es
mov
daa
adc
push
sbbb
xchg
sbb
sub
or
jle
in
daa
mov
xchg
mov
movsb
cltd
mov
xchg
mov
push
imul
sti
xchg
cmp
cmp
push
test
iret
fisubrl
push
add
mov
mov
nop
sbb
push
les
mov
or
mov
movsl
enter
cmpsb
inc
out
mov
scas
push
dec
xchg
inc
and
subb
sbbl
mov
dec
inc
dec
fldcw
daa
jne
sbb
mov
inc
jno
xchg
gs
xchg
add
das
js
mov
sub
incb
xor
or
in
and
jecxz
repz
cmpsl
pop
in
int
xchg
mov
dec
push
outsb
std
pop
xor
add
mov
inc
dec
shrl
rcl
mov
mov
push
mov
popa
mov
mov
idivl
das
pusha
inc
or
jmp
xchg
lret
push
inc
in
cmp
jo
xchg
mov
push
addl
int3
xchg
pop
fldt
xchg
mov
movsb
movsl
or
inc
fisttps
or
push
out
fldt
mov
pusha
push
push
mov
push
add
jno
addr16
xchg
jge
lods
xchg
inc
es
repz
lret
or
scas
or
ss
mov
imul
push
incb
jns
mov
add
xchg
fs
fwait
xchg
add
adc
shll
xchg
xor
mov
mov
sub
or
outsl
clc
shlb
sub
ret
clc
movsl
and
dec
xchg
push
add
test
push
insl
push
mov
jns
push
popa
popf
test
jbe
leave
push
lods
pop
and
cmp
pusha
xchg
pop
sub
or
sbb
les
mov
ja
cmp
test
push
push
test
xchg
ds
repnz
jge
jbe
data16
adc
push
add
es
pop
xchg
pop
aam
cmpsb
fisubrl
sub
sub
pop
xchg
stos
mov
and
or
js
mov
int3
jnp
pop
adc
lods
mov
andb
xor
popa
dec
jecxz
lds
mov
sbb
cmp
insl
aaa
and
outsb
xchg
nop
int
jbe
js
rclb
add
lret
int
xor
xchg
or
repnz
sbb
scas
out
rcll
xchg
scas
add
mov
popa
test
sbb
cmpb
xor
adc
push
lds
adc
jbe
or
add
add
aaa
outsl
jbe
cwtl
inc
add
and
push
mov
or
xor
std
inc
sub
lods
loopne
inc
stos
push
sbb
les
add
loopne
int3
mov
aam
xchg
outsl
addr16
and
pop
and
inc
es
mov
dec
fildl
icebp
lret
cltd
xor
mov
jno
xchg
clc
loopne
enter
arpl
push
fwait
xchg
or
out
mov
lea
out
leave
push
adc
dec
or
push
inc
lret
shlb
sbb
xchg
fwait
sbb
mov
jle
add
xchg
outsb
aad
dec
nop
addr16
fnstenv
push
pop
push
stos
mov
testl
cmp
aad
into
mov
adc
in
jb
sti
sbbb
inc
dec
sbbb
dec
cmp
sub
or
cmp
imul
mov
mov
jno
arpl
jno
repnz
mov
scas
mov
add
push
adc
and
addr16
in
xchg
cwtl
lds
arpl
sub
cs
sti
xor
add
xor
insl
xlat
div
imul
aaa
out
sub
cmp
inc
push
ja
jno
fimull
jno
push
cmpsb
repz
test
pushf
or
roll
add
lea
jns
mov
xchg
jbe,pt
adc
ljmp
js
sarb
or
lret
aas
insl
out
rorl
fcoms
xor
mov
cwtl
popl
or
ja
cmp
testl
mov
xchg
push
mov
cmp
jecxz
pop
sbb
xor
icebp
xchg
mov
xchg
add
fdivp
ljmp
popf
mov
or
mov
in
pop
es
js
and
mov
or
inc
lds
sahf
bound
xor
xlat
jmp
jp
jo
stos
rcrl
out
cmc
ret
sub
in
cltd
imul
jmp
mov
test
cmp
imul
test
jp
xor
inc
hlt
mov
arpl
vpshab
int3
aas
in
rcrl
mov
leave
into
aam
pushf
lds
xor
inc
mov
addr16
out
mov
jne
and
pop
popa
inc
scas
push
push
or
mov
stos
cwtl
add
les
cwtl
mov
in
fstpt
mov
push
mov
in
dec
test
outsb
fdivs
cmpsl
mov
cs
shll
std
xchg
mov
jns
add
jl
mov
stc
fistpll
push
lods
or
push
insb
push
jmp
dec
xorl
xchg
repnz
adc
cmp
sbb
mov
addb
test
lret
push
lea
cmp
mov
stc
cmpsw
mov
clc
ret
in
jl
or
jle
pop
xor
shlb
outsb
je
subps
ds
ss
cs
pop
fnstcw
mov
mov
jmp
dec
mov
and
dec
fdivrs
insl
xor
bound
ret
xor
aad
movsb
data16
adc
repnz
or
iret
mov
pop
sbb
jp
cmc
push
xchg
ljmp
xchg
sub
mov
adc
idivl
lret
mov
dec
rclb
xor
enter
add
sbb
es
sbb
jg
pop
xchg
pop
fldt
jp
leave
push
push
add
imul
mov
jle
fdiv
jge
pushf
inc
push
adc
into
ds
clc
mov
mov
test
cmp
add
sbb
nop
loope
inc
scas
test
dec
dec
push
jbe
movsl
subl
in
mov
xchg
sub
outsl
loopne
pusha
subb
add
mov
test
enter
pop
cwtl
movsb
mov
rcr
imul
fdivrl
xor
mov
pusha
es
mov
stos
push
jno
pop
pop
adc
rolb
movsl
movsb
pop
jp
scas
jnp
test
push
pop
and
cmpsb
loope
add
xchg
adc
cltd
data16
push
push
fwait
lds
frstor
in
push
mov
les
stos
dec
aaa
mov
adc
ret
das
sbb
mov
jo
mov
jns
test
mov
add
adc
xlat
imul
gs
andb
lret
out
ja
cli
xchg
test
adc
jle
sub
jmp
jle
mov
icebp
aad
repnz
loopne
add
sahf
and
scas
push
mov
jp
jbe
push
scas
and
or
inc
xor
jmp
mov
lahf
sub
sbb
inc
ret
push
rcrb
push
xorb
sub
jbe
je
jle
mov
movsl
sub
ljmp
pop
jp
stos
loopne
filds
pop
pop
inc
and
and
xchg
jmp
test
mov
fstpt
gs
mov
fcomps
push
es
std
ret
ds
jge
aaa
jecxz
mov
aad
pop
add
out
call
pop
nop
push
aad
aas
popa
jne
cmp
lds
add
mov
sbb
lds
insl
xadd
insb
iret
jg
das
out
arpl
imul
int3
or
adc
adc
and
push
and
fidivrs
xor
adc
jge
imul
mov
push
jbe
push
int3
cmp
frstor
enter
jge
pop
pop
int
pop
add
clc
shl
jp
addl
in
mull
or
fwait
mov
or
cwtl
lret
cmp
sub
jge
movsb
pop
mov
pop
jmp
xchg
pop
sub
scas
and
add
in
ds
add
fistps
or
mov
movsb
add
mov
rol
pop
pusha
imul
inc
mov
or
stc
ja
cld
jns
sub
push
popa
jl
movsb
ret
dec
test
in
iret
mov
fsts
and
xchg
sbb
and
dec
test
add
in
mov
mov
dec
sub
inc
cmp
mov
cwtl
popa
inc
xchg
aad
jp
dec
inc
mov
add
push
pop
or
clc
ret
dec
movsb
inc
push
pushl
scas
cmp
sub
push
movntq
leave
xchg
jnp
adc
clc
jnp
sub
add
push
pop
or
xor
gs
xchg
mov
negl
push
lock
mov
cmpsl
push
jo
push
xchg
in
mov
mov
leave
add
imul
fstpl
mov
adc
inc
rclb
fbld
dec
movsb
cmc
xchg
int
enter
enter
mov
jge
xchg
sub
or
xor
gs
mov
shlb
bound
cmpb
pusha
bound
lcall
bound
popf
push
dec
into
jge
aad
inc
pop
and
mov
push
sbb
mov
mov
dec
mov
mov
sbb
leave
mov
movsl
pop
mov
cmp
dec
adc
cmp
ljmp
lret
arpl
inc
outsl
sbb
shll
push
out
popa
pop
das
pop
aaa
mov
inc
or
jo
push
mov
mov
dec
gs
insl
testl
sbb
pop
cs
and
rorl
dec
cmpsl
mov
sti
push
pop
testb
dec
test
pop
xor
mov
xchg
rcrb
outsl
sbb
sub
test
loopne
dec
cltd
mov
mov
or
push
or
repz
lahf
cmc
in
adc
mov
lea
out
je
imul
mov
pop
inc
cs
fsubr
sti
ja
sbb
push
add
je
or
pop
out
push
fsubr
xchg
xchg
gs
add
dec
popf
out
fwait
lcall
repnz
adc
sbb
out
inc
push
nop
ja
pop
adcl
sub
dec
push
or
inc
mov
popa
cs
mov
in
enter
popa
ja
pop
es
inc
mov
dec
cmp
arpl
fcomi
and
push
imul
outsb
push
mov
dec
or
push
xchg
in
ds
mov
or
mov
xchg
or
or
dec
gs
or
push
in
loop
xchg
adc
pop
jmp
repnz
lods
aas
xchg
aad
rorb
insb
sub
out
dec
xchg
add
pop
cmpsl
ficoml
cmpsb
adc
lods
sbb
mov
sahf
and
leave
in
aaa
data16
adc
sbb
dec
and
shl
inc
add
mov
test
orl
rolb
adc
push
or
or
fwait
out
push
or
out
loope
fistl
jb
pushf
adc
cmp
push
jmp
pop
mov
adc
add
push
ljmp
cmp
in
roll
mov
pop
mov
mov
pop
icebp
out
shll
push
adc
push
aam
repnz
add
cmpsl
push
shrl
das
cmp
push
cmp
lea
inc
lock
xor
lret
imul
icebp
sti
mov
stos
add
lret
xchg
inc
movsb
push
pop
push
aam
repnz
outsl
aad
push
stos
xor
aas
mov
push
sbb
jno
cmpsb
xchg
addr16
rcrl
pop
cmp
dec
xchg
jbe
loopne
dec
push
jge
test
scas
adc
out
in
xchg
fs
cmpsb
add
out
int3
out
lret
leave
imul
push
jecxz
pop
gs
sbb
cltd
mov
push
imul
xchg
mov
mov
div
iret
push
and
jae
inc
aam
aaa
jle
sub
xor
adc
out
pop
sbb
mov
xor
jl
jbe
sbb
inc
push
dec
ljmp
mov
lcall
mov
das
xor
cmc
sbb
mov
pop
add
jb
fstl
cmp
or
out
push
jecxz
cwtl
mov
jmp
xorb
leave
adc
inc
sub
pop
mov
test
xchg
and
je
test
enter
pop
adc
imull
mov
xorl
dec
je
xchg
scas
cmpl
es
out
mov
or
fdivrl
xor
cmpsl
les
xchg
xchg
xchg
push
rclb
cmc
cmp
mov
sarb
lcall
sbb
push
xor
or
mov
inc
jle
punpckhwd
mov
out
fwait
out
ja
sbb
jge
in
and
ret
xor
fsubs
or
nop
or
leave
inc
mov
sbb
lods
mov
pop
outsb
dec
gs
lds
push
jno
ror
inc
mov
popaw
test
adc
aas
loop
daa
lea
sub
stos
cld
sub
fmul
jno
sti
fdivrs
mov
ds
bound
pusha
pushf
adc
add
xor
jne
cli
or
fdivrs
cmpsl
sbb
xchg
cmpsb
test
movsl
or
lods
ljmp
cmp
jle
add
push
daa
rcl
in
xchg
add
add
je
xlat
jle
stc
arpl
stos
xchg
push
je
dec
add
lea
mov
daa
sbb
mov
imul
shl
jno
push
dec
frstor
scas
dec
rcl
rcll
sti
stos
bound
sub
sub
cmp
adc
fimull
pop
mov
loope
cld
inc
push
pop
push
fsubs
je
pop
lahf
xor
inc
push
je
dec
cwtl
dec
dec
fcomps
pop
mov
mov
pop
call
inc
inc
fldenv
daa
mov
test
fs
pop
lret
int3
xchg
dec
push
pop
call
fdivp
jle
addr16
pop
push
cmpb
dec
xor
aas
cwtl
and
stos
les
sub
lahf
insb
iret
and
loop
mov
les
je
xchg
dec
add
cmp
inc
shll
dec
sti
cmpsl
xchg
iret
lret
ja
movsl
leave
mov
insl
fisttpl
push
hlt
inc
dec
std
shll
out
je
repz
cs
pop
xchg
xor
push
loope
cmp
ficoms
lods
subl
outsl
push
jle
pop
cmp
inc
std
popa
aam
stc
pop
mov
bound
jo
inc
jno
and
xchg
mov
bound
fimull
cmpsb
in
shll
push
adc
mov
mov
adc
insb
test
rcll
out
xchg
into
push
lods
and
ds
lahf
push
push
cs
int3
ret
add
mov
or
mov
int3
jl
daa
testb
push
cmp
cmc
das
pop
cmpsl
mov
mov
movsb
pop
rorl
enter
out
xchg
sbb
or
arpl
popf
mov
rclb
mov
inc
ret
xor
fisttps
ret
push
pop
je
mov
or
aam
dec
pop
mov
subb
fistpll
push
lret
jnp
aas
or
adc
or
mov
fstl
lret
pop
mov
jo
pop
int3
or
cmc
adc
mov
pusha
sahf
ror
adc
in
mov
mov
or
movsl
xor
mov
int3
faddl
pushf
cmpsb
mov
call
mov
xchg
ss
nop
sub
fs
es
in
adcl
imul
mov
mov
aaa
push
aas
loope
shrb
sar
inc
mov
mov
movl
add
push
popf
and
test
sbb
cwtl
mov
dec
push
cmp
sub
jge
inc
push
shl
jnp
mov
rcrl
ss
sub
sub
xchg
cli
insb
adc
xor
mov
ss
xor
sub
into
sub
in
mov
pop
loopne
icebp
cmp
or
rclb
mov
mov
inc
lea
popa
xlat
jecxz
sbb
imul
inc
sbb
sub
xor
push
mov
xchg
pop
das
imul
lahf
inc
ret
out
push
sub
and
jecxz
pop
adc
add
or
stos
das
in
loop
rolb
add
fiaddl
mov
jae
sbb
push
das
dec
add
jecxz
out
and
pop
or
adc
xchg
das
test
adc
xor
repnz
aas
pop
xor
dec
loope
stos
xor
iret
inc
es
shll
in
xchg
jae
nop
fidivl
mov
popa
pop
cltd
xor
loope
adc
xor
imul
sub
dec
aam
repz
xor
daa
jbe
mov
adc
dec
popf
and
mov
sarb
mov
add
inc
xchg
inc
cld
and
xor
inc
arpl
jae
dec
and
outsb
fsubl
push
rcrb
jb
sahf
or
inc
sbb
and
loop
sbb
jo
jle
inc
aaa
pmuludq
sub
dec
mov
jmp
and
adc
stos
int
and
add
inc
sti
sbbb
je
cltd
xlat
cmp
mov
xor
add
or
pop
pop
mov
rclb
test
jbe
mov
popf
cltd
pusha
pop
dec
fstl
xchg
inc
sarb
and
jbe
jmp
fwait
addr16
jns
inc
js
mov
jecxz
sti
mov
int3
inc
and
cmc
fsubrs
inc
and
insl
push
jg
imul
loopne
scas
xchg
pop
cmp
sub
in
repz
pop
inc
jp
add
orl
iret
pusha
dec
lret
pop
ds
fidivl
lds
outsl
jp,pt
pop
dec
cmp
mov
add
nop
dec
popa
addr16
sarl
outsb
pop
rcl
push
adc
sbb
lods
popf
adc
scas
fisubrs
scas
mov
stos
je
cmp
in
and
repz
das
inc
mov
push
pusha
stos
xchg
js
addr16
out
push
cmp
lahf
mov
shrb
or
adc
push
mov
decb
inc
and
mov
nop
loop
inc
stc
shlb
sub
mov
test
pop
mov
adc
add
jo
cmpsb
mov
push
inc
push
and
mov
push
frstor
inc
and
ja
jl
xchg
andl
fsubs
clc
push
or
dec
cwtl
aad
dec
pop
adc
daa
daa
loopne
outsb
loopne
inc
insl
sar
outsb
xlat
lock
adc
mov
jmp
inc
fidivl
aas
int3
mov
and
and
ds
xor
mov
cmp
shl
inc
ffree
inc
adcl
xor
in
xchg
outsb
cwtl
or
adc
cmp
jle
pop
sub
push
jnp
movsb
mov
es
loopne
adc
loope
cli
mov
lcall
jl
jb
hlt
popa
push
jg
lret
loopne
mov
and
push
mov
ret
jb
mov
aaa
mov
and
aad
mov
fdivl
not
fnsave
push
or
lods
repnz
lds
xchg
mov
xchg
shrb
daa
daa
and
bound
popa
ja
dec
imul
in
insb
lcall
mov
int3
xchg
pop
pop
inc
in
mulb
aad
mov
pop
mov
and
popa
xchg
xor
outsl
push
out
movsl
jecxz
jae
movsl
lock
mov
dec
xchg
mov
jb
jo
jb
in
fsubl
cmp
test
ja
jns
adc
stos
adc
test
inc
pop
mov
loope
or
mov
repz
fsubs
jns
stos
xchg
in
stos
push
ret
mov
hlt
mov
add
stos
jge
movsl
in
pop
and
orl
mov
add
stos
xor
stmxcsr
cmpl
pop
cmp
inc
outsl
fs
test
fwait
int
jb
mov
pop
lret
xchg
rcr
lret
pop
xor
test
mov
fwait
xor
xlat
test
sbb
bound
ss
pop
xchg
adc
add
adc
fwait
mov
arpl
xor
mov
xchg
sub
jno
je
pop
sbb
mov
cmp
fisubs
mulb
test
mov
addr16
cmc
pop
xor
mov
test
jns
notb
sub
in
push
jle
sar
pop
push
repz
jo
cmc
push
jo
push
push
jb
in
mov
pop
pop
xchg
repnz
mov
mov
or
mov
cwtl
scas
xchg
sbb
dec
call
mov
xor
inc
jb
sub
add
ss
sbb
mov
cs
xchg
sub
iret
daa
aam
lcall
jbe
mov
mov
insl
fwait
imul
mov
push
test
push
es
push
jmp
pushl
xchg
fcoms
sbb
pop
adc
pushf
inc
decl
adc
dec
pop
cmpsb
dec
push
pusha
cmp
ffree
xchg
in
ja
ds
push
sub
cmp
cltd
jmp
pop
jnp
shlb
sub
cs
mov
cmpsb
sarb
inc
mov
cmp
adc
clc
sahf
lea
add
pusha
or
inc
or
aam
xor
enter
adc
add
lret
xchg
stc
data16
jns
mov
pop
mov
cmp
lock
clc
cmp
or
std
aas
jg
inc
sbb
and
jge,pn
lods
mov
cmp
fwait
inc
ret
mov
dec
bound
pop
fucomi
or
inc
clc
jnp
jae
cli
push
jae
cmp
imul
push
dec
loop
popf
lcall
push
stos
dec
inc
cld
cmp
int3
loope
or
ret
dec
pop
or
roll
out
and
js
dec
pop
xchg
inc
dec
cs
xor
lock
loope
outsl
pop
popf
sarb
fiaddl
mov
inc
push
mov
out
int
sbb
std
sbb
jne
xchg
add
mov
lods
jno
arpl
sbbb
inc
adc
cmp
hlt
fxch
adc
jno
roll
and
push
jp
push
outsb
adcb
dec
xor
jns
dec
test
int3
adc
pushl
enter
mov
pop
lret
pop
xchg
incl
fisttpl
xchg
scas
repnz
vmovaps
out
mov
xlat
cmc
xor
jle
cmp
push
les
test
lcall
jl
lea
xchg
shl
in
pop
cmp
test
arpl
movsb
adc
cld
mov
daa
dec
popf
push
pop
cmp
adc
clc
pop
push
xlat
sub
aam
lea
mov
shlb
inc
out
jecxz
pop
sbb
push
jo
test
lfs
lock
sub
iret
adc
mov
outsb
jmp
pop
mov
fldenv
outsl
dec
shrl
or
rorl
adc
pop
cmpsb
and
fdivs
dec
push
jle
dec
scas
xor
adc
adc
sti
fstpt
jle
pop
mov
sub
inc
mov
popa
xlat
inc
jg
cmpsl
aad
enter
mov
mov
mov
dec
add
xchg
dec
mov
loop
jno
and
jmp
lds
cltd
push
xchg
lock
lods
inc
push
cs
adc
imul
mov
pop
mov
mov
sbbl
mov
shrl
cmp
adc
pop
fcoms
mov
cli
jbe
and
fcmovnu
push
push
or
cmc
push
fistpl
fstps
jnp
sbb
xchg
std
and
shrb
mov
xor
adcl
mov
adcb
cmp
sbb
repz
mov
inc
and
dec
adc
add
add
and
popf
in
mov
or
push
cmp
add
sub
inc
push
dec
mov
cmp
popa
insb
jecxz
xor
mov
inc
daa
jg
movb
push
jge
xchg
or
xor
mov
rorl
or
xor
loop
xor
jmp
das
lret
dec
push
dec
jmp
lods
dec
fdivrs
outsl
inc
xlat
pop
jecxz
andl
inc
scas
dec
cmp
or
push
ds
scas
cli
out
insl
bound
scas
mov
lret
insl
scas
insl
inc
pushf
push
xchg
adc
pop
in
inc
push
push
mov
add
push
movsl
cmp
mov
mov
xchg
insl
inc
and
rcl
xor
sub
sbb
xchg
out
int3
divb
adc
add
cmpsb
dec
cld
scas
enter
jmp
add
xchg
gs
jae
dec
dec
rcr
ret
scas
into
test
add
cld
cmp
xlat
sub
cmc
jmp
aad
push
jge
xchg
or
xor
mov
push
pop
mov
imul
bound
adc
dec
test
push
or
lea
leave
cmc
pop
jbe
shrb
outsb
pop
jb
jp
std
mov
test
lock
add
aam
loopne
loopne
inc
fbld
cmc
ret
add
mov
pop
call
xorb
loope
aam
xchg
mov
subb
inc
xchg
repz
sahf
out
mov
push
pop
mov
xchg
inc
cmp
xchg
dec
test
dec
insl
pushf
jne
xchg
sbb
add
in
jnp
jl
in
push
pop
pop
or
xchg
xchg
push
mov
pop
pop
lods
mov
mov
outsl
push
mov
xchg
js
cmp
leave
jbe
icebp
jge
push
mov
std
jp
out
push
shll
ret
int3
mov
arpl
imull
lea
mov
int3
mov
cld
mov
xlat
scas
mov
xor
pop
fisubs
jno
sub
xchg
xchg
ss
push
cmpsl
cs
xchg
dec
xlat
lock
xorl
xor
push
insb
push
repnz
arpl
sub
push
push
fcoms
pop
ficoml
sti
lret
das
out
add
fwait
or
add
xchg
jo
mov
adc
mov
aaa
sbb
jo
cmp
cmpsl
mov
ret
arpl
dec
int
movsb
adc
jb
test
scas
lret
sti
les
popa
ja
xchg
pushf
sbb
aad
inc
std
add
cmp
cs
jmp
subb
fistpl
pop
aad
mov
out
or
lcall
cmc
ss
idivl
xchg
stc
mov
add
dec
mov
dec
lods
filds
sub
aad
lahf
push
xor
pop
fcom
insl
les
or
cmp
mov
popf
add
pop
scas
mov
adc
cs
push
aam
push
inc
sbb
fsubr
dec
test
loope
push
jmp
jp
rclb
push
int3
lret
or
xchg
rcrb
xchg
in
mov
enter
ds
fbstp
jge
sbb
mov
push
enter
xor
dec
fldl
push
sbb
cmp
aaa
jge
adc
push
adc
push
sbb
adc
xor
dec
lods
mov
rcrb
jle
inc
and
mov
or
cmp
cmpsl
mov
neg
test
fidivrl
cli
jle
push
sbb
push
jl
cmc
dec
negl
cmpsl
or
std
dec
mov
roll
add
xor
sub
xchg
aaa
pop
sub
ret
jnp
adc
mov
test
jnp
cli
adc
int3
dec
into
loop
mov
imul
cmpsb
jecxz
jbe
das
lea
add
inc
out
xorb
xor
xor
and
jno
or
call
and
mov
orl
mov
lods
aam
pop
jo
fs
xor
rcll
and
fldt
loop
push
push
aas
out
mov
mov
repz
push
add
out
sarb
int
idivl
jecxz
andb
jecxz
sar
xchg
lods
push
pop
add
sub
outsb
jnp
adc
test
adc
cwtl
outsb
push
popf
push
inc
stos
rcr
lcall
mov
inc
jle
imul
dec
fnstsw
push
out
push
enter
and
orb
aas
ljmp
adc
push
fadds
lods
push
fwait
movsl
inc
pusha
pop
inc
push
outsl
stos
mov
cwtl
or
adc
cmp
test
push
jnp
movsb
mov
es
loopne
adc
loope
std
inc
inc
shrb
outsb
popf
xchg
add
mov
lds
add
lret
inc
test
inc
mov
xchg
cmc
jp
fidivrs
sub
jb
sub
test
push
jb
aad
sub
test
jo
testl
pop
roll
mov
cmc
lret
jg
hlt
pop
mov
cmpb
jge
ja
loope
jno
or
gs
roll
xchg
cmpsb
pusha
xor
adc
aam
imul
out
xchg
pop
insl
jno
cwtl
decb
xorb
pop
in
or
pop
sar
jl
and
add
ret
dec
xchg
push
into
inc
mov
test
jmp
pop
xchg
cli
jno
add
mov
fidivrl
push
jge
xchg
or
mov
add
pushf
popf
dec
xor
pop
mov
adc
adc
sub
ja
cmp
data16
stc
stc
aaa
cld
pop
scas
arpl
mov
call
test
ds
cmpsb
mov
pop
loop
inc
hlt
in
aad
cmp
pop
or
lret
adc
js
lahf
dec
cmp
jno
dec
lods
mov
adc
or
inc
loope
xor
or
rorb
mov
mov
out
in
or
jge
cmp
adc
inc
mov
xlat
push
pop
in
adc
shl
dec
dec
idiv
inc
sub
ljmp
add
adc
rorl
xchg
inc
dec
jbe
xchg
xor
lods
sub
std
sbb
clc
xor
in
jns
push
or
stc
adc
scas
cmpsb
js
xchg
push
dec
icebp
rclb
cmp
jns
xor
lds
dec
sbb
das
mov
ss
cmp
xchg
test
mov
fldenv
dec
mov
int
mov
mov
add
mov
gs
ret
sbb
push
xchg
xchg
adc
add
es
mov
lds
imul
inc
jno
adc
mov
fs
pop
dec
cs
movsb
movsl
dec
fucomi
or
mov
sbb
clc
pop
test
outsb
mov
dec
hlt
ror
in
js
mov
push
cmp
dec
imul
dec
inc
les
inc
rorb
mov
js
les
in
pop
aas
ret
jbe
push
dec
xchg
in
xor
jb
add
stc
mov
and
or
sbb
inc
aaa
mov
xor
sub
int3
fistl
mov
movsb
leave
jb
push
and
int
add
inc
add
pusha
dec
or
sub
call
jecxz
mov
ret
shr
mov
lock
rol
and
popa
scas
lock
orb
dec
jb
mov
icebp
cmpsl
jmp
jnp
mov
bound
mov
add
mov
nop
cmp
and
ljmp
adc
pop
sub
adc
ror
repnz
das
fmul
push
xchg
mov
xchg
and
push
out
xchg
add
push
ss
mov
mov
cli
pop
inc
xor
enter
mov
adc
xchg
mov
es
jmp
gs
lods
out
cmc
je
push
das
xlat
push
imul
push
push
sahf
les
sarl
popf
arpl
pop
je
inc
add
jle
pop
repnz
dec
fidivrs
xchg
xchg
call
push
jmp
iret
cmp
adc
clc
cltd
push
ljmp
add
adc
mov
fptan
ss
mov
ss
sarb
and
fiaddl
mov
or
sub
or
mov
mov
push
int3
fchs
je
mov
xchg
enter
mov
iret
lcall
jge
aam
movsb
pop
and
enter
jne
neg
aaa
out
pop
or
pop
jns
out
ss
cmp
dec
mov
sub
lds
testl
jl
popf
iret
mov
clc
mov
rcr
fsubl
cmp
jp
adc
dec
ljmp
or
sti
mov
inc
mov
ds
shl
stos
push
sub
cs
mov
jns
andb
add
jge
mov
fimull
jge
jle
jge
ficoms
rcrl
or
fwait
or
lea
arpl
push
subb
in
ja
xchg
add
sbb
mov
or
mov
mov
jnp
or
out
adc
js
xchg
or
in
call
or
sbb
cmp
jp
enter
hlt
push
fiadds
test
mov
out
dec
popf
xchg
into
rorb
cwtl
inc
ds
ret
xlat
adcb
pop
icebp
popf
ds
cmp
fists
push
mov
jo
sub
cltd
pop
cmc
mov
pop
xchg
push
nop
mov
xchg
lahf
fs
sbb
jne
push
rclb
ds
jp
sub
inc
mov
les
adc
aas
mov
js
mov
sub
push
enter
popf
and
xchg
or
bound
ret
fstpl
jecxz
mov
xorl
fisubs
push
mov
pop
mov
push
hlt
mov
iret
hlt
xchg
sbb
mov
jg
mov
or
lods
mov
cmp
ds
fs
ja
scas
ja
popa
es
push
pop
rorb
push
popa
imul
inc
jne
pop
push
cmp
xlat
mov
and
lar
jnp
pop
mov
repz
mov
das
fs
xchg
in
cmpsl
xchg
push
sbb
xchg
and
xchg
mov
in
adc
sti
jo,pn
sub
insl
mov
and
mov
shl
rorl
call
cmp
bts
out
add
pop
mov
push
mov
dec
inc
cmpl
sbb
aam
mov
xor
andb
dec
test
clc
fs
dec
dec
xchg
jmp
xchg
xchg
repnz
xor
xor
addr16
push
lahf
inc
fldcw
cs
adc
pop
stos
dec
cltd
jp,pn
mov
ljmp
mov
outsb
jl
add
repnz
gs
loop
inc
dec
jecxz
mov
jo
xor
je
mov
adc
ds
int
lods
inc
outsl
test
jmp
adc
or
mov
fidivl
das
arpl
shrl
ret
mov
lods
fists
jo
dec
lret
or
aad
into
or
mov
cli
jb
outsl
aas
je
pop
or
pop
inc
std
adc
fdivrs
addr16
sbb
les
adc
push
dec
sub
mov
push
jp
das
into
cmpsb
test
jecxz
int3
sti
cmp
inc
jo
sar
lea
daa
sub
add
push
fsubs
sub
mov
push
les
mov
in
cmp
adc
push
jo
push
imul
inc
pop
xor
ficompl
fidivs
lods
push
sbb
push
pop
mov
in
lret
lahf
sahf
add
es
lahf
insl
fisubl
sarb
loop
pop
xlat
push
loopne
loop
rorb
add
and
mov
pushf
pusha
outsb
sub
dec
fiadds
add
into
addr16
add
adc
pusha
leave
addr16
xchg
pop
in
stos
adc
lret
lret
jmp
pop
sub
mov
pop
rcll
div
inc
cltd
pop
inc
out
jge
imul
movsl
or
outsl
ffreep
mov
add
in
mov
jle
sahf
insl
lret
imul
sbb
test
mov
lahf
out
lcall
into
in
and
cld
lcall
shll
pop
dec
ljmp
into
jno
pop
cmp
das
addb
pusha
js
dec
add
mov
cmpsb
mov
hlt
pop
lcall
test
dec
xchg
lahf
and
stc
arpl
stos
out
jne
mov
cwtl
aas
popf
scas
cwtl
cmp
cmp
add
mov
dec
fsubr
push
or
jecxz
push
and
cli
aam
cwtl
xchg
loop
pop
jmp
pop
int3
pop
mov
daa
push
jne
fildll
test
loop
mov
lods
mov
lea
jl
and
inc
lcall
add
outsl
cli
cmp
or
ss
jg
pop
cmp
add
inc
sub
movsb
mov
jmp
pop
mov
inc
xchg
daa
jmp
les
loop
mov
xorl
and
mov
push
jb
aad
lods
aam
scas
or
ficoms
xlat
test
mov
cmpsb
bound
push
imul
xor
jle
int
movsl
pop
and
mul
in
push
loopne
lret
rcrl
cmp
fwait
insb
cmpsl
or
sbb
ret
sub
sub
fdivrs
jle
push
out
dec
and
stos
cld
add
mov
pop
add
inc
inc
fcmove
hlt
pop
mov
cmc
pminub
out
push
cli
sub
and
push
mov
mov
adc
mov
mov
xor
cmp
cltd
test
dec
xchg
imul
mov
dec
pop
fistl
out
insb
inc
out
cwtl
jg
add
fwait
mov
sub
mov
xchg
cmp
imulb
and
add
mov
cmpsb
push
testl
sbb
stos
addl
mov
mov
mov
or
lock
sbb
ficoms
and
jle
mov
jnp
sahf
lret
decl
aam
jge
lahf
xor
stc
leave
orps
cmp
xchg
int3
imul
cmp
ficoml
inc
jne
mov
test
pop
outsb
icebp
lock
popf
push
push
daa
and
sbb
sbb
in
fxch
mov
add
cmc
int3
das
jg
inc
mov
pop
dec
sbb
das
ret
mov
lret
dec
fldl
mov
jne
aas
inc
fs
int
inc
daa
jnp
daa
loopne
je
sub
jb
stos
pop
repz
fisubrs
inc
mov
enter
leave
xor
xchg
adc
lcall
test
cmp
das
ret
pop
ljmp
pop
in
pop
imul
mov
pop
add
mov
push
int3
ffreep
jne
mov
or
cltd
mov
jns
popf
cltd
pop
sub
inc
push
fmull
xchg
cmp
mov
rcrb
out
push
test
adc
xlat
jge
inc
add
mov
xchg
lods
mov
mov
int3
sbb
mull
add
mov
mov
jbe
int
sti
pop
ljmp
jecxz
add
mov
adc
fadd
into
mov
insb
repnz
shl
lea
dec
cmp
mov
ss
mov
roll
or
pop
dec
pop
mov
and
test
mov
mov
repz
cmc
nop
je
sbbb
loope
bound
inc
pop
sbb
int
mov
add
addr16
movsb
sahf
mov
push
fcomps
inc
out
mov
pop
xor
mov
jbe
ss
xchg
in
or
cmp
nop
pushf
jg
fsubr
lret
push
inc
jno
in
pop
jl
adc
inc
out
outsl
in
push
mov
test
fdivrs
pushf
mov
fldl
shlb
push
mov
or
xor
int3
insb
mov
xor
lret
mov
imul
mov
sub
and
jnp
aad
or
add
daa
cmp
imul
fsqrt
push
dec
movsb
inc
and
and
lods
shl
sbb
xchg
pop
sub
insb
cltd
push
jmp
jae
imul
gs
aas
loopne
or
mov
sub
mov
sbb
mov
and
add
and
lret
in
push
mov
rcrb
pushf
out
mov
xchg
pop
arpl
aam
push
push
testb
lea
paddq
add
cmp
sub
bsf
adc
jp
xor
fld
or
scas
aad
mov
lret
arpl
add
cld
sub
cli
add
jae
xor
sub
pop
push
mov
in
pop
fstpl
das
imulb
and
add
jge
mov
inc
test
add
xchg
fcmovbe
inc
jbe
dec
int3
out
jnp
cmp
shll
pop
cmp
iret
sub
jnp
jmp
pop
aaa
nop
lret
int3
xor
push
and
sbb
fs
lods
push
pop
negb
lods
hlt
cmpsl
xor
leave
mov
retw
push
mov
dec
je
xchg
jmp
insb
mov
sbb
orb
fnstsw
cwtl
js
push
pusha
and
fcmovb
lock
pop
push
lahf
mov
cmp
mov
xor
xchg
mov
ret
xor
mov
dec
push
call
fldenv
adc
call
fistpll
or
lock
or
xchg
mov
iret
lods
fmull
stos
bsr
je
mov
xchg
ja
jnp
imul
mov
jg
push
jle
push
es
cltd
fimuls
add
xor
xchg
xchg
mov
xor
add
pop
and
outsb
and
loopne
shl
mov
dec
jns
sub
sbb
push
mov
push
cmp
fisubrl
add
mov
and
adc
push
pop
pop
adc
dec
jno
in
stc
outsb
fldenv
push
cmp
adc
fsubrl
cwtl
mov
sbb
push
sahf
stos
cmc
test
xlat
lea
xchg
add
ss
lahf
lcall
or
fmul
shll
lea
dec
cli
mov
mov
push
int3
icebp
lock
jp
fmull
cli
das
mov
popa
insb
ret
or
sbb
add
jnp
add
sbb
adc
mov
add
mov
dec
int3
push
dec
push
cltd
jbe
push
push
mov
pop
shll
out
add
mov
imul
icebp
sbb
xor
pop
xchg
mov
fisubrl
inc
mov
loopne
insl
lods
shll
loope
aam
jge
mov
fwait
in
jnp
or
cmpsl
and
push
cmp
pop
fsubrl
mov
or
jbe
ja
ret
pop
test
outsb
hlt
jo
stos
add
push
mov
into
inc
cmp
push
js
cmp
pop
aaa
inc
pop
enter
inc
pop
mov
aaa
pop
inc
fcoms
mov
or
gs
mov
mov
cmp
and
push
cs
lret
jmp
push
pop
lods
aad
pop
pop
jmp
inc
mov
and
mov
dec
jge
and
lock
cmp
inc
inc
cmpsb
scas
pop
dec
mov
xchg
daa
xchg
and
mov
imul
or
jbe
sbb
jmp
or
ret
sub
dec
scas
and
scas
fdivr
in
jmp
adc
incl
subl
mov
push
imul
scas
sarb
lods
fwait
sbb
xlat
or
arpl
mov
lods
scas
aam
fs
or
sub
mov
fcmovne
in
jb
jle
lods
ja
jnp
lods
test
out
enter
mov
lret
add
xor
mov
cmc
jg
push
push
repz
pop
and
adc
pusha
test
aad
push
xchg
adc
fldcw
inc
into
loope
mov
daa
and
push
hlt
adc
cwtl
frstor
jl
push
scas
pop
es
sub
adc
mov
push
sub
loopne
xlat
xor
push
mov
repz
ja
dec
mov
mov
push
icebp
pop
inc
aas
insl
mov
mov
jge
lock
push
jp
ja
mov
mov
push
or
or
adc
mov
add
cmp
jg
push
mov
xchg
sbb
jns
mov
loope
mov
in
repnz
adc
rorb
pop
push
scas
cmpsb
fidivs
or
dec
je
xchg
outsb
sbbl
push
push
leave
mov
cmp
cwtl
ljmp
add
dec
das
dec
jnp
dec
inc
add
inc
dec
add
or
pushf
mov
sar
int3
outsb
xchg
inc
pop
mov
in
in
or
mul
ljmp
cltd
xor
jne
fsubl
adc
mov
shll
testb
mov
xor
lock
push
xchg
popf
and
lea
mov
data16
pusha
jmp
and
or
mov
dec
xchg
hlt
mov
movsb
imul
icebp
cmpsb
xlat
jp
inc
mov
jl
xor
jmp
out
loope
pop
bound
mov
repnz
dec
mov
push
lea
out
xchg
mov
popa
fwait
les
xlat
jno
fstpt
xor
mov
add
xchg
xchg
scas
inc
dec
imul
inc
xor
clc
clc
or
lds
mov
dec
shlb
in
mov
mov
inc
inc
mov
cmp
mov
gs
outsl
xchg
inc
push
sub
ljmp
fmull
mov
or
out
pop
cmp
jbe
movsb
imul
cltd
inc
into
js
xor
outsl
cmp
cmp
pop
movsl
nop
xor
jnp
sub
sarb
jno
mov
cmpsl
xchg
test
addr16
das
mov
pop
mov
pop
mov
push
clc
xor
fistps
aad
dec
mov
xchg
out
nop
sub
cmp
sbb
fildll
ja
out
mov
fstl
loop
cmp
fsubs
mov
adc
adc
jg
pop
sbb
jge
mov
sub
pop
cwtl
add
pop
lahf
mov
test
lods
mov
mov
and
mov
mov
test
insb
push
push
cmpl
inc
xchg
lahf
loopne
insb
lods
lock
test
inc
adc
cmc
pusha
xchg
adc
jnp
popf
aaa
or
dec
mov
ds
adc
rolb
call
pop
faddl
mov
xor
sbb
loop
dec
adcl
jae
out
jo
dec
jae
inc
shlb
inc
mov
pop
push
mov
cmc
xchg
test
icebp
test
or
cmpsb
mov
shrb
mov
sbb
adc
stos
loopne
mov
loope
mov
mov
cmp
bound
add
int
sbb
inc
sub
xchg
adc
cld
cmp
movsb
repz
scas
lds
xchg
and
loopne
sub
mov
push
lahf
outsl
and
mov
mov
pop
into
jmp
scas
leave
js
pop
add
flds
test
xchg
inc
mov
jns
lret
push
dec
dec
add
mov
iret
sub
jl
push
mov
lds
adc
add
add
in
dec
mov
inc
fistpll
bndldx
aad
roll
shll
aad
pop
fwait
imul
or
popf
aas
xchg
fcmovbe
inc
jbe
lret
dec
xchg
aam
into
adc
sbb
and
and
cltd
nop
es
test
test
mov
xor
mov
maskmovq
ds
in
and
addl
aam
clc
add
nop
scas
xchg
addl
out
jmp
loop
xor
jb
sub
fisttpll
push
sarl
stos
lahf
mov
mov
loop
call
mov
jae
repz
jo
dec
push
call
pop
dec
ret
or
dec
inc
mov
ret
xchg
ds
ficoml
addr16
and
xchg
inc
insb
negb
push
fwait
sbbb
fadds
fdivl
cld
inc
stos
in
sbb
imulb
push
mov
fnsave
and
or
pop
sbb
push
stc
inc
xor
pop
mov
dec
mov
aas
cmp
cmpsl
inc
sub
popa
xor
jo
jae
pop
shl
lods
fists
and
dec
jge
cmpsl
mov
jb
sarl
cwtl
inc
or
loopne
shl
outsb
fiaddl
xchg
les
jle
sti
push
cltd
push
pop
fnstenv
ja
push
push
pusha
inc
or
xor
ret
dec
mov
lods
pushl
test
mov
les
cli
push
sbb
pop
xor
decl
mov
sahf
fsts
lcall
enter
push
pop
and
negb
mov
jae
mov
rorb
decl
pop
push
adc
repnz
aam
push
test
sbb
testl
dec
aam
outsb
jle
pop
ljmp
xor
push
notb
movsb
cmp
sahf
pop
outsl
mov
xor
jg
scas
mov
sbb
cmp
aaa
cmp
jecxz
mov
mov
mov
mov
mov
xor
adc
lds
push
call
in
pop
les
dec
mov
or
sbb
inc
cmp
enter
or
dec
add
sub
mov
lahf
mov
test
cli
and
pop
jp
test
jg
aad
inc
dec
adc
push
out
dec
xor
cmp
fisubrl
xor
faddl
cmpsb
arpl
lds
pop
fwait
dec
pop
mov
push
sbb
xchg
mov
sahf
mov
loopne
in
and
xchg
xchg
test
adcb
and
mov
das
adcl
leave
inc
and
fs
jle
jae
stos
inc
dec
cmp
fdivrs
dec
mov
outsb
test
and
pop
adc
stos
lret
das
imul
ja
orl
mulb
jno
pop
push
insb
stos
mov
add
push
jg
xor
cmp
pusha
jmp
das
shrl
pop
fnstsw
jg
dec
mov
or
orl
xlat
fistps
mov
jg
fadds
push
mov
scas
cmp
movsb
ds
stc
outsb
mov
in
dec
push
icebp
and
jnp
sub
cmp
xor
pop
cmp
enter
add
cltd
xchg
insb
mov
xlat
outsb
dec
adc
jp
sub
mov
sub
sub
mov
out
and
cmp
inc
ljmp
push
or
sbb
test
inc
mov
subl
test
inc
xchg
add
xor
push
clc
outsl
jp
pop
gs
xchg
shll
xchg
repnz
cs
and
icebp
sub
and
dec
xchg
push
sub
pop
mov
push
bswap
pushf
popf
subl
sbb
cs
pop
js
pop
arpl
gs
divb
aaa
mov
lahf
lea
mov
sbb
aaa
into
int
test
pmaddwd
or
mov
adc
sub
mov
decb
mov
js
jb
bnd
add
push
les
hlt
mov
mov
push
mov
fisttps
aad
or
mov
mov
dec
xor
imul
and
add
dec
out
sbb
rcrb
jae
push
mov
jns
fsubs
push
loop
and
xlat
sti
arpl
jecxz
lods
or
loope
sbb
fistl
dec
sbb
cmpsl
movsl
pop
adc
shlb
lods
cmc
clc
sub
pop
push
jge
cmp
xor
xchg
stos
pop
push
jns
scas
mov
push
jb
sti
dec
cwtl
cmc
lock
jmp
pop
in
jg
pop
ja
stos
arpl
fldcw
stos
aas
into
ss
jno
jns
xchg
add
mov
xchg
dec
lods
xor
es
inc
inc
or
scas
and
fcompl
repz
add
sti
ja
movl
cmp
mov
enter
fimuls
xor
adc
adc
jmp
cmpsb
ja
adc
test
jo
ret
in
sbb
mov
lahf
popl
fs
cli
jo
xchg
fucomi
xchg
xor
leave
mov
insb
cmp
aaa
ds
aaa
lods
xor
pop
pop
xor
mov
jnp
int
and
and
lods
cltd
mov
dec
in
and
in
arpl
jl
or
insb
inc
sub
jmp
lods
mov
push
xchg
leave
mov
push
mov
sar
test
mov
push
inc
add
push
inc
xchg
icebp
xor
aam
aam
pop
inc
sub
xor
lret
mov
leave
cmc
push
scas
std
std
pusha
adc
cmp
push
sub
pop
mov
add
push
lahf
push
mov
and
rcrb
shrl
fwait
movsl
out
mov
dec
inc
xchg
or
inc
lods
pop
arpl
sbb
mov
cli
push
lock
mov
mov
adcb
inc
imul
ljmp
pop
dec
mov
adc
inc
sbb
in
cmpsl
pop
shll
jg
inc
lahf
and
mov
ljmp
pop
inc
call
xchg
fnstcw
inc
ss
cmp
into
dec
sbb
xor
lock
xchg
or
lods
sub
cmc
mov
shlb
dec
mov
movsl
and
dec
imul
mov
sbb
jmp
mov
test
lods
repnz
pop
fmuls
lds
jae
lods
pushf
mov
lods
fldl
jge
in
int
scas
hlt
decl
sbb
jl
ficompl
dec
out
loope
jno
inc
pop
mov
arpl
and
fdivrl
es
jp
cmp
xor
jbe
mov
mov
pop
and
ss
outsb
xor
sbb
sbb
xor
popl
add
sbb
fistpll
fildll
xor
xorl
sbb
hlt
movsl
rcll
mov
mov
sbb
sub
in
xchg
sarb
push
rol
push
clc
iret
stos
mov
scas
out
sbb
stos
or
sub
inc
sub
imul
in
push
subb
push
adc
mov
lcall
xchg
decl
jns
imul
pop
sbb
sbb
pop
jecxz
jno
fs
jle
sub
mov
push
into
movsb
std
push
cmp
nop
pushf
aaa
pop
mov
xlat
aaa
sub
loope
repnz
pusha
int3
negb
pop
push
jmp
std
decl
xor
mov
xchg
or
or
mov
sarb
ljmp
lods
test
pushf
lock
movsb
inc
inc
cmc
inc
or
movsb
lea
outsl
pop
cmp
in
inc
scas
or
xor
aaa
pop
pop
and
js
into
fmull
sub
scas
ret
xchg
lahf
je
pusha
jnp
aad
lret
jecxz
lea
pop
add
mov
inc
adc
ljmp
dec
jmp
test
inc
pop
mov
mov
xchg
leave
movups
loopne
cmp
popa
xchg
mov
jbe
orl
icebp
in
xchg
add
mov
mov
ret
mov
loopne
adc
xchg
or
mov
int3
sub
sbb
aam
fistps
cld
ret
and
daa
xor
cli
push
add
vmovdqa
inc
out
movsl
xor
mov
adc
xchg
jl
inc
jo
adc
dec
xor
into
stos
in
xchg
mov
jae
dec
fnsave
mov
fs
mov
fimuls
jne
or
mov
mov
dec
jecxz
cmpsb
cmp
adcl
cmp
adc
sbb
push
xor
xchg
mov
mov
test
pushf
clc
repnz
adc
xchg
cmp
das
push
stos
lods
mov
mov
cmc
ficoml
push
sbb
sub
mov
pop
or
mov
pop
cli
sbb
add
pushf
cmp
aam
lret
fdivs
out
imul
push
cmpsb
jmp
stos
into
leave
lea
hlt
nop
lock
mov
jb
jl
test
cs
lret
jae
rorl
jge
jb
add
xor
mov
iret
mov
lahf
loopne
icebp
leave
jp
cmp
lcall
jecxz
add
pop
stos
pushf
mov
repz
inc
popf
je
lahf
jbe
push
dec
mov
popa
lods
push
std
ret
lret
push
hlt
fs
inc
sahf
ret
mov
mov
js
xor
mov
or
hlt
inc
jle
int
andb
mov
xchg
push
in
pop
call
out
sub
or
leave
call
adc
sbb
loopne
insl
loopew
addr16
add
cmc
mov
push
mov
or
inc
ret
fisubrl
repnz
jae
jb
inc
mov
repz
mov
sti
push
sti
jns
jne
pop
scas
popf
idivb
xor
mov
mov
sub
cmpsl
mov
mov
inc
xor
pop
push
xchg
frstor
ret
mov
imul
icebp
lahf
jno
add
out
pusha
aas
cmc
arpl
int
xor
jae
adc
pop
lods
dec
fwait
pusha
pop
insl
push
dec
jno
stos
fdivr
loop
xlat
mov
push
insb
dec
aam
mov
xor
pop
jecxz
cmp
or
mov
pusha
pop
push
es
mov
jmp
or
lcall
ljmp
pop
mov
in
sbb
cmc
and
pop
fwait
loope
lret
mov
xor
popl
out
test
out
aad
and
jmp
push
fnsave
cltd
sub
xor
daa
and
idiv
stos
sub
xchg
aaa
outsl
pusha
xchg
mov
outsl
xor
cmp
push
mov
aad
or
sti
iret
cmp
movsb
xchg
or
in
ficoms
mov
adc
mov
leave
data16
cmc
mov
mov
mov
dec
es
cmp
add
ss
flds
cmp
xor
jo
pop
jo
push
add
xchg
in
imul
nop
mov
imul
xchg
jg
fdivr
or
sub
inc
lea
pop
pop
or
addr16
jecxz
jbe
mov
and
mov
add
je
cmp
mov
dec
inc
sub
std
fcomps
sub
sub
sub
cli
repz
mov
lock
cwtl
cmp
pushf
loop
aad
pop
mov
ljmp
jo
cmpsb
sti
xor
mov
xchg
decb
push
outsl
aam
stc
mov
xchg
sbb
jge
and
jmp
and
sbb
cmp
sbb
cs
lods
fisubs
gs
adc
call
pop
sbb
pop
jo
scas
icebp
lods
adc
push
iret
pop
xchg
cvttps2pi
or
push
ret
xchg
loope
gs
cs
popa
and
lods
fwait
xchg
dec
cli
lds
cmp
push
mov
pop
movsl
cmp
pop
and
lahf
or
cmp
mov
pop
mov
shll
inc
jo
mov
pushf
push
pop
daa
mov
add
cltd
push
test
clc
push
bound
xchg
and
pop
and
je
daa
stos
mov
pop
mov
int
pop
mov
jo
add
test
cmp
and
push
test
mulps
cmp
mov
lahf
dec
sahf
dec
pushf
test
fcmovne
repnz
or
repnz
sbb
push
pop
lods
ret
sub
imul
daa
cmp
push
aaa
jecxz
pop
jmp
je
dec
movsl
mov
adc
movsl
mov
xchg
ss
pop
not
rorb
int3
xor
addl
leave
push
jne
rorl
mov
lret
int3
and
push
jnp
adc
pop
mov
out
adc
mov
lods
ret
jmp
and
scas
jno
xchg
xor
iret
js
pop
xchg
jb
jl
je
pop
out
or
jnp
sbb
cmp
test
lods
cs
fldt
lods
sub
mov
inc
fsub
inc
sub
mov
sbb
or
sbb
mov
xchg
sub
loope
push
dec
lar
xchg
sub
gs
push
lret
and
dec
jno
inc
rcll
leave
repz
out
and
xlat
sub
and
or
xchg
js
add
subb
repz
into
jb
push
sbb
test
pop
add
mov
pop
or
inc
sub
dec
sbb
push
jnp
mov
dec
push
sbb
sub
sbb
fisttpl
ja
add
xchg
clc
jp
sbb
repz
cmc
in
ss
jl
and
push
or
add
and
sbb
stos
repz
pop
jmp
jnp
divb
fwait
cmc
aaa
sbb
out
pusha
loope
loop
das
sbb
mov
ljmp
mov
or
inc
pop
push
in
cmc
lea
or
lret
inc
andb
inc
sbb
rorl
cwtl
sbbb
out
test
mov
jl
dec
movsl
mov
mov
inc
pop
fistps
jns
dec
jnp
jno
add
outsl
fsts
fdivrp
scas
adc
xor
pop
roll
dec
outsb
pop
or
xor
xchg
jecxz
pop
fwait
xor
sub
xor
inc
fidivrs
xchg
scas
stos
lret
adc
mov
iret
mov
filds
inc
les
testl
add
add
jp
jge
pop
stos
mov
pminsw
xchg
jo
cmp
insl
into
dec
sbb
push
jne
push
ss
add
outsl
jb
rorb
outsl
fsts
jbe
loope
cmp
pop
into
dec
sbb
push
jne
push
ss
add
cltd
add
jb
and
ret
daa
subl
jbe
loope
cmp
pop
outsl
lcall
addr16
sbb
sub
imul
out
pusha
imull
jecxz
or
loope
inc
into
js
adc
loope
push
insl
ds
push
jge
pop
jp
aaa
movsb
fwait
xorl
push
mov
jno
lods
ss
out
fwait
aad
in
or
push
pop
std
push
addr16
xchg
scas
imul
adcl
aam
test
xor
scas
dec
jp
and
pop
mov
lods
or
lods
data16
push
aad
cmpsl
ficoml
jnp
jmp
dec
mull
jno
bound
sbb
jle
aaa
sbb
lods
sbb
xchg
cmc
mov
imulb
out
cmp
cmp
icebp
cwtl
jnp
mov
repz
push
mov
sbb
test
or
arpl
jge
mulb
enter
scas
cmpsl
testb
or
mov
ds
add
imul
push
inc
mov
test
in
bound
sub
ljmp
inc
xchg
pop
push
jno
add
mov
inc
sbb
mov
pop
lods
scas
adc
cmp
dec
lock
shll
ret
adc
jne
cmp
ret
sub
lea
xor
imul
scas
ret
add
adc
dec
xchg
jmp
mov
mov
dec
jecxz
ds
add
xchg
sbb
add
imul
js
inc
jg
mov
add
mov
testb
cmp
mov
push
xchg
leave
inc
mov
std
sbb
movzwl
mov
out
subb
inc
gs
add
xor
popf
jno
pushf
sub
mov
imul
or
pop
jmp
daa
cmpsl
mov
fimull
out
jno
and
pusha
cvtps2pd
ret
push
xor
addr16
cs
mov
je
pushf
loop
pop
subb
cltd
xor
push
push
shll
adc
test
pusha
push
xor
adc
push
es
jno
add
jl
cltd
pop
mov
in
adc
test
test
aas
loop
add
stc
cmp
mov
jae
icebp
mov
dec
mov
lahf
in
push
ljmp
mov
dec
movsb
dec
add
push
sub
mov
arpl
loopne
push
add
sbb
xchg
sub
js
stc
test
insl
lcall
fdivrs
lahf
push
in
sti
or
int
jb
or
mov
pop
and
dec
cmp
bnd
sub
xor
shrl
lea
jp
push
pop
aaa
arpl
mov
decl
ret
int
xchg
push
cld
idivb
jecxz
insb
idivb
lcall
pop
out
movsl
and
lcall
ror
pop
mov
push
add
cmpsb
jg
push
shr
ficoml
dec
test
loope
push
sub
mov
stc
dec
mov
xor
ja
mov
adc
jle
mov
popl
frstor
pop
lea
pcmpeqw
adc
aad
jne
sbbb
mov
std
cli
mov
test
push
dec
sti
fsts
repnz
mov
or
clc
ret
pusha
fyl2x
lock
das
mov
push
sbb
and
add
arpl
insl
pop
es
sbb
nop
sub
insb
jnp
jbe
test
sub
sbb
pop
dec
or
sbb
fiadds
jo
je
fsubs
fadds
test
jle
popf
test
inc
dec
inc
outsb
data16
xor
jnp
call
jns
xor
push
xchg
mov
cld
mov
rcrl
jge
dec
movsl
ret
ficoml
inc
sti
mov
and
xchg
jmp
inc
mov
stos
mov
fidivl
and
dec
shll
cmp
and
sub
imul
push
inc
mov
jno
mov
xchg
cwtl
xor
dec
add
ret
pushf
xor
dec
inc
pop
js
or
sub
shrb
xor
cwtl
add
sahf
push
xor
mov
pushf
mov
mov
mov
outsl
jecxz
rolb
addr16
mov
xchg
cli
inc
mov
and
xchg
ret
fadds
sarb
lret
adc
inc
int
sub
shr
out
add
js
ds
sti
mov
das
fs
cmc
or
xchg
js
rclb
dec
mov
pushf
stos
ja
push
cld
rcll
fldl
mov
test
lahf
lahf
push
adc
mov
daa
push
xchg
pop
cld
mov
add
sbb
inc
cmpsl
cmp
add
jns
mov
imul
mov
jo
xchg
sti
addb
js
das
push
cmc
fcomip
mov
dec
xchg
or
lock
mov
call
jae
lcall
jnp
sub
iret
dec
std
scas
mov
mov
ss
popf
loope
xor
lea
jns
dec
add
sub
ret
push
xchg
fnstcw
mov
jl
pushf
cs
and
xor
rcrb
push
aam
sub
cmpsl
mov
fwait
loop
insb
jb
xchg
clc
dec
dec
pop
imul
jl
sub
cmpsb
inc
mov
das
mov
fistpl
rclb
mov
out
call
sbb
in
jae
add
or
add
adc
imul
stos
pop
mov
loope
hlt
inc
icebp
sbb
in
test
popf
outsb
mov
xor
xor
xchg
out
jne
lock
hlt
pop
mov
aam
push
cwtl
jmp
sub
clc
jae
pop
xchg
repz
jecxz
dec
std
test
clc
cmp
inc
or
fucomp
mov
lods
stos
mov
cwtl
mov
dec
jp
pop
push
daa
jno
imul
fwait
xabort
insl
mov
fwait
out
cltd
insl
fldcw
push
xor
int
mov
sub
loopne
fs
push
sahf
mov
cmpsl
jmp
mov
scas
cld
push
roll
jae
cld
cmpsl
test
mov
mov
xor
cs
jo
add
mov
fnstenv
cld
sub
inc
fidivrs
mov
push
popf
shl
scas
fwait
jge
inc
add
aas
add
or
push
mov
jecxz
lds
jo
dec
pop
ret
aam
fidivl
das
push
not
ja
scas
loopne
ret
inc
cmp
push
and
jb
cmc
repz
or
push
push
inc
movsl
mov
inc
pop
idiv
mov
inc
xchg
imul
adc
lods
mov
shrb
scas
jo
rcll
xchg
test
mov
inc
or
pop
xchg
inc
aas
nop
dec
clc
lods
cld
push
je
mov
loope
dec
inc
addr16
pop
push
mov
pop
push
jns
lds
sahf
inc
push
and
int
je
jne
xor
jae
mov
jns
pop
mov
jl
fmull
sarl
pop
dec
pusha
dec
add
pop
iret
lahf
inc
jl
loopne
dec
ss
fcmovnbe
mov
jle
pop
in
mov
add
mov
inc
push
mov
aas
cld
daa
lret
pop
add
and
push
icebp
hlt
xchg
shrb
psrad
mov
hlt
fs
test
mov
inc
movsl
std
adc
ljmp
rcrl
test
add
or
or
sbb
faddl
mov
lods
jae
loope
cmp
mov
adc
inc
cmp
hlt
xchg
stc
outsl
in
sbb
xor
push
pusha
jne
test
and
jl
pop
dec
mov
mov
cwtl
cmp
mov
xor
test
movsb
jno
xchg
jae
or
arpl
jle
push
scas
inc
mov
pop
or
mov
mov
fisubrl
stos
cmpl
hlt
div
nop
jl
sub
pop
dec
mov
lock
sbb
inc
xor
les
mov
push
adc
sub
loopne
jecxz
sti
mov
xchg
adcl
cli
sbb
pushf
sub
test
inc
mov
daa
dec
scas
mov
mov
inc
push
rcl
inc
into
iret
inc
jns
stos
or
push
pusha
ds
and
pop
rcrb
push
scas
jo
xchg
out
stc
cmp
pop
pop
mov
cmpsl
arpl
clc
push
sbb
cmp
add
mov
ja
out
and
or
lahf
or
div
and
sbb
jp
dec
lds
test
es
movsl
std
dec
pop
lahf
and
pop
lods
popf
pop
push
cmp
aas
mov
cmp
cs
ret
out
insl
inc
int
mov
and
pop
push
and
imul
mov
aam
push
ds
out
mov
fmuls
inc
shlb
dec
push
mov
aam
shrb
arpl
pop
sub
out
mov
addl
testl
cmp
push
or
iret
lahf
xchg
adc
loopne
filds
xor
sarl
insb
dec
clc
and
cmpl
inc
and
xor
jge
push
data16
dec
ljmp
aaa
mov
dec
shll
push
mov
mov
ret
mov
mov
sbb
arpl
dec
cwtl
imul
xchg
in
mov
dec
gs
insl
cmp
or
add
rol
popf
out
xor
leave
lret
adcl
lea
or
sbb
add
popf
mov
push
mov
xchg
mov
xor
scas
adc
cli
adc
add
add
lods
push
lret
ror
js,pt
pusha
xchg
cs
out
xchg
hlt
jecxz
cs
std
jnp
ljmp
js
xchg
aad
dec
xor
mov
inc
bound
sbb
mov
bound
or
ja
push
xor
xor
xor
push
xchg
sbb
mov
sbb
pop
xorl
jbe
imul
cwtl
pop
jg
lret
mov
pop
je
loop
hlt
cwtl
scas
pop
mov
cmp
inc
dec
pop
and
pop
in
out
cmp
jae
mov
loope
testl
cltd
popa
insb
lods
pop
orl
push
shll
icebp
inc
insb
sub
enter
cmp
jg
adc
push
andl
mov
jecxz
cmp
lea
inc
jbe
and
aas
fdivs
mov
jp
lds
push
xchg
or
gs
addr16
test
cmp
mov
xor
mov
jnp
inc
subl
push
jg
mov
jmp
subb
mov
jge
fnstcw
jmp
pop
repz
popf
lods
and
inc
aad
mov
ret
xchg
mov
mov
mov
fisttps
call
pop
pop
add
cltd
bound
cs
xor
mov
xchg
pop
sahf
push
xchg
fnstsw
loop
sub
or
xchg
inc
int3
mov
dec
icebp
or
mov
fwait
lea
inc
add
inc
sub
add
pusha
pop
stos
addr16
jl
out
loopne
or
push
xor
mov
xor
push
lahf
or
push
mov
or
ds
mov
data16
push
and
and
inc
ficompl
shlb
ds
and
imul
rorl
add
arpl
push
loope
rcl
push
mov
jb
or
mov
into
sub
call
dec
test
loopne
mov
fistps
aas
mov
daa
jmp
or
pop
sbb
adcb
loope
jge
mov
add
add
frstor
fdiv
push
test
xchg
pop
mov
test
lcall
call
out
leave
rorl
popa
or
rcll
mov
ss
sub
jae
add
push
push
and
push
movsb
mov
orl
mov
jmp
js
jmp
cltd
inc
inc
nop
jno
mov
rorl
nop
dec
mov
shl
int
push
ret
in
fistpl
jne
and
sub
adc
out
fstl
shrb
add
insb
mov
adc
enter
jle
pop
pushf
adc
xor
xchg
adc
lahf
mov
jp
pop
mov
xchg
fstpt
or
gs
sbb
add
cmp
test
xchg
hlt
or
cmc
out
pop
clc
mov
inc
xor
mov
push
js
inc
fdivr
inc
sub
xor
push
popa
add
in
iret
xor
std
xor
cmp
lret
addb
jo,pt
sub
xchg
mov
pop
xorb
inc
rclb
or
test
pushf
mov
lar
fadds
outsl
push
add
xchg
jmp
out
jge
aam
add
push
push
mov
inc
inc
dec
jecxz
insb
fnstenv
out
out
add
rcrb
dec
jnp
insl
pusha
aas
je
stos
inc
in
push
xchg
ss
stos
push
scas
je
imul
or
stos
mov
hlt
into
mov
and
mov
mov
ljmp
stos
adc
adc
jno
sub
push
pop
xlat
iret
rcrb
daa
fisubrs
lret
push
les
mov
sahf
daa
cmpl
int
mov
mov
jns
xor
enter
loopne
pop
xlat
mov
and
mov
and
shrl
test
push
jno
mov
stos
or
clc
mov
mov
or
test
std
fisubrl
call
add
xor
mov
jp
mov
fcoml
push
jge
hlt
add
pop
rcl
sub
jo
cmp
imul
fs
sub
pop
ds
mov
push
mov
dec
xchg
cmp
and
stos
inc
je
cwtl
pop
jge
sub
test
pusha
xchg
sbb
cmpsl
test
mov
cmp
pushl
sbbl
jbe
pop
sbb
push
sbb
fdivr
outsb
dec
push
pop
xor
cld
mov
in
and
or
jg
xor
xchg
mov
xchg
jae
stos
xor
pop
pop
imul
cltd
adc
scas
pop
jg
xchg
mov
mov
push
int3
mov
xchg
ds
int3
push
movsb
and
mov
stos
mov
mov
jo
loop
push
scas
test
jno
cmpl
or
mov
mov
mov
sbb
cmp
mov
in
data16
js
and
hlt
divl
inc
fnstenv
inc
incb
fcomps
rorb
xchg
pop
sub
xchg
or
pop
ds
ficomps
cmc
out
xchg
aad
jmp
fstpl
cmp
mov
xor
sahf
testb
pop
inc
cmp
cmp
mov
sbb
lods
or
mov
ret
decl
adc
in
jl
bnd
add
mov
loope
cmpsl
inc
cmp
and
pop
fistpll
popa
cmp
ljmp
add
mov
sti
adc
jo
adc
sar
out
jle
ljmp
dec
fsubrl
cmp
negl
int3
dec
xor
lahf
fcomi
movsb
push
ss
pushf
sub
inc
in
repz
and
sahf
jl
scas
hlt
pop
dec
xchg
int
incl
adc
adc
inc
add
dec
dec
out
loopne
adc
push
sub
pop
dec
scas
jmp
mov
lcall
in
pop
cmpsl
mov
and
mov
clc
ret
adc
push
cmp
mov
inc
stos
insl
lods
stos
test
pop
jp
clc
test
push
dec
dec
leave
mov
movsl
lds
xchg
sub
cli
fldenv
inc
adc
dec
xorb
fildll
mov
cwtl
negl
pushf
xor
rcrl
scas
inc
jle
sarl
into
sbb
enter
sub
dec
mov
rclb
aaa
sub
es
hlt
push
shl
cmp
push
mov
jo
inc
ss
orb
shlb
hlt
outsl
adc
xlat
add
jb
sub
push
or
sub
mov
xor
js
call
pop
cmpb
lret
sbb
xor
add
aaa
and
mov
and
stos
jmp
adc
out
push
fisubl
mov
fdivrs
jg
arpl
movsb
cltd
xchg
cmp
push
inc
das
mov
mov
in
addr16
mov
mov
inc
push
xor
mov
jg
scas
ja
out
je
loopne
push
cwtl
mov
sub
lds
dec
sbb
cmpsl
push
lret
sbbl
mov
lock
mov
gs
cld
cmc
shll
push
mov
cmp
sbb
bound
les
in
pop
les
jmp
pop
jae
fnsave
mov
jmp
stos
cmpsl
or
gs
divl
or
js
xor
daa
data16
enter
sbb
jbe
cli
sbb
outsb
push
add
sbb
xchg
mov
and
ja
and
mov
pop
adc
loop
sbb
inc
cmp
push
cwtl
lcall
push
sbb
insl
jnp
xchg
ja
push
add
xor
shl
push
pop
xchg
inc
push
xorb
shlb
mov
ss
inc
xchg
sub
loopne
mov
jle
mov
cltd
cli
leave
or
jg
add
sub
xchg
mov
xchg
add
repz
sarl
sbb
sti
mov
das
fs
shrl
popa
lods
adcb
dec
cmp
mov
ljmp
mov
pop
lods
negb
test
dec
xor
std
hlt
inc
cs
repnz
mov
jne
emms
xor
mov
mov
mov
rcrl
inc
test
xor
xchg
or
push
add
test
out
ficoms
int
xor
dec
jne
mov
mov
sub
or
out
roll
adc
inc
lcall
stc
pop
dec
push
outsl
jns
lahf
je
mov
out
pop
pop
pop
mov
ret
cmp
ja
or
faddp
pop
fistl
dec
pop
lahf
pushf
push
dec
xchg
cmp
xchg
push
into
pop
pusha
push
cmp
sarb
or
add
repz
mov
push
popa
ret
lods
out
jno
int
pop
mov
mov
enter
dec
xchg
cli
insb
ljmp
jl
insl
mov
shll
jle
nop
aam
std
inc
fdivs
enter
xchg
call
pop
cmc
jns
ljmp
pop
lock
pop
lods
and
cs
repz
mov
je
aam
sbb
mov
outsb
fildl
sub
lds
jb
pop
mov
icebp
and
dec
fwait
sahf
out
push
and
jle
ret
lock
bound
mov
add
sub
rcll
out
inc
fists
call
sbb
mov
push
outsl
loopne
test
in
push
insb
ret
fwait
cmpsl
ds
xor
push
in
jecxz
inc
pop
mov
insb
fdivs
push
xchg
adcb
icebp
mov
sbb
add
or
int
and
lahf
mov
mov
subl
mov
jns
cmpsb
pusha
push
ljmp
dec
adc
stos
mov
mov
andb
xchg
pop
push
add
pop
loope
sbb
xor
inc
jno
insb
mov
lret
es
and
cld
faddl
and
scas
das
ja
jmp
test
cmp
jmp
pop
ja
pop
fsubrp
cltd
cmpsl
mov
mov
cli
pop
mov
lods
jle
fnstenv
and
into
sti
ret
loopne
leave
push
push
pop
dec
hlt
nop
fdivrs
jmp
push
into
sub
scas
test
les
ljmp
cmp
mov
pop
push
rorl
daa
es
shlb
jne
push
xor
dec
pop
clc
out
ret
aaa
mov
orl
mov
mov
and
repnz
cld
sbbb
sarl
inc
int3
inc
shll
pop
push
push
xchg
adc
xchg
xchg
push
paddusw
add
lods
add
xchg
pop
xor
push
outsl
cmp
int
cwtl
test
movsl
mov
pop
push
inc
cld
js
pop
jne
sub
push
push
xor
out
pusha
xchg
lret
add
imul
adc
mov
bswap
push
aas
test
fcoml
es
cmp
or
clc
fwait
cmc
cmp
cmp
dec
jo
lret
or
lock
push
arpl
or
and
or
xor
jae
cmc
outsb
popa
addr16
xor
mov
gs
insb
inc
scas
addr16
mov
xchg
add
jns
inc
imul
lods
addr16
sbb
pop
je
ss
in
movsl
fptan
xchg
jg
imulb
mov
shlb
aas
cwtl
pushf
pop
jl
jns
push
mov
roll
or
jno
shl
daa
add
push
ljmp
mov
mov
test
les
inc
out
lods
add
sub
rcr
jbe
aad
sbbl
das
bound
pop
dec
in
out
xchg
pop
subb
pop
into
in
insl
ljmp
and
out
push
and
and
xor
in
adc
rcll
mov
dec
lock
jmp
xchg
packssdw
ljmp
lock
push
insb
bound
cmp
leave
or
lret
test
inc
add
push
imul
hlt
cmp
insl
xor
ffreep
sub
and
mov
dec
test
cmpsb
mov
jg
mov
or
add
cmp
int
xor
icebp
fmull
test
mov
cmpsb
ret
add
mov
das
stos
push
dec
push
add
fmull
pop
clc
adc
mov
lret
add
sub
fisubrs
int3
daa
out
jnp
lret
sub
mov
adc
and
data16
or
ja
xor
stc
mov
push
outsl
jns
bound
push
jmp
adc
add
adc
je
add
jbe
test
sbb
pop
or
movb
and
inc
les
push
sahf
les
inc
imul
fnstcw
pop
cmpsb
pop
lods
lds
mov
lret
into
sub
in
cmp
sub
bound
pusha
mov
mov
cli
rolb
sub
sbb
stc
sub
push
call
sbb
jns
fistpll
pop
adcb
fstl
and
ja
dec
aam
xor
fildll
adc
jns
lcall
mull
mov
sub
imul
mov
dec
xlat
mov
mov
mov
imul
ficoml
orl
jecxz
mov
xchg
hlt
mov
test
sub
movlhps
xor
cmp
add
or
sub
gs
imul
shlb
ret
mov
cmpsl
xor
fistpll
sahf
ret
rcl
sub
push
cmp
stc
xlat
sub
jns
cld
imul
aam
lret
inc
pop
add
es
lea
jecxz
mov
dec
xor
xchg
push
jne
pop
adc
pop
ja
or
call
xchg
addr16
jl
cmp
je
shll
xchg
or
ret
xchg
sbbl
mov
fisubrl
lea
fildl
aad
add
jno
dec
movb
iret
xor
mov
pushf
or
and
fcompl
cld
dec
inc
fs
fcmovnu
divl
mov
cmpsl
jge
into
inc
adc
sbb
fdivrs
mov
cmp
fdecstp
imull
push
sbb
push
and
lahf
icebp
xor
mov
and
inc
ljmp
dec
mov
mov
insl
xchg
push
or
add
sahf
int3
das
xchg
lock
std
xchg
jno
pop
push
xchg
loope
or
mov
lock
pop
testb
movsb
cmp
mov
cld
lcall
clc
notb
adc
pop
int3
mov
js
mov
jns
into
cmp
pop
hlt
clc
jnp
xchg
sahf
adc
inc
lret
loopne
std
call
out
push
repnz
add
jl
rcr
insb
add
cmpsb
sub
popa
fdiv
cmpsl
je
divl
fsubrl
in
stc
hlt
and
pusha
scas
mov
packuswb
xchg
out
xorl
adc
std
mov
jp
nop
out
mov
sbb
movl
dec
pop
add
inc
mov
push
roll
dec
fbstp
out
inc
int
fcmovnb
or
iret
cmc
or
fisttpl
inc
or
lahf
adc
out
jmp
aas
stos
jno
mov
jae
outsl
mov
scas
cmp
jmp
test
fcoml
push
jge
xchg
cmp
jg
sbb
mov
inc
xor
mov
mov
iret
idiv
ret
or
or
sbb
sbb
sbb
push
call
out
mov
add
xchg
xchg
test
adc
call
test
fidivl
sub
xor
iret
push
mov
movsb
mov
xor
xlat
cmp
lea
arpl
mov
lds
pop
dec
cmp
push
jle
sub
stos
lock
or
test
jmp
sarb
shr
pop
adc
add
or
and
lret
ficoms
sbb
jns
sub
jl
jge
push
gs
mov
dec
sbb
jne
cmpsb
ror
cmp
lods
jmp
or
jecxz
dec
jns
or
xor
mov
or
aam
adc
jmp
xchg
jnp
add
repnz
iret
stos
into
out
sbbb
xchg
cli
cmp
jb
or
repnz
pushf
mov
mov
scas
pop
mov
adc
insb
pop
sbb
jmp
lods
out
outsl
pop
aam
das
dec
add
cwtl
mov
xor
xor
mov
jno
add
sbb
das
xor
add
fmull
mov
sarb
movb
stos
dec
and
mov
out
pop
sub
les
cmpl
loop
mov
and
pop
dec
stos
jns
arpl
xchg
sub
jmp
or
pop
pushf
test
xchg
or
dec
cmpsl
imul
and
cmp
adc
push
xchg
add
scas
inc
cmpl
mov
dec
adc
and
inc
jb
ret
xchg
rcr
jbe
sbb
dec
jae
call
push
daa
cmp
daa
out
in
jp
movsl
add
je
and
pusha
sub
and
xor
addb
mov
jns
inc
repz
les
fsubp
mov
movsb
int3
mov
in
popf
cmpsl
popa
sbb
jb
xchg
xchg
xor
in
inc
lret
mov
push
jns
sub
das
pop
push
sub
lret
inc
in
or
repz
scas
jecxz
int3
push
add
add
outsl
dec
add
out
movsl
call
int
adc
or
fsqrt
icebp
mov
mov
adc
pop
mov
pop
mov
mov
push
sti
xchg
repz
das
je
adc
in
cmpsl
cld
jns
cmp
in
sub
inc
in
imul
fstps
mov
adc
jecxz
xlat
xor
mov
cmc
or
bnd
leave
xchg
sbb
and
add
ret
fs
stos
cs
sbb
testb
lock
loope
push
add
dec
loopne
mov
mov
and
jne
stos
add
call
ja
adc
jbe
shr
test
or
xor
jns
test
ljmp
xchg
es
dec
insb
cmp
in
lds
push
pop
sbb
mov
inc
cmpb
pop
imul
and
mov
mov
test
sar
mov
jno
test
inc
addr16
dec
arpl
xchg
push
adc
or
out
cmp
sub
xchg
aas
sub
sbb
sub
xchg
mov
ret
fiaddl
inc
iret
scas
xchg
adc
cmp
ds
cmp
int
scas
push
mov
stos
lea
push
jl
pushw
lahf
movsb
xchg
mov
shrb
inc
push
pop
sti
enter
mov
jnp
push
sub
ss
mov
jae
ret
inc
cmp
pop
ljmp
cs
add
and
inc
xchg
xchg
adc
and
iret
outsl
pop
bound
jecxz
xchg
pusha
jae
jg
mov
sbb
ja
cs
dec
aaa
stos
dec
popf
mov
xchg
cld
push
dec
xorb
jle
and
or
bound
cmc
pop
hlt
push
and
pop
sub
mov
dec
data16
fcomp
or
clc
jmp
jmp
ja
stos
xor
push
push
in
scas
jb
repz
in
cmp
fs
cmp
insl
repnz
mov
xchg
add
pop
stc
outsl
jns
pop
pop
lods
imul
push
sbb
pop
or
pushf
mov
mov
inc
arpl
aam
or
xchg
das
stc
lret
push
dec
jbe
xchg
mov
pop
xchg
fnstsw
movsl
pushf
xor
fsts
lock
enter
dec
jne
mov
test
or
addr16
loopne
push
xchg
das
or
xchg
sub
sahf
call
jns
mov
and
mov
and
testl
andl
jle
cmp
xchg
jecxz
lods
lcall
mov
push
sbb
sbb
xchg
in
adc
and
out
push
jns
or
inc
fs
cmp
inc
cmp
pusha
mov
je
es
movsl
mov
daa
or
inc
mov
in
or
fnstsw
movsl
dec
pop
and
cmpsb
ret
add
int
sub
and
jno
push
or
test
movsb
xchg
jo
aas
dec
push
mov
lret
loop
call
and
out
cwtl
std
sub
jnp
mov
add
sbbl
mov
push
cmp
lret
pop
aaa
sub
ret
fwait
mov
lahf
mov
sub
in
cltd
jecxz
mov
cmp
jmp
stos
aam
push
movsb
mov
in
outsl
stc
shlb
and
push
subb
sahf
enter
addr16
ja
push
mov
std
rclb
xchg
inc
xchg
mov
mov
pop
sub
add
stos
int
lret
movsb
lock
es
adc
ds
imul
pushf
and
je
and
loope
stc
dec
or
xchg
jle
repnz
jecxz
stos
dec
add
jo
xchg
add
xchg
xlat
pusha
inc
jo
lret
ret
add
mov
aam
icebp
fisttpll
orb
orl
psubsw
jnp
lret
std
mov
fldl
out
out
notl
jg
push
mov
jo
fistl
dec
lahf
dec
popf
es
xchg
or
ss
addr16
movsb
rclb
test
out
inc
ss
test
and
and
ds
ljmp
cmp
lds
jb
fisubl
xchg
roll
pop
push
popf
jae
xchg
incb
jbe
inc
xchg
test
in
imull
add
scas
cltd
int
in
mov
clc
in
xor
lea
lea
cmp
leave
imul
out
pusha
rep
in
call
xlat
stos
xchg
sub
mov
pop
jns,pt
inc
push
push
adc
pop
lds
dec
insb
repnz
sahf
ret
nop
adc
pushf
pushf
lret
dec
adc
xor
cmp
xor
aaa
or
in
divb
fwait
mov
pop
aam
mov
fistl
jg
xchg
add
sub
sbb
stos
pop
lea
loope
popa
xor
mov
cmpl
jmp
test
test
int3
sub
dec
out
lock
pop
inc
mov
jnp
scas
iret
cld
shrb
insl
mov
xchg
xchg
int3
subb
movb
sub
cld
xorl
in
push
gs
repz
cmc
cwtl
aas
imul
les
lret
sbb
pop
cmp
xor
insl
shlb
cmpsl
arpl
mov
test
stos
aaa
stos
out
rorb
movl
sbb
pop
adc
pop
cli
xor
andl
iret
sub
fs
cmp
jae
in
dec
inc
add
sub
adc
mov
mov
subl
arpl
cmp
into
mov
mov
xchg
dec
jl
mov
ret
sbb
ret
enter
jb
pop
imulb
and
add
cmp
popa
icebp
mov
dec
sbb
jle
push
clc
jp
mov
sub
test
jl
bnd
sbbl
movsl
ss
sbb
and
ret
jge
push
insl
sub
or
xchg
add
and
and
cmp
push
clc
and
test
inc
dec
xchg
xchg
insl
dec
out
test
loope
xor
and
jbe
scas
mov
fsubs
lods
jae
and
adc
cmp
les
cmp
adc
pop
lret
pop
xor
fsubrp
loop
jge
dec
fwait
sar
js
insb
sarb
sub
fwait
xchg
fildl
cmpsl
cmpsl
cmp
pushf
mov
sbb
mov
repz
jl
fwait
std
jno
add
andb
and
dec
or
or
mov
pop
push
shll
imul
push
pop
lods
imul
adc
cltd
pop
pop
mov
add
scas
and
mov
jae
aam
add
ret
or
pop
push
sbb
add
add
jb
inc
cs
xlat
mov
data16
lods
int3
out
ds
lock
loope
lods
push
push
dec
clc
xchg
aam
std
idivb
mov
stc
pop
fistpll
push
jecxz
pop
cmp
mov
xchg
add
clc
jle
jnp
shl
mov
cltd
and
shrl
sti
cs
shl
xchg
pop
or
jp
ret
push
sub
mov
dec
xlat
xor
notb
andl
pop
shrl
imul
mov
add
insl
jmp
fabs
or
and
sti
repz
mov
xchg
inc
jecxz
fcmovnu
aaa
and
in
repz
les
push
movl
les
jg
mov
xlat
mov
pop
cmpsb
addr16
outsl
sub
and
aaa
inc
aas
mov
dec
outsb
outsl
or
in
or
ja
test
pop
in
daa
icebp
imul
push
dec
or
add
aas
sbb
push
out
dec
sub
fcomps
sbb
or
fs
adc
mov
in
mov
sub
cli
xor
xor
stos
xchg
insl
xor
loope
mov
call
cmpsb
pop
adc
gs
mov
adc
cmp
pop
jl
ljmp
mov
or
leave
shl
mov
pushf
adcb
mov
scas
xchg
mov
adc
jae
fistpll
mov
xorb
popf
bound
xchg
xchg
lret
dec
add
push
or
jnp
pop
add
pusha
and
out
pop
mov
push
clc
fs
imull
out
dec
adc
inc
hlt
out
xchg
call
jecxz
shrb
xchg
in
inc
stc
adc
test
pop
sbb
jo
and
lods
popf
dec
std
repz
adc
mov
dec
cld
jns
loope
xchg
inc
into
dec
test
push
lretw
xorl
in
mov
inc
idivb
mov
repnz
sub
cli
dec
loop
jae
mov
lods
pop
call
test
rcr
sbbl
sbb
lods
je
insb
ds
stc
dec
jmp
out
pop
sub
push
addl
xor
data16
inc
mov
pop
lock
or
jne
mov
and
es
imul
pop
cmp
fwait
cmp
ret
jecxz
push
dec
lahf
inc
sbb
arpl
clc
cmp
test
sbb
scas
sub
xchg
xor
xchg
icebp
arpl
ja
enter
ret
nop
outsb
clc
lret
xor
push
int
movsb
jl
test
test
mov
sbb
cmp
ret
inc
mov
cmp
hlt
mov
mov
test
mov
xor
mov
ljmp
fidivl
in
xchg
testl
xchg
push
mov
jle
jle
xor
pop
pop
shll
es
add
adc
mov
cmp
jp
aam
pop
lock
pop
jb
enter
hlt
push
push
loopne
js
push
shlb
shlb
icebp
cmp
fs
pop
jle
mov
mov
pop
data16
nop
dec
fmuls
ds
ret
ljmp
jne
test
insb
mov
xlat
ljmp
xchg
sbb
inc
fisttpl
adc
mov
jae
jmp
fmul
orl
inc
xchg
xlat
fnstenv
aas
pop
insl
lret
cli
stos
adc
aaa
jbe
cs
mov
popa
sahf
stos
loope
xchg
or
mov
xchg
ss
mov
sbb
push
mov
cld
insl
mov
inc
inc
xchg
data16
dec
int3
and
test
pop
int
mov
jne
hlt
ret
sbb
std
ss
jp
inc
fcmovnb
jo
sbb
loope,pn
pop
je
jp
mov
int3
add
out
leave
and
fisubl
jbe
movsl
mov
call
xor
mov
adc
daa
adc
jnp
jge
into
lds
sub
add
mov
dec
mov
std
inc
adcb
and
pop
push
adc
mov
xor
test
out
gs
jmp
es
mov
shll
push
xor
les
mov
cwtl
lcall
xor
mov
in
lea
mov
aad
inc
gs
dec
into
dec
movsl
cmpl
or
loop
push
dec
and
xor
in
inc
out
hlt
mov
mov
pop
cmp
fnsetpm(287
xorl
sub
test
dec
inc
adc
test
mov
pusha
push
mov
lcall
dec
hlt
loope
or
rorl
xchg
and
mov
xlat
mov
jno
push
arpl
pop
ljmp
outsb
jl
mov
xor
and
std
icebp
test
sub
stos
xor
lock
pop
aaa
mov
aam
bound
push
cmpsl
add
mov
or
jmp
mov
negl
fimull
in
pop
mov
adc
pop
jae
test
mov
cmp
pop
ret
ds
pop
imul
lahf
arpl
mov
mov
xchg
dec
mov
push
jns
xor
inc
call
pop
out
mov
jecxz
sbb
repnz
scas
aaa
pop
insb
xchg
testb
jge
sbb
rorl
fadds
dec
clc
shlb
rorb
xor
jmp
fisubrs
jp
push
jecxz
xchg
lcall
lods
test
push
push
add
ret
in
lcall
aad
sub
push
sti
scas
test
add
sub
dec
cltd
addr16
cmc
inc
pop
loope
cmp
pop
adc
lds
inc
call
adc
aam
adc
xchg
fstps
push
or
addb
stos
pop
outsl
mov
xchg
dec
dec
aam
push
sti
adc
inc
fistl
lcall
xlat
pop
shlb
outsb
cmpsb
ret
push
clc
xorl
xor
dec
pop
mov
cltd
jp
jl
add
insb
jne
rorl
jge
loop
jl,pn
mov
dec
xchg
push
imull
nop
out
ljmp
lahf
insb
and
sbb
stos
add
xor
sub
imul
stc
idivl
lock
mov
xchg
in
sub
in
imulb
cmp
lds
icebp
insb
ficomps
sub
jno
fnsave
mov
in
subl
aaa
int3
pop
mov
pop
lcall
pop
loopne
daa
xchg
nop
int
jmp
mov
push
fldenv
xchg
mov
sub
sar
sbb
out
pop
pop
cli
bound
pop
sbb
dec
jne
nop
xor
leave
imul
ss
cmp
fidivrs
mov
pop
cwtl
mov
adc
lcall
fisubl
notb
mov
jp
push
sti
jo
ja
je
fbstp
and
lods
inc
push
jg
mov
xor
int3
popl
push
dec
test
mov
stc
insb
lods
mov
leave
sub
rcrb
in
xor
jge
int
or
fdivrs
sub
mov
xor
stc
hlt
dec
out
pop
xor
je
jmp
sbb
and
and
pushf
repnz
mov
sbbl
fmuls
adc
pop
cmpsl
icebp
dec
in
push
fisubl
notb
mov
loop
inc
sub
cmp
cmp
mov
jl
mov
sub
outsl
jg
add
cmp
and
add
je
add
sbb
xor
sarl
es
fsts
mov
adc
pop
jmp
lcall
jmp
mov
sbb
or
adc
or
pusha
addb
negl
sbb
jge
repnz
xchg
cmpb
ret
insb
stos
push
leave
push
ds
mov
loope
xor
rorl
shll
jle
mov
pusha
sub
mov
loope
xor
imul
push
inc
mov
sbb
lret
adc
int
push
pmulhuw
scas
jbe
dec
in
stc
inc
ds
aaa
out
dec
shlb
dec
daa
lcall
in
rcll
push
inc
mov
mov
sub
shlb
push
jne
scas
sub
stc
test
int3
leave
arpl
and
xchg
std
aas
mov
or
in
test
mov
enter
sbb
jno
adc
cmp
fmull
dec
cmp
sahf
pusha
xor
loope
bt
xchg
or
fisttpl
sbb
fcomps
inc
jnp
sub
addr16
cmp
mov
jne
repnz
jmp
in
ret
dec
push
shlb
mov
enter
shl
and
pushf
repz
sub
test
je
cmp
add
subb
mov
mov
mov
inc
or
sarl
xor
pop
out
pushf
ret
rcrl
fsubrs
mov
pop
leave
frstor
fcompl
mov
mov
pop
movl
mov
jns
in
rorl
push
stos
int
xor
push
cli
add
or
mov
jmp
push
pop
filds
dec
or
cld
ds
cmp
inc
pushfw
movsb
xchg
out
mov
dec
es
mov
orl
arpl
out
stos
lods
add
loope
shll
add
mov
stc
pop
add
cmp
jnp
inc
add
fistps
and
out
inc
pop
stos
xor
mov
jo
xchg
inc
sub
aas
push
pop
and
inc
push
add
call
cmp
push
test
add
mov
scas
clc
sub
adc
stos
jbe
jne
inc
cmp
mov
cmpb
xchg
xorl
nop
adc
das
repz
jb
cmp
mov
aaa
mov
int3
sub
push
cltd
das
data16
inc
imul
shr
pop
loopne
shrb
negl
adc
xor
xchg
in
test
inc
push
cwtl
inc
sbb
pop
add
or
hlt
mov
icebp
jno
add
and
xor
js
and
jg
aam
add
push
shrb
imul
mov
or
icebp
mov
aaa
pop
inc
jmp
mov
gs
js
sub
pop
mov
mov
aad
mov
sub
xchg
fsts
adc
jne
mov
sub
add
dec
dec
ficoml
mov
sbbb
inc
shrl
xor
or
xlat
mov
mov
ret
loopne
arpl
jne
inc
dec
pushf
nop
lret
xchg
call
or
je
dec
dec
loopne
loopne
or
cs
mov
pop
cli
or
insb
jmp
loopne
cld
dec
add
push
push
push
mov
hlt
mov
outsb
mov
cmp
lret
push
mov
and
or
es
frstor
jl
xor
lods
lret
lods
xchg
jg
stc
sbb
dec
testb
push
pop
loopne
pop
call
adc
outsb
mov
or
or
mov
jne
add
pop
std
pop
mov
aas
jl
in
outsb
rol
sub
stos
aad
mov
loope
adc
out
movsb
mov
es
int3
leave
adc
adc
adc
mov
fdivl
out
jmp
lods
rorl
or
jae
mov
sub
addb
int3
fwait
cmp
jbe
add
cs
notl
xchg
xor
mov
sbb
mov
add
pop
out
or
or
sbb
add
imul
fidivs
ret
aam
mov
rcrb
pop
aas
jo
arpl
dec
pop
sbb
icebp
dec
mov
pop
aad
lret
mov
add
add
mov
stc
les
rorl
cmp
stos
fisttpl
icebp
lahf
nop
mov
add
gs
and
cmp
push
aaa
xchg
inc
xchg
mov
inc
sub
and
dec
dec
ljmp
pop
repnz
and
xchg
sbb
mov
mov
dec
or
out
push
dec
sub
test
sub
cmpsb
jmp
sbb
test
in
dec
mov
push
dec
arpl
fs
mov
mov
subl
in
je
testb
loope
stc
mov
adc
movsb
mov
insb
pop
push
and
push
fs
sub
sbb
mov
cwtl
and
mov
dec
jae
jnp
int3
flds
je
and
out
xor
sbb
mov
mov
pop
add
add
cmp
call
jae
repnz
jnp
mov
and
test
pop
mov
cmp
loopne
xchg
fldl
fimuls
cmp
in
les
lret
cmc
adc
mov
sbb
insl
loopne
repz
adc
xor
loopne
adc
mov
xor
jge
adc
jbe
arpl
add
out
in
inc
test
daa
aas
outsb
xchg
jp
inc
pushf
sti
and
leave
inc
xlat
das
cmp
ljmp
push
and
add
add
imul
push
cmpsl
mov
jo
lods
out
mov
insb
test
lret
icebp
or
cmpsb
js
imul
jbe
dec
and
in
nop
xchg
pusha
xchg
in
aad
push
or
gs
adc
jnp
cmp
clc
negl
popf
jo
mov
xchg
repnz
dec
mov
rcr
int3
mov
or
mov
add
sbb
sub
xchg
jecxz
jae
dec
push
sub
cmpsl
out
cmp
pop
adc
pop
lods
push
fs
dec
pop
sub
or
pop
dec
jmp
and
sbb
decl
lcall
sbb
stos
int
push
cmp
adc
mov
mov
xchg
mov
mov
jae
out
mov
testl
mov
ljmp
and
lea
nop
fwait
ljmp
lock
loope
sbb
and
es
push
mov
shlb
aaa
mov
fiadds
fsts
and
gs
ja
pop
ficoml
shrl
clc
outsb
mov
jns
pop
mov
mov
jp
daa
and
addl
jb
icebp
push
ficompl
push
sbb
adc
enter
xchg
je,pn
outsl
fistps
pusha
sub
inc
pop
aas
jno
add
add
mov
and
fistps
or
dec
and
mov
sub
push
sbb
jns
fsubl
cmpl
stc
xchg
inc
fisubl
in
aas
loope
push
lods
lods
xchg
loopne
in
xor
push
xchg
arpl
mulb
out
cmp
or
jns
mov
sarb
pushf
pop
cmpsl
pop
or
hlt
cmp
sub
cwtl
and
mov
cwtl
xor
pushf
pop
or
addps
out
out
hlt
scas
insl
xchg
ss
sbb
test
loope
js
fldpi
or
xchg
popf
xlat
sbb
push
pop
jo
cli
stc
ret
push
and
sub
cmpsl
pop
dec
adc
jl
or
pop
fst
xchg
mov
sbb
cwtl
in
xor
jmp
or
pop
enter
lcall
mov
add
insl
movsl
loopnew
shl
cmp
dec
jnp
xchg
shl
je
out
mov
daa
insb
fstl
push
addl
or
repz
or
add
pop
imul
ffreep
addr16
ret
popf
mov
jp
mov
adcb
loopne
dec
mov
dec
and
mov
cmp
fdivs
cmp
mov
jmp
pusha
xchg
addb
mov
and
sbb
das
shll
cmpsb
fnstenv
ss
mov
fs
lret
in
std
inc
dec
ret
aam
addr16
inc
int3
mov
or
and
es
popf
mov
mov
and
or
addb
xor
xchg
rcr
cmc
popf
popf
fdivl
xchg
leave
jecxz
nop
aas
inc
sqrtps
pushf
jp
sub
fcoml
stos
popf
les
lea
xchg
das
or
mov
push
cmpsb
cmp
jno
stos
testl
call
hlt
push
xor
cmpsb
dec
movsb
loopne
mov
cmp
inc
mov
das
pop
jbe
insb
movsb
dec
imul
push
xor
dec
ljmp
jg
outsl
daa
sbb
call
sahf
xor
fiadds
imul
lock
pop
add
ljmp
out
insb
lods
js
and
je
ret
movsb
mov
lcall
or
push
movsb
scas
imul
lods
pcmpeqb
mov
icebp
sub
dec
adc
add
movsb
loop
fadds
test
and
outsb
adc
dec
xor
imul
fldcw
sub
mov
enter
repnz
fimull
inc
shl
lcall
sub
mull
mov
lods
adc
enter
data16
mov
stos
jb
sub
cmpsb
lea
lock
clc
xlat
push
lods
hlt
cmc
and
jecxz
adcb
add
pop
rolb
cmp
mov
xchg
dec
cwtl
js
jae
cs
pop
pop
test
push
in
repnz
or
push
shl
jmp
push
pushf
jl
test
cmp
sti
pop
jecxz
or
out
adc
inc
scas
fldcw
data16
inc
jo
push
xchg
cmp
xchg
fsubs
fs
inc
daa
lcall
repz
leave
fs
pop
xlat
sahf
cmc
push
cmpsb
push
das
mov
out
add
stos
jge
repz
daa
into
mov
rcll
lds
popa
or
lahf
mov
jnp
pop
sbbb
push
cmp
mov
aam
outsb
aam
push
mov
xor
mov
fnstsw
movsl
lcall
xchg
ja
int3
es
testb
cmpsl
or
cmp
xchg
in
test
aad
mov
pop
cmp
sub
nop
push
lods
and
outsb
imul
pop
dec
lret
jns
dec
notl
jg
in
push
outsb
lds
ret
stos
add
mov
fisubrl
cs
add
inc
push
xchg
add
or
sbb
pushf
xor
push
les
pop
pop
mov
mov
jnp
mov
in
push
adc
mov
cmc
jmp
pop
mov
lret
or
xchg
jae
or
imul
xorl
inc
test
jl
or
fidivl
adc
addr16
jmp
leave
jg
mov
fidivrl
and
and
xchg
idivl
xchg
xchg
mov
pushf
fwait
lret
mov
pop
scas
aam
sub
xchg
dec
in
lret
fwait
subl
std
cmp
xchg
lret
cmp
sub
lods
sbb
push
arpl
jnp
cmpsb
aas
inc
ljmp
push
adc
jno
jbe
adc
jo
out
cli
jl
mov
mov
dec
das
sbb
cmpsb
shrl
adc
jp
mov
sbb
int
fsubs
fs
xchg
pop
mov
inc
pop
adc
mov
cmpl
fdivs
jne
xor
popa
cmp
cmpl
insl
xchg
mov
int
shrb
jns
push
sub
aad
adc
jno
jo
cmp
sbb
out
test
clc
mov
add
fs
or
cmp
repz
pop
inc
or
loope
jge
popf
adc
or
xor
sub
mov
push
aas
pop
xorb
push
sets
jmp
fnstenv
lret
icebp
xlat
aad
loopne
lret
mov
imul
popa
adc
fs
xchg
fcomps
and
pop
mov
addr16
jae
pop
sysenter
fisubl
mov
sub
fdivr
or
add
rcll
fisttpl
adc
inc
inc
lock
out
or
rolb
sbb
cmpsb
dec
popl
inc
insb
jnp
jg
xchg
ret
mov
lods
jmp
fwait
and
sub
jmp
rolb
stos
aaa
iret
xchg
pop
repnz
shll
xor
or
sub
sbb
dec
ret
or
rolb
sti
push
aad
mov
test
pop
mov
jl
cmp
ljmp
out
aam
lock
jne
pop
mov
mov
or
insb
xor
mov
enter
or
xlat
jbe
test
xchg
jl
enter
mov
mov
rcr
push
push
popa
dec
adc
mul
jns
sbb
lock
mov
adc
dec
sahf
adc
push
jg
out
xchg
and
inc
mov
les
or
mov
lret
iret
or
sbb
dec
mov
aam
push
pop
cmp
push
push
clc
divl
xchg
or
lahf
gs
icebp
inc
push
or
gs
pop
movsl
dec
push
inc
outsl
testb
cmp
jl
int
aas
or
and
mov
movsl
pop
outsl
insb
int3
inc
jb
adc
imul
pop
arpl
aaa
dec
hlt
iret
aam
sbb
lcall
dec
dec
jle
mov
bound
add
imul
bound
in
mov
movsl
cltd
xor
jg
sub
cmp
mov
test
inc
ss
jg
pop
cmp
std
rorb
fwait
inc
jns
add
stos
scas
cli
cmp
sarb
sbb
dec
mov
mov
dec
sbb
pop
xchg
jb
sbb
lret
jmp
or
jne
call
adc
and
pusha
test
sbb
fmull
test
shl
and
sbb
mov
sub
lock
inc
xchg
jecxz
xlat
mov
jns
cmp
daa
sbb
mov
jb
add
fiaddl
pushw
xor
push
stos
lds
daa
add
xchg
sub
dec
sbb
mov
daa
movsl
mov
mov
jnp
rol
sub
mov
cmpl
ret
jmp
and
fldcw
lret
outsl
push
mov
sarb
dec
jns
fwait
push
pop
mov
xchg
or
xor
cmpsl
js
dec
test
jno
dec
scas
xor
cmpsl
sbb
fs
jp
xchg
mov
js
lods
mov
enter
testb
sub
and
imul
cmp
lea
or
push
test
mov
push
dec
xor
mov
dec
mov
stos
mov
sahf
nop
mov
jge
push
repnz
sahf
addr16
cmp
sbb
xchg
test
sub
jle
mov
icebp
das
ss
int
pop
add
clc
ret
and
dec
shrl
outsb
cmp
or
arpl
or
aad
jns
lret
mov
shrb
push
out
mov
enter
xchg
nop
scas
mov
cmp
orl
test
xlat
enter
push
pop
pop
int
pop
add
clc
jnp
dec
cld
mov
std
icebp
outsl
push
daa
bound
ret
add
loopne
orb
les
aam
mov
sahf
divb
fwait
xchg
aad
pushf
insb
fdivr
or
arpl
sub
out
cltd
jb
mov
testb
ljmp
fnsave
inc
cmp
ret
adc
popa
ret
pop
sub
jge
movsb
sub
les
adc
and
adc
out
ljmp
rolb
inc
mov
xchg
dec
jp
mov
loope
push
push
aaa
inc
jmp
iret
pop
pop
push
pop
das
in
popa
fdivl
es
repnz
mov
pop
les
sbb
pop
adc
in
sub
mov
xor
sub
dec
push
ljmp
pop
ja
shll
dec
aad
idivl
scas
popf
jns
data16
testb
jnp,pn
mov
fistl
adc
add
leave
das
xor
pop
adc
sbb
xor
ret
in
and
dec
cmp
je
push
test
sahf
xchg
sbb
test
mov
sbb
rcrb
pusha
imul
push
jno
dec
pop
mov
push
call
jno
xchg
clc
loopne
repnz
adc
ljmp
jg
orb
roll
or
scas
out
aas
pop
in
ja
divl
mov
xchg
inc
enter
cli
ja
sbb
idivb
gs
inc
xor
stos
dec
stos
nop
pop
push
and
loop
ror
push
inc
aad
movsl
pop
cmpsb
or
xchg
sub
xor
xorb
mov
mov
or
mov
inc
repz
push
xchg
adc
aas
adc
and
mov
jecxz
hlt
jno
fiadds
push
lret
ret
out
xchg
push
daa
lcall
sbb
xchg
lret
das
bound
subl
and
sub
and
sub
popa
add
cwtl
imul
test
or
loope
dec
ljmp
fstpt
nop
pop
shl
loope
mov
lret
aaa
jmp
mov
and
imul
sbb
or
aam
xor
lds
outsb
inc
sbb
mov
inc
aas
xor
lret
lea
in
ja
jo
dec
sbb
dec
les
loop
mov
mov
push
call
pop
gs
cwtl
mov
xchg
pop
out
pop
cli
sarb
cltd
out
scas
xor
and
popa
jno
pop
mov
sbb
insb
imul
dec
imull
icebp
je
fistl
addr16
xor
and
sub
xor
test
filds
movsb
je
enter
dec
mov
xlat
loope
fcomi
inc
inc
or
add
cli
mov
inc
aaa
dec
pop
stos
mov
cmpb
and
into
pop
sahf
sbb
hlt
lods
cltd
xchg
mov
dec
jno
inc
sbb
sbb
sub
out
add
mov
inc
lea
push
fidivl
xchg
push
dec
dec
popf
dec
and
sub
and
out
fwait
bound
inc
pusha
and
vpsllw
je
dec
jmp
arpl
shrb
mov
out
sub
jp
loopne
and
movsb
add
push
push
mov
sub
hlt
ss
ror
mov
inc
ljmp
xchg
sbb
dec
loop
mov
data16
xchg
mov
aad
lret
pop
out
add
pop
and
jne
pop
jecxz
ficompl
pop
xor
movsb
push
xlat
lcall
cmpl
jg
or
dec
in
idivb
sub
add
jbe
lahf
divl
call
sub
sbb
sub
cld
xchg
jge
jbe
or
ljmp
scas
jbe
lahf
jno
rcrb
or
stos
mov
dec
hlt
in
pop
imul
lret
dec
sub
push
jmp
push
xor
or
cmp
leave
jb
loope
xor
push
push
cmp
cmp
inc
mov
cmp
das
mov
aas
mov
imul
add
mov
sub
imul
mov
or
inc
mov
mov
inc
ja
in
xor
loopne
popf
mov
jmp
push
cmc
inc
arpl
outsb
sub
movsl
stos
inc
sbb
inc
bound
in
in
aas
popa
adc
add
aas
sar
dec
in
inc
outsl
dec
test
outsl
fdivs
outsl
adcl
nop
xor
mov
jp
inc
outsb
inc
mov
xchg
and
scas
js
fs
aas
bound
mov
xor
jae
mov
pop
shl
xchg
int3
jg
mov
test
push
fsubs
cmp
shll
jle
jb
fs
test
pop
add
pop
cmp
in
push
pop
adc
sbb
cmp
scas
pop
addl
icebp
mov
xor
rorl
xchg
int3
repz
cmp
xor
into
or
es
cmpsl
push
add
bound
cmp
sbb
movsl
cmp
ret
lods
sub
push
int
sbb
lcall
shlb
push
push
hlt
out
rcrb
in
mov
outsb
outsb
subb
adc
fcoml
int3
mov
jae
adc
xlat
jo
jb
xlat
jns
cli
or
or
cmpsb
add
and
shlb
xor
mov
pop
push
pop
mov
sahf
jecxz
pushl
inc
aam
mov
push
jp
repz
cs
mov
mov
rol
decb
mov
cmpsb
sti
fsubrs
inc
ficoms
lds
decl
xor
pop
in
jmp
mov
in
mov
rcl
push
push
pop
pop
sbb
push
xchg
das
iret
clc
mov
es
and
call
mov
mov
lods
dec
mov
mov
pushf
and
xchg
sahf
sbb
and
aad
test
or
mov
adc
cmp
xchg
outsl
inc
repnz
and
xor
pop
cmp
push
sahf
mov
cmp
mov
outsb
sbb
cmp
movq
fwait
xchg
xchg
fwait
xchg
loopne
subb
push
jg
js
aam
adc
xor
aad
push
int3
xlat
mov
jp
inc
push
mov
mov
xor
loope
mov
test
cld
jmp
sahf
outsl
dec
jno
bound
jge
xor
and
mov
test
inc
push
pop
cmpsb
pushf
mov
dec
test
dec
es
adc
repnz
mov
add
es
js
filds
stos
push
xchg
push
cmpsl
je
fcmove
addl
sti
in
adc
fcompl
pop
mov
mov
jno
adc
inc
aam
cmp
out
pop
sbb
inc
push
jne
and
or
and
jecxz
cmpb
popf
mull
mov
movsb
mov
xor
dec
imul
add
scas
test
jmp
movsl
mov
xchg
fwait
mov
cmpsb
xchg
ds
lock
in
les
add
fsubl
sub
sbb
mov
adc
cmp
mov
xchg
jae
add
mov
out
cmp
cmp
mov
inc
shll
pop
mov
test
jl
shlb
jns
mov
pop
pop
or
xor
jnp
jle
arpl
pop
pop
repnz
lahf
push
push
mov
lea
push
push
cwtl
cld
xor
push
pushf
and
push
out
gs
mov
in
stc
enter
lahf
pop
scas
cmp
imul
mov
std
je
inc
sub
jp
jae
sbb
pop
sahf
xlat
dec
cltd
sbb
add
xchg
enter
sbbb
dec
cs
test
leave
repnz
ljmp
stos
and
dec
mov
mov
notb
lahf
aad
aam
std
jae
mov
push
jl
les
imul
jns
call
lahf
cmp
rcl
adc
stos
pop
cmp
inc
insb
push
test
add
mov
into
jmp
mov
test
shlb
fucomi
cwtl
jo
cmp
adc
and
rcr
cmp
inc
add
cmpsl
mov
shl
filds
fwait
int
and
mov
or
jg
push
dec
pop
mov
ret
push
xchg
ret
jbe
xchg
sarl
xchg
pusha
adc
pop
adcb
pusha
rorb
stc
xor
sub
addr16
std
inc
cmpsb
call
rclb
push
push
and
push
dec
rcl
inc
and
xor
jmp
jge
call
scas
jnp
and
divl
and
mov
mov
adc
fmuls
loop
shrb
int
mov
jns
iret
fs
xchg
sbb
pop
mov
into
mov
cld
add
in
inc
mov
mov
stos
fs
cmp
cmp
sub
push
lcall
jns
xchg
inc
inc
cmp
inc
jmp
jae
mov
imul
mov
repnz
cmp
aaa
in
orl
jge
jmp
test
loope
xlat
loopne
into
sahf
and
loope
sub
mov
aas
ret
jp
rep
test
xchg
sub
mov
pop
in
repz
lock
std
bound
mov
jno
and
sbb
dec
imul
xchg
leave
dec
mov
cwtl
push
and
int3
das
xlat
pop
mov
pop
es
inc
jbe
pusha
xchg
jle
popl
enter
xor
mov
mov
aas
cmc
xchg
aam
divb
adc
push
push
add
enter
je
es
in
jae
adc
cmc
cmp
incl
les
shll
ret
movsb
les
adc
flds
push
mov
mov
sbb
shrl
addb
dec
add
jp
outsb
inc
xorb
lahf
ljmp
into
fsubrs
stc
xchg
imul
icebp
popa
mov
mov
inc
jb
sbb
test
lret
sahf
mov
iret
iret
inc
sbb
adc
and
lds
inc
add
aaa
rcrl
lods
loop
pop
push
es
movsb
pop
ds
mov
dec
je
mov
aam
imul
mov
cltd
dec
and
test
int3
dec
push
test
lahf
cltd
pop
push
shrb
test
sbb
xor
pop
mov
clc
push
cmp
or
jl
data16
idivb
lods
rcrl
push
mov
movsl
pop
mov
pop
imul
in
lret
mov
pop
loope
inc
mov
mov
lea
xorb
mov
and
ret
mov
ret
jmp
jnp
xchg
sbb
cld
mov
fdivs
pop
out
and
pop
xchg
push
adc
sbb
fwait
je
mov
push
mov
xor
dec
mov
call
push
xor
int
mov
testb
lret
cmp
pusha
inc
xor
mov
or
mov
jae
insb
mov
sbb
jp
or
int
jmp
xchg
cmp
jnp
cmp
fimull
nop
cmpsb
lahf
and
push
movsb
pop
lret
mov
das
mov
test
aad
stc
mov
or
test
ljmp
lds
scas
or
jb
xchg
movsl
xor
add
lds
pop
out
add
or
ds
and
lds
jo
popf
jge
mov
adc
sar
daa
in
fwait
mov
sbb
out
cmpsb
push
aas
cli
daa
mov
pop
dec
pop
mov
loopne
mov
sbb
mov
mov
pop
mov
cld
xchg
add
ja
adc
sub
mov
fsubrs
out
int3
stos
vxorps
sub
mov
adc
add
ss
jnp
mov
mov
jb
popa
xchg
pop
std
test
js
adc
lret
inc
shlb
sub
pop
inc
outsb
inc
stos
mov
xchg
aad
mov
pop
or
lock
loopne,pn
jl
lret
jnp
adc
dec
xor
sub
mov
iret
sbb
pop
jns
sbb
ficomps
scas
out
lock
sbbb
out
jp
shl
mov
jmp
jb
pop
add
jae
cwtl
shlb
ds
sub
sbb
mov
mov
xchg
jns
cwtl
mov
mov
or
pusha
sub
mov
imul
lcall
or
jno
mov
adc
adc
mov
out
je
iret
add
jns
aas
test
push
das
pop
fsubs
cmp
daa
push
popf
inc
xchg
push
filds
and
pusha
js
push
std
ds
sbb
loop
dec
js
jbe
fimuls
pop
sar
clc
sbb
mov
popa
rcrb
jecxz
cmc
repz
pushf
pop
dec
sub
loopne
mov
and
test
out
adc
cmp
test
aaa
sub
add
sub
lcall
adc
ljmp
cmc
loope
push
rcll
mov
repnz
popa
orl
dec
lcall
xchg
stos
gs
mov
pop
cmp
ds
xchg
mov
pop
stos
in
mov
mov
jo
push
sbb
addb
add
push
inc
leave
fndisi(8087
das
jl
mov
mov
mov
shll
push
cmp
inc
pop
ljmp
aaa
xchg
mov
ret
xor
jmp
pushf
ret
testb
testb
pop
fcoml
js
mov
cwtl
pop
sub
cmp
ret
fisubl
dec
test
mov
aam
stos
loop
clc
ja
int3
pop
mov
cwtl
pop
sub
lahf
cwtl
roll
mov
add
push
lcall
inc
jae
mov
xor
add
cli
hlt
pop
fmul
and
lahf
sbb
and
jmp
jle,pt
mov
xor
fwait
push
daa
pop
int3
and
js
mov
pop
pop
pop
loope
test
pop
cli
mov
adc
add
fisubrl
jb
pop
push
icebp
xor
sbb
lods
clc
push
sarb
insb
jb
pop
andb
xorb
or
sub
pop
repnz
sti
pop
aam
repnz
inc
scas
cmpsb
jno
les
sub
and
testb
data16
xor
push
pop
imul
dec
pop
push
fidivrl
movsb
pop
and
jmp
dec
insb
dec
push
out
mov
lock
sbb
fs
push
iret
push
mov
cmp
std
fmulp
ret
vorpd
arpl
sub
jno
sub
cmpsb
xor
sbb
rorb
mov
xchg
lods
loop
roll
mov
es
loope
pop
test
xor
stos
popf
out
sarl
xchg
mov
jmp
adc
mov
inc
push
movsl
addr16
dec
adc
lahf
mov
icebp
add
dec
jne
rorl
fists
push
add
mov
dec
mov
jecxz
popf
inc
jl
call
xchg
sub
sub
dec
jge
lds
jp
or
inc
icebp
or
mov
pop
mov
sub
lea
cmp
and
scas
add
cs
add
mov
mov
inc
mov
loope
jo
or
sbb
push
icebp
xlat
mov
xchg
out
je
dec
jle
push
mov
mov
loope
mov
mov
addl
jmp
pop
inc
pop
or
inc
insl
cmc
xchg
inc
lret
sbb
js
adc
aaa
andb
xorl
insb
cli
stos
imul
inc
rolb
insl
xor
jns
adc
test
and
int
arpl
stc
mov
xchg
lret
inc
ret
and
inc
push
scas
push
add
mov
or
test
xchg
xchg
insl
jae
aaa
rcrl
mov
mov
xchg
outsb
nop
hlt
jne
in
ljmp
push
into
in
test
xor
mov
out
mov
mov
mov
cmc
cmp
shrl
fcmovbe
pop
fimull
add
adc
sarb
in
inc
stos
xlat
add
imul
into
sbb
jb
push
jmp
leave
xor
out
pop
rorb
mov
cmp
and
dec
add
sbb
cmpsb
fidivl
scas
insl
sub
bound
cld
fmulp
xor
add
lret
movsl
sub
repnz
push
fcomps
cmp
ja
xchg
inc
fimuls
fstpl
iret
mov
out
insl
int3
test
adc
nop
rclb
sub
stc
and
add
and
testb
lahf
scas
sbb
fidivs
or
lds
je
ffree
bound
push
lea
loopne
xchg
mov
sbb
cmc
or
push
jno
popf
lock
mov
rcr
add
insb
xor
pop
pop
inc
sub
mov
pop
pusha
shr
pop
loopne
scas
mov
aam
roll
dec
and
in
ljmp
nop
dec
sub
jno
imul
dec
pop
out
pusha
loopne
movsb
jb
icebp
sbb
in
add
es
push
cltd
adc
jne
dec
das
inc
mov
ljmp
cmp
addr16
cli
fisubrs
pop
int3
adc
xchg
add
push
aad
push
sbb
dec
loopne
mov
nop
mov
dec
testl
lods
push
loop
mov
ja
ss
enter
or
push
sahf
push
pop
inc
out
mov
sti
adcl
stos
jnp
lret
cwtl
ror
scas
sub
xchg
sub
jns
ret
sarb
in
mov
js
inc
fcoms
push
jecxz
sub
xor
mov
xor
add
mov
ja
aaa
xchg
cwtl
sub
out
cmpsl
test
shrb
push
ljmp
sbb
mov
in
dec
mov
js
xchg
jge
aas
jno
bound
ret
outsl
inc
mov
mov
push
repz
fwait
pop
lods
and
pusha
mov
cs
pop
jecxz
loopne
lods
aas
mov
loopne
fdivrp
pop
loopne
dec
andl
mov
cmp
inc
lahf
fiadds
cmp
out
or
movsl
stc
out
std
data16
lock
sbb
jne
mov
inc
shlb
popa
pop
dec
popf
and
repz
dec
mov
movsl
mov
mov
pop
les
das
cli
sub
in
frstor
inc
dec
pop
jnp
xor
xchg
sbb
test
sub
mov
mov
or
mov
loopne
stos
jmp
xchg
adc
pop
call
jp
push
push
cwtl
mov
sub
ds
pop
pushf
mov
cmp
mov
rolb
movsb
xor
mov
adc
outsl
jo
ja
in
inc
faddl
stos
subb
or
mov
and
loope
in
and
in
cli
mov
mov
dec
cmp
loope
sub
mov
pop
daa
add
dec
insb
sbb
mov
fstpl
fdivp
inc
fcoms
mov
iret
xchg
cwtl
in
aam
jl
pop
fs
in
adc
mov
mov
out
insl
int3
test
adc
nop
rclb
sub
mulb
mov
mov
xor
out
mov
pop
mov
iret
fldl
call
shll
adc
fs
xorl
test
add
in
xchg
fwait
pop
adc
mov
and
xor
aam
inc
gs
mov
nop
insl
lret
push
stos
repnz
xchg
addr16
or
enter
nop
inc
into
in
pop
lds
nop
adc
nop
ss
sub
outsl
call
inc
orl
inc
add
mov
adc
pushf
lods
adc
scas
shll
mov
fimuls
in
inc
xor
sub
jne
aad
fdivl
pop
lock
pushf
push
stos
repnz
and
dec
add
pop
mov
lcall
sbb
cmc
xor
dec
xor
fadds
addr16
or
stc
int
inc
lds
mov
rolb
ret
lods
shrb
cltd
push
inc
xchg
in
arpl
mov
std
adc
fdivrl
sbb
mov
xchg
out
shl
add
shr
scas
mov
mov
scas
mov
mov
scas
mov
mov
ljmp
cmc
das
loopne
push
scas
cmp
jb
movsb
lock
cmp
jb
movsb
lock
dec
aaa
push
lds
out
in
out
pusha
sub
xchg
jl
enter
lret
das
and
xor
dec
mov
or
xchg
les
push
pushf
aam
icebp
stos
sarl
sub
jne
xchg
call
hlt
inc
dec
xor
or
cmpsl
xor
add
popf
aam
je
cmpb
pop
mov
xor
adc
inc
fstpl
jne
adc
mov
test
or
icebp
mov
adc
scas
inc
lods
addr16
mov
jg
lret
cmpsl
or
jno
mov
in
outsb
xchg
fmulp
daa
aam
cs
call
scas
mov
inc
in
fidivl
dec
cmp
xchg
dec
in
mov
dec
mov
xlat
mov
pushf
add
push
inc
adc
add
pop
push
ds
idivb
push
cwtl
popf
loop
int3
lret
iret
push
jns
call
dec
or
mov
push
push
pop
rcrl
cli
xchg
inc
mov
mov
fwait
je
mov
mov
adc
outsb
fsub
adc
dec
push
pop
arpl
pop
sub
dec
outsb
inc
xchg
ret
mov
mov
cmpb
js
lods
jecxz
pop
dec
dec
insb
pop
ja
mov
jne
ds
and
mov
adc
fisttpl
mov
sub
adc
dec
stc
xor
pop
xchg
and
shlb
sarb
xchg
jl
xchg
std
push
push
adc
xchg
jo
imul
fnstenv
leave
pop
cmc
fldl
negb
iret
repnz
sub
push
xchg
fstps
adc
iret
sub
push
cmp
xchg
repz
jle
jne
cwtl
pop
sbb
insl
iret
shlb
xchg
adc
imul
repnz
cld
lret
pop
xor
fcomi
cmp
xchg
aad
pop
shl
jns
cltd
mov
mov
call
jb
psrlw
and
loop
xchg
adc
jb
std
cmc
push
addb
and
jnp
xor
dec
fildl
int3
nopl
lds
movsl
mov
xchg
repnz
push
and
xchg
mov
mov
movsl
ret
cld
pop
ds
lret
mov
and
dec
adcb
in
xor
out
jb
sar
test
dec
lods
push
rcr
pop
push
rcrl
out
lds
jle
push
xor
and
cwtl
add
call
mov
mov
jge
and
and
mov
mov
addr16
cmp
cmp
xor
movsb
std
mov
cmc
xlat
clc
xchg
ja
mov
xchg
cmp
aad
fsubrs
enter
xor
iret
in
inc
sub
sbb
inc
cmpsb
mov
cmp
js
mov
adc
adc
mov
inc
pop
in
call
mov
adc
mov
add
popa
repz
mov
lea
cmp
andl
xor
cmp
inc
clc
fdivrs
aad
xchg
sbbb
lods
jmp
dec
jg
lahf
movsb
jo
testl
cmpsb
push
inc
pop
xchg
lret
pop
sahf
scas
pop
or
stos
adc
sub
aaa
pop
mov
aaa
and
xor
inc
inc
jmp
and
adc
cmp
enter
cmp
ljmp
jecxz
sarb
jg
fcom
xchg
adc
push
ret
je
rcrb
add
cmp
xchg
scas
das
repnz
mov
adc
jl
push
and
sbb
in
movsb
lret
out
cmp
inc
add
aam
and
repz
lret
cli
adc
or
pop
pop
lret
ret
call
xor
aad
push
leave
jp
outsl
rorb
ss
stc
in
add
rcrl
dec
sbb
loope
stc
std
mov
fdivrs
sub
sbb
sub
mov
out
mov
xor
jmp
stos
or
adc
dec
dec
or
push
push
lret
mov
jecxz
ret
dec
push
dec
and
inc
ss
sbb
out
and
lret
mov
fsubs
addr16
sub
fs
cmp
mov
push
pushf
mov
into
sbb
jmp
cmp
insl
mov
mov
mov
cmpsl
push
shlb
push
dec
bound
ret
inc
mov
loopne
xor
rorl
cmpsb
cmp
sti
xchg
mov
adc
xor
lcall
iret
mov
jne
pop
mov
xchg
xchg
mov
dec
jecxz
xchg
js
mov
mov
les
sti
lock
cli
mov
and
nop
mov
int3
mov
inc
dec
es
push
lds
aas
icebp
xchg
js
adc
or
in
inc
inc
cs
mov
mov
adc
repnz
xchg
xchg
xchg
out
pop
push
adc
and
outsl
mov
xchg
icebp
cvttps2pi
inc
sbb
add
add
ds
loop
loop
loopne
mov
fdivrl
dec
and
xor
imul
jns
popf
xchg
xor
cwtl
lds
jnp
pushl
cmpsl
cltd
sbb
fsubr
push
mov
addb
sar
jb
or
pop
in
out
jbe
out
pop
scas
in
std
or
sahf
insl
lock
dec
outsl
add
adc
in
add
imulb
pushl
mov
xorl
inc
enter
fnstenv
ret
filds
pop
adc
push
xor
ss
aad
inc
dec
xlat
outsl
mov
orb
bound
movb
pop
pop
mov
test
in
jmp
pop
stc
pop
jno
mov
xchg
out
jle
filds
hlt
adc
int
xor
imul
lahf
psrlw
stos
sub
cs
imul
push
xlat
out
outsb
in
mov
nop
dec
in
fs
in
jnp
out
xchg
sbb
xchg
iret
cs
and
iret
ret
mov
enter
insb
lods
fdivrs
sub
mov
aad
jp
jae
sarl
push
pop
rcrb
dec
sbb
fdivrl
ficompl
outsl
into
sbb
int3
jl
es
inc
test
lahf
fidivs
push
sub
mov
push
push
stos
lret
push
hlt
insl
rcl
inc
ret
outsb
iret
mov
push
nop
stos
xor
cmp
mov
test
dec
xchg
adc
inc
sbb
fs
mov
cmp
iret
dec
ja
pusha
and
mov
lock
dec
push
jbe
cltd
out
lret
sti
adc
cmpb
mov
inc
inc
imul
mov
and
mov
cli
mov
mov
bound
sti
sub
mov
cld
xor
out
fmull
ficoms
push
cmp
mov
lods
lea
or
enter
mov
lret
in
jae
cwtl
das
jae
adc
mov
lea
cwtl
js
lcall
data16
or
push
add
icebp
and
sub
inc
fcmovnb
lock
add
rcrl
icebp
jge
orl
adc
xor
icebp
mov
push
mov
xchg
xchg
ss
ljmp
mov
dec
mov
push
xor
xlat
cld
dec
pop
enter
lahf
xor
pop
mov
push
push
nop
dec
int3
push
fucomp
lods
test
stos
iret
out
xchg
nop
or
fcomi
iret
ja
aas
mov
sub
imull
aas
pusha
hlt
jecxz
push
mov
jae
insl
xchg
sbb
jo
shlb
inc
sub
adc
das
pop
jnp
fdiv
cltd
pop
or
jns
mov
rcrl
filds
or
dec
sbb
adc
out
or
stos
nop
and
add
cmp
fcmovne
xchg
inc
lds
lcall
dec
xlat
add
pop
stos
xchg
adc
cmp
ficoms
leave
leave
xchg
dec
push
lock
cs
pop
sar
add
pop
pop
imul
mov
fbld
or
mov
lds
aad
mov
push
mov
or
or
sub
lock
loop
inc
mov
aad
xor
pop
sbb
mov
pop
push
ret
xchg
or
stos
jg
clc
shlb
push
sti
loop
int3
xchg
cld
and
mov
rorb
daa
pop
cmp
addb
mov
pavgw
push
pop
pop
clts
cmc
lret
iret
sti
lret
pop
cmp
push
loope
call
pusha
cmp
mov
adc
jmp
pop
inc
mov
push
inc
lock
adc
jb
mov
clc
push
jo
xchg
dec
adc
xchg
stc
aaa
call
mov
cmp
inc
cs
sbb
add
mov
adc
loop
idivb
add
jnp
into
add
push
rep
push
mov
mov
add
lods
enter
mov
xor
test
pusha
pop
icebp
cmp
rcrb
rcr
aad
idivb
dec
rorb
lahf
lds
cmc
xor
in
pushf
lea
dec
incb
stos
cmp
mov
jl
aam
adc
push
incb
js
jnp
stc
fsubrl
data16
and
js
iret
ficomps
add
dec
mov
sbb
mov
cmp
fdivrp
xchg
cmp
jmp
jnp
out
popf
test
dec
sbb
enter
pushf
push
popf
push
xchg
add
jg
jnp
jne
mov
jge
daa
mov
fs
cmc
mov
bound
cmp
das
sbb
bnd
scas
repz
pop
add
lret
fidivl
pusha
mov
push
jns
notl
adc
pop
pop
lea
rol
shlb
repnz
test
enter
add
mov
fisttpl
add
add
mov
orl
in
sti
mov
repnz
ss
mov
or
mov
pop
or
popf
dec
mov
mov
push
mov
out
jmp
fwait
ret
fwait
cmc
mov
lea
adc
in
repnz
ljmp
movsb
ficompl
rcrl
int3
adc
loope
enter
dec
inc
or
jno
inc
push
fcmovb
cmpsb
mov
jae
out
mov
ret
shll
jl
xor
push
dec
rorl
cld
mov
das
repnz
sub
dec
imul
dec
push
jl
pop
jmp
xchg
movhps
sub
daa
pop
loopne
js
aaa
push
xchg
mov
fidivs
lock
cmpsb
inc
aam
pop
cmpsl
insb
lahf
sub
dec
and
mov
and
mov
mov
jae
adc
xchg
sbb
sub
or
jle
push
mov
mov
pop
mov
mov
dec
rorb
xchg
push
fadds
repz
sbb
stc
mov
mov
stc
clc
xlat
sub
lret
sarb
imul
pusha
sub
jmp
flds
mov
das
pop
loope
cld
xchg
cs
jb
mov
mov
repz
push
mov
jo
inc
push
lcall
inc
lret
js
lods
cmp
sbb
or
jp
xor
mov
sub
out
aam
pushf
lock
pop
out
push
dec
and
loop
mov
arpl
xchg
mov
lret
pop
into
movsb
add
scas
add
outsl
or
out
scas
cld
push
dec
dec
leave
mov
into
outsl
pop
inc
and
pop
pop
loope
cmpsb
add
push
dec
dec
mov
fistps
sbb
xchg
jo
mov
mov
popa
pop
test
jb
mov
xchg
arpl
test
add
lods
cld
call
and
add
xlat
popa
pop
cmp
jno
fwait
jo
in
push
inc
jecxz
sub
icebp
xor
sahf
sti
lds
xchg
mov
sbb
or
xorb
add
or
mov
pop
pop
ficoml
outsl
scas
outsl
inc
adc
frstor
xchg
and
scas
daa
stos
xchg
mov
mov
sbb
popa
insl
mov
pop
add
lcall
or
ret
mov
mov
cmp
gs
sar
rcrb
movsb
jp
inc
sti
les
mov
movsl
sbb
adc
fnstenv
sub
and
imulb
jl
and
cwtl
ret
sbb
outsl
sub
mov
lds
outsb
movsl
mov
push
jno
or
nop
popf
sbb
mov
dec
mov
shll
in
jne
sub
in
fstpl
mov
loopne
cmpsl
stc
clc
repz
xchg
gs
jp
adc
or
mov
sub
scas
and
adc
jg
jecxz
je
movsl
lret
fisubrl
popf
and
idivb
cmp
jmp
xchg
loopne
push
aad
and
shll
jge
dec
jecxz
push
push
das
out
jb
bound
adc
movsb
cli
jnp
mov
push
call
test
inc
sbb
sbb
cmp
mov
negb
or
addr16
add
inc
movsl
lds
push
inc
ss
in
sbb
pop
sarb
push
iret
popf
pop
lds
and
sub
add
sub
sbb
sbb
fcmovnu
mov
bound
in
lds
sub
mov
lret
in
xchg
jmp
aam
cld
dec
mov
cwtl
ret
mov
push
pop
ror
cmp
stos
jge
inc
std
lods
cwtl
jmp
and
pop
jle
fistps
ljmp
sbb
sti
inc
pop
adc
sub
adc
testl
or
push
jno
xchg
je
std
sub
xor
rorl
mov
stc
fs
mov
pop
jb
out
and
cmp
and
das
jbe
loopne
cmp
and
sub
adc
mov
mov
push
jb
out
sbbl
mov
mov
dec
fwait
int3
sub
inc
mov
into
cmp
inc
lret
aas
xchg
jb
xorl
fildl
repnz
mov
push
push
les
out
int3
xchg
into
outsb
inc
and
fidivs
movb
pushf
inc
scas
movsb
lret
cmpsl
cmpsl
lds
pop
pop
jae
mov
dec
dec
repnz
repnz
call
jmp
push
ficomps
and
rcrl
cmc
jp
das
orb
repnz
les
andb
dec
arpl
mov
addr16
fdivl
add
dec
outsl
cmp
cltd
pop
in
push
pushf
cmp
cmc
out
sbb
addb
fs
ss
inc
daa
ds
int
pop
jae
addr16
ficompl
push
cmp
fnstsw
rclb
or
xor
sahf
scas
mov
add
sarl
loopne
aad
and
scas
mov
in
out
loope
jae
dec
hlt
sarb
and
movsl
fs
mov
adc
jp
imul
enter
push
ja
ljmp
xor
dec
pop
arpl
cmpl
cmp
mov
fdivrp
jo
cmp
sbb
repnz
call
jp
pushf
mov
ret
add
inc
jns
mov
inc
loopne
pop
sti
ss
sahf
jmp
dec
pop
int3
into
xor
adc
and
insb
outsb
mov
repnz
pop
pusha
fldt
pop
inc
cmp
pop
jne
xor
dec
dec
insl
add
cs
inc
push
fidivl
and
cltd
add
in
pop
es
push
xor
into
insl
out
les
sub
pusha
leave
inc
push
sbb
adc
stos
iret
cmp
lds
cmp
sub
push
lds
mov
adc
push
xlat
fistpl
push
fisubs
sbb
xor
scas
outsl
and
inc
xorl
mov
sub
shll
movsb
stos
daa
inc
mov
pop
or
lea
mov
jae
push
daa
push
or
adc
add
dec
and
sti
fwait
sbb
push
inc
scas
fwait
leave
dec
pop
in
or
pop
lods
adc
jnp
repnz
cmp
xchg
xor
das
in
sub
mov
add
fmulp
xor
nop
into
pusha
push
sarb
pop
bound
inc
sbb
sub
pop
les
or
sbb
xor
inc
and
push
das
lret
sbb
push
stos
adc
jge
mov
mov
rolb
jae
jle
jg
sbb
jge
dec
bnd
cmpsl
dec
ds
mov
push
xchg
fimull
repnz
cmc
cmp
pop
inc
mov
mov
sub
movsb
insl
pusha
aas
je
stos
hlt
xchg
test
xor
mov
ss
outsb
cmp
inc
mov
lahf
mov
push
inc
andl
dec
xlat
outsl
pop
cwtl
xchg
testl
andb
popf
inc
movsl
mov
test
jbe
ret
aad
imul
pop
mov
push
movsb
sbb
lods
jbe
int
inc
xor
orl
jp
and
cs
or
loopne
int
inc
test
data16
js
ss
jbe
or
mov
nop
test
push
mov
jp
aas
testb
pop
jmp
ljmp
hlt
ja
popa
cmp
idivl
pop
mov
stos
mov
in
adc
nop
jno
inc
xchg
in
popf
mov
leave
xchg
repz
lea
les
dec
jle
sbbb
mov
je
pop
pusha
shlb
and
ljmp
shll
xchg
rcr
jae
int3
popf
jo
adc
cli
rcll
mov
stos
add
stc
notl
dec
dec
add
push
jno
dec
pop
shrb
mov
out
aam
or
jl
fs
fxch
lods
mov
mov
inc
add
in
push
push
mov
add
hlt
in
aaa
push
push
scas
scas
jb
lahf
fcmovne
xchg
inc
lds
clc
scas
inc
jp
mov
mov
int
je
jne
xor
movsb
test
movsb
daa
sub
testb
lds
jmp
scas
test
clc
pop
pop
mov
out
sbb
addl
mov
dec
mov
loopne
int
das
ret
ret
inc
pop
andl
mov
dec
xchg
shr
add
insl
sub
sar
sbb
or
pop
mov
mov
push
hlt
popa
add
lock
xchg
sub
jl
push
dec
mov
sbbb
lods
ds
and
jne
cld
fstl
and
mov
xor
test
sbb
pop
or
insl
repz
xor
insl
inc
sub
sub
push
dec
dec
loopne
xor
push
push
sub
mov
jbe
mov
jo
xchg
add
jmp
adc
lcall
dec
add
xor
lods
cmpb
adc
adc
adc
lret
pop
andb
leave
and
lcall
out
adc
cmpsb
jae
rcrl
inc
adc
insl
ljmp
sub
popa
pusha
xchg
mov
mov
cmpb
mov
adc
arpl
ret
out
cwtl
cmpsl
xor
inc
es
and
sbb
push
sahf
iret
add
ss
call
jmp
jge
mov
mov
scas
push
cld
xor
mov
mov
push
stos
out
ds
cwtl
outsl
out
stc
imul
mov
call
jge
test
scas
loope
insl
lock
repz
mov
inc
jmp
into
mov
fnstenv
mov
pop
movsl
lahf
fcmovne
xchg
inc
lds
shrl
outsb
ds
mov
xor
mov
cmp
pop
add
mov
push
jl
mov
sub
inc
flds
mov
fildll
jle
addr16
or
mov
push
stos
loopne
xchg
add
push
sbb
addr16
shrb
movsb
xor
jae
pop
adc
mov
pop
data16
adc
xor
imul
clc
test
fcomps
test
sbb
mov
mov
jo
or
sub
loopne
xor
int
jmp
in
add
scas
je
push
pop
decb
jo
enter
and
loope
xchg
jecxz
mov
and
sahf
movsl
fstpt
hlt
lock
scas
popf
subb
loope
outsb
adc
add
dec
push
and
sub
jnp
stos
push
lahf
fistpl
int
sbbb
test
xchg
fisubs
jb
xor
xchg
add
cmpsb
in
mov
xor
and
push
lods
lea
mov
sbb
repz
mov
test
aas
dec
xchg
rorb
outsb
out
mov
mov
cmpsb
xchg
bound
xor
not
outsl
sub
xchg
popa
fldenv
inc
ja
lds
imul
fists
dec
jbe
push
repnz
xchg
add
push
mov
inc
pop
pushf
bound
xor
enter
and
xlat
out
xchg
jae
mov
sub
sub
ret
jecxz
es
in
movsb
sbb
lea
fcomps
mov
rolb
inc
out
roll
push
int3
sbb
mov
jp
mov
pop
xchg
pop
mov
cli
lods
pusha
sub
cltd
aaa
jbe
dec
jae
mov
stos
dec
adc
subb
push
cmp
mov
jae
sbb
mov
into
shlb
loopne
loopne
cli
cld
nop
sub
mov
cmpsl
sub
xlat
add
jmp
jle
push
cmp
inc
arpl
fs
into
or
sub
fdivrs
out
mov
daa
ja
mov
cld
cmp
and
mov
stos
test
add
jge
xor
into
aad
inc
dec
xlat
outsl
push
sub
nop
xchg
pop
mov
inc
test
jp
push
xor
cmpsl
push
xor
aaa
das
add
out
daa
adc
sub
jnp
stos
push
in
mov
testb
insl
leave
add
iretw
leave
pop
addr16
add
jnp
and
push
movsb
xchg
mov
push
popa
cmp
lahf
inc
push
ds
enter
mov
leave
movsb
lods
add
loopne
inc
jb
add
or
dec
rcrl
xor
push
jmp
idivb
pop
daa
pop
insb
aam
loopne
leave
sub
ja
loopne
aaa
scas
xor
cs
fwait
sbb
mov
je
xchg
in
xor
xchg
in
pusha
cmp
adc
and
and
divb
mov
cwtl
mov
xchg
add
sub
mov
pop
cmp
mov
aas
dec
cmp
jbe
cmp
in
stos
cmp
xor
pop
stc
aas
pop
xor
xchg
mov
inc
jle
loope
stos
scas
sbbl
mov
cmp
pop
cwtl
dec
xchg
outsb
bound
in
xchg
call
les
ficompl
jae
jbe
fsubr
out
dec
pop
imul
jno
sbb
scas
repnz
or
inc
cmc
cmp
cld
lret
pop
fstpt
int
in
xchg
lock
subl
push
jo
test
das
xor
ficoml
daa
cmp
add
dec
push
addb
fstps
xor
adc
mov
pop
xchg
cmp
or
cmpsb
add
sbb
xchg
mov
cmpb
pusha
jne
mov
pop
jp
in
inc
push
sbb
movsl
aaa
jmp
or
out
cld
icebp
adcb
fisttpl
les
jmp
push
outsl
rcr
fistps
push
lds
xchg
fstp
inc
or
pop
cmc
fdivr
mov
test
dec
xchg
adc
inc
fisttps
js
dec
xor
loope
js
int
xchg
add
ja
mov
movswl
mov
scas
int3
ror
mov
in
mov
push
loop
push
repnz
push
out
jle
repnz
sbb
cmp
dec
pop
das
pop
mov
pop
dec
cmp
cwtl
ds
into
and
push
ja
mov
lret
lahf
add
scas
add
sarl
aam
fiadds
push
fidivs
cs
adc
sub
and
es
cmp
xchg
imul
mov
and
stc
cmp
mov
push
movlps
outsb
fwait
insb
aaa
outsb
push
add
sarb
xor
cmp
mov
mov
ret
jge
stos
sub
jae
sub
ficoms
mov
lret
lods
inc
cs
imul
in
inc
loopne
sbb
mov
lret
adc
push
mov
repz
lcall
icebp
push
xchg
add
scas
dec
ffreep
dec
jns
jmp
aam
bound
sbb
sbb
jno
inc
test
imul
pop
mov
or
jno
movsl
pusha
inc
jmp
movups
mov
adc
jmp
mov
or
aas
pop
jecxz
or
sbb
cmp
inc
adc
jp
push
daa
std
test
icebp
inc
dec
xchg
in
jnp
dec
stos
fistps
inc
sbb
pop
inc
mov
add
shrb
lock
mov
mov
or
sbbl
sbb
adc
add
ret
lret
inc
ss
mov
xchg
mov
adc
jnp
mov
mov
mov
in
das
test
xor
and
dec
jg
jmp
sub
add
push
cmp
jno
call
cmp
aaa
push
jp
xor
jae
mov
dec
sbb
fldcw
and
dec
mov
test
pop
ret
addb
sbb
dec
pop
lods
xchg
out
std
dec
dec
stc
or
shrb
ret
pop
push
or
push
shll
jne
adc
lods
pusha
pop
sbb
out
push
mov
aas
xor
daa
cmp
cmp
dec
sar
mov
pusha
pop
inc
add
aam
sbb
test
xor
sub
out
in
pop
dec
or
sbb
into
sahf
or
loopne
xchg
pop
hlt
fdivs
pop
sahf
jecxz
in
pop
loop
push
pop
or
movsb
cmp
sbb
fsubrs
jo
or
icebp
mov
adc
cmp
fs
pusha
lret
lods
mov
cmc
fnstsw
rcll
mov
and
repz
and
mov
movsb
xor
mov
mov
lods
jb
inc
arpl
cmp
pusha
push
xor
repz
push
sub
outsb
and
jl
mov
inc
repz
les
stos
add
ljmp
push
xor
mov
push
mov
scas
sub
shrb
or
mov
lock
cld
jecxz
mov
stc
cs
movsl
popf
lret
int3
mov
mov
loop
push
gs
repz
cld
adc
mov
xor
int3
push
lret
jnp
inc
xchg
ficompl
int3
pop
xchg
sub
xor
test
fistl
addl
mov
and
shrb
or
mov
ja
in
shll
lret
mov
mov
sub
xor
mov
data16
push
aam
sti
mov
inc
push
xchg
ret
mov
movsb
pop
cwtl
insl
lods
xchg
cmpsl
aas
jne
mov
sbb
jae,pn
je
enter
or
cmp
daa
test
rorl
imul
mov
mov
aas
fiadds
sbb
insl
rolb
les
mov
pop
cmp
xor
lea
pop
xchg
rorb
xchg
call
add
lret
pop
cmpsb
fst
loop
es
testb
cmc
cmovne
addl
std
mov
adc
xchg
or
rorl
addr16
mov
mov
daa
add
push
js
stc
inc
aas
pusha
shl
fidivs
push
xchg
fwait
push
mov
push
xor
push
mov
jl
mov
scas
lock
imul
or
xor
mov
test
lods
mov
cmp
push
cli
dec
stc
jae
loop
aad
mov
pop
sbbb
sbb
fs
sub
pop
lahf
jp
out
jmp
rcr
gs
bound
jns
loopne
icebp
add
pop
or
ljmp
push
adc
push
mov
jne
cli
jl
ljmp
fmuls
or
outsl
aad
in
xor
jno
dec
ret
jno
jl
es
push
inc
mov
pop
std
or
lret
and
mov
bound
out
out
mov
aam
lret
int3
dec
mov
rcll
clc
les
pop
bound
shll
mov
jns
loop
test
jp
pop
je
vpsllq
add
push
ds
lods
es
push
fs
shrb
lret
imul
lods
mov
inc
dec
add
jnp
loope
scas
mov
lret
cmp
push
inc
sbb
push
imul
add
stos
dec
xor
ss
and
xchg
add
sbb
sbb
xor
dec
xchg
adc
insl
add
inc
mov
mov
iret
shll
jo
sub
cltd
jns
lcall
ret
dec
xchg
or
pop
adc
mov
scas
or
or
inc
mov
sar
js
mov
sbb
fnstsw
fidivs
push
aad
bound
cmp
push
ret
addr16
push
xchg
xchg
adc
repnz
adc
or
mov
mov
sbb
push
outsb
mov
and
mov
fisttps
push
repz
add
lds
fcomip
push
aaa
and
push
lahf
xor
out
ror
loope
popf
test
ret
syscall
out
jae
nop
in
loop
shl
loope
aas
dec
mov
pop
int3
neg
das
sahf
shr
aam
mov
pop
mov
pushf
xchg
pop
sub
and
es
pop
ret
adc
lds
lret
mov
xor
cltd
aaa
int
inc
push
fcoms
or
push
bts
les
lods
inc
add
outsl
sbb
add
iret
ja
popf
jne
icebp
fsubrs
xor
add
in
inc
jmp
pop
pcmpeqw
lods
jl
mov
bound
jbe
out
lods
and
inc
lock
addr16
push
in
add
stc
sbb
addr16
popa
push
dec
mull
push
and
sbb
scas
mov
leave
imul
cmp
xorb
xchg
dec
pusha
pop
sub
inc
xchg
repnz
jmp
lea
popl
in
sub
push
sarl
add
sbb
loop
cmp
ret
fldt
mov
dec
int3
sub
adc
cmpl
inc
aaa
xchg
cmp
inc
loopne
cmpsl
out
pushf
iret
subl
aam
cmpsb
cmpl
loope
cmp
adc
mulb
jns
mov
fisubl
jg
sub
dec
jecxz
popf
test
mov
cs
hlt
lods
pop
mov
hlt
sub
sub
jecxz
nop
cmp
pop
popa
jp
lret
rorl
popa
rcrl
dec
dec
xor
inc
fs
sbb
cltd
nop
push
mov
into
scas
addr16
mov
dec
iret
jg
inc
int3
lahf
andb
xchg
push
lret
add
lahf
cld
dec
pop
into
push
sub
rorl
comiss
mov
or
add
xchg
xchg
cmp
cmp
xor
mov
and
and
nop
test
push
ret
mov
xor
mov
or
jae
pop
int3
xor
jge
pop
cmp
mov
sub
jle
lods
push
cmpsb
enter
xchg
test
cmp
inc
lock
push
push
pop
int3
fninit
xor
mov
fwait
subl
fs
xor
les
mov
sbb
cmp
push
sbb
call
and
lds
dec
jle
adc
ss
xor
int
push
mov
jbe
popa
lods
sub
aad
dec
lock
ljmp
repz
adc
shll
push
pop
cltd
or
in
loop
test
cmp
and
lods
dec
outsl
test
lcall
aas
test
es
mov
rol
outsl
mov
aad
adc
cmp
imulb
xchg
mov
mov
dec
aam
cmp
call
aad
dec
notl
and
pop
ljmp
stos
gs
stos
mov
in
pusha
mov
inc
adc
shr
xor
xor
mov
push
fmulp
nop
or
and
mov
mov
orb
xchg
fiaddl
aas
xor
dec
arpl
repz
cmp
popa
scas
dec
pop
sub
insl
out
dec
pop
sbb
aad
test
sbb
out
lods
movsb
inc
popf
in
mov
inc
push
mov
hlt
lcall
loopne
ret
outsb
loopne
into
jecxz
mov
test
les
outsl
push
jb
mov
insb
jo
lods
aaa
out
mov
bnd
add
sub
push
icebp
in
pop
ljmp
adc
orb
xchg
stos
stos
mov
cld
or
inc
mov
xlat
enter
js
add
vcvttpd2dqx
push
divl
je
xchg
or
das
clc
lods
icebp
mov
movsb
push
jg
sbb
xchg
outsl
push
jb
mov
insb
jo
lods
aaa
add
movsl
lret
push
inc
inc
mov
lods
mov
cs
rcll
test
fistps
or
lret
sbb
rcll
mov
fnstcw
inc
shl
jnp
in
and
pop
sbb
mov
mov
inc
adc
push
mov
push
repnz
mov
ds
jmp
sbb
aad
sbbb
out
add
gs
mov
sub
add
cmp
xor
outsb
add
inc
out
and
inc
inc
mov
inc
push
push
and
hlt
sub
lret
mov
loope
into
pop
or
and
fsubs
dec
and
arpl
xor
lods
cmp
mov
rorl
push
das
jp
jl,pn
enter
das
xchg
inc
test
imull
dec
fistl
or
adc
gs
outsl
mov
dec
push
int3
icebp
inc
inc
in
mov
fxch
push
jl
mov
inc
hlt
push
push
cmp
mov
add
add
jmp
mov
push
dec
lds
cmovo
sbb
fists
das
xchg
dec
inc
les
push
dec
test
or
adc
mov
pusha
xor
mov
mov
xchg
push
lahf
mov
mov
and
in
xchg
jp
hlt
mov
int
jne
out
test
dec
mov
xchg
add
or
push
cmp
dec
shll
or
push
int
mov
jb
inc
pop
mov
andl
xchg
fisubl
or
jnp
add
pop
adc
into
xchg
mov
xor
mov
jle
and
popa
jmp
sbb
push
dec
test
mov
xchg
xchg
fs
inc
sarb
mov
jp
nop
leave
push
sub
in
sbb
loop
negb
movsl
mov
mov
sub
jno
and
mov
xchg
insb
clc
jae
scas
ds
mov
push
mov
cmp
adc
pop
lea
lock
lahf
cmc
inc
adc
mov
sahf
xor
sbb
insb
or
enter
jns
popf
lock
inc
insb
mov
std
pushf
lock
pop
scas
push
jmp
push
dec
shl
loop
or
xor
lods
xchg
sub
mov
cld
aas
cmp
add
pop
jp
sti
jmp
out
xorl
mov
movsb
pop
mov
xor
popf
aas
aad
cmp
xor
fldt
std
cltd
stc
push
jb
and
mov
dec
add
jl
xlat
push
xor
sbb
xchg
or
mov
pop
ret
les
in
xor
repnz
xchg
push
scas
in
aaa
xor
lods
xchg
sub
mov
push
sub
es
fldcw
adc
or
mov
xorl
faddp
xchg
fldt
pop
jnp
int
sub
and
loop
pop
mov
and
push
pop
sub
sarb
pop
pop
jmp
xor
cld
sbb
push
mov
sbb
sbb
xchg
jg
sbb
int
push
pop
fldlg2
jno
pushl
push
xor
cmpsl
push
sub
mov
jo
outsl
jno
xlat
lret
jmp
hlt
sbb
jns
pop
pusha
xor
push
ss
mov
imul
push
mov
rcrb
xlat
imul
sub
xchg
adc
dec
xor
sub
insl
faddl
and
lods
jo
xlat
sub
faddl
mov
mov
cmp
adc
xchg
mov
hlt
enter
push
xchg
sub
sahf
lea
mov
mov
jg
or
and
sbb
mov
stos
ja
xchg
push
mov
loop
mov
ret
cmp
lahf
fstpt
cmp
lahf
test
out
lret
mov
fstpt
mov
push
int3
daa
add
push
clc
aaa
mov
scas
push
sub
bound
xlat
or
out
aaa
scas
and
mov
test
cmp
fidivrs
adc
jge
xchg
inc
test
sub
inc
pop
xchg
test
dec
hlt
in
and
add
in
pop
jno
push
ds
mov
xor
sahf
jp
add
push
sbb
mov
stc
nop
aas
and
push
sahf
pushf
incb
repnz
pusha
inc
cmpsb
lods
or
out
std
sbb
xchg
mov
xchg
or
mov
jo
or
ss
gs
cmp
push
out
adc
inc
out
int
sub
sbb
pop
sbbb
xchg
pop
jbe
jmp
pop
mov
mov
xorl
push
call
push
adcb
cwtl
insb
or
rclb
stos
mov
scas
fcomps
subb
insb
dec
subps
pop
inc
sbb
xor
ret
and
push
test
lahf
pop
xor
jns
cmp
aas
stc
push
mov
jo
addr16
es
xor
xchg
and
sub
neg
mov
out
shrl
dec
das
mov
repz
js
sbbl
cmp
rclb
mov
cwtl
outsb
adc
push
jp
sbb
nop
popf
stos
jae
push
mov
imul
imul
in
lds
ljmp
add
jbe
pop
jg
adc
jns
movsl
out
xorl
mov
inc
lods
mov
fcomi
jmp
mov
es
int3
int
lret
adc
dec
sub
test
cmp
jnp
push
data16
mov
push
sti
fwait
jbe
lods
test
insb
arpl
cs
dec
mov
pop
ja
rcll
mov
mov
jmp
and
into
inc
in
sbb
cmc
mov
fidivrs
cwtl
rclb
sbb
adc
cmpsb
cs
jb
dec
inc
sbb
mov
push
xor
dec
and
push
jp
iret
fcomps
repz
push
xor
push
rclb
mov
rcrb
cmc
repnz
dec
pusha
rorb
repnz
cmp
cmpsl
imul
cmp
cmp
add
dec
xor
fistl
jmp
push
rcll
adc
inc
bound
inc
test
rep
insl
lea
push
jo
and
je
sbb
mov
pop
inc
jecxz
call
lods
adc
addr16
insl
mov
cmp
movsb
mov
nop
mov
mov
ds
data16
or
and
hlt
or
std
mov
dec
inc
negb
xor
push
jne
xor
movsl
out
sar
sub
mov
inc
loope
fsubp
sub
mov
popf
xor
mov
lahf
addb
jmp
cmpsl
ret
cltd
jle
hlt
xchg
je
outsl
fxch
pop
outsb
xchg
mov
addr16
cmpsb
or
dec
mov
mov
outsb
sub
fwait
lea
inc
int3
add
push
mov
xor
lret
ljmp
scas
jge
push
int3
pop
sarb
pop
pusha
dec
lds
mov
jb
mov
pushf
out
lahf
xlat
pop
push
xor
shlb
xchg
dec
mov
ja
ret
jbe
movsl
js
sub
fistpl
and
mov
or
loope
jns
call
mov
enter
jge
push
pusha
jns
scas
xchg
or
fisttps
ficompl
xor
inc
and
pop
sub
lret
cltd
nop
xor
xchg
xchg
hlt
negb
cld
jge
push
xchg
and
faddl
into
stc
inc
or
das
xchg
int3
mov
loopne
cld
clc
mov
cwtl
sub
mov
mov
fstpl
push
scas
int
mov
enter
dec
bound
cli
xchg
lock
fnstcw
mov
inc
lock
dec
cmpsb
shrl
cvtps2pd
ja
std
add
loope
les
xchg
and
stos
pop
les
loop
sti
insb
sbb
jae
pop
divl
ds
lock
inc
mov
and
repnz
push
daa
jg
stos
sub
fstps
inc
stc
iret
mov
in
xchg
cmp
mov
push
leave
sbb
xchg
push
push
sbb
and
rcrb
mov
xchg
dec
jg
sahf
jmp
jl
push
add
lret
mov
push
orl
in
pop
pop
push
mov
dec
imul
mov
test
lods
mov
push
jle
and
sub
jecxz
xchg
pop
dec
pop
push
cli
sti
fstpl
bound
inc
xchg
mov
pop
or
and
sub
sub
js
and
loopne
xchg
jno
lods
push
inc
mov
cmp
sarl
stc
movsl
cwtl
inc
pop
lds
push
push
icebp
sbb
push
stos
inc
mov
scas
mov
xchg
dec
test
jmp
or
push
sbb
mov
sub
inc
out
mov
pop
into
lds
mov
add
pop
in
mov
cmp
clc
inc
pop
cmp
repz
arpl
mov
fsubs
data16
jle
out
jge
cmpsl
and
mov
stc
dec
xor
cmp
int
push
ja
xor
mov
mov
outsl
cmpsb
pop
ror
jge
xorl
daa
pop
cmp
push
popa
cmp
xchg
aas
xchg
mov
cmovge
mov
and
in
repz
sub
lret
xor
stos
sbb
iret
imul
mov
les
jo
xchg
mov
daa
sub
xchg
push
sub
mov
pop
xor
mov
xchg
sub
repnz
sbb
rcrl
push
and
xchg
pop
mov
dec
mov
in
mov
inc
fists
adc
add
add
sbb
sub
mov
fisubrs
cld
mov
sahf
sti
xchg
or
dec
or
push
xchg
mov
call
and
stc
sub
adc
add
jae
cmp
mov
lahf
rcll
jle
adc
pop
or
add
mov
insb
imul
jo
ja
aas
xor
and
test
loop
or
orb
jns
push
leave
imul
xchg
sahf
pop
mov
and
inc
in
fbstp
js
or
xchg
aam
dec
outsl
ljmp
pop
push
inc
jge
mov
repnz
xchg
mov
dec
std
sbb
xchg
or
pmullw
dec
dec
stc
cli
test
lds
jbe
scas
cmp
fisttpll
ss
fdivs
in
or
ljmp
loopne
pop
sbb
aam
push
sbb
fiadds
mov
outsl
cld
jl
push
dec
aad
arpl
mov
add
mov
mov
outsb
mov
mov
clc
js
jl
jno
lret
xor
test
into
nop
jnp
mov
ret
jae
int
mov
push
fwait
jns
pop
sub
push
es
jbe
popa
sbb
push
notl
inc
and
dec
mov
ret
test
cmp
mov
sbbb
mov
push
sub
jp
jbe
fimull
xchg
or
shr
cmp
call
mov
lcall
sbb
mov
sbb
mov
movsl
cwtl
mov
or
jmp
pop
cmc
jg
push
stc
divps
out
xchg
filds
push
sbb
je
sarl
xchg
xchg
jo
cs
cmpsl
xchg
aam
int
add
mov
in
rcl
outsl
cli
inc
push
lret
je
ds
jo
adc
push
shlb
xchg
cltd
pop
mov
in
loope
das
and
fs
repnz
xor
sti
add
dec
fsubrl
jae
out
std
mov
shl
and
dec
cmc
mov
xlat
lahf
add
mov
fidivrs
vorps
lock
outsb
call
test
jl
add
sarl
gs
xor
jp
imul
or
xchg
cwtl
imul
jmp
xchg
addb
rcrb
jp
movsl
shlb
int3
iret
xchg
in
push
dec
ljmp
adc
cs
popa
outsb
add
bound
nop
dec
ds
mov
fisubl
sbb
ret
imul
lea
pop
mov
call
jg
loope
xchg
sub
mov
mov
cld
mov
xchg
addr16
dec
ds
xchg
pop
mov
int3
jne
adc
stc
inc
fisttps
xlat
xchg
int
int
cmc
adc
adc
sti
enter
in
mov
imul
stos
fidivrl
lret
cwtl
push
pop
rcr
mov
inc
mov
lods
cmpsb
pushf
aaa
cmp
int
cli
mov
mov
pusha
lret
movsl
lock
ret
adc
add
arpl
inc
popf
cmpsl
and
cli
es
cmp
cmp
sub
fildll
int3
movsb
stos
in
stc
xchg
dec
xor
call
lods
and
and
leave
lcall
call
add
xor
aas
leave
push
dec
dec
dec
sub
jge
sub
inc
jbe
subl
mov
cmp
das
add
out
push
dec
adc
xor
sbb
loope
fimull
mov
aad
xor
cmc
cmp
ljmp
leave
aam
push
push
mov
nop
jnp
lret
add
add
pop
and
das
xchg
jg
and
mov
mov
test
pop
fcoms
xchg
jle
fstpt
nop
arpl
mov
adc
cmp
mov
lret
jp
add
jo
pop
and
push
aaa
mov
std
xchg
cmp
repz
scas
popa
mov
adc
cld
not
test
xchg
imul
xlat
dec
lahf
es
push
shrb
inc
ror
sub
xor
leave
cmpb
in
mov
mov
sub
enter
inc
insb
push
sub
xor
mov
mov
jb
inc
and
test
add
mov
into
icebp
lock
pop
xchg
cmp
in
xlat
push
sbb
into
lea
jns
call
out
sbb
mov
or
fists
jg
aaa
mov
dec
xor
xchg
aas
testb
cmp
rcrb
pop
in
mov
imul
test
je
out
das
xchg
repnz
jne
jg
iret
sbb
push
loop
lahf
icebp
loopne
pop
and
stos
sarb
add
mov
popa
fwait
aaa
cmp
xchg
or
in
push
inc
add
movsb
fnstsw
mov
mov
enter
jns
nop
push
addr16
out
mov
cmp
test
aam
popa
scas
das
cltd
adc
in
mov
inc
push
call
cld
sahf
xchg
int
ss
pop
sub
sbb
cs
push
cmp
gs
xchg
mov
lahf
adc
sbb
pop
shll
mov
stos
scas
inc
jno
push
cmp
xchg
mov
insl
insl
and
inc
sub
push
dec
jo
dec
in
mov
pusha
dec
loop
ret
xchg
scas
mov
jp
sti
ds
stos
cmp
push
mov
addr16
daa
fwait
jg
movsl
cmp
test
jmp
push
mov
idiv
mov
push
int3
aas
imul
and
push
ds
xchg
and
lods
sbb
mov
adc
xor
test
push
ljmp
orl
or
stos
leave
mov
mov
jge
jae
js
fdivrs
push
movsl
out
and
and
pusha
mov
or
push
pop
insb
lret
lock
jl
sub
mov
mov
aam
mov
in
add
mov
jo
int
jns
sbb
cmp
enter
xor
xchg
adc
pop
lret
mov
icebp
inc
enter
xor
jle
adc
mov
add
aas
mov
jo
xchg
jb
adc
jb
sbb
loopne
or
in
mov
xor
dec
je
pop
mov
roll
cs
int
dec
add
das
ss
mov
loope
jno
pusha
popa
pop
sarb
adcl
mov
sbb
sub
mov
and
in
xor
and
push
je
jne
sub
cwtl
xchg
je
sahf
xchg
aad
dec
test
stos
mov
and
shrl
xor
mov
popf
out
sub
leave
lds
mov
ret
inc
cltd
dec
repz
imul
xchg
mov
fidivl
in
fimull
sti
cmp
inc
push
jbe
pop
test
lret
and
int
imul
sub
and
nop
mov
lret
sbb
lea
stos
push
push
xchg
inc
dec
testl
mov
sbb
dec
sahf
mov
hlt
inc
add
sbb
push
mov
jb
call
mov
adc
call
enter
mov
push
cmpb
iret
nop
cmpsb
push
cltd
sbb
xor
mov
jno
xchg
clc
loopne
int3
movsb
mov
fdivr
in
jns
data16
loop
or
adcb
mov
mov
push
cwtl
aad
andb
incb
xor
repnz
daa
inc
insb
andl
loop
lcall
popf
mov
cmc
mov
subl
or
enter
bound
sbb
mov
arpl
xor
pop
cmp
scas
inc
pop
xchg
mov
clc
bound
sbb
push
hlt
mov
jbe
pop
fdivl
cwtl
push
in
sub
and
jne
cmp
gs
imulb
add
jmp
dec
test
cwtl
test
mov
mov
adc
mov
or
in
test
lahf
fcomps
fwait
sub
sbb
jmp
add
sbb
das
pop
js
mov
and
xchg
lret
fldl
scas
inc
pop
xchg
mov
lcall
je
xchg
cmpsb
testl
push
sti
jg
aaa
ret
pushf
ret
push
in
dec
out
push
movsb
pushf
inc
pop
xor
es
mov
imul
loop
test
movsl
mov
lods
lods
cwtl
cmp
xchg
std
jnp
dec
push
lahf
mov
cmp
lret
roll
mov
cmp
cwtl
xor
test
push
jno
adc
sahf
jmp
xchg
inc
lds
sub
aam
ret
pop
cmp
outsb
jae
dec
stos
and
mov
xor
push
xchg
call
add
xchg
mov
sbb
bound
inc
mov
incl
movsl
pop
imul
lahf
xchg
ret
inc
std
insb
or
adc
cmp
sbb
inc
orb
push
xor
cmp
cli
xorl
mov
outsl
scas
add
mov
fwait
sti
jg
les
shr
mov
mov
xchg
jbe
sub
adc
and
jl
push
cmc
lods
xor
bound
xchg
mov
push
pop
sbb
adc
cs
dec
stos
dec
movsl
dec
dec
ret
mov
push
adc
pop
inc
adc
loopne
lds
sbb
in
mov
or
mov
add
and
mov
dec
xor
cli
aas
adc
adc
fucomp
lret
loope
jns
in
stos
test
inc
clc
repnz
aam
inc
and
mov
test
xchg
xlat
jg
or
lods
adcb
cmc
jno
loopne
hlt
inc
sub
mov
mov
push
and
inc
cmpsl
cmpsb
inc
arpl
mov
mov
xchg
arpl
out
repnz
decb
clc
xor
adc
call
sbb
sbb
jo
sti
mov
leave
and
push
scas
into
cwtl
into
mov
inc
sub
dec
dec
rolb
leave
lds
adc
fildll
mov
jge
sub
out
movsl
ja
fadds
sarl
sub
fnstcw
hlt
mov
sub
or
sbb
cmc
cmp
sub
xchg
sub
xor
xchg
call
and
lods
mov
in
mov
in
cmc
test
ja
push
inc
out
idivl
xchg
fwait
movsl
inc
sti
and
cmp
in
mov
xor
mov
xchg
movsl
cwtl
out
fs
ds
bnd
into
ds
lods
cmp
test
stos
sbb
xchg
jge
dec
inc
dec
mov
and
lods
adc
mov
das
adc
cmpsb
iret
outsb
int3
mov
std
or
or
call
mov
ret
inc
push
pop
adc
mov
in
subb
pop
ss
mov
inc
mov
cltd
test
adcb
adc
or
in
jae
xor
clc
adc
push
stos
push
into
and
movsl
shll
aas
push
stc
and
inc
roll
in
push
mov
sub
mov
stc
jmp
and
cmpl
push
sub
fwait
pop
mulb
flds
aam
ja
xor
mov
push
scas
and
sub
pop
mull
repz
cmpsl
push
rorl
popa
pop
ljmp
gs
pop
fsubr
push
jo
aaa
gs
lcall
sarb
or
icebp
test
out
mov
dec
xchg
loop
jns
aaa
mov
push
xchg
das
lds
test
cld
inc
hlt
cmpsl
adc
cmc
and
mov
lock
xchg
clc
pop
cmpsl
push
bnd
ja
sbb
lret
mov
add
xor
pop
in
or
ret
aaa
fcomps
sar
pop
jnp
mov
jnp
int
nop
into
xchg
sbb
pop
cld
roll
jl
xorl
movsl
xor
stos
xchg
call
dec
jne
add
lods
jo
cmp
jge
dec
mov
lret
push
les
cmp
cmp
fcmovnb
and
jg
out
xchg
xchg
cs
outsb
cmp
or
lahf
push
adcb
sub
mov
push
inc
out
xchg
sbb
push
jne
jnp
jno
sub
cmp
xor
data16
leave
add
pop
mov
punpckldq
int
sub
pop
jg
mov
loop
out
xor
add
sarb
hlt
sbb
in
fistps
test
outsl
mov
aaa
les
cli
fistpl
aam
xor
jo
inc
in
scas
sub
dec
jmp
fisubl
xor
mov
mov
sub
push
sbb
xor
int
push
push
or
fldl
pop
mov
mov
or
sbb
push
data16
movsl
mov
cwtl
outsl
aam
xor
shrb
or
lds
or
mov
daa
xchg
add
adc
xchg
loopne
cmp
mov
arpl
cld
das
add
in
xlat
and
loop
scas
or
adc
pop
outsb
das
stos
jp
mov
cmp
mov
mov
push
adc
adc
pop
popa
sahf
dec
sarl
out
mov
inc
scas
fs
sub
sbb
inc
outsb
inc
and
lret
icebp
out
cltd
repz
fisttps
mov
repz
cltd
pop
inc
pop
adc
xlat
add
nop
out
pop
imul
out
pop
add
fwait
mov
ja
mov
in
int
mov
xor
shlb
jle,pt
sub
loop
push
adc
pusha
mov
xor
sbb
push
or
dec
test
push
orb
dec
in
dec
xor
ficompl
mov
pop
mov
pusha
scas
xchg
jl
fsubrs
aaa
aaa
test
xchg
mov
icebp
dec
jb
outsb
jecxz
movsl
mov
roll
outsl
mov
xchg
mov
lahf
test
divl
dec
not
dec
scas
push
add
inc
andl
insb
les
add
xchg
mov
inc
jmp
cld
imul
sbb
pusha
call
mov
dec
fsts
insl
jno
xchg
cmp
adc
cli
jnp
push
sbb
mov
xlat
sbb
push
xchg
pop
mov
in
dec
pushf
sub
or
adc
ret
jle
jge
xor
jge
dec
pop
fmuls
mov
scas
aam
dec
ljmp
and
jl
imul
pop
testl
gs
lock
cmpsl
les
jae
jmp
xchg
pop
enter
pop
or
pop
mov
pop
push
sub
scas
test
aam
int3
xchg
daa
sub
mov
call
orb
add
sbb
sub
rol
dec
hlt
dec
pop
lcall
or
hlt
and
pop
xchg
pop
iret
and
mov
push
xchg
ljmp
dec
inc
mov
adc
stos
jle
jae
cmc
notl
cld
sub
fwait
xor
sbb
adc
leave
dec
addr16
cs
push
cmp
mov
push
repz
fcmovnb
out
rclb
dec
mov
cmp
in
icebp
mov
fdivrl
sub
jbe
dec
or
jne
jl,pn
pop
ja
ret
ret
jno
insb
cwtl
cmp
mov
loopne
addr16
cmp
cli
fcmovne
and
adcb
sbb
enter
stos
fstps
fwait
sbb
lods
jns
pop
scas
divl
test
pop
sarb
scas
pop
arpl
push
insl
loop
ds
and
mov
or
out
jae
pop
ds
loop
out
fisubl
jge
mov
jne
into
test
add
fdivrs
mov
and
sahf
mov
cwtl
int
xchg
mov
jnp
movsb
cli
xlat
call
sti
cli
inc
push
js
int3
sub
dec
mov
ret
sub
pushf
push
dec
mov
jmp
into
xor
in
out
incb
adcl
push
addb
pop
mov
es
nopl
jp
dec
dec
cmovs
mov
jnp
ficoml
hlt
xorl
dec
and
outsb
das
xchg
dec
pop
rcll
cmpsb
lahf
sahf
shll
cmp
stc
push
imul
mov
lds
sbb
push
pop
fisubl
add
add
add
xor
or
mov
inc
test
xchg
test
rolb
xchg
nop
jb
out
sarb
cli
test
insb
adc
xchg
imul
pop
pop
nop
sahf
and
or
lahf
add
mov
aaa
xchg
fadds
jg
out
int
rcl
mov
fsubs
mov
lret
rorw
lcall
sbb
loop
outsl
lock
in
int
rcr
leave
sub
les
and
cmc
rorl
mov
mov
adc
sbb
mov
sub
add
xchg
ja
inc
xchg
rol
mov
inc
imul
xor
mov
aas
pop
stos
sti
or
add
xorb
das
and
lret
ja
repnz
push
orb
mov
cmovb
jno
rcrl
cmp
pop
dec
aas
cmp
xor
movsl
mov
pop
or
sbb
pop
fcomps
call
movsl
out
fldl
push
add
imul
into
in
inc
and
mov
arpl
ja
mov
and
and
jns
shlb
in
dec
dec
jle
adc
call
inc
pop
jmp
sub
jnp
xchg
mov
mov
in
sub
and
pop
jge,pn
and
add
adc
inc
sbb
and
inc
mov
sbb
push
and
inc
pop
fs
or
stc
mov
cltd
testb
inc
xchg
inc
jecxz
or
mov
sbb
andb
jae
sub
scas
fists
fdivrs
and
jmp
adc
outsl
jo
sub
xor
test
add
dec
lods
adc
pop
and
mov
xor
fcomi
cli
clc
ret
push
xor
mov
mov
dec
cmc
xor
sbb
je
and
dec
push
pop
sti
incl
xor
mov
push
add
rcr
pop
add
dec
add
je
cmp
stos
mov
mov
push
pop
test
pop
cmpb
pop
pop
dec
insb
popf
loop
pop
mov
jo
popf
mov
push
push
add
push
repnz
lahf
or
sbb
andb
mov
fstps
xchg
pop
sbb
call
pop
mov
leave
nop
scas
aas
leave
xlat
mov
ds
retw
test
loope
lods
push
arpl
mov
jl
ror
xchg
pop
int
insb
xor
push
sub
mov
ret
push
inc
mov
jo
mov
lahf
dec
cs
xchg
data16
addl
mov
int3
mov
xchg
jnp
aas
cmp
dec
dec
jns
mov
fcmovne
pusha
addr16
mov
mov
cmp
jns
xor
or
fbld
daa
cmp
in
aad
mov
sbb
push
scas
pop
aas
mov
and
subl
mov
jo
nop
in
push
lea
jae
mov
out
decl
sti
inc
scas
push
sahf
inc
xchg
aas
pop
das
into
movb
add
popf
int
outsl
test
lds
jmp
mov
push
das
sarl
cs
mov
aaa
push
push
mov
mov
pop
add
xor
pop
jb
xlat
stos
push
sub
movsl
sub
xchg
mov
or
adc
clc
mov
adc
jg
dec
mov
add
das
lahf
loopne
mov
scas
pop
push
xor
sbb
movsl
xchg
push
jb
or
pop
adc
inc
movsl
leave
inc
push
leave
ds
cwtl
jae
out
js
adc
mov
shlb
mov
stos
and
xchg
rcll
lds
out
xor
cmpsl
test
repnz
pop
out
jae
adc
dec
mov
mov
out
mov
jnp
mov
repnz
pop
outsl
mov
dec
iret
dec
inc
into
in
adc
mov
jb
pop
cmpsl
ret
xor
xchg
sbb
pop
cld
es
fidivl
imul
jne
stos
push
mov
inc
sub
add
jbe
jl,pt
repz
aas
pop
fmul
mov
daa
imul
mov
leave
mov
dec
jns
psrad
dec
fucompp
jmp
sbb
ret
lahf
pop
loopne
add
mov
inc
cs
lea
mov
loopne
push
dec
sub
jns
ret
idivl
dec
cmc
dec
addb
loope
sub
clc
pop
faddl
pop
push
jl
push
cli
cwtl
lcall
imulb
adc
push
adc
and
imul
inc
or
in
gs
xchg
das
lret
adc
push
mov
lret
aaa
cmp
add
jp
xorb
mov
inc
ljmp
mov
xchg
mov
shlb
sub
cld
test
xor
lret
repnz
test
cmp
pop
inc
fcoml
repz
or
push
repz
dec
das
sbb
sarb
pop
es
xor
out
pop
cmp
shl
and
dec
mov
adc
jne
shlb
cbtw
sub
xor
jnp
cmp
xor
sbbb
adc
xlat
aad
xchg
mov
aaa
ds
dec
fwait
xor
pop
or
add
das
filds
fldt
xchg
sahf
jnp
dec
ret
xor
pushf
pop
dec
aas
vpaddusw
mov
dec
mov
lods
xor
jae
sbbb
jbe
mov
jecxz
scas
aaa
test
adc
neg
mov
ret
xchg
or
pop
and
push
inc
push
movsl
jmp
popf
jne
andl
xchg
push
iret
cmp
push
inc
xor
dec
jnp
mov
or
jb
mov
mov
aad
aam
mov
call
inc
inc
mov
inc
push
fcmovne
xor
dec
xchg
inc
xor
hlt
les
push
testl
stc
std
movsl
inc
xchg
stos
testl
pop
mov
mov
cwtl
cmc
xorb
fsubl
mov
sub
inc
dec
sbb
lcall
sbb
sub
push
jbe
sub
and
movl
sub
adcl
xor
das
imul
orb
ljmp
rcrb
sar
stos
cld
clc
nop
leave
ret
stc
fnstsw
stc
lods
pop
addr16
leave
and
xchg
and
sub
aad
out
jge
out
xlat
jp
popl
sbb
ja
jecxz
cmp
fs
jnp
lcall
or
push
jecxz
std
sti
loope
jno
xor
loop
cmp
in
push
test
xchg
leave
scas
inc
negl
jo
xchg
orl
mov
sti
arpl
cs
popf
xchg
adc
mov
outsl
pop
lret
aaa
jno
jnp
leave
into
and
cmpsl
adc
cld
xchg
cmp
cmp
or
outsb
mov
xor
adc
mov
aaa
jge
push
rcrb
mov
mov
mov
testb
movsl
pop
int3
push
sub
test
inc
out
int3
add
shll
nop
scas
lahf
out
iret
mov
jb
sar
push
dec
scas
and
inc
push
lcall
daa
and
aad
cmpsb
or
loope
dec
xchg
sbb
dec
sarb
mov
mov
adc
or
popf
std
stc
sub
push
pop
out
dec
roll
pop
mov
pop
push
fcomip
fwait
cmc
dec
inc
mov
dec
mov
mov
out
pop
aaa
in
mov
xchg
adc
xlat
push
pop
push
xor
xor
and
lods
ds
jne
jno
insl
movsl
mov
in
dec
dec
mov
jno
movsl
aaa
fcoml
mov
dec
sub
lds
mov
dec
lcall
add
movsl
dec
in
add
xchg
mov
lds
mov
jno
mov
call
jno
insb
mov
lret
popf
xchg
fisttpl
jb
sbb
js
mov
cmpb
push
push
mov
add
int3
inc
push
and
mov
adcl
and
bound
es
fsubrs
pop
and
and
orb
lret
lods
sti
fucomip
fdivl
adc
inc
mov
mov
cltd
popa
xchg
test
cmp
jo
push
jle
xchg
cwtl
out
loopne
popf
cmp
cli
repnz
je
lcall
arpl
bound
cmp
xchg
or
pop
adc
notb
pop
fbstp
cmp
mov
jne
divb
fs
jo
add
pop
dec
add
aad
mov
not
add
xchg
dec
mov
mov
xchg
cmp
jnp
in
les
xchg
cltd
or
adc
sti
pop
push
cmp
pop
aam
jp
jo
push
adc
cs
scas
pop
stc
pushf
aad
divl
sti
dec
aam
jg
jne
mov
inc
imul
aaa
mov
mov
pop
clc
fiadds
jbe
adc
popf
mov
cmp
mov
sti
jmp
in
adc
out
std
or
dec
push
stos
or
scas
out
jp
inc
inc
imul
cs
je
xchg
xor
insb
mov
inc
sbb
mov
mov
cmp
insb
cmp
adc
cmp
and
push
dec
xor
cmc
cwtl
fwait
cmp
shrl
inc
sub
inc
dec
mov
jge
mov
pop
cmpsl
nop
lods
fs
outsl
aaa
jecxz
push
push
hlt
sbb
inc
out
data16
test
scas
inc
bound
test
inc
sub
inc
dec
fiadds
cltd
dec
insl
ror
adc
pop
test
mov
loopne
push
jg
les
dec
pop
cs
arpl
ljmp
or
add
sub
std
sub
pop
push
daa
aas
sbb
hlt
xchg
xor
loop
xchg
sbb
mov
jmp
aam
inc
sub
ret
cmp
xchg
cmc
mov
fincstp
int3
insb
push
icebp
mov
xor
jno
addr16
mov
fbld
stos
cmc
fnsave
xor
mov
add
rcll
dec
xchg
das
cld
mov
mov
fwait
sub
or
xchg
enter
cmp
pusha
xor
into
popf
sub
imul
sahf
add
sbb
cmpsl
outsl
test
loop
js
int3
mov
fstps
rcrl
xchg
shll
inc
in
cmp
sub
inc
insl
ficoms
push
lds
mov
test
popf
mov
cltd
mov
push
sbb
sbb
jb
sbb
imul
mov
sbb
int3
jg
sub
movsb
mov
movsl
shlb
cmp
scas
mov
les
nop
pop
outsb
out
ret
hlt
adc
inc
insl
cmp
jecxz
mov
xor
mov
pop
loop
cmp
mov
enter
insl
sub
fdivrl
adc
inc
repz
aas
pusha
fs
scas
mov
xchg
movsb
mov
mov
cld
xor
xor
dec
shl
jmp
shlb
pop
cli
mov
rcrb
inc
lods
movsb
adc
xchg
pop
push
jle
sbb
dec
or
fwait
cmp
cltd
jp
lods
les
mov
fldcw
inc
push
lret
in
xchg
push
call
or
lret
sub
pushf
insb
xchg
add
sub
adc
cld
mov
repnz
jmp
fsubs
in
add
or
adc
jg
std
movsl
mov
dec
mov
xor
test
mov
loop
inc
dec
cmp
xchg
pop
loope
xor
sbb
cmpsl
adc
sti
je
inc
pop
in
jp
je
sbb
xor
push
pop
repz
fidivrs
idivb
and
shlb
mov
fs
xchg
pop
iret
dec
cmp
xor
or
out
or
add
lds
int3
add
cmc
lcall
pop
push
js
jmp
mov
xor
shll
test
push
xchg
lock
flds
insl
rclb
push
xchg
push
test
nop
in
test
fcompl
dec
rcr
fxam
lods
jecxz
adc
add
and
xchg
inc
ss
xchg
pop
leave
jb
mov
outsb
or
jmp
lods
push
outsb
dec
pop
mov
aaa
fidivrl
aaa
ds
daa
shll
adc
icebp
cmpsb
or
movl
pop
cmp
sbb
lcall
rolb
or
xchg
aas
enter
imul
movsl
mov
lcall
test
pop
inc
add
mov
push
push
sar
lcall
dec
loope
stos
add
add
jle
mov
sbb
daa
in
inc
or
in
popa
fstpt
mov
fisubl
scas
push
mov
or
mov
mov
or
lahf
lea
rcrl
rolb
inc
mov
pusha
and
xlat
bnd
out
xchg
mov
movsb
movsl
test
bound
outsb
rcl
lahf
mov
add
mov
out
xchg
fwait
sbb
jecxz
jo
and
jo
xor
std
js
push
dec
cmp
mov
cmp
mov
sub
sub
movsl
mov
and
pop
push
adc
mov
movb
jmp
ljmp
pop
jle
bound
int
lock
clc
data16
xlat
and
and
ficoms
inc
adcb
cmp
shlb
movsl
xchg
sbb
jge
dec
mov
cwtl
lcall
repz
test
ss
push
lahf
stc
pop
mov
jecxz
mov
mov
pop
outsb
imulb
incl
push
lods
cmp
inc
and
and
movl
lcall
test
dec
rcll
sub
popa
enter
addl
mov
data16
xchg
push
inc
ljmp
shll
xchg
inc
lds
push
mov
inc
into
hlt
add
imul
xor
sbb
cmp
or
in
pop
xor
mov
pop
xchg
jge
xor
jne
inc
sbb
dec
shll
scas
int3
les
mov
loopne
mov
mov
adc
mov
sbb
add
cli
mov
pop
adc
mov
jb
sbbl
sbb
mov
and
add
jnp
or
add
jnp
ds
ja
sbb
popa
jge
jae
add
fwait
sbb
jne
lock
fnstsw
xor
jb
push
es
xchg
in
cld
out
lret
or
stos
or
je
std
lds
sbb
lea
icebp
and
icebp
outsb
rorb
das
sbb
inc
lcall
dec
jg
sub
fsub
jge
iret
ljmp
inc
into
inc
ret
jle
pop
insl
sub
or
in
jnp
xor
xchg
push
nop
push
repnz
mov
lods
mov
cld
inc
dec
mull
push
sbb
fldenv
je
leave
pop
popf
cmp
sub
mov
xor
lods
or
pop
xchg
mov
cmp
cld
push
mov
push
insl
orb
out
fldenv
int
pop
cld
adcb
loope
arpl
loope
push
mov
rcpps
leave
mov
xchg
int3
lcall
inc
test
or
dec
mov
adc
js
and
push
sub
dec
in
je
loop
pop
push
add
popl
jns
js
dec
pop
jbe
sahf
jecxz
mov
and
dec
add
das
insl
jae
test
pushf
int3
pop
push
cmp
sti
addr16
mov
mov
adc
or
movsl
jne
arpl
or
mov
add
out
add
cmp
sbb
test
push
or
jl
mov
mov
adc
lock
push
xlat
pop
shlb
sub
shlb
inc
mov
adc
lods
stc
push
out
scas
push
iret
lods
ret
std
mov
fdivr
test
imull
enter
icebp
out
int3
fcmovb
sbb
lahf
movsl
add
pop
and
nop
push
arpl
add
stos
mov
lods
inc
xchg
push
imul
pop
mov
mov
sub
push
in
dec
leave
in
and
int3
cmc
clc
movsl
sbb
sub
pop
jb
mov
out
dec
adc
jle
sbb
mov
inc
jae
xchg
inc
int3
xchg
jl
and
adc
xchg
dec
stos
jmp
cwtl
notl
jle
pop
aam
std
and
nop
push
insl
jp
enter
sub
sbb
inc
jno
aas
notl
lret
aaa
sub
mov
lret
add
dec
lods
cli
inc
sbb
sub
js
fistpll
ss
inc
sar
push
leave
sub
cmp
sti
aaa
push
cmp
or
or
push
in
dec
or
rcl
pop
sub
ss
or
or
divb
stos
iret
testb
sub
pushf
sub
and
popa
push
xchg
negb
movsb
in
lea
xchg
rcll
mov
and
jmp
lahf
sub
sbb
inc
pop
adc
cmpsl
clc
dec
cmpsb
jmpw
fs
ret
jo
jo
mov
pop
push
outsl
add
xchg
sbb
pop
dec
or
lret
mov
mov
mov
sub
addr16
jecxz
jbe
lcall
xchg
sbb
jg
cmpsb
inc
push
xchg
mov
add
push
ljmp
lea
cmc
mov
mov
pop
adc
test
fdivl
lea
cmpsl
iret
or
jb
mov
jae
imul
hlt
mov
xchg
mov
arpl
inc
mov
test
and
cmp
orb
inc
jl
insl
xchg
in
call
mov
ret
xlat
sarl
push
addl
lcall
aam
pop
mov
hlt
or
xchg
sub
mov
clc
cmp
sub
inc
adc
daa
loope
loop
pop
mov
dec
dec
jmp
fs
pop
shll
fisubrs
outsl
ret
data16
aad
call
jmp
stos
enter
push
push
add
mov
add
or
stos
fdivrs
out
fildl
stc
pop
cmp
mov
mov
aaa
xchg
mov
and
add
xor
xlat
hlt
push
jnp
pop
into
sub
jle
iret
lcall
jmp
mov
loop
es
popa
lret
xchg
shrl
mov
sub
and
push
xchg
add
jle
mov
clc
lock
je
dec
and
hlt
and
add
popf
divl
dec
inc
pop
xor
addl
or
fisubrs
jle
arpl
pop
lcall
fnstenv
or
stos
lcall
xlat
mov
cmpsl
add
test
cwtl
enter
daa
jo
ja
lret
scas
sbb
sub
or
stos
filds
imul
sbb
pop
mov
call
mov
stos
sbb
out
jb
or
pop
jno
inc
dec
or
jg
aam
ret
loop
sti
movsb
in
orb
fiadds
dec
and
addr16
push
mov
test
cmp
pop
test
or
es
inc
dec
movsb
fistpll
mov
cmpsb
push
mov
ret
shrb
mov
inc
mov
jne
jecxz
mov
in
movsb
in
sahf
cmp
mov
popa
sarl
repnz
idivl
les
sti
das
cmp
xchg
lock
mov
movsb
sahf
sbb
xchg
inc
cmp
mov
mov
mov
cmpsl
pop
dec
es
sbb
popf
leave
in
aad
mov
jp
sbb
sub
ficoml
mov
push
punpckhbw
jae
jae
lret
cwtl
dec
sti
sub
add
xchg
int
pusha
lret
push
popa
xorb
add
fs
in
mov
hlt
std
rcl
inc
rclb
push
xchg
sub
dec
lret
lods
and
test
cmp
inc
jecxz
popa
dec
fidivrl
test
icebp
and
mov
push
arpl
or
pop
mov
jecxz
jns
aad
sti
fadds
ret
stos
and
mov
scas
sub
and
shr
mov
scas
and
fisubrl
xor
outsb
adc
je
daa
mov
xchg
jb
aad
mov
test
mov
daa
std
push
dec
dec
int
push
loope
sbb
mov
outsl
test
pusha
fisubl
and
mov
iret
stos
repnz
stos
mov
mov
pusha
adc
sbb
faddl
cs
adc
frstor
mov
hlt
sbb
sbb
xor
push
movsb
fdivl
jb
ss
rolb
stos
add
cltd
fnstenv
jmp
roll
cld
mov
pop
xchg
mov
add
enter
xchg
jmp
mov
xor
or
outsl
push
adc
push
xor
stos
cld
addb
rol
sbb
fbld
pop
push
and
sbb
das
clc
cs
and
ss
fildl
sbb
scas
xchg
jne
addr16
sbb
insl
mov
cmp
cwtl
mov
out
sub
shrb
or
icebp
dec
mov
or
ficompl
push
inc
fisttpl
jge
mov
insl
movsb
out
push
movl
cmp
popa
sti
mov
adc
fisubrs
je
clc
adc
nop
mov
nop
cli
cs
jbe
outsl
adc
repnz
mov
xchg
mov
jl
mov
out
push
mov
pop
sahf
loopne
or
xchg
add
pop
mov
enter
cmp
adc
xor
mov
mov
stc
and
stc
nop
pop
cmp
xchg
xor
rcrl
add
popf
test
xchg
mov
push
mov
cmp
pop
fldlg2
cltd
mov
in
adc
pop
decl
mov
mov
or
imul
pop
inc
mov
dec
mov
sbb
roll
dec
lock
xor
testl
and
inc
insl
mov
sbb
jecxz
mov
int
pushf
mov
push
hlt
jno
or
mov
xor
dec
jae
or
sbb
movsb
je
or
aam
xor
pop
outsb
int3
jno
sahf
inc
mov
call
jno
jns
xchg
hlt
pop
testl
and
je
movsl
jge
and
stos
pop
call
mov
subb
dec
imul
jae
sahf
dec
mov
push
pop
add
imul
adc
and
cmp
dec
and
mov
notb
add
in
fadd
pop
xor
pop
adc
cmp
mov
xor
jb
cwtl
add
push
push
jbe
fwait
rcrl
mov
xor
sbb
mov
adc
popa
std
dec
add
imul
std
mov
cltd
inc
aas
cli
adc
or
cli
sar
out
repnz
xchg
dec
jle
and
sub
gs
mov
stos
das
insl
xchg
das
les
push
mov
mov
xchg
daa
push
push
cmc
xorb
mov
pop
out
pop
add
lea
mov
or
loope
push
mov
icebp
cmp
pop
sbb
jl
scas
test
push
into
mov
ljmp
sub
loop
push
repnz
mov
fidivrl
jmpw
cmp
lock
sysret
mov
out
pusha
sub
outsl
push
and
xchg
push
shlb
fildl
aam
cmpsl
push
sbb
adc
pop
dec
in
inc
sub
inc
addr16
xor
jo
repnz
push
push
aad
aaa
sbbl
std
or
push
fwait
lret
fistl
jo
xchg
jno
add
into
and
gs
xchg
loopne
fxch
pop
xchg
xor
nop
hlt
cld
insl
fisubs
popa
push
faddp
pop
mov
mov
pop
sub
adc
fistps
sub
xchg
mov
jnp
out
sahf
cmp
or
dec
addr16
fsubr
push
mov
mov
pop
adc
mov
mov
xchg
sub
das
cmpsl
nop
jo
push
out
push
mov
aad
inc
add
push
push
mov
xchg
sub
xchg
fisttps
insb
imul
mov
xor
mov
inc
jae
cmp
add
cmpsl
jmp
es
mov
jo
js
inc
leave
mov
push
pop
adc
push
cld
adc
popl
push
sub
xchg
aad
push
addr16
cmp
cld
nop
aad
mov
mov
xor
push
cmc
fstpt
push
cmpsb
adc
leave
jno
out
cmp
jno
scas
out
mov
add
xchg
sub
lret
mov
xchg
xor
lds
cmpsl
ret
add
popl
std
jge
add
sahf
xor
add
jmp
mov
mov
std
sub
pop
add
mov
cmp
movsl
inc
ja
loope
add
iret
lret
push
push
adcb
rcrb
mov
lods
adc
add
lods
daa
jns
mov
scas
mulb
push
pushf
inc
stc
loopne
xor
or
and
mov
pushf
fsubrs
loope
movsb
or
jp
inc
xor
mov
outsb
out
cld
jo
addb
pusha
mov
inc
orb
add
inc
lret
inc
iret
ss
lret
mov
lods
push
psllq
es
test
mov
jno
arpl
pop
jmp
push
mov
push
xbegin
ljmp
enter
mov
out
inc
and
lret
or
xlat
sarl
enter
adc
js
adc
xchg
aam
xor
sub
jbe
lds
lcallw
sbb
ds
xor
mov
push
pusha
inc
adcb
or
fucomp
scas
lret
test
or
ret
lcall
xor
in
mull
dec
and
pusha
adc
dec
das
in
mov
push
and
sub
and
test
std
stc
mov
xchg
adc
ja
pop
fnstsw
xchg
push
add
pop
mov
adc
pop
popf
jae
in
nop
out
jns
sub
push
mov
jecxz
enter
rcrb
jle
inc
mov
jbe
call
aas
into
mov
dec
add
sbb
sbb
inc
movl
jecxz
jbe
pop
mov
cmp
push
adc
xchg
shlb
pushf
pop
mov
into
js
cmpb
or
sbbb
push
flds
test
int3
jg
push
xchg
cmp
loopne
imul
pop
int
pop
add
clc
outsb
dec
jmp
push
xchg
dec
mov
popf
xor
adc
ret
inc
repnz
xchg
out
pusha
rcll
jg
xchg
sbb
mov
inc
in
mov
iret
fcomps
cli
dec
cltd
pop
icebp
jo
push
jne
push
cld
push
mov
and
fsubl
lret
pop
mov
ds
aaa
pop
pop
push
sub
jae
push
cwtl
das
out
pusha
dec
xchg
bound
xor
xchg
neg
imul
nop
faddl
les
add
call
sbb
hlt
add
in
lods
popf
js
fbld
lds
mov
stc
dec
cmp
xchg
shr
pop
xlat
fldt
int
mov
push
push
xor
aam
pop
das
loopne
fmul
pop
sahf
out
pop
dec
pop
pop
mov
sbbl
pop
or
dec
scas
jecxz
add
xor
dec
loope
mov
loop
in
jmp
inc
mov
int
jo
sarb
lock
rcr
pop
mov
xor
sahf
sti
das
adc
jecxz
lret
dec
jge
out
stos
add
rclb
mov
sbb
and
addr16
test
cmpsb
subl
aaa
cmp
cmp
testl
and
add
scas
inc
test
mov
mov
push
jo
push
jbe
jle
mov
dec
test
pop
ja
mov
into
ret
push
les
pop
cmp
adc
iret
js
mov
push
mov
mov
inc
xor
push
in
lahf
das
or
cwtl
movsl
incl
xchg
sub
dec
imul
pop
dec
cli
cmc
icebp
dec
movsb
clc
ret
mov
adc
mov
sbbb
fisttpll
cmp
pop
mov
jae
adc
popf
jmp
mov
mov
cmp
lahf
out
sub
sbb
jg
and
push
or
aam
lahf
scas
mov
and
cli
xchg
xorb
ja
into
inc
mov
jno
lret
mov
lahf
or
notl
or
fdivrs
push
pop
flds
mov
add
out
lret
mov
or
mov
call
jmp
outsl
jnp
sbb
pusha
mov
fmull
out
and
adcl
xchg
cmpsb
pop
mulb
orl
in
ret
fldl
ret
xor
jbe
inc
inc
movl
inc
push
loop
or
icebp
dec
sbb
std
fwait
push
and
les
pop
pushf
jnp
cmpsl
push
aad
in
mov
test
push
in
mov
shrl
testl
jbe
jns
jmp
cwtl
jmp
in
cltd
test
and
and
add
fistpll
mov
pop
lods
out
lea
fcmovnu
in
je
mov
repnz
jo
mov
jns
sub
pop
lret
insl
or
shrl
and
sti
fsub
or
mov
push
fldcw
lahf
clc
dec
push
push
cmpl
das
lahf
pop
leave
in
and
inc
mov
call
adc
notl
sub
outsb
shll
cmc
lahf
sbb
clc
sbb
or
bound
repz
hlt
shr
int3
lahf
push
push
js
add
xorl
pop
or
jns
push
or
fcompl
stos
push
lods
jl
jae
and
out
lea
ja
push
adc
add
push
jge
sub
imul
lcall
shlb
movsb
jns
shlb
sub
push
inc
dec
repnz
pop
mov
adc
pop
std
gs
sub
cs
mov
pop
add
cltd
or
mov
inc
ret
xchg
fprem1
or
xor
mov
dec
test
dec
ja
mov
cs
adc
popf
shrl
scas
cs
pop
enter
fwait
movsl
jmp
push
mov
das
push
ja
mov
inc
sbb
cld
cmp
stc
pop
xchg
sbbl
insl
cmc
dec
dec
lock
sbb
mov
jg
or
push
inc
cmp
out
adcl
shlb
mov
stos
pop
push
je
sbb
cmp
mov
or
ljmp
adcl
cmp
addr16
push
sub
addr16
inc
pop
dec
mov
adc
icebp
add
sub
out
add
loop
fbld
fs
dec
mov
jnp
clc
popf
aad
ficoms
xchg
cmp
aaa
sbb
hlt
pop
int
repnz
jbe
pop
pusha
mov
jno
inc
push
pop
pop
mov
adcl
push
xor
dec
mov
scas
pop
jg
add
test
add
sbb
shll
ljmp
sub
icebp
leave
shlb
iret
jge
inc
push
or
xchg
mov
sbb
cs
rorl
lret
xchg
mov
mov
lea
lock
mov
stos
add
leave
std
push
jmp
adc
inc
inc
jae
jge
mov
inc
and
cmp
pop
xor
fdivp
pop
inc
xchg
pop
dec
mov
into
sbb
cmc
leave
out
sub
lret
shrl
call
xchg
dec
fimull
jb
cmp
arpl
or
ss
das
aas
insl
leave
pop
jb
cmc
and
fldt
loopne
arpl
aaa
xchg
jge
or
aas
adc
sbb
mov
nop
js
enter
bound
repz
pushf
movsb
mov
dec
sti
adcl
out
mov
ds
dec
push
mov
in
cmc
add
xchg
pushf
cmp
adc
xchg
adc
cmpsb
out
imul
mov
lret
dec
int3
ficompl
loope
aad
adc
js,pt
jecxz
dec
je
inc
sbbl
inc
arpl
or
mov
and
mov
pop
jbe
jl
std
ret
mov
push
jge
test
add
dec
shr
jo
setg
mov
cmp
xchg
xchg
sahf
mov
pop
daa
or
pushf
push
stos
les
nop
out
mov
fdivl
pop
inc
sbb
cli
fnstsw
test
mov
xor
lcall
mov
fiaddl
jne
and
sbb
mov
add
pop
shlb
pop
insb
push
xlat
push
inc
ret
scas
sbb
enter
sahf
cmp
in
jne
sbb
mov
mov
sbb
xchg
or
adc
addr16
and
movsb
shr
fistl
jg
lret
xorl
adc
mov
data16
sub
jo
scas
xchg
mov
push
dec
jmp
js
or
imul
sbbl
lock
mov
pop
cmp
test
cmp
repz
repz
lock
mov
mov
enter
pop
fiaddl
dec
subb
out
rcrl
fisttps
cmp
out
mov
and
pop
in
scas
jecxz
insb
imul
dec
fs
pushf
xchg
andb
fwait
out
push
xchg
fldcw
mov
outsl
ror
xchg
nop
push
daa
daa
push
shr
shlb
or
shll
outsb
inc
and
mov
aas
roll
roll
das
inc
rorb
inc
in
fstps
push
mov
mov
pop
dec
xchg
push
out
bswap
push
push
sub
xchg
jae
test
pop
popa
mov
ljmp
push
ss
add
jae
xor
jbe
inc
or
sub
sub
lret
pop
mov
and
incb
adc
js
push
xor
int3
push
xchg
mov
pop
jb
xchg
rolb
es
pop
pop
lahf
xorl
daa
mov
int3
and
dec
repz
adc
hlt
mov
ljmp
cmc
dec
int3
sbbb
and
mov
ss
int3
push
fstp
scas
mov
add
and
pushf
dec
in
sub
loopne
adc
rorb
xchg
sub
cld
loop
and
out
xor
inc
or
pop
stos
sbb
add
xor
int3
enter
adc
imul
inc
mov
fwait
mov
mov
mov
lret
pop
xchg
sarl
sbb
leave
add
cli
lods
jo
mov
lods
jb
call
cmp
aam
and
daa
cmp
mov
adc
xor
fisubs
call
adc
fldt
jbe
andb
ljmp
or
or
andl
dec
jne
leave
test
jle
fstpt
sahf
push
or
outsb
inc
jbe
dec
adc
mov
jmp
or
loope
ja
push
movsl
sbb
push
fimull
sub
xchg
negb
pop
xchg
xchg
lds
cmp
dec
push
xor
popf
ret
pushf
xor
xchg
fld1
or
int
pop
rclb
shrb
stos
lods
rolb
and
inc
adc
push
sub
ljmp
and
into
icebp
add
or
jno
fucomp
ja
lret
sub
sti
icebp
adc
and
and
and
divl
cmpsl
int3
sbb
loop
and
inc
dec
xchg
rolb
aas
jmp
in
mov
pop
jbe
repz
xchg
inc
sarb
xchg
mov
jle
test
gs
or
arpl
mov
dec
aad
leave
fsubl
mov
sub
add
in
fcmovne
mov
and
xchg
or
insb
inc
jmp
push
mov
popf
in
and
stc
sbb
mov
in
int3
js
popf
outsl
xchg
cmp
orl
sub
or
mov
imul
jbe
mov
add
nop
lods
hlt
adc
outsb
jle
pop
inc
enter
jae
nop
mulb
leave
cmova
arpl
mov
out
jno
jle
lea
mov
ret
pop
sti
sbb
les
into
addl
in
xor
out
clc
sub
xchg
enter
lods
xor
or
xorb
mov
cmp
xchg
ja
and
es
dec
dec
jb
adc
pushf
dec
push
xchg
dec
gs
dec
nop
fwait
xchg
xchg
in
clc
pop
int
insb
mov
cld
sub
inc
and
adc
xor
dec
dec
outsl
sbb
shl
out
out
push
loop
mov
adc
repz
scas
cld
push
dec
dec
leave
mov
inc
pop
add
jno
incl
or
outsb
xchg
dec
dec
mov
dec
sbb
dec
sbbb
jo
in
inc
mov
cmp
push
or
cmp
scas
inc
xor
mov
gs
sbb
sbb
cmpl
pop
shlb
inc
inc
jle
xchg
jecxz
jbe
xor
mov
ss
pop
sbb
mov
jmp
fcmovnbe
pop
js
sbb
and
stc
insl
sub
mov
dec
pop
mov
pusha
in
or
call
shl
mov
pop
cmp
sub
mov
mov
cmp
mov
xchg
jb
adc
cmp
dec
icebp
nop
cmp
push
bound
bound
out
mov
and
inc
sbb
xor
jmp
hlt
push
fsubrl
dec
stc
pop
in
dec
fnstcw
xchg
sbb
pop
rol
out
mov
shl
inc
stos
lea
sbb
adc
nop
mov
cmp
sub
and
mov
cmp
push
mov
mov
stos
xchg
or
mov
sahf
ret
test
cmp
xor
incl
jbe
dec
shlb
and
fwait
mov
xor
jge
leave
inc
ds
or
ret
es
jl
inc
add
xchg
call
add
or
std
popf
sbb
loope
std
sbb
and
into
fstl
sub
faddl
cmp
pusha
int
sbb
test
pop
xor
enter
in
inc
push
in
jno
or
dec
testb
shrl
ss
pop
jo
mov
insb
lds
and
ficomps
shl
cmp
in
push
cli
cld
repz
xchg
cltd
loopne
push
mov
mov
sub
xor
or
fs
and
dec
mov
xchg
push
scas
ds
out
pop
std
mov
sub
fwait
xchg
add
arpl
jle
cmp
or
push
jb
xor
inc
xchg
in
mov
es
insl
mov
sti
les
sbb
inc
cmc
dec
ljmp
adc
mov
movb
test
sub
push
nop
pop
mov
mov
add
mov
les
test
jno
inc
sbb
cltd
loopne
inc
xchg
dec
pop
xchg
pop
jno
inc
sbb
je
push
cmp
ficoml
inc
push
mov
lods
mov
scas
mov
mov
adc
jae
cli
inc
fcmovbe
shrl
test
jo
loop
xchg
repz
adc
jns
loopne
cmp
mov
adc
or
inc
xlat
xlat
loope
xchg
pop
sti
loop
lds
xchg
pop
test
lret
cmpsl
loop
fsubs
inc
lods
lret
mov
in
and
cmp
clc
push
lahf
xor
lahf
jp
sbb
aam
lahf
in
sub
arpl
and
mov
xor
stos
or
cld
out
insb
pop
bound
dec
push
sbb
out
int
mov
outsl
popf
xor
or
and
xchg
mov
or
clc
rcrb
stos
incb
adc
inc
bound
ret
orb
inc
shrb
dec
gs
insl
ret
jae
out
ds
jecxz
inc
cmc
or
in
in
jnp
movl
add
fnstenv
leave
jp,pt
decb
into
add
loopne
sbb
je
xchg
loopne
mov
leave
mov
xchg
mov
push
enter
inc
add
push
cmpsl
push
rcrl
mov
and
lock
shl
sti
cwtl
add
mov
cli
out
cwtl
sub
stos
push
jns
add
ret
sub
dec
and
jbe
push
xor
cmp
jns
fsts
stc
sahf
or
mov
aad
push
add
leave
pop
push
lret
cli
test
mov
popa
pop
xchg
nop
mov
cmpl
pusha
es
xchg
fidivl
rcrb
jle
inc
jl
cs
pop
ret
data16
lock
mov
jno
dec
pop
xchg
sbb
arpl
sahf
pop
leave
fldl
mov
and
jecxz
daa
jno
adc
jae
loope
xchg
lock
push
test
xchg
pop
sbb
mov
dec
and
mov
dec
pop
cmc
xlat
mov
or
mov
pop
shlb
aam
ret
mov
mov
cmp
sub
imulb
test
dec
pop
dec
sbb
and
sbb
sbb
repnz
fwait
into
sbb
and
jmp
inc
xor
sub
sub
into
cld
mov
jecxz
out
mov
adc
mov
lcall
push
inc
lret
mov
decl
dec
adc
movsl
xchg
jbe
data16
jecxz
adc
popa
xchg
fmuls
and
jbe
push
or
adc
dec
mov
lret
ds
sahf
push
xchg
or
sub
mov
scas
xchg
fidivrs
jno
sbb
faddl
ljmp
mov
jl
out
xchg
mov
pop
mov
leave
mov
loop
ljmp
data16
ret
std
addl
inc
mov
mov
movsl
lahf
fcmovne
xchg
inc
lds
add
pop
sahf
fdivrs
mov
test
inc
std
jge
pop
jno
mov
jl
mov
mov
dec
shlb
mov
sbb
out
inc
into
stos
adc
movl
mov
jge
nop
adc
loopne
cmp
jg
aad
das
and
subl
jg
faddl
into
dec
xor
call
cwtl
mov
push
pop
shl
mov
jge
add
hlt
mov
sub
mov
push
sbb
xchg
cmc
das
test
iret
push
popf
sbb
jb
jnp
ss
xchg
or
xor
dec
mov
xor
add
jl
movl
aad
xor
sarl
pop
test
add
push
test
mov
lock
and
mov
sbb
dec
test
jns
xorb
jno
movsl
mov
mov
or
das
xchg
sub
or
cmp
lcall
scas
or
loopne
sub
fwait
call
scas
mov
lods
and
ret
push
in
clc
adc
ret
lock
fiadds
popa
cmp
xor
xchg
mov
arpl
ss
das
test
cltd
jno
xchg
lods
test
pop
mov
in
data16
sbb
jb
fisttpll
inc
mov
jge
push
push
and
jge
test
pop
loope
pop
cmp
xor
cmp
pop
push
add
and
movb
jl
xchg
fistps
int3
std
push
mov
fld
ljmp
mov
lcall
and
add
icebp
movsl
out
and
or
add
in
std
cmpsl
ret
lret
inc
cmp
mov
testl
fld
ljmp
sbb
shrl
or
das
icebp
movsl
out
and
fstps
push
push
loope
or
std
cmpsl
ret
lret
inc
fsin
test
nop
xor
jle
cli
scas
sbb
push
push
mov
fwait
arpl
fsubrl
jg
cmpsl
out
xchg
subl
dec
lret
xor
test
addr16
cmp
aad
imul
test
inc
cmc
into
dec
push
xlat
ror
sub
out
loopne
and
cmpsl
std
cmc
jmp
cmpsl
fisttpll
scas
imul
ret
ret
adc
pop
mov
enter
cli
and
nop
xchg
icebp
leave
shlb
jle
ljmp
pop
addr16
jo
cwtl
pop
ret
mov
sti
daa
in
lea
insl
sbb
jecxz
and
test
in
and
adc
sarb
pushf
add
xchg
shlb
pop
stc
sarl
jo
inc
popf
jmp
popf
sbb
mov
add
push
xchg
adc
push
xor
cmp
ss
mov
bound
push
add
mov
fmull
and
cmp
mov
inc
xchg
mov
shlb
jmp
lds
lea
add
jb
mov
sbb
in
ss
ret
rol
push
xchg
ficoms
cwtl
stos
adc
push
mov
inc
xchg
push
mov
push
cmpsb
xchg
jl
jmp
jmp
mov
adc
cmp
push
mov
sbb
test
mov
adc
xor
mov
dec
sub
pop
das
call
or
loope
pusha
int3
and
mov
mov
jbe
repz
push
mov
sbb
test
lods
mov
mov
pop
in
sub
add
mov
dec
pop
test
lret
daa
cmp
fisubl
fmuls
imul
cmc
pop
into
cwtl
inc
sbb
sub
or
jae
fsub
cmp
xor
movsb
cmp
enter
outsb
push
cs
jge
jne
mov
addb
jns
bound
les
sub
or
lcall
lcall
sub
jnp
add
mov
mov
bnd
jl
and
in
out
jae
cwtl
adc
jns
dec
bound
jl
mov
inc
mov
sub
sbb
mov
jbe
xor
imul
dec
insb
or
jae
jo
xchg
jp
arpl
xor
test
dec
jne
pop
pop
sbb
es
dec
sub
sarb
fldz
andl
mov
add
cmp
int3
pop
pop
aas
out
mov
cld
in
xchg
add
push
imul
jg
das
je
cmp
imul
test
rcrl
filds
dec
fisubrs
mov
jmp
subb
iret
stc
push
jp
jl
sub
adc
test
adc
mov
cmp
mov
or
ret
inc
lret
push
pop
cmpsl
scas
data16
aaa
xor
leave
jbe
adc
mov
and
inc
cltd
pop
lahf
sbb
jge
insb
icebp
fwait
popaw
stos
jecxz
cmp
dec
xchg
or
cmp
add
dec
cltd
call
adc
mov
icebp
add
lret
in
arpl
xchg
push
sbb
add
fists
movb
insb
mov
pop
jmp
jecxz
mov
add
sbb
mov
xor
stos
pop
pop
pop
sbb
repnz
xor
add
icebp
and
cld
push
pop
mov
adc
dec
cmp
clc
mov
dec
xchg
dec
sahf
outsl
dec
and
adc
mov
movsl
imul
fimull
incl
test
mov
sti
xor
sbb
rcr
in
out
lfs
stc
xor
rorl
pushf
mov
add
mov
fildll
mov
mov
adc
pop
xor
fcoml
dec
and
dec
fildll
dec
sub
jle
and
mov
mov
xchg
repz
lcall
int3
addr16
fimuls
je
inc
imul
rcl
jbe
incl
cld
testl
outsl
mov
cltd
test
test
dec
in
ljmp
push
push
decl
dec
dec
dec
test
add
jp
cmp
fidivrs
inc
xor
pop
in
addb
cmp
lods
push
sub
jle
push
out
mov
loop
add
aam
out
insl
mov
and
and
cmp
jnp
add
in
sub
push
ljmp
sub
out
xchg
repnz
mov
sbb
pop
in
lea
add
xchg
dec
inc
and
icebp
repz
sbb
test
mov
jp
mov
std
mov
clc
std
aam
les
mov
hlt
gs
mov
adc
lods
ficoms
jg
jge
push
popa
int
mov
mov
inc
ja
push
or
insb
js
inc
in
jp
ja
nop
js
mov
cmp
popa
jae
inc
test
mov
mov
cwtl
inc
enter
push
jmp
insb
mov
mov
or
sbb
and
inc
data16
xchg
or
or
jg
xor
jnp
pushw
xor
sub
mov
push
pop
loope
dec
xor
or
adc
loop
sbb
cmpsl
cltd
cmc
cwtl
hlt
faddl
bound
jp
xor
xchg
mov
pop
bound
shlb
outsl
movsb
rcrb
xchg
pop
aaa
push
jl
dec
and
jns
mov
mov
jg
cmpl
bound
repnz
cmp
xor
sbb
in
inc
ror
pop
outsb
mov
scas
jne
ret
push
cld
push
jle
aad
imul
inc
ljmp
cmp
push
inc
leave
inc
leave
fcoml
lcall
pop
js
sub
mov
popa
int3
ret
imul
sub
xlat
gs
and
divl
sub
cmpsb
arpl
mov
or
and
inc
cmp
pop
dec
gs
pop
bound
add
push
dec
test
mov
jl
or
mov
leave
jg
xchg
loope
ret
adc
sub
dec
add
jbe
rorl
fldcw
push
mov
jge
cs
xor
test
pop
cmpl
jle
and
or
inc
sbb
test
pop
sub
sar
mov
inc
test
je
pop
and
das
loopne
push
out
cld
repnz
xchg
pop
movsl
and
out
scas
mov
jmp
call
daa
movsb
xor
cmp
aam
jns
xchg
xor
out
mov
inc
dec
rcrb
cmp
es
addr16
ja
mov
xor
xlat
aam
sbb
cwtl
dec
cmp
adc
push
mov
mov
cmpsb
pusha
mov
mov
mov
sbb
aas
adcl
xchg
les
jnp
mov
sbb
scas
inc
sub
adc
cmp
fiadds
sahf
pop
fcoms
roll
mov
addl
xor
cltd
decl
lret
push
test
mov
int
ljmp
mov
jmp
xchg
ljmp
ficompl
repnz
rclb
fldenv
cmpsb
jno
aam
sarl
stc
jl
jno
orl
push
sahf
ljmp
lret
xor
add
repz
jbe
out
or
cmpl
dec
dec
daa
loope
aaa
xor
fcoms
pop
mov
xlat
dec
rcll
ds
stc
sbbb
adc
cs
mov
xchg
jmp
mov
inc
push
mov
inc
lret
mov
cmp
imul
sbb
mov
dec
add
mov
int3
fadd
mov
fsubrl
fidivl
testb
loop
push
or
sub
cmpsl
inc
add
ret
pop
lahf
fidivrl
jecxz
xor
je
xchg
add
test
in
mov
jnp
dec
lock
sbb
ret
ret
es
ljmp
sbb
xchg
dec
jmp
mov
inc
les
dec
and
cmp
insl
outsl
inc
xchg
gs
in
repz
and
ljmp
sub
shll
add
mov
jecxz
hlt
add
adc
jp
jae
dec
jp
inc
and
sbb
clc
push
iret
jle
in
pop
divb
int3
push
out
push
aaa
dec
loopne
lock
sbbb
lahf
lds
incb
ficoml
fcompl
or
xchg
fsubr
push
or
pop
pop
lea
mov
cltd
jecxz
ficoms
dec
aam
mov
push
sbb
ret
push
mov
cwtl
and
push
pushf
xor
sbb
pop
arpl
stc
in
mov
imul
cwtl
int
cmpsb
and
test
mov
fsts
cmp
aaa
rclb
dec
fwait
xor
cmpsb
inc
xor
xchg
call
aad
jp
mull
jp
xchg
jae
imul
dec
cli
popf
scas
mov
jno
rcrb
jle
inc
cmp
push
and
leave
xchg
test
in
inc
fldt
mov
jp
cmp
div
push
add
shlb
adcb
nop
mov
je
in
inc
inc
leave
jbe
add
mov
add
push
xchg
insb
arpl
outsl
adc
ds
jecxz
jo
sbb
sub
xor
stc
jg
pop
push
dec
jle
add
fwait
test
ret
and
sbb
cs
fstps
pusha
in
cmp
int3
mov
sti
xor
insl
mov
int3
push
cmp
dec
lea
jae
es
cmp
aad
fistpl
gs
or
imul
cwtl
int
mov
inc
lret
sub
rcrb
inc
jb
mov
fildl
rcll
sbb
xor
jp
bound
fstl
or
pop
fs
cmp
fistl
add
ret
sub
sti
pop
or
imul
test
push
add
inc
bound
mov
movsb
in
push
add
dec
sub
into
or
stos
iret
scas
test
xor
int3
mov
push
or
pop
or
dec
daa
push
fidivrs
cwtl
jb
xor
lods
sub
add
lock
mov
push
push
jmp
adc
out
xor
jge
cmp
cmpsb
in
sub
jmp
xchg
jle
push
or
push
jnp
shl
repz
mov
mov
or
pusha
xchg
int3
xor
pop
push
leave
lods
das
mulb
adc
negl
dec
mov
add
and
test
mov
xorl
fiaddl
dec
test
mov
ss
lock
outsl
fwait
jbe
cli
cmpsb
and
aam
mov
ds
clc
fs
adc
mov
test
repnz
cmpsb
outsl
xlat
inc
in
and
aaa
sub
fistpll
xor
and
sbb
mov
and
jns
and
cmp
das
or
mov
shrb
xchg
jp
pop
lahf
pmulhw
dec
sti
data16
pop
ss
jle
fsubrs
out
cwtl
daa
cli
adc
jnp
rclb
shld
stc
adc
inc
mov
sub
jbe
lea
inc
cwtl
popf
stos
movsl
shll
jmp
hlt
stos
out
out
and
sbb
std
lret
adc
pop
outsl
shll
sbb
pop
imul
mov
out
push
inc
scas
jle
dec
fwait
ret
mov
xlat
ficompl
sub
jmp
jae
sbb
dec
testb
dec
jmp
adc
jno
and
jae
pop
and
cmpsl
add
daa
cld
mov
fbld
dec
stc
mov
pop
int
push
pop
fidivs
idivb
inc
or
pop
cmpb
test
xchg
ja
xchg
sbb
test
clc
mov
fxch
stc
mov
addb
mov
aas
sbb
sbb
insl
adc
cmp
and
scas
cwtl
cmp
mov
sbb
ljmp
jecxz
cmp
or
jle
incb
mov
shl
xor
pusha
cltd
xor
cmp
jecxz
push
stos
inc
mov
mov
mov
adc
push
add
lock
fs
jg
and
movsl
jmp
scas
push
xchg
das
jno
push
jns
and
scas
pop
addr16
mov
pop
cmpsl
repz
rcrl
dec
leave
repnz
xchg
cmp
mov
pop
iret
mov
sub
test
add
mov
repnz
add
cmp
pop
decb
mov
in
mov
loope
mov
pop
lds
lock
pop
or
aas
add
int
hlt
pop
xchg
lea
cli
mov
pop
inc
jne
cmpsb
test
nop
in
push
push
in
cmp
repz
lea
sbb
out
mov
fstpl
mov
mov
push
pop
push
adc
mov
mov
xor
or
call
movsb
fisubs
sbb
lret
loop
fstpt
xor
cmpsl
fs
sub
dec
mov
adc
mov
mov
adc
dec
or
ss
cmpsl
push
pop
mov
in
pop
pusha
test
scas
test
pop
arpl
jo
lahf
push
inc
sbb
loope
test
dec
mov
pop
mov
xlat
jl
pop
mov
cwtl
xor
int
xchg
jno
push
push
sub
in
lahf
dec
mov
lcall
pusha
sub
enter
test
dec
lret
add
inc
call
xorl
out
xor
test
in
push
rcrl
xor
and
jnp
xor
lods
jne
pushf
pop
mov
jne
adc
xchg
adc
mov
pop
dec
lds
les
sbb
mov
or
scas
dec
and
fistl
cli
in
pop
sahf
rcrl
int
sbb
adc
push
fnstsw
cmp
out
orl
sub
notl
ds
fsubs
pop
cmp
pop
mov
loopne
fs
lods
mov
movl
cmp
loopne
pop
nop
mov
or
pop
mov
aam
add
das
and
mov
divb
fxch
pop
bound
addr16
pop
jmp
dec
sub
or
dec
dec
pop
imul
jl
in
push
in
cltd
outsb
adc
xchg
fiaddl
out
jns
dec
mul
jmp
loop
xchg
int
lock
sub
add
pop
pop
push
decl
sub
aad
sub
icebp
int
cmp
out
push
inc
ljmp
lods
xor
jl
mov
mov
xchg
popa
scas
out
mov
jbe
divl
inc
arpl
and
push
mov
xchg
xchg
sbb
xchg
sti
jnp
cli
cmpsl
push
lods
out
call
outsl
jbe
fildll
pop
cltd
mov
mov
or
add
int3
jnp,pn
xlat
fwait
adc
adc
push
testb
mov
scas
inc
jae
cmp
cmpsb
inc
push
repz
xor
lret
fisttps
xchg
fiaddl
aad
scas
inc
lods
sbb
stos
jae
jp
fstpt
push
lret
outsl
add
xchg
or
loop
push
pop
in
fimuls
mov
adcb
pop
lret
test
pop
les
les
pop
cltd
jnp
jae
xchg
lahf
out
test
mov
les
xor
jl
js
xor
mov
add
mov
xchg
sbb
lcall
push
dec
adc
or
xchg
sub
cmp
addr16
xor
mov
je
cs
inc
dec
push
fiaddl
cmc
push
sbb
mov
ret
rclb
adc
je
push
mov
mov
cmp
das
sarl
mov
int3
and
mov
xor
xor
cmp
pop
xor
nop
xchg
sbb
xchg
mov
movsb
mov
pusha
push
mov
lret
mov
jp
sbb
mov
sub
cmp
dec
insb
jg
mov
sbb
cltd
clc
and
push
rorb
inc
call
xorl
cmpb
and
pop
sub
adc
test
sub
repz
push
mov
sbb
test
lds
mov
out
ja
mov
push
mov
xchg
sbbl
fdivs
sti
and
iret
hlt
mov
js
add
je
sti
inc
xchg
ja
lahf
mov
fsubrs
movsb
cmp
xchg
or
movsl
sbb
dec
pop
cmp
cmpsl
fmuls
pop
mov
dec
sub
pop
and
mov
sti
cmp
xchg
and
sbb
test
insl
aaa
subl
ss
fisubl
stos
je
dec
lock
daa
jg
sbb
mov
cmpsl
fs
cmp
das
loope,pn
jns
xor
add
lods
mov
mov
mov
jp
pop
push
dec
jns
adc
out
jl
mov
xchg
test
push
add
mov
mov
xlat
enter
adc
mov
imul
ljmp
jp
pop
xor
loopne
add
adc
movsl
jmp
xchg
xchg
pop
xor
add
push
in
lea
das
pop
adc
lods
imul
jne
inc
in
xor
in
jmp
lret
push
or
fimull
or
test
push
add
xor
mov
or
ljmp
mov
loop
jo
xchg
lret
xlat
push
lret
mov
and
inc
xchg
gs
std
dec
mov
bound
fldl
mov
jge
data16
imul
arpl
or
bound
sbb
cmpsl
mov
loop
testb
inc
dec
mov
test
pop
pushf
imul
shll
sbb
scas
repnz
mov
pop
inc
dec
stos
daa
repz
xor
or
sbb
rol
leave
jge
add
dec
cwtl
adc
jmp
jnp
xchg
rolb
xchg
ror
xchg
in
lds
adc
push
xlat
in
fsubrs
in
cwtl
pop
add
sbb
xchg
push
pop
cmp
and
adc
in
popa
mov
sti
hlt
pop
jg
sub
dec
mov
js
pop
test
in
push
xchg
movsb
jmp
xchg
loopne
xchg
popf
cltd
pop
sub
movsl
jmp
jnp,pn
roll
dec
mov
gs
push
adc
ficoml
xlat
fnstcw
adc
leave
cltd
mov
jg
cmp
into
pop
mov
popf
and
out
jge
ficomps
dec
lds
jae
push
jg
ret
cmpsl
adc
add
das
lods
push
dec
and
mov
jmp
rorb
or
ss
pop
notl
hlt
adc
mov
mov
xor
mov
in
or
add
out
gs
in
xor
xchg
sbb
jle
es
inc
mov
stos
out
scas
popa
pop
mov
jb
fidivl
inc
add
push
nop
inc
into
cmp
leave
jmp
into
std
hlt
sti
jo
ret
dec
sahf
xor
fstps
loope
sub
call
cld
lcall
or
cmp
fcmovnb
push
jne
orb
push
add
and
in
adc
sarb
mov
and
scas
jmp
mov
adc
repnz
mov
sub
pop
loopne
mov
cmp
jo
jnp
and
or
cmp
mov
repnz
sub
add
stos
dec
fcmovnb
mov
pop
ljmp
sahf
aaa
jnp
dec
cld
mov
fcmovu
xchg
push
pop
fstpl
test
jge
jp
imul
push
loopne
push
or
xlat
mov
sbb
sbb
sub
fdivr
xchg
das
stos
insl
sbb
cmp
imul
pop
ja
out
loopne
jle
jo
call
inc
sbb
ja
int3
sbb
inc
fimull
loop
inc
dec
adc
pop
add
mov
or
sub
stos
jle
lcall
xchg
add
dec
sub
scas
sar
push
sub
xor
pop
lds
jl
inc
jae
cwtl
jno
call
in
test
and
lods
inc
mov
sbb
mov
inc
xor
fmuls
addl
imul
repnz
sti
mov
rorl
je
fisttpl
xlat
inc
lret
mov
rcrb
add
fisttpl
pop
push
add
jae
outsb
xchg
or
inc
sbb
sbb
bound
test
out
dec
mov
dec
xchg
or
pop
stc
mov
cmp
push
pusha
je
pop
aam
xchg
cmp
or
pop
dec
sbbb
cmp
mov
aad
sub
cmc
aaa
lret
dec
jmp
scas
xchg
or
lods
lock
pop
mov
xchg
adcb
cli
xlat
sbb
mov
xchg
xlat
xor
cmp
xor
js
cltd
mov
pop
inc
fs
cli
call
add
cmp
leave
sti
jae
mov
or
mov
mov
fcompl
xchg
sbb
imul
das
dec
ja
xchg
mov
fdivrp
pop
int3
out
test
arpl
pop
push
xor
dec
lods
in
cmp
icebp
movsb
pop
push
cld
dec
jae
test
jp
inc
sbb
and
lcall
inc
test
test
and
ljmp
cli
lcall
mov
loopne
rcll
xor
les
cmp
aam
shlb
add
mov
cmp
mov
je
cmc
icebp
aaa
inc
movl
xchg
mov
dec
or
jmp
nop
pushf
in
or
or
leave
es
test
xor
jbe
int
imul
loop
sub
mov
fmuls
shrl
xor
fs
and
dec
scas
out
add
icebp
sahf
lcall
add
idiv
or
mov
jne
push
sub
daa
jo
ja
or
sub
push
fldenv
pop
in
add
js
out
cmp
aam
push
stos
pop
pop
test
cs
ja
jmp
sub
mul
add
jne
outsb
mov
imul
xchg
and
sbb
loopne
gs
xchg
jp
pop
dec
push
enter
dec
loop
and
cmp
xchg
dec
hlt
inc
lret
stos
mov
add
sub
push
out
push
scas
repnz
popa
mov
or
mov
or
test
xchg
loopne
stos
sbb
jg
inc
rcl
sbb
inc
lock
imul
popf
movsb
cmp
add
ret
add
push
test
scas
and
xchg
out
jmp
inc
imul
sub
jb
pop
xor
into
jge
push
dec
int
push
sub
lods
daa
xchg
test
adc
mov
gs
adc
sbb
jae
mov
cmp
push
aad
je
lahf
jle
test
popa
rcr
std
jo
fidivl
loop
addb
pusha
or
or
pop
in
sbb
lea
fstpt
sbb
fnstcw
cmp
cmp
push
add
into
mov
mov
nop
push
push
pop
inc
jno
sbb
pop
xchg
xor
or
xchg
sub
nop
inc
dec
and
popa
xchg
sbb
inc
mov
pop
dec
notl
aad
mov
movsl
mov
inc
adc
push
into
sahf
sub
xchg
push
mov
das
xor
xor
jns
pop
sbb
xor
adc
xchg
in
mov
push
push
in
fists
push
cwtl
arpl
sub
ljmp
dec
outsb
mov
lock
mov
cmp
mov
leave
fstps
lea
sti
test
xchg
pop
jge
cmp
sub
jecxz
pop
xchg
xlat
jle
pop
jbe
fs
pop
je
pop
enter
test
sub
lcall
sub
jge
call
mov
dec
mov
cmp
cld
int3
lahf
je
adc
inc
cmc
sub
mov
subl
and
rcll
dec
ret
push
dec
popf
xor
dec
mov
sub
rorb
inc
add
adcl
in
push
ds
dec
push
mov
lods
dec
cltd
ja
and
jp
inc
bound
shrl
rol
jnp
in
jmp
pusha
mov
es
sti
repnz
jbe
xor
nop
iret
or
cmp
mov
sbb
cld
jl
in
lret
daa
aaa
or
repz
rcrb
or
arpl
dec
repz
add
push
cmp
inc
or
in
movsl
aaa
jmp
mov
cmp
int3
push
xlat
cmp
pop
outsb
xchg
mov
push
push
aam
fwait
dec
push
jne
popf
xchg
cld
add
push
mov
xcrypt-cbc
cmpsl
xchg
nop
push
out
fildl
pop
push
mov
je
mov
ret
out
sti
add
cmp
test
sub
inc
arpl
add
xor
mov
mov
fcmovb
sbb
sbb
lcall
rorl
inc
aam
ljmp
jne
rcrl
repz
call
jae
jp
das
lods
repnz
loope
xchg
mov
lock
dec
test
xchg
fists
stos
adc
jo
ja
jmp
ja
mulb
stos
mov
mov
or
jp
insb
jnp
loope
dec
fwait
inc
jl
pop
cwtl
out
cmp
popf
rcr
add
mov
les
lahf
flds
mov
fsubrs
jge
push
cmp
mov
add
push
lcall
lock
jnp
add
or
sub
ljmp
jnp
push
dec
mov
pop
fs
xorl
pushl
mov
cmp
pop
adc
movsb
xchg
inc
js
sbb
ret
out
jnp
lods
jge
add
sahf
mov
pusha
sbb
pop
fidivrs
out
mov
push
push
xor
popf
mov
loope
addb
jge
xchg
mov
cmp
xchg
sbb
xor
add
sub
imul
pop
inc
mov
bound
out
sub
mov
cmp
xchg
je
xchg
push
mov
pop
dec
or
fbstp
inc
jp
leave
xchg
or
pusha
loop
push
inc
sbb
sub
cmp
das
xchg
loopne
adc
test
lret
mov
pop
or
adc
mov
xor
std
dec
mov
ud2
jno
addr16
out
mov
xor
into
hlt
or
xchg
fstpt
dec
mov
mov
stos
fwait
pushf
add
xor
xlat
icebp
push
icebp
and
ret
mov
adc
mov
mov
mov
or
das
mov
mov
pop
lea
cli
sub
in
mov
mov
lea
or
cmpsb
sub
lock
mov
mov
cs
add
movsb
movsl
test
push
adc
cmp
or
pop
jo
push
xor
and
mov
cs
int3
repnz
loopne
andb
lds
and
icebp
and
sbb
sub
in
mov
mov
add
scas
xor
mov
jmp
popa
fcomps
in
inc
sbb
cmp
iret
mov
repz
cmc
out
hlt
popa
mov
lods
aad
inc
pop
std
ja
testb
stos
xlat
imul
insb
push
push
or
jecxz
divb
sub
jnp
insl
out
movsb
int3
test
mov
call
jecxz
add
scas
xchg
aas
xchg
or
cli
push
xchg
add
adc
scas
cmp
fisttpll
and
jns
roll
xor
mov
push
std
mov
sub
movsb
ds
xchg
jo
push
lea
scas
mov
stos
std
lcall
scas
mov
jo
lea
cmp
ss
test
sbb
add
out
add
ja
cmp
xchg
ret
arpl
hlt
mov
push
sti
dec
inc
add
out
addr16
mov
push
arpl
fistpll
xor
dec
push
lret
ss
je
xor
inc
mov
in
jg
in
cmp
dec
ljmp
jbe
lahf
dec
leave
shll
add
push
stos
xlat
push
pop
into
aam
cmp
out
arpl
pop
pop
jp
aad
stos
jp
dec
cmp
add
insb
je
fwait
test
cltd
neg
mov
loopne
movsb
mov
jns
cld
jl
stc
adcl
cs
out
fistl
jp
ljmp
nop
fsubr
fisubs
sub
lahf
cltd
mov
pop
ds
inc
fbstp
adc
arpl
gs
pop
jmp
cltd
adc
pusha
js
sbb
lock
call
lods
imul
and
imul
aam
pusha
jno
ja
push
mov
stos
arpl
ljmp
icebp
cmpsb
inc
or
fcmovne
stos
ficoms
fdivr
push
cmp
std
sbb
mov
xchg
sub
and
jbe
or
and
push
into
dec
adc
push
mov
jno
adc
imul
mov
cmpsl
lods
lods
stos
mov
aas
mov
test
nop
repz
sub
scas
mov
scas
in
hlt
mov
mov
mov
nop
inc
fbstp
mov
xchg
outsl
jle
and
jl
in
lahf
icebp
cltd
pop
inc
or
dec
aaa
xchg
sub
pop
adc
dec
cltd
roll
ret
repz
pop
mov
inc
push
inc
lcall
out
in
add
pop
ja
xchg
cmp
andb
mov
sahf
inc
addr16
push
shll
cld
xchg
mov
sbb
jno
dec
sbb
inc
clc
xor
incl
adc
bound
inc
imul
sbb
cmp
pushf
pop
pop
fdivrp
cmpps
shr
push
jmp
sub
dec
xor
mov
stos
xchg
fwait
and
imul
jnp
dec
xchg
xor
jnp
aas
dec
ljmp
xchg
push
hlt
jmp
pop
nop
push
dec
sbb
out
xor
pop
cmc
sarl
adc
stos
daa
jno
lret
cmp
movsl
pop
arpl
out
hlt
pushf
movsl
inc
ds
in
scas
iret
pop
enter
xchg
loope
pop
jge
sbb
push
mov
jmp
mov
fisubl
bound
mov
cwtl
arpl
lods
jmp
into
jne
or
ret
pop
out
stos
ds
mov
mov
jnp
xor
xor
dec
cmp
adc
jecxz
pop
cmp
mov
into
popa
jg
or
xor
movsl
mov
mov
sub
fdivrl
hlt
mov
xorl
and
test
and
push
pop
ds
lds
fsubrs
stos
adc
dec
mov
add
mov
mov
or
aaa
scas
xchg
pop
pop
inc
jae
not
sahf
xchg
xor
pop
jbe
gs
add
les
outsb
or
testl
into
pushl
rorl
notl
or
inc
mov
pop
sbb
lcall
mov
nop
xchg
fabs
mov
fwait
call
cltd
add
imul
clc
je
je
push
pop
add
adc
jmp
inc
imul
gs
call
push
ja
dec
movsl
cld
popf
xor
dec
shlb
fwait
inc
or
mov
sbb
inc
cmp
jmp
sub
inc
push
outsb
xor
xchg
mov
sbb
shrb
jbe
mov
and
cmpsb
out
inc
jl
bound
aaa
inc
cmp
mov
cmp
pop
mov
pop
pop
xchg
inc
cltd
loopne
jmp
bound
stos
bound
subb
pop
es
mov
push
inc
dec
xchg
jns
dec
je
movsb
sahf
scas
or
lret
fdiv
shlb
adc
jmp
clc
fwait
ja
xor
leave
or
jg
clc
xor
push
imul
sub
test
cld
orl
dec
in
or
xor
and
mov
in
mov
add
out
add
dec
jbe
les
outsl
hlt
test
inc
mov
scas
hlt
pop
repnz
jle
dec
aaa
pop
and
test
jmp
sub
stc
cltd
arpl
cmc
dec
mulb
pushf
push
dec
push
or
add
pop
push
test
mov
inc
bound
jbe
xor
dec
xor
cmp
stos
divb
jnp
enter
pop
lea
mov
push
inc
ja
cwtl
popa
test
cmp
and
mov
push
xchg
in
jne
sub
je
aas
cmp
stos
sbb
sti
out
xchg
jnp
sub
fildl
jle
push
adc
xlat
and
cmp
hlt
call
cwtl
fsubrs
jae
lods
push
aas
stos
jnp
push
adc
pop
mov
cmpsl
out
movsl
aas
mov
leave
es
fldcw
dec
cld
sub
into
dec
imul
inc
sub
push
repnz
inc
shrb
mov
push
jl
repz
mov
nop
outsb
imul
std
repnz
pushaw
jmp
or
xor
push
imul
sub
and
mov
dec
mov
cmp
pop
add
pop
sub
rcl
lods
inc
lds
push
sub
inc
sub
stos
stc
add
xlat
xor
push
movsb
out
jb
mov
pop
jno
arpl
add
les
add
les
bt
or
lods
mov
xchg
movsb
sbb
inc
adc
into
hlt
sahf
les
push
sbb
sbb
aaa
mov
sub
mov
jbe
jg
mov
add
insl
dec
mov
cli
dec
popf
pop
push
add
aad
mov
ja
sbb
mov
dec
mov
aam
stos
orl
lods
inc
les
cmp
or
cmp
cltd
push
test
dec
push
icebp
sbb
sub
mov
in
loop
fmuls
adc
imul
pop
dec
push
inc
lahf
jb
shlb
imul
test
out
push
xor
roll
jae
fdivl
loopne
lret
jecxz
or
add
xor
divl
leavew
bound
cwtl
sub
cltd
movsl
leave
cmpsb
inc
rcl
mov
mov
lods
insl
push
adcl
int
add
lahf
jb
shlb
into
jle
cwtl
bound
movsl
jbe
fcoml
sarl
adc
stos
mov
mov
sbb
and
pop
lahf
mov
mov
push
dec
bt
popf
enter
mov
pop
cwtl
mov
mov
sub
push
xchg
cmpsl
lds
fs
add
mov
loope
cmpsb
fldenv
push
pop
jb
dec
push
push
fwait
xchg
xor
cwtl
cmp
call
test
lahf
pusha
xchg
mov
jne
out
cld
mov
and
xor
in
pop
adc
adc
clc
or
adc
xchg
repnz
mov
jne
call
in
in
or
test
stos
mov
movb
dec
sub
cmpsl
rclb
inc
or
stos
and
add
xchg
inc
in
rol
fcmovnb
sub
jecxz
and
or
xchg
subb
rorl
jne
movsb
ljmp
push
popa
fwait
movsl
pop
mov
insb
fdivrs
ja
inc
lds
cmc
add
dec
mov
or
rol
aad
sbb
push
das
add
repz
mov
outsl
mov
pusha
cmp
mov
out
mov
in
xchg
aad
iret
daa
xor
sti
pop
add
ljmp
in
dec
cs
ret
xchg
pop
mov
push
dec
xor
loope
xchg
hlt
dec
xchg
xchg
adc
enter
push
mov
cltd
stos
mov
into
fsubs
js
je
aaa
in
cmp
mov
dec
adc
fists
mov
mov
cmc
jne
out
data16
fxch
push
mov
pushf
jmp
inc
popa
insl
push
mov
das
sbb
call
add
sub
sub
in
push
sub
pushf
xor
add
mov
stos
push
dec
dec
pop
push
les
push
ss
push
addb
xor
loopne
and
andl
ror
pushf
imul
cmpsl
mov
test
loop
mov
jnp
movsl
aaa
dec
xlat
mov
movb
inc
xchg
xchg
in
imul
mov
aad
xchg
rclb
pusha
mov
mov
jg
mov
xchg
fnstcw
adc
fisubs
dec
jge
jno
scas
pop
loop
add
arpl
stos
dec
dec
cmpsl
jmp
cwtl
pusha
or
pop
adc
mov
inc
pop
jmp
mov
andl
dec
cmc
push
in
xor
dec
andl
inc
rcr
test
mov
insl
iret
clc
pop
mov
out
push
xor
sbb
inc
cmp
into
pusha
lods
ret
jb
es
dec
arpl
dec
lods
fwait
sahf
mov
jmp
out
pushf
add
cltd
xchg
cli
push
xorb
imul
pop
testl
stos
mov
imul
fs
ret
fwait
enter
inc
pushf
out
or
leave
pop
lret
jnp
xchg
in
cltd
ficompl
pcmpgtd
add
cwtl
inc
and
sahf
cmp
stos
notb
out
enter
rcrl
in
insl
rcll
std
cmp
bound
scas
mov
adc
cmp
xchg
mov
inc
bound
pop
jmp
cmc
push
out
adc
aad
stos
pop
xor
inc
cmp
inc
mov
pop
ja
xchg
xchg
cltd
push
in
mov
movsl
pushf
clc
out
leave
pusha
pop
nop
push
jb
imul
adc
cmp
jge
inc
rolb
jge
fsub
lret
cmp
or
sbb
cmpsb
adc
add
call
xor
push
loop
in
adc
aaa
dec
mov
ds
mov
ds
popl
daa
scas
test
ds
ljmp
jmp
mov
xchg
cmpb
dec
adc
mov
dec
or
sbb
push
push
add
or
dec
jle
insb
pop
pop
pop
cld
xchg
sarl
das
cmp
inc
rcr
dec
test
cmp
push
enter
inc
stos
stos
lods
inc
das
test
jecxz
bndstx
out
or
mov
xorb
and
loope
call
and
sbb
xor
roll
out
lods
jl
fidivs
dec
fs
dec
clc
xchg
mov
aad
scas
sbb
in
pop
cmp
cmpsl
js
sti
sbb
dec
adc
push
sahf
shrb
pusha
mov
pop
jnp
loope
test
sub
mov
insl
mov
sub
bts
shl
jnp
cs
rcr
int
enter
sbb
shl
bound
push
cmp
mov
xchg
cvttps2pi
or
data16
or
add
fldl
xor
push
cmp
xchg
xor
push
or
xchg
push
pop
je
mov
lods
mov
insl
repnz
cmpsb
and
xchg
sarb
push
rol
push
clc
sub
jg
jo
inc
inc
stos
cli
push
or
retw
sbb
adc
test
ljmp
call
jle
and
sub
dec
aam
dec
daa
les
jmp
ljmp
gs
mov
mov
mov
repz
enter
cmp
xchg
sub
fisubl
mov
inc
outsl
dec
ret
inc
jmp
mov
inc
jns
hlt
out
es
mov
fistpl
inc
insb
dec
sahf
pop
xor
add
hlt
cmp
fsubrs
dec
cmp
test
movl
jmp
cmc
xor
add
pop
add
jbe
gs
gs
movsb
nop
xor
inc
outsl
jb
leave
repz
outsb
push
fsubs
mov
dec
lock
push
mov
out
xchg
push
lods
sbb
aaa
inc
pop
mov
cltd
stos
mov
cmpsl
sbb
stos
xlat
mov
ret
dec
in
jle
cmp
lods
pop
ss
cltd
mov
mov
repz
cld
test
xchg
pop
adc
aaa
push
adc
iret
jp,pn
or
nop
inc
test
in
xchg
faddp
jmp
and
fistpll
mov
push
add
fdivrs
or
cmp
pop
loope
loope
add
outsl
loop
adc
pop
pop
cmp
mov
push
add
imul
bnd
push
inc
jnp
js
movsl
pop
lea
in
out
mov
iret
cld
shrl
and
insb
dec
loop
cltd
add
mov
mov
fsub
fsubl
inc
sbb
stos
jb
test
or
jle
les
and
repz
mov
enter
or
push
cmpsb
lds
jmp
add
jle
es
popa
lcall
das
scas
adc
cmp
cmp
imul
xor
inc
cmp
sub
mov
mov
int3
jb
jmp
fisttpll
stos
in
test
pop
xor
in
add
lods
sub
test
mov
cs
mov
jne
testb
cwtl
mov
stos
ljmp
mov
test
out
sbb
pushf
inc
pop
mov
repz
push
in
dec
popa
cmp
insb
in
js
pandn
push
stc
add
inc
pop
sub
jbe
mov
pop
call
add
sub
and
jle
fstpt
jecxz
shlb
mov
jp
push
shll
or
jb
imul
loope
sub
mov
push
push
out
out
rolb
jo
loope
cmpsl
push
aam
outsb
cmp
fdivrs
popa
mov
pop
fcompl
or
addr16
pusha
test
int3
dec
mov
dec
mov
ljmp
mov
testl
push
xor
or
push
adc
aaa
sub
and
jno
sub
sbb
iret
jmp
cmp
xor
ret
cs
adc
cltd
sub
cmpsl
inc
nop
sar
fdivs
es
xchg
inc
jb
icebp
pushf
sbb
loopne
test
inc
cwtl
mov
adcl
and
push
cmpsl
lea
jge
lods
pop
mov
sub
and
sbb
nop
cmp
int
push
sub
cmp
mov
add
hlt
repz
dec
sbb
negb
pop
lods
fs
insw
inc
out
stos
in
lods
rcr
pushf
arpl
scas
jle
into
mov
ja
cmpsb
and
aad
popl
jl
cmp
fs
mov
add
cmp
leave
inc
lea
out
push
fistpll
mov
xchg
xchg
push
clc
scas
sub
aad
into
cld
mov
push
mov
ret
jle
cli
push
fiadds
daa
cmpsb
pop
push
sub
lods
jmp
push
cmp
stos
imul
inc
orb
lods
cmp
cmpb
pop
push
cmp
cmc
mov
outsl
mov
icebp
sub
push
shrb
stc
daa
outsb
into
pop
stc
gs
inc
aad
cli
and
jg
jno
sub
mov
ret
dec
int
sub
xchg
mov
sbb
andl
scas
adc
pop
mov
shlb
push
pop
int
dec
push
cltd
shrb
ds
imul
out
int
xchg
dec
add
loopne
hlt
addb
sbb
sbb
loop
int3
fcoml
mov
cmp
shll
pop
lock
pop
mov
notl
scas
addb
mov
or
jl
add
adc
jp
addr16
in
xchg
ret
jp
jecxz
jp
outsb
leave
sarl
fldcw
and
cmp
dec
jl
xor
stos
rcrb
or
rolb
push
fildll
out
xor
lea
jle
add
cwtl
cmp
cli
mov
out
addr16
je
cld
ss
lahf
mov
idivl
icebp
loope
test
lds
cmc
mov
mov
dec
jno
jno
adc
mov
stc
mov
mov
insb
push
daa
int
sbb
jmp
rcrb
call
pop
adc
loop
push
jecxz
in
and
mov
lods
and
dec
fcompl
xchg
shl
or
rcrl
push
adc
mov
or
aaa
ss
icebp
inc
sti
sbbb
sbb
out
fdivs
out
icebp
movsb
add
push
das
push
xor
or
xchg
jle
fidivl
jo
pushf
push
into
in
or
xor
aas
out
das
dec
cmpsb
cld
inc
xor
fdivl
fs
pop
loopne
shl
int
inc
in
push
ret
dec
dec
mov
gs
xor
mov
xchg
fidivrl
js
mov
jno
mov
xor
jmp
dec
inc
sbb
pop
lock
mov
dec
test
outsb
test
pop
fdivrl
int3
mov
bound
dec
loop
data16
push
jg
sahf
push
minps
or
and
sahf
push
fimull
cltd
jmp
clc
inc
cmpsb
jno
leave
dec
xor
push
xchg
aad
pop
jle
sbb
call
jle
mov
insl
xchg
popf
mov
iret
mov
gs
xchg
ret
mov
jge
jne
lods
dec
inc
mov
fdivp
mov
and
lahf
mov
cmp
in
sbb
jno
xor
adc
fbld
sahf
ss
jb
std
lret
mov
gs
in
popa
cmp
mov
jmp
or
adc
jmp
hlt
jno
and
neg
push
pop
sub
pop
scas
or
and
inc
inc
repz
cmp
frstor
outsl
or
jbe
pop
imul
pop
mov
jne
mov
pop
mov
leave
sbb
jg
fwait
cli
hlt
mov
nop
lret
out
fs
out
xchg
cli
inc
mov
adc
jmp
lret
dec
pop
cmp
xlat
rcl
adc
mov
ret
and
jecxz
mov
mov
sbbl
mov
inc
test
jg
inc
rcrl
movsl
push
push
mov
add
jns
mov
lods
cli
loop
adc
xor
push
push
cli
dec
adc
push
mov
imul
mov
xchg
jae
scas
jae
pop
mov
sbb
sbbl
ret
out
and
lods
cmp
fisubrl
mov
push
repz
std
sub
dec
pop
notb
push
ja
cmpsl
adc
pop
ja
loop
imul
jbe
cvtps2pi
je
jp
dec
or
add
mov
insb
mov
cld
call
aaa
xchg
popf
stos
sub
fidivrl
inc
lcall
push
inc
and
mov
xlat
dec
lock
fidivs
ja
jno
push
xor
pop
pmaxsw
adc
gs
cmp
xor
fnsave
rorb
jns
out
pop
fwait
sub
sub
inc
scas
jbe
cmp
mov
dec
in
mov
add
frstor
clc
mov
sub
jnp
mov
mov
mov
jp
add
pop
xor
xchg
jg
lret
or
fldenv
es
inc
push
lock
mov
aaa
mov
arpl
mov
pop
jns
fsts
add
mov
push
js
test
shlb
stos
js
aad
movsl
mov
push
cmpsl
pop
aaa
cmpsb
jne
pop
mov
mov
rorb
mov
xchg
test
cvttps2pi
ljmp
insb
lea
mov
push
mov
es
xchg
and
stc
ss
jl
push
dec
cmp
jo
cmp
adcb
dec
or
inc
popf
repnz
imul
cmp
xchg
pop
cmpsb
dec
pop
sub
sub
arpl
stc
jne
dec
sahf
mov
ja
test
jecxz
div
sbb
xchg
xchg
inc
jae
mov
out
sbb
and
clc
fwait
push
pop
loope
in
out
lock
jp
clc
dec
pop
in
lret
repz
adc
dec
fdivl
fcmovnu
faddl
imul
cmpsb
repz
pop
xchg
pop
fstpt
mov
pop
push
in
pushf
mov
les
lret
push
cmp
mov
xor
cs
sbb
rcpps
dec
iret
pusha
dec
xor
pop
scas
in
jle
call
out
pop
dec
pushf
mov
xlat
clc
xchg
sub
iret
jae
in
sahf
adc
sub
daa
scas
cmp
xor
sub
dec
push
out
cmp
enter
sub
loope
testl
dec
out
adc
or
sbb
mov
fwait
sbb
mov
ret
sbb
dec
movsb
inc
pop
add
adc
pop
mov
and
repnz
enter
test
pushf
aam
adc
mov
jmp
mov
xchg
pop
je
inc
mov
jge
xchg
or
cmp
clc
pop
mov
mov
leave
repnz
lods
lods
cltd
sub
mov
and
mov
rcrl
fadds
and
cmp
pop
jno
addr16
aas
xchg
and
add
cltd
notl
fistpll
xor
sub
push
dec
sahf
in
xchg
int3
sbb
pcmpeqb
clc
or
sbb
aad
adc
outsb
clc
mov
dec
daa
inc
mov
xchg
xor
jns
push
sbb
mov
ret
add
mov
les
rcrb
shll
mov
sbb
in
mov
add
das
jns
je
and
jne
les
pop
or
cmpsl
jp
mov
inc
push
mov
mov
add
cmp
xor
sbb
pusha
adc
sar
cld
aaa
push
mov
outsb
in
mov
and
xor
xchg
fidivl
aad
icebp
xchg
enter
and
and
xlat
mov
add
sbb
push
cmp
add
repz
inc
cld
cmpsl
push
popl
andl
mov
movsl
mov
in
adc
jge
or
addr16
cmc
push
into
ficoml
pop
ljmp
add
lods
sub
mov
stos
cmp
xor
xlat
in
push
sub
cmc
cmpsb
loop
cmp
dec
les
nop
in
pop
dec
push
add
cs
cmp
insb
sub
mov
fimuls
push
push
movsl
imul
pop
aam
aam
xchg
gs
xchg
ljmp
es
sub
adc
outsl
int
aaa
pop
data16
outsl
ss
shrb
nop
jb
jge
and
xchg
lret
inc
xchg
cmp
dec
data16
xor
mov
shrb
dec
sahf
sub
mov
jmp
dec
clc
dec
cmpsb
cmp
clc
arpl
pusha
and
sub
imul
aas
dec
sbb
pop
inc
mov
clc
inc
fcomps
loop
xchg
add
mov
and
inc
inc
loope
or
adc
aas
mov
push
data16
scas
sarb
cmp
mov
movsb
adc
in
lds
lcall
inc
xchg
mov
cmpsl
aas
out
mov
push
push
cltd
cmp
mov
and
sbb
jns
fsts
test
pop
xchg
lret
xchg
loopne
jmp
mov
mov
aaa
sbb
gs
push
or
jecxz
dec
jg
and
xchg
ja
jg
cmpb
xchg
roll
out
mov
xchg
sub
mov
mov
mov
ljmp
loope
sbb
lret
rcr
mov
jae
rol
out
stc
dec
jae
sbb
xchg
xor
stos
xchg
mov
cmpsl
popa
les
movsb
sti
les
push
sbb
insl
mov
scas
sbb
imull
push
loop
sub
call
js
movb
les
sub
xchg
jecxz
scas
push
scas
adc
xorb
mov
adc
pop
inc
aam
test
imul
pop
dec
icebp
imul
cs
dec
xchg
sbb
mov
cmp
aam
movsl
inc
xchg
movsb
xor
divl
in
fisubs
mov
faddl
shrb
mov
add
lods
mov
clc
or
dec
mov
das
xchg
movsb
lret
repnz
mov
push
inc
dec
and
dec
pop
loop
xchg
std
leave
movsb
fiaddl
scas
decb
jne
fldenv
adc
repz
mov
loope
adc
and
call
and
mov
subl
mov
lret
insb
scas
aaa
jl
in
in
jno
aas
aad
int
call
imul
xor
icebp
xchg
fyl2xp1
lret
sbb
out
sahf
jmp
cld
adc
xor
flds
mov
jae
ja
rorl
dec
testl
mov
and
push
sub
add
dec
sub
jp
lods
push
sub
jle
in
ja
andb
fwait
xchg
mov
fwait
repz
cs
xchg
outsl
negl
das
ljmp
repz
test
mov
lods
cmp
stos
push
adc
lcall
jns
shlb
and
or
pop
daa
shr
jp
dec
jl
cmpsl
add
lock
mov
dec
cmp
inc
mov
mov
cmp
out
cmp
icebp
lret
push
or
jns
pop
adcb
in
cmp
aam
mov
mov
push
scas
xor
push
jge
lea
and
sub
fldl
and
rorb
and
cmp
lret
push
pop
and
scas
mov
push
adc
cwtl
in
push
dec
push
and
pop
daa
imul
jnp
lods
xchg
cmc
xor
mov
aas
test
pushf
sub
lods
xcrypt-cfb
cmpsl
in
into
rol
cmp
jg
cmp
movsl
mov
jp
aam
sbb
inc
sahf
sub
pop
loopne
or
iret
inc
push
inc
mov
cmp
cmp
addr16
dec
cmp
mov
aaa
loop
jnp
add
xor
sbb
lea
loopne
jl
aam
jmp
rcr
and
mov
dec
xchg
push
dec
or
xchg
pop
pop
sub
cmp
insb
mov
lock
cmc
xor
into
in
std
addr16
xchg
aaa
cmc
lahf
xchg
scas
mov
pusha
sbb
push
cmp
aam
idiv
jp
loop
sahf
or
pop
cs
push
je
cmc
push
and
imul
add
jg
repz
inc
lods
pop
add
push
fstpt
push
nop
xlat
mov
inc
and
ficoms
cwtl
xchg
mov
shl
add
jecxz
xchg
xor
in
test
ss
cmpsb
and
mov
or
pop
pop
int
pop
add
clc
mov
dec
in
imul
cs
adc
insl
pop
mov
ss
dec
mov
cwtl
lret
xchg
cltd
ljmp
dec
inc
add
movsb
push
dec
push
adc
pop
dec
and
pop
rcrb
out
or
pop
popf
repnz
pop
flds
fsin
xor
or
mov
divl
sbb
cmp
out
push
cmp
orl
adc
mov
les
loop
mov
rclb
pushf
inc
pop
mov
hlt
fadd
mov
cmp
and
mov
stos
pop
sbb
sbb
les
fmulp
pop
scas
fsub
mov
std
fs
inc
xchg
idivb
cmp
dec
rcll
or
ret
pop
ja
mov
fwait
jns
xchg
movsb
and
push
xor
jb
sti
stos
sarb
add
in
mov
pushf
add
cmpsb
dec
in
and
add
iret
xor
nop
fnstenv
sti
stos
sarb
add
in
mov
pop
outsl
dec
jnp
jbe
or
jl
xchg
xor
mov
rorl
aam
add
mov
xchg
in
adc
mov
mov
mov
adc
push
sbb
mov
or
xor
xchg
xchg
cli
testb
mov
ja
jecxz
mov
sbbl
in
sub
shrb
dec
or
imul
dec
xchg
into
adc
repz
jmp
insb
dec
loopne
sbb
loop
out
or
ret
and
mov
mov
pusha
or
lfs
scas
out
xchg
imulb
mov
mov
ficompl
sbb
sti
mov
push
fbld
rorl
rcl
sbb
jg
and
ljmp
movsb
ja
cmp
hlt
fwait
out
arpl
incb
hlt
jne
ret
lods
cli
jno
pusha
xchg
test
and
cmpl
mov
dec
lods
sbb
repz
xlat
xchg
cmp
imul
pushf
hlt
mov
arpl
popl
push
je
push
movsb
int
test
inc
std
cmp
dec
jns
xlat
rorl
lret
or
bound
mov
sbb
push
adc
mov
clc
pop
push
sbb
xchg
mov
rcl
jo
iret
add
inc
pop
and
add
pop
push
push
cmp
fyl2xp1
inc
popf
mov
push
rcrb
testl
dec
das
ret
cmpsb
movsl
ret
dec
cmpl
jnp
adc
lods
push
jl
aad
mov
cltd
mov
xchg
add
fwait
andl
fs
cli
dec
call
and
adc
jmp
cli
call
cmc
fwait
pop
sbb
sub
cwtl
mov
xor
jp
popf
insb
lock
shrb
cmp
test
repnz
or
cmc
sub
loope
and
lds
mov
test
mov
jne
ret
sub
sub
add
decb
testl
or
push
insl
and
ds
mov
int3
add
out
roll
in
sub
je
or
popf
sub
or
cmc
dec
and
outsl
mov
iret
jl
mov
movsb
jno
push
jmp
push
sbb
push
pop
mov
in
dec
es
sbb
sub
mov
sarl
outsb
mov
add
stc
in
cmpsl
pop
or
in
test
stos
push
ja
push
push
mov
arpl
mov
mov
cmp
inc
cmp
inc
sahf
xor
push
xlat
out
repz
mov
adcl
mov
mov
test
mov
xor
movb
pop
mov
mov
sbb
dec
push
jne
or
lcall
mov
inc
xchg
aam
jl
xchg
and
clc
rcl
dec
outsl
lock
or
sub
dec
sbb
lods
fsubrl
movaps
xchg
pushl
pop
jle
out
loopne
lock
adc
outsb
jecxz
out
ljmp
out
nop
ljmp
lea
push
mov
inc
lds
insl
xchg
loopne
lcall
jne
cs
neg
mov
pop
pop
pop
push
inc
fdivrs
jmp
gs
ja
and
outsl
lods
pushf
in
cmpsl
loope
cmp
inc
outsl
xor
ret
mov
mov
popa
and
pop
idivb
daa
or
lahf
das
pushf
mov
or
lret
push
jne
lods
jbe
mov
mov
pusha
or
push
cmp
sub
pop
js
pop
cmp
loopne
mov
sub
shr
xchg
mov
sub
jmp
mov
addr16
and
pop
inc
lods
xchg
fists
rcrb
sub
loop,pt
pop
ss
mov
cmp
mov
aam
sub
sbb
jo
js
fbstp
daa
scas
clc
push
sub
lret
gs
inc
inc
or
arpl
mov
addr16
jne
add
push
rep
out
dec
std
cmp
mov
imul
daa
mov
mov
daa
mov
in
idivb
shll
push
add
mov
mov
sub
pop
lods
sbb
mov
shr
iret
cmpsb
xchg
mov
adc
lret
xchg
pop
out
loop
sub
sar
mov
mov
mov
jnp
fldl
cmp
push
xchg
jecxz
js
push
xchg
rcrl
les
xor
xchg
ret
lock
lcall
jno
or
add
js
mov
or
sub
fcomip
mov
das
cmp
inc
scas
test
fdivl
in
rcrb
xchg
movsbl
push
loopne
je
pop
scas
pop
loop
or
in
test
out
pop
pop
notb
sub
mov
jnp
push
aas
std
dec
sub
popf
inc
ficompl
cwtl
incb
sbb
xchg
sbb
sbb
lahf
mov
jl
call
push
in
xchg
pop
in
xchg
cltd
adc
push
and
xchg
lcall
clc
or
stos
popa
push
roll
jno
hlt
mov
stc
in
push
inc
pop
adc
mov
lods
jg
lahf
aam
xchg
icebp
loopne
inc
dec
add
sahf
xchg
cli
adc
ret
test
push
fwait
movsl
dec
cmp
pop
cmc
or
add
filds
cmp
hlt
out
in
xchg
mov
mov
cwtl
lods
jne
loopne
or
iret
xor
lahf
addb
add
push
icebp
outsl
dec
add
imul
test
repz
add
outsb
cs
lcall
inc
mov
rcrl
add
sub
push
sbb
repz
lahf
inc
data16
stos
add
xor
mov
lods
mov
push
xor
sub
mov
mov
add
int3
jp
and
pop
xor
fnstcw
pop
icebp
gs
in
cld
cmpsl
les
mov
es
addr16
mov
sti
out
data16
xchg
jnp
mov
addr16
xor
jb
push
cli
mov
lea
sti
lea
fsubrs
sbb
ret
jnp
test
mov
ret
inc
mul
mov
lret
popf
mov
push
mov
mov
jae
add
fdivs
cmp
es
lock
cmp
sbb
cmpsb
nop
test
in
insb
and
mov
add
xor
mov
adc
jnp
mov
jno
mov
test
pusha
lahf
fidivrs
lret
imul
mov
or
in
inc
mov
add
sbb
out
iret
fidivrs
lea
dec
mov
pop
cmp
aaa
lahf
jmp
pop
pop
in
dec
sbb
aam
imul
mov
stc
jae
mov
in
jno
loope
adc
sub
sahf
push
mov
xchg
loope
dec
push
adc
or
mov
mov
sbb
mov
sub
cmp
mov
adc
std
cmp
std
lods
out
aas
ja
push
outsl
repnz
jmp
repnz
fs
sub
addr16
jbe
in
stc
add
fiadds
int
pop
scas
shll
mov
pop
jge
pop
dec
pop
ds
sub
jnp
add
nop
fsubr
sub
lret
icebp
sbb
cmp
mov
cmc
pop
fiaddl
and
xchg
sti
or
jb
stos
or
test
mov
or
inc
fisttps
imul
ljmp
ljmp
xor
imul
sarl
enter
stos
fimull
adc
sub
jnp
in
or
sub
mov
mov
xor
pop
icebp
mov
incb
movb
loopne
inc
add
mov
adc
arpl
mov
fdivrs
daa
js
sbb
mov
lea
test
addb
sahf
push
mov
loopne
cmpsl
popa
lret
jb
dec
pop
cli
mov
enter
mov
les
sbb
les
jbe
xor
call
jl
cmpl
ss
xchg
sti
pusha
jnp,pn
inc
data16
or
jns
mov
outsb
shl
cmp
inc
sahf
push
add
add
and
cmpsl
pop
ljmp
out
lods
xchg
cmp
sub
ljmp
xor
inc
js
mov
call
push
sub
xchg
fisttpl
inc
dec
push
sub
and
pop
les
inc
cmc
push
jmp
enter
or
mov
xchg
shll
je
jmp
jae
out
jmp
inc
pop
andb
clc
in
in
mov
sbb
test
fcomi
stc
cld
ss
xchg
inc
xchg
lods
mov
sub
xor
inc
popf
xlat
push
aas
test
push
int
mov
jb
cmp
mov
mov
push
cmpsl
stos
in
mov
mov
scas
frstor
cltd
push
lret
push
daa
dec
lock
insb
cmp
insb
lods
inc
xchg
testl
test
fs
clc
or
hlt
in
sbb
mov
sub
data16
mov
in
lea
inc
stc
adc
mov
mov
cld
xor
inc
rcll
ffreep
leave
pusha
push
in
repz
xor
jns
fldenv
xor
cwtl
std
stos
test
je
outsl
inc
rolb
push
ja
fnsave
cmp
fldcw
aas
bound
in
xor
ret
inc
rcll
dec
iret
push
mov
mov
inc
dec
push
sub
pop
lods
mov
or
mov
mov
aad
jmp
ret
dec
scas
shl
inc
jp
std
pop
lds
cltd
cli
pop
sub
cmp
mov
push
ds
xor
push
out
add
add
movb
adc
dec
ss
xchg
and
es
pushf
roll
push
test
cmp
sbb
dec
push
js
cmp
mov
mull
int
call
icebp
sub
lods
out
jecxz
cmp
mov
mov
xor
sbb
loop
cmp
popf
sbb
sbb
pop
lds
loopne
in
fistpl
mov
fs
xchg
mov
push
mov
add
fdivl
shrb
aaa
cmp
push
xchg
or
iret
add
cli
orl
je
mov
dec
xor
pop
push
xchg
hlt
cmpsb
inc
outsl
sub
or
mov
pushf
in
push
or
xor
stos
decb
mov
cmc
or
mov
push
dec
ja
bound
cld
jo
lock
and
lahf
push
fidivrs
cld
movsl
pop
push
push
push
imul
sub
mov
not
mov
sub
iret
cmp
sub
not
repnz
fdivl
jo
aad
xchg
les
xor
sti
push
pop
shlb
sbb
test
fists
cmp
in
cmp
jle
imul
jp
push
jbe
fnstenv
add
stc
sbb
addr16
xor
mov
jmp
xchg
jg
cmp
mov
inc
iret
xor
aam
aaa
rorb
pop
jb
rorb
pop
pop
mov
fwait
nop
or
jae
imul
xchg
lods
mov
sub
xor
inc
popf
xlat
push
aas
test
push
int
cmp
mov
out
or
mov
push
mov
push
pop
mov
cmp
sarl
call
pop
jne
imul
sbb
sbb
mov
scas
and
pop
iret
div
call
cmp
bound
pusha
pop
in
cli
popf
pop
mov
rcrl
sub
fistps
and
add
insl
loop
cmp
pop
in
sahf
and
inc
scas
pop
repz
insb
test
pushf
xor
xor
mov
jle
pop
adc
and
movsl
inc
adc
push
orb
add
pop
add
dec
xchg
push
xor
jl
jge
mov
popa
in
adc
dec
pop
inc
sbb
mov
cld
pop
scas
stos
mov
pop
sub
mov
or
loopne
cmp
insb
sbb
pop
mov
xchg
test
test
push
subl
loope
lods
sbb
icebp
cmpsb
push
mov
push
test
mov
repz
loopne
pushf
testl
jno
mov
sarl
mov
xor
or
xchg
insl
or
and
cld
inc
mov
mov
lret
sbbb
cmp
jmp
bound
movsl
or
mov
shrb
rol
pop
dec
mov
incl
cmp
movsb
fildll
insb
jo
lea
stc
inc
push
test
ds
mov
xor
pop
mov
mov
outsl
rcr
test
fcompl
and
cmc
mov
xor
stc
lock
jno
daa
push
dec
mov
in
pop
aam
sbb
mov
insb
in
inc
push
leavew
bound
arpl
scas
xor
mov
add
in
daa
add
imul
adc
inc
lds
sub
cmp
jmp
push
adc
mov
fsubl
mov
lcall
jo
not
aaa
pop
add
fnstenv
popf
scas
and
pop
xchg
cmp
lret
xchg
rclb
loopne
or
mov
loope
add
int
or
and
mov
ficoms
lahf
cmp
push
imul
insl
je
jg
xor
sbb
test
inc
es
inc
insl
mov
xor
adc
leave
in
das
aas
jg
fisttpll
mov
or
adc
inc
pop
ja
jmp
jbe
mov
and
pop
dec
adc
cmp
and
xlat
mov
dec
lods
ja
sbb
sbb
test
fists
push
cmpl
dec
mov
xor
push
push
in
ret
mov
push
int3
stc
ja
test
jmp
adc
inc
mov
vmwrite
push
jo
push
scas
iret
orb
pushf
int
sub
sub
lahf
or
push
mov
xchg
add
cmpsb
rcll
sbb
test
test
xchg
add
jnp
pop
add
inc
jmp
mov
filds
xor
sar
xchg
shl
fwait
mov
outsl
jle
mov
outsb
lcall
pop
mov
pop
outsl
push
jne
xchg
pushf
aad
out
fists
and
clc
mov
mov
xchg
popf
lcall
repnz
lods
idivl
jne
xchg
inc
inc
fisttps
push
stc
add
inc
aas
xor
xchg
dec
outsl
adc
lds
cmp
scas
lahf
jle
cmpsl
jnp
sbb
les
lods
push
push
mov
inc
dec
cmp
gs
and
jmp
dec
in
loop
push
aam
fisttpll
jnp
and
stos
aas
ret
shll
ficoml
jns
aad
cld
add
pop
push
je
mov
adc
or
cltd
push
add
cld
out
int
addr16
mov
cld
xlat
or
add
pop
and
xorl
cmp
or
push
sbb
in
dec
aad
push
xchg
jg
adc
dec
lret
xor
xor
cwtl
stos
jecxz
imul
popf
mov
pop
out
pushf
test
adc
fidivrl
rorl
pop
xlat
mov
das
push
fwait
stc
stos
les
repz
inc
pop
or
loopne
fs
mov
mov
addb
inc
lcall
es
pop
mov
mov
jg,pn
mov
loopne
jns
inc
ja
pusha
out
jo
mov
lods
sbb
or
add
sbb
xorb
hlt
lods
dec
ljmp
aaa
mov
xchg
mov
int3
mov
mov
popf
fabs
loope
jecxz
icebp
cmp
movsb
out
and
dec
add
int3
xchg
mov
data16
inc
sbb
call
jae
cs
xor
and
xchg
jp
inc
mov
cmp
mov
cmp
aad
jnp
div
or
inc
dec
push
mov
loopne
imul
push
xor
jb
imul
or
dec
adc
adc
sbb
jnp
pop
pop
mov
repz
subb
loopne
dec
xor
repz
pop
je
xchg
jmp
in
addr16
mov
add
mov
cld
xchg
pushf
pop
jno
mov
push
cltd
mov
outsl
ss
jge
mov
cmp
andb
push
inc
stos
dec
leave
leave
push
aad
inc
je
jge
add
xchg
fstpt
jecxz
addr16
or
jne
sti
mov
in
pop
loopne
and
jge
ficomps
in
mov
push
xor
lahf
pusha
push
scas
adc
gs
insb
mov
dec
out
add
movsb
or
pop
dec
sbb
mov
jno
aam
pushf
lds
mov
sbb
jns
fcmovb
sahf
dec
ret
stos
loop
int3
cwtl
sub
jge
lahf
sub
jns
xchg
or
inc
xorl
loope
pushf
sbb
out
mov
mov
or
sbb
mov
je
mov
jle
movsb
mov
xchg
shl
loop
mov
pop
lret
jns
and
push
mov
iret
loop
mov
push
push
mov
cmpsl
into
or
sbb
arpl
jg
push
sahf
rorb
add
mov
test
addr16
fbld
and
sub
js
insb
repnz
call
push
popf
mov
mov
cwtl
ss
mov
inc
sti
insl
sub
pop
out
shlb
mov
mov
addr16
mov
lret
xchg
mov
dec
cmpsl
mov
outsl
mov
sbb
in
popa
jp
xchg
lret
scas
ret
or
adc
and
stc
pop
iret
aaa
popa
xchg
lret
movb
shlb
adc
dec
pop
fs
shl
idiv
push
push
movsb
je
mov
sub
ds
push
mov
mov
inc
out
cli
lea
push
insl
rclb
stos
fs
repz
shlb
pop
loopne
pop
ja
and
das
inc
ret
pop
pop
adc
nop
fs
jp
jg
lods
lret
out
jl
lahf
aaa
les
xchg
inc
cmp
leave
es
lcall
lret
aad
xlat
mov
cmc
out
dec
xor
cmp
shll
aad
icebp
sub
int
jp
xor
psrad
cmovno
dec
and
call
aaa
dec
push
xorb
push
xor
push
enter
call
out
add
stc
ja
mov
sbb
call
and
movsb
stos
add
les
cs
pop
dec
xor
push
shlb
xchg
fidivrs
jbe
inc
ljmp
jnp
sub
gs
or
pop
pop
pop
int
pop
add
clc
sbb
add
jge
add
sahf
pop
or
arpl
lret
adcl
adc
dec
pop
push
xchg
mov
push
dec
addb
push
sub
arpl
jp
adc
mov
adc
jge
xchg
sub
pop
push
jo
js
jecxz
aad
xchg
ret
add
jo
push
stos
aad
notb
or
and
leave
or
jmp
and
add
fisttps
push
xor
ret
fldt
sbbl
cmpsl
mov
sti
imull
rorl
dec
lock
push
scas
push
enter
mov
stos
mov
push
xor
les
fistpl
out
adc
adc
xlat
lds
xchg
mov
and
sbb
sbb
pop
jp
dec
es
xchg
enter
mov
jb
mov
fisubrs
cmp
das
xchg
cltd
and
xor
and
pop
jg
popf
or
jnp
sub
mov
adc
addr16
sub
loop
ffree
add
ds
add
push
inc
in
jb
hlt
pop
mov
jmp
out
repz
add
roll
xchg
dec
out
push
cmp
xchg
push
lret
add
push
xor
out
dec
out
inc
cli
or
jbe
je
pop
scas
pop
loop
scas
cmpsb
cmp
divb
sahf
mov
jl
push
out
cmp
lods
testb
mov
cs
aas
xchg
mov
dec
test
add
lahf
ss
sbb
push
fdivrs
test
stos
pusha
mov
stc
into
stc
int3
adc
dec
xchg
or
push
adc
je
and
lret
push
popa
inc
mov
lea
nop
fs
fwait
mov
and
dec
sub
push
shl
mov
cwtl
sub
push
pusha
je
cmpl
push
add
xor
ja
cmp
xor
cmp
shlb
aad
cmp
jne
xchg
xor
inc
push
lods
xchg
cmp
sub
mov
dec
sti
sbb
jno
mov
shl
out
pop
into
ds
lret
push
das
enter
sub
and
insb
or
inc
push
jp
inc
sti
out
dec
out
pop
out
mov
cmpsb
inc
cmp
xchg
mov
xchg
inc
js
add
jae
sarb
jns
fsubr
adc
jnp
in
jg
cmp
into
jge
jecxz
dec
jo
jno
pop
push
std
gs
insb
stc
aas
pop
xor
xchg
mov
add
aaa
and
mov
xchg
jns
inc
or
adc
js
cmp
or
orl
and
pop
loope
pop
mov
imul
xor
cmp
fs
mov
repnz
jnp
mov
cs
jne
dec
call
sub
je
aas
icebp
sbbb
inc
cs
and
xlat
scas
sub
and
adc
addr16
movsl
ss
mov
addb
dec
push
push
mov
shll
and
pop
testb
addl
push
ljmp
div
mov
pop
rcr
mov
fistpll
cs
bound
rcll
push
inc
call
insb
ds
cli
and
loope
jmp
mov
adc
int3
out
iret
and
lcall
adc
je
sti
std
loop
sub
frndint
fisubrs
popf
pop
loop
cli
xor
loop
cmp
mov
insl
sbb
in
icebp
filds
push
movsl
mov
push
push
cmpsb
xor
add
cmc
xor
jl
mov
les
shlb
rorb
dec
loopne
pusha
stos
mov
in
add
loope
xor
add
sub
sahf
jnp
sbb
and
int
stos
movsb
xchg
push
and
pop
sbb
lods
xchg
int3
test
out
sbb
in
loopne
sbb
lea
shrb
ds
loopne
rcl
out
push
dec
aas
ds
or
rcl
icebp
mov
mov
sub
pop
stos
push
pop
push
cmp
in
rclb
mov
in
pop
stc
jge
paddusb
leave
sbb
sub
lcall
outsl
dec
xchg
xchg
push
dec
sub
mov
sub
pop
mov
in
in
dec
adc
dec
push
movsl
inc
stc
adc
cld
outsl
or
mov
mov
js
icebp
jno
icebp
outsl
repz
addl
in
pop
insb
push
loopne
mov
mov
jnp
pushf
mov
sub
push
clc
mov
jae
pop
lea
jno
and
fidivl
push
jae
inc
sbb
lods
pop
and
shufps
call
in
mov
mov
cmpb
pop
adc
pop
inc
icebp
add
mov
insb
std
mov
insb
dec
sbb
addl
cmp
fisubrl
adc
push
mov
loope
or
cmp
inc
pop
popf
cmp
aad
jne
mov
mov
jp
mov
mov
fiaddl
int3
xor
push
stos
fldl2e
xor
adc
loope
xchg
in
add
lcall
loop
je
add
push
push
lods
mov
clc
aad
inc
sub
out
cmpsb
in
mov
xor
decb
ret
jnp
mov
xor
mov
push
andb
or
out
mov
xchg
mov
push
insb
sbb
jg
add
cmpsl
or
xchg
jns
sahf
call
cs
or
mov
mov
pop
js
stos
push
mov
addr16
cmp
inc
sahf
pop
sahf
and
scas
mov
jae
pop
dec
or
hlt
outsl
or
out
lods
adcb
imull
xchg
je
sbb
outsb
mov
int
enter
jno
pushf
int3
in
lock
mov
or
cmp
nop
mov
stc
mov
and
pushf
jbe
push
cmp
popa
out
pop
bnd
mov
push
adc
sbb
cmp
andb
xchg
add
fldlg2
test
cmp
pop
aam
mov
popf
xchg
xor
sbb
push
mov
leave
mov
psrld
xchg
xlat
daa
adc
xchg
mov
adc
xlat
fimull
inc
sub
jno
mov
fdivr
xchg
jnp
adc
por
mov
leave
mov
loop
les
ja
cmc
shl
sub
sti
push
pop
add
sub
cmp
push
cmp
dec
xor
sub
jbe
out
and
fs
mov
imul
loope,pn
jno
xchg
test
rcrl
rorl
shrl
push
out
or
push
jns
xor
leave
mov
sbb
cli
repz
std
ljmp
outsb
iret
mov
and
lcall
mov
dec
jnp
rolb
jnp
inc
stos
cmp
and
clc
adc
out
add
fs
jp
mov
jecxz
or
xor
push
repnz
pop
das
and
out
cltd
shll
mov
call
out
lahf
ret
mov
sbb
and
cli
test
or
sbbl
adc
push
pop
push
into
int
xchg
jae
push
xchg
adc
and
test
and
sub
or
roll
lahf
xorb
rorb
idiv
test
loopne
decb
movsb
dec
into
test
jae
jl
xor
pop
cmpl
sub
sub
inc
or
pop
pop
je
push
popa
fimull
int3
mov
adc
in
push
jmp
xor
or
mov
pop
pop
lods
cmp
rcr
loop
sbb
hlt
js
mov
ficoml
negb
xchg
cli
imul
and
xchg
or
mov
jnp
fadds
pop
movsl
ja
push
add
in
scas
xchg
sete
or
aas
dec
inc
rorb
stc
repnz
lret
loop
shl
test
cmp
mov
shll
and
adc
dec
out
pop
mov
mov
ljmp
dec
sbb
xchg
jp
mov
inc
les
add
lods
lds
and
fsubl
and
dec
or
or
arpl
int
mov
test
mov
jnp
mov
mov
or
and
popa
insb
dec
cld
mov
xor
jge
in
mov
inc
mov
cmp
push
sub
pop
xor
pop
push
xor
and
loop
and
xor
dec
jb
xlat
sbb
pop
pop
mov
out
loop
jecxz
mov
ja
cmp
sub
sets
jmp
scas
xchg
adc
cld
fadds
cmp
insb
push
iret
lock
pop
lret
pop
jp
jo
mov
stos
dec
dec
test
into
mov
inc
lea
jle
les
mov
xchg
loopne
add
daa
cltd
cwtl
sub
shl
rcrl
cmp
dec
std
mov
push
cwtl
xchg
jae
cmc
loop
cli
bound
shlb
jecxz
mov
ret
sbb
leave
xor
mov
in
lods
push
fnsave
aaa
pushf
or
mov
aad
das
cwtl
pop
into
cs
clc
ret
scas
xor
mov
in
ja
in
xchg
dec
fs
ss
shll
insl
mov
fwait
aad
xlat
test
mov
jae
xor
loop
shll
loope
cwtl
add
jp
xchg
adc
xchg
mov
xor
jae
adc
sub
jo
xor
out
lret
loopne
mov
dec
pushf
lret
and
aam
aad
push
sub
daa
mov
je
and
sarb
je
in
pusha
sahf
cmp
mov
popf
pop
add
xor
std
mov
rol
inc
in
push
cli
sub
loope
cmp
pop
pusha
aam
notl
inc
nop
lea
andb
cmp
dec
ljmp
mov
sbb
daa
pop
cmp
adc
jle
inc
stos
scas
outsl
pusha
daa
les
dec
dec
ret
inc
push
jno
insl
iret
push
mov
les
outsl
data16
pop
insl
popf
fdivs
bound
push
ret
add
sbb
mov
repnz
add
dec
push
fisubl
dec
mov
push
test
clc
pop
dec
push
adc
jg
lret
push
lods
mov
cmp
dec
jae
add
movsb
xlat
mov
fsts
push
rcrb
movsb
out
ja
xchg
sub
ja
je
pop
push
or
dec
ja
aaa
les
ret
xor
lock
mov
mov
add
mov
outsl
dec
orl
in
pop
push
or
cmc
dec
sub
in
fwait
mov
bound
dec
andb
aas
shrb
push
xchg
push
fdivs
add
jne
push
mov
push
mov
out
je
jl
js
xor
push
nop
jle
xor
dec
dec
mov
mov
js
pop
jae
push
cmpsl
inc
outsb
rol
in
add
out
insl
adc
and
mov
fs
imul
lahf
inc
clc
iret
outsb
dec
outsl
cmpsl
bound
ss
adc
cli
pop
lcall
cmp
sub
test
xchg
add
mov
mov
sub
mov
scas
lods
mov
lret
test
xchg
pop
in
sub
mov
fmuls
mov
in
or
and
icebp
pop
into
lock
movsl
cwtl
in
lods
sub
dec
cltd
lods
repz
in
sbb
xchg
adcl
sub
fstpl
inc
in
outsb
sub
mov
mov
lahf
scas
xor
inc
cli
movsb
mov
push
loope
lds
mov
and
mov
jb
roll
push
mov
adc
aam
lcall
stos
and
fsubl
sbb
jne
int
test
dec
inc
dec
and
out
inc
push
adc
and
sbb
jmp
stos
lock
inc
fcmovu
and
aad
jbe
popf
std
mov
lahf
adc
aam
aas
cmp
loope
lret
daa
int3
iret
mov
fstpl
rep
and
ja
jmp
ja
mov
sbb
inc
pushf
xchg
push
call
cmp
leave
loopne
leave
orl
xchg
push
out
xchg
sbb
xchg
adc
aaa
icebp
inc
jo
push
xchg
pop
popf
arpl
jecxz
fiaddl
cmp
shll
insl
dec
add
jne
lahf
shld
in
sub
sub
daa
and
loop
test
xchg
push
sahf
mov
or
cltd
int
stos
add
mov
scas
sarb
flds
ret
inc
lea
insl
push
nop
adc
jg
cmp
stc
lea
iret
loope
inc
mov
orb
xor
fldl
cmp
aam
jne
pop
cmpsl
lret
fs
mov
mov
mov
clc
shll
inc
stos
pop
in
cmp
mov
sub
mov
xchg
adc
sbb
mov
pop
jbe
rclb
into
or
or
cmp
xor
sub
out
adc
lret
add
add
dec
push
xchg
sub
daa
mov
inc
das
and
sbb
mov
pop
xchg
sub
cmc
dec
jns
adc
push
lea
icebp
add
jle
cmp
ds
mov
mov
xchg
aam
add
jbe
repnz
push
data16
rorb
ljmp
pushf
sub
jmp
or
fcoms
add
jb
push
or
add
fxch
or
cmp
repz
mov
dec
pop
dec
jns
hlt
jge
scas
sbb
jmp
dec
and
daa
pop
insl
addl
in
push
addl
cmp
mov
mov
fsts
outsb
enter
cs
mov
or
mov
xor
cmp
and
fwait
xchg
push
fidivl
lock
es
cmpsl
sbb
or
cwtl
push
cltd
pop
ficomps
loop
pushf
test
jle
imul
nop
pop
lods
jne
fwait
ss
sbb
fldcw
and
icebp
inc
mov
lret
sbb
fwait
movl
add
fxch
imul
xchg
dec
out
mov
loop
adc
call
push
in
fldz
sub
inc
xor
jl
xchg
mov
loope
push
addr16
ret
cmp
sub
mov
jne
and
jg
sub
or
nop
push
inc
cltd
dec
div
fwait
mov
xchg
pushf
adc
test
jbe
cmpl
shrl
mov
rorb
dec
jns
ret
mov
xor
pop
fists
data16
or
xchg
test
cltd
push
push
mov
icebp
pop
cmpsl
pop
push
fists
lods
add
ret
in
dec
and
mov
aas
push
insb
loope
enter
pop
xchg
or
push
imul
ficomps
mov
outsb
scas
sub
ds
data16
loopne
scas
xchg
into
xor
inc
dec
outsb
leave
lahf
mov
out
fildl
clc
pop
rcrl
rcll
lret
add
nop
loop
test
paddusb
test
outsl
or
mov
xchg
das
pop
aaa
dec
xor
add
lods
out
cmp
pop
push
xchg
pop
xchg
mov
test
mov
xor
xor
or
shll
jge
daa
loopne
xor
push
repnz
and
das
dec
adc
sbbb
sbb
xchg
fwait
push
cwtl
mov
sar
out
add
sbb
xchg
adc
inc
sbb
lods
sti
and
jmp
pushf
testb
and
jo
jb
daa
addr16
sbb
push
ljmp
mov
cmpl
mov
rcl
or
dec
sahf
sub
jne
popa
add
fdivr
cmp
outsl
jo
and
push
pandn
lods
das
mov
xor
mov
add
inc
mov
shlb
xor
mov
or
inc
inc
jno
daa
addr16
adc
jno
jb
clc
repnz
outsl
out
and
or
xchg
sbb
inc
adc
cmp
fucomi
jecxz
mov
fwait
lds
and
sbb
inc
xchg
and
sub
ljmp
pop
cmp
repz
or
sbb
lret
and
jae
je,pn
pusha
xor
inc
sub
add
xlat
fldenv
and
int3
in
pop
add
jae
ret
inc
mov
mov
imul
fdiv
sbb
fwait
gs
inc
xchg
daa
or
push
dec
mov
mov
and
fs
imul
jmp
jmp
inc
sbb
ja
and
je
movsb
aad
fsqrt
xchg
jmp
mov
pop
jmp
out
jae
push
incb
mov
add
mov
je
lcall
inc
cmp
sti
leave
fs
mov
mov
mov
mov
mov
xor
ja
ss
jecxz
xor
and
je
in
mov
in
cmp
sub
fimull
jae
ss
xchg
hlt
bnd
add
out
sbbl
divl
adc
cmpsl
ja
push
das
ljmp
movl
cmpb
addr16
sbb
dec
sbb
ljmp
adc
ja
add
jbe
push
inc
jg
xchg
in
loop
cmp
movsb
or
outsl
sti
jge
popf
dec
gs
test
mov
mov
lret
pop
sti
pop
mov
xor
ja
ss
fisttps
stos
pusha
je
in
mov
lret
mov
fdiv
sti
inc
fimull
jae
ss
and
or
cld
les
jle
dec
daa
lods
out
jbe
push
push
jmp
jl
xor
or
mov
jle
adc
jo
or
dec
mov
sub
push
xchg
pop
push
mov
jle
push
imul
push
push
cmp
lcall
add
ljmp
adc
push
jbe
pop
cmpsl
fisubrl
cli
sbb
sysexit
sub
popa
adc
dec
repnz
rcl
in
mov
out
push
stos
ss
fildll
test
je
inc
fxtract
lcall
xchg
jg
add
test
ds
testl
mov
pusha
lock
idivl
jmp
icebp
movsb
add
jne
xor
dec
pop
mov
movsl
movsl
mov
arpl
cmp
cmp
mov
add
adc
sub
insl
cmpsl
jae
outsl
fs
out
ss
push
aad
and
mov
in
loop
or
es
dec
sbb
mov
adc
cmp
push
mov
jno
inc
pop
adc
mov
adc
push
les
xchg
fists
push
scas
js
sbbl
pop
ror
xchg
mov
xchg
push
mov
insl
mov
cmp
repz
loope
ss
jae
shlb
ret
or
das
cmp
mov
cmc
xchg
add
sub
out
les
and
sbb
ret
ds
ret
scas
and
scas
xchg
mov
in
mov
xor
mov
stc
test
xchg
xlat
sbb
push
inc
lds
ljmp
aad
cltd
leave
sub
jg
xor
mov
int
ss
orl
es
jo
addr16
sbb
imul
jp
lds
xchg
or
ret
lods
test
mov
jle
mov
bnd
std
jge
lret
clc
mov
rcrb
cmovp
lock
jns
lcall
int3
xor
pusha
je
mov
push
and
xor
xchg
pushf
jo
mov
in
imulb
xchg
sub
push
mov
outsl
pop
bound
mov
es
sbb
loop
jp
xchg
pushf
popf
es
insb
push
jge
or
xchg
mov
repnz
mov
fnsave
xchg
pop
shll
sti
fists
cmp
mov
inc
inc
xchg
mov
or
pop
outsl
xchg
xor
and
xchg
add
sub
mov
mov
leave
push
in
mov
gs
mov
mov
enter
test
xor
sbb
pop
fbstp
mov
dec
in
cmpsb
and
pop
sub
es
sub
push
and
das
insb
inc
add
loopne
iret
mov
jb
outsl
cmc
mov
ret
sub
adc
or
jne
push
pop
inc
cmp
mov
faddp
push
cmp
push
in
aas
jbe
pop
arpl
movsl
add
xchg
lods
fidivrs
nop
pushf
in
mov
pop
scas
fmul
std
sbb
sahf
inc
xchg
icebp
or
push
sub
sub
jbe
xor
scas
mov
decb
sub
add
ljmp
mov
xor
push
xor
sar
ret
mov
push
sbb
xlat
xorb
scas
into
jmp
mov
negb
jecxz
mov
cmp
pop
inc
jl
stc
enter
xchg
test
inc
sub
inc
dec
push
int
call
lret
movsl
inc
mov
mov
mov
add
mov
push
sub
dec
jl
pop
adc
sbb
pop
pop
enter
push
les
cmp
aas
adc
sbb
dec
sbb
into
movsb
add
xchg
cltd
and
xchg
mov
xor
jb
pop
push
sahf
dec
cmc
jle
fstpt
dec
mov
jge
sahf
pop
or
pop
icebp
in
rorb
xor
mov
adc
xor
aam
or
xchg
jo
cmc
ja
push
xchg
std
inc
insb
repnz
test
adc
adc
pusha
pop
fs
adc
dec
frstor
and
popa
adc
stos
pop
shld
push
rcl
data16
repz
cmpsb
sahf
stc
hlt
inc
cmp
cs
pop
jnp
mov
add
addr16
jl,pn
lahf
subb
jnp
add
push
or
xlat
cmp
subl
insl
adc
or
sbbb
adc
xor
mov
std
push
inc
dec
stc
sbb
or
push
stos
mov
mov
adc
lea
xchg
push
push
xchg
mov
fcomps
int3
adc
adc
popf
dec
xor
xchg
daa
mov
jae
repz
jge
call
cmp
aam
cmp
xor
loop
mov
push
xor
stos
xchg
inc
je
call
fwait
pusha
mov
icebp
xlat
aas
ss
mov
in
fcomps
and
cmp
pop
test
fcmovbe
popa
mov
andb
out
movl
shrl
stos
out
xchg
fdivrs
ret
inc
jbe
mov
enter
fdivrl
lods
pop
xchg
lahf
aad
xor
or
movb
inc
int
xchg
sub
push
sarl
jge
js
mov
add
or
movsb
jae
pop
xchg
mov
sti
add
aad
mov
sub
mov
aad
cwtl
cmp
es
or
leave
cmp
sbb
lret
les
push
js
mov
or
mov
dec
sbb
mov
stos
mov
mov
jl
movsb
enter
jae
xchg
xadd
inc
push
cmp
push
repnz
mov
dec
les
sbb
inc
test
dec
or
daa
rol
or
push
xor
ljmp
in
nop
out
jns
push
out
adc
mov
shlb
push
std
or
rorb
mov
pop
adc
cmp
ljmp
mov
loop
push
rorl
and
and
or
sti
sbbl
sarb
iret
mov
pushf
filds
imul
cs
ds
mov
sbb
inc
test
mov
andl
and
fwait
das
shl
mov
mov
test
pop
outsb
adc
rcl
iret
xchg
mov
outsb
xchg
jg
xor
push
xor
fcom
idivb
aaa
and
jae
sub
mov
mov
idivb
mov
jmp
pop
pop
out
cmpl
shlb
movsl
clc
call
xor
inc
dec
pushl
fs
and
daa
data16
fpatan
push
je
add
cmpsb
add
shrb
cmpsb
leave
xchg
fisubl
inc
fisubrs
imul
sahf
push
push
sbb
push
cmp
or
dec
cmpsb
bswap
mov
int
xchg
enter
pushf
test
stos
mov
loopne
mov
mov
lock
mov
sbb
fwait
sub
ret
aaa
movsl
repnz
orl
fisubs
cmp
bound
ds
iret
inc
inc
lock
dec
push
dec
insl
fldl
leave
sub
adc
scas
push
lock
push
dec
sub
xchg
lds
fwait
adc
repnz
mulb
daa
std
push
jl
add
popf
sbb
lods
mov
and
mov
mov
push
jmp
cmp
je
cli
cltd
fiaddl
dec
cli
icebp
inc
sbb
mov
cmp
nop
fnsave
push
push
mov
js
xchg
imul
hlt
jb
std
pop
pop
cltd
and
in
xchg
pop
jb
pop
out
shrb
inc
pop
loope
data16
inc
das
lods
fidivl
mov
xchg
xchg
and
xchg
inc
inc
orb
or
out
and
mov
fcmovb
lods
cmpsl
adc
cmp
lcall
hlt
out
xor
inc
jne
or
mov
lods
addr16
or
jbe
stos
dec
push
divb
sbb
insb
inc
dec
fadds
aad
testl
out
jmp
pop
jecxz
push
push
scas
loopne
ret
rcll
aas
sub
xorb
sbb
repz
frstor
repnz
jecxz
add
or
lahf
mov
lods
in
xchg
mov
add
push
cwtl
fidivl
push
inc
data16
out
jle
push
loope
sub
mov
sub
add
dec
pop
adcb
dec
xchg
adc
cmp
push
pop
mov
pushf
mov
jg
fsubr
xchg
jnp
addb
push
adc
mov
lods
jne
das
clc
mov
test
adc
xchg
loope
jb
sbb
mov
or
out
push
cmp
pusha
lea
or
cwtl
mov
xor
mov
mov
pop
pop
push
cltd
mov
sbb
push
add
jae
and
pop
jno
or
adc
enter
ja
arpl
push
jp
sbb
mov
jnp
imul
cmp
in
loopne
jecxz
fidivs
add
adc
mov
jle
jbe
lock
or
or
cltd
fmull
push
hlt
outsl
pusha
clc
mov
aad
in
loope
and
cmp
push
adcb
pop
mov
jns
sbb
add
sbb
add
jle
mov
sub
cld
inc
inc
or
cmpsl
js
int3
xorl
aas
ret
hlt
in
add
cmc
cmp
int
faddl
test
jo
inc
sbb
xor
adc
dec
adc
cmc
xor
and
lea
shlb
in
jb,pn
sbb
cmpsl
push
iret
fistpl
lcall
call
sbb
aaa
sbb
push
fmull
jno
lods
add
sbb
out
test
adc
add
inc
scas
mov
jecxz
xchg
nop
xchg
mov
mov
mov
xor
outsb
lahf
fdivl
push
push
orb
cmp
cld
push
xor
loop
mov
sti
sub
clc
adc
inc
add
jp
dec
call
stos
jmp
cld
dec
mov
int
sbb
jge
adc
jns
add
into
std
movsb
sbb
mov
mov
leave
insl
add
roll
mov
pop
push
test
add
insl
pop
cs
xchg
sbb
arpl
cmpsb
cmp
xchg
or
xor
jmp
idivl
dec
xchg
push
in
outsl
adc
adc
push
sbb
mov
mov
lods
and
sub
mov
mov
inc
ss
inc
mov
fstpl
cmp
inc
push
ret
ja
push
jns
dec
and
lret
or
push
imull
mov
pop
test
test
mov
add
mov
sub
push
rcr
out
pushf
inc
sbbb
sarl
ret
mov
jle
mov
leave
and
mov
push
imul
dec
sbb
xchg
dec
xor
and
jp
mov
push
test
pop
dec
mov
andb
sbb
cmpsl
dec
mull
cmpb
mov
push
mov
jle
cmpb
adc
xchg
popf
stos
cmp
dec
repz
shlb
stc
cmp
repnz
repz
ss
lcall
pushl
lds
pop
pusha
int
sbb
or
js
fcmovbe
shrb
cs
mov
and
cmp
in
fs
ljmp
push
test
pop
adc
mov
sbb
mov
push
mov
push
enter
cmp
or
data16
daa
jb
sub
inc
ret
sub
in
inc
push
test
jns
and
mov
shlb
outsb
pop
aaa
mov
scas
and
in
pusha
in
sar
adc
std
sbb
mov
xorb
push
out
adc
xchg
pop
lret
loopne
sbb
push
xchg
mov
orb
test
inc
push
nop
fs
rolb
xchg
jge
mov
sbb
cmpsl
dec
mull
cmpb
xchg
std
sbb
lods
clc
aam
jbe
or
xchg
mov
push
ret
sub
inc
xchg
or
outsb
iret
leave
lock
dec
dec
mov
notl
cli
loope
mov
pop
jle
cltd
dec
cmpsl
sbb
int3
xor
lret
gs
pop
out
mov
iret
mov
filds
scas
loop
out
push
push
jle
cmp
add
pop
and
mov
outsl
pop
outsb
mov
arpl
ficoml
jns
add
fcoms
outsl
shlb
pop
dec
adc
sbb
mov
es
pop
cli
pop
cmc
mov
loope
std
nop
cmp
cmp
pop
or
jp
cmp
cmpsb
fwait
int
dec
shr
into
lock
in
fs
jecxz
cmpsb
xor
fidivl
and
in
xor
inc
lods
mov
in
sub
cmp
loopne
fstps
addr16
mov
in
loop
mov
andl
pop
and
rcr
pop
adc
inc
lret
mov
cmp
ret
add
sub
aam
and
or
insb
lcall
fs
add
adc
aas
xchg
jmp
jbe
lods
sub
inc
jo
shrb
pusha
rcr
mov
push
test
xchg
sbb
push
sbb
pusha
xchg
add
inc
pushf
or
cmp
daa
add
lods
enter
push
hlt
addr16
adc
and
leave
fbstp
mov
cmpsb
pop
push
rorl
cmp
sbb
jno
sbb
lret
push
dec
ficoms
push
je
sub
shr
repz
add
jne
push
push
cs
sarl
inc
xlat
fidivl
and
mov
push
dec
cld
pop
mov
jle
outsl
stos
in
mov
sub
insb
cltd
mov
jnp
mov
ficoms
xchg
in
fs
cmp
add
lret
ficompl
lret
push
xchg
jns
je
out
push
and
dec
jmp
bound
cmpsl
mov
outsl
arpl
sbb
cmp
je
xor
cli
out
ja
insb
cmc
iret
ret
or
cmp
jns
add
ficoms
out
xchg
lods
enter
push
outsb
add
test
push
aad
leave
fbstp
mov
leave
cmp
lahf
sar
sbb
jb
jno
mov
adc
push
add
je
sub
shr
into
lock
in
fs
jno
mov
das
fidivl
add
fidivl
and
in
xor
inc
lods
pusha
fs
mov
pusha
push
call
insb
adc
fldcw
ljmp
mov
in
loop
dec
shlb
jb
sbb
les
adc
es
scas
rcr
pop
adc
and
cmp
cmp
decb
xlat
mov
mov
pop
std
pusha
mov
and
and
loopne
or
shl
outsl
mov
jae
cltd
test
jne
movsl
cld
or
xor
and
xchg
lcall
mov
jecxz
in
or
repnz
xchg
setg
sub
jecxz
insb
push
push
cmpl
mov
fwait
aad
lret
sahf
pop
loopne
jnp
testl
lcall
inc
mov
xor
adc
xor
fs
dec
fsubrs
mov
loop
adc
jge
popa
nop
ss
mov
mov
mov
mov
mov
pop
data16
add
aas
pop
and
mov
scas
sbb
dec
xchg
mov
mov
push
and
popa
insl
das
fs
add
aas
enter
or
adc
aaa
mov
popl
or
in
mov
in
lcall
or
and
cmp
pop
or
bound
iret
inc
loop
and
out
clc
rolb
out
out
dec
rorl
xorb
pusha
aas
add
jbe
pop
sub
imul
insb
xor
cmp
outsb
mov
insl
cmp
dec
mov
ret
test
popf
int3
pop
lcall
xchg
outsb
movsl
dec
add
jae
in
out
jl
xor
int
or
lods
jge
add
frstor
mov
jmp
sub
add
cmp
mov
mov
ss
dec
add
or
imulb
mov
adc
in
push
ja
adc
rorb
push
test
pop
xchg
daa
jo
stc
xchg
test
mov
cmpsl
cmp
sbb
jecxz
dec
xchg
sbb
mov
aad
xor
testb
add
or
fs
add
insb
jne
ds
addr16
adc
repz
jmp
in
push
jae
pop
or
xor
pop
mov
add
and
shll
les
inc
enter
ret
gs
mov
js
or
loop
idiv
stos
movsl
outsl
mov
lods
loopne
push
fs
sahf
stos
dec
jge
test
or
pop
jns
cmc
mov
cld
out
mov
call
sub
ljmp
mov
in
cmpsl
stos
es
js
ljmp
ja
out
pop
test
repz
pop
div
or
pop
js
xchg
pop
lcall
fcos
decw
lahf
test
jle
mov
in
cmp
leave
ljmp
jl
mov
inc
adc
fs
ds
out
out
push
pop
outsl
fistl
inc
cmpsl
mov
or
inc
cmpsb
xchg
and
jns
sub
jno
push
inc
jne
xchg
inc
cmp
pop
call
idivb
out
test
adc
fcmovne
das
add
pop
cmp
push
fcomi
mov
mov
orl
cmp
sbb
mov
add
and
rorl
add
fisttpll
adc
push
fadds
sbb
lods
mov
enter
or
or
sbb
bound
jecxz
insl
aaa
rorl
xor
lea
lahf
shl
add
xchg
push
and
movsb
lods
and
dec
jg
test
mov
cmp
and
push
inc
sub
leave
scas
inc
negl
jo
in
xchg
adc
and
push
xchg
add
cmpsl
or
sbb
push
mov
jp
sub
ret
ret
pushf
mov
test
popf
mov
and
adc
jae
lods
add
add
popf
xor
sbb
out
movsb
push
push
inc
dec
sbb
or
push
clc
and
movsb
lods
lods
out
mov
jle
andl
fwait
xor
sbb
js
shll
and
jno
pop
lcall
inc
jge
jno
scas
pop
loop
sti
mov
lea
jo
dec
callw
dec
jmp
add
daa
cmp
fbld
or
mov
sbb
pusha
dec
or
jo
in
mov
mov
and
lcall
adc
cmp
inc
push
fs
pop
mov
lret
jb
push
lock
leave
fnstcw
sbb
mov
mov
out
mov
sbb
dec
cltd
sub
or
or
cmp
mov
lahf
sub
lods
fwait
and
jbe
jp
push
outsb
cltd
cmp
mov
dec
sbb
jbe
jnp
fcmovu
jbe
dec
in
xchg
inc
fcompl
cwtl
push
test
pop
neg
jmp
xor
fnsave
andl
int
mov
in
ljmp
xlat
xlat
out
pusha
fildll
imul
push
das
or
shl
or
and
repz
mov
ss
outsl
sti
sbb
adc
cmc
jae
fisttpl
in
imul
sti
movsl
outsl
je
push
add
loope
insl
inc
mov
sbb
or
pop
pusha
push
jne
sbb
lcall
dec
sub
add
and
sub
pop
mov
adc
outsl
lea
and
sbb
repnz
or
fstps
mov
inc
push
push
push
mov
aad
xor
int3
adc
and
mov
cmp
popf
inc
adc
addb
mov
xchg
movsl
lods
and
dec
xor
icebp
out
add
mov
aam
adc
stos
pop
stc
inc
fwait
jmp
les
popf
addr16
dec
enter
jns
cmp
push
xor
xor
notl
sahf
mov
mov
mov
cltd
jle
mov
mov
sbb
shlb
adc
push
mov
mov
ds
xchg
lcall
push
sub
xor
gs
xor
aad
std
leave
push
push
out
stc
cld
cmp
sbb
dec
mov
sarl
outsb
subl
add
in
loopne
filds
jb
xor
mov
pop
xor
mov
sub
cld
pop
movsl
enter
add
fcmove
fistps
jle
dec
sub
dec
pop
test
fisttps
adc
or
bound
roll
into
sub
fstl
or
jne
mov
pop
mov
inc
inc
mov
sahf
inc
pop
sti
fsubr
imul
push
imul
icebp
rolb
push
int3
mov
roll
divl
repz
jp
mov
pop
add
cmp
mov
fbstp
aas
push
and
mov
ror
imul
flds
sub
insl
mov
ds
sub
leave
icebp
iret
in
adc
outsl
sti
pop
or
cmpsl
cmp
xor
push
sbb
sub
jns
in
or
push
pop
cmp
lahf
ja
je
fbstp
xor
ret
and
and
jns
sub
or
jg
test
out
dec
xchg
ret
add
loopne
mov
jecxz
data16
push
inc
pop
test
push
mov
adc
es
hlt
cwtl
std
cmpsl
lret
sub
inc
inc
dec
mov
xchg
pop
shr
incb
rcl
lahf
or
scas
loopne
pop
arpl
cmp
lods
into
cmp
inc
add
aam
mov
cmp
out
shlb
scas
sarl
fisubrl
hlt
in
mov
mov
mov
pop
add
inc
and
in
loopne
adc
sub
fistl
push
loop
inc
xchg
add
out
jp
gs
push
out
pop
stos
jne
inc
stos
adc
lea
data16
ja
cmpsl
jge
mov
pop
aaa
test
aas
sbb
cli
mov
xor
mov
js
xchg
dec
mov
xchg
lret
lret
std
sahf
rcr
aam
push
sub
mov
jae
pop
sbb
addb
pop
scas
and
jmp
mulb
pop
xor
pop
das
or
mov
notb
bound
cmp
dec
dec
ja
dec
clc
jns
dec
push
inc
mull
in
push
scas
pop
inc
shll
inc
xchg
es
inc
insb
mov
aas
jg
test
ss
adc
lock
mov
push
adc
mov
addl
dec
push
jo
jmp
and
test
cmp
mov
lret
cltd
push
insb
sbb
push
mov
fisubs
aam
nop
xchg
and
icebp
loop
shrb
hlt
loopne
stos
cmc
or
push
sub
mov
jle
jge
jo
bound
pop
push
mov
inc
push
mov
sbb
test
adc
mov
popa
cmp
or
jne
test
divl
pop
aaa
cmpsl
adc
mov
inc
popf
adc
xchg
mov
scas
and
test
imul
inc
push
daa
cmp
test
popa
pop
jg
movsl
nop
push
and
stos
mov
push
das
sbb
push
xchg
leave
sbb
enter
bound
shl
jecxz
mov
lahf
jnp
xor
push
mov
cmp
movsb
aam
jge
add
inc
jmp
dec
inc
and
ja
mov
inc
pop
or
adc
dec
push
stos
gs
push
shll
push
les
outsb
sbb
clc
insl
cmpsl
std
push
adc
iret
fcompl
imulb
mov
mov
repnz
jmp
mov
popa
call
push
out
mov
dec
arpl
or
or
xchg
or
sub
sub
inc
fs
jns
jge
push
loope
pop
xchg
sarb
pop
pop
cmp
shr
mov
push
es
xlat
loop
xchg
sub
gs
mov
add
out
das
dec
imul
push
mov
inc
sbb
push
fnstsw
rcrl
dec
mov
xor
push
adc
and
xor
jl
pop
insl
push
adc
popf
adc
aad
out
pop
in
xor
jl
fnstsw
mov
loop
xchg
inc
pop
add
xchg
xchg
xor
jl
and
xor
dec
mov
or
mov
and
lcall
adc
pop
cld
and
sbb
or
or
add
jbe
xchg
mov
adc
rclb
push
pop
out
mov
jne
insb
dec
fisttpll
xchg
lahf
lods
int
mov
jae
shll
and
addb
out
jae
sbb
xor
imul
jae
orl
mov
dec
dec
leave
fs
push
mov
xlat
fst
out
lret
adc
sbb
sbb
cwtl
call
jnp
mov
push
sti
mov
cs
add
jno
mov
mov
push
stos
dec
pop
enter
mov
pop
fisubl
inc
dec
repnz
mov
sbb
incl
pop
movsl
loope
adc
or
divb
dec
call
stos
cmpsb
xor
or
xor
frstor
lahf
das
xor
int3
mov
and
mov
addl
lcall
nop
jnp
xor
test
subl
mov
cmc
ss
inc
mov
cld
cmp
mov
mov
iret
inc
push
aad
test
push
ret
dec
andb
or
xchg
add
sbbl
loope
or
xor
addr16
adc
mov
pop
xor
aad
xor
call
popa
ret
inc
add
sub
sbb
iret
ljmp
cmp
sub
daa
cmp
dec
ds
push
fstpl
repnz
jmp
dec
jge
call
fclex
les
inc
insb
divb
add
ja
cmp
jne
mov
adc
and
out
sub
mov
mov
mov
jmp
fmull
pop
jmp
aad
mov
in
loop
les
test
jno
call
cmp
aaa
push
jp
ficomps
xchg
mov
mov
adc
bound
scas
jnp
idivb
cmp
popa
cmpsb
sbb
inc
fwait
lret
sbb
and
movsl
repnz
fwait
fwait
lds
mov
dec
pop
mov
xchg
adc
ret
xchg
adc
pop
lcall
or
jo
movsl
push
shr
push
cmp
push
cmpsb
hlt
xchg
in
sub
mov
pusha
or
test
out
cli
jne
xchg
pushf
movsl
shlb
mov
lea
xchg
fstpt
ja
pop
aaa
lea
stos
pop
or
push
in
pop
fmul
roll
ljmp
mov
leave
or
sub
pop
mov
pop
mov
xor
int3
mov
loopne
bound
mov
mov
jb
test
lret
ret
mov
cmp
imul
pop
fbld
sub
leave
inc
mov
push
pop
and
sbb
inc
repnz
push
sbb
sbb
fimull
repnz
outsl
pop
inc
jmp
and
push
mov
insl
pop
popf
mov
or
mov
fbld
push
cmp
mov
mov
cmp
pop
cli
jns
inc
cwtl
pop
cld
mov
sarb
dec
sbbl
push
jg
enter
arpl
decl
xor
add
add
in
sub
scas
cmp
in
dec
cmp
pusha
and
rclb
scas
jg
cmp
push
iret
mov
std
adc
je
xor
mov
add
mov
gs
jnp
sbb
scas
mov
cli
mov
ret
stos
dec
mov
int3
nop
shrb
jp
pop
pop
mov
sbb
and
push
lahf
jb
dec
out
test
mov
mov
stc
sub
push
mov
lods
fmul
mov
and
or
cmpsb
sub
xor
mov
aaa
cmp
push
mov
add
jmp
out
subl
xchg
mov
adc
hlt
inc
leave
mov
jecxz
hlt
mov
lea
mov
push
and
dec
adc
bound
add
or
jb
addr16
mov
jle
push
out
adcl
mov
mov
vmovaps
adc
xor
mov
mov
jae
mov
cld
sbb
sbb
cmp
dec
or
mov
bound
dec
cs
cmp
mov
sub
pop
dec
cmc
popf
stos
dec
dec
sbbl
jae
in
inc
dec
cwtl
mov
pop
jo
cmpsl
outsb
stc
mov
mov
ret
push
pop
ret
cmp
rcrl
adc
add
jg
repz
imul
adc
movsb
inc
adc
or
sub
cwtl
mov
adc
cli
and
and
push
and
xchg
sahf
pop
stc
roll
fwait
roll
imul
cmpl
mov
mov
mov
mov
repz
and
insb
jo
movsb
or
mov
sub
pop
jp
jo
repnz
jne
xor
dec
loop
cmp
pop
pop
rclb
leave
cmpsl
mull
lods
enter
js
cmp
aaa
les
jmp
test
mov
cs
stos
cmp
int
loop
mov
pop
add
fimull
mov
shlb
repnz
js
arpl
jl
call
cmp
and
stos
cltd
cmp
cmpsl
popf
mov
and
rorl
cmpsl
sbb
xchg
or
jmp
nop
pop
popf
xorl
testb
adc
mov
mov
mov
jbe
adc
or
or
pop
pop
push
lods
mov
and
in
add
lods
sbb
sbb
lret
insl
nop
je
pop
push
adc
idivl
pop
mov
repz
std
cwtl
shl
pop
mov
lock
and
outsb
jne
add
mov
sbb
loop
imul
pop
adcl
mov
pop
jb
pop
jl
xlat
out
mov
loop
dec
imul
loop
fdivs
mov
dec
mov
mov
shll
loop
inc
lods
mov
jp,pn
add
out
push
stos
fisubl
mov
outsl
adc
aad
icebp
inc
or
aaa
fldcw
jp
pop
inc
int3
jmp
in
aaa
mov
das
imulb
loopne
xchg
mov
sbb
mov
sub
sti
jne
push
push
inc
sub
mov
mov
call
shlb
jno
jp
xchg
and
fidivs
dec
sbb
push
fimull
pop
sbb
in
or
shrl
mov
scas
inc
loope
cmp
mov
inc
pop
add
jne
inc
jbe
shlb
sub
dec
sub
mov
and
mov
cmp
inc
cmpsl
push
ja
adc
sbb
pop
lock
mov
push
lahf
aam
jge
xchg
push
lds
je
mov
mov
clc
pop
pushl
sbb
xchg
out
mov
inc
mov
adc
inc
fsts
mov
add
cmpsb
test
fcomps
push
fstl
lods
jbe
push
fldcw
pop
inc
scas
or
jl
push
clc
sub
jl
push
mov
lahf
ss
loop
fiadds
je
mov
shl
ret
inc
sub
xchg
pop
testb
xchg
popa
sbb
sbbl
inc
mov
hlt
push
icebp
jns
aas
pusha
mov
fsubrl
adc
ja
daa
push
mov
cmc
mov
mov
inc
mov
push
jne,pt
ds
xor
dec
cmp
adc
jno
stc
aad
out
mov
in
int
mov
and
aaa
leave
xchg
cld
mov
mov
and
xchg
mov
mov
ja
dec
push
hlt
int
and
imul
iret
dec
pop
cmp
into
sbb
stc
push
sti
adc
mov
and
adc
adc
bound
xchg
xchg
sub
jne
lret
pop
sahf
mov
out
loope
mov
test
jne
pop
dec
mov
jns
mov
leave
mov
jecxz
pop
insb
stos
dec
aam
mov
mov
inc
mov
mov
call
icebp
cli
xchg
jle
xchg
jns
jmp
into
add
incb
ret
push
bnd
popa
int
in
add
fiaddl
rorb
addr16
cltd
xor
sbb
aam
cmpsb
into
push
dec
push
push
fbstp
mov
std
mov
add
mov
outsl
xchg
nop
stos
cmpsb
hlt
mov
shll
rorl
insl
cmpsl
sub
imul
jns
aas
push
jmp
fbstp
outsl
sbb
xor
and
das
inc
sub
stc
jnp
pop
dec
call
and
div
push
repnz
or
jmp
jmp
push
sti
and
daa
jge
inc
mov
ja
cmp
adc
jmp
pop
xchg
mov
mov
pop
pushw
repz
mov
jno
popa
pop
pop
add
push
and
mov
jecxz
pop
xchg
pusha
shll
scas
addb
sub
xor
scas
inc
adc
jns
daa
push
jg
js
mov
mov
jno
add
cltd
pop
fidivs
pop
jno
pop
cwtl
test
and
push
rcll
subb
outsb
sub
xlat
sbb
jl
cli
cmp
jnp
mov
sub
pop
push
mov
sub
ret
imul
rcr
mov
repnz
testb
rorb
adc
push
xor
pop
xchg
data16
push
and
dec
sbb
mov
dec
pop
lea
push
lds
fsts
aas
mov
jp
pop
inc
int3
jmp
in
aaa
mov
das
pop
xchg
int
sub
sbb
mov
cli
jg
loope
mov
mov
loope
stc
addr16
cld
fcmovb
xor
add
fwait
nop
cmpsb
cmp
adc
cmp
jmp
imul
fsubrl
imul
pusha
lock
mov
gs
mov
ljmp
mov
jl
pop
daa
cltd
sbb
lea
dec
mov
fsubrs
int3
out
push
mov
xchg
push
xchg
je
bound
cli
pop
loopne
dec
mov
stos
pop
mulps
loop
pop
iret
pop
cmpsl
jle
push
cld
sbb
dec
adc
jecxz
or
mov
pop
lea
jne
das
xchg
cli
dec
insb
pop
outsb
xchg
stos
out
pop
and
std
leave
cmp
outsl
fwait
cmc
in
repnz
add
sbb
jo
clc
xor
mov
scas
cmp
pop
mov
adc
stc
push
and
or
or
adc
roll
add
jo
xor
pop
sbb
xchg
mov
es
xchg
inc
loop
and
lret
push
add
mov
jle
stc
sub
push
pop
fwait
cmp
cmp
jge
mov
mov
lret
jp
loop
ja
adc
inc
cmp
add
sbb
pop
jns
popa
mov
ds
loope
jo
setge
ss
sbb
jnp
jmp
lcall
scas
adc
repz
push
mov
pop
inc
int3
xchg
push
lret
mov
push
cmpl
mov
mov
or
pop
sbb
fbstp
pop
aas
inc
scas
icebp
bnd
cmpl
jmp
push
int
add
out
enter
clc
sub
aad
push
dec
arpl
mov
mov
sub
bound
adc
daa
lcall
gs
js
sub
fadds
das
xorb
push
clc
adc
or
scas
daa
imul
and
pop
adc
iret
or
push
sbb
in
push
mov
xor
and
aad
out
fsts
aas
sbb
push
fsubrs
inc
mov
das
loope
les
lds
aam
mov
loopne
xchg
adc
dec
inc
lock
fs
xchg
and
popa
out
cmpsl
lods
sub
push
in
add
js
bound
cmpl
jp
mov
fs
push
inc
dec
adc
and
mov
outsb
scas
pop
subb
cmc
xor
and
bound
fwait
cwtl
stos
push
ret
dec
xor
cmp
rcl
xchg
adc
sub
xchg
pusha
dec
xchg
clc
pop
jecxz
repnz
sub
cld
repz
jmp
popa
sbb
out
and
and
rol
in
shrl
mov
inc
out
ljmp
rcll
arpl
cmpsb
icebp
nop
pop
daa
dec
sbb
pinsrw
ja
and
testl
jle
mov
enter
sbb
push
add
es
mov
pop
lea
cltd
out
add
push
outsl
rcll
mov
push
fmul
mov
jb
int3
inc
sbb
pop
lds
xchg
addr16
inc
sti
js
push
outsl
pop
add
xor
test
out
or
inc
lahf
jns
pop
lods
loope
add
icebp
pop
jle
cmpsb
pop
add
jmp
pop
imul
int
movsb
test
lds
je
pop
scas
idiv
negb
cs
jl
cld
fidivrl
mov
test
jp
ret
inc
push
xor
mov
add
fwait
mov
inc
mov
iret
sub
call
stc
addl
or
sub
or
mov
js
and
or
sbb
fsub
push
out
jecxz
neg
pop
sbbb
cmpb
push
push
in
push
ret
pop
and
inc
int
jns
outsl
pop
sbbl
mov
cmpsb
loop
jb
jmp
mov
push
ja
inc
cmp
mov
sti
jl
dec
push
test
xor
jmp
lahf
aas
pop
sahf
out
pop
cmp
mov
and
jno,pt
roll
push
scas
or
inc
xchg
xchg
arpl
in
inc
frstor
add
mov
pusha
ljmp
fisubrs
jbe
mov
cmp
inc
mov
sbb
decl
mov
aad
rcrb
dec
pop
lret
lods
xchg
insb
pop
mov
pop
inc
sbb
mov
out
mov
jmp
testl
lcall
jp
xchg
mov
std
pop
sbb
sub
out
push
arpl
and
fs
pop
hlt
fidivs
sbb
mov
arpl
jbe
cmc
and
sub
test
fisubrs
xchg
notl
cli
les
xchg
sub
or
shll
pop
adc
in
cmp
pushf
mov
lods
repz
int
mov
dec
mov
fsubrl
cmp
js
mov
in
cmp
push
cltd
cmp
mov
orb
lods
pop
fdivs
adc
mov
sbb
lret
xchg
aam
xchg
outsl
loopne
jae
mov
xchg
out
mov
jbe
add
push
cmpsb
sar
adc
ljmp
push
in
stos
jae
lahf
addb
sbbb
push
mov
aas
xor
pop
and
dec
or
or
gs
sti
cmp
or
aas
sub
jno
xchg
jp
jg
mov
adc
lock
push
cmpsb
cld
in
add
fsub
mov
cmc
ds
popa
mov
test
outsl
cli
adc
daa
push
ficompl
sarb
push
cmc
mov
movsl
mov
outsb
lret
addl
push
push
sub
jno
dec
xchg
push
dec
xlat
jle
ret
mov
out
imul
sbb
adcb
push
stc
mov
xor
and
idivb
pop
test
jns
out
shll
sub
cmc
inc
rcl
fs
clc
sub
mov
mov
fwait
inc
jecxz
pop
push
in
push
in
inc
mov
dec
pop
sub
pop
lcall
cmp
jl
sbb
mov
pop
fdivrp
push
push
jg
dec
lcall
into
popf
xlat
add
repnz
cmp
out
and
push
bound
test
or
inc
imul
cli
cltd
mov
ficoml
cli
xchg
pushf
and
mov
pop
sub
jns
stos
xchg
jns
cld
jge
js
sub
jns
adc
or
adc
js
pop
xor
rcll
scas
mov
xchg
ja
ja
dec
dec
lea
jecxz
mov
or
add
lods
ja
les
or
cli
nop
fistl
std
js
hlt
dec
jae
pop
clc
punpckhdq
test
mov
mov
ret
popa
add
sahf
idiv
test
xor
and
push
or
pop
push
daa
push
les
jne
out
pusha
xchg
adc
fnstcw
ja
jp
pop
or
xor
dec
aas
stc
js
outsb
xchg
imul
push
iret
bound
inc
sbb
and
aad
mov
pop
push
cmpsl
insb
sarb
lahf
outsb
mov
pop
mov
and
dec
test
int3
shll
dec
dec
sti
pop
aas
ja
sahf
mov
mov
push
pusha
stos
mov
jecxz
punpckhdq
push
sub
inc
stos
iret
mov
aad
sbbl
jae
sbb
pop
sub
fildll
setb
ljmp
inc
lods
sbb
dec
bnd
je
nop
and
pop
dec
andb
fiaddl
inc
push
das
adc
cs
dec
mov
adc
jo
adc
and
arpl
roll
jns
aaa
jo
call
xchg
jno
leave
mov
scas
mov
decl
andl
out
ret
pop
lret
ss
jl
fistpll
xchg
jns
sbb
loopne
fnstenv
push
insl
adc
insb
and
addr16
cwtl
or
mov
mov
push
pop
push
mov
xchg
adc
paddusw
popf
mov
and
imul
data16
outsb
imulb
inc
pop
jb
mov
scas
adc
shll
and
scas
negl
xchg
pop
orl
cmpsl
movsb
dec
les
inc
pop
or
xchg
jecxz
xor
adc
jg
ret
out
lods
clc
cli
adc
popa
dec
out
rorb
lahf
in
testb
int3
lods
mov
sub
sbb
out
outsl
dec
jp
je
test
pushf
mov
inc
mov
mov
bswap
add
popf
and
into
and
mov
xlat
ret
ja
jmp
sbb
cld
ret
mov
cmpsb
jne
mov
sbb
test
xor
mov
repz
push
int3
pop
into
push
insb
and
jle
add
sbb
cmp
mov
inc
mov
pop
insl
insl
mov
sub
out
sbb
pushl
incb
aaa
xlat
adcb
inc
mov
mov
in
xchg
sub
decl
jl
out
fbld
cwtl
shlb
sub
xchg
stc
fistpll
outsl
jb
mov
shrl
adc
call
lods
add
insl
push
icebp
mov
add
adc
stc
cmp
pop
mul
movsl
xchg
push
mov
rclb
xchg
shrb
or
imul
stos
xchg
jno
insb
jle
fs
sbb
vmwrite
movsl
jge
insb
push
into
lret
adc
push
sbb
mov
mov
mov
xchg
mov
leave
adc
in
push
or
mov
frstor
dec
stos
xor
pop
xor
imul
mov
mov
mov
jmp
sti
lds
lock
sbb
jno
sub
sub
or
mov
stc
data16
stc
pop
dec
repz
outsl
rcrb
and
pushw
daa
and
int3
pop
enter
push
imul
inc
cld
ret
in
test
inc
cmpsb
push
xor
fsubrp
leave
cmpsb
jno
adc
dec
fildll
adc
movb
xchg
xor
cmp
push
lods
push
inc
cmp
mov
repnz
mov
jbe
arpl
xchg
dec
mul
shlb
adc
stc
and
pushl
cmpsl
mov
dec
push
jb
data16
rcr
mov
jmp
xor
xor
xchg
stos
dec
call
mov
inc
add
mov
push
xor
add
xor
std
add
or
sbb
lds
and
js
mov
push
xor
pop
outsb
filds
cmp
xor
add
sbb
xlat
cld
mov
mov
insb
ret
icebp
mov
adc
js
ret
cmp
leave
cwtl
fiadds
adc
or
pop
aaa
fnop
insl
xlat
push
daa
fwait
or
sti
lds
in
jp
icebp
js
fcoms
loopne
pop
xchg
ds
pop
test
rcll
xlat
sarl
xchg
mov
and
pop
push
inc
out
push
add
test
and
dec
loope
pop
cs
jbe
sbb
enter
cltd
stos
enter
push
mov
mov
daa
fimull
repnz
fidivrl
mov
pusha
dec
ds
sub
daa
cltd
mov
loopne
test
xchg
sbb
orb
leave
mov
adc
pop
push
in
lcall
pushf
inc
sub
add
mov
inc
cmpsb
xchg
xchg
in
xor
ds
arpl
into
mov
add
cmc
test
jbe
arpl
jnp
pop
aas
inc
mov
mov
movl
inc
shr
lods
xor
fisubl
popf
push
imul
cwtl
or
xchg
int
jge
dec
imul
sub
aad
pushf
sub
fdivr
xor
xchg
and
imul
or
cmpsl
push
fdivl
push
mov
sub
arpl
mov
ret
vhsubpd
cli
xchg
dec
xchg
xor
icebp
fwait
call
xor
out
dec
test
ret
data16
mov
push
insl
xor
add
sub
push
jne
jmp
mov
lods
sub
bnd
outsl
or
ljmp
das
or
data16
mov
fs
cmp
incb
sub
daa
push
int3
cmp
push
mov
lods
mov
mov
insb
movsl
addr16
es
jno
mov
leave
cli
in
repz
int3
push
jp
sbb
insl
insl
testl
xor
or
sub
mov
jle
mov
mov
mov
pop
sarl
or
mov
mov
sbb
pop
add
call
xchg
inc
xor
gs
sub
test
mov
adc
cmc
mov
out
mov
pushf
aam
and
mov
push
mov
mull
lds
mov
stc
inc
jb
outsl
or
dec
add
fsts
xchg
adc
sbb
mov
jl
sar
out
jnp
lret
push
adc
sub
xchg
mov
mov
and
fwait
repz
sub
cmpsl
ja
jo,pt
sbb
push
pop
lock
push
or
adc
ds
dec
les
push
das
and
ret
cmp
sbb
bound
mov
vpsrlw
dec
add
jne
ret
outsl
fmull
xchg
adc
fsubl
fnstsw
sahf
stc
jbe
xor
mov
rclb
lds
sub
arpl
iret
data16
xchg
fwait
xor
push
leave
leave
ret
daa
lret
leave
ljmp
pop
adc
in
add
xor
push
dec
fisubl
pop
lahf
scas
and
test
ret
mov
leave
sub
xchg
ss
xorl
cmp
jns
insl
xor
mov
jo
xchg
sarb
aam
mov
ljmp
in
push
dec
ss
cmp
lods
int3
mov
idiv
push
xor
in
ss
test
xor
mov
rol
push
into
dec
xor
jp
mov
out
test
mov
sbb
aad
ret
sbb
xchg
lret
dec
cmc
inc
jae
inc
or
imul
push
inc
fnop
je
test
inc
add
jge
ljmp
xchg
adc
mov
ja
mov
sbb
jnp
fiaddl
dec
push
or
dec
xchg
xlat
ret
xor
in
inc
stos
call
lcall
daa
cmp
clc
js
xchg
or
mov
adc
outsb
jmp
xchg
dec
loop
jmp
inc
lret
mov
and
arpl
cwtl
je
fsubl
cltd
push
ss
out
leave
push
pop
pop
push
dec
pusha
repnz
sub
in
std
pop
imul
inc
lock
xor
xlat
mov
dec
sbb
pop
ds
lods
jo
out
fs
std
sub
and
sub
inc
ret
mov
dec
outsb
aam
xchg
push
dec
xor
stos
jnp
scas
jecxz
movsb
ja
add
aas
sub
mov
mov
imul
inc
sti
adc
rorl
jb
out
js
mov
lea
leave
popf
int
enter
repnz
and
adc
test
sub
rcrb
subl
mov
fcomps
mov
xchg
mov
test
push
or
in
push
mov
cmp
inc
mov
dec
mov
loope
imul
stc
sbb
dec
jge
sbb
iretw
inc
sarb
subb
xchg
pop
enter
bound
das
mov
cmp
cltd
or
dec
adc
jl
jle
lea
dec
fiadds
xchg
cmp
adc
stc
loope
daa
test
ss
jbe
scas
cmp
cmp
nop
nop
divb
fldcw
test
fildll
cs
push
pop
and
add
xor
mov
sub
or
push
loopne
addr16
loope
mov
cli
imul
push
sbbl
and
sbb
stos
movsb
lahf
adc
push
pop
mov
addb
sub
sub
xchg
in
test
stos
pop
pushl
push
mov
mov
xchg
insl
cmp
insl
out
ret
sbb
xchg
punpckldq
inc
pushf
stc
stc
push
jmp
ficompl
cmc
cli
std
cmp
mov
jp
orb
cli
adc
fstps
pop
inc
call
shlb
out
lods
pop
sarl
lret
add
ficoml
add
fs
out
adc
jns
daa
in
pop
sbb
out
adcb
aad
jns
jmp
mov
or
inc
jae
retw
iret
pusha
lods
outsb
fistl
pop
call
movsl
jge
pop
push
inc
rcrl
xor
inc
jecxz
or
iret
testb
sub
pop
sbb
movsl
add
mov
je
cld
or
cltd
mov
jecxz
xlat
pop
mov
dec
dec
dec
rcr
es
sub
out
icebp
cltd
push
ds
mov
ss
int
mov
mov
out
xchg
jl
adc
test
test
adc
pop
or
inc
cmc
dec
hlt
rorl
fwait
mov
cmp
cmp
cmp
in
xchg
jmp
push
jp
aaa
pop
and
adc
sub
mov
lcall
js
sbb
pop
jne
filds
mov
rorl
call
inc
iret
xchg
add
mov
mov
lock
into
sub
cmpsl
xor
and
cmp
push
aaa
sbbb
js
orb
scas
scas
fisubrs
flds
sbb
ljmp
inc
jmp
outsb
les
fisubrl
pop
push
mov
out
jno
test
daa
fstp
lret
loopne
gs
push
shrl
rorb
mov
inc
sub
ror
xchg
and
sbb
icebp
repnz
cmp
movsl
jno
shrl
stos
cld
push
outsl
scas
cwtl
in
inc
xor
shrb
or
ja
sbb
fwait
sti
scas
pop
insl
sahf
ja
xchg
lahf
in
mov
testb
lret
cmpb
push
adc
inc
popa
xchg
aam
aas
cmpsl
cmp
or
cmpb
leave
aad
mov
adc
sbb
push
xchg
fcomip
mov
js
jge
bound
sub
or
jbe
jmp
in
roll
xchg
test
in
xorb
jmp
loope
and
mov
push
mov
sub
incl
pushf
es
outsl
jge
cmp
in
pop
mov
arpl
testl
cmp
leave
ss
xchg
adc
ss
pop
je
sub
shll
adc
xor
mov
mov
sbb
push
ja
daa
pop
fadds
xchg
fisttpll
cvtps2pi
inc
dec
add
jl
and
popa
iret
mov
mov
jecxz
mov
mov
dec
movsl
hlt
xor
and
push
mov
out
cmp
push
xor
add
loope
push
jmp
cmc
pop
out
push
je
mov
sti
aad
mov
into
test
enter
add
inc
in
push
lcall
adc
jnp
pop
xchg
or
mov
inc
xor
pop
push
iret
gs
aam
shrb
jnp
mov
and
in
outsl
dec
cmpsb
and
int3
mov
out
rolb
lock
or
inc
jns
int3
mov
ja
mov
negb
inc
dec
rcl
jo
sbb
xlat
add
int
arpl
pop
ret
mov
xor
arpl
das
xlat
inc
adc
mov
mov
dec
aad
aas
addr16
push
mov
clc
je
mov
test
xor
add
adc
mov
fnstsw
mov
xor
lods
leave
stos
icebp
incl
jmp
push
sub
gs
scas
xor
rol
dec
ret
gs
scas
jns
loopne
sub
jae
xor
sub
aas
das
fsubrl
ja
ret
mov
jne
stos
data16
in
mov
push
mov
das
aaa
outsl
les
xchg
sbb
imul
cmp
pop
pushf
and
xchg
es
fldcw
jo
repz
lea
mov
daa
cmp
xchg
fwait
push
xor
push
mov
xchg
or
cld
scas
outsl
cwtl
push
lret
adc
insb
cmc
pushf
arpl
mov
xchg
bnd
dec
or
or
movsb
inc
xchg
incl
mov
pusha
rorl
push
and
mov
sbb
scas
inc
ljmp
fisubrl
imulb
sub
dec
scas
mov
xlat
or
mov
sbbb
bound
fwait
adc
add
mov
sub
cmc
pushf
ja
push
dec
inc
dec
cmp
aam
adc
sbb
test
and
into
loop
mov
js
dec
ret
mov
aas
xchg
enter
in
scas
aaa
lock
push
lock
jmp
cmpsl
mov
test
cmp
adc
int3
cmp
cmpsb
outsb
les
fisubrl
pop
cmp
lea
lods
xchg
mov
sub
xchg
pop
or
xor
jmp
repz
ja
mov
mov
roll
outsb
mov
mov
xor
addr16
mov
mov
adc
sbb
push
pop
xchg
lods
pop
cmp
cmp
cmc
arpl
pusha
ret
popf
arpl
ja
xchg
cmpsl
scas
stos
dec
sub
xchg
rorl
sub
sub
pusha
in
jl
push
cld
mov
testb
mov
inc
add
push
aaa
mov
mov
inc
xchg
sub
fldl
pop
cli
stos
xchg
xchg
addr16
jmp
test
jb
outsl
mov
jo
or
stc
call
mov
add
ret
and
cvtps2pi
push
and
xorl
or
and
sbb
cmp
rolb
pop
jbe
mov
cmp
cmp
stos
in
lret
ret
stos
arpl
cmp
sub
data16
ljmp
cmp
fcoml
lods
inc
stos
rcrb
popa
xchg
add
adc
inc
pushf
repnz
mov
nop
stc
jge
cld
pop
mov
push
or
sbb
xor
std
dec
jge
xchg
push
shlb
add
lret
fwait
cs
repz
adc
sub
adc
popf
rolb
rcr
insl
mov
dec
sahf
lret
leave
cmp
popf
add
add
dec
sbb
mov
cli
push
cmc
in
fidivrl
sub
add
mov
orb
or
pop
lahf
lret
movsb
mov
push
jne
dec
fsts
inc
mov
push
popf
pop
lahf
call
inc
pop
pop
cli
mov
push
data16
shll
enter
xor
jns
mov
repz
mov
inc
jecxz
dec
cmp
and
in
movsl
xchg
sti
push
mov
cld
mov
imul
outsb
dec
cltd
ret
xor
flds
ror
movsb
push
push
aaa
stos
jle
sbb
jecxz
mov
lods
push
fs
mov
or
enter
adc
repz
xor
or
repnz
lods
xor
xchg
iret
mov
fdivrp
inc
cmpsb
mov
aas
add
mov
in
stc
out
fisubl
loopne
or
fcmovu
mov
xchg
pop
adc
rcrl
fldl
pop
cli
les
add
mov
ss
push
std
mov
daa
push
outsl
outsl
xchg
mulb
fs
adc
sbb
mov
xor
and
sub
push
mov
decb
lahf
and
in
rol
pop
outsb
iret
cmc
test
and
pop
das
pop
sbb
adc
das
jae
in
sub
adc
daa
shl
pop
mov
cld
cmp
or
xor
sahf
cmp
jecxz
mov
outsb
inc
aas
imul
shrb
sbb
test
jmp
xchg
mov
push
jp
rcrb
cltd
andb
mov
xor
pop
push
enter
add
cmpsb
aam
mov
cs
adc
stos
jmp
sub
call
push
das
pop
sub
lahf
lods
fistl
mov
fst
scas
test
mov
negl
shlb
lds
adc
fistps
push
cmpsl
mov
xlat
shrl
loopne
das
mov
ret
data16
sub
std
sub
ror
and
pop
iret
test
fidivrs
inc
lret
adc
xchg
int
mov
gs
cmp
mov
das
js
dec
cli
imul
cmp
xlat
fdivrl
push
scas
stos
sbb
and
arpl
and
adc
rcrb
xchg
xchg
sub
or
cs
outsl
pop
int
mov
mov
mov
add
dec
or
popf
adc
inc
shlb
arpl
add
rcrl
or
mov
inc
and
iret
insb
inc
out
popf
xor
cltd
cmc
orb
jb
and
les
or
icebp
mov
pusha
aas
scas
dec
out
jge
shrl
cmpsb
insb
cmp
mov
xchg
aaa
or
lock
test
push
dec
frstor
fldt
pop
cli
xchg
cmc
pop
push
aam
push
clc
stos
std
xchg
pop
dec
scas
js
jns
in
cli
jae
iret
repnz
or
clc
pusha
addr16
ljmp
data16
jecxz
setae
add
jo
leave
sub
aas
pop
sub
out
jge
dec
fstps
jecxz
cld
mov
mov
mov
xchg
lret
cs
mov
xor
cli
fisubrs
mov
jp
fsubs
jno
add
sub
add
jnp
pop
cli
xchg
cmp
xor
cmp
mov
sti
pop
dec
scas
movsb
xchg
ds
add
cli
movsb
jmp
fidivs
pop
lcall
shrb
mov
testb
cmp
sub
ret
mov
pop
dec
ja
ss
cmp
ljmp
jae
sub
les
mov
fmuls
xchg
outsb
jnp
push
jno
pop
lcall
icebp
mov
sbb
inc
rclb
and
loope
jns
mov
sbb
cmp
sbb
and
mov
popa
popa
push
mov
pop
adc
or
push
xchg
push
pop
xlat
into
mov
movsb
jl
push
in
push
xor
xchg
jp
int3
fstpl
cmpl
xor
std
or
inc
adc
out
push
sbb
out
movsb
and
js
inc
enter
test
enter
lods
inc
cmp
inc
jecxz
jmp
shl
add
fisttpl
rcl
cmp
hlt
gs
xlat
nop
scas
sbb
sub
shll
jp
and
sahf
pop
cmp
inc
jge
movsb
mov
add
sbb
jecxz
setbe
jae
popf
sub
adc
xor
xchg
aad
lock
adc
dec
outsl
aam
sahf
fbld
sub
sahf
jmp
test
sahf
push
pop
mov
sub
ficomps
loopne
sub
repnz
adc
ficoml
push
and
out
pushf
push
fidivs
pop
and
aad
in
push
push
add
fcomip
jg
je
dec
hlt
sahf
sub
mov
movsl
sar
or
jecxz
xchg
out
jle
sbb
call
fisttpl
or
pop
pop
out
and
sub
add
xchg
mov
push
mov
push
lret
jmp
mov
cmpsb
stos
mov
cmp
xor
dec
dec
popa
push
cwtl
fadd
xchg
loopne
mov
into
into
mov
daa
inc
lods
je
lds
dec
jl
adc
jmp
jns
fisttps
idivb
cmp
xchg
add
sub
insl
sub
push
test
imul
mov
mov
mov
xchg
les
loopne
and
sub
jmp
and
into
mov
pop
fcmovne
adc
add
mov
cmc
das
imul
mov
aaa
ret
call
movd
fwait
cmp
inc
xchg
data16
rorl
inc
and
jg
iret
fbld
js
arpl
adc
xchg
outsb
inc
inc
imul
add
cmc
shlb
call
push
insb
lret
sbb
or
sbb
and
jge
cmpsl
daa
insb
pop
cmp
sbb
inc
cmp
test
and
imul
sbb
push
es
fwait
mov
push
and
mov
mov
cmp
insl
into
rcr
ds
and
xor
inc
sub
nop
pop
sbb
sbbb
push
xorb
dec
sahf
int
mov
test
push
ja
adc
lahf
xchg
jne
bound
add
sub
into
mov
jbe
aas
inc
mov
fcmovnbe
cmp
les
push
sbb
in
addl
xor
mov
out
dec
data16
push
fbstp
adc
jno
mov
xchg
sbb
mov
mov
inc
ss
lds
hlt
jo
lds
jge
aad
sbb
sbb
xor
fldln2
fwait
iret
int3
or
pop
nop
and
imul
add
loop
add
movsl
pop
imul
adc
testb
mov
test
lods
mov
add
ja
inc
popf
jo
xor
int3
fcmovu
popf
adc
inc
mov
popf
inc
mov
popf
mov
inc
in
in
cmp
loope
xchg
mov
mov
jle
aaa
lcall
sub
push
daa
add
jmp
jecxz
mov
mov
and
cmp
adc
adc
push
inc
cmc
stc
inc
and
mov
jecxz
loope
xchg
test
bound
jge
mov
lock
xchg
dec
mov
insb
push
mov
adc
adc
mov
scas
aas
pusha
dec
sbb
pop
add
pusha
lcall
cmpsb
jecxz
subb
jecxz
daa
xchg
clc
idiv
insb
daa
idivl
in
fwait
stc
fsubp
dec
mov
enter
in
lock
ss
repnz
jg
dec
jp
ret
stos
push
dec
jmp
ret
es
sub
mov
hlt
rcr
add
jne
call
lret
pushf
xorb
and
jns
push
sbb
out
xor
mov
sbb
lock
jmp
add
fdivrs
pop
test
jne
sbb
jns
ss
lret
arpl
jmp
add
out
push
lea
scas
cld
push
fdivl
adc
cmp
cmpsb
lahf
pop
add
iret
dec
jecxz
mov
bound
cmp
xor
pop
push
leave
pop
inc
xchg
in
jae
jecxz
test
and
cmp
or
push
lret
add
mov
popa
inc
cltd
ja
test
lcall
bound
or
subl
sbb
pop
orb
ds
mov
loope
out
dec
mov
pop
movsb
sbb
pop
iret
and
add
adc
sub
addb
jg
orb
stc
sbb
ficoms
adc
adc
mov
add
mov
sub
bound
pop
rolb
leave
add
xchg
push
cmc
xor
and
sbb
in
or
rcrl
sarb
jno
cmc
push
dec
push
adc
rorl
les
push
ja
inc
mov
test
push
icebp
adc
push
orb
jnp
cmpsl
jne
pop
or
frstor
sub
fnstsw
push
fnstenv
sbb
push
cmc
rcrb
clc
xor
inc
es
cli
inc
xchg
les
lods
sti
pop
shl
sbb
pop
scas
push
push
cld
sbb
cld
ret
out
test
loop
ja
jp
jo
fldt
sub
ljmp
insb
mov
arpl
inc
scas
imul
stos
sbb
out
push
int3
xor
jg
xchg
scas
sti
int
and
mov
mov
in
add
fsubrs
adc
mov
jb
jns
push
xlat
push
mov
xchg
lcall
fidivl
daa
sub
jg
mov
shll
outsl
fs
jnp
ljmp
pushf
and
into
cld
or
inc
lret
push
nop
mov
dec
mov
out
add
bound
in
leave
cmp
mov
lahf
sbb
lcall
add
sub
insl
mov
xor
cmp
mov
adc
xchg
shl
push
xlat
pop
aam
jp
pop
dec
adcb
mov
out
lahf
and
lcall
mov
push
dec
dec
push
xchg
sbb
in
cmpsb
push
jne
lds
shlb
fisubrl
sti
lret
push
ds
lret
int3
aas
rcr
bound
lahf
sti
int
fbld
mov
data16
out
sarb
loopne
push
xchg
inc
addb
in
in
outsl
stc
add
sub
push
in
add
iret
push
es
imul
pop
mov
push
mov
int3
addr16
mov
popa
scas
test
test
mov
jge
jecxz
inc
dec
adc
jl
fimull
call
sbb
jno
dec
cmp
cmp
test
or
adc
sbb
mov
jnp
std
iret
mov
jo
mov
adc
mov
mov
hlt
fs
push
inc
inc
dec
adc
faddl
or
or
cli
cltd
sub
dec
sbb
adc
push
cmp
add
and
sbb
movsb
mov
lods
idivl
mov
inc
sbb
loope
dec
clc
fnsave
inc
push
mov
int
orl
aaa
push
jge
jae
adc
mov
xchg
std
push
cwtl
mov
pushf
mov
push
cmp
adc
push
mov
cli
enter
subl
lods
dec
gs
addl
mov
adc
cs
or
xor
sahf
pop
add
mov
scas
pushf
sub
icebp
and
fldt
test
cltd
pushf
mov
xchg
test
dec
test
notb
add
cmp
lock
xorl
inc
jecxz
mov
call
das
fcmovnbe
int3
les
inc
rol
pop
stos
notl
sbb
test
mov
scas
arpl
aad
repnz
shll
pop
xchg
dec
aad
jne
addr16
xchg
xor
shlb
dec
inc
xor
popf
jne
bound
push
adc
in
pop
call
inc
dec
push
dec
adc
pop
inc
mov
push
in
mov
cmp
lock
jge
mov
add
out
jmp
adc
lret
cmp
push
mov
push
mov
test
jns
or
mov
jecxz,pn
ds
repnz
pop
repnz
mov
mov
lcall
and
xchg
mov
cmc
lcall
inc
mov
and
mov
jp
pop
xchg
mov
test
addr16
pop
repnz
add
call
jecxz
xchg
pop
mov
and
lods
cmp
inc
xchg
aaa
mov
sbb
push
lcall
fldt
stc
dec
lods
sub
cmpsb
addr16
pop
repnz
push
mov
xchg
mov
or
scas
out
cmpxchg
sahf
orb
mov
mov
cmp
fisubrs
lret
nop
xchg
pop
cld
mov
xor
inc
pop
push
repnz
or
push
inc
jl
in
mov
mov
repz
and
fwait
push
xchg
cmp
sarl
lret
sub
adc
mov
push
in
ja
adc
fwait
testl
push
adc
mov
adc
pop
call
int3
inc
push
dec
sarl
pop
sbb
push
lcall
cmpb
cmp
add
pop
fwait
xchg
jne
xchg
call
insl
in
jmp
push
push
lret
fldl
mov
mov
int3
addr16
mov
dec
movsl
stos
cld
iret
fmull
inc
add
add
lcall
push
fimull
call
sbb
jno
dec
cmp
cmp
test
or
adc
sbb
mov
ljmp
inc
mov
cmpsb
dec
clc
dec
dec
push
daa
push
clc
xchg
test
and
insl
push
outsl
in
and
push
add
mov
mov
repz
mov
into
shrb
stos
je
and
dec
xorl
ds
pushl
or
pop
cmp
dec
outsl
aad
xlat
ret
shrb
repnz
or
ds
xor
aad
pushf
and
nop
jle
movsb
mov
fnstsw
popf
lret
xchg
test
mov
adc
or
mov
lock
mov
mov
cld
sbb
xchg
or
xchg
mov
lret
cs
lea
adc
cmc
das
das
mov
sbb
inc
xor
mov
fisttpll
int3
or
xor
mov
push
psubusb
nop
xchg
aam
sbb
cli
dec
addb
addb
cmp
aam
out
inc
or
js
roll
cmc
fs
mov
dec
and
mov
ljmp
adc
xor
stc
jbe
pop
add
sbb
mov
xor
and
mov
mov
dec
mov
mov
shl
test
xor
scas
push
mov
sbb
jle
jo
test
lods
mov
cld
int
into
test
inc
sbb
insb
mov
dec
stos
mov
mov
pop
mulb
add
pop
push
lret
push
faddl
fs
lea
sarl
or
shlb
lret
and
and
mov
hlt
out
movsl
sub
mov
or
pop
cltd
jle
imul
sub
pop
pop
mov
mov
cmp
mov
test
push
imul
xchg
adc
shll
lea
arpl
scas
cmp
lods
loop
sbbb
xor
mov
sub
cmp
cmp
clc
das
and
xchg
cmp
add
idiv
daa
pushf
dec
xor
lea
arpl
mov
cmp
aaa
cmpsl
pop
push
inc
rcll
ja
pop
loope
add
mov
and
xchg
xorl
lock
dec
lcall
push
scas
jbe
push
fcmove
add
loopne
pop
icebp
or
inc
stos
lahf
sbb
icebp
inc
outsl
sub
lods
jp
push
hlt
pushl
xor
pop
test
inc
push
repnz
xchg
sub
outsl
push
ss
dec
push
testb
inc
or
xchg
push
pop
scas
es
mov
mov
gs
push
mov
dec
jle
xchg
jp
ficomps
scas
mov
popf
cmp
mov
and
sub
add
pop
imul
sub
inc
scas
cmc
nop
mov
scas
mov
mov
push
fxch
ficoms
xchg
push
subl
mov
cli
mov
and
jb
inc
jbe
pop
scas
es
mov
call
xlat
sub
ficoml
inc
dec
jle
rcrl
jnp
scas
mov
popf
mov
orb
xchg
in
loop
push
sub
cmp
iret
adc
pop
daa
mov
scas
cmc
nop
mov
scas
aam
lods
aaa
in
data16
frstor
fmulp
xchg
cmp
push
stos
push
outsl
cmpsb
cli
mov
leave
cmpsl
pop
mov
addb
insl
mov
sarl
iret
call
std
fiaddl
jo,pt
std
test
mov
aad
call
lahf
sbb
xchg
mov
es
int3
jp
rclb
mov
add
push
push
test
push
dec
mov
and
mov
int3
loop
push
mov
aaa
je
push
stos
adc
dec
sub
cmp
jecxz
clc
mov
or
fmuls
or
stc
ret
mov
outsl
jl
test
xor
dec
xchg
and
sbb
ja
stos
enter
scas
rclb
or
data16
es
aaa
inc
add
add
or
lcall
sub
aad
sarb
js
mov
int
sub
cmp
xor
test
add
test
dec
cwtl
dec
push
xchg
notb
sti
mov
lods
int3
sbb
and
in
cmp
or
pop
inc
popa
repnz
xchg
shll
ret
dec
inc
leave
jbe
mov
jg
clc
mov
xchg
mov
mov
sbb
icebp
int
mov
in
dec
jb
in
stos
mov
jbe
xor
cmp
xor
fistpl
cwtl
imul
mov
mov
push
in
dec
mulb
or
loope
cmp
imul
hlt
int
sti
dec
mov
addr16
mov
mov
movl
cmp
push
rclb
popa
mov
dec
cli
lcall
test
xor
or
imul
inc
gs
lods
or
out
pop
insb
std
in
push
rcrl
ljmp
mov
sbb
lods
and
into
add
jae
mov
add
mov
xor
in
lcall
cmp
gs
sbb
sbb
inc
outsl
aas
andb
push
xchg
pop
enter
cmp
mov
mov
outsb
outsb
cmp
imul
adc
add
and
pop
icebp
add
xchg
lcall
cmc
das
imul
inc
push
fiaddl
inc
pop
jnp
mov
xchg
out
pop
fimuls
std
mov
sbb
push
out
xchg
mov
es
jns
xchg
inc
adc
mov
js
or
cli
mov
cmp
lock
clc
nop
aam
aad
lcall
ficoms
lods
pop
icebp
mov
loope
std
inc
adc
inc
push
shll
jp
push
jl
enter
push
add
or
aas
dec
cmpsb
cltd
cltd
sbb
out
mov
std
sbb
pop
jecxz
dec
pop
mov
insb
sahf
fistpll
fcompl
and
cli
pushf
popa
rolb
scas
divl
in
mov
insb
cld
jp
loope
int
mov
add
cmp
mov
mov
sbb
sbb
mov
enter
jle
repz
and
xchg
cmp
xchg
movb
ljmp
fidivl
jnp
cld
and
dec
adc
sub
ror
sub
inc
fsubrs
outsb
sahf
pop
fmuls
sahf
in
int3
cltd
ficoms
movsb
adc
jno,pt
in
pop
inc
mov
sub
aam
dec
enter
push
add
add
jmp
mov
out
or
icebp
lock
enter
cwtl
or
or
cmp
jl
xchg
mov
imul
jo
shrb
and
test
dec
insb
push
and
xchg
imulb
loop
fadds
fisubrl
ret
and
xor
add
in
pop
or
sarl
inc
test
sub
lds
push
out
inc
outsb
mov
subl
iret
xlat
add
jle
add
push
lock
jmp
cmpsl
mov
pop
aam
add
inc
xor
push
out
sbb
sub
xor
daa
rorl
rcrl
rolb
lret
ret
leave
fidivl
adc
pop
pop
mov
fwait
mov
sarl
dec
scas
movb
cwtl
inc
add
movsl
and
sbb
enter
fcomip
jb
lahf
add
adc
add
aas
ja
aas
pop
fildll
cmpsb
insl
mov
mov
orb
mov
or
in
aam
pop
sub
xchg
fstl
out
jbe
xchg
mov
mov
out
mov
lret
inc
mov
js
push
pop
inc
pop
gs
rcll
enter
ret
in
pop
and
lea
repz
aam
lahf
pop
loope
lods
sub
mov
dec
aaa
xchg
push
cwtl
jnp
dec
push
daa
jl
cltd
adc
jb
adc
or
mov
xchg
adc
dec
mov
movsl
mov
mov
ljmp
and
or
mov
loop
or
xor
push
loope
xchg
inc
ret
fildll
into
or
dec
mov
cmp
inc
push
arpl
ja
mov
xlat
int3
xchg
lahf
jmp
cmpl
cmpsl
cmp
call
lcall
xor
int
shrb
les
jg
movsl
adc
hlt
lock
cltd
insl
inc
xorb
hlt
inc
in
mov
jbe
mov
arpl
outsb
aad
and
orl
test
xlat
data16
pop
clc
or
bound
les
push
dec
sub
pop
push
xor
jno
iret
push
cmp
inc
scas
nop
cmp
pop
mov
jmp
inc
fwait
loop
mov
push
subl
iret
xlat
add
jle
add
push
lock
jmp
cmpsl
mov
popa
fcomi
xor
mov
xchg
push
enter
inc
out
push
popf
out
or
stos
and
ljmp
xor
inc
sarl
fsubrp
mov
add
ret
insb
lea
pop
loope
test
push
leave
jmp
push
pop
aaa
push
sbb
mov
into
pop
inc
push
mov
mov
pop
fmuls
mul
pop
xor
mov
movsb
insl
aaa
push
push
mov
inc
frstor
shlb
mov
stos
jnp
lret
xor
push
loope
xchg
sub
ljmp
out
pop
cmpl
dec
cwtl
lahf
sub
push
icebp
xlat
test
inc
adc
outsl
push
and
lret
xor
lret
repz
inc
movsb
clc
imull
xorl
negl
ja
lds
aaa
mov
add
mov
add
sbb
inc
fnstcw
movsb
dec
and
fwait
test
scas
rcrl
rcr
sub
gs
test
stos
xchg
dec
add
fistps
pop
enter
iret
and
repnz
loope
scas
inc
shll
dec
adc
push
sub
and
mov
ret
mov
jmp
dec
fsts
repz
mov
into
rclb
pop
dec
jmp
fidivs
ja
fcoml
mov
mov
out
and
scas
jmp
mov
fcompl
mov
add
xor
outsl
pop
dec
sub
faddl
fwait
jns
inc
fwait
loop
mov
push
subl
iret
xlat
add
jle
add
push
lock
jmp
cmpsl
mov
into
les
cs
jle
pop
xor
int3
mov
sbb
lret
jns
adc
jne
int
mov
inc
mov
bound
lret
xor
push
xor
out
mov
mov
xlat
lret
js
xlat
ret
loop
aas
iret
aas
stos
outsl
fsubrl
inc
fwait
jmp
sbb
faddl
ljmp
test
inc
les
sahf
std
cmp
repnz
mov
mov
out
pop
leave
pop
jl
jo
hlt
pop
dec
les
sub
fists
and
sub
stc
add
aad
push
inc
aad
cwtl
pop
cwtl
add
cli
loopne
xchg
xchg
stc
push
or
sbb
and
and
xor
xchg
sti
lods
adc
mov
fwait
cmp
adc
mov
cmp
pop
fimull
test
nop
jmp
and
xor
jnp
repz
jmp
pop
cmp
push
xchg
jl
jnp
enter
xor
sub
bound
add
xchg
jl
dec
or
jmp
mov
insl
stos
jge
mov
aad
add
dec
leave
imul
aam
or
decl
rcll
pop
loop
cltd
mov
outsb
pop
push
pushf
xor
and
inc
test
idivl
test
das
pop
enter
jg
and
psrad
aas
mov
and
xor
cmpsb
xchg
out
in
adc
icebp
lret
divb
push
into
dec
cli
ljmp
addr16
cmp
cli
or
mov
mov
rcl
cmp
mov
sbb
adc
clc
cmpsb
xchg
out
in
rolb
aaa
and
fisubrs
inc
inc
subl
popa
add
pop
fistpll
cltd
sbbb
test
lahf
push
inc
lcall
sbb
push
xchg
mov
jl
pavgw
adc
xchg
or
or
or
push
sbb
lods
cs
mov
sarl
adc
or
sub
out
cmp
xchg
jns
dec
mov
or
hlt
jne
mov
mov
xchg
flds
aaa
xchg
xchg
lret
aam
push
pop
jo
sbb
push
stos
idiv
cli
nop
jg
test
ljmp
pushf
gs
cltd
int3
mov
js
and
gs
scas
subb
mov
insl
sub
push
addr16
in
cltd
xchg
dec
or
push
pop
adc
inc
jbe
xor
ficoms
ficoml
insb
mov
or
data16
dec
jb
mov
les
sbb
mov
mov
mov
jmp
or
scas
popf
test
mov
pop
in
sbb
sti
aas
int
pop
mov
orw
push
lret
sahf
mov
ret
ret
cmp
sarb
sbb
xchg
mov
dec
mov
push
fwait
or
pop
adcb
mov
ss
xor
xlat
cwtl
test
mov
sahf
xor
xchg
dec
mov
jle
xchg
mulb
fs
adc
sbb
mov
or
lock
add
addr16
ljmp
inc
push
ret
aad
add
adc
add
imul
mov
je
lock
push
test
jb
pop
mov
out
cmpxchg
sahf
orb
mov
mov
push
out
cmp
loopne
aas
cmp
pop
jae
jle
inc
leave
jbe
mov
jg
clc
mov
xchg
mov
mov
sbb
xchg
push
inc
cmpb
ljmp
sub
dec
inc
mov
mov
out
stos
mov
lret
fsubr
or
lahf
push
mov
jae
sub
enter
mov
das
ret
mov
insb
scas
pop
stos
mov
mov
test
or
and
andb
jbe
test
xor
pop
fisubl
fstpt
ljmp
sbb
jl
outsl
aas
xchg
xor
out
cmpsl
xchg
ficoml
out
dec
sub
out
cmp
xchg
jns
dec
mov
push
push
sti
clc
imulb
cwtl
mov
mov
outsl
adcl
idivl
mov
sbb
rcl
fbld
xchg
imul
movsb
add
shrb
xor
mov
inc
xchg
or
add
jne
push
scas
inc
shll
jno
mov
adcl
sbb
mov
jae
inc
push
pop
fistps
addr16
cmp
mov
ljmp
pop
stos
pop
stos
sbb
sti
in
fstl
pop
stos
cmp
popa
pop
mov
insl
lea
aas
dec
ds
push
pop
xchg
mov
sti
dec
or
xor
sahf
inc
mov
push
jmp
push
lahf
into
lret
popa
cmpsl
pop
bound
shr
insb
insl
mov
shrb
xor
pop
pop
popa
lds
inc
test
mov
adcb
mov
mov
jmp
push
sub
add
mov
mov
mov
cmp
dec
js
repnz
and
pop
in
dec
imul
popf
xchg
adc
dec
aad
cmp
in
sbb
jb
dec
push
xchg
jmp
mov
sbb
loop
cmpsb
inc
dec
jecxz
iret
aaa
cli
je
push
xchg
inc
inc
shll
inc
jb
push
call
adc
sbb
pop
cmpsl
mov
fnsave
out
dec
mov
mov
mov
inc
es
mov
fiadds
nop
loope
lret
fstpt
clc
and
xchg
das
inc
in
aam
push
mov
cmpsl
fisubs
outsl
add
imul
pop
jp
cmp
pop
xor
fcmove
pop
daa
aaa
out
out
mov
add
popf
inc
lret
mov
xchg
add
jo
inc
add
pop
enter
icebp
shll
inc
jne
es
mov
adc
nop
in
out
mov
lea
add
rolb
int3
test
dec
dec
fs
lock
mov
clc
and
jmp
mov
icebp
je
fcompl
jne
sbbb
xlat
icebp
fwait
jmp
hlt
push
sbb
fwait
jl
jo
ljmp
cld
imul
inc
mov
mov
stc
add
mov
ret
stc
xchg
adc
js
cmp
sub
dec
imul
mov
sbb
push
repz
mov
mov
dec
scas
mov
add
stos
dec
mov
xchg
mov
push
push
mov
push
aaa
xchg
cmc
push
in
js
dec
out
mov
push
orb
sbb
sub
adc
cmp
scas
adc
add
mov
sbb
dec
inc
jp
or
imul
inc
xchg
fs
adc
jmp
aam
sbb
insl
sub
pushf
xchg
clc
push
lods
ds
mov
pusha
xchg
jno
lahf
xor
fsubr
sub
sub
repz
pushf
push
xchg
bound
dec
rcrl
dec
push
push
pop
fs
ljmp
lcall
lea
cltd
push
jg
out
or
inc
fidivs
jle
fcmovnbe
repnz
cmpsl
insb
sub
gs
and
fs
pushf
fs
pusha
jns
cmp
es
push
daa
or
cmpsl
cmp
mov
in
ret
jecxz
xchg
shrl
jno
aam
ja
jl
aaa
push
fmuls
ret
notb
dec
roll
call
dec
les
cmpsb
cmpb
adc
divl
ljmp
xchg
xor
mov
out
xchg
mov
jne
sub
dec
add
je,pn
nop
popa
mov
push
push
outsl
mov
add
imul
sbb
xchg
movsb
sub
bound
js
lea
mov
mov
or
pop
cmp
push
sub
mov
outsl
mov
sti
int3
sub
scas
fidivs
xchg
mov
cwtl
aas
adc
or
popa
adc
push
xor
aam
cld
loopne
in
in
fidivl
popa
movb
or
ds
sbb
sub
add
adc
mov
or
jne
xor
xor
xor
mov
cli
fildl
dec
fwait
aam
inc
xchg
test
xlat
push
and
int3
push
mov
test
js
jns
mov
mov
fsubrl
movsb
push
pusha
xor
sahf
inc
jg
and
test
fldl
jo
pop
outsb
mov
cmp
lcall
leave
es
sub
jae
ret
aad
in
fsubrl
sub
push
mov
popf
xor
xchg
lret
ror
loopne
or
push
call
jg
inc
xchg
pushf
test
repz
testl
cmp
sti
imul
rorb
cld
mov
pop
cld
ret
fisttps
clc
xchg
lea
xchg
out
aaa
push
xchg
frstpm(287
pop
sbbb
sbb
cmp
push
dec
leave
jo
push
sub
pop
xor
notb
pop
jb
mov
fldenv
dec
mov
dec
inc
xor
into
loope
leave
in
add
xchg
push
adc
scas
pop
mov
xorb
add
jmp
shr
xchg
testl
jp
out
jecxz
jecxz
iret
test
add
mov
mov
and
push
fcomp
frstor
pop
rcrl
xchg
and
adc
repz
movb
lret
mov
xor
leave
jb
lret
sub
and
cmp
mov
scas
mov
jno
addr16
adc
or
push
outsb
pop
test
sub
mov
mov
popa
pop
outsl
mov
loopne
data16
inc
mov
outsl
addr16
sbb
pop
test
pop
popa
arpl
push
dec
insl
std
sub
cmp
inc
jnp
popf
xor
inc
je
and
push
jne
fcmovbe
mov
mov
lds
mov
aam
jo
jge
cmp
adc
iret
rcrl
aaa
inc
mov
push
insb
xorb
xor
inc
imul
cmc
cmpsl
and
sbbb
jmp
cli
scas
aaa
cmpsb
jae
adc
add
mov
dec
add
dec
xchg
add
cmp
and
sub
fdivs
inc
nop
mov
inc
jae
add
dec
jg
les
jnp
outsl
sub
push
aas
xor
addr16
mov
cmp
jp
cs
pop
sbb
push
mov
ja
xchg
cltd
movsl
jno
aad
add
loop
loope
cltd
imul
pop
outsb
jae
stos
add
add
dec
and
movsb
inc
movsl
push
leave
aam
mov
mov
push
jbe
imul
and
push
cwtl
jbe
jnp
in
ret
rcrl
test
inc
mul
popf
test
pusha
inc
fldenv
hlt
inc
mov
xor
andb
cwtl
fldenv
lock
into
repz
cmp
xor
sub
mov
scas
subb
mov
xor
add
in
mov
push
fucomi
or
repz
rcrl
push
je
pop
fisubrs
aam
ss
lea
push
mov
fildll
mov
jb
xchg
adc
pop
add
fimull
pop
and
sbb
sub
or
sbb
mull
sbb
jne
lcall
sbb
out
insl
nop
es
jecxz
sub
push
sbb
imul
mov
xor
pop
into
fnstenv
and
ljmp
jl
pop
clc
jo
jo
adc
adc
cltd
lahf
shlb
cmp
push
cmp
ret
lcall
add
enter
mov
inc
xchg
pop
dec
add
mov
mov
aad
jnp
inc
mov
push
pushl
xchg
xchg
dec
pop
call
cmp
fcoml
loope
sub
inc
dec
pop
adc
push
popf
lock
adc
inc
xchg
mov
out
pop
add
add
push
popa
cmp
out
xchg
mov
repz
fnclex
sbb
and
enter
cli
mov
test
pop
out
and
iret
clc
out
cld
or
xor
jg
loopne
aas
and
nop
mov
inc
cmp
clc
mov
jecxz
scas
push
push
xchg
pop
ret
jmp
adc
outsb
insl
fidivrl
testl
fstl
insl
xor
dec
sub
and
fdivrs
xchg
mov
or
and
push
cmc
jecxz
and
jns
fcoml
loope
js
jmp
jb
adc
push
ret
jge
rorl
ret
mov
sub
adc
sub
jns
cmpsb
cld
or
cmp
fsub
or
pop
incb
std
mov
xchg
les
rorb
xchg
mov
sub
xchg
xor
mov
fisubrl
xor
pop
ss
imul
pop
hlt
jecxz
inc
xor
push
sub
adcl
cmpsl
out
lcall
inc
jmp
das
js
aad
sbb
cmpsb
dec
mov
sbb
mov
pop
dec
inc
and
xor
fisubl
adc
inc
xchg
xor
push
xlat
mov
inc
push
mov
dec
mov
add
out
mov
movsb
in
mov
es
or
xchg
push
fistps
cld
gs
bswap
movl
fildl
rorl
sub
out
inc
add
mov
repnz
sub
mov
ret
ficompl
mov
cmp
push
popl
push
arpl
or
jge
mov
aam
lods
test
movl
push
fisubl
cmpsl
add
gs
jle
fwait
test
pop
push
shrl
xchg
mov
jl
test
xor
push
call
insl
mov
scas
and
jb
push
sbb
or
fldl
std
call
sbb
lahf
out
add
mov
sub
out
test
and
ss
out
jnp
or
inc
stc
add
stos
mov
pop
sub
xor
fsubl
xor
sub
dec
out
les
sbb
test
out
cmpsl
xor
int
enter
fcmovne
ficompl
push
insb
xlat
mov
pop
aam
mov
outsb
xchg
jns
in
mov
mov
push
pusha
jge
movsl
sub
pop
mov
xchg
pop
insb
stos
mov
enter
mov
call
pop
sub
cmp
pushf
outsl
sub
cmp
xlat
out
cmp
xchg
jns
insl
fistpl
push
in
neg
cmp
cmc
lret
cmp
mov
push
mov
cmp
int
pop
faddp
jge
iret
push
adc
sub
test
test
xchg
dec
inc
cmpsb
push
lcall
xchg
or
push
std
stos
jl
push
in
outsl
ret
mov
aad
scas
add
nop
insl
shll
or
xor
push
fistpl
pop
cld
mov
cmp
icebp
imul
aad
dec
or
inc
clc
sbb
stos
enter
dec
out
mov
xchg
lret
shrb
lret
call
cmp
inc
lea
mov
repz
rcrl
sbb
shll
xchg
test
mov
cs
xchg
xchg
loop
xor
sti
xlat
dec
ljmp
add
cli
adc
call
cmp
sub
jb
pop
sub
push
dec
pop
push
push
ret
push
inc
test
inc
push
inc
xchg
je
aas
movsw
enter
imul
mov
dec
aas
shl
lret
les
jo
and
sbb
xchg
mov
sti
dec
int
sbb
mov
inc
fisubrs
mov
mov
aaa
stos
dec
jbe
and
cmp
sbb
dec
scas
sbb
hlt
cmp
jns
or
or
mov
mov
and
nop
dec
pop
sub
lret
inc
xchg
and
adc
das
movsl
xor
xor
sub
xlat
nop
popf
inc
arpl
push
inc
pop
pop
rcrb
xor
ljmp
add
mov
shrl
push
mov
pusha
jae
bnd
mov
addr16
xchg
mov
adc
shrb
push
jns
hlt
xchg
ret
ljmp
imul
xchg
ret
cwtl
cmpsl
pop
and
leave
cli
xor
rorb
push
fwait
cmp
movsb
cwtl
das
fsts
out
cmc
xchg
sub
aam
dec
mov
sub
fisttps
repz
inc
jno
xor
out
lea
lret
jae
rorl
shll
pop
xlat
or
adc
test
inc
int3
scas
cmp
cmc
nop
adc
dec
fs
sub
aam
mov
imul
sbb
push
jp
add
call
iret
sub
stos
pop
jnp
ds
sbb
ret
mov
stos
cwtl
or
aam
aad
mov
push
in
sbb
jp
cmpsl
pop
mov
or
cwtl
fnstcw
cmc
subl
push
sti
xlat
sbb
push
adc
cmp
aam
add
pop
mov
lret
xchg
push
repnz
inc
dec
mov
inc
jb
adcl
jno
or
popa
test
add
movswl
add
push
in
scas
xor
jle
aaa
xchg
mov
mov
sbb
mov
mov
loop
pop
fistpl
or
xchg
outsb
inc
stos
push
mov
cmp
xor
iret
mov
or
or
cmp
jmp
stos
adc
dec
sub
xor
inc
mov
push
dec
mov
ja
cmp
jecxz
arpl
sbb
dec
test
sahf
aas
stos
cmp
out
rcll
out
movsb
or
in
add
xchg
mov
sbb
pop
add
sub
fisttpll
sahf
lret
lds
popf
xchg
sbb
jecxz
xorl
test
iret
mov
scas
lahf
sub
and
sahf
popf
lahf
mov
call
sub
fwait
cmp
add
mov
std
push
pop
sbb
dec
insb
cwtl
sub
and
mov
cmp
sbb
in
js
ret
incb
insb
jbe
ss
in
mov
dec
mov
mov
xchg
icebp
xor
sahf
sahf
neg
cmp
xchg
sub
loop
scas
and
mov
push
pop
jl
jp
test
call
inc
bound
stc
pop
dec
inc
pop
cmp
lcall
add
call
sarb
mov
push
sahf
jbe
repz
pop
mov
imul
bound
jne
cmpsb
stos
xor
mov
pushf
fwait
shll
sbb
test
mov
cmp
call
stc
cltd
xchg
nop
int
or
mov
test
mov
call
jg
int3
movsl
cld
push
cli
out
mov
out
lret
add
enter
rcl
lods
pushf
fxch
cmp
jge
pop
inc
repz
jmp
inc
adc
mov
or
xor
lcall
stos
adc
push
sub
mov
andl
jmp
lret
xchg
pop
movsl
push
xchg
icebp
or
add
cmp
aaa
stos
jl
mov
mov
movb
aaa
jle
xchg
repz
add
mov
ficomps
in
fsts
inc
add
pop
ds
xchg
adc
mov
pop
repz
test
mov
xchg
je
jmp
add
jg
dec
psadbw
pop
sub
out
mov
push
or
sub
cmc
xchg
fbstp
jno
push
jae
jmp
sbb
movsb
rcll
dec
outsb
sbb
ds
outsl
adc
pusha
loopne
dec
lcall
jp
stos
pusha
bound
mov
clc
xor
stos
in
out
stos
push
lcall
cld
sub
jge
addb
in
fs
mov
fwait
test
pop
add
dec
imul
and
pusha
sub
mov
or
stos
adc
mov
mov
xor
push
xchg
lock
cmp
mov
inc
stc
or
aaa
in
push
mov
lcall
js
or
les
and
cmpsl
or
sbb
notb
ror
sahf
mov
inc
int
fwait
and
in
or
push
stos
and
ja
je
aad
pop
lcall
add
pop
push
or
inc
or
dec
sub
pop
loope
in
push
in
fs
jns
mov
aas
out
aas
data16
cmp
xchg
test
pcmpgtb
mov
outsb
sti
add
mov
sbb
sbb
iret
in
push
insb
xchg
sti
inc
push
pop
cmp
jbe
xor
sarl
push
outsb
mov
loope
dec
adc
mov
icebp
pop
inc
dec
mov
dec
popl
stos
adc
loope
xor
xchg
leave
insl
aam
adc
mov
andb
dec
inc
shlb
and
add
sbb
jnp
ds
mov
lret
xchg
sub
mov
mov
jle
jo
push
inc
lcall
xor
jae
ds
jae
mov
xchg
mov
int3
out
inc
les
or
pop
xorb
cld
add
sub
lret
rolb
mov
test
out
ss
mov
je
push
or
xor
inc
repz
scas
rcl
mov
addl
sub
pusha
mov
push
aam
jb
mov
out
jne
jnp
xchg
inc
lods
lock
movsb
push
push
lods
movl
ja
mov
fstpt
shrl
push
outsb
pop
cli
cmp
test
and
out
sbb
int
xchg
loopne
movsb
mov
test
loopne
xor
push
cli
cmp
inc
or
cmc
call
mov
jae
dec
scas
sbb
mov
sub
pop
and
je
lea
push
jne
xchg
cmp
movsb
adc
addr16
push
mov
or
xchg
scas
mov
imul
and
addr16
outsb
outsl
add
sbb
pushf
scas
mov
je
imul
je
jg
test
sahf
outsb
fistps
xchg
dec
stos
and
inc
mov
sub
jbe
out
and
pop
aaa
into
or
gs
jecxz
jae,pt
cld
mov
in
xchg
outsb
lcall
sar
mov
dec
pop
sbb
adc
push
js
push
push
adc
js
test
push
xchg
pop
cwtl
push
mov
icebp
lock
sbb
scas
bound
pop
jno
mov
jl
mov
adc
stos
addr16
jecxz
fisubrl
pop
sub
mov
loop,pt
cmp
push
movsl
sub
mov
cltd
sub
imul
iret
inc
sub
adc
jb
les
add
fistpl
stc
xchg
cmp
lcall
ret
ss
neg
sub
cwtl
clc
cltd
jbe
or
and
gs
jecxz
sbb
fidivl
rcrl
sub
out
jmp
mov
xlat
in
mov
and
xor
cli
jmp
fldcw
inc
xor
cmpsb
and
mov
inc
mov
fidivl
xor
ja
xchg
das
push
cmc
push
imul
jmp
les
jb
mov
xchg
pop
mov
hlt
in
scas
test
jmp
cs
popf
pop
fcomip
hlt
mov
test
movsb
push
mov
dec
cli
arpl
enter
push
pop
adc
movsb
push
outsl
imul
mov
cmp
sub
cmp
std
xor
jp
mov
sbb
adc
xchg
lahf
scas
movsl
lods
cmpsb
sub
mov
and
mov
ret
cmp
mov
pop
sub
or
cmp
cld
sub
push
inc
lods
jbe
jle
loop
ret
int
jmp
shlb
popa
jl
xchg
popf
xchg
sub
lds
loop
je
scas
mov
adc
and
xchg
cmpsl
jne
jae
adc
xchg
arpl
mov
sarb
addb
stos
pop
mov
lods
mov
lods
sbbb
or
dec
and
push
xchg
inc
cmpsl
jecxz
jecxz
fiaddl
xor
int
adc
cltd
arpl
jge
mov
sbbb
mov
add
push
mov
pop
jnp
dec
and
jo
cltd
ljmp
jae
adc
outsb
add
xlat
movsb
or
mov
int
shll
adc
mov
sub
lahf
dec
loop
daa
scas
jnp
inc
or
pusha
inc
jge
cmp
add
pusha
repnz
mov
imul
pop
jo
inc
mov
andb
inc
sub
cmp
sub
fdivrs
or
andl
ffreep
lcall
pop
arpl
addr16
pop
xchg
add
cmp
xchg
rorb
test
mov
into
and
cwtl
push
jno,pn
mov
aaa
movsb
push
mov
sbb
push
jge
fadds
or
andl
test
cmc
xchg
mov
icebp
leave
jb
fildll
adcl
mov
insb
negb
mov
cli
outsb
ds
add
adc
dec
adc
lret
cmpsl
lock
sbb
shlb
jbe
cmovp
adc
xchg
sbb
scas
inc
dec
enter
imul
mov
jp
fwait
mov
ds
int3
mov
sbb
sbbl
push
insb
inc
das
jbe
or
fidivrs
jb
je
das
and
sbb
jnp
push
lahf
je
mov
loope
dec
and
loope
iret
sbb
xlat
push
mov
jge
add
sub
in
mov
lret
aam
imul
cli
sub
jbe
fldt
lock
popa
adc
pop
sbbl
xor
in
push
xchg
jle
push
sub
xchg
mov
aad
inc
test
push
imul
xchg
sarl
mov
fcmovnbe
iret
test
jnp
aaa
sub
cmpsb
sbb
sahf
stos
loop
and
sbb
fs
xor
mov
stc
mov
xor
popf
out
jp
lea
cs
loop
jle
xchg
pop
and
mov
xor
scas
pop
pop
push
lock
push
add
xor
sbb
and
cmpsb
or
push
aam
hlt
jne
ret
sti
call
test
jecxz
fidivrl
les
clc
stos
and
hlt
cmpsw
xor
xor
cbtw
mov
in
xor
sub
cmp
or
leave
xor
andl
subl
arpl
add
ds
call
mov
add
jnp
or
dec
pop
ret
add
pop
imul
pop
mov
into
mov
inc
cld
cltd
daa
or
push
sub
bnd
push
int
jle
enter
popf
sahf
mov
lahf
hlt
lods
in
aad
sbb
pop
dec
popf
pop
xor
xor
pop
imul
xchg
cmp
in
fisubrs
adc
cmp
and
dec
mov
js
outsb
mov
pushf
mov
clc
pop
push
mov
hlt
daa
fcoms
jnp
add
add
les
mov
repnz
push
adc
sbb
gs
rclb
xorl
add
aam
clc
adc
sbb
scas
in
sahf
sub
popa
insb
pop
fdivl
xchg
sbb
jbe
sbb
cli
int
push
lcall
stos
xor
or
mov
or
inc
mov
out
push
jo
add
int
jecxz
ss
outsb
push
push
jns
and
out
xlat
pop
adc
pop
cmp
pop
outsl
xorb
lock
push
add
cs
jo
sbb
rclb
push
lahf
stos
rorl
xor
iret
fwait
adc
sbb
mov
in
push
mov
push
ficompl
adc
mov
mov
lcall
rorl
test
in
or
jb
stos
or
xor
xchg
cmp
insl
xchg
sub
rol
jo
xchg
mov
loope
and
xchg
fld
sahf
out
cmp
shl
sub
cmpsb
xchg
xchg
mov
insl
mov
lret
dec
xor
cwtl
dec
insl
in
push
hlt
mov
enter
add
aad
sarb
stos
xchg
fisubrs
mov
pop
mov
xor
in
jle
inc
inc
mov
xlat
ja
ret
sbb
icebp
stos
test
ljmp
adc
mov
xor
outsl
mov
imul
and
and
pop
hlt
mov
lods
mov
mov
loope
and
ret
and
jp
dec
ljmp
cltd
sar
jp
int3
xchg
mov
lcall
xor
mov
xor
enter
and
sbb
push
outsb
cmpb
push
iret
xor
les
add
add
jbe
testl
jbe
adc
popa
push
sbb
and
andl
mull
sub
lahf
dec
or
into
adc
dec
cmp
xchg
scas
jp
pop
push
insb
shrb
jmp
fistps
test
xchg
inc
pop
lods
dec
aad
push
adc
add
leave
fimull
jge
out
aad
ss
popa
lea
ja
jp
inc
cmp
loope
pop
cmp
lea
enter
push
push
daa
mov
dec
and
jno
pop
inc
je
inc
cmpsb
movsl
sahf
inc
lods
adc
sub
mov
adc
orb
inc
dec
push
push
dec
testb
negb
in
inc
lock
mov
dec
arpl
lret
sbb
inc
mov
fisubrs
cmp
rorb
ss
rol
lods
addr16
es
jne
pop
xchg
std
xchg
in
lea
sbb
outsl
sbb
stos
add
mov
test
popa
inc
pop
clc
ja
sarl
sub
dec
icebp
int3
sub
ljmp
ret
pop
lret
jle
xchg
test
dec
lret
clc
lfs
out
sbb
and
mov
loop
push
ss
in
sti
mov
fwait
push
jno
shll
and
data16
adc
stos
jp
add
cmp
lds
sub
in
or
xchg
xor
cld
into
lock
shll
fistpl
insl
popf
js
nop
popa
icebp
out
aaa
lahf
mov
loope
lds
es
scas
mov
jne
jge
xchg
or
xchg
xchg
aas
sbb
mov
call
cmp
out
adc
fidivrs
test
xor
and
loope
shrb
xchg
jno
aas
sub
test
inc
mov
loop
lds
int
ret
jno
arpl
jle
jmp
xchg
int
jo
mov
sub
lods
mov
xor
and
and
scas
push
shrl
cmp
mov
push
sbb
and
xchg
iret
loope
pop
push
xchg
mov
pop
aas
inc
pop
jno
scas
aad
xchg
loopne
xchg
roll
test
inc
mov
push
jl
gs
int3
ficompl
addr16
fstpl
sub
or
pop
pop
cmpb
mov
orl
adcb
sub
insl
cli
pop
or
and
and
cmp
cmpsb
in
in
scas
xor
add
fldt
inc
hlt
rorb
mov
add
and
and
jg
pop
out
jnp
test
stos
or
fiadds
mov
adc
mov
pusha
sbb
mov
mov
jg
fbld
into
mov
dec
inc
mov
xchg
xchg
clc
cmpsl
or
lods
and
test
dec
bound
sahf
movsl
rcr
ljmp
dec
ss
int3
fwait
push
imul
test
dec
enter
arpl
or
lcall
outsl
add
rcl
or
aas
xor
shll
sub
jns
cwtl
pop
cmpsb
mov
push
imul
sub
fisttps
add
out
fnsave
push
xorb
popf
jns
shll
mov
add
lods
daa
push
lods
cwtl
in
xor
dec
mov
je
and
or
inc
mov
push
jno
test
jmp
inc
sub
loop
iret
xchg
repnz
xor
push
lcall
cmp
mov
notl
or
pop
repz
adc
emms
push
dec
sub
and
out
filds
adc
xor
mov
nop
cmp
loope
jno
cli
and
jb
and
in
push
js
shlb
adc
xchg
stos
movsb
cwtl
insb
pop
inc
cli
adc
js
fdiv
mov
sti
sub
lahf
nop
sub
and
test
mov
in
dec
cmovnp
xchg
gs
aad
mov
mov
mov
jl
scas
pushl
daa
loop
fsubrs
stc
push
and
inc
fldt
sub
dec
insl
outsl
std
push
push
fcoml
dec
andb
fwait
aad
or
pop
jge
and
iret
into
jo
mov
ja
push
sbb
jnp
adc
leave
stos
push
std
jp
cmpl
and
push
ret
add
sahf
mov
jge
mov
mov
cld
xor
or
pop
fwait
cld
sarb
ss
gs
adc
pop
xchg
or
sar
mov
gs
sbb
sub
js
pusha
and
loope
lret
movsb
mov
out
xlat
dec
mov
add
add
inc
pusha
cmpsl
jp
movsb
mov
sub
orl
lret
and
jbe
or
and
out
dec
jns
rcll
rcr
bts
mov
loopne
shrb
jbe
andl
jl
push
add
dec
shr
xchg
xchg
fmull
inc
mov
mov
pop
mov
xor
or
push
mov
orl
jne
mov
jge
add
call
mov
js
popf
pop
sub
cmp
push
pop
and
rorb
or
out
jb
bswap
sahf
fcmovnu
inc
xlat
addb
jno
push
cmp
cli
sub
lock
lret
outsb
or
flds
fs
xchg
xchg
addr16
push
mov
stos
push
test
aas
push
add
cmp
cmp
adc
or
in
mov
in
sbb
inc
mov
lods
cli
add
stc
sbb
clc
shr
rolb
jb
enter
testl
pop
orl
and
pop
xlat
adc
in
cmp
and
pop
mov
sahf
popa
stos
pop
adcl
mov
dec
sub
addb
cmpsb
mov
xchg
jp
les
bound
push
xchg
rclb
and
mov
out
out
mov
outsl
leave
sub
repnz
push
int3
pop
jg
jecxz
adc
out
dec
aad
cmp
je
cld
bound
jl
mov
mov
xchg
pop
sahf
cmc
fcmove
pusha
cmp
jmp
jecxz
fildll
sub
loopne
cmp
js
and
mov
stos
mov
clc
jae
fwait
mov
out
sbbl
fmuls
sbbl
gs
dec
cmc
movsb
xor
sbb
mov
push
jae
cmp
hlt
sub
sbbl
or
mov
fidivrs
cmp
and
scas
and
ljmp
dec
xchg
mov
aaa
mov
lods
push
je
jmp
ret
iret
scas
inc
pop
sti
cmp
xor
and
push
pop
xlat
je
add
outsl
aad
jae,pt
inc
inc
fiaddl
pop
push
movl
ljmp
or
push
aam
and
in
rcl
lahf
push
jle
andl
inc
sub
dec
mov
cmpb
addr16
stc
sbb
es
xor
es
cld
and
mov
test
inc
std
call
fldl
enter
push
movsl
jno
mov
fldt
dec
repz
xchg
jecxz
adc
test
xlat
dec
cs
mov
jbe
pushf
add
movsl
hlt
pop
scas
enter
sub
mov
sub
std
das
jbe
popf
cld
adc
dec
jo
andb
xchg
fsubrs
mov
add
sbb
loopne
aas
sub
mov
ret
pop
pop
test
ljmp
or
outsb
mov
mov
cmpsb
jge
cltd
mov
mov
dec
dec
rcrb
jl
sub
mov
and
fwait
sub
fidivl
and
mov
nop
jecxz
push
lret
les
data16
add
repnz
lds
lret
pusha
inc
fstps
adc
dec
clc
out
fildl
xchg
xor
push
orl
frstor
insb
les
dec
inc
movsb
jae
fs
test
cmp
lret
popa
mov
sub
push
jp
ss
popf
mov
dec
sbb
or
jno
pop
pop
fisubrl
cli
loopne
jno
int3
xor
ljmp
adc
xchg
lret
mov
int3
jae
xor
aam
or
test
adc
testl
repz
sub
sarl
mov
lock
clc
test
cltd
and
loop
or
fisttps
and
mov
or
pop
call
sub
fs
sub
jo
pusha
mov
gs
out
jge
push
mov
and
call
mov
das
xchg
adc
pop
xor
lret
xlat
int
mov
inc
cmpsl
add
pop
jl
lods
jno
xor
dec
in
cmpsl
cmpsl
adc
cmp
pop
push
dec
push
lods
xor
les
jmp
sub
fnstcw
mov
pop
jmp
addb
adc
xor
int
jge
lcall
daa
adc
dec
push
mov
sti
daa
inc
int3
insl
cmp
cli
jnp
ss
stos
hlt
dec
sbb
and
fsubl
push
sbb
mov
pop
inc
repz
push
ljmp
fldl
inc
cwtl
jecxz
inc
or
or
xchg
out
push
sub
mov
inc
test
repnz
add
add
mov
sub
sbb
inc
xchg
test
andl
or
sub
pop
xchg
xchg
movsb
xchg
jmp
mov
or
scas
lds
cmp
fwait
pushf
fxam
mov
cs
rorb
std
ss
jmp
lret
push
and
push
mov
enter
ret
mov
xchg
inc
push
mov
jnp
xor
in
shr
push
aam
xchg
les
inc
xlat
cmp
addr16
mov
and
pusha
xor
xchg
mov
mov
rcr
mov
mov
jg
sbb
psllq
push
mov
into
jle
jmp
imul
xchg
repz
cmp
pop
mov
sub
movsb
outsl
sbb
xchg
mov
sub
mov
push
negb
test
shlb
les
clc
and
cltd
cmp
inc
add
fisttpl
sarb
pop
ficompl
test
loopne
inc
pop
iret
mov
je
aaa
repz
cs
fstps
mov
adc
insb
and
xchg
mov
pusha
dec
dec
lock
fidivs
mov
cs
fstl
push
daa
pop
xor
push
ja
jne
mov
xor
movsb
rorl
iret
sbb
in
js
mov
mov
outsb
sti
dec
clc
test
daa
and
jge
mov
sub
insl
xor
stc
xchg
pop
and
mov
push
jo
adc
in
fwait
aad
addr16
sub
js
pop
or
or
enter
movsb
jmp
movsl
inc
sbb
arpl
sub
sub
ljmp
shlb
mov
push
sbbl
push
sahf
inc
add
nop
std
aad
or
insb
imul
lret
stos
out
dec
fdivs
popf
cmp
mov
or
in
push
in
inc
fildll
push
loopne
imul
cmpsb
mov
aaa
sti
pop
dec
popa
testl
dec
rcll
mov
lahf
mov
nop
xchg
ret
sub
inc
sub
shlb
mov
mov
xorl
push
cwtl
mov
stos
fisubs
int3
mov
jl
jno
adc
or
add
fwait
xchg
nop
inc
push
add
out
add
push
pop
pushf
out
incl
out
aad
rclb
mov
bound
mov
inc
mov
pop
and
out
jmp
sahf
jl
mov
sub
xor
adc
ficomps
fwait
add
push
xor
push
stos
add
iret
icebp
ds
repnz
lds
xchg
les
loopne
enter
and
mov
push
int3
jle
out
outsb
hlt
test
sub
dec
jl
cmp
mov
out
outsl
cmp
test
or
test
push
mov
sbb
pop
add
xor
and
pushf
xor
jbe
outsb
fistpll
icebp
pusha
mov
jg
sub
xchg
ljmp
rcl
movntq
inc
loop
pushl
inc
inc
test
aas
mov
jns
in
dec
xor
xchg
inc
and
clc
ds
fisubs
popf
jmp
ds
mov
rcll
scas
push
not
pmovmskb
push
in
lods
bound
add
or
jnp
push
push
je
insl
sub
add
jbe
testb
inc
cli
pop
loop
dec
or
mov
popa
pop
in
sub
or
repnz
mov
test
hlt
stos
aas
push
sub
adc
data16
sub
sti
add
int
movsl
cli
and
adc
stc
mov
out
sub
jg
outsl
xor
pop
mov
negb
dec
js
inc
in
cmc
mov
xorl
or
xor
mov
sub
aaa
leave
or
fimuls
mov
cmp
mov
lahf
adc
nop
mov
repnz
xchg
xchg
loopne
icebp
mov
cmp
sbb
test
push
push
test
rcll
push
int
xchg
loop
cmp
dec
icebp
cs
lcall
pop
or
scas
movsl
pushf
mov
and
push
or
jg
mov
sub
aaa
mov
loopne
xchg
js
ffreep
mov
lock
pop
mov
sahf
out
jne
sar
aas
mov
hlt
popa
out
pop
aaa
xchg
ret
not
fiadds
jne
and
dec
icebp
fsubrl
pop
cmp
sbb
xchg
sub
push
mov
push
cmp
lods
out
cwtl
dec
cmpsl
adc
outsb
leave
rorl
or
push
mov
push
mulb
nop
out
cmp
adc
xchg
inc
push
and
movsl
cltd
mov
xor
mov
ss
movsb
iret
rorl
lahf
decb
je
xchg
pop
out
aaa
out
and
lea
jmp
scas
inc
and
clc
add
test
and
xor
ret
jns
cmp
cmp
inc
mov
push
in
addb
outsl
or
mov
fiadds
rorb
ret
cmp
add
jp
and
jle
pop
andl
mov
in
push
arpl
pop
sub
call
fldt
gs
outsl
push
scas
jle
das
and
jle
addr16
std
or
aaa
jl
push
push
mov
add
mov
inc
push
push
mov
repnz
mov
std
mov
scas
sbb
cs
js
mov
push
fwait
testl
xlat
xor
sahf
and
jl
sub
aaa
fstps
xchg
popa
pop
push
mov
mov
in
add
inc
sbb
cmc
fwait
pop
movsl
dec
and
mov
sbb
or
test
jnp
loop
jno
ss
enter
shrl
testl
xchg
ret
pop
push
mov
and
mov
jnp,pn
aad
scas
loope
jl
push
and
rolb
pushf
loope
ficoml
sbb
sub
pop
out
fwait
icebp
out
test
or
jnp
sbb
inc
xchg
jbe
leave
adc
mov
jecxz
mov
and
add
xchg
popa
lods
rcrb
pop
pop
je
cli
imul
rcll
xchg
cmp
mov
sbb
push
out
cmp
sub
mov
call
pusha
jbe
sub
int
xor
negb
leave
sbb
mov
mov
add
xchg
adcb
sti
inc
xchg
enter
out
jo
outsl
jae
icebp
fmul
addl
test
les
pop
dec
ljmp
lods
mov
mov
popf
jl
adc
fs
test
outsl
leave
daa
arpl
neg
test
int
das
sbb
jb
pop
movl
lods
shl
mov
push
mov
pop
loope
stc
insl
sub
es
popf
add
lret
shlb
sbb
mov
fiadds
mov
stos
inc
jle
push
mov
or
popa
aaa
popf
sti
repnz
in
mov
pop
ret
and
inc
leave
jmp
push
push
iret
jge
and
sbb
aas
dec
mov
or
insl
push
insl
dec
sub
mov
xchg
movsl
movsb
push
insb
out
int3
mov
sbb
adc
aam
dec
clc
xchg
add
sub
movb
out
add
cwtl
mov
arpl
mov
pop
stc
popf
inc
mov
mov
push
sub
movsb
shlb
stc
jno
loope
pop
adc
and
scas
lds
scas
mov
sub
xchg
inc
mov
jp
dec
imul
dec
inc
mov
jmp
add
ror
test
dec
dec
jo
subl
loopne
mov
and
and
ljmp
xor
xor
das
test
add
fmul
or
jmp
addr16
mov
pslld
mov
pop
xchg
sbb
mov
or
out
pop
push
addb
inc
out
insl
cltd
sub
out
fcompl
test
sub
xchg
or
sub
cmpsb
sub
push
stc
dec
mull
pop
push
mov
aas
push
pop
pop
dec
or
cwtl
and
xchg
pcmpgtw
pop
sbb
pop
and
add
out
push
jecxz
xchg
std
xor
cld
pop
pop
add
push
dec
push
push
xor
inc
mov
dec
push
mov
repnz
jnp
push
in
or
scas
mov
mov
jo
es
int
fsubrl
pop
adc
sbb
push
sbb
fdivs
cmc
scas
outsl
mov
leave
add
imul
div
pop
outsb
add
dec
dec
insb
movsl
add
pusha
mov
fs
sbb
sub
dec
test
cmp
scas
dec
sbb
out
cmp
mov
mov
ljmp
push
adc
xchg
mov
pop
push
push
leave
push
xor
imul
dec
leave
daa
icebp
mov
repz
mov
insl
lods
ret
or
or
adc
inc
pop
popa
mov
xchg
repz
loop
lret
stc
ja
lods
xchg
xchg
sbb
cmpsb
mov
lret
mov
pop
add
lahf
hlt
add
in
scas
jle
xlat
icebp
jmp
out
mov
stc
push
cmp
cmp
adc
cmc
pop
xchg
shrb
movsl
mov
pop
lea
outsl
mov
push
aam
jg
mov
cmp
fwait
sahf
cltd
out
pop
ljmp
jbe
jecxz
xchg
insl
jo
mov
mov
mov
xchg
push
pop
test
mov
daa
mov
or
gs
or
push
lods
int3
pop
jbe
xchg
xchg
rcrb
add
sbb
inc
jb
mov
mov
jp
aad
mov
mov
cmc
les
inc
and
cwtl
ja
mov
lret
sti
test
inc
pop
ja
scas
jns
cmpb
push
mov
movsl
insb
cmc
xor
scas
mov
lcall
pushf
add
pop
icebp
outsl
clflush
sbb
stc
xchg
jmp
rclb
daa
out
call
addr16
les
xchg
dec
cld
mov
push
cli
ret
xchg
jne
mov
add
test
push
xor
and
lock
mov
or
add
adc
push
cmp
adc
test
or
movsl
adc
jecxz
test
and
sbb
inc
sbb
mov
dec
jae
das
notl
mov
lea
out
and
jnp
dec
push
dec
or
mov
data16
out
mov
xchg
add
jecxz
lcall
adc
fisttps
call
fs
incl
push
pop
pop
xchg
arpl
sti
mov
aad
sub
cmp
adc
shlb
mov
or
dec
fdivrp
cwtl
and
dec
pushf
cwtl
les
mov
cmpsb
adc
test
iret
je
jno
outsl
cltd
orb
or
jb
mov
sub
dec
fsubp
decl
incl
decl
in
push
sbb
sar
cs
or
mov
dec
cs
fnstcw
mov
push
dec
add
and
repz
rcl
outsb
jmp
xchg
adc
mov
sahf
sbb
clc
das
jo
and
and
sbb
idivb
ss
jo
lahf
xor
push
dec
sbb
sti
mov
das
fs
mov
and
sahf
dec
pmullw
push
add
adc
pop
xor
int3
enter
push
dec
add
fcomps
pop
dec
xchg
sahf
rolb
lods
in
dec
enter
sarb
add
inc
lret
jl
filds
outsb
or
mov
shrb
pop
jae
ret
divb
aas
fldt
dec
or
sub
xchg
jg
or
in
lcall
adc
fs
sub
jae
cld
imul
imul
fimuls
xor
cmp
das
push
aas
daa
mov
jno
movsb
addb
push
xor
or
pop
roll
imul
dec
fwait
mov
xor
adc
xchg
cmpsl
imul
or
iret
mov
pop
cmp
inc
repnz
xor
pop
mov
mov
xchg
jle
push
sbb
std
mov
sarb
aad
or
mov
cwtl
cmpsb
repz
cmc
xchg
iret
fsubrs
adc
mov
test
and
jmp
insb
ja
adc
jbe
lret
sub
outsl
pop
mov
add
out
mov
int3
dec
jge
pop
mov
inc
inc
mov
jmp
movsb
push
dec
sbb
outsl
pop
pop
jecxz
xchg
sahf
xor
lcall
dec
mov
fists
add
scas
subb
stc
xor
lods
mov
pop
cmp
dec
push
inc
in
mov
mov
dec
add
adcl
aam
push
mov
outsb
xchg
lret
lock
insb
aas
test
adc
lds
cs
insb
orb
andb
xchg
es
ficomps
sbb
sub
sub
mov
sub
mov
cmp
fsubrp
lock
fadd
mov
out
adc
mov
jns
ret
push
rorb
sbb
movsl
mov
daa
push
xor
pop
lods
stos
jno
lods
dec
outsl
and
sub
mov
and
xor
mov
imul
sbb
or
cmpsl
jbe
pop
fidivrl
pop
jmp
rcll
mov
jge
xchg
jne
aaa
inc
ss
adc
sarb
shrl
ret
mov
pop
push
mov
mov
fdivs
sub
jmp
xchg
fwait
stos
adc
xor
pop
cs
movsl
imull
aad
cmc
fildl
or
add
int3
inc
stos
cli
adc
loope
xchg
mov
mov
mov
sub
bound
scas
fs
adc
shl
dec
mov
adc
jmp
sti
fcomi
cmpsb
cli
dec
jecxz
in
fstl
sbb
push
lock
push
hlt
xor
jle
mov
mov
pop
movaps
push
inc
mul
jmp
cmpsl
pushf
push
call
cmp
lock
push
inc
test
pop
into
dec
sarl
aad
or
cmpsb
fsubl
mov
aas
xor
sub
ljmp
inc
jns
jo
mov
decl
cmp
popa
out
lea
mov
xlat
jle
stc
push
popa
pop
mov
mov
addr16
std
mov
mov
ja
cwtl
jg
divb
mov
mov
ret
push
mov
inc
jb
mov
cmp
inc
pop
mov
sub
or
leave
ret
adcb
inc
adc
push
lea
jb
outsb
dec
mov
pop
jne
dec
xchg
gs
out
out
sahf
jo
test
xor
mov
or
call
and
mov
in
shll
lret
pop
jnp
stos
push
insl
and
hlt
mov
rolb
test
mov
ss
push
jbe
cmp
dec
lret
mov
aad
push
jo
push
xor
stc
lea
popa
xchg
dec
push
and
loope
push
pushf
hlt
add
jb
push
icebp
out
xor
out
push
and
push
cmp
gs
dec
in
push
js
or
mov
adc
hlt
orl
jae
fcomi
mov
in
dec
in
cmpsl
xlat
ljmp
cmp
push
pop
scas
out
out
movsb
test
movsb
test
mov
mov
inc
imul
add
pop
data16
inc
push
adc
aad
sbbb
or
push
ss
test
lock
mov
movsb
jno
les
push
mov
xor
cltd
fstsw
mov
xor
mov
in
xchg
push
mov
loope
mov
adc
outsb
in
andb
repz
bound
jecxz
stos
fildll
test
inc
jo
pushf
jnp
idivl
dec
aad
fisubs
js
xor
jnp
mov
xor
fisttpll
adc
sub
and
mov
mov
pushf
repnz
xor
push
sub
lahf
arpl
push
stc
pop
enter
xlat
adc
jns
scas
push
sbb
outsb
ds
stos
mov
sti
xor
push
dec
mov
orl
mov
dec
inc
mov
dec
sub
pop
adc
push
in
mov
jecxz
cltd
fsubs
lret
sbb
pop
scas
dec
jnp
stos
in
mov
leave
sbb
in
add
ror
fadds
hlt
push
xor
divl
mov
jl
push
jle
push
leave
cmp
repz
xor
add
mov
xlat
data16
pop
or
lret
shlb
movb
xchg
mov
xorl
pop
push
jo
loope
cmpsb
loope
jg
cmc
mov
data16
mov
push
rorl
xchg
mov
out
mov
jae
daa
xchg
fdivrl
push
cmovge
sbb
push
pop
add
inc
fsubl
jnp
es
sahf
cmpsl
out
imul
lret
fdivr
fsubs
cmpsl
xor
lahf
icebp
dec
inc
mov
push
jmp
inc
jmp
fidivs
inc
xchg
xchg
int
sti
jmp
in
sbb
and
push
and
aam
xlat
loopne
pop
pop
ror
hlt
add
pop
push
loop
mov
mov
ret
push
mov
inc
test
lods
stos
ss
mov
jle
xor
les
mov
cwtl
out
and
cli
dec
jg
in
inc
loope
jbe
xor
jecxz
inc
repz
inc
gs
dec
into
aam
inc
fucomip
testb
mov
xchg
mov
arpl
cmc
jecxz
mov
aam
push
cmpsl
inc
inc
dec
mov
mov
testl
nop
adc
sbb
repnz
push
call
jbe,pn
out
push
test
adc
and
repz
fsubs
in
inc
xor
pusha
es
push
adc
xor
fimull
enter
sbb
inc
insb
repnz
test
adc
outsb
jne
les
shrl
lret
lea
pop
mov
repz
push
ret
pop
push
aad
push
lods
inc
mov
mov
addb
jp
aad
inc
gs
dec
into
ret
adc
xchg
pop
mov
subb
test
jle
loope
cmp
mov
ja
push
sub
push
xor
jb
hlt
add
jno
jecxz
repz
leave
repz
mov
insl
into
aaa
mov
add
test
jecxz
and
and
pop
mov
mov
sarl
add
cmp
and
fidivrs
loop
movsb
cmp
stc
cmp
icebp
rorl
xchg
push
leave
fwait
cmc
out
mov
dec
sbb
fcom
jmp
dec
jmp
sub
xchg
mov
in
jmp
and
adc
mov
test
clc
jo
xor
mov
push
outsl
xor
sub
popf
popa
repnz
inc
loope
cli
pushw
pusha
mov
frstor
and
mov
jge
add
stc
fmull
loop
mov
rol
xor
test
ficoms
aam
ja
enter
dec
add
sub
jae
es
out
jl
addr16
repnz
mov
lods
and
mov
or
arpl
ret
in
push
sub
jnp
xchg
movsb
icebp
jg
and
ret
int3
hlt
sti
call
jns
mov
aas
sub
inc
push
inc
mov
jmp
or
fs
cwtl
inc
add
neg
cmpsl
notl
dec
mov
arpl
or
movsl
fimull
insl
jb
xor
pop
sbb
ds
aaa
mov
testb
ds
lret
sbb
xorl
pushf
stos
lods
push
aad
int3
lock
in
loope
out
hlt
sub
add
inc
or
ret
lea
outsb
sub
mov
jge
jo
add
cmp
sahf
dec
lcall
push
test
into
fcompl
sub
xor
add
add
scas
pop
in
xor
sub
sbb
movsl
adc
in
incb
and
pop
adc
enter
xchg
adc
subl
jmp
cmc
cmp
je
cmp
into
imul
pusha
sbb
inc
repnz
fst
sti
stos
movsl
aad
lds
xchg
hlt
dec
jmp
push
jp
lret
xchg
cmp
xchg
daa
mov
pusha
sti
iret
movb
movsl
mov
pop
ds
iret
jae
rcll
lahf
jns
inc
mov
mov
movsl
mov
pop
ds
iret
jae
rcll
mov
aam
and
or
lcall
aam
lret
addr16
inc
lea
dec
mov
mov
inc
xchg
jno
adc
cld
rcrb
mov
mov
aaa
hlt
test
cmp
das
dec
sub
pop
push
sbb
fs
sbb
xlat
dec
clc
cmp
imul
xchg
push
add
jecxz
aam
cmp
shrl
dec
in
mov
clc
jb
popf
stos
and
popf
hlt
cmp
push
lds
cld
dec
xchg
jno
lret
jnp
push
addr16
mov
mov
aad
loopne
or
dec
sub
movsl
xor
push
add
mov
add
fisubs
push
dec
cmpsb
jne
fadds
or
arpl
pop
sbbl
xchg
jae
in
xor
notl
pop
cmp
in
or
mov
arpl
stos
test
inc
fidivrl
in
shlb
sbb
and
rcr
fwait
mov
or
mov
xchg
aad
test
push
mov
push
and
fs
shrb
movl
aaa
add
scas
add
lahf
sub
add
daa
sarb
mov
jnp
jle
loop
aad
pop
mov
addl
psubsb
xchg
or
out
cmp
adc
test
xchg
fsubl
xchg
leave
decb
or
sbb
push
mov
push
aad
mov
pop
mov
fdivrs
cmp
sub
icebp
mov
call
clc
and
incl
dec
cmpsb
out
adc
pcmpgtd
push
cwtl
fsubl
add
ljmp
repz
mov
inc
out
mov
stc
add
or
addr16
xchg
aaa
lock
inc
xchg
movsb
stos
data16
ror
or
dec
sbb
in
ret
fists
stc
mov
and
cld
in
xor
gs
lret
cld
mov
push
pop
js
jne
or
cld
xchg
aas
inc
pushf
pop
js
mov
sub
pop
xor
dec
push
or
mov
cmp
pop
daa
mov
push
idivl
push
push
dec
cmp
xor
ret
pop
shl
add
ja
jne
jb
ret
xchg
lea
scas
pop
mov
adc
jp
aas
out
insb
xchg
arpl
jl
push
lcall
mov
dec
testl
push
cmc
cmp
out
push
pop
in
jbe
cmp
sbb
call
repz
mov
cmp
andb
ret
push
fstp
dec
enter
iret
mov
push
inc
adc
and
lea
or
popf
pop
cmp
mov
and
int
jae
imul
mov
sub
or
fistpl
fwait
fs
imul
out
or
pop
jo
cmpsb
xchg
or
scas
pop
push
mov
jns,pn
add
dec
adc
ja
adc
mov
or
mov
push
jmp
fdivrl
dec
test
pop
pop
sahf
and
xor
xchg
or
cmp
test
cmpsl
jmp
and
and
cmp
stc
test
lds
pusha
pop
mov
movsl
xchg
push
cwtl
sbb
mov
add
lret
lods
bound
sbb
mov
insb
clc
outsl
rcl
pop
inc
lahf
cltd
add
les
pusha
push
sub
cmpsl
out
fneni(8087
mov
push
push
cs
sbb
dec
sti
clc
xor
sbb
xlat
adc
ja
cmp
les
jge
or
xchg
xor
scas
ret
lret
ffreep
add
ret
insl
mov
mov
cmc
js
adc
hlt
sbbb
fwait
xor
mov
sub
add
out
adc
adc
shrb
ss
xor
lods
push
jmp
sbb
popf
subb
sub
push
xor
sub
lea
mov
out
add
stos
into
xor
push
mov
mov
jp
add
sub
cwtl
xor
lds
shrl
pushf
loope
hlt
addr16
inc
dec
push
fs
adc
pop
dec
jnp
cmpsb
ret
sahf
leave
lods
mov
or
cmp
rorl
movsl
xchg
push
cwtl
jae
daa
push
push
push
cmp
call
mov
jae
mov
iret
std
cmp
pop
xchg
sub
and
outsl
cmp
jle
fcomi
mov
push
xor
jne
mov
ret
sti
and
and
mov
test
outsb
lcall
outsb
loopne
test
cmp
mov
inc
movsl
mov
push
inc
jp
mov
push
int
into
and
xchg
adc
ret
enter
scas
scas
fs
push
rclb
xor
jbe
shll
mov
into
stos
clc
daa
mov
or
ss
nop
xchg
and
mulb
sbb
int
addb
and
jmp
movsl
adc
dec
mov
pop
jp
jnp
xor
mov
lret
std
cwtl
or
push
xchg
xor
lahf
imul
mov
rorb
push
fsts
jbe
xchg
push
into
int3
xor
fistpll
push
cmp
out
push
pop
in
jbe
cmp
sbb
call
cli
add
jbe
sub
scas
je
pop
fs
push
sbb
mov
in
push
mov
scas
push
shll
push
cmpsb
dec
sub
push
mov
mov
aas
inc
mov
lea
fs
stos
fwait
pop
adc
or
inc
std
maxps
add
adc
aad
push
shrb
inc
lret
mov
cmp
loopne
add
test
push
cs
dec
hlt
pushf
add
in
fnstcw
ret
pushl
inc
ret
add
and
cmp
mov
lea
jo
aad
ljmp
jb
shll
sub
int3
and
jns
or
nop
pop
fcomps
pop
movsb
daa
pusha
lahf
les
fisubs
fistps
push
xchg
cmp
outsb
lret
orl
sub
push
or
sub
cmpb
jbe
fldenv
xchg
push
xor
sbb
popa
and
sub
testb
mov
add
adc
push
jbe
dec
sti
mov
mov
loope
les
and
fstps
enter
jno
test
outsl
hlt
lret
lods
bound
sbb
mov
insb
clc
outsl
rcl
pop
inc
lahf
cltd
add
les
pusha
push
sub
cmpsl
out
fneni(8087
mov
push
push
cs
sbb
dec
sti
sbb
arpl
nop
jl
pop
ret
out
lock
imul
xchg
cld
leave
adc
rol
sub
mov
out
adc
and
add
aaa
aas
mov
js
lds
arpl
pop
jnp
stos
out
nop
das
adc
and
jns
dec
arpl
lods
xor
xor
and
ror
jb
push
push
lret
push
adc
repnz
jbe
mov
inc
repz
scas
dec
lods
pop
loope
mov
test
cmp
push
mov
pop
jl
jp
addl
mov
loope
addr16
icebp
mov
mov
or
fbstp
mov
or
dec
xorb
mov
andb
cmpsl
fwait
mov
push
fcoml
or
rol
daa
mov
ss
add
ds
sub
pop
aam
jge
insb
mov
imulb
and
sbb
or
jbe
stos
sar
mov
ficomps
jmp
mov
arpl
rcll
adc
xchg
lods
in
mov
lods
push
or
jmp
inc
mov
pop
lock
sti
push
pop
or
lcall
movsl
lea
xchg
test
jp
fisubs
xorb
push
mov
pslld
les
lahf
sub
mov
cmp
jp
loopne
jb
jecxz
negl
fisttps
nop
inc
jb
jmp
mov
and
loopne
dec
xchg
adc
outsb
xchg
push
mov
aam
cmpsl
mov
mov
pushf
movsb
imul
push
jb
mov
lods
and
lods
stc
pop
push
rcrb
jmp
mov
test
fisttpll
xor
fistl
scas
pushf
js
pop
outsb
sahf
dec
addr16
icebp
mov
aam
pusha
mov
fstl
bswap
sti
sarl
std
insb
mov
arpl
sub
aad
sti
insb
mov
imul
pop
inc
test
push
insl
sub
test
es
nop
aam
cbtw
or
icebp
ret
xchg
inc
pop
pop
mov
cmp
add
lds
mov
xor
test
fiadds
cmc
cmp
or
push
fistpl
xchg
adc
cmp
jmp
les
cmpsb
jecxz
movsb
es
jo
aam
out
jbe
pop
jecxz
nop
jo
out
and
clc
sbb
cmp
es
rcll
mov
int
xlat
imul
jp
sub
in
rol
enter
andb
mov
sub
bound
daa
shll
pop
push
jae
mov
pushf
lods
mov
add
in
xchg
mov
sub
and
cmp
xor
incb
adc
inc
stos
fcom
jmp
fisttpll
scas
fcmovnu
mov
pop
scas
ret
sbb
inc
jmp
mov
aam
dec
lea
hlt
stos
add
jns
jl
sbb
popa
or
outsl
out
test
jae
xlat
dec
je
mov
in
add
jecxz
sub
fwait
push
dec
adc
mov
lret
sub
fldl
aad
fisttpll
jb
sahf
movsl
adc
pop
jp
mov
call
movsb
mov
fcmovb
stos
xor
sub
fs
cmpsl
fiaddl
stos
xor
jp
lock
jb
incb
aad
fisttpll
lahf
in
xchg
mov
sub
mov
es
sub
lret
push
sub
leave
rcrl
adc
add
mov
adc
sbb
and
lcall
adc
mov
jbe
rcr
adcl
imul
cmc
imul
gs
sbb
in
mov
jecxz
jmp
cmpsl
ja
pop
stc
pop
inc
add
xchg
dec
fs
int3
xchg
movsb
xchg
imul
imul
repz
sub
mov
xchg
xlat
xchg
pop
je
out
inc
mov
mov
mov
insb
push
adc
imul
xor
pop
adc
popf
popf
sub
and
cmp
xchg
in
inc
jle
outsb
and
mov
push
sbb
pushf
cmp
jp
adc
ret
push
cwtl
out
add
leave
fldenv
fdivl
push
lea
movsl
insb
and
arpl
xchg
or
iret
orb
sub
push
pop
push
lret
icebp
lret
inc
jns
add
mov
scas
cmpsl
xor
mov
jo
stos
fistpll
dec
dec
mov
or
sbb
mov
das
cld
xor
xchg
cmovae
sbb
out
or
dec
sub
push
xor
daa
and
adc
mov
adc
fisubl
repnz
sub
test
loopne
jbe
stos
cmp
insl
fwait
pop
mov
dec
icebp
hlt
scas
dec
dec
mov
xchg
loopne
add
or
lock
jecxz
jecxz
ss
mov
cmp
filds
ljmp
xlat
pushf
push
shlb
add
rcrb
outsb
je
or
in
nop
xor
mov
adc
inc
xor
call
lds
sbb
or
adc
stos
movsb
aam
xchg
stos
add
roll
xchg
push
inc
ficoms
jns
std
testl
pop
cmp
out
ror
loop
ljmp
and
sub
not
cmp
pop
int
in
mov
je
repz
pop
out
fsubl
jae
loopne
repnz
sub
mov
movsl
bound
fstps
aas
cwtl
cs
popl
fcmovne
adc
out
inc
icebp
aam
mov
or
mov
test
sub
mov
iret
fyl2xp1
shll
or
cs
pop
and
push
cld
loope
mov
xchg
mov
call
cmpsb
cmpsb
inc
jnp
ja
in
enter
or
aaa
cmpsb
loope
mov
push
and
orb
iret
cmc
in
jg
dec
inc
inc
lret
or
xchg
sahf
outsb
cs
mov
sub
mov
cli
test
das
sbb
in
lahf
pop
sbb
add
push
outsb
lcall
pop
jno
cmpsl
add
jbe
cmp
lock
mov
push
mov
push
aas
das
imul
mov
mov
ja
jle
xchg
sbb
inc
out
sub
mov
ud2
stos
fs
mov
in
jae
mov
adc
mov
mov
inc
sub
ret
out
jo
pushf
jb
popf
inc
mov
imul
dec
lods
dec
fs
pop
jge
sbb
nop
in
jmp
add
test
fists
insb
and
in
lcall
mov
and
mov
mov
pop
cmp
mov
dec
inc
jno
add
ljmp
mov
call
lock
imul
push
out
das
inc
aad
inc
je
into
mov
jmp
inc
jp
xchg
pop
jns
sarb
inc
jno,pt
pop
mov
mov
aad
add
std
sbb
imul
mov
popf
and
cmpsl
dec
jp
inc
xorb
sub
pop
pop
inc
mov
cmp
or
cs
stos
cmpsb
in
pop
mov
pop
outsb
clc
cs
in
lret
mov
movsb
push
adc
xchg
sub
cmp
into
mov
xchg
lods
xchg
push
inc
pop
gs
mov
jecxz
scas
shrb
aas
mov
sub
test
xchg
repz
sub
sar
dec
and
mov
hlt
mov
or
ljmp
push
cltd
mov
dec
xor
xlat
xor
mov
out
int3
aaa
add
inc
jg
sub
popf
fmull
mov
cs
cmp
mov
mov
xor
iret
dec
divb
pushf
jb
popf
inc
mov
imul
dec
lods
dec
fiaddl
inc
addr16
popa
outsb
xlat
out
cmpsb
cmp
pop
push
sub
add
add
pop
dec
mov
inc
add
and
je
mov
lea
or
rorl
adc
adc
mov
adc
push
cmpb
je
adc
fs
loope
clc
cmp
jns
xchg
dec
pop
cmp
xchg
inc
fcos
add
cltd
sahf
jae
movsl
repz
test
xchg
inc
adc
in
in
mov
imul
and
cltd
xor
outsb
jnp
pop
push
nop
leave
sub
addr16
fdiv
xlat
mov
jp
dec
mov
insb
fwait
aaa
jl
lret
mov
adc
shlb
sahf
aaa
in
push
xor
jecxz
ret
xchg
shr
ret
jmp
jle
ss
fwait
mov
dec
pop
dec
push
pop
lcall
push
dec
lahf
dec
xor
inc
pushf
xor
arpl
rcr
ds
cltd
xlat
notl
mov
sti
xchg
and
add
pop
loopne
rorl
hlt
dec
jmp
jle
es
or
fistpll
or
push
xor
cmp
les
daa
mov
jmp
mov
jbe
and
movsl
dec
loopne
dec
push
xchg
and
jl
mov
fistps
pmulhuw
sub
testb
xor
pop
mov
in
stos
mov
lea
cmpsb
sbb
mov
adc
adc
movsb
mov
or
and
aas
dec
mov
jns
pop
jns
in
mov
stc
or
testb
push
add
pop
loopne
rorl
hlt
dec
jmp
stos
mov
cli
fistpll
or
push
jne
sub
jmp
push
cmp
rep
jnp
mov
jbe
and
movsl
dec
loopne
dec
push
xchg
and
jl
mov
movsb
push
adcb
addr16
add
repnz
push
not
pop
mov
mov
nop
lea
cmpsb
sbb
mov
xchg
and
sub
jg
push
and
pushf
repnz
out
mov
adc
or
cld
test
inc
addr16
xchg
cmp
pop
scas
dec
loope
cmpsb
ss
in
push
int
outsl
xor
dec
mov
add
cmpsb
add
and
cmpsb
jle
jmp
pop
insb
lahf
mov
leave
call
push
fdivrs
adc
into
push
mov
lret
mov
jecxz
neg
ret
hlt
xchg
f2xm1
inc
das
xchg
or
mov
xor
call
and
fucom
sbbl
and
loopne
repnz
adc
imul
mov
mov
xchg
aam
mov
in
jecxz
mov
icebp
pop
out
in
ja
cmp
or
aad
mov
adc
popl
adc
in
ja
movsb
lahf
xorl
xchg
or
xchg
sub
inc
push
push
mov
or
push
mov
xor
data16
lcall
fstpt
test
xchg
mov
add
in
lds
pop
or
je
clc
cmp
add
mov
cmp
pusha
xchg
cmp
pop
scas
dec
loope
int3
call
into
pusha
int
cmpsl
inc
pusha
aaa
es
ds
and
or
adc
pop
dec
popf
test
xor
and
add
cmp
dec
push
xor
lods
test
nop
mov
push
cmp
ret
dec
cmp
add
mov
dec
push
jmp
cs
test
push
mov
fstps
push
mov
mov
jl
push
cld
std
push
fnstenv
fsubl
in
lahf
cmp
cmpsl
sub
push
and
imul
adc
sbbl
and
loopne
repnz
adc
imul
xor
xchg
lcall
stos
fcmove
out
inc
fs
pop
cmp
sbb
repnz
mov
and
push
hlt
and
in
add
faddl
inc
mov
adc
cmp
dec
mov
insl
fidivl
out
scas
call
out
lcall
dec
lds
push
loopne
ja
repnz
lcall
mov
sub
sbb
cli
xchg
dec
cwtl
fsubrl
mov
loop
or
leave
rcll
push
lods
rcrb
xor
jmp
dec
inc
addr16
xchg
cmp
pop
scas
dec
loope
idiv
scas
sti
pop
sub
or
pop
clc
imull
ss
xor
mov
je
cmpsl
dec
xor
jmp
inc
mulb
lret
lcall
int3
push
or
mov
push
adcb
bsr
cmc
jg
or
mov
mov
stc
inc
jp
or
or
les
popl
icebp
push
fidivrl
test
dec
je
pcmpgtw
mov
jecxz
scas
shrb
aas
mov
sahf
data16
aad
push
test
or
cmp
stc
adc
mov
and
pop
xlat
adc
pusha
inc
in
xchg
imul
mov
sub
sbb
and
mov
gs
negb
xor
fsub
call
addr16
dec
add
push
stos
mov
adc
mov
loope
inc
test
add
pusha
mov
hlt
and
and
loope
adc
xlat
outsl
jns
inc
ret
pop
in
mov
outsl
lds
xchg
stos
sub
xor
imulb
out
clc
jp
shlb
lahf
repz
lret
movsb
inc
xor
rcrl
bound
xchg
pop
jb
sbb
incb
adc
hlt
sti
mov
clc
xchg
ret
xchg
fcoms
movsl
pop
out
dec
mov
arpl
push
stc
repz
jmp
and
mov
push
mov
stos
shrb
jbe
mov
cmp
push
sbb
xchg
mov
mov
dec
iret
mov
mov
push
cmp
stc
mov
jecxz
dec
xor
out
ds
pop
insb
dec
inc
addr16
xchg
cmp
fdivl
rcrb
ds
fwait
inc
insl
mov
imul
inc
cltd
dec
clc
sahf
aaa
jmp
mov
jne
add
les
xchg
mov
aam
call
data16
scas
fdivp
lea
aas
stos
xchg
dec
add
fisttpll
xchg
add
mov
push
dec
inc
addr16
xchg
cmp
fisubs
movsl
enter
fcoml
ret
js
pop
push
adcb
xchg
jg
dec
add
cmp
les
sub
stos
daa
fwait
dec
or
jl
and
dec
arpl
jns
xor
and
mov
or
mov
mov
aad
sub
mov
dec
clc
popl
ljmp
push
pop
sub
dec
xor
call
testb
xchg
mov
inc
jbe
or
pushf
mov
and
enter
jg
in
and
sti
test
adc
sarb
push
push
das
xor
mov
addl
cld
and
and
cmp
fnstenv
xchg
outsb
pop
jbe
dec
inc
lret
shlb
sbb
dec
ret
cmp
outsb
movsb
adc
scas
or
call
pusha
imul
inc
bound
and
push
or
mov
lret
out
mov
imul
pop
jno
mov
cli
jo
mov
jp
test
sbb
shlb
inc
dec
add
push
stos
mov
pop
and
or
xorb
dec
aaa
pop
rcll
or
mov
cmp
and
sbb
hlt
adc
or
xlat
jg
inc
pop
adc
and
inc
sbb
lods
lods
mov
aam
xor
push
dec
leave
sbb
rcll
push
loop
cmpxchg
or
inc
out
add
stc
ljmp
aad
dec
xor
in
push
xchg
jae
arpl
es
push
cli
or
dec
cwtl
cmc
cli
cld
sbb
jl
incl
rcll
jge
dec
inc
inc
adc
jl
push
or
and
add
fs
lret
push
xchg
stos
sub
xor
stc
jecxz
and
sbb
push
pop
cltd
aaa
cmp
dec
xchg
ss
adc
or
inc
and
cltd
add
inc
addr16
xchg
cmp
jnp
pop
push
imul
xchg
push
mov
mov
add
dec
xchg
xchg
and
das
icebp
adcl
pop
jmp
mov
adc
push
gs
or
rorb
movsl
popa
add
test
or
call
pop
call
adc
add
ss
jmp
mov
test
pop
ret
push
inc
rolb
fcmovnbe
sbb
push
sbb
ljmp
daa
lods
xor
cmp
jns
add
lret
pop
loop
push
mov
cmp
cwtl
xchg
out
cmpb
cli
mov
xor
push
fldl
and
addr16
loop
inc
mov
pop
scas
dec
aaa
gs
jge
push
stc
shl
cmp
inc
aad
in
xchg
stos
jp
sub
and
es
outsl
xchg
jmp
insl
test
aaa
inc
adc
cmp
fwait
dec
and
out
xor
pop
mov
incb
add
push
mov
test
and
and
in
jmp
add
rcrl
jnp
test
xor
and
repz
dec
scas
push
cmpsb
jge
adc
pushf
add
xor
push
mov
sbb
xchg
xchg
adc
out
push
aad
cmp
sub
pop
rolb
js
cmp
lahf
dec
inc
addr16
xchg
cmp
pop
scas
dec
loope
pop
test
xchg
das
mov
repz
ret
sbb
xor
push
pop
gs
sub
aas
pop
or
hlt
mov
and
dec
jge
jmp
lcall
adc
add
ljmp
add
ret
sbb
mov
push
or
fistpl
mov
xor
add
cmpsl
xor
jmp
mov
push
repnz
inc
addr16
xchg
cmp
and
add
jle
xchg
push
sbb
mov
xchg
and
das
icebp
adcl
pop
add
testb
test
inc
les
popa
add
test
or
call
pop
call
adc
add
ss
jmp
mov
test
pop
ret
push
sahf
aam
add
and
sbb
decl
dec
sbb
nop
pop
hlt
test
inc
adc
push
mov
cmp
cwtl
xchg
out
cmpb
cli
mov
xor
push
fldl
and
addr16
loop
inc
mov
pop
scas
dec
aaa
gs
jge
test
dec
iret
inc
aad
in
xchg
stos
jp
sub
and
es
outsl
xchg
jmp
fwait
jns
test
fnsave
inc
adc
cmp
fwait
dec
and
out
lahf
mulb
sahf
mov
dec
scas
push
cmpsb
jge
dec
sbb
lds
adc
in
xor
mov
or
subb
mov
inc
sbbl
adc
xchg
or
push
ljmp
dec
dec
xor
jno
pop
mov
mov
in
sub
insb
dec
xchg
ja
pop
sti
mov
xor
ljmp
stc
shrl
jl
mov
jae
sbb
inc
mov
pmullw
sbb
and
lcall
and
std
hlt
pop
cmp
fists
in
jmp
testl
lds
mov
xor
adc
icebp
sti
lods
xchg
xlat
pushf
in
rcl
aam
add
lods
shr
xchg
cmp
int3
lock
pop
xor
and
and
xchg
pusha
mov
test
call
add
xor
sub
bnd
inc
ret
lret
cmp
inc
sbb
xor
xchg
mov
mov
addl
rclb
pop
and
and
adcb
push
lods
jle
mov
mov
int3
sbb
repnz
adc
jnp
sbb
lret
lods
lods
mov
add
cmp
ret
mov
pop
add
mov
out
outsl
mov
mov
pop
in
push
stos
inc
ds
mov
pusha
xchg
cmp
pop
scas
dec
loope
ljmp
or
jae
dec
sub
xchg
inc
xlat
adc
cmp
inc
stos
cs
jo
ds
fucom
xorl
xchg
mov
es
xor
dec
add
push
into
inc
sti
mov
sub
mov
mov
repnz
cmp
outsl
pop
inc
call
stos
dec
mov
cmp
lret
cli
sarb
cli
inc
orw
ljmp
jg
mov
inc
lcall
incl
add
push
dec
mov
mov
stc
xor
xor
xchg
repnz
out
xchg
rep
sbbl
and
loopne
repnz
adc
imul
xor
xor
jg
aam
rcll
mov
and
loop
stos
or
jbe
test
lret
fstpl
pop
cmp
cmpsl
mov
inc
idivl
mov
xchg
add
xchg
int3
mov
add
push
xchg
mov
fucom
push
pop
cmp
loope
jno
dec
aad
jbe
aam
xchg
inc
and
daa
int
lret
sub
shlb
repnz
and
jecxz
aas
dec
cltd
cwtl
push
lea
inc
int
testb
cld
imull
mov
lcall
mov
push
mov
mov
cwtl
sar
rclb
jg
mov
pop
pushf
ja
ret
negl
addr16
out
int3
lds
adc
ror
lret
dec
int3
shlb
incb
lcall
popf
and
popf
sahf
fstps
cmp
das
xor
fimuls
cmp
pop
shlb
jmp
adcb
add
xchg
add
fdivl
sub
push
cmp
xchg
add
adc
and
add
pop
sub
push
sbb
les
das
cmp
cmpsb
xchg
sub
sub
push
dec
and
sbb
adc
mov
or
dec
mov
loope
sti
cmc
ret
jno
jp
test
cmp
imul
and
cs
and
mov
cmp
pusha
push
inc
jmp
into
gs
mov
sar
dec
push
fld
sbb
adc
push
fsubrl
cld
mov
inc
cld
aam
and
shlb
jne
dec
iret
mov
mov
pop
xchg
lcall
or
or
dec
xor
sahf
call
enter
xor
in
xchg
inc
sub
insb
sub
push
mov
loope
and
popf
mul
leave
xchg
shll
ljmp
inc
pop
sbb
gs
adc
sub
dec
in
inc
dec
mov
pop
test
inc
cmpl
subl
fstl
aam
ja
clc
push
aam
sub
stc
xchg
sbb
push
fsubr
or
pop
enter
cltd
int
mov
call
cwtl
adc
lods
inc
lea
std
fwait
or
aas
xchg
push
and
jnp
inc
fldl
jo
mov
mov
rcrb
daa
push
cmc
cmp
mov
testl
mov
dec
and
sbb
stos
stc
pusha
movsl
jecxz
in
add
xchg
imul
xlat
adc
inc
mov
push
addr16
mov
mov
lock
dec
or
sbb
add
xchg
scas
or
xor
pushf
sub
sti
push
cli
xchg
adc
loop
sbb
sub
iret
popa
inc
or
pminsw
push
fs
xchg
cmpsb
jle
leave
jns
out
filds
int
cli
cmp
lock
sub
and
pop
or
adc
stc
mov
add
dec
add
xchg
scas
or
xor
sbb
mov
sbb
orl
mov
pop
out
les
and
icebp
and
loopne
data16
jbe
in
int3
les
test
xchg
jbe
lock
shll
or
ja
rcl
daa
add
enter
dec
jb
cmp
das
leave
sbb
inc
mov
iret
jbe
push
sahf
adc
add
xchg
mov
jno
aas
notl
lret
aaa
sub
sbb
sub
pushf
push
cmc
push
std
fucomi
out
cmp
cmp
sub
dec
inc
lods
fwait
or
cmp
lahf
adc
stos
adc
pop
inc
push
xor
fmuls
bound
and
data16
adc
push
pop
and
inc
push
es
pop
aaa
sti
fsubr
cli
and
fcomip
nop
lahf
sbb
divb
jp
adc
push
in
xchg
stc
or
jbe
sahf
jns
xor
adc
and
sub
loope
loop
mov
outsl
cwtl
insl
js
sub
hlt
cld
mov
fcompl
insl
pop
and
pop
aas
push
repz
sub
lock
xchg
jl
or
std
adc
push
cwtl
sbb
sub
mov
cld
xchg
cmp
xchg
cmp
fsubrs
sub
mov
push
fwait
ja
or
cmp
push
adc
pop
xor
add
push
in
sub
dec
movsl
jne
sahf
mov
inc
or
and
mov
lods
mov
insl
jle
loopne
jg
mov
push
scas
sbb
into
je
subl
ljmp
add
in
cltd
jne
mov
jbe
shl
stos
inc
enter
push
add
jno
in
pop
fldt
fcoml
inc
sysenter
dec
sar
cli
pop
jmp
ljmp
ja
js
orl
mov
leave
adc
inc
ss
adc
push
and
adc
ja
dec
push
sbbl
les
iret
into
lods
sub
jl
js
fwait
sub
pop
pop
out
push
cmp
xchg
push
in
mov
mov
pop
insb
push
xor
mov
or
cmpl
cmc
flds
or
push
dec
test
sbb
jno
mov
scas
and
jmp
cmp
test
ds
xor
sbb
jb
hlt
les
dec
icebp
cmp
fistpl
adc
adc
shlb
mov
mov
stc
cmp
dec
adc
pop
ret
mov
push
sarb
dec
or
rcrb
rcr
and
and
dec
cmp
pusha
inc
insb
mov
leave
in
lret
pushf
rorl
xor
ret
sbb
mov
dec
fwait
jecxz
or
jp
leave
xor
and
pop
cld
inc
into
xchg
add
push
mov
push
add
add
mov
pop
jle
dec
jmp
call
test
and
mov
xlat
outsb
adcl
cmp
cmp
std
testl
imul
bnd
data16
outsl
jns
shrb
xchg
add
loop
inc
enter
push
add
jno
sti
mov
mov
sysenter
dec
shll
pushf
mov
cld
mov
pop
mov
loope
es
cld
inc
mov
inc
mov
push
cmc
addr16
jp
push
inc
mov
or
jl
jno
lahf
sub
xchg
mov
jp
shll
bound
inc
ljmp
jge
fidivl
in
popf
pop
mov
cmp
fwait
push
or
cmpl
sbb
jmp
imul
int3
cwtl
xor
daa
or
sbb
inc
sbb
mov
ror
testb
cmp
jb
hlt
les
dec
icebp
cmp
fistpl
adc
adc
shlb
mov
mov
stc
cmp
dec
adc
pop
ret
mov
into
mov
scas
lea
ljmp
ljmp
cmp
andl
cmp
pusha
inc
insb
mov
leave
in
lret
pushf
rorl
xor
ret
sbb
js
ret
mov
mov
cmp
hlt
fiadds
and
pop
cld
inc
into
xchg
add
push
mov
push
add
add
mov
pop
jle
dec
jmp
call
cmp
inc
ds
stc
xor
es
push
insl
icebp
je
pushf
data16
pusha
add
ljmp
lods
gs
test
push
cmp
mov
in
ret
inc
shrb
inc
pop
mov
out
das
fs
ja
mov
mov
jge
repz
xchg
test
or
push
test
jne
bound
jnp
notl
shll
and
push
mov
ret
pop
mov
or
popf
pop
arpl
xor
in
sbb
jecxz
imul
adc
and
cmpsb
add
mov
adc
mov
int3
fldcw
and
test
push
enter
push
sbb
mov
ljmp
lds
xchg
mov
fdivr
outsb
or
or
add
cli
xor
mov
jno
xchg
in
mov
jmp
sti
push
pop
sub
fistps
mov
mov
xor
repz
push
sarl
daa
cli
xor
ret
fsts
sbb
addb
repnz
mov
pop
aam
pop
pop
mov
or
fistps
loope
cs
rclb
pushf
mov
sbb
mov
mov
subl
fst
loopne
pop
lret
aam
stos
out
fbstp
mov
aam
push
inc
dec
mov
enter
sub
cmpb
stc
mov
xchg
out
mov
sarb
out
or
sbb
jo
std
jae
mov
mov
xor
mov
and
xchg
lods
dec
rolb
aam
sub
test
mov
cld
mov
mov
adc
out
xchg
cmp
js
sub
out
add
xchg
and
push
outsl
sub
xor
les
movl
scas
inc
pushf
mov
nop
sbb
sbb
cltd
rcr
movl
mov
dec
jp
cld
rcl
icebp
in
divb
movl
inc
in
test
sbb
cmc
push
push
leave
cmp
mov
popa
and
ret
ss
out
pop
sub
and
xor
add
loope
xchg
bsr
add
mov
fs
hlt
aam
clc
ds
cmc
cmpsb
adc
clc
repz
lret
fmull
lea
adc
pop
jp
xchg
push
mov
mov
mov
les
addr16
push
push
xchg
nop
cmp
fstpl
idivb
mov
mov
push
hlt
out
orl
lods
sub
mov
mov
add
ss
gs
es
and
mov
mov
mov
je
xor
xchg
sbb
leave
nop
clc
and
mov
mov
xchg
popa
fwait
bound
pop
mov
addr16
push
sbb
sub
sti
popa
arpl
adc
and
mov
mov
test
xor
dec
pop
ds
js
and
sub
mov
pop
imul
ret
lods
xor
pop
dec
pop
cmp
mov
and
mov
jae
fildll
test
push
fisubl
push
or
mov
sar
hlt
xor
into
stc
popa
add
mov
push
leave
mov
sbbb
cmpsb
out
jno
dec
sub
das
mov
xchg
lahf
int3
cld
inc
cld
sub
subl
cmp
scas
jg
mov
inc
test
xor
xchg
push
in
sbb
inc
dec
dec
sahf
shl
mov
adc
cmpsb
lods
rcrb
mov
mov
mov
hlt
aaa
mov
adc
dec
loopne
jbe
or
adc
ficomps
mov
arpl
cmpsl
popa
cwtl
imul
outsl
or
pop
call
arpl
shlb
mov
lcall
outsl
out
jae
xchg
dec
xor
push
movsl
and
cmp
scas
adcb
xor
mov
jbe
cwtl
inc
movsl
scas
sbb
jl
add
jae
loope
dec
aad
add
sub
addl
mov
xor
dec
ljmp
lret
and
lods
lds
mov
sub
repz
cmp
mov
cli
jne
lds
sti
std
fldenv
mov
repz
enter
cltd
data16
push
inc
repnz
clc
ja
jmp
or
sbb
aaa
xchg
movl
sbb
mov
adc
cs
cmp
sub
jo
dec
sub
bound
push
outsl
pop
shrb
aam
fadd
inc
mov
pop
imul
sqrtps
enter
es
inc
add
shrb
dec
jge
fs
add
bound
fs
push
inc
daa
inc
fiadds
inc
jns
cltd
sub
rcll
pop
sbb
idivb
or
mov
cmc
test
pop
call
lahf
ret
jge
pop
sub
daa
mov
mov
or
cltd
fstl
inc
scas
add
and
ds
out
sar
mov
lret
mov
fisttpl
push
test
scas
jbe
in
call
into
subl
fnstsw
pop
lcall
jge
lret
dec
aaa
cmp
xchg
js
clc
cmpsb
dec
hlt
call
call
addb
cmp
sub
outsl
and
call
sahf
orl
addr16
mov
jge
jno
cli
mov
data16
mov
xchg
scas
mov
push
int
xor
or
out
cmp
and
and
popf
orb
push
add
jg
sbb
lods
sbb
dec
in
repnz
fidivs
dec
xor
push
subl
fstl
aam
ja
call
or
mov
scas
loopne
jle
jbe
outsb
loope
je
inc
xor
ss
roll
or
cmp
ret
ja
sbbl
adc
hlt
jo
or
adc
pop
inc
pop
dec
or
cmp
and
adc
insl
and
lahf
les
imul
out
scas
pop
push
movsb
pop
out
ja
iret
sub
add
pop
decl
test
and
mov
inc
dec
cwtl
mov
jo
xchg
fdivs
pop
fwait
xsha1
cmpsb
iret
les
pushw
movsl
inc
subl
fnstsw
pop
rcll
and
ret
or
dec
pop
icebp
pushl
xchg
iret
sub
popa
scas
jns
jbe
mov
or
or
popf
in
dec
aad
inc
sbb
xor
mov
es
out
xor
jl
jmp
dec
jge
inc
cs
fs
sbb
sbb
in
loop
stos
gs
fiaddl
test
clc
sbb
adc
xor
je
ret
movsb
xor
es
cltd
imul
pop
repz
dec
fs
or
inc
fnstsw
imul
pop
dec
mov
in
mov
add
in
loop
stos
gs
fiaddl
mov
jg
mov
stc
cltd
in
push
jge
arpl
out
sbb
fldcw
mov
jp
xor
sbb
push
xchg
fisubl
pop
nop
in
leave
adc
adc
adc
pop
push
aas
push
jne
push
aaa
jo
sti
push
adc
loop
stos
gs
fisubrl
imul
sarb
movl
cld
jne
mov
cmp
popa
shlb
jbe
push
mov
push
mov
lods
and
or
das
mov
addr16
stos
xor
scas
shrl
dec
pusha
xlat
mov
mov
repz
adc
mov
xchg
int
cmp
mov
repnz
xchg
add
out
sub
or
inc
xchg
sub
adc
call
aad
jnp
push
popa
aad
add
inc
shlb
in
dec
ret
insb
movsl
and
rorl
mov
incb
mov
inc
icebp
cmpb
push
daa
cmp
xor
or
sub
repnz
or
test
cmp
leave
jno
fs
mov
add
push
push
fsubr
lods
lret
pop
push
outsb
lea
push
push
or
mov
inc
xlat
cmp
outsl
jge
or
push
add
data16
sbb
jg
loopne
loope
fbstp
or
dec
adc
jns
pop
cmp
cmpsl
das
cmp
lcall
inc
mov
dec
mov
push
test
mov
pop
and
mov
sbb
test
mov
mov
add
jge
aad
mov
sbb
idivb
push
xchg
dec
inc
mov
jg
iret
enter
xchg
cld
add
iret
mov
out
lcall
cli
dec
xor
mov
sti
inc
dec
xor
repz
push
je
ja
ficoml
pop
push
add
xchg
mov
mov
push
insl
sub
ret
mov
addr16
sub
arpl
cltd
xchg
test
in
mov
xchg
push
fidivrl
sbb
and
scas
aam
mov
inc
arpl
dec
xor
jmp
iret
xlat
cmp
cltd
testb
out
out
pop
in
fdivrs
push
std
into
jne
and
fnstenv
add
sbb
rolb
test
rolb
fnstcw
lcall
fisttpll
mov
into
pop
push
stos
mov
sub
ds
pop
adc
lahf
cltd
xor
cli
mov
pop
mov
push
popf
mov
out
cmpsb
mov
add
inc
fstpl
inc
sbb
rcll
cld
orl
dec
les
sbb
ss
pop
imul
or
pop
jae
aas
loop
cwtl
mov
leave
cli
incl
test
or
xor
or
inc
inc
pusha
xor
push
add
aaa
insl
pop
je
loop
test
bound
xchg
in
mov
pop
cmp
loopne
stc
jmp
enter
out
movsb
sarb
pop
cli
sub
int3
aaa
adc
rol
addr16
lods
mov
rcl
aaa
sbb
push
shlb
pushf
jmp
jbe
mov
adc
inc
mov
pop
sub
jb
and
js
cwtl
outsb
xchg
jmp
stc
dec
jg
repz
inc
jb
and
jp
dec
int
ja
imul
andl
dec
push
outsb
in
jge
and
jmp
ljmp
mov
pop
out
mov
aas
subl
ffree
jnp
fildll
das
fstpt
xchg
push
inc
cmp
notl
cmp
add
loope
out
iret
or
xchg
out
mov
mulb
fnsave
test
or
popa
aad
inc
in
in
stc
ret
and
mov
adcl
mov
xchg
shll
test
pusha
in
mov
es
sbb
insb
xor
jnp
in
xor
pop
push
loope
fmull
cmpsl
jnp
clc
movb
enter
inc
daa
push
cmc
cmp
lds
add
lods
mov
sar
loope
icebp
dec
cmp
push
adc
push
jl
gs
and
adc
scas
imul
popf
xorb
add
add
pop
mov
mov
and
inc
mov
outsl
hlt
push
movsl
shll
je
loope
pushl
dec
fwait
movsl
adc
and
pop
ds
cltd
in
mov
cli
std
sub
cwtl
imul
rcr
xor
mov
fs
sub
cld
add
nop
rep
fnstcw
das
jl
aad
mov
or
push
lock
xor
pop
imul
pusha
xor
nop
dec
sbbb
dec
cmp
call
sub
mov
sbb
mov
out
cld
dec
pop
out
sub
mov
cwtl
cmpb
mov
add
push
push
xchg
jmp
cmp
pop
push
fnstsw
sbb
js
add
adc
insl
push
mov
shlb
jle
pop
imul
outsb
jmp
dec
iret
fistps
jg
adc
je
and
mov
mov
adc
sub
lret
xor
xor
sahf
xchg
imul
lea
adc
sub
xchg
pop
icebp
xor
push
inc
adc
shl
xchg
ret
pop
imul
or
pop
adc
xchg
repz
and
mov
mov
cwtl
add
or
clc
in
xor
jl
iret
add
and
lods
cmp
and
sarl
mov
clc
jne
xchg
cltd
xor
outsb
imul
out
loop
dec
jle
imul
dec
xchg
mov
dec
lea
adc
jp
pop
pop
dec
adc
jnp
cmpsl
inc
leave
pop
cmp
fldl
xchg
mov
lods
or
xchg
loop
loopne
push
insl
sti
inc
repz
mov
fmul
mov
cs
xchg
and
icebp
jne
sub
in
lods
adc
rcl
mov
mov
jmp
mov
pop
sbb
ficomps
jg
es
out
xor
fcompl
aad
shlb
lds
push
rolb
add
cmp
stos
add
push
push
xchg
jmp
cmp
pop
push
fstpl
add
repnz
call
adc
out
xchg
pop
in
push
ret
fimull
adc
jns
sub
psubusw
addr16
push
fwait
jae
dec
bound
inc
jp
cs
or
lea
adc
xchg
mov
xor
adc
jnp
cmpsl
inc
leave
pop
mov
aaa
inc
pop
pop
movsb
scas
lods
inc
push
sbb
das
aas
cmp
cmc
fidivrs
pop
sub
xor
int
add
mov
inc
pop
leave
ja
iret
mov
aaa
push
in
or
out
jl
add
xchg
cld
sub
pop
jp
andb
push
push
inc
idivl
sub
mov
xchg
push
out
mov
pop
cmp
mov
fbld
fisubs
daa
rol
add
add
mov
sahf
sub
mov
testl
jae
adc
iret
jmp
rcrb
fmull
lea
adc
pop
fcmovbe
and
rclb
mov
out
push
popf
lcall
push
push
sti
xlat
scas
jmp
rcrl
jno
jmp
mov
adcb
int3
sahf
add
scas
push
je
enter
pop
mov
ret
jne
iret
adc
jmp
xchg
jg
je
inc
mov
inc
sarl
and
jle
mov
in
std
popa
jle
push
cmp
xchg
shlb
rcl
mov
jae
push
push
bound
shrb
mov
scas
cmpsb
neg
sub
xor
adcb
cmp
xchg
stos
mov
ret
dec
dec
mov
daa
push
cmc
cmp
jo
mov
scas
jmp
xchg
scas
cmp
movsl
mov
adc
rclb
pop
out
mov
dec
cmp
stos
int
mov
testb
stos
aam
mov
repnz
mov
sahf
loope
jbe
in
and
add
or
mov
push
cmc
cmp
xchg
xchg
xlat
outsl
and
call
sahf
orl
fwait
pop
inc
aaa
jp
cwtl
adc
movsb
in
int3
imul
dec
or
adc
dec
ljmp
adcl
lahf
leave
add
test
fidivl
subl
and
push
in
popf
inc
adc
andl
leave
gs
out
pop
sub
add
jne
fldt
mov
mov
inc
xor
lret
push
out
filds
dec
add
scas
cli
xor
pop
imul
mov
lret
lds
cwtl
xor
mov
js
and
out
pop
sbb
cmp
int3
xor
jns
ljmp
inc
icebp
mov
dec
std
lret
bound
scas
mov
mov
loopne
jecxz
push
ja
mov
enter
push
or
xor
inc
adc
cmpsl
dec
pushf
stos
adc
clc
sbb
mov
lcall
cmpsb
or
stc
push
dec
les
in
hlt
je
enter
inc
shr
js
inc
add
int
mov
mov
xor
and
mov
xchg
xor
mov
mov
fwait
mov
push
int
cmp
in
xchg
imul
lahf
iret
insb
pusha
fsubrs
leave
nop
jge
sub
jecxz
cmpsl
lahf
arpl
loope
mov
dec
aas
bound
sti
js
mov
sahf
frstor
push
jp
std
in
sub
movsl
loopne
dec
dec
fnsave
add
sub
call
and
movsb
adc
sbb
test
jp
es
xlat
insb
cmp
inc
push
movsb
inc
roll
adc
int
dec
inc
jbe
enter
loope
dec
mov
mov
pop
xor
in
loopne
jnp
mov
xor
subl
mov
adc
adc
add
call
xor
xchg
inc
scas
and
adc
adc
jl
out
and
loop
gs
loopne
mov
sti
adc
imul
in
ret
mov
aam
jne
or
cs
and
aam
inc
out
dec
xchg
xlat
cld
nop
out
mov
or
xchg
leave
add
adc
sbb
mov
jle
popf
pop
sub
roll
leave
shl
mov
mov
subl
fucomp
movsl
cmp
mov
jbe
push
xchg
test
cld
test
xor
add
sub
fildll
das
fldt
xchg
xchg
jmp
cmp
pop
inc
out
inc
scas
push
sub
pop
paddw
xchg
leave
es
push
sbb
fwait
and
dec
sti
push
shll
mov
xor
call
xor
int
fs
loop
lock
mov
add
testb
pop
lcall
mov
jg
into
mov
add
subl
fstl
clc
pop
cli
enter
into
int
jns
inc
test
aas
lds
cld
sub
fcomi
lods
dec
andl
jg
mov
mov
dec
test
mov
subl
fldl
mov
sub
sbb
jo
xor
push
fstl
rcr
in
incb
stc
divb
stos
sbb
popf
cld
cs
rcr
aas
add
xor
pop
mov
jae
lds
fmull
and
mov
aaa
cli
jg
mov
mov
add
mov
push
cmc
cmp
inc
mov
adc
push
fidivrs
jg
push
dec
pop
jge
xchg
jne
jmp
jle
cmpsb
mov
pusha
movsb
rcrb
cmp
cmpsl
outsl
sbb
mov
imul
popa
cmc
xchg
imul
sub
pushf
subl
fldl
mov
jo
aas
jg
push
dec
pop
jge
xchg
jne
jmp
jle
cmpsb
mov
or
gs
dec
scas
xor
jns
jbe
jmp
mov
jae
ret
lret
popa
cmc
xchg
imul
sub
pushf
subl
fnsave
pushf
ja
sbb
sbb
fcmove
rcl
pop
xor
lods
loop
cld
js
jns
daa
jns
xor
lock
jp
hlt
out
cs
test
inc
ljmp
scas
cmp
ds
sbb
mov
mov
push
xlat
inc
adc
sbb
sbb
add
ljmp
movsl
mov
hlt
into
je
subl
frstor
or
mov
inc
repnz
xor
xor
hlt
outsl
loope
outsb
mov
jl
dec
jge
in
xor
bound
sub
mov
add
xlat
pushf
out
jmp
jmp
cmc
jb
rol
inc
sbb
insb
ret
xor
ljmp
fwait
imul
int
pop
push
and
sarl
inc
add
outsb
add
mov
movsl
cmpsl
bnd
push
pop
push
sbb
je
in
sti
or
xorps
daa
std
jg
adc
cmpsb
mov
outsl
ret
ljmp
mov
hlt
into
je
subl
frstor
jle
aam
sahf
xchg
or
jle
out
rcrb
lcall
pop
aaa
mov
lret
push
cmpsl
hlt
mov
hlt
mov
cmp
movsl
hlt
inc
icebp
imul
inc
movb
sub
subl
fnsave
add
lods
int
push
or
cwtl
and
scas
loope
push
movsl
jae
aam
adc
fdivrl
cld
imul
add
ss
adc
cwtl
xchg
dec
dec
aas
adc
xchg
leave
xor
leave
push
movsl
jae
aam
cmpsb
cmpsl
fcomi
in
loope
out
in
pusha
jns
xchg
outsl
push
lds
iret
jo
repz
call
mov
adc
mov
push
cmp
xchg
cltd
adc
sub
addr16
inc
aas
xchg
data16
cmpsb
cld
or
lods
popa
mov
ds
and
sti
or
xlat
pop
xor
lods
mov
or
shrb
jg
inc
movsb
push
test
test
push
sbb
cld
push
test
fsubr
sbb
inc
sub
sub
or
jmp
icebp
fimull
ret
aas
pop
addr16
loopne
gs
les
pop
les
clc
inc
and
ja
lret
or
lahf
mov
adc
int3
add
mov
addl
xor
dec
mov
repz
insl
dec
outsl
ja
sub
push
mov
hlt
sbb
mov
jo
mov
repz
sbb
into
je
subl
fnstsw
xchg
test
pop
xchg
sbb
inc
cli
dec
js
inc
jl
rorl
mov
or
ljmp
fdiv
stos
xchg
adc
jecxz
repz
or
ret
lcall
out
dec
aaa
imul
jne
push
sahf
cld
stc
dec
mov
dec
lahf
nop
int3
and
scas
push
leave
or
or
iret
pop
rcll
shr
lock
ss
push
icebp
xchg
rcl
push
cld
dec
fstpl
inc
cmp
fimuls
sub
jmpw
add
fwait
mov
push
out
xor
push
jo
mov
lock
std
dec
loope
and
filds
cmc
jp
add
test
mov
cmp
xchg
push
cwtl
add
mov
lret
mov
sub
cmp
push
js
sbb
rsm
inc
add
pop
cli
icebp
fldenv
jp
mov
dec
mov
push
jns
pusha
imul
jl
leave
pop
pop
dec
ret
addr16
lock
stos
jno
sbb
repz
popf
es
arpl
push
sub
mov
loopne
inc
out
das
dec
mov
mov
xchg
dec
test
pop
push
mov
cld
aam
in
pop
jb
test
js
aad
hlt
push
daa
fdivrs
mov
loop
or
js
mov
repz
push
test
cwtl
test
push
in
mov
cmpsb
stos
mov
pop
dec
pop
ljmp
sub
in
push
loop
pop
add
lahf
fcomp
adc
subb
ljmp
into
movsl
adc
mov
cld
xorl
jecxz
xor
ret
xchg
in
inc
mov
out
cmp
xor
jno
or
inc
daa
push
cmc
cmp
cmpsb
loop
dec
inc
fisubrl
das
sub
jle
xor
insb
dec
mov
sub
sub
inc
push
arpl
mov
push
inc
das
std
xlat
bswap
jle
mov
int3
cmp
dec
mov
pop
rclb
into
incb
jp
xchg
sub
cld
test
fdivr
mov
jno
aas
adc
inc
xchg
or
sub
cmp
sbb
mov
dec
mov
or
xchg
cmp
mov
mov
mov
push
push
xlat
pop
iret
inc
sbb
push
xor
ds
cmp
jl
movsl
cs
pop
push
dec
int3
subb
cmpsl
outsb
add
sti
and
jl
rcr
fstps
inc
dec
hlt
imul
mul
mov
xor
stos
dec
in
shll
xchg
subl
frstor
add
sbb
cmpsl
fstl
or
mov
and
js
fcompl
xor
jecxz
mov
loop
mov
jle
std
cmp
cltd
adc
push
sub
pop
push
and
stos
lea
pusha
pop
dec
cs
hlt
outsl
adc
int3
mov
xchg
mov
icebp
ja
les
pop
xchg
xchg
nop
orb
and
jp
icebp
dec
divl
inc
cmp
movsb
icebp
xchg
jecxz
ret
lea
mov
shrb
add
add
push
jnp
pop
xchg
out
int3
xchg
sbb
inc
dec
ja
mov
mov
mov
lret
dec
sub
mov
lahf
repz
mov
daa
xor
cltd
mov
mov
sub
or
sbb
cmp
push
inc
mov
dec
sbb
ljmp
sub
rcl
sti
aam
mov
arpl
cwtl
mov
pusha
jmp
mov
xchg
je
jo
jecxz
out
push
repnz
xorb
mov
xchg
dec
xchg
cltd
mov
and
jno
cli
nop
pop
test
je
push
pop
mov
pusha
or
out
or
add
mov
mov
jae
or
out
cli
jmp
je
xor
scas
jle
adc
inc
cwtl
pop
xchg
cmp
lret
mov
pop
mov
scas
adc
push
push
add
aas
xor
insl
clc
push
jnp
std
lcall
repnz
xchg
js
mov
jno
shll
fistpl
cmp
repz
fildl
and
xchg
shrl
and
lret
mov
testb
mov
stos
or
out
test
adc
les
or
cmpsl
fcoml
add
test
push
loopne
out
cli
jmp
je
xor
scas
jle
adc
inc
cwtl
pop
xchg
cmp
lret
mov
pop
mov
scas
adc
push
push
add
aas
xor
insl
clc
push
jnp
std
lcall
repnz
xchg
js
mov
jno
shll
fistpl
cmp
repz
or
jp,pt
jmp
pop
xlat
dec
ds
adcb
xchg
mov
add
scas
cwtl
mov
dec
cmp
sub
and
je
xor
scas
jle
adc
inc
cwtl
pop
xchg
cmp
lret
mov
pop
mov
scas
adc
lea
dec
cmp
out
push
popw
subl
xchg
xor
inc
mov
popf
ja
jns
call
adc
into
movsl
and
imul
filds
or
jmp
push
push
mov
cmp
xor
add
jo
movsl
sbbl
jbe
jno
enter
mov
pushf
loop
imul
mov
rcrb
add
cmp
shrl
push
insl
and
cli
inc
and
jle
rcrb
sub
shll
add
sbb
sbb
or
xlat
pop
fnstsw
outsb
sbb
scas
ja
cmp
sbb
xor
mov
inc
xor
jae
stc
dec
add
je
int
rcrl
push
xchg
shrl
and
lret
mov
testb
mov
mov
clc
sti
dec
push
pop
bswap
jmp
cmp
fsubl
and
xchg
subb
cmpb
mov
test
inc
mov
je,pn
dec
test
xor
stos
pusha
sbbl
les
pop
push
rcll
dec
xchg
jg
and
cmpsb
mov
lcall
inc
fidivs
js
imul
mov
pusha
jmp
mov
inc
daa
push
gs
lock
loopne
mov
je
or
mov
xlat
add
ret
pop
jp
mov
mov
lock
xor
ss
xor
mov
aad
movsl
mov
jle
pop
addr16
filds
mov
cli
adc
push
sub
sbb
icebp
aas
test
push
das
lahf
or
out
cmp
sti
ja
roll
stos
pop
flds
out
pushf
rorb
stc
clc
adcb
xchg
mov
add
scas
cwtl
mov
jo
mov
add
mov
in
je
xor
scas
jle
adc
inc
cwtl
pop
xchg
cmp
lret
mov
pop
mov
scas
adc
lea
dec
cmp
out
push
popw
subl
xchg
xor
inc
mov
add
pop
pop
lods
enter
into
movsl
fdivs
mov
cmp
stos
mov
cld
xor
inc
push
xchg
or
popa
xchg
idivl
lods
mov
dec
push
sahf
aad
xchg
sub
shrb
ds
xor
add
sbb
in
sub
pop
repz
fcoms
push
add
xor
cmp
jmp
mov
rcrb
gs
mov
js
or
push
dec
adc
push
xor
and
scas
sub
xor
jns
mov
daa
jge
ja
pop
jnp
cwtl
push
lcall
pushf
fwait
sbb
lods
adc
xchg
mov
jbe
sub
dec
iret
lea
out
and
pop
lods
pop
and
mov
sbb
dec
jl
pop
sub
mov
pop
or
pop
sbb
inc
jl
cmp
mov
test
scas
sub
xor
jns
mov
daa
jge
ja
pop
jnp
cwtl
push
lcall
pushf
fwait
sbb
lods
adc
xchg
mov
jbe
sub
dec
iret
lea
out
and
pop
lods
pop
and
mov
sbb
dec
jl
pop
sub
mov
pop
or
add
mov
mov
sub
fsts
inc
shlb
imul
dec
push
and
insb
shlb
sub
out
shll
in
mov
push
shlb
cmp
mov
push
cmp
pop
mov
inc
jecxz
push
jecxz
or
add
scas
in
add
out
repnz
int
sbb
lss
rorl
jp
add
lods
lds
adc
xlat
jecxz
pop
sbb
jae
roll
sbb
inc
ret
ljmp
popf
fdivrl
mov
movsl
fisttps
out
dec
or
mov
push
mov
jnp
dec
sti
clc
scas
iret
sbb
jge
ficoms
mov
stos
addr16
push
push
ja
rclb
push
adc
sub
mov
cli
inc
adc
xchg
lods
dec
jae
cmp
lret
es
out
mov
ret
pop
je
and
fadds
cmp
jnp
jbe
mov
fdivr
pop
lods
loopne
repz
sub
pop
xor
js,pt
scas
xor
sub
mov
or
lea
shlb
sbb
into
je
icebp
stc
js
movsb
sbb
aad
je
pusha
roll
shrb
out
in
xchg
jo
push
addl
aaa
pushf
push
mov
fldenv
mov
or
and
sbb
sbb
roll
std
call
fsubr
jecxz
ss
or
xlat
or
xchg
mov
jnp
sub
leave
dec
aaa
test
outsl
sub
mov
jp
lcall
mov
xchg
subl
fsubp
call
ret
int
pop
popa
pusha
mov
mov
xchg
push
fidivs
inc
outsb
sti
sbbb
ss
jns
arpl
sbb
or
adc
mov
or
out
rcll
das
sub
pop
mov
outsl
loope
out
cmp
mov
inc
add
xchg
mov
jnp
sub
leave
dec
aaa
test
outsl
sub
mov
jp
lcall
mov
xchg
subl
xchg
arpl
mov
jge
jne
jge
xchg
sbb
pop
nop
ljmp
push
out
jge
mov
jle
push
ret
outsb
mov
sub
jg
aas
bound
jb
movsb
inc
push
push
clc
fwait
movsl
dec
idivb
sub
pop
or
push
shlb
jnp
sub
leave
dec
aaa
test
outsl
sub
mov
jp
lcall
dec
add
cmp
mov
inc
xlat
jecxz
sub
fsubrs
cmp
mov
inc
xor
jae
ljmp
push
lock
vcvtsd2ss
jl
mov
dec
mov
mov
mov
inc
subl
mov
daa
xor
jg
lcall
notb
dec
int3
daa
xchg
push
sub
pop
iret
sbb
ja
inc
test
sti
inc
cli
pop
sub
jecxz
mov
rorl
hlt
test
fdivr
adc
adc
in
hlt
xchg
jo
out
and
pop
xor
outsb
inc
push
xchg
fists
outsb
xlat
dec
xor
fsubrp
mov
cld
lret
lahf
mov
ss
cmpsl
sub
insl
xor
adc
mov
and
and
cmp
xchg
dec
aam
push
dec
fnstcw
cltd
loop
push
in
xor
cmp
loop
push
mov
test
pop
imul
dec
or
in
hlt
in
push
gs
roll
roll
leave
add
pop
jl
lea
mov
inc
xor
jae
stc
dec
add
je
dec
add
jae
cmp
dec
scas
add
test
pop
mov
xor
push
test
ret
push
lcall
xchg
arpl
xchg
pop
adc
clc
push
movb
ficomps
test
rcrl
popf
cmpsb
cmc
in
neg
sbb
add
cmp
loop
imull
add
xchg
sub
mov
mov
pop
aad
add
cmpsl
loope
movsl
stc
mov
popf
andb
adc
xchg
and
jo
arpl
add
je
add
sbb
mov
push
cmp
bound
and
out
test
sub
add
addb
cmc
xchg
cld
cmpsb
jns
inc
fbstp
subl
fldl
push
cmp
mov
in
in
or
rol
jno
jecxz
mov
pusha
push
mov
jp
hlt
inc
ret
loopne
pop
dec
mov
adc
lods
mov
out
out
shrl
sub
mov
fnstsw
mov
icebp
adc
dec
push
inc
imul
lcall
inc
jp
test
and
and
loop
sbb
dec
dec
sqrtps
sahf
dec
test
cmpsl
fstps
fnstenv
cmc
mov
or
lds
cmc
cmp
enter
push
lods
mov
ds
jbe
lods
enter
mov
scas
js
aam
jmp
xchg
xchg
sub
fdivs
sub
fiadds
add
repz
insl
fdivr
rcrl
sbb
jmp
pop
fwait
cmp
pop
and
or
add
lds
xchg
gs
aaa
pop
and
rol
xor
test
fiadds
cmc
cmp
enter
push
lods
mov
pop
shrb
jbe
lods
enter
sbbb
daa
cmpsb
mov
sbb
jne
add
setns
or
jmp
jb
mov
xchg
inc
int
push
add
adc
fsubrs
xchg
pop
test
subl
frstor
ret
cs
lock
sbb
fadd
xchg
mov
icebp
outsl
mov
pop
pop
sbb
add
sub
push
jnp
cmpsl
or
xor
fnsave
sbb
mov
nop
inc
aaa
imul
xor
fnsave
call
sbb
mov
cmp
jmp
int
fisubrs
pop
jae
pushf
lret
inc
adc
dec
inc
inc
pop
scas
adc
or
xchg
or
sti
rcrb
bound
and
cmpsb
shrb
jns
out
push
ljmp
dec
loope
add
insl
add
ds
mov
jns
xor
xchg
fucomi
cmp
adc
mov
js
lahf
add
pop
mov
subb
jle
jne
bound
cmp
incb
jecxz
sbb
mov
mov
dec
loopne
lcall
popa
rcr
xor
jmp
fmull
cmpsb
cmp
loopne
aad
mov
ljmp
lret
into
icebp
pop
push
adc
mov
jnp
cmp
xchg
sub
adc
rorl
loop
pop
test
sub
ja
sarl
dec
adc
in
cmpb
ret
add
gs
mov
sub
fcomp
cmp
pop
sbbl
or
fcomp
add
and
xchg
sbb
js
ds
sub
xor
pop
stos
jns
mov
movsl
pop
mov
ret
lcall
push
cmp
leave
enter
mov
xchg
push
dec
popf
adc
inc
add
xor
cli
aas
sbb
aam
popf
iret
es
sub
lock
xor
pushf
mov
lods
mov
mov
imul
fcoms
fwait
mov
stos
mov
sub
xlat
cmp
push
pop
adc
inc
arpl
add
sub
xor
fnstenv
cmp
stos
enter
int
jae
enter
lods
push
test
mov
pop
mov
push
out
sahf
pusha
test
dec
mov
imul
xor
mov
push
bound
mov
inc
ljmp
or
xor
int3
pop
sbb
adc
dec
xor
mov
xor
fildl
loop
mov
add
lods
int
imul
mov
pop
cmpsb
in
loope
les
roll
mov
test
xchg
lea
lcall
rolb
mov
adc
dec
xchg
mov
subl
fnsave
jo
rorl
or
loopne
push
dec
inc
in
decl
out
sahf
pop
daa
inc
je
rcrl
cmc
or
mov
xchg
enter
out
insb
lret
lea
movsb
sbb
insb
xor
test
cwtl
cmp
push
pusha
dec
xchg
fcoms
repz
mov
fidivs
dec
cwtl
push
in
imul
pop
mov
dec
std
pop
lea
nop
shlb
scas
lahf
add
test
adc
sti
fimull
mov
imul
xchg
dec
mov
pusha
push
and
jne
pusha
adc
sahf
insl
popa
pusha
popf
sub
daa
stos
dec
adcb
daa
push
cmc
cmp
sub
fs
push
pop
js
sbb
shll
jnp
adc
mov
push
xchg
mov
out
pop
ja
fwait
stos
inc
add
dec
xorb
mov
dec
pop
and
fsubr
sub
fcoms
jle
add
les
ror
and
jp
dec
aaa
insb
leave
sub
lret
std
mov
pop
stos
push
cwtl
sub
push
push
popf
mov
out
mov
jbe
xchg
rcrl
inc
sub
lods
lea
or
push
cmpsl
inc
mov
push
lock
mov
jge
cmp
ret
pushf
jb
push
cmp
data16
fsubrs
movsl
out
cmp
cmp
jbe
mov
lds
sbb
dec
mov
inc
add
stc
testl
test
js
mov
div
or
fucomip
pop
mov
adc
out
in
insb
sbb
add
outsl
sub
mov
or
aad
lods
mov
dec
inc
push
nop
dec
ret
pushf
mov
ljmp
lret
es
popa
clc
rcr
repz
dec
cmp
xchg
int3
push
fs
push
fistps
ret
xchg
adc
and
ss
sub
mov
or
int3
lea
insl
push
xchg
ja
cli
aam
push
fcmovb
into
into
xor
stos
mov
bound
mov
outsb
imul
pushf
add
outsl
mov
decb
fistl
into
jne
or
xor
mov
stc
or
or
mov
stos
in
cli
sub
int3
dec
fidivl
jbe
pop
sti
popf
add
push
loopne,pt
sbb
cmp
in
sbb
inc
and
das
das
mov
cli
mov
sbb
and
jge
xor
aas
repz
inc
dec
ja
cmpsl
ret
ja
adc
add
aas
xor
cmpsl
cmpsl
sbb
ss
fisttpll
push
pop
mov
scas
xor
repnz
xchg
insb
scas
sbb
aas
adc
test
cmp
cmc
xchg
ss
and
lock
inc
cmpsl
mov
lods
pop
and
mov
sbb
dec
jl
pop
sub
inc
std
sahf
lods
adc
dec
xchg
call
dec
lret
insb
imul
shll
sub
mov
lds
cmpsb
jbe
pop
imul
or
jb
push
rclb
xchg
xchg
adc
push
or
insl
push
std
je
pop
js
jle
rcrl
or
sbb
hlt
shl
shll
mov
push
call
ficoml
subl
aad
cld
xchg
xchg
sub
pop
subl
dec
adc
test
sbbl
mov
ja
rclb
dec
sbb
adc
jp
rcrl
ror
dec
lock
lahf
icebp
dec
pushf
or
pop
or
mov
sub
aas
repnz
in
loopne
mov
or
and
jne
outsl
daa
popa
push
test
and
dec
add
and
jp
hlt
pop
into
loop
mov
or
xor
inc
or
xchg
mov
lret
sbb
imul
out
test
jnp
data16
jle
xchg
fimuls
inc
jne
mov
dec
shlb
sarl
sbb
outsl
xchg
out
xor
mov
lock
inc
test
sbb
lea
inc
cli
test
jne
or
adc
xor
dec
movb
xchg
inc
fcoms
test
outsl
mov
out
cli
sub
or
pop
push
cwtl
mov
or
aad
dec
add
ds
aad
jne
fwait
dec
jne
mov
insl
cmp
addr16
clc
push
ret
lods
ss
outsl
sbb
or
hlt
pop
into
loop
mov
or
xor
inc
or
xchg
mov
lret
sbb
imul
out
test
jnp
data16
jle
xchg
fimuls
inc
jne
mov
dec
shlb
sarl
sbb
outsl
xchg
out
xor
mov
lock
inc
test
sbb
lea
inc
cli
test
jne
or
movsl
sbb
pop
mov
pushf
cmpsb
cmc
cmp
out
mov
out
mov
mov
jo
push
ljmp
push
lcall
out
jae
jb
fwait
jmp
stc
scas
es
test
add
adc
and
jmp
movsl
xchg
and
and
lods
cwtl
and
push
mov
add
xorl
lea
enter
xlat
fdivs
xor
stc
je
lahf
movsl
enter
gs
dec
xor
in
inc
scas
xor
adc
into
mov
jnp
repz
sub
and
aas
ja
addl
in
call
xor
sbb
aam
aam
push
ja
pop
xchg
sbb
int3
dec
mov
insl
xor
cmp
xchg
lahf
pop
jl
inc
pop
sbb
jnp
add
push
sahf
addb
dec
lock
je
decl
and
inc
xorl
adc
push
bound
xor
test
lock
sub
dec
jle
fbld
and
dec
push
test
lret
pop
jecxz
inc
loope
sar
push
mov
outsb
sbbl
das
mov
dec
push
mov
pop
nop
xchg
xor
push
add
lcall
cmpb
idivl
pop
sbb
hlt
in
xchg
mov
or
adc
das
popf
dec
push
sub
bound
xor
icebp
and
lahf
mov
sbb
fs
mov
push
mov
or
jns
mov
std
out
imul
pop
test
xchg
add
cmp
std
xchg
sub
leave
inc
dec
sahf
popa
repz
xor
imul
out
jp
inc
scas
dec
fsts
add
stc
xor
pop
jnp
xor
add
adc
cs
cmpsb
rcrb
mov
int3
sbb
sub
jecxz
rorb
arpl
sub
negl
xor
and
aas
ja
addl
in
call
xor
sbb
cmp
sbb
sbb
int3
dec
mov
insl
xor
cmp
xchg
lahf
pop
jl
inc
pop
sbb
jnp
add
push
sahf
addb
dec
lock
je
decl
dec
inc
add
jge
dec
xchg
pop
push
leave
mov
adc
shl
xchg
fsubs
add
lods
lcall
mov
dec
cmc
es
or
push
xchg
fstpl
addr16
fisttpl
sar
int3
rcll
test
or
dec
cmp
cwtl
shrl
cld
in
mov
mov
mov
or
push
rclb
cmp
mov
pop
mov
mov
mov
fstl
call
outsl
cwtl
fwait
adc
mov
js
icebp
gs
std
imul
adc
mov
xchg
and
adc
inc
xchg
push
in
and
imul
ret
packuswb
push
call
outsl
cwtl
add
jbe
adc
mov
aas
ret
xor
test
ficoms
xchg
jle,pt
gs
adc
iret
cs
aam
xchg
hlt
pop
jb
cmc
inc
and
in
popa
xchg
fldcw
addr16
test
sbb
jns
jne
sbb
nop
fstpt
and
cmp
push
pop
scas
dec
dec
mov
repnz
vzeroupper
pop
sbb
stc
dec
xchg
push
xor
mov
out
test
xchg
pop
imul
cmp
cmp
jge
stos
orl
add
xchg
ds
sbb
es
xchg
fiadds
or
jnp
in
lds
popf
cmp
mov
add
adcb
pop
push
out
or
pop
fwait
mov
fdivs
mov
insb
mov
mov
addr16
jnp
pop
insl
pushf
dec
pop
imulb
lahf
roll
std
pushf
pop
xor
xor
sarb
outsl
jne
mov
movsl
jne
and
cmp
cmp
dec
inc
or
jmp
fldl
fwait
ret
out
xlat
add
inc
inc
or
cmc
out
popf
add
mov
aas
and
std
loope
xorl
jg
and
mov
leave
mov
cs
stos
xor
xchg
sub
mov
call
inc
xchg
inc
into
pop
adc
add
mov
loop
sub
jg
adc
repz
je
cs
ja
and
jns,pt
imul
mov
inc
in
adc
int
sbb
loope
imul
and
dec
jl
cmp
mov
jl,pt
cmp
mov
ds
jmp
push
cmp
stos
scas
jb
std
rcrb
loope
sub
addr16
mov
test
and
lcall
jg
shll
pop
js
repnz
loope
jmp
clc
ljmp
pop
data16
sub
add
test
std
popf
aas
stos
test
inc
adc
mov
and
cwtl
out
jno
add
hlt
lods
dec
std
fnstenv
stc
imul
cmp
mov
fwait
add
imul
daa
daa
push
pop
leave
cmpsl
inc
aas
ror
inc
push
jno
and
inc
jecxz
test
stc
les
push
sahf
add
je
xlat
adc
hlt
fstl
notb
cmp
mov
fisttps
bound
outsb
mov
mov
into
and
mov
xchg
pop
sbb
cmp
fldenv
pop
sahf
jae
cld
mov
jno
pop
lret
mov
push
add
iret
fsubl
ja
repnz
ljmp
stos
or
xor
cmp
pop
dec
popa
ja
sub
jns
jno
and
adc
fnstenv
into
adc
add
cs
pop
push
and
pop
fnsave
aas
in
aad
mov
jno
insb
cwtl
lods
subb
pop
or
pop
mov
sbb
in
mov
cltd
mov
add
cmpl
inc
jle
mov
pusha
popf
pop
jno
lea
mov
ds
dec
jo
cmp
incb
jmp
pusha
push
pop
loope
outsl
sub
xchg
cmpsb
hlt
cmp
ja
or
jo
adc
insb
ds
arpl
movnti
xchg
sahf
pop
in
xchg
ds
push
push
loop
mov
jo
push
test
insl
xor
mov
push
pop
jmp
inc
imul
loop
test
sbb
mov
mov
aas
nop
xchg
lods
lds
mov
shrd
adc
movsb
mov
sbb
fnstcw
push
pop
xor
jb
mov
cmp
mov
out
fnstsw
scas
shll
mov
pop
xor
cld
add
roll
cmp
dec
jecxz
fcmovu
jg
in
push
mov
std
scas
mov
inc
imul
cs
ljmp
addb
sub
xchg
xor
aaa
add
fsts
push
cmp
mov
shll
popf
adc
xor
add
cwtl
fbstp
sub
cli
fidivrl
add
lods
std
mov
orb
decl
jmp
in
lahf
orb
add
push
xchg
shll
xor
sub
repnz
imul
popa
sub
mov
ds
add
push
xchg
dec
mov
std
jno
repnz
imul
js
push
and
xor
jnp
dec
ja
sbb
loopne
mov
adc
std
sub
jo
pop
in
add
and
aas
cmp
xor
jns
popa
int
arpl
mov
push
adc
int
dec
xchg
int
or
or
mov
push
xchg
mov
fdivr
xchg
xorl
decb
sbb
mov
cltd
arpl
rcrb
loopne
sbb
sbb
and
pop
repz
sub
imul
inc
mov
shll
fs
ljmp
negl
mov
rcrl
sbb
cmp
test
leave
mov
cld
nop
or
in
and
push
adc
andl
cmc
mov
bound
enter
out
out
mov
jno
mov
pop
jnp
jne
jl
jg
outsb
negl
idivb
xor
into
loop
push
mov
out
ja
in
jns
pop
popa
into
push
rorb
mov
pop
das
mov
ds
test
add
out
dec
inc
les
lock
repnz
int3
pand
fistpl
sbbb
pop
or
dec
jp
out
in
jns
pop
popa
into
push
rorb
and
pop
sbb
out
push
push
sbb
sub
in
adc
xorb
lret
aad
pop
jb
dec
push
pop
mov
fsubrs
mov
cltd
lds
mov
pusha
jnp
popl
jne
mov
iret
sbb
mov
xchg
imul
scas
inc
ret
mov
adc
loope
xchg
sbb
inc
das
popf
iret
ret
jp
cmp
mov
das
dec
in
pop
out
fs
loopne
pop
jo
dec
inc
sarl
mov
cli
insl
data16
cmp
out
mov
pop
je
push
push
or
out
test
fmuls
stc
sbb
leave
rorb
mov
in
ljmp
jmp
test
insl
out
scas
pop
inc
out
int
js
xor
dec
xlat
cmc
inc
fidivs
outsb
jb
and
pop
dec
out
insb
insl
repnz
push
jns
inc
xlat
cwtl
pop
mov
nop
ret
mov
rcrl
in
popa
sbb
ljmp
add
rol
sbbl
repnz
push
jb
mov
pop
je
dec
dec
mov
and
pop
out
es
shrb
cs
lret
popf
and
xchg
jb
adc
fs
add
aam
enter
pop
pop
xor
jmp
repnz
sub
jae
mov
cwtl
mov
repz
sub
jae
mov
shll
xor
mov
scas
lock
movsb
enter
movsb
insl
sahf
cmpb
hlt
dec
jo
xor
xchg
or
xchg
mov
pushf
jne
mov
xchg
and
cmpsl
shll
jge
dec
cltd
xor
jnp
popf
in
scas
mov
mov
dec
push
fldpi
mov
sub
pop
adc
xchg
pop
imul
and
mov
pop
dec
ret
xchg
dec
jecxz
hlt
imul
xor
cmc
daa
scas
iret
int
dec
pushf
outsl
mov
mov
mov
dec
adc
jns
scas
mov
and
mov
dec
xor
andl
daa
push
cmc
cmp
iret
add
push
pop
dec
andb
pop
jns
test
mov
jb
fsubl
push
ds
pop
dec
jle
pop
in
mov
call
je
clc
cmp
repnz
inc
ret
cld
pop
push
inc
add
jns
fistps
hlt
dec
jne
sub
fnstenv
popf
popl
cwtl
movsl
outsb
mov
lretw
xor
adc
push
lods
stc
jg
push
rcrl
add
lea
push
je
lcall
fidivl
and
out
je
push
xor
cmp
adc
stos
add
test
xchg
fistl
or
pop
push
and
mov
je
push
int
push
call
sub
int3
push
jl
sub
cmc
mov
and
pop
cmp
das
mov
pop
jns
mov
push
repz
pop
xchg
lret
inc
out
aad
or
js
leave
sub
xor
or
pushf
out
adcl
inc
pop
out
or
fcomps
mov
lret
or
cltd
popf
cwtl
daa
adc
inc
xchg
lods
sub
jb
lods
xorl
fsubrl
insl
xchg
mov
mov
lock
rorl
xchg
shl
imul
sbb
imul
int
pop
mov
lds
inc
stc
addb
xchg
loopne
push
enter
insl
push
outsl
jp
lods
insl
loopne
std
gs
popf
cmp
mov
sub
cltd
push
mov
lods
stc
sub
rcr
mov
scas
add
das
push
outsl
xchg
jg
frstor
fmuls
xor
movl
jnp
and
push
addl
xor
sub
jne
imul
and
out
inc
xchg
jb
mov
mov
mov
jg
enter
fdivr
jmp
pop
lret
lods
stc
ret
dec
stos
pop
inc
sbb
imul
push
and
out
lods
or
insl
pop
and
dec
jl
and
sub
sarl
pop
mov
repnz
sub
popa
pop
jae
xchg
insl
pop
dec
addr16
lea
add
xchg
push
sahf
cmc
cltd
stos
icebp
jae
lock
movsb
jl
stos
rcrb
repz
dec
ljmp
and
mov
dec
add
repz
adc
in
outsl
int3
cmp
aaa
push
mov
jbe
int3
into
fwait
icebp
jp
and
fdivs
mov
mov
mov
ja
xor
test
jbe
dec
xchg
pop
loopne
in
pusha
push
jl
shr
std
js
mov
data16
imul
inc
pop
jae
jge
lcall
in
push
sbbl
iret
decl
loope
lcall
sub
leave
cmp
pop
fs
sbb
adc
pop
faddl
inc
neg
pop
xor
pop
push
jmp
xor
outsl
xchg
in
mov
lret
ret
js
cmp
mov
pop
dec
mov
xchg
gs
mov
and
adc
mov
loop
and
fistpl
xchg
nop
inc
xor
inc
dec
mov
and
sub
pop
fidivrs
enter
lahf
das
nop
int
mov
into
jbe
sub
enter
inc
inc
repnz
cmpb
jecxz
or
add
mov
addl
ja
ret
fucomip
cs
mov
xchg
int3
cmp
sub
and
dec
daa
xchg
xor
out
aas
jne
and
jb
pop
cld
fsqrt
addl
sub
adc
cltd
test
inc
xchg
inc
pop
mov
inc
and
pop
pop
fsubrl
lods
xor
orl
fwait
lcall
cmp
adc
jge
outsb
jl
lds
pushf
dec
fcmovb
loope
es
pop
data16
subl
frstor
inc
adc
nop
rorb
lcall
dec
jmp
pop
lret
pop
pop
in
mov
jns
aam
cmp
fnstcw
cmp
add
or
stos
mov
mov
cld
add
fs
dec
mov
cmp
nop
data16
adc
dec
hlt
into
je
subl
fstpl
lea
sbb
pop
jnp
sarb
cli
sbb
mov
jmp
sub
sub
mov
shlb
stos
add
and
cwtl
mov
out
jb,pn
mov
push
pop
ret
cmp
mov
hlt
mov
push
lods
mov
enter
push
mov
sahf
dec
xorl
jle
rcrb
mov
fs
xor
push
fdiv
jae
shll
ret
out
ljmp
insl
pop
add
adc
push
in
xchg
mov
stc
inc
sbb
adc
mov
mov
enter
aas
outsb
ljmp
shll
jno
and
aad
cld
popf
aad
adc
sbb
xor
ret
fistpll
cmp
inc
movsl
iret
sbb
daa
push
cmc
cmp
lcall
mov
sbb
cld
shl
xor
xor
jmp
inc
das
mov
cmp
repnz
xchg
int
lcall
hlt
das
sbb
scas
subl
fnstsw
ret
mov
sbb
cs
add
cmp
mov
outsb
jnp
mov
xchg
ss
pop
mull
inc
add
aas
fisubl
mov
notl
in
jb
mov
pop
pop
pop
adc
rdtsc
mov
xchg
cmpsb
sub
fmull
loop
enter
mov
pop
idivb
cltd
fmul
cwtl
jne
xor
stos
in
xor
pushf
sub
sbb
sub
mov
mov
add
mov
push
cmc
cmp
dec
mov
mov
clc
pop
adcb
pop
or
adc
xor
jne
cld
and
test
adc
sbb
daa
addr16
jb
subb
xchg
and
push
mov
or
mov
loopne
repz
sub
out
pop
cwtl
jmp
or
or
incl
shll
sub
sub
cmp
cmc
push
aam
lret
mov
gs
push
insb
push
pop
xchg
and
mov
jecxz
stos
mov
dec
pop
mov
movsl
adc
adc
les
or
mov
cmp
xor
in
jecxz
divl
dec
mov
inc
cmp
leave
fisubrs
mov
pop
ret
xor
or
inc
frstor
pop
cmpl
and
and
push
divl
jmp
pop
adc
stc
bound
lret
js
add
add
cmp
fsubs
mov
ret
lds
and
mov
lock
mov
dec
sbb
sti
dec
rorl
bound
mov
lods
inc
aaa
ljmp
shlb
and
iret
repz
lock
xchg
mov
and
into
stos
cmp
adc
into
clc
mov
mov
stc
xor
sar
jp
es
mov
cmpsb
repnz
test
loopne
dec
fmull
mov
cltd
inc
pop
mov
mov
xchg
xchg
dec
mov
jmp
adc
or
aad
leave
sbb
push
notb
aad
cltd
add
mov
insb
mov
jbe
dec
xchg
in
mov
pop
outsb
icebp
ljmp
adc
in
cmp
stos
dec
ja
push
inc
aaa
jae
fstpt
inc
jae
jge
cli
sub
movsb
mov
insb
iret
mov
js
les
movsl
pop
fucomp
adc
pop
stos
pop
cmp
mov
ffreep
sbb
xor
xor
fidivl
jge
cmp
xor
pop
subl
xchg
adc
cmp
dec
mov
das
addr16
add
into
inc
out
into
fxch
dec
fildl
test
sub
mov
dec
and
push
aad
adc
push
dec
jbe
mov
lret
subl
push
movsl
push
xchg
sub
pop
js
scas
jp
push
dec
lods
imull
lods
cmp
ss
push
aad
inc
xor
subl
leave
in
xor
mov
es
pusha
cmp
fcompl
test
add
pop
dec
stos
and
out
out
mov
loop
sbb
xor
dec
mov
jnp
addr16
push
pop
or
aaa
dec
out
or
xor
lahf
pop
jbe
js
or
dec
dec
xchg
push
adc
sbb
sarb
enter
mov
sub
sbb
and
xor
add
pop
daa
push
mull
push
xor
repz
mov
mov
subb
inc
pop
mov
repz
cmp
xor
xor
mov
push
mov
jecxz
inc
js
xchg
mov
pop
mov
movsb
lret
mov
push
adc
out
jmp
ds
lods
call
pop
pop
or
xor
outsl
pop
pusha
outsb
add
gs
les
repnz
js
push
cmp
or
nop
loope
scas
sbb
xchg
mov
sub
rcll
movsl
imul
jae
push
cmp
and
mov
nop
push
mov
cmp
popf
cmpsl
pop
add
cld
cmpsl
fwait
xor
pushf
xchg
je
gs
inc
in
pop
call
or
clc
cmp
add
inc
push
xchg
mov
cmpsl
adc
pop
inc
js
cmp
idivl
jne
cmp
in
xor
jl
scas
jns
fimull
scas
shr
loope
fbld
add
fs
mov
push
stos
in
imul
push
movsb
popf
and
inc
push
dec
xchg
mov
and
cmp
iret
or
ret
add
jge
dec
xchg
fiaddl
xlat
scas
cs
mov
xchg
and
lret
sub
repz
repnz
nop
add
mov
jl
sarb
lret
sbb
addr16
lods
mov
xchg
pop
lcall
mov
popf
testb
dec
mov
xchg
adc
lret
cmp
psubusb
sahf
xchg
rclb
jae
icebp
push
add
lock
jo
hlt
cmc
and
movsb
mov
sub
mov
hlt
out
xchg
movsl
pop
sbb
test
pop
sbb
jle
out
fwait
cmpsl
lock
xchg
sub
test
cmc
cmpsl
fstl
push
adc
out
and
jo
pop
push
ds
popf
movsb
jbe
inc
cmp
xchg
frstor
cli
movsl
jecxz
inc
xchg
jb
stos
mov
push
mov
pop
push
incb
in
sti
mov
enter
push
jns
shlb
add
add
mov
sub
xchg
addl
pop
sbb
popf
test
xlat
xchg
xor
arpl
adc
lea
jae
test
sub
pop
int
pop
fwait
sub
mov
sbb
cmpb
repz
jo
mov
jo
popa
and
fwait
dec
sbb
pop
in
inc
push
push
mov
nop
fidivrl
in
vmovdqu
repnz
jecxz
mov
shlb
outsl
mov
loop
push
mov
jge
movsb
shl
clc
aas
push
push
dec
js
jns
inc
cmp
jae
xor
movsb
mov
je
mov
stc
ja
xchg
sub
mov
repz
mov
pusha
rorb
add
jae
fcomps
pop
test
insl
sub
es
fcmovne
sbbl
cltd
inc
adc
pushw
pop
in
and
jge
out
in
imul
fdivrl
out
mov
inc
pusha
pop
sahf
cmp
mov
mov
jecxz
sbb
cmp
xchg
fisttpl
add
jmp
cmpsl
out
out
outsb
iret
int
mov
ret
cmp
jbe
lods
jns
pop
fwait
xor
imul
push
repnz
sbb
dec
push
mov
xor
add
in
inc
push
xchg
inc
je
ljmp
nop
mov
and
insb
inc
mov
aam
fisubl
jno
add
push
mov
ret
inc
xchg
int3
into
jl
sbb
aas
mov
push
mov
in
gs
pop
div
ds
rclb
js
jmp
mov
pop
ljmp
scas
cmp
mov
sub
in
dec
xor
jbe
sub
cmp
xor
mov
repnz
rcrb
mov
aaa
out
mov
push
cmp
mov
adc
and
mov
cmp
xchg
mov
out
lahf
int3
std
mov
rclb
fistpll
rorb
pop
and
ljmp
subl
jae
cld
rcrl
iret
and
and
popf
insb
cmc
bound
and
movsl
xor
cwtl
pop
stos
and
out
movsb
cmpsl
enter
push
cmpb
lods
lds
and
cmpsl
mov
in
mov
mov
pop
or
push
or
add
daa
les
mov
and
pop
add
sti
dec
xchg
jne
push
and
dec
cvttps2pi
pop
pushf
cld
xchg
adc
fcmovb
enter
test
scas
and
jmp
cmpl
inc
xchg
lea
pop
xor
mov
xchg
push
sub
jns
push
enter
test
adc
mov
jmp
and
or
pop
mov
enter
fnstenv
or
mov
mov
outsb
in
loopne
push
rcrl
call
ds
xor
je
inc
sbb
push
mov
adc
sub
gs
ds
ffree
lods
mov
loopne
cmpsb
nop
mov
xlat
xchg
mov
mov
push
rcrl
mov
imul
enter
fidivl
call
jmp
push
add
mov
dec
sarl
int
mov
cmp
jmp
jmp
inc
adc
and
dec
cmpsl
pop
std
sbb
movsl
jge
je
sti
mov
aas
sbbb
sub
cmp
xchg
adc
sub
gs
ds
ffree
lods
mov
bound
mov
dec
jo
int
jnp
pushf
adc
or
mov
popa
lods
xchg
sbbb
test
inc
mov
adc
icebp
jle
cs
mov
jmp
inc
lret
xor
mov
inc
pop
sbb
and
sub
mov
inc
jne
pusha
xchg
popa
jb
dec
xor
xchg
mov
push
cmp
xchg
lods
je
dec
imul
fldt
jge
fisubl
mov
push
das
fldcw
push
notb
pop
sub
xchg
push
out
and
loop
das
cld
in
xchg
adc
dec
pop
ljmp
xchg
cmp
daa
cmpsl
decb
out
mov
sbb
mov
pop
cld
xchg
pop
push
push
aam
push
ret
cmpsb
push
ficomps
pop
adc
mov
pop
inc
test
push
mov
pop
pop
add
add
inc
out
inc
push
cwtl
or
jno
stos
icebp
lcall
inc
ljmp
xor
hlt
mov
imul
cwtl
insb
sarb
imul
push
popf
std
lahf
and
cmp
cmc
mov
mov
inc
stos
xchg
ret
fdivl
aad
xchg
and
std
add
lret
jnp
pop
icebp
je
je
lea
aaa
sub
fisubrl
cmpsb
cli
xor
jno
shl
popa
cld
cmp
sbb
repnz
in
loope
adc
int
push
add
aaa
outsb
pop
ret
ljmp
cld
push
je
xchg
aaa
leave
xor
out
push
push
pop
push
and
add
mov
rorl
fmul
pop
cmpsl
into
push
clc
mov
mov
fiaddl
in
outsb
fincstp
mov
xlat
out
push
lods
and
adc
je
push
pusha
iret
inc
scas
sub
and
dec
out
mov
lahf
mov
jp
mov
in
ret
test
inc
jnp
or
mov
cmp
inc
push
movsb
and
mov
push
pop
bound
ljmp
mov
mov
mov
adc
loopne
outsl
lds
flds
jle
clc
xlat
add
lahf
jns
mov
leave
loope
pop
add
jns
xor
test
insb
mov
adc
movsl
or
pushf
xchg
je
mov
push
aas
hlt
jl
sti
movl
ds
jge
scas
xchg
dec
adc
mov
mov
enter
lock
jnp
daa
in
dec
nop
fiadds
or
sbb
rcr
xchg
mov
fstpt
pop
leave
mov
mov
jnp
xor
loope
pop
or
rolb
push
movsb
test
dec
sub
xchg
sub
popf
clc
xlat
add
mov
adc
aad
push
aad
out
movsl
sarb
xchg
les
push
cld
xor
dec
lds
jb
stc
push
dec
lahf
mov
lods
in
jne
sub
push
push
and
dec
adc
pop
xchg
js
push
xorb
cmc
mov
push
aas
cmp
outsl
lock
aas
jecxz
adc
lahf
mov
cli
out
dec
neg
mov
sub
ja
fbstp
out
hlt
enter
mov
push
mov
pop
clc
lahf
test
gs
push
pop
mulb
out
cltd
and
sahf
jne
or
roll
pop
popf
popa
scas
add
mov
add
out
lret
daa
pop
loopne
ljmp
outsb
aam
push
ds
cmp
fstpt
mov
and
scas
mov
int3
jle
sar
push
in
xor
ror
outsb
adc
lcall
dec
cltd
jbe
hlt
mov
mov
mov
sbb
sbb
push
and
add
add
aad
lock
cs
aad
mov
aas
dec
ja
mov
lock
mov
pusha
xor
add
cwtl
fildll
push
mov
cmpsb
jb
xchg
outsb
std
sub
mov
pop
je
leave
push
pop
mov
outsb
lcall
stos
jne
and
leave
xchg
roll
push
xor
push
leave
pop
ret
mov
mov
shlb
sub
test
xor
pop
mov
sbb
aas
mov
adc
fwait
and
pop
je
leave
cmc
movd
in
or
rorb
in
std
ret
dec
imul
mov
push
fcmovu
adc
cs
repnz
rorb
mov
push
xchg
or
orb
mov
pop
jmp
cmpsb
ror
fwait
ss
cmp
mov
lock
push
dec
lahf
mov
adc
popa
xor
fninit
mov
push
adc
aad
mov
mov
mov
push
aas
aas
mov
cmpsb
push
mov
imul
loope
jb
stos
push
dec
in
pop
sti
mov
sub
stos
xchg
sub
push
sbb
jne
dec
cmc
or
ds
arpl
and
inc
jbe
cltd
or
lret
lods
and
rclb
fdivrl
xorl
test
andl
icebp
icebp
mov
xchg
dec
std
iret
inc
pop
pop
insb
sub
sarl
sub
ds
lea
adc
cmc
loop
lcall
sbb
popa
or
aad
idiv
aam
clc
ds
cmc
mov
jbe
jae
add
mov
sbb
sbb
faddl
xchg
push
aam
roll
lea
inc
add
popf
popa
sbb
ds
or
in
jge
out
add
mov
bound
jb
lret
js
shll
into
fmuls
out
jb
arpl
test
rcrl
hlt
inc
fs
push
push
movl
dec
cmp
imul
sub
lahf
or
mov
push
fisubrl
loope
pop
ss
or
xchg
rep
cmp
loope
pop
ss
js
lods
lods
adc
mov
cmc
clc
popf
adc
jae
lret
dec
adcl
ljmp
ffree
and
fldenv
mov
pop
mov
loopne
sahf
and
fs
incl
test
cld
xchg
xchg
iret
sub
lret
cmp
pop
dec
and
pop
mov
add
and
icebp
insl
test
sub
in
loop
shll
mov
dec
rcll
out
mov
jp
push
inc
cmp
jae
sarl
and
xchg
notl
ret
push
fisubs
or
mov
test
cld
adcb
daa
sbb
mov
push
push
hlt
test
in
dec
mov
jb
fbstp
ss
or
bound
xlat
jmp
fdivs
sub
cmp
call
and
jg
mov
les
js
mov
stos
fnstenv
and
out
arpl
push
pop
popf
ficoms
dec
data16
popf
add
add
adc
pop
mov
xchg
lret
pop
popa
stos
push
fwait
jle
push
lods
in
push
int
mov
insb
cmc
push
push
insl
mov
mov
lea
fisubl
xorb
jns
jg
push
push
stos
fnstenv
and
nop
cwtl
in
mov
sbb
leave
js
loope
pop
jmp
dec
push
dec
xlat
call
aad
cmp
out
lahf
pop
mov
mov
scas
xchg
hlt
repz
cmpsl
or
xor
notl
lock
loop
pop
or
in
lock
notl
lock
loop
add
fcoml
aam
sub
mov
ljmp
movsb
inc
inc
cmp
mov
jbe
test
aad
jb
cld
cwtl
and
mov
je
lahf
fbstp
sub
bound
sub
push
cmp
xchg
mov
fisubrs
xchg
mov
jl
pop
pop
adc
fidivl
aam
add
stc
stos
sbb
add
xor
insb
scas
and
cwtl
divl
shll
push
fiadds
mov
negl
aam
xchg
mov
push
adc
adc
sub
jge
dec
cmp
sub
dec
daa
ret
or
shll
into
sbb
clc
in
xchg
sub
divl
sub
gs
add
stc
sbb
popa
ret
sbb
stos
lock
inc
push
repz
pusha
dec
mov
hlt
cmp
xchg
aaa
add
mov
xor
aad
pushf
or
stos
aad
cmpsl
dec
stos
xchg
fisttps
inc
mov
fimull
fisttpll
xor
inc
jmp
pop
cwtl
push
outsl
sub
cmp
mov
add
push
and
movsb
jo
js
xlat
insl
pop
outsl
ljmp
cmpl
inc
fistps
jo
and
out
ret
ja
push
in
pop
test
push
orb
sub
push
outsb
or
lret
mov
jp
gs
aaa
adcb
xchg
jns
sbb
xlat
push
xor
cmpsb
sub
dec
xchg
pop
xor
rcrl
mov
not
jmp
push
dec
aaa
stc
push
cmp
inc
mov
cs
mov
xor
sti
fwait
jo
arpl
push
sub
mov
lcall
pop
inc
lret
lods
outsb
fwait
xor
fildll
mov
push
sub
rclb
mov
aad
hlt
addr16
leave
sbb
mov
cmp
xor
ljmp
aaa
into
push
inc
inc
pop
shrl
pop
negb
fildll
mov
sti
mov
imul
jnp
scas
shrl
loope
mov
xor
das
int3
mov
mov
orl
pop
mov
xor
call
shrb
xor
sahf
out
lock
scas
add
adc
orb
es
cmp
into
push
outsb
fwait
adc
ljmp
aad
push
inc
xchg
pop
push
mov
adc
mov
jmp
out
mov
leave
sar
cmp
movsb
arpl
mov
or
xor
and
movsl
adcl
xor
inc
shrl
fcmovnu
xor
stos
aas
rcl
adcl
xlat
sbb
pusha
mov
cmp
and
mov
lock
shrl
xlat
fcomps
ds
cwtl
movsb
cmp
lahf
sahf
nop
mov
scas
pushf
cmp
push
sub
out
and
pop
std
mov
inc
cld
std
add
ja
cmp
sarb
pop
push
pop
in
sub
and
sti
cmp
or
or
pop
lods
mov
in
inc
pushf
into
lock
xchg
mov
movsb
jno
sub
sahf
jp
push
sub
into
sub
ds
xchg
mov
jl
out
add
inc
pop
jp
inc
out
xchg
xor
or
sbb
adc
or
cmc
clc
mov
test
subb
fldt
add
in
jae
and
cmovle
jne
inc
adc
and
or
sub
add
xlat
in
jg
int3
mov
std
es
inc
fisubl
repz
sub
in
loope
xchg
mov
loop
into
push
int
dec
xchg
sbb
add
mov
addl
inc
push
adc
movl
pop
ja
adcb
outsl
into
in
pop
sti
sub
lcall
test
pop
and
cmp
sbb
or
psllw
mov
add
mov
shll
sub
mov
popl
pop
sbb
lcall
pop
push
lock
dec
out
xchg
mov
sub
add
out
jb
sbb
jp
pop
lods
dec
mov
fimull
inc
iret
or
lret
add
mov
sub
mov
jl
fsubrl
mov
xor
shl
xchg
dec
mov
imul
insb
xlat
sub
ljmp
or
repnz
enter
mov
mov
es
mov
sti
cmp
loopne
leave
fcomi
cmp
jle
movsb
xor
xor
out
fs
mov
ljmp
adc
fsubrs
stos
add
jmp
mov
cld
in
mov
clc
mov
rolb
lods
push
pop
cli
pop
test
mov
in
mov
mov
pop
setl
inc
jg
jle
mov
lods
lret
call
xchg
or
lahf
insl
out
pop
cmp
sub
pmaxsw
xor
sub
scas
in
shlb
fsubs
mov
flds
incb
and
mov
and
inc
pusha
cwtl
rcr
lds
sub
mov
inc
mov
mov
xchg
cld
add
mov
shl
cmpsl
jmp
or
clc
add
repnz
adc
adc
cmp
scas
mov
add
mov
and
arpl
push
adc
xlat
xchg
lahf
shlb
mov
xchg
pop
dec
mov
in
ds
call
mov
fimull
fwait
xchg
pop
pop
shll
jmp
sub
std
push
cmp
rclb
or
pop
loopne
cmp
dec
push
addl
rclb
leave
in
mov
push
ja
jns
loopne
fs
addr16
dec
dec
cmp
jge
fildll
in
xchg
lods
add
mov
push
in
in
mov
rcrb
lcall
mov
fldt
ficoms
xor
inc
jo
mov
inc
inc
xchg
btrl
pushf
jg
test
out
sahf
cli
xor
lods
in
add
movsb
in
inc
cmp
jg
jbe
ja
int
aas
fcomps
sub
and
dec
dec
shrb
fs
je
pop
add
call
pop
xchg
movsb
inc
ss
stos
mov
dec
aam
movsb
mov
pop
rcrl
sub
jno
add
xchg
aam
test
jge
jo
dec
mov
imul
inc
pop
sub
or
cmpsb
insb
lcall
loopne
add
cli
jl
fadds
jbe
aam
iret
jl
movsl
add
add
imul
lret
jmp
pop
ss
sbb
dec
pop
je
es
mov
aad
mov
test
shrb
fists
int3
xchg
sbb
pop
xchg
hlt
cmpsl
adcb
push
push
mov
xchg
lret
mov
pop
mov
shll
cmp
das
inc
adc
addr16
sub
leave
jle
mov
sbb
jecxz
pusha
test
pop
mov
sbb
fwait
icebp
push
dec
and
bound
popa
aas
fcoml
jno,pt
das
and
cmpl
lock
lods
cmp
inc
mov
mov
jl
adc
or
out
mov
clc
sbb
cltd
popf
inc
xor
jbe
xchg
popa
fucomp
iretw
sti
pop
shrb
jnp
push
dec
arpl
scas
pop
mov
adc
in
fcmovbe
push
xor
lahf
pop
rorl
sbb
and
sub
mov
movb
addb
js
icebp
adc
or
sub
xor
xor
lret
ret
mov
ja
std
movsb
sub
sti
or
out
cmpsb
sarb
mov
sbb
xor
xor
push
and
add
gs
push
cs
adc
std
out
jae
rorb
rcrl
cwtl
cwtl
shrd
push
movsl
pop
or
fildl
pop
cmpsb
lcall
fsubrs
push
out
int
imul
scas
add
lahf
scas
out
sub
hlt
jne
mov
ljmp
lock
mov
xchg
outsb
cld
pop
and
xor
pop
test
cli
mov
ret
push
jne
and
fcmove
fimuls
xchg
popf
insl
mov
pop
sbb
sbb
or
addr16
or
xchg
fisubrl
or
add
das
insl
add
int3
xor
fiaddl
push
pop
dec
xchg
out
jmp
iret
add
rolb
mov
dec
sub
or
sar
push
fnstsw
inc
dec
or
out
ret
jnp
das
jge
sbb
pop
mov
mov
push
sti
ljmp
and
es
push
push
cwtl
mov
mov
inc
imul
inc
sub
mov
cmp
loope,pn
pusha
andl
add
lds
clc
sbb
mov
aaa
inc
or
or
stos
adc
sahf
pavgb
sub
call
imul
jbe
in
popa
pop
and
inc
mov
xorb
leave
xchg
lds
les
xchg
repnz
sbb
std
pop
mov
test
rcrb
lret
loopne
mov
fildll
incb
cld
lret
dec
out
sti
fs
aaa
pushf
mov
stos
cmpb
inc
stc
dec
stos
leave
cwtl
xorb
jle
or
dec
and
cld
xor
push
in
or
fists
cmpsl
jno
bound
fistpl
lock
hlt
jo
inc
or
mov
popf
dec
shrl
adc
xor
sub
clc
or
xlat
pushf
roll
sahf
push
es
and
mov
jecxz
repnz
mov
sbb
xchg
stc
aad
sub
popa
stc
or
dec
cmp
or
ljmp
sub
repz
add
lret
xchg
int3
and
in
ret
add
inc
mov
lcall
fnstenv
sub
dec
iret
loopne
adc
cld
pusha
mov
jge
lret
cwtl
adc
cwtl
mov
adc
mov
imul
call
push
jl
mov
call
cmpsl
ret
lret
and
xor
ja
or
fstl
cltd
jecxz
adc
push
data16
pop
stos
pop
adc
shrb
movsl
mov
adc
in
add
cmpsb
mov
cltd
jecxz
adc
xchg
mov
scas
push
test
mov
adc
in
add
clc
sub
outsl
int3
dec
rep
daa
test
push
push
fdivrl
mov
xlat
mov
orb
pop
dec
cmp
jmp
lret
add
push
jno
inc
das
les
jge
addb
data16
inc
sbb
sbb
cmc
dec
jge
pop
pop
aam
lods
sbb
mov
pop
js
decb
call
cld
xor
add
les
push
and
pop
ret
push
mov
inc
out
mov
enter
popf
outsl
dec
xor
cs
dec
push
mov
cmp
inc
jne
shl
sti
cmp
imul
inc
lahf
js
daa
hlt
cmp
sub
js
sub
adcb
cwtl
add
dec
pop
push
outsb
add
cmpsb
mov
pop
iret
add
pop
pushf
lea
mov
repnz
pop
xor
xor
js
outsl
cs
mov
out
fidivs
push
push
pop
and
shlb
push
pop
dec
out
cltd
inc
xchg
loopne
push
adc
vmovhps
push
jbe
push
aam
jle
dec
jae
movb
or
sbb
shl
push
mov
aaa
data16
hlt
out
jmp
inc
push
fcoml
bswap
adc
in
aaa
cltd
scas
adc
clc
jb
jbe
xor
or
xor
push
test
nop
pusha
in
das
or
outsb
or
ret
test
inc
xchg
repnz
loop
dec
cmpsb
push
mov
cmp
fwait
mov
aad
mov
mov
sbb
or
mov
add
decb
adc
fmuls
mov
loop
movsl
mov
inc
inc
or
adc
movsl
lea
fwait
leave
or
xchg
mov
dec
xchg
fists
xrelease
insb
pop
mov
push
inc
adc
cmp
out
mov
inc
xor
dec
fcmovne
movsl
lea
fwait
jle
in
loope
dec
pop
xor
stc
fadds
xchg
jmp
negb
jns
xchg
inc
mov
sbb
sbb
xchg
movsl
repz
mov
cmc
and
nop
xchg
imul
add
int
xchg
jg
or
pushl
sbb
xchg
mov
mov
xchg
xlat
repnz
mov
loope
xor
sbb
and
ljmp
xchg
stos
sbb
add
out
call
aaa
sub
push
sub
stc
pop
fcomp
adc
push
jecxz
mov
push
testb
sti
mov
pop
je
je
scas
ljmp
or
dec
jbe
mov
lea
add
test
pop
scas
repz
mov
push
add
testl
push
add
enter
add
sub
lret
mov
xchg
repnz
icebp
imul
hlt
ret
lret
pop
and
enter
mov
int3
sub
fstl
pop
xchg
push
fldcw
ret
add
cmpsb
test
in
insb
or
add
cmp
sub
jl
ret
jae
dec
and
outsl
aaa
mov
es
adc
add
mov
adc
outsl
sets
rclb
pop
jb
hlt
push
sub
adc
cmp
loop
push
mov
std
adc
xchg
xor
jb
aad
mov
pop
or
pop
xor
mov
xor
fbstp
push
pop
and
enter
add
lret
xor
bound
stos
lea
pushf
pop
push
push
repz
add
dec
nop
bound
push
mov
add
mov
push
mov
add
cli
inc
adcb
int
mov
jecxz
into
int3
test
pop
fucom
pop
lods
jnp
pop
rolb
sbb
sub
lea
int
les
or
ja
insl
bound
adc
sub
xchg
aas
mov
lea
cld
xor
sub
stos
rcrl
lret
cmpsl
adcl
shll
hlt
push
sub
mov
add
add
mov
ds
stos
gs
sbb
push
add
push
mov
pushf
insb
pop
cmp
rclb
sbb
sarb
jl
xor
ret
rorl
jl
cmpsl
rolb
in
cli
sub
cwtl
or
outsl
out
mov
cmp
xor
lea
sahf
jecxz
jo
cld
shll
repz
jno
jle
aas
daa
dec
or
cmp
out
cmp
fsubs
inc
jecxz
repnz
mov
sbb
pop
dec
mov
or
xor
arpl
pop
mov
push
imul
sbb
test
gs
xlat
repnz
pop
pop
repz
mov
fisttps
inc
in
mov
subl
je
and
fwait
sbb
sti
mov
sar
pop
test
jns
daa
in
outsb
sahf
lock
daa
lds
and
enter
shlb
and
xchg
adc
jecxz
popa
mov
and
fsubs
jl
pop
sarb
cmp
stos
sbb
data16
hlt
adc
repz
jmp
and
push
jecxz
repnz
mov
sbb
test
call
imul
mov
adcl
cmp
repz
add
dec
sbb
inc
sahf
sub
inc
push
dec
ds
fistl
inc
mov
cmp
arpl
stc
mov
jnp
sahf
lahf
ja
je
pop
je
xchg
add
pop
mov
and
ja
insl
bound
adc
sub
pushl
or
repz
jno
inc
flds
insb
fs
scas
sub
cmc
cmp
pop
call
push
xor
mov
sbb
push
and
lock
and
push
sub
jg
sbb
scas
in
mov
les
aam
imul
outsl
or
add
cs
or
xor
jno
mov
sbb
jb
cli
aam
mov
dec
mov
dec
jne
add
and
daa
clc
inc
scas
mov
fwait
and
cli
sub
mov
sarl
std
ljmp
and
out
sub
xchg
lods
ret
rorl
add
sbb
push
outsb
push
sub
testb
jmp
mov
bound
or
pop
jg
in
push
mov
addr16
fbld
cwtl
inc
mov
jge
addr16
lret
popa
cmpsl
ds
dec
mov
rcr
mov
mov
orb
push
mov
repnz
and
sub
fsubp
cmp
mov
aad
inc
add
movsl
ret
mov
loop
movsb
daa
daa
lods
mov
jge
loop
inc
sbb
xor
add
movsb
add
cs
dec
xchg
outsl
xlat
fistl
xor
xchg
sbb
imul
jle
out
add
lahf
mov
rcrb
jnp
sbb
outsb
in
mov
mov
or
rclb
add
imul
sysexit
js
jle
lret
lock
adc
out
loopne,pt
jge
gs
jle
jne
mov
mov
lods
mov
mov
inc
sub
mov
and
cli
cmp
push
mov
xor
lods
mov
aas
and
lret
add
lret
popa
cmpsl
sub
cmp
pop
das
cmp
pop
cwtl
shlb
int3
xchg
imul
test
adc
into
sbb
cs
fdiv
std
mov
sub
dec
stos
mov
aas
rolb
push
pop
in
jae
clc
fs
xor
inc
jecxz
repnz
mov
sbb
int
jecxz
std
test
jmp
sub
xor
push
test
sbbb
aaa
add
push
fdivs
sbb
fisubs
dec
lret
cmp
xor
inc
add
or
aad
dec
stos
sbb
sbb
clc
inc
andl
aaa
daa
mov
icebp
or
inc
js
mov
mov
jmp
sub
lods
insb
inc
dec
push
sub
xchg
mov
leave
jbe
fdivr
sub
pop
jo
mov
jp
cmp
add
int
xchg
pop
pop
xchg
cli
jp
test
daa
and
push
or
inc
pop
mov
xor
mov
sbb
cmc
repz
sub
jo
pusha
push
pop
imul
xchg
iret
xor
sbb
xchg
arpl
pusha
inc
call
lcall
add
push
aaa
add
jle
xacquire
aas
jg
and
xchg
stos
xlat
lods
loop
addr16
push
stc
std
xchg
mov
mov
jmp
out
js
mov
lea
int3
in
mov
jno
inc
notb
mov
fnstenv
bound
cltd
sub
inc
inc
adc
mov
inc
dec
xor
outsb
jnp
in
scas
mov
stos
mov
stc
fbld
xchg
fnstsw
movsb
pop
mov
xchg
xlat
repnz
stc
cmp
inc
in
adc
into
sbb
cs
fdiv
std
mov
xor
cmpsl
cmp
xorb
mov
adc
js
inc
aad
inc
jnp
sub
push
in
xlat
cmp
xchg
push
mov
mov
addl
sub
das
xchg
and
out
es
out
xchg
mov
cmp
sbb
mov
fsubp
xchg
cmc
push
lds
jb
jno
add
cmp
loope
add
ret
dec
adc
push
out
insl
push
xor
xchg
sbb
outsl
mov
cmp
add
and
movsl
lea
fwait
and
inc
sub
dec
mov
or
sub
imul
cmp
fs
enter
shl
or
jle
adc
xor
das
push
jns
testl
dec
insl
push
pop
mov
cmp
fwait
jmp
cmp
adc
jg
pop
ss
test
xor
leave
cmp
testb
adc
rcrb
cmc
ret
cmp
ret
ss
mov
add
shrb
andb
mov
add
inc
mov
push
dec
dec
test
shr
or
adc
push
xor
pop
inc
jno
cli
sub
inc
stos
sarl
or
jo
and
inc
addb
es
inc
fsubr
mov
inc
xor
mov
jmp
test
inc
cmp
out
push
lods
and
adc
aaa
ret
fdivrs
dec
pushf
push
mov
cltd
xchg
dec
cwtl
arpl
loope
pop
pop
xlat
out
push
lods
and
adc
cmpsb
out
sti
cmc
out
lcall
das
fdivl
cmc
test
xlat
subl
and
adc
cmp
jle
mov
and
push
addr16
push
sbb
xor
xlat
out
push
lods
and
adc
pop
mov
xchg
fs
aad
fldt
lds
xchg
mov
push
mov
push
lods
and
adc
rorb
in
xchg
repnz
xchg
mov
mov
push
lods
and
adc
xchg
sub
xchg
lcall
dec
dec
fldenv
add
fdivs
jbe
fmul
push
xlat
out
push
lods
and
adc
push
jns
cmp
js
ss
sarb
outsl
push
pop
mov
out
push
lods
and
adc
mov
pop
popl
jge
mov
ljmp
push
add
faddl
push
lods
and
adc
lods
and
adc
lock
cmp
or
out
xorb
sub
sub
addb
xchg
pop
into
iret
stos
sbb
sub
push
popf
jge
cmpsb
test
or
shlb
mov
das
and
aas
mov
mov
mov
mov
jl
out
pop
fstpt
mov
sub
add
shrb
out
pop
mov
mov
scas
ss
cmp
loopne
cmp
fdivrl
leave
sahf
movsl
adc
xor
rorl
mov
popa
test
dec
mov
jge
aas
adc
and
pop
jle
dec
scas
push
and
mov
lods
test
push
popf
out
stos
ljmp
loope
pop
rcrb
sub
push
insb
jecxz
leave
outsl
cmp
xlat
xchg
mov
dec
test
push
jo
mov
or
push
stc
imul
ret
in
es
lret
or
cmp
push
jg
aad
jnp
ljmp
add
and
insl
jp
jne
sub
fwait
loop
aaa
addb
lock
and
or
loop
mov
mov
mov
jp
pop
insl
in
and
xor
enter
sarb
sub
sahf
xor
call
addr16
adc
push
sbb
xchg
jp
stos
out
ret
cmpsb
add
adc
push
cmpsb
ja
fstps
mov
push
imul
or
lea
mov
dec
pop
ret
xchg
pop
in
ret
pop
and
xor
inc
sub
push
mov
push
add
lds
sub
sub
push
mov
jle
into
mov
xchg
iret
scas
xorb
repz
test
das
push
sbb
in
insb
bound
sbb
jmp
dec
addr16
not
pop
xor
das
cmp
inc
inc
cs
loop
out
jmp
inc
add
mov
mov
cmp
xchg
or
fidivrs
insl
stos
inc
mov
inc
inc
call
out
in
xor
mov
or
xor
dec
jns
sbb
dec
fldcw
das
inc
xor
mov
cmc
push
add
jmp
int3
pop
mov
mov
and
enter
push
cld
and
add
adcl
test
cmc
stos
inc
jl
mov
test
mov
outsb
mov
ror
push
xor
arpl
bound
sub
adc
add
std
cmp
stos
adc
cli
add
or
fld
push
mov
pop
inc
sub
lret
int3
stos
adc
add
sub
rcrl
cwtl
out
push
icebp
pinsrw
jno
xor
xor
loope
mov
pop
cmp
sbb
push
or
imul
fadd
aaa
push
xchg
adc
loope
or
jmp
jbe
shl
jmp
outsb
nop
add
test
or
push
sbb
jl
and
fiaddl
pop
jnp
cltd
dec
dec
mov
cmp
push
add
dec
enter
loop
mov
fs
lcall
adc
jae
xor
mov
insb
sbb
shrb
xchg
xchg
out
repnz
stc
inc
inc
fcmovne
fisttpl
jg
test
xchg
xchg
xchg
inc
sub
add
cmc
lcall
xchg
push
pop
sub
xor
and
push
xor
int3
fstps
inc
jge
aam
push
add
cmc
pushf
rorb
addb
fs
imul
pop
cmc
mov
dec
mov
enter
pop
hlt
lods
mull
aas
data16
loop
fstl
mov
outsl
ja
cmpsl
gs
xorb
nop
cltd
out
and
sar
push
scas
or
mov
sub
in
dec
mov
loopne
mov
push
xchg
repz
cltd
movsb
push
lea
dec
insl
stos
cmc
xchg
int
and
outsl
jbe
xchg
fwait
rcrb
mov
pop
add
rclb
popf
daa
rorb
in
cmp
push
fnstsw
lret
pop
lret
sahf
movd
fldt
imul
pop
adc
into
repz
in
jne
cmp
and
sbb
ljmp
sbb
fldt
xor
in
sub
pop
rcll
test
mov
inc
gs
mov
cld
idivb
std
lret
pop
xchg
inc
dec
add
or
jae
mov
jno
lcall
sub
movsb
and
mov
inc
clc
lahf
gs
xchg
jmp
sti
test
into
add
xor
scas
dec
movb
and
ljmp
rorb
mov
xchg
xchg
xchg
lcall
cmpsl
out
or
adc
xor
or
daa
xchg
mov
xchg
jmp
fsubl
aas
sub
movb
xchg
xchg
inc
popf
fcmovnb
mov
inc
xchg
loopne
ds
push
push
jnp
cmp
xchg
cli
push
cltd
insb
cmp
and
jge
pop
test
sub
in
jno
xchg
cmpsl
lahf
sbb
jg
and
adc
outsl
jno
fdivr
add
mov
xchg
cs
out
aas
mov
out
push
pop
sub
test
cmp
ret
pop
cmp
jno
mov
mov
inc
icebp
insb
mov
jmp
and
fsubs
mov
xchg
scas
sub
bound
adc
adc
adc
loopne
mov
imul
and
push
and
test
or
gs
imulb
mov
xor
jo
mov
arpl
pop
dec
jae
or
xchg
sub
inc
mov
sbb
inc
mov
outsb
jns
imul
adc
ret
pushf
enter
cmpl
jno
mov
fbld
fcoml
loop
shrl
repnz
pop
jns
movsl
cs
test
sti
mov
shr
addr16
mov
push
lods
fstps
stos
xlat
xor
in
mov
popf
inc
in
sbb
ja
or
inc
add
scas
xchg
adc
inc
cmpsb
dec
xchg
add
insl
sbb
cmp
fcmovb
mov
test
out
push
xchg
ds
dec
ret
push
imull
insl
int3
ljmp
push
inc
scas
jmp
enter
in
loop
sub
mov
mov
push
scas
fsubl
js
push
lahf
dec
scas
popf
pushf
push
int
xchg
inc
negl
mov
mov
test
sbb
out
mov
insl
sub
mov
and
cmp
cmp
push
xor
cmp
sub
jmp
loope
or
mov
dec
xor
pushf
mov
dec
cmc
ds
clc
mov
mov
mov
insl
mov
insl
xor
lcall
xchg
adc
int
sub
subb
jl
jle
pop
mov
enter
mov
imul
lret
cmc
cmpsl
xchg
pop
xchg
add
jp
arpl
into
pop
int3
cwtl
xchg
les
jns
push
add
xchg
xor
repz
pop
sti
fimuls
or
lret
arpl
fwait
pop
push
inc
rcr
je
inc
jmp
inc
bound
xchg
mov
push
pop
aam
iret
test
xor
sub
xchg
cmpl
mov
bound
inc
sub
pop
call
pop
push
cmp
sarb
pop
add
shll
add
repnz
dec
repnz
lds
cwtl
lds
sbbl
xorb
leave
arpl
xchg
repnz
inc
rorl
fistps
sub
test
das
xchg
inc
pop
in
fisttpll
insb
jae
mov
es
jnp
pop
jo
dec
mov
negl
push
dec
xchg
push
fwait
sbb
out
jmp
test
add
push
ljmp
cltd
or
notl
insb
outsb
stos
mov
dec
mov
mov
out
push
mov
or
nop
icebp
lret
lcall
xchg
pop
cli
dec
mov
ficomps
outsb
loopne
mov
add
add
int3
adc
inc
push
je
xor
mov
and
cmp
cli
lret
gs
inc
push
fdivs
pop
movsl
in
dec
out
jl
push
das
imul
and
mov
sub
scas
pop
data16
hlt
push
daa
icebp
test
cmc
xor
push
adc
bound
or
jle
rep
add
or
inc
or
mov
mov
push
insb
sub
lds
xor
add
in
lret
je
mov
sahf
subl
movb
push
pop
pop
jae
push
inc
sahf
and
shlb
pop
out
xor
andl
lea
jno
sub
shll
jno
mov
arpl
scas
into
dec
xor
jl
clc
je
lods
jmp
or
xor
arpl
or
mov
imul
push
xor
jno
pop
insl
adc
je
or
or
sahf
sahf
in
clc
add
movsb
xorb
es
mov
mov
xchg
mov
pop
ja
sbbb
push
pop
icebp
or
enter
fsubl
pop
gs
inc
push
fdivs
lret
ljmp
dec
enter
and
pop
stc
or
and
cmp
or
jp
pushf
pop
jb
in
shr
out
xchg
inc
dec
out
cs
add
movsb
mov
sub
sbb
cmp
jecxz
dec
int
xor
xchg
cmp
nop
int3
js
rcl
imul
test
in
jecxz
pushl
ret
in
cmp
mov
into
xor
xchg
int3
mov
stos
jb
add
or
push
stos
js
out
fdivp
adc
ja
mov
mov
jne
cmpsl
sbbl
pop
movsl
mov
sbb
in
leave
sbb
test
dec
sahf
scas
lods
push
dec
cli
add
out
pop
xlat
loop
aaa
mov
sbb
inc
jle
cltd
fs
dec
mov
decb
fs
fistpll
mov
int
iret
add
aam
jno
and
xor
pop
shrb
fcoms
jmp
test
push
jg
test
sbb
dec
xor
pop
xchg
jbe
push
push
dec
loope
ljmp
mov
stos
inc
fsubp
cmp
jg
js
ds
addr16
dec
ljmp
inc
repnz
mov
xchg
inc
or
and
fwait
in
pop
scas
mov
xchg
pushf
in
or
imul
into
ljmp
and
gs
adc
push
inc
outsl
mov
add
call
pop
push
popa
ja
dec
out
aad
imul
xchg
pop
fcmove
test
lods
sbb
cmp
fs
stos
push
cmp
sub
jle
inc
sub
jae
cmc
mov
orl
insl
pop
fchs
mov
mov
sub
movsb
mov
mulb
push
mov
or
stos
inc
insb
jg
xor
subl
jbe
lea
add
mov
int
or
movb
jns
shrl
mul
jb
outsb
push
js
xchg
push
ja
xchg
mov
bound
cmp
iret
popa
insl
add
push
outsb
xchg
xchg
adc
pop
cmpsl
and
aad
sub
rorb
mov
fildl
mov
loopne
shll
sarl
insb
adc
push
inc
rcr
in
daa
sub
stos
loope
adc
inc
int
jnp
imul
or
das
dec
add
mov
jmp
fmulp
push
pop
xchg
or
sbb
loope
loopne
jecxz
popa
cmp
lret
pop
pop
rcr
mov
pop
dec
and
pushf
rcll
sub
mov
inc
data16
decb
nop
mov
inc
stos
lret
mov
arpl
xchg
addr16
stos
mov
ljmp
mov
scas
cmp
fisubrs
jmp
repnz
cmp
test
mov
pop
adc
lret
lods
xchg
or
jp
jmp
cmp
mov
into
lock
out
push
jb
cltd
jp
movsl
sub
cmc
push
push
jae
cmp
loope
add
lods
add
jns
adc
frstor
aaa
jbe
jmp
xchg
dec
lds
mov
js
inc
gs
mov
pop
dec
jnp
pushf
outsb
xchg
or
out
xchg
out
sbb
push
rcr
jmp
push
int3
movsl
fildll
mov
daa
stos
repnz
insl
mov
mov
test
and
mov
inc
dec
ja
cwtl
mov
dec
les
mov
xor
es
fiadds
dec
sub
out
mov
jne
int
xchg
mov
pop
pop
enter
adc
xchg
jp
xchg
inc
dec
cmpsl
mov
test
shlb
rcr
outsl
int3
dec
xor
and
loopne
mov
popa
loopne
int
inc
adc
iret
and
mov
in
pusha
lret
pop
nop
out
ret
rcll
push
cmp
and
stc
pmaxub
xchg
pop
or
lcall
loope
pop
jp
das
in
stc
xor
pop
inc
fmull
push
cmc
jno
cmpsl
mov
push
cltd
or
jns
in
and
sbb
pop
cmp
movsl
cmp
push
jmp
cmp
out
push
test
cli
and
sahf
ret
push
mov
loopne
inc
out
adc
data16
sti
jne
pop
rcrl
mov
aam
std
int3
movsb
loop
adc
mov
movsl
in
and
lahf
pop
rorb
push
add
popf
test
sub
and
inc
rcll
jg
into
insl
aaa
xor
outsl
popf
call
jge
stc
adc
xor
lret
and
xchg
xchg
jge
stc
adc
xor
add
mov
fsubs
dec
fcompl
fimull
jbe
and
sbb
mov
lds
fsubl
mov
pop
add
and
adc
or
sbb
add
xchg
adc
je
push
andb
shrl
inc
lret
movsb
push
or
adc
mov
hlt
das
es
fstpl
fwait
orb
fnstsw
test
test
cwtl
ljmp
arpl
rcrb
push
push
dec
jmp
add
and
fsubs
stos
jecxz
cmp
adc
mov
sub
adc
xlat
fimull
movsb
dec
loope
addr16
fistpll
les
stc
iret
mov
sbb
mov
test
dec
inc
xor
ftst
scas
sete
add
scas
pop
mov
fs
rorl
dec
ds
xlat
insl
addr16
sbb
or
pop
adc
out
xlat
or
mov
outsl
push
mov
jle
fcmove
lahf
orl
test
cmp
shll
cmp
cmc
cmpsb
sub
subb
arpl
xchg
call
and
mov
inc
inc
std
fidivrs
incl
xchg
dec
dec
sti
jmp
dec
push
mov
fs
pop
out
adcb
pop
jno
adc
imul
sub
mov
sub
inc
sti
lock
test
push
in
imul
mov
jb
sub
ja
sbb
cmp
mov
addb
icebp
iret
jae
or
pop
lock
xor
pop
jge
mov
or
outsb
cli
decl
xchg
cmp
clc
jns
mov
jno
das
adc
repz
sub
push
mov
mov
pop
stos
adc
dec
data16
dec
dec
mov
call
clc
jb
sahf
dec
jb
test
push
mov
stos
push
adc
lcall
out
out
stc
stos
arpl
pop
push
in
mov
add
mov
jl
inc
enter
loop
lds
mov
mov
pop
lea
out
push
mov
out
cld
or
inc
testb
pop
sbb
or
fadds
xchg
or
xchg
dec
ret
and
jmp
mov
mov
xchg
mov
mov
dec
fisttpl
mov
mov
dec
out
jle
mov
out
insl
int3
push
cmpb
andl
ss
ss
dec
push
repz
int3
loop
cmp
cmp
jl
lahf
fidivl
call
or
enter
add
ljmp
pop
fsub
test
mov
push
ret
js
cmpsb
test
popa
dec
test
add
es
mov
sahf
movsl
std
sbb
in
push
lea
data16
push
loop
or
sbb
ja
mov
dec
lods
mov
les
stc
daa
push
pusha
adc
jecxz
mov
mov
mov
push
adc
and
pop
adc
adc
std
add
adc
xchg
xor
rorl
inc
dec
arpl
in
dec
mov
mov
mov
hlt
push
xchg
sub
pushf
xchg
mov
mov
mov
dec
cmpsl
push
push
insl
add
mov
sbb
and
mov
lds
mov
test
lcall
adc
sbb
out
and
je
in
les
sbb
aas
pusha
sbb
leave
pop
push
cltd
test
paddsb
add
pop
movsb
cli
push
push
jo
inc
mov
cltd
inc
and
imul
jb
or
test
cmp
or
pop
pop
mov
xor
in
mov
push
or
xchg
data16
add
jecxz
dec
and
dec
mov
xchg
mov
or
mov
fcmovnu
mov
fs
ja
dec
insl
sub
mov
repz
scas
into
mov
jno
cli
cmp
sarl
imul
ljmp
jp
mov
sarl
dec
push
out
xchg
xchg
lds
mov
popa
loopne
int
fstpl
sub
insb
rclb
adc
in
rcll
adc
inc
and
repnz
xor
push
xor
leave
pusha
inc
pop
test
jmp
pop
pop
cmp
xchg
push
ss
pusha
jo
outsl
jl
mov
sbbb
fdivrl
mov
decl
adc
dec
and
dec
mov
mov
repz
std
pop
xchg
pop
add
sahf
fs
cmp
xorl
ret
add
push
lds
xchg
nop
mov
or
jns
sbb
fmull
bound
xchg
imul
imul
inc
jo
fiadds
adc
insl
mov
fcoms
push
insl
scas
into
dec
push
mov
lds
xchg
cwtl
dec
jo
fs
push
jno
sbb
sub
cmp
or
push
addr16
lds
out
mov
bound
mov
es
adc
adc
dec
mov
je
hlt
aaa
sbb
cmpsb
xchg
rorl
pushf
ljmp
loope
add
or
xor
or
cmp
scas
inc
rorb
lds
fcomps
insl
cli
fildl
rolb
inc
outsl
sbb
mov
jno
mov
push
icebp
stos
dec
mov
pop
movsl
cmp
fwait
pusha
insl
wrmsr
cltd
xchg
sbbl
dec
lock
xor
xchg
jle
aad
popa
mov
pop
clc
adc
adc
mov
jp
sub
sti
mov
pop
imul
push
pop
fistpll
mov
mov
insb
sti
test
add
mov
or
movsb
lcall
sub
repnz
stos
icebp
xor
lock
or
jne
cli
loop
adc
lcall
cld
shll
test
js
insl
bnd
pushf
adc
mov
enter
add
lods
pop
pushf
pop
aad
and
xor
aad
mov
imul
jl
mov
sarb
mov
mov
mov
jb
out
mov
pop
xchg
xchg
jae
mov
jmp
lods
sbb
fnstcw
aad
mov
insb
sti
test
into
fs
popf
pop
cmp
dec
sub
imul
gs
push
jae
andl
ficoml
push
xchg
nop
adc
add
loop
cmp
xchg
pop
aaa
lock
or
stc
fwait
js
scas
push
mov
push
jns
shll
ret
fisttpll
cmpb
mov
arpl
stos
sbb
inc
in
shll
aaa
shrb
push
xor
fwait
mov
and
je
dec
cmovno
rorb
lret
xlat
inc
into
mov
fdivs
daa
mov
cmc
in
ds
ja
ss
stos
inc
inc
ja
in
xchg
jecxz
aas
mov
into
mov
in
cwtl
add
dec
and
dec
jo
lret
cwtl
fs
xchg
xchg
inc
jns
xor
jns
dec
into
mov
in
cwtl
add
dec
jp
fcompl
std
mov
dec
dec
jbe
mov
mov
inc
sbb
rorb
inc
clc
insl
aas
imul
cmp
mov
and
loope
sbb
xlat
and
in
shll
inc
push
xchg
mov
pop
mov
pop
sub
adc
movsb
shlb
jae
lods
movsb
je
and
loop
in
test
dec
xchg
mov
and
and
popf
in
mov
enter
mov
cs
xchg
mov
lret
and
add
adc
or
inc
pop
andb
loope
dec
push
icebp
in
loopne
fucomip
or
filds
jo
cld
fstpl
jmp
cmpsb
sbb
idivb
scas
xor
aas
jbe
test
xchg
fdivrs
mov
ds
sbb
sub
aad
mov
jns
xchg
imul
outsb
cltd
fistpll
xor
add
out
sub
lock
clc
dec
cmpsl
sbb
insl
in
mov
cmp
loopne
fucomip
or
filds
jo
cld
push
mov
jns
inc
popf
addr16
bound
mov
cmc
inc
lds
or
xor
xchg
cmp
jge
jl
xchg
loop
addr16
insl
add
inc
stos
in
sbb
paddq
fdivrl
stos
lock
dec
lahf
jbe
xor
lahf
pop
addr16
sbb
pop
or
sahf
jns
jp
xor
push
fnsave
js
shll
mov
sti
xor
sar
mov
inc
xor
sub
xlat
shl
test
fs
imul
xchg
add
push
or
push
sarl
inc
or
pop
fisttpl
sbb
lods
lahf
fwait
scas
mov
dec
xchg
xchg
data16
fistps
outsl
sahf
lods
add
adc
aaa
push
movsb
shll
nop
fsubrs
gs
or
mov
inc
xchg
rcrb
jge
or
pop
in
lcall
addr16
dec
cmpsb
subb
pop
push
stos
test
and
cmp
loopne
dec
out
adc
xchg
add
lahf
mov
mov
popw
push
ret
cli
mov
lods
icebp
mov
pop
test
push
scas
add
stos
pop
dec
test
push
test
cmp
add
inc
ficomps
iret
adc
nop
pusha
rorl
int
and
pop
mov
xchg
inc
popf
lret
cmc
pop
icebp
jns
cmp
or
pop
es
aam
jg
xorl
fwait
jl
add
cmp
in
rcl
dec
enter
sub
fistpll
cmp
adc
mov
js
mov
push
mov
sahf
mov
cmc
mov
xchg
mov
jge
mov
and
sahf
push
mov
out
cwtl
lock
daa
jge
pop
stos
dec
sbb
jbe
ja
and
jge
push
fistpl
add
and
xchg
jae
insl
push
outsl
pusha
jmp
push
out
mov
int3
cwtl
push
mov
cmpb
test
mov
rcrb
dec
testb
imul
lock
dec
jmp
arpl
les
sbb
aaa
mov
out
ja
pop
pop
lcall
ja
int3
loop
aad
push
push
xchg
std
push
les
ja
sahf
xor
mov
pop
dec
hlt
xchg
mov
pop
mov
arpl
mov
jno
mov
mov
jl
push
pop
dec
in
es
jbe
lods
je
pushf
jnp
out
push
mov
xchg
std
dec
cmp
mov
dec
cltd
mov
js
scas
sub
mov
pop
dec
lcall
add
push
jo
mov
add
ljmp
xor
fwait
lcall
popf
inc
pushf
mov
fs
mov
dec
mov
loopne
outsb
imul
inc
jg
scas
test
ret
sbbb
mull
adc
ror
xchg
push
or
insl
call
ja
sbb
into
pop
imul
es
mov
mov
lret
repz
jmp
or
sbb
ss
repz
push
test
adc
test
add
ja
pushf
or
test
cld
enter
jno
mov
fdivp
pop
out
push
sub
jg
rclb
push
les
inc
lods
xor
mov
inc
cmp
mov
stos
shrl
push
push
les
inc
lods
xor
rcll
ja
adc
push
in
add
pop
daa
pop
xchg
xor
outsl
incb
ficompl
push
call
aad
insb
call
shrl
fdivrs
hlt
addr16
xor
push
lcall
mov
or
mov
dec
jmp
and
xchg
dec
or
iret
enter
xchg
push
fldenv
push
popa
add
cli
mov
fisubrs
or
sarb
sbb
dec
mov
fisubs
imul
push
scas
adc
inc
sbb
jmp
inc
ret
xchg
fildl
jne
mov
or
jp
sbb
pop
les
push
sub
push
mov
movsb
add
dec
ficomps
out
mov
sub
in
adc
jb
imulb
jb
test
shl
int
push
xor
jbe
loope
aas
push
dec
enter
cmp
pushf
scas
sub
sti
mov
xchg
cmpsb
add
movsb
jg
cli
mov
push
loopne
mov
es
mov
mov
shlb
xchg
jo
mov
mov
pop
lods
fcmovb
xchg
shr
push
and
int3
fisttpl
pop
xor
lahf
aas
js
cmp
push
stc
jmp
mov
push
fmuls
pop
and
mov
outsl
sub
sar
mov
sub
jmp
dec
insl
or
lods
cld
cmpl
les
mov
inc
movsb
and
cmp
jae
pop
xor
cmp
aas
jge
aam
mov
cld
je
imul
mov
dec
jp
add
les
jno
es
js
xchg
mov
dec
adcb
sub
push
idiv
adc
js
adc
mov
call
aad
sub
mov
pushf
xor
notl
pop
xchg
mov
jmp
mov
jg
repz
adc
adc
pop
lret
xchg
fildll
add
out
repz
jg
jno
ljmp
leave
fdivrl
mov
push
idiv
adc
cmp
mov
cltd
ret
mov
dec
in
call
fsubr
por
xchg
lret
inc
mov
and
or
pop
lds
incl
lea
ret
stc
roll
and
mov
jp
dec
aas
inc
cmp
push
push
sti
push
sbb
sar
sbb
fisubrl
aaa
pop
adc
leave
ret
cmp
inc
mov
cmp
bswap
idiv
mov
mov
jmp
dec
jnp
das
inc
stc
inc
sub
das
lcall
xchg
push
cmp
scas
stos
or
cli
fcmovu
sub
sarl
nop
cmpsb
pushf
add
cmp
pushf
sbb
mov
je
pop
push
stos
lret
dec
mov
adc
xor
lods
xor
mov
or
in
insl
imul
les
and
mov
mov
and
lds
push
ljmp
repnz
lods
fbstp
jle
int3
pop
xor
adc
add
fs
xchg
mov
divl
or
stc
outsb
xor
nop
cmpsb
pushf
iret
sbb
sahf
lock
orb
jb
cmp
mov
mov
repnz
aam
les
lahf
scas
shll
jns
mov
rcll
test
idivl
dec
xchg
outsb
loop
dec
mov
xor
loopne
and
push
cmp
lahf
jmp
sbb
push
or
imul
xchg
cmp
imul
imul
dec
jp
mov
cmp
xchg
out
repz
cmc
mov
icebp
add
push
pop
test
imul
push
addr16
ret
stos
add
dec
jns
sub
int3
imul
iret
data16
push
xor
or
inc
xor
sbbl
daa
mov
test
add
adc
pop
test
insl
cmp
out
stos
adc
int
xchg
loop
cltd
cmpsb
mov
pop
cwtl
mov
loop
cmpsl
imul
pop
jnp
mov
inc
dec
jle
out
xchg
mov
jo
or
mov
loopne
incb
add
dec
inc
add
insl
les
lock
mov
hlt
cmpsl
lods
ror
leave
sub
jbe
xor
xchg
and
push
jne
mov
loopne
dec
lods
rclb
sbb
call
sbb
nop
inc
js
or
mov
std
mov
xchg
xchg
or
call
movsb
xor
push
scas
adc
lret
mov
or
popa
xchg
add
rcrl
sarb
and
shl
imul
xor
cli
bound
dec
es
cmpsb
cmp
sbb
inc
xchg
cmp
jo
icebp
mov
push
mov
imul
xchg
xchg
sbb
scas
std
jb
inc
ds
sbb
mov
push
inc
jecxz
adc
sbb
inc
in
xchg
sub
mov
bnd
sbb
test
xchg
mov
jnp
gs
xchg
and
sbb
mov
push
fldcw
insl
insb
fs
loopne
lock
enter
push
pop
mov
loop
inc
xchg
pushf
push
lret
mov
roll
fwait
lock
enter
fstl
and
gs
xchg
int
pop
aad
ljmp
rol
inc
popf
imul
aaa
bound
sub
inc
xor
mov
pop
xchg
mov
fbld
xchg
add
mov
pop
sub
hlt
mov
gs
add
push
ljmp
aaa
cmp
jmp
sub
inc
call
ficoml
push
jp
push
push
cmp
and
daa
leave
in
adc
pop
xor
je
mov
aas
cmc
jg
jno
loopne
scas
ljmp
jnp,pn
pop
jmp
out
push
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
insl
jp
xchg
sbb
dec
add
mov
mov
mov
jl
cmc
cmc
pop
pusha
cmpsb
xor
rcrl
into
shrb
testl
xor
scas
sbb
repnz
out
call
ret
in
pop
mov
xlat
out
push
lods
and
adc
leave
push
xor
mov
stc
ja
or
clc
jge
mov
adc
aam
stos
imul
addr16
jecxz
xchg
lret
pop
jg
jne
mov
push
lods
and
adc
ds
jle
pop
push
lods
add
mov
push
lods
and
adc
push
cltd
pop
add
add
adc
mov
mov
out
push
lods
and
adc
iret
imul
test
and
adc
arpl
cs
cmp
push
adc
movsb
push
adc
cmp
mov
push
push
ret
shrl
popa
mov
fcomps
dec
sub
lock
int3
mov
stos
lods
sarb
movsb
fldenv
loop
inc
push
add
sbb
push
xchg
notl
cmp
xchg
sbb
adc
mov
imul
lock
hlt
add
lds
movb
dec
fisubs
or
xor
sub
fcompl
imul
push
xlat
incb
xlat
jl
inc
sub
jle
mov
and
mov
pop
ds
faddl
push
jb
inc
sahf
mov
aaa
sahf
cmp
jmp
shlb
jge
push
bound
or
test
inc
inc
lods
mov
mov
push
and
das
icebp
fbstp
lret
xchg
or
std
fcompl
enter
insb
cli
xchg
and
adc
push
xchg
loop
pop
xchg
add
call
xchg
gs
clc
daa
inc
pop
pusha
mov
xlat
jg
push
mov
add
rorb
fbstp
inc
stos
inc
xor
xor
cmpsb
adcl
cmp
mov
test
cmp
jg
mov
lea
mov
xchg
mov
or
pop
in
insb
cmp
test
test
sbb
mov
inc
sub
aas
dec
iret
inc
cli
jno
mov
push
hlt
xchg
cmp
out
adc
cmpsl
push
pusha
ss
ljmp
pop
fisubrl
add
out
in
pop
cmp
ljmp
mov
sahf
push
cmp
adc
nop
aam
imul
mov
stos
mov
mov
adcl
out
and
inc
pop
mov
rorb
ret
sub
bnd
push
popf
add
push
cs
outsb
rcl
mov
stos
stos
stc
pop
fidivl
repnz
jnp
sub
pop
jle
mov
sub
pop
cmp
repz
fwait
lret
inc
dec
aam
and
dec
add
in
xchg
push
and
mov
outsb
push
sbb
sbb
popa
out
mov
sub
add
inc
sub
mov
movsl
push
xlat
out
push
lods
and
adc
lods
and
adc
mov
out
push
lods
and
adc
or
xor
xlat
out
push
lods
and
adc
mov
out
push
lods
and
adc
sub
or
out
push
lods
and
adc
inc
data16
xlat
out
push
lods
and
adc
aaa
add
aas
xlat
out
push
lods
and
adc
inc
inc
inc
stos
xlat
out
push
lods
and
adc
mov
addr16
out
push
lods
and
adc
popf
jmp
xlat
out
push
lods
and
adc
push
xchg
or
xlat
out
push
lods
and
adc
data16
xlat
out
push
lods
and
adc
lret
dec
imul
and
adc
notb
cli
icebp
xlat
out
push
lods
and
adc
add
mov
push
lods
and
adc
pop
in
jb
xlat
out
push
lods
and
adc
inc
popa
loopne
xlat
out
push
lods
and
adc
xor
orps
out
push
lods
and
adc
test
cwtl
xchg
xlat
out
push
lods
and
adc
jns
sbb
out
push
lods
and
adc
or
xlat
out
push
lods
and
adc
cmp
jnp
xlat
out
push
lods
and
adc
mov
out
push
lods
and
adc
js
fs
out
push
lods
and
adc
sahf
sbb
lods
and
adc
call
inc
xlat
out
push
lods
and
adc
in
mov
push
lods
and
adc
mov
add
xlat
out
push
lods
and
adc
aam
jo
xlat
out
push
lods
and
adc
push
out
push
lods
and
adc
push
inc
les
lods
and
adc
shrl
sti
inc
xlat
out
push
lods
and
adc
shlb
loopne
out
push
lods
and
adc
adcl
push
lods
and
adc
arpl
out
xlat
out
push
lods
and
adc
lods
push
push
push
lods
and
adc
sbb
test
push
lods
and
adc
sub
out
push
lods
and
adc
dec
lret
aas
jmp
lods
and
adc
scas
mov
push
lods
and
adc
cli
xlat
and
lods
and
adc
inc
lcall
lods
and
adc
pusha
mov
push
lods
and
adc
xor
adc
xlat
out
push
lods
and
adc
mov
rcrl
lods
and
adc
shrl
inc
xlat
out
push
lods
and
adc
jge
cmp
out
push
lods
and
adc
lods
fiadds
xlat
out
push
lods
and
adc
fldenv
mov
push
lods
and
adc
insl
jle
xlat
out
push
lods
and
adc
add
xlat
out
push
lods
and
adc
clc
pushf
cld
sbb
lods
and
adc
cmpsl
pop
popa
mov
lods
and
adc
pop
sbb
xlat
out
push
lods
and
adc
mov
out
push
lods
and
adc
imul
pop
xlat
out
push
lods
and
adc
jmp
out
push
lods
and
adc
popa
jle
arpl
out
push
lods
and
adc
sbb
pop
xlat
out
push
lods
and
adc
jl
push
in
xlat
out
push
lods
and
adc
ret
rcl
out
push
lods
and
adc
test
push
lods
and
adc
dec
lcall
lods
and
adc
fdivrs
sub
jp
lods
cmp
adc
sbb
mov
add
mov
jl
jns
icebp
cmp
outsb
dec
arpl
loop
mov
sub
rcrl
loope
xlat
popa
mov
push
dec
fiadds
stc
repnz
sub
loop
pop
mov
mov
lea
dec
pop
jp
inc
and
push
sub
push
mov
jge
repnz
nop
jo
sbb
rcrb
cs
out
das
outsl
sub
ss
inc
leave
cmp
sbb
insb
jo
jbe
out
push
lods
and
adc
lods
and
adc
int3
mov
cmpsb
mov
ret
outsl
pop
popa
and
call
aaa
inc
push
cmc
dec
in
cli
cld
into
lahf
adc
push
fcomip
popf
insl
add
mov
pop
xorl
jmp
cmpsb
push
or
push
and
xchg
push
mov
or
push
push
sbb
clc
scas
nop
ss
fwait
adc
imul
inc
pushf
inc
and
cmp
jne
jp
cmc
jno
faddl
fisubl
xchg
or
adc
pop
cmp
jl
mov
out
xchg
les
xchg
mov
cld
shll
scas
pop
cltd
and
lds
jno
pop
push
mov
jecxz
in
jns
dec
push
stos
mov
xor
mov
bound
leave
add
or
icebp
mov
or
or
stc
repz
xchg
fcoml
sub
pop
dec
mov
dec
std
mov
pop
dec
jns
popa
clc
pop
jne
cmpsb
pusha
or
xchg
sahf
sbb
mov
nop
push
inc
adc
jb
dec
icebp
or
cmpsb
std
push
icebp
insb
insl
xchg
fimull
imul
movb
mov
aam
mov
addl
lds
and
xor
xor
int3
pop
ret
xchg
push
or
mov
jbe
sub
sub
pop
jbe
mov
imul
and
pop
xchg
test
xlat
aaa
or
les
or
fwait
pop
add
jb
daa
orl
inc
add
ljmp
shrl
dec
sbb
dec
push
hlt
and
jbe
push
testl
outsb
xchg
sbb
cmp
fldt
jmp
bound
mov
leave
adc
dec
xchg
sarb
stos
aad
jl
xor
pop
test
ss
pop
andl
sti
cmp
and
lea
clc
decl
cwtl
insb
in
lea
popa
dec
dec
push
ret
shlb
inc
in
add
dec
insl
mov
sub
or
and
or
imul
cmp
mov
push
or
add
adc
and
and
fnstenv
mov
in
push
xchg
adc
push
adc
sbb
dec
ret
jg
out
clc
mov
adc
push
mov
movsb
add
push
sbbl
into
jg
push
popa
cmp
xchg
jnp
sub
dec
dec
cmc
cmp
rorl
pop
bound
mov
fsubrs
scas
lock
test
and
clc
cmpsb
scas
mov
push
mov
ljmp
cli
or
add
dec
bound
add
dec
aas
adc
sbb
pop
popa
mov
pop
or
adc
pop
dec
xor
push
sub
adc
mov
pop
dec
xlat
fdivl
xchg
ret
imul
push
mov
push
pop
fdivrp
xchg
mov
in
arpl
inc
xchg
dec
roll
cmp
cli
movsb
mov
xchg
fcmovbe
and
in
xorb
shlb
or
cmp
adc
xchg
mov
pop
push
scas
mov
iret
push
dec
adc
lret
sbb
xchg
jmp
cmc
movsb
mov
fs
xor
in
int
mov
jp
push
mov
mov
jle
xlat
lds
dec
jbe
andl
adc
sbb
out
out
add
out
mov
xchg
sub
pop
nop
dec
cwtl
addr16
xchg
lds
loopne
jb
test
dec
mov
pop
push
lret
dec
and
rorb
sahf
and
ss
ja
dec
or
and
add
decl
loop
ja
mov
add
js
jp
push
xlat
je
leave
pop
add
pop
ret
out
push
ja
mov
push
pop
dec
inc
aaa
push
cwtl
sbbl
xor
mov
dec
movsbw
pop
lds
sarb
mov
sub
sbb
and
lea
add
dec
aas
inc
add
arpl
pop
das
push
pusha
and
daa
in
or
rcll
cld
push
rolb
lock
out
xor
lret
jne
mov
cmpsb
xchg
fld
xchg
mov
xor
pop
mov
sbb
push
pop
cmp
mov
outsb
jo
and
mov
icebp
pop
ficomps
pushf
pop
mov
addr16
pop
inc
push
mov
pop
inc
jno
aad
repnz
xor
jmp
outsl
test
leave
push
xor
add
adc
dec
in
jge
rorl
sbb
insl
fwait
adc
lret
jl
ficompl
stc
sbbl
mov
xor
cmpsl
xchg
mov
pop
aas
add
sub
cmp
sub
aam
adc
in
adc
mov
or
testl
call
inc
movsl
scas
xorb
add
addb
xchg
scas
loope
ljmp
cmc
or
dec
jnp
into
push
mov
sar
aaa
sbb
dec
adc
cmpb
enter
in
xor
cli
sub
shl
pop
fs
scas
rcr
mov
repz
out
stos
fwait
ljmp
adc
xchg
je
and
mov
pop
es
outsl
lods
pop
jmp
mov
loopne
sbb
mov
jecxz
mov
push
imul
cmp
jb
mov
adc
inc
std
adc
push
sub
out
mov
mov
nop
jmp
pop
mov
dec
gs
insb
adc
pop
dec
movsl
lcall
mov
mov
lcall
popa
ljmp
sub
out
int
lcall
in
cwtl
fbld
loop
ljmp
fs
adc
je
push
stc
mov
insb
add
pop
ret
icebp
sti
jno
mov
or
fwait
sub
jge
sub
jmp
imul
sub
push
test
andb
add
sub
pop
jo
push
cld
jnp
mov
or
mov
icebp
in
and
ja
sub
hlt
adc
push
adc
repnz
out
inc
stos
jne
and
into
lock
sub
mov
outsl
sub
mov
and
loop
into
dec
inc
or
inc
xor
jb
cmpsb
scas
sub
mov
fidivl
nop
inc
xor
and
pop
outsl
pop
les
adc
push
mov
loope
fs
dec
mov
push
xlat
pop
add
cli
aas
loop
fwait
push
sub
stc
ljmp
fdivr
std
xor
or
andb
inc
cmp
or
cmc
filds
xchg
loopne
lock
dec
aaa
xor
cmovbe
jae
cmp
leave
mov
inc
nop
into
loope
aas
sbb
add
sub
pop
dec
push
testb
and
cmp
sbb
mov
and
mov
mov
dec
jo
aas
mov
sbb
aaa
cmpb
insb
and
push
aad
sub
xchg
mov
popa
les
xchg
insl
mov
and
xchg
adc
int3
dec
andb
stos
dec
mov
fadd
dec
dec
inc
jl
push
pop
push
jae
mov
dec
xchg
test
jo
mov
lods
xchg
cli
notb
mov
dec
pop
sbb
dec
cmp
ret
loop
or
sbb
cmp
fwait
adc
or
insl
iret
and
pushf
in
pop
dec
jp
and
push
lcall
jg
addr16
ss
pop
cmp
adc
or
dec
pop
jle
lret
add
dec
xchg
lret
adc
sub
push
fimull
jae
dec
push
fsub
outsb
push
mov
test
mov
pop
in
test
and
sbb
insb
into
test
inc
push
int
mov
mov
pop
adc
jb
or
push
stos
adc
fwait
rcrb
push
cmp
push
add
scas
rolb
mov
iret
sub
std
adc
aas
xchg
pusha
sub
adc
insb
mov
loop
mov
dec
jo
xor
mov
dec
pushf
cmpsb
pop
ds
sti
lds
shlb
xor
icebp
in
xchg
insl
or
push
sbb
in
gs
daa
fs
xlat
sub
mov
sub
arpl
js
arpl
insl
cmp
inc
pop
insl
into
cmp
cmp
movsb
or
daa
pusha
subl
sbb
pop
repz
adc
lods
mov
push
jnp
icebp
ret
in
outsb
pop
lods
and
mov
testl
in
adc
adc
xchg
push
or
out
insb
mov
and
pop
aas
inc
mov
pop
sub
xlat
lds
int3
repz
fwait
cmp
mov
jns
inc
mov
stc
xor
inc
jae
std
mov
push
xor
nop
dec
push
in
adc
jmp
jmp
movsb
mov
lods
xchg
xchg
dec
out
lods
ret
sti
fcomip
jne
xchg
sub
lahf
jecxz
cmp
pop
cmpsb
cmp
mov
mov
pop
shlb
cld
loope
aad
cmp
jne
pop
les
push
ret
mov
ficomps
cmp
cs
cld
add
add
ds
sbb
xlat
lds
mov
add
pop
inc
lahf
lods
cmpsb
ljmp
xlat
fsubrl
push
dec
xchg
mov
mov
adcb
pop
cld
and
rorb
aad
rcll
mov
sub
popa
xchg
loop
mov
dec
adc
mov
bound
pusha
add
stos
sub
movsb
out
rorb
push
mov
lea
in
sti
sbb
fcoml
adc
sbbl
and
inc
mov
loope
pandn
daa
scas
adc
mov
adc
cmp
push
and
push
gs
nop
hlt
sbb
popa
mov
aad
and
adc
or
or
js
jb
push
cmp
jge
mov
mov
xchg
pushf
fstl
icebp
nop
pop
push
and
adc
inc
imul
inc
sbb
add
std
push
dec
cmp
mov
pusha
stos
movsl
int
sbb
ss
mov
mov
push
pop
mov
sbb
dec
sbb
loop
sarl
sbb
hlt
nop
mov
jnp
les
sbb
test
or
dec
rcll
aas
pop
into
insb
mov
add
jbe
adc
sub
cwtl
xchg
xor
jecxz
and
pop
sbb
xchg
dec
mov
push
insl
push
icebp
shlb
cmpsb
push
cmp
sub
or
sbb
jb
movsb
enter
xlat
add
xchg
or
xor
fsubrs
ret
mov
xchg
mov
les
in
mov
jge
push
jmp
xchg
cld
scas
idiv
and
fmuls
mov
inc
push
xchg
mov
mov
fstpt
pop
push
fwait
and
pushf
int3
outsb
xor
nop
push
subl
jle
loopne
pop
pop
js
mov
xchg
into
add
test
int3
fnstcw
xchg
repz
push
add
xor
inc
pop
mov
outsl
inc
sbb
insl
into
xchg
test
sub
sbb
jns
jnp
dec
repnz
push
sbb
aas
jmp
sbb
sbb
pop
xor
stc
mov
cmp
jecxz
outsl
fidivrs
ror
xchg
pop
sub
ds
sub
dec
call
rolb
test
sub
pop
sarb
inc
jecxz
ds
jg
sysret
jae
jge
sub
mov
dec
imul
or
push
cli
pushl
push
add
push
leave
xchg
ror
mov
xchg
adc
in
scas
or
jne
xor
clc
mov
xchg
aad
inc
std
ljmp
cmp
sub
nop
sbb
xchg
adc
mov
notl
inc
fwait
icebp
gs
negb
lcall
repz
add
cltd
in
add
cmp
cmp
movsl
jecxz
ja
cmp
scas
sbb
mov
sbb
ja
mov
mov
xchg
cs
mov
xlat
inc
inc
adc
xchg
rcrl
inc
sbb
jle
fcmove
test
addr16
cmp
xor
adc
add
out
xor
aaa
hlt
pop
pop
iret
cmp
adcb
push
jbe
cmc
scas
dec
pop
mov
dec
shl
cmp
inc
gs
lock
out
into
daa
adc
push
cs
mov
loope
push
aad
pop
cmc
mov
stos
js
inc
lods
loope
rcl
into
cs
dec
cmp
cwtl
adc
push
pop
outsb
fnstsw
cli
nop
jge
fisttpll
cmp
dec
sub
jg
and
orb
inc
arpl
mov
or
jmp
int3
test
jmp
outsl
inc
push
mov
fdivrs
xchg
pop
jnp
push
mov
xchg
cmpsl
gs
sbb
in
imul
xor
cmp
mov
jns
push
mov
and
lret
mov
push
fwait
lds
mov
test
sarb
adc
inc
push
addl
imul
clc
adc
push
dec
pop
push
aaa
addl
jp
int3
repnz
stos
ja
fwait
fwait
cmc
push
repz
jg
dec
sub
cmp
push
daa
out
cwtl
orl
repnz
movsb
jmp
jno
mov
jmp
or
icebp
leave
iret
insb
lret
mov
fstl
and
dec
or
out
insl
mov
or
addr16
andb
gs
adc
test
sub
and
imul
rolb
loopne
rorl
pop
test
jecxz
xchg
push
orb
dec
mov
push
push
test
fcmovne
loopne
push
sub
push
insl
dec
fldt
ljmp
idivb
outsl
cmp
ret
aam
add
dec
stos
cmp
jecxz
lods
push
mov
das
movsb
pop
testb
es
in
sub
mov
fmull
add
sahf
lock
mov
add
ja
inc
cmp
shll
sub
mov
rcl
push
or
ja
ds
cmpsl
int3
and
ja
pop
xor
pop
repz
rolb
rcrb
lods
push
popa
dec
mov
pop
out
xchg
cmp
addr16
mov
cmp
js
fldl
inc
or
loopne
mov
sbb
inc
mov
incb
cs
shrl
add
inc
pusha
jne
scas
and
aaa
dec
push
addr16
cmpsb
aas
push
or
cmp
cmp
rcrl
mov
loopne
adc
lods
addr16
cltd
mov
and
sti
in
ss
aad
or
daa
roll
test
pop
or
cmpsb
push
mov
jecxz
mov
or
out
sbb
xchg
inc
mov
mov
fidivrl
dec
repnz
lock
mov
inc
jp
or
hlt
sahf
or
mov
jle
mov
or
inc
inc
dec
xor
mov
pop
stos
ja
lock
pop
pop
xchg
popl
pop
movsl
outsb
mov
jle
int
dec
leave
adc
roll
push
lock
ss
pop
gs
insb
xchg
insb
jbe
nop
fcmovnb
pop
enter
lds
or
mov
mov
jge
push
cli
inc
dec
fdiv
pop
jbe
fcomps
and
scas
popf
mov
push
cld
inc
mov
popa
add
jecxz
or
movsl
lds
out
sub
mov
jns
out
dec
jae
cmp
mov
insb
jae
repz
outsl
fsubp
lret
aas
negl
xchg
lods
add
fcmovne
sub
es
jno
std
mov
dec
out
lea
sbb
sub
loop
inc
in
xor
mov
sbb
adc
push
loope
or
mov
iret
mov
mov
and
jl
jae
add
ror
test
daa
in
in
and
mov
sarl
push
scas
dec
inc
push
xchg
dec
inc
loopne
out
lds
sti
jmp
pop
sub
jb
push
lds
jmp
mov
rcl
dec
xchg
dec
movsb
in
lcall
adc
stos
loopne
jg
jmp
jno
and
pusha
sub
mov
lods
aad
xchg
mov
lahf
xchg
frstor
ret
pop
and
jbe
dec
and
mov
push
lods
jbe
or
je
loope
mov
mov
std
mov
lock
out
mov
leave
sub
jp
jg
jno
push
sbb
inc
jb
pop
cmp
aam
dec
shlb
inc
lret
xor
sbb
test
ret
jl
inc
fdivr
lods
push
jo,pn
sbb
hlt
pop
xchg
push
mov
dec
icebp
and
inc
aas
push
dec
xor
lcall
mov
xlat
add
sarb
pop
insl
out
outsl
fldcw
cli
notb
cmp
mov
xor
adc
cwtl
lret
clc
test
rcrb
loope
jnp
add
cmp
scas
xchg
es
pop
stc
pop
test
icebp
xor
gs
cmc
push
push
pop
repnz
into
inc
ret
mov
push
aas
jbe
loope
fsubrl
lcall
lock
cltd
scas
cmp
add
inc
sub
enter
mov
clc
fisubl
cltd
xor
push
mov
or
xor
loope
add
xor
xchg
in
mov
std
lret
lcall
data16
sub
sqrtps
shlb
loop
pop
outsb
mov
add
xor
mov
mov
push
mov
dec
ret
and
clc
cmp
daa
ja
jo
pop
push
lret
in
movsb
xor
roll
lcall
dec
repnz
xchg
leave
dec
jno
mov
bound
in
call
sbb
push
sbb
stos
push
pop
icebp
repnz
test
fstpl
lcall
aaa
test
enter
ja
ss
mov
push
nop
test
or
ficomps
shlb
and
jb
into
lcall
push
hlt
jl
repz
cmc
testb
xchg
jecxz
cmp
clc
jl
push
sub
jae
xor
mov
std
pop
sub
addl
mov
or
pop
pop
sbb
jmp
fs
add
jmp
incb
push
ret
push
lds
cmp
xchg
pop
add
movsl
ret
pushf
aam
xchg
cltd
movsl
in
mov
cwtl
in
call
pop
arpl
outsb
ds
ret
cmp
cmp
push
rcrb
sub
addr16
ret
ret
pop
mov
jne
pop
xchg
lret
sbb
or
shlb
js
fucompp
push
cmpsl
inc
mov
mov
repz
dec
pop
scas
pushf
in
mov
sar
andl
decb
sahf
inc
sub
pop
fwait
cwtl
sbb
or
std
sub
dec
cltd
movsl
bound
fcoml
xor
pop
push
and
std
enter
mov
pushf
xor
mov
mov
mov
and
push
popf
cmpsl
stos
mov
push
dec
arpl
push
mov
jg
push
std
shlb
dec
mov
xor
testl
and
dec
test
or
inc
sub
sub
xor
cltd
push
mov
dec
aas
pop
dec
pop
roll
out
adc
out
dec
xchg
dec
push
insl
sub
scas
and
xor
fsqrt
nop
push
test
in
out
xor
mov
sub
jo
outsl
cmp
pop
loop
mov
and
sub
addr16
jmp
neg
xor
sub
jmp
sbb
mov
mov
fucompp
out
cli
or
inc
fsub
hlt
repnz
je
sub
cs
outsl
cmp
jo
xchg
xor
inc
hlt
ljmp
clc
int
imul
inc
data16
test
cmp
sarl
frstor
inc
test
fists
sub
sub
jp
popf
dec
ret
dec
rcl
popa
mull
lret
test
mov
sbb
cmp
ret
sbb
test
adc
mov
push
clc
mov
or
test
mov
mov
call
pop
push
mov
pop
iret
mov
push
pop
lret
aam
sub
arpl
or
or
and
dec
das
pop
arpl
lock
mov
push
pop
cwtl
adc
inc
or
cld
pop
pop
nop
imul
sti
fistps
int3
xchg
jno
ds
sbb
sti
pusha
jno
cmpsb
cmc
pop
mov
dec
sahf
adc
xor
cltd
adc
inc
dec
inc
lods
sub
xchg
mov
ficomps
push
std
mov
dec
clc
sahf
jno
fildl
lock
push
mov
into
ljmp
and
lea
scas
xor
cli
es
lret
mov
es
push
enter
jg
int3
pusha
sbb
in
xchg
push
pop
xor
pop
adc
xor
xchg
ret
daa
sub
pop
cltd
in
xchg
js
jecxz
xor
push
lret
mov
and
cli
jb
fwait
pause
je
and
ja
pop
sub
jne
push
xor
fists
incb
push
rcrl
testb
loopne
or
xchg
stos
mov
ss
pop
pusha
popf
mov
out
sub
adc
decl
jg
outsl
adc
mov
mov
push
pop
and
lods
aaa
icebp
fstpt
fdivl
loop
or
stos
mov
sahf
aaa
and
adc
outsb
sub
cmp
scas
sub
mov
fidivrs
mov
repz
inc
fsubrs
push
nop
rcr
bound
and
scas
je
jo
into
lods
xor
or
gs
inc
fsub
dec
ret
jmp
loopne
cmp
loopne
js
cli
xchg
add
mov
mov
xor
sub
jae
xchg
insb
xchg
inc
jp
mov
divb
outsb
pop
bound
fwait
stos
xchg
fdivrs
push
int3
dec
scas
mov
or
xchg
scas
lahf
es
bound
push
sbb
imul
int
dec
adc
fs
xchg
divb
pop
pop
xchg
or
ljmp
push
lods
cli
data16
pop
aaa
mov
fbld
iret
out
fs
sbb
push
adc
daa
mov
out
adcl
lds
fcomps
pop
jno
test
sub
lods
jae
xor
or
sbb
xchg
mov
push
pop
xor
add
popa
rorb
popa
mov
roll
popf
mov
cs
scas
sbb
repnz
xor
push
ja
repnz
je
sub
sbb
aaa
push
mov
sub
shlb
push
inc
fsubrs
lock
inc
pop
addr16
lea
mov
mov
repnz
pusha
push
cmp
testl
int3
movl
push
sub
scas
clc
gs
adc
je
ljmp
jo
xchg
popf
mov
fdivrs
imul
loop
push
and
and
xor
daa
adcb
xor
out
xlat
jnp
shl
lret
fwait
mov
and
and
mov
xor
push
addl
push
or
xchg
or
mov
leave
push
adc
outsl
lret
xor
adc
xchg
rcll
cmpsl
repz
xchg
addl
sbb
andb
cmc
popa
adc
adcl
jmp
ljmp
cwtl
stc
push
mov
stc
lcall
push
out
pop
rol
repnz
pop
inc
pop
and
push
adcb
pushl
testb
out
add
or
mov
mov
gs
add
xor
sub
adc
clc
xor
js
fsubrl
int3
adc
jae
test
inc
les
and
mov
out
mov
mov
shl
lea
lea
loope
xchg
xchg
add
pop
stos
inc
out
js
enter
bound
jnp
xchg
lock
test
xchg
stos
xor
jp
imul
mov
fscale
xchg
mov
pop
loop
mov
inc
outsl
data16
movsl
push
xchg
stos
clc
repz
rcrb
xor
rcr
ja
data16
in
rolb
mov
scas
out
dec
cs
push
cmpsl
mov
push
mov
jb
fs
insl
int3
ds
inc
into
mov
loope
pop
jnp
es
movsl
push
popf
lods
test
xchg
iret
or
jl
inc
ltr
mov
jne
cmc
imul
xor
xor
ret
jmp
xchg
inc
cld
pop
push
outsl
cltd
xchg
cmpsl
shlb
out
leave
push
adc
mov
xchg
push
mov
test
lcall
jnp
decb
inc
lahf
mov
sbb
scas
xchg
sbbl
out
lret
je
pminub
push
dec
jne
daa
inc
mov
sub
inc
fisttpl
mov
sub
mov
adc
cltd
fs
fbstp
add
xor
mov
jle
das
push
data16
mov
xor
ret
pop
push
repnz
pop
test
inc
dec
jp
adc
iret
sub
ds
fcmovnu
stos
xchg
out
imul
push
pop
dec
pop
fnclex
push
rclb
push
jns
adc
and
xchg
das
mov
ficompl
cmp
mov
or
js
pop
jmp
sub
loopne
cmp
stos
ret
mov
ja
ss
cmc
leave
xor
ljmp
sub
fucomi
into
pop
out
std
add
pusha
dec
sub
test
scas
lcall
sub
test
outsl
jecxz
nop
orl
cs
xchg
popf
dec
ja
inc
fldcw
cli
mov
enter
mov
fucomi
jnp
cmp
pop
inc
negl
xchg
imulb
mov
lds
xchg
cmp
ss
push
test
addl
pop
pop
incb
cmp
movsl
cmp
mov
sub
or
xor
sbb
lret
jb
mov
stos
xchg
jecxz
mov
jecxz
and
test
pop
cmp
cltd
pop
test
mov
inc
rcrl
push
adc
iret
sbb
adc
negb
and
rcll
jb
int3
out
imul
outsl
call
pop
aad
inc
cmpsb
pop
push
push
das
xchg
inc
call
out
mov
and
sti
notl
stc
mov
jl
or
inc
jecxz
sti
gs
mov
lcall
shlb
xchg
sti
and
dec
push
jo
add
cmc
push
insl
imul
xor
mov
cltd
int3
loop
aaa
test
ljmp
adc
push
sub
push
imul
sti
gs
in
inc
xchg
stos
sbb
adc
ret
mov
sbbb
sub
sub
sub
jmp
xchg
inc
dec
push
hlt
lods
ds
fstp
mov
mov
jno
fdivr
push
or
test
pop
push
adc
subl
pushaw
data16
sub
out
in
jae
movsl
pop
in
or
call
or
test
xchg
inc
fstp
xor
stc
xchg
adc
sbb
jl
stos
sub
cmp
sub
xchg
mov
mov
xor
repz
xor
xchg
add
xlat
and
xor
inc
add
dec
mov
push
scas
cmp
flds
mov
es
lods
push
mov
jnp
adc
jbe
dec
xor
sbb
add
ds
int
xor
adc
mov
or
daa
or
xor
fucompp
mov
add
stc
je
sub
xchg
mov
dec
hlt
mov
push
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
lods
and
adc
add
aaa
inc
dec
push
imul
push
inc
pop
jae
sub
jns
cli
dec
inc
add
cld
add
adcb
add
add
add
inc
add
and
incl
inc
add
fdivl
inc
and
add
add
jb
dec
inc
push
dec
inc
dec
xor
cs
insb
add
je
outsl
fs
gs
imul
add
add
add
shlb
add
add
jb
gs
xor
cs
insb
add
gs
je
push
jb
arpl
jae
add
fs
insb
cs
insb
add
push
outsb
insl
popa
jo
imul
arpl
outsb
add
imul
jae
dec
gs
outsl
jb
add
je
push
inc
outsl
outsb
je
js
add
popa
fs
jb
arpl
jae
gs
outsl
jb
add
je
push
inc
outsl
outsb
je
js
add
jae
insl
gs
push
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
imul
jb
add
mov
and
or
adc
add
cmp
movsb
shlb
lahf
sub
insb
dec
in
out
sub
adc
cmp
push
mov
mov
lods
rcr
jl
mov
test
pop
or
push
xchg
sbb
jns
cmpsb
or
shrl
std
das
mov
sbb
in
scas
loope
xchg
jle
push
nop
jl
cltd
jg
icebp
inc
cltd
mov
mov
repnz
push
cld
mov
imul
movsb
jle
xchg
hlt
je
or
pop
int
jno
dec
adc
jnp
pop
pop
ret
xor
mov
pusha
sub
jns
lret
fstpt
push
sbb
pusha
mov
sahf
insb
mov
mov
ja
xlat
daa
dec
xor
pusha
pop
pusha
push
repz
push
stos
bound
call
push
mov
stos
sub
int3
mov
call
push
mov
adc
mov
mov
test
je
ds
into
push
xchg
xchg
pop
iret
and
adcl
sub
mov
mov
data16
or
popa
xchg
test
jl
xor
test
mov
test
add
fmull
mov
lds
inc
hlt
addl
test
fwait
pop
sahf
inc
push
jmp
addr16
stos
shlb
push
fsubrs
cmpsl
setbe
or
outsb
in
jp
push
lock
sbb
add
data16
inc
sbbb
out
mov
test
pop
mov
fdivs
loopne
and
test
push
push
bound
aas
ss
sbb
xlat
shlb
dec
adc
rcl
ljmp
leave
jb
pop
jnp
cltd
sbb
aam
neg
call
jecxz
dec
jns
mov
push
rolb
test
inc
ret
pop
arpl
sbb
push
insb
ds
cmp
outsl
in
push
cmp
push
cld
insl
sub
xor
or
jecxz
std
dec
xor
pop
sub
data16
sbb
lret
rorb
enter
or
sarl
or
pusha
sbb
add
inc
and
pop
sti
clc
jmp
xor
fists
jne
adc
push
push
das
stos
push
add
xor
and
dec
jnp
push
sbb
ds
mov
cs
xchg
fldt
fcomip
test
aad
jle
xor
jae
dec
mov
pop
lret
mov
lock
mov
mov
dec
pop
rcl
sub
gs
clc
mov
dec
mov
nop
xchg
sti
dec
fucom
xor
movsb
inc
adc
call
lret
add
sahf
jle
mov
icebp
sub
fistl
jno
lods
ljmp
mov
loopne
scas
das
pop
cmp
mov
jne
sti
loop
sub
repnz
or
dec
sbb
iret
shrl
and
das
ja
push
mov
mov
int3
mov
mov
rep
sbb
dec
test
mov
adc
cmpl
lods
shlb
pop
push
add
jae
xchg
ja
sbb
and
ja
inc
push
iret
xor
int
mov
sbb
dec
jle
scas
sub
mov
and
loopne
push
fwait
ss
mov
arpl
cmpsb
fistps
inc
sarl
pop
fldenv
mov
subl
enter
jae
lret
mov
test
push
sbb
push
in
fwait
mov
add
mov
mov
push
imul
repnz
arpl
cs
test
pop
sub
lahf
test
push
test
jo
dec
inc
sub
es
mov
outsb
lods
jge
cmpsl
dec
mov
mov
jno
stos
in
call
lcall
sahf
mov
movsl
add
sbb
dec
or
adc
cmp
in
cwtl
push
aas
gs
inc
pop
in
imul
negl
cmc
xor
out
out
sub
lock
fisttpll
jo
jmp
push
add
imul
out
mov
cmp
jo
imul
push
add
pop
push
stos
sbb
pop
ds
scas
fidivrs
inc
jge
mov
fidivrl
mov
or
lock
sbb
pushl
or
mov
mov
pop
jp
and
stc
adc
jl
inc
xor
in
cmp
fcmovb
aaa
xor
mov
cmpsl
lcall
rorb
ds
enter
jne
cltd
int
loop
push
ljmp
mov
sbb
mov
mov
inc
outsl
mov
adc
and
mov
push
scas
mov
ficoms
or
mov
aas
iret
fcompl
jb
push
and
imul
fstpl
push
xchg
test
pop
fimull
je
lcall
cmp
jp
cli
sbb
or
ret
les
sbb
or
adc
fstl
mov
mov
sub
add
sahf
clc
fbstp
dec
xor
ja
sbbl
mov
cmp
movsl
and
in
out
repnz
sti
icebp
xchg
sub
mov
push
jo
jecxz
mov
jmp
xchg
out
ja
push
cmp
sub
sbb
andb
dec
cs
adc
ljmp
hlt
sub
div
cmp
cmp
pusha
jns
sbb
cmpsl
and
adc
imull
lods
jmp
pop
ret
ljmp
jnp
shll
jg
sub
mov
out
fnsave
ret
movsl
pop
insb
mov
add
into
out
cmp
out
sub
and
jne
fucomp
adc
int3
adc
xor
iret
arpl
stos
nop
pop
jae
cmp
sahf
aad
fisubrs
out
cmpsl
sub
pusha
stos
pop
stos
pushf
outsb
test
mov
push
mov
mov
mov
xor
inc
mov
sub
mov
push
fwait
cltd
mov
notl
lcall
xchg
pop
xchg
in
adc
mov
mov
mov
cmc
push
arpl
sbb
ret
sbbl
or
push
in
out
bnd
ljmp
jae
jl
fsts
pop
jecxz
fs
loopne
and
stos
stos
mov
rorb
cli
inc
hlt
inc
mov
push
sbb
and
inc
sahf
jns
fadd
dec
test
push
bound
iret
inc
lea
orl
ret
and
jg
je
imul
mov
push
add
sbb
add
andb
lea
ljmp
sbb
xchg
lock
inc
jle
icebp
in
pop
fstpt
and
fidivrs
out
lret
cmpsl
repnz
xor
test
clc
sbb
out
call
stos
cmpsl
imul
fmul
or
test
std
leave
sahf
push
push
rcr
jae
int
push
adc
pop
addr16
inc
jcxz
xor
jno,pt
clc
sub
out
ds
sub
sbb
pop
cmp
xchg
sbb
dec
divb
imul
imul
push
and
aam
hlt
and
mov
mov
scas
popa
add
idivb
push
inc
inc
and
je
and
mov
dec
scas
xchg
mov
rcr
hlt
jo
das
mov
mov
shrb
jg
test
xor
cmp
push
out
and
stos
and
sub
fiaddl
mov
bound
push
movsb
rorb
out
lea
dec
mov
mov
jl
into
stos
in
pop
aaa
rcrl
sub
xor
test
fldcw
dec
adc
idiv
leave
sbb
xor
es
jecxz
je
outsb
cmp
inc
pop
out
push
dec
cmc
or
xchg
mov
fsubrs
dec
mov
xchg
imul
xchg
xchg
sarb
adc
int3
xor
loope
push
dec
sub
sbb
hlt
pop
jl
sub
jo
daa
add
adc
sub
and
in
adc
dec
faddl
stc
pop
nopl
movsb
jns
inc
pop
outsb
mov
push
pop
xor
rcrb
fs
jnp
pusha
pushf
sub
call
arpl
ret
push
sahf
xor
add
dec
scas
adc
xchg
and
xchg
xor
and
and
mov
cltd
or
jb
sub
mov
sar
xchg
mov
bound
jge
lock
int3
out
mov
jge
daa
std
popf
ret
push
lea
repz
arpl
je
cs
stos
outsb
outsl
cmp
std
clc
hlt
pusha
fcoml
test
fucomp
mov
or
push
jnp
aaa
sub
insl
cmp
gs
add
rcr
or
add
xchg
mov
in
punpckhwd
lahf
jnp
pushf
jge
into
or
xchg
mov
mov
adc
mov
cmp
cmp
jns
adc
xchg
loop
subb
inc
push
int3
dec
jne
sbb
js,pn
inc
adc
push
xchg
mov
mov
sti
dec
sbb
imul
in
lret
mov
loope
pop
push
inc
inc
xchg
adc
outsb
in
or
sub
stos
aad
scas
fs
test
fimull
ret
in
push
cmpb
jnp
pusha
dec
pusha
add
cmp
mov
cmp
add
inc
ja
cld
xlat
xor
xorl
lock
mov
pop
add
push
mov
mov
popa
cs
mov
mov
out
je
ret
xchg
stc
push
je
mov
push
bnd
mov
es
test
sbb
test
xchg
pop
xchg
mov
inc
jo
mov
xchg
push
aad
dec
fiadds
leave
loope
or
dec
bound
jne
sbb
or
test
xor
les
pop
pop
call
and
outsb
sbb
fbld
mov
sbb
fdivr
push
cmp
into
loop
push
jg
dec
add
push
cli
addl
les
out
daa
mov
lcall
pusha
ret
mov
test
sub
lock
cmc
shrb
fdivl
xlat
sahf
out
arpl
cmp
xchg
ffree
push
xor
ret
out
lret
mov
mov
sbb
add
dec
cmp
jl
jl
jb
xchg
pop
rcrl
mov
push
in
mov
cld
or
jl
fadd
shrd
out
push
push
clc
out
mov
adc
mov
out
aad
les
push
into
mov
fnsave
lcall
cli
push
loopnew
pusha
inc
aaa
into
cmp
iret
cmc
cli
shll
ja
stos
sbb
mov
inc
aaa
mov
sarl
mov
aad
jae
mov
jnp
add
imul
mov
nop
mov
mov
outsb
ss
stos
dec
push
jns
xchg
mov
enter
out
clc
rcpps
lea
or
dec
rorb
cmp
push
inc
mov
lods
add
pop
mov
lcall
arpl
out
xchg
imulb
and
stos
add
movsl
movsb
shl
pushf
mov
push
fwait
push
adc
fs
loope
cmp
jmp
out
das
push
imull
add
pop
or
ja
test
mov
lods
out
fwait
xchg
in
cmp
nop
jmp
fnstenv
sub
cmp
add
ds
shrl
sub
lahf
pop
fwait
mov
pop
dec
cmc
mov
lods
sub
out
sbb
std
lods
mov
fwait
cli
xchg
in
shr
int3
push
cmp
sub
clc
sub
adc
add
push
pusha
jne
inc
push
xchg
testl
hlt
mov
lock
mov
sbb
xchg
sub
cmp
cmc
and
sti
pushfw
cmc
sbb
fsubl
sub
xor
std
push
mov
xor
add
ja
sub
ret
int3
stos
pop
xchg
lods
int3
push
pop
call
cmp
popf
aaa
xchg
stc
and
into
jnp
sti
fs
and
mov
mov
inc
cmp
fimuls
out
adc
scas
mov
std
sub
pop
or
inc
lcall
fisubrs
enter
idivl
sbb
ror
mov
push
fldl
pop
cmp
ds
mov
test
ljmp
adc
inc
outsl
cmp
arpl
fwait
rcrb
ja
scas
jo
dec
testb
pop
out
push
jb
pop
jge
scas
or
inc
inc
int3
loop
dec
push
shlb
scas
adc
loope
cmp
push
dec
mov
aas
outsl
subb
add
daa
jb
mov
adc
out
jns
mov
loope
mov
mov
xor
leave
mov
sbb
not
mov
stos
call
sbb
sarb
fimull
aad
ret
cmp
addr16
jl
stc
lea
mov
mov
sahf
idivl
mov
aad
pushf
inc
fldenv
sub
xchg
mov
jno
xchg
adc
in
jmp
mov
pop
fs
shrl
shll
push
rclb
inc
movsb
add
push
outsb
in
loopne
fistpl
dec
fs
pop
lahf
fists
mov
mov
or
mov
dec
and
jbe
lea
cltd
fwait
inc
outsl
or
sbb
fimull
fcomp
push
iret
jns
into
outsl
jle
int
mov
push
add
rorb
notb
and
and
cmpsb
xor
int3
push
bound
jne
xchg
ss
outsb
int3
jae
mov
dec
mov
dec
adc
jno
mov
xor
shl
inc
lcall
leave
add
test
loop
and
xor
and
add
jl
lret
mov
pushf
jbe
sarb
push
shl
inc
push
pusha
mov
inc
and
jbe
inc
test
pusha
jne
dec
dec
test
call
jp
stos
stc
dec
pop
ret
mov
ret
add
loope
imul
pop
cmpsb
sub
out
ret
dec
mov
loop
into
jecxz
push
out
ret
.byte
js
add
add
add
add
arpl
add
add
add
add
sbb
xor
add
add
add
add
popa
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
add
bound
add
bound
add
add
add
arpl
add
add
add
add
add
add
shlb
shlb
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
add
bound
add
bound
add
add
add
arpl
add
add
add
add
add
add
add
add
fwait
add
imul
jae
add
in
add
je
outsl
insl
insl
popa
outsb
fs
imul
dec
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
addb
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
add
je
outsb
push
gs
js
gs
imul
gs
add
daa
add
addr16
popa
imul
cmp
pop
pop
jo
pop
outsb
jbe
jb
outsb
add
add
jo
pop
insw
outsl
fs
add
push
add
jae
je
popa
jo
pop
je
jo
add
add
jns
pop
arpl
imul
pop
imul
pop
outsl
outsb
gs
je
add
test
pop
jae
je
outsl
fs
sbb
popa
je
js
je
add
add
add
add
insl
popa
insb
insb
outsl
arpl
add
add
outsb
popa
insb
add
add
cltd
add
jb
insl
jo
add
add
add
add
inc
jb
popa
je
push
imul
inc
add
add
push
imul
outsl
arpl
add
add
popa
je
push
popa
addr16
add
roll
inc
imul
outsl
ja
add
add
inc
gs
gs
popa
addr16
add
add
fs
jne
jae
jb
add
add
fs
arpl
inc
add
add
jae
push
jne
je
gs
popa
add
add
add
imul
popa
jae
inc
js
add
inc
add
outsl
ja
imul
add
pop
add
outsb
jae
popa
je
dec
gs
popa
add
add
add
pusha
add
add
add
add
add
add
add
dec
inc
dec
xor
cs
insb
add
add
sub
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
arpl
cs
insb
add
cmp
add
add
add
add
add
add
add
add
add
add
add
push
xor
cs
insb
add
add
inc
mov
add
add
add
add
add
sub
add
pop
add
adcb
add
mov
add
inc
mov
add
add
add
add
add
inc
add
addb
add
inc
mov
add
add
add
or
add
add
inc
mov
add
add
add
mov
add
addb
add
inc
mov
add
add
add
or
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
in
jo
add
add
add
jae
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
pop
ja
ja
ja
ja
jo
add
add
add
ja
ja
ja
ja
add
pop
jo
add
add
or
jo
or
jo
add
add
mov
jo
or
jo
add
add
mov
jo
ja
mov
pop
jo
add
add
mov
jo
or
jo
add
or
ja
jo
or
jo
add
mov
add
add
or
jo
add
orb
mov
add
mov
mov
jo
or
add
add
add
or
jo
mov
decl
pop
jo
mov
decl
pop
jo
mov
decl
pop
jo
mov
decl
pop
jo
mov
decl
pop
jo
mov
decl
pop
jo
mov
decl
pop
jo
addb
lock
decl
pop
jo
xor
lock
decl
pop
jo
xor
lock
decl
add
add
add
add
decl
pop
jo
add
xor
decl
pop
jo
add
xor
decl
add
add
add
add
add
decl
pop
jo
add
add
cmp
decl
pop
jo
add
add
cmp
decl
add
clc
add
push
add
jmp
add
inc
add
incl
add
incb
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
addb
pop
addb
pop
addb
pop
addb
jg
add
jg
add
incl
add
inc
add
incl
add
add
add
and
add
add
call
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
pushf
add
add
add
add
xor
aaa
add
add
inc
add
add
and
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
and
add
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsb
add
add
add
add
add
js
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
outsb
add
add
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
pop
add
.byte
