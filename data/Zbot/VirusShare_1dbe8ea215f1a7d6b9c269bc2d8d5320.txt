stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
ret
add
shlb
pop
add
call
add
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
ret
add
jmp
ret
and
push
pop
sub
mov
mov
shl
xor
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
je
mov
sub
jne
push
pop
je
popf
push
pushl
decl
ret
push
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
add
lea
sub
sub
mov
pop
mov
mov
lea
mov
push
mov
xorl
pop
sub
or
mov
cmp
je
add
mov
push
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
subl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
jo
add
shlb
add
sub
add
mov
add
adc
add
out
add
or
add
loop
add
and
add
shlb
add
and
add
and
add
add
add
sub
add
sbb
add
xor
add
pushf
and
add
add
mov
add
add
add
mulb
add
nop
and
add
and
add
and
add
and
add
add
push
and
add
and
add
add
outsb
and
add
add
add
add
push
and
add
add
push
and
add
and
add
add
add
add
add
add
adc
add
cmp
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
jle
add
movsb
and
add
add
shlb
add
sub
add
mov
add
adc
add
out
add
or
add
loop
add
and
add
shlb
add
and
add
and
add
add
add
sub
add
sbb
add
xor
add
pushf
and
add
add
mov
add
add
add
mulb
add
nop
and
add
and
add
and
add
and
add
add
push
and
add
and
add
add
outsb
and
add
add
add
add
push
and
add
add
push
and
add
and
add
add
add
add
add
add
call
inc
imul
bound
gs
add
repnz
imul
jb
je
arpl
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
gs
popa
jae
inc
jb
outsl
jb
add
add
gs
outsl
insl
insl
inc
jb
popa
imul
roll
dec
gs
jo
jb
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
addl
jb
popa
je
inc
imul
jns
add
pop
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
cmp
push
jb
jbe
je
push
jb
imul
inc
add
add
gs
outsl
jbe
inc
imul
jns
add
call
inc
imul
bound
gs
add
movsl
add
je
gs
imul
push
add
outsl
jae
dec
popa
outsb
fs
add
inc
gs
je
imul
inc
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
inc
jne
jb
outsb
je
push
add
dec
add
popa
insb
inc
insb
popa
addr16
add
add
outsb
fs
insb
outsl
jae
add
add
outsl
bound
dec
outsl
arpl
add
push
dec
inc
dec
xor
cs
insb
add
rolb
jae
imul
sbb
ja
jo
imul
pop
dec
outsl
popa
fs
jne
jae
jb
add
inc
gs
imul
outsb
addr16
add
pop
or
jae
dec
gs
popa
addr16
add
das
push
inc
insb
outsl
jae
inc
gs
je
jo
add
imul
jae
popa
addr16
add
xchg
inc
gs
imul
js
push
add
mov
inc
imul
dec
gs
popa
addr16
add
jnp
push
gs
outsl
arpl
add
jae
push
gs
jne
jae
jb
outsl
jae
add
dec
gs
popa
addr16
add
movl
outsl
insl
gs
push
push
inc
push
xor
cs
insb
add
add
inc
fs
jae
inc
jns
popa
insl
gs
add
add
je
gs
jns
popa
insl
add
pop
add
je
popa
insl
gs
jns
jns
gs
add
or
inc
gs
gs
imul
push
push
dec
inc
dec
cs
insb
add
dec
jae
popa
je
push
push
inc
add
push
dec
push
push
dec
cs
insb
add
jg
jge
repnz
out
movsb
lods
push
sub
lea
insb
lods
sub
xchg
push
es
call
arpl
mov
notb
xchg
mov
push
pop
adc
mov
cmc
sbb
jge
inc
dec
imul
popf
inc
mov
jmp
les
js
call
ss
adc
cmp
mov
roll
scas
call
loopne
push
cs
repnz
or
jl
xchg
mov
xchg
addr16
clc
mov
mov
lods
adc
cmpsl
xchg
in
fucomp
mov
aam
sub
in
pop
xchg
dec
mov
jnp
cmp
ds
mov
mov
pop
pop
lods
push
pop
pop
popf
nop
call
test
jnp
shr
mov
push
clc
loop
pop
add
sbbl
xor
popf
ret
mov
sub
lds
and
fsubrl
lock
xor
enter
xchg
dec
sub
mov
out
jge
imul
fcompl
loop
xchg
fsub
fcoms
or
test
test
jp
dec
inc
push
imul
mov
ret
pshufw
xchg
aaa
aaa
in
or
sub
cmp
lret
cmp
xchg
sub
int
in
push
test
int
mov
rolb
fdivs
clc
and
stc
sub
aam
dec
jg
daa
lcall
sbb
push
nop
lds
cmp
out
pminsw
mov
add
and
xchg
mov
add
fstps
nop
xchg
nop
inc
out
shll
xchg
dec
loopne
push
push
adc
stc
out
ftst
add
or
push
test
pop
loop
mov
add
add
add
add
xor
add
decl
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
or
add
adc
add
or
add
and
add
or
add
add
add
add
add
add
add
add
push
popa
add
test
add
clc
xchg
add
add
add
add
add
or
add
mov
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
sub
add
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
stos
mov
mov
fwait
pop
xchg
xchg
xchg
or
jge
jl
jp
lods
lods
lods
add
cmpsl
push
mov
mov
mov
ret
lret
leave
lret
into
int3
rcl
in
rcl
shl
iret
rcl
hlt
int
int
enter
leave
out
mov
in
mov
mov
lods
lods
lods
lea
fwait
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
sahf
add
mov
mov
out
leave
leave
not
rcl
cld
fcom
std
fcomp
xlat
fcom
aam
dec
rcl
dec
int3
into
aad
aad
iret
rcl
inc
ret
ret
std
mov
mov
lods
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
lods
stos
lods
add
scas
lods
sbb
mov
jnp
mov
sar
vpaddd
leave
lret
call
ror
aam
xlat
fcom
call
call
aad
dec
int3
int3
dec
int3
int
aad
aad
int3
into
int
mov
mov
mov
std
cmpsb
test
ljmp
pop
fs
or
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
push
add
inc
add
push
add
or
inc
or
sbb
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
leave
dec
int
call
rcl
fcom
fdivr
xlat
fdivr
aam
aad
into
int
dec
leave
lret
dec
int
inc
mov
mov
mov
mov
test
cmpsl
jmp
cltd
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
imul
fs
sbb
movntps
sbb
aaa
cmp
aaa
cmp
sub
and
adc
add
add
add
add
gs
mov
pop
mov
mov
mov
mov
mov
sarb
leave
call
rcl
call
aad
aad
aam
ror
iret
inc
leave
inc
mov
ret
mov
mov
ljmp
movsb
movsb
sahf
sahf
sahf
xchg
cwtl
cwtl
lcall
addl
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
outsl
xor
jge
jge
jge
jno
jo
bound
mov
cmp
cmp
inc
inc
inc
mov
jo
outsl
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
movsl
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
leave
lret
enter
mov
mov
scas
scas
scas
jmp
fwait
call
xchg
xchg
cwtl
xchg
xchg
fwait
lcall
ds
push
or
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
outsl
jo
pop
pop
pop
or
jnp
nop
mov
incb
jp
jnp
jl
outsl
jo
out
addr16
fdivs
je
jle
jge
jns
jp
gs
inc
inc
cmp
sbb
sbb
adc
or
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
test
lcall
xchg
xchg
incl
addl
xchg
xchg
xchg
sahf
sahf
sahf
sti
mov
cwtl
xchg
mov
jns
jns
xor
das
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
jno
fwait
popf
in
mov
mov
addl
mov
xchg
jge
jb
jno
je
jne
jle
jge
addl
xchg
data16
cmp
and
es
jg
jge
cltd
fwait
lcall
test
lods
sti
lods
lods
lods
stos
lods
stos
stos
stos
test
mov
cltd
cltd
xchg
xchg
xchg
incl
jle
jp
jns
jp
jp
mov
cwtl
movsb
movsl
movsb
mov
scas
sti
mov
mov
mov
mov
mov
scas
lods
stos
xchg
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
movsb
cmpsb
out
lods
mov
xchg
xchg
incl
test
std
xchg
xchg
xchg
std
xchg
cwtl
cwtl
stc
xchg
xchg
xchg
in
mov
or
addl
mov
pop
push
push
or
inc
inc
dec
insl
insb
imul
test
lcall
out
cltd
fwait
lcall
mov
decl
mov
fwait
cltd
lcall
scas
scas
mov
mov
mov
mov
mov
std
mov
mov
movsl
mov
jp
scas
cmpsl
lods
add
adc
test
call
cltd
xchg
cwtl
incl
test
decb
xchg
xchg
pushf
sahf
popf
std
movsl
mov
mov
in
xchg
nop
xchg
in
xchg
push
jne
prefetchw
add
or
es
dec
dec
data16
jno
mov
xchg
rclb
xchg
xchg
std
lea
nop
call
mov
cmpsl
ljmp
cmpsl
lods
pushl
sahf
scas
mov
mov
mov
mov
ljmp
mov
add
pop
adc
scas
mov
lcall
mov
mov
mov
nop
xchg
call
xchg
xchg
popf
sahf
pushf
movsl
mov
test
movsb
movsb
mov
fstpt
jnp
push
push
push
outsl
dec
dec
dec
pop
popa
arpl
jb
mov
jge
test
mov
lea
xchg
testl
mov
jmp
mov
mov
pop
mov
aaa
jge
mov
jbe
mov
cmpsb
mov
mov
mov
mov
movsl
add
pop
pop
adc
mov
lcall
mov
xchg
xchg
xchg
call
xchg
xchg
call
lcall
sahf
mov
mov
stc
cltd
cwtl
lcall
xchg
xchg
les
cltd
in
xchg
xchg
out
mov
stc
xchg
test
std
xchg
jae
lcall
jmp
jnp
mov
jp
mov
jae
mov
outsb
ljmp
packuswb
lods
or
lods
or
mov
jge
mov
mov
stos
pushf
movsb
mov
movsb
add
mov
add
pop
adc
mov
jmp
xchg
xchg
call
lcall
mov
popf
lcall
xchg
xchg
call
xchg
nop
call
lcall
cltd
mov
cld
pushf
mov
xchg
push
xchg
pop
jg
xchg
dec
js
lcall
sahf
push
push
jmp
adc
adc
lods
packuswb
lods
adc
scas
adc
mov
push
mov
imul
mov
lcall
scas
scas
lods
scas
movsb
movsl
movsb
sub
movsb
mov
add
add
add
mov
pop
pop
adc
mov
ljmp
pushf
call
pushf
pushf
lcall
movsb
movsl
jmp
mov
xchg
decl
mov
decl
mov
cltd
jb
cltd
fs
xchg
dec
jnp
xchg
jo,pt
xchg
sub
popa
call
or
add
pop
lcall
pop
pop
jmp
sbb
mov
insl
pushl
outsb
mov
and
and
mov
inc
cmp
xchg
lods
mov
scas
scas
mov
mov
movsb
movsb
add
pop
pop
adc
lods
mov
shll
lcall
movsb
mov
jmp
stos
stos
jmp
fwait
sahf
call
pop
js
mov
decl
popa
decl
push
pop
incl
add
incl
add
mov
push
decl
add
cltd
add
mov
or
pushl
es
mov
sub
shrl
ret
sub
jg
enter
leave
jg,pn
movl
inc
mov
mov
movsb
movsl
movsb
dec
mov
movsb
movsb
add
push
push
adc
cmpsl
scas
ljmp
lahf
jmp
test
ljmp
stos
lods
pushl
scas
lods
jmp
jno
decl
or
push
incl
add
incl
add
test
push
decl
add
xchg
add
xchg
add
cltd
add
sahf
add
mov
adc
mov
aaa
cmp
aaa
cmp
cmp
dec
cmp
call
cmp
mov
rorl
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
mov
mov
sahf
cltd
popf
ljmp
lods
scas
pushl
mov
pushl
mov
ljmp
js
decl
or
mov
pop
incl
or
test
push
incl
add
mov
push
call
add
sahf
add
add
add
lods
add
jo
les
test
leave
inc
mov
int3
inc
call
inc
call
dec
mov
dec
xchg
call
dec
xchg
fimull
fmull
ficoml
call
test
std
mov
mov
movsl
movsb
mov
or
add
add
add
add
dec
inc
adc
jl
movsl
popf
mov
lcall
test
mov
mov
mov
mov
mov
mov
mov
mov
scas
mov
mov
aaa
insl
decl
sbb
decl
adc
decl
pop
push
decl
add
xchg
add
sahf
add
add
add
stos
add
mov
arpl
shlb
int
mov
aam
xchg
call
push
fwait
fistl
fstpl
ficomps
fistps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
test
cmpsb
jne
mov
sahf
add
inc
inc
adc
js
lahf
lcall
mov
stos
stos
pushl
mov
mov
mov
mov
ljmp
inc
jne
pop
call
and
call
sbb
nop
or
popl
push
call
add
mov
add
lods
add
mov
gs
mov
xor
call
pop
cltd
fldenv
fbld
jmp
arpl
jmp
gs
out
test
call
cmpsw
jmp
test
mov
cmpsl
cmpsb
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
inc
adc
jb
fwait
xchg
cwtl
call
sahf
fwait
lahf
ljmp
mov
pushl
mov
mov
mov
mov
jle
xchg
sub
lcall
call
pop
callw
add
lcall
jmp
add
mov
pushl
call
inc
xchg
jmp
outsl
lods
jmp
outsl
lods
jmp
jb
jmp
jae
in
jae
out
jne
in
jbe
out
je
jmp
mov
mov
cmpsb
cmpsb
lcall
lahf
add
jg
cmp
aas
adc
outsl
js
mov
lcall
mov
mov
mov
mov
mov
mov
mov
cmpsl
scas
lcall
jo
lahf
cmp
lahf
aaa
jae
sahf
xor
lcall
call
add
movsb
add
test
add
mov
gs
mov
sbb
ficoml
jmp
js
ljmp
in
cmpl
push
xchg
push
test
ljmp
inc
mov
test
pushf
popf
popf
daa
mov
mov
add
fs
add
aaa
cmp
pop
pop
pop
jne
jle
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
inc
mov
jmp
cmp
movsb
inc
jl
movsb
inc
jge
movsl
aaa
jbe
lcall
lcall
pop
ljmp
add
add
mov
add
shll
mov
in
mov
lock
sar
nop
ret
push
nop
ret
xchg
ret
push
xchg
xchg
stc
ret
nop
mov
inc
ret
lods
lods
stos
mov
sahf
popf
xor
popf
pushf
add
add
add
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
mov
inc
ret
ret
inc
mov
jmp
inc
jl
cmpsb
dec
cmp
movsb
xor
lcall
add
mov
add
lods
add
mov
arpl
mov
add
leave
push
insb
fdivs
mov
call
xchg
vlddqu
cltd
pushf
leave
push
lcall
cld
sahf
int3
cli
lahf
int3
sti
lcall
fidivs
cli
mov
mov
mov
nop
xchg
add
add
add
das
sub
outsb
dec
dec
dec
jecxz
pop
call
mov
mov
mov
sar
ret
mov
mov
mov
ljmp
dec
mov
mov
pop
pop
lcall
add
lods
add
mov
mov
add
movl
jne
filds
in
mov
push
movsb
int
mull
iret
cli
cmpsl
sar
cld
cmpsl
sar
cli
cmpsl
into
stos
sar
std
stos
sar
cld
cmpsl
sar
negl
lret
lret
mov
mov
sahf
lahf
sahf
dec
xchg
xchg
xchg
add
cltd
cltd
add
add
add
xor
sub
inc
inc
inc
bound
push
xlat
jae
jo
mov
rol
rol
mov
ret
ret
ret
inc
leave
enter
ret
pushl
push
test
scas
push
mov
lods
dec
test
mov
add
movsl
add
lods
add
mov
mov
add
into
add
xlat
add
ficoms
jge
out
pop
test
negl
sar
cli
mov
cli
mov
cli
scas
sar
cld
mov
cld
mov
cld
mov
std
mov
mov
cld
mov
push
movsl
mov
call
leave
lret
mov
mov
mov
xchg
xchg
or
add
add
xor
sbb
add
dec
dec
outsb
outsl
jo
xchg
cltd
lcall
xlat
fsubr
aad
not
rcl
std
lret
int3
into
dec
lret
lret
leave
lret
lret
lret
inc
enter
lahf
lods
ljmp
push
mov
lods
jge,pt
sahf
or
pop
ljmp
add
mov
add
iret
add
fadds
jb
loopne
je
jmp
jb
sti
lods
sar
std
mov
mov
fcos
std
mov
xlat
cld
mov
fcos
inc
fcos
std
mov
lret
jmp
mov
call
leave
int
mov
lahf
sahf
jo
xchg
xchg
or
add
add
xor
add
add
pop
or
leave
movb
loop
out
call
test
jecxz
leave
fstp
fsubp
fcomi
xlat
fcmovbe
cli
aam
xlat
std
int
sar
mov
push
cmp
sub
mov
add
mov
popa
mov
add
lret
add
add
fildl
ja
in
ja
out
xor
cli
mov
loopne
inc
loopne
inc
loopne
inc
loopne
std
dec
loopne
dec
fdivrp
dec
std
leave
fdivrp
std
lret
cld
mov
leave
fmul
iret
mov
mov
xchg
adc
add
add
std
incb
std
add
incl
hlt
div
or
out
in
pop
jmp
in
sub
out
in
dec
ljmp
xchg
out
out
jecxz
in
fucomp
les
xchg
test
ja
mov
add
ljmp
add
mov
add
int
insl
fadds
jb
fiadds
ja
call
inc
popf
cli
mov
in
cld
lret
dec
out
dec
in
std
into
jecxz
dec
jecxz
dec
loope
call
jecxz
call
in
shl
std
shl
sti
in
mov
xlat
inc
ret
cmpsb
test
mov
xchg
xchg
add
add
add
std
add
std
add
clc
testb
repnz
repnz
in
icebp
out
pop
out
icebp
out
cmp
out
in
pop
loop
lds
xchg
sti
sahf
and
lcall
add
add
mov
data16
mov
add
add
flds
jbe
jecxz
jnp
jmp
jle
negb
cli
mov
cld
shl
cld
shl
std
shr
std
shr
call
jecxz
std
aad
std
xlat
jmp
std
fldl2e
fucomi
std
iret
loope
repz
aam
in
leave
leave
leave
rep
stos
test
and
cwtl
cwtl
add
cld
add
std
clc
add
cld
clc
add
div
or
aad
xor
jae
negb
add
test
pusha
ljmp
add
les
push
call
add
faddl
ja
call
sbb
clc
jne
sti
fld1
std
fucomi
fldpi
fldl2e
fucomi
std
fucomi
std
fsubr
std
fucomp
fsubrp
jmp
in
fsubrp
std
shl
push
ret
call
rcl
clc
lods
lods
lods
lods
xchg
xchg
xchg
outsb
outsl
outsb
add
add
mov
loope
add
mov
cwtl
repnz
jmp
add
mov
add
int
outsb
call
add
loopne
jne
call
sub
aam
fsubrp
std
fucomp
std
fldl2t
fldl2t
call
out
aad
std
shl
sti
shl
sti
shl
stc
into
fdivrp
stc
int
push
ret
out
mov
jmp
rcr
fcom
fdivr
mov
mov
cltd
cltd
cltd
cmp
cltd
add
xlat
xlat
add
leave
adc
scas
xchg
lcall
add
mov
arpl
mov
add
iret
add
add
loopne
js
ljmp
cld
xchg
cld
enter
lret
cli
test
sar
repnz
into
push
mov
int
jmp
mov
sar
jmp
shl
jmp
in
mov
mov
xchg
add
add
add
int3
add
mov
cmpsb
loopne
xor
pusha
ljmp
add
mov
add
into
push
jo
rorl
je
fistl
ja
loope
cmp
jmp
scas
lret
mov
call
scas
scas
ret
cli
fdivl
enter
enter
int3
in
enter
rcl
shl
xlat
fcmovnb
out
loop
in
in
test
out
out
popf
call
lret
lods
stos
stos
adc
cmpsb
cmpsl
test
lahf
lahf
mov
add
rcrl
lods
aam
dec
cmp
cmpsl
sbb
scas
and
mov
js
mov
dec
xchg
ret
stc
leave
arpl
hlt
rorb
mov
mov
lret
lret
rcl
int
aad
shll
rcl
jg
fcmovnu
jb
gs
in
out
out
jmp
div
sub
cmc
mulb
icebp
icebp
icebp
sbb
fcmovnu
or
mov
int
mov
add
mov
rol
mov
scas
mov
test
imul
mov
pushf
in
mov
sarb
stos
mov
ret
mov
cmpsl
leave
mov
mov
lret
ror
shlb
iret
rcll
rcl
dec
aam
aad
rcl
xor
fcmovu
daa
fcomp
fcompl
fcoml
fucom
loop
loopne
jecxz
call
repnz
add
sti
testl
incl
std
incb
mov
mov
mov
mov
lods
scas
xchg
mov
mov
mov
mov
ret
push
rol
inc
ret
mov
daa
int3
ror
and
aad
sbb
aam
adc
aam
rcl
aad
rcr
xlat
add
fstp
add
add
in
add
in
jmp
add
incb
mov
mov
add
ret
ret
or
mov
mov
mov
push
rol
or
enter
enter
lret
add
rolb
rcl
add
aad
fcom
add
aad
add
fsub
add
aad
add
loopne
add
add
out
add
icebp
icebp
add
incb
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
ret
mov
mov
ret
ret
mov
mov
mov
ja
test
test
xchg
xchg
xchg
pop
add
add
add
add
add
add
mov
mov
mov
mov
mov
ror
iret
jmp
aad
cmc
aam
aam
into
iret
iret
cli
int
lret
stc
int3
lret
mov
mov
lods
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
jg
addl
push
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
cld
into
into
into
xlat
aad
call
aad
dec
ror
dec
int
dec
lret
mov
mov
lods
icebp
xchg
xchg
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jne
je
jae
data16
inc
inc
inc
cmp
sub
sub
ss
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
dec
lret
lret
call
rcl
call
rcl
dec
lret
inc
sarb
stos
test
popf
xchg
xchg
cwtl
jmp
outsl
outsl
xchg
push
adc
add
add
add
add
add
jg
jg
jp
jl
addl
aam
push
mov
push
push
push
stos
imul
push
pop
pop
cmp
cmp
pop
outsl
jo
adc
mov
mov
sar
mov
mov
mov
jmp
pushf
lcall
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
lcall
pop
pushf
xchg
cwtl
fcoml
addb
jge
jnp
js
jp
jnp
jnp
jns
jnp
je
je
push
push
push
cmp
aaa
sahf
pushf
pushf
mov
scas
scas
rep
scas
lods
sti
lods
scas
lods
std
cmpsl
test
sahf
call
xchg
call
mov
lods
jmp
lods
scas
leave
movsb
movsb
movsb
cltd
jae
je
adc
adc
add
add
add
add
outsl
outsl
outsl
pop
lods
movsb
stos
loop
cwtl
popf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
nop
fimuls
mov
jp
and
inc
inc
inc
inc
dec
jo
outsb
orl
cltd
cwtl
repnz
xchg
xchg
std
mov
call
sahf
ljmp
stos
scas
std
mov
scas
mov
mov
mov
cmpsl
mov
addl
add
add
popa
pop
pusha
or
lods
mov
cmpsl
mov
mov
mov
nop
lcall
sahf
mov
negl
jg
stos
push
push
push
jo
pop
pop
outsl
insb
outsl
insl
xchg
subl
mov
lcall
mov
pushl
pop
mov
mov
mov
mov
mov
out
scas
stos
insl
stos
stos
stos
or
add
add
add
add
pop
or
mov
in
mov
nop
call
cwtl
xchg
lcall
cltd
fwait
cltd
fwait
pushf
fwait
sahf
sahf
cli
xchg
xchg
xchg
jmp
xchg
lea
jecxz
orl
cld
xchg
pop
jle
popf
dec
jnp
movsl
inc
js
lods
ss
mov
jb
mov
insl
pushl
sbb
pop
mov
mov
jle
movsl
movsl
push
pusha
pusha
popa
or
mov
lcall
lahf
lahf
jmp
lahf
mov
decl
addb
xchg
jno
cld
xchg
popa
cmp
dec
jp
cmp
xchg
sub
xchg
sbb
cltd
maxps
sahf
punpcklbw
test
push
pushl
sbb
mov
and
pop
xchg
mov
scas
lods
xchg
lahf
sahf
sahf
adc
add
add
popa
popa
popa
or
mov
test
mov
cmpsl
ljmp
test
lcall
cmp
mov
decl
adc
test
pop
decl
add
call
add
or
pushl
jl,pn
mov
das
jg
enter
lret
xor
xchg
inc
test
mov
test
add
add
add
add
pop
or
movsb
test
cmpsl
mov
test
mov
scas
pushl
mov
jmp
inc
jo
mov
pop
decl
or
add
decl
add
xchg
add
mov
add
mov
insb
inc
aaa
cmp
inc
mov
iret
inc
call
inc
nop
call
inc
nop
fmuls
call
bound
stc
mov
mov
mov
incl
add
add
pop
pusha
pusha
or
popf
mov
ljmp
mov
pushl
mov
stos
lcall
push
call
adc
pop
decl
add
lahf
add
add
lods
add
mov
dec
nop
fstps
fistpl
fistps
loop
mov
fildll
dec
test
cld
mov
mov
cmpsb
stos
cmpsl
xor
jg
add
add
dec
dec
dec
pop
jl
jp
pushf
cwtl
cltd
jecxz
mov
mov
mov
mov
mov
mov
mov
sahf
data16
xchg
sub
lcall
and
call
add
lahf
add
cmpsb
add
scas
add
mov
xor
jmp
insl
test
out
lods
call
jb
in
jb
call
test
mov
inc
addb
add
dec
pop
outsb
outsl
imul
test
lcall
mov
mov
sar
mov
jmp
cmp
jmp
sub
call
add
movsl
add
lods
add
mov
inc
or
xlat
inc
xchg
jmp
jns
jmp
mov
push
test
push
mov
fldt
mov
push
cltd
cltd
fwait
add
sub
sub
push
push
dec
pop
gs
loopne
mov
mov
rol
ret
ret
ret
mov
pushf
jmp
inc
jg
mov
push
pop
jmp
add
mov
fs
mov
adc
fbld
in
nop
sar
xchg
ret
push
cltd
push
xchg
enter
enter
lret
cwtl
stos
inc
mov
lods
popa
lahf
lahf
mov
add
xor
inc
pop
pop
pop
pop
fisttpl
mov
mov
ret
ret
ret
pushl
push
mov
lods
dec
test
mov
add
add
mov
mov
add
fsubs
cmp
jp
push
mov
sar
stc
test
cli
stos
iret
sti
stos
sar
lods
sar
stc
cmpsb
int
call
rol
test
sahf
pushf
or
add
add
dec
dec
push
aaa
jb
jae
test
int
out
int
cmc
leave
lret
lret
lret
enter
leave
mov
bound
jmp
add
mov
fs
add
into
add
flds
xchg
push
xchg
mov
std
mov
cld
mov
fdivr
std
mov
fdivr
sti
mov
jmp
lret
rol
scas
lods
lods
mov
add
add
add
add
pop
or
rcl
dec
loopne
loop
loopne
fistps
fcmovu
xlat
out
mov
data16
test
je
movsl
push
pop
ljmp
add
enter
aad
je
jecxz
jl
icebp
dec
mov
std
ret
loope
std
loope
inc
loopne
dec
dec
fdivrp
std
leave
loopne
std
fdivr
out
mov
leave
divb
sahf
sbb
add
add
std
incl
std
std
add
jmp
or
in
in
sbb
jmp
xor
loope
loop
lds
mov
mov
add
mov
arpl
rolb
dec
add
fldl
jbe
ljmp
sti
fdivrp
cld
shl
std
shl
std
shl
call
out
std
xlat
out
fsub
shl
push
enter
int
stc
mov
mov
and
add
add
std
incb
incb
cld
std
std
pop
aam
aam
mov
pop
mov
lahf
or
ljmp
add
les
push
rolb
jo
loopne
jbe
out
and
std
shl
fsubr
cld
xlat
call
cld
xlat
out
cld
std
aam
push
xlat
jmp
rcl
sti
mov
lahf
lahf
das
add
add
into
int
or
fs
mov
add
mov
add
add
loopne
jns
out
das
xchg
push
lcall
stc
leave
loopne
cmc
fsin
repz
repz
std
out
ret
sar
in
sar
in
aam
jmp
aam
in
fsubr
mov
stos
das
incb
aad
push
mov
je
or
imul
pop
jb
int
jnp
xlat
cs
fists
clc
loop
mov
out
jecxz
leave
jmp
fdivrl
leave
faddp
sarl
in
fcompl
out
jmp
rorb
mov
add
stos
stos
stos
add
xchg
movsl
les
push
xchg
mov
xchg
fidivrl
jg
rol
stos
mov
mov
les
aam
int
ror
int
rcl
iret
dec
xlat
xlat
fnstcw
fildll
in
fisubs
in
repnz
in
jmp
fildl
std
add
add
add
incl
mov
mov
outsb
scas
mov
lods
data16
mov
mov
mov
xor
mov
rclb
rol
adc
rcl
or
or
int
add
std
add
std
incb
cltd
lcall
vshufps
into
int3
add
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
ret
enter
leave
leave
mov
ret
mov
mov
mov
stos
lods
lods
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
lods
stos
add
mov
jmp
aam
aad
rcl
sar
int
iret
std
mov
stc
mov
mov
sarl
gs
push
pop
add
add
add
add
add
add
add
add
jb
jno
addr16
inc
dec
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
int
call
rcl
dec
iret
int
enter
mov
scas
scas
lcall
mov
push
add
add
add
add
jne
jae
xchg
aad
jo
ret
bound
insl
insl
outsb
jb
popa
pusha
cmp
pop
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
xchg
lcall
cltd
cltd
lds
jae
es
add
add
add
jae
jae
popf
xchg
lcall
test
xchg
test
addl
push
push
push
inc
mov
pushf
into
mov
mov
xchg
decb
mov
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
movsb
cmpsl
cmpsl
test
cmpsb
cld
mov
xchg
xchg
xchg
cld
popf
sahf
sahf
cmc
lcall
mov
push
push
imul
jg
lea
xchg
notl
mov
mov
lcall
jb
mov
scas
lods
push
stos
lods
lods
add
add
add
cmpsl
scas
test
xchg
xchg
xchg
call
lcall
cltd
lcall
xchg
mov
loope
je
out
xchg
bound
std
fwait
inc
ja
cmpsb
cmp
scas
sub
pushl
sbb
mov
jl
mov
mov
imul
into
add
test
pop
scas
movsl
stos
test
popf
sahf
sahf
jmp
movsl
movsl
call
push
decl
inc
je
lea
push
lea
pop
call
or
scas
sbb
jne
mov
sub
les
xchg
mov
mov
subl
jne
push
mov
mov
cmpsl
ljmp
scas
mov
mov
sub
adc
xchg
push
decl
add
xchg
add
mov
adc
ret
dec
aas
mov
iret
inc
mov
aam
call
push
xchg
dec
cltd
mov
mov
mov
movsb
mov
add
push
xchg
xchg
test
lahf
movsb
cld
scas
lods
lods
pushl
mov
ljmp
cmp
xchg
pop
decl
push
pop
call
add
lods
add
mov
push
xchg
fistpl
jmp
pop
mov
jmp
movsl
call
lcall
cmpsb
cmpsb
test
add
add
bound
adc
popf
fwait
fwait
cld
mov
mov
mov
mov
mov
pushf
dec
jle
popf
xor
lcall
jmp
add
mov
xor
call
jnp
out
jle
out
jg
fstps
mov
and
add
add
adc
imul
mov
mov
mov
ret
ret
mov
bound
lcall
add
jmp
add
pop
insl
fmull
out
lea
push
xchg
xchg
leave
stc
xchg
jmp
cmpsl
mov
movsl
movsl
sub
inc
inc
inc
adc
push
xchg
xchg
cld
ret
inc
ret
vcmpsd
stos
dec
cmp
movsb
add
mov
gs
add
adc
in
insb
scas
push
cmpsl
into
clc
stos
sar
cld
scas
sar
sti
lods
sar
lods
sar
ljmp
fldenv
std
add
jno
inc
mov
mov
rcl
mov
aad
rcl
shr
leave
lret
mov
mov
jmp
inc
add
aam
jno
out
xchg
stc
pop
mov
inc
inc
inc
lock
ret
test
jg
add
add
lods
lods
stos
add
jmp
or
jmp
out
outsb
movsl
outsb
ljmp
add
lret
add
fiadds
sti
mov
dec
in
call
out
call
in
aam
aad
push
leave
aam
int
scas
scas
scas
popa
addb
add
incb
incl
int3
lret
shrb
lahf
sbb
lods
add
mov
add
jecxz
jp
repz
cmpsb
std
enter
aad
cld
out
cld
shl
std
aam
sti
aam
push
fdivr
fmul
shl
mov
mov
xchg
xchg
xchg
pop
scas
mov
cld
lods
add
imul
push
jae
fstpl
jg
ljmp
cli
out
mov
into
bnd
shl
out
aad
ljmp
scas
push
cltd
fwait
cltd
add
mov
pushf
lods
xchg
and
push
mov
shll
lret
mov
mov
lret
vmovdqu
lret
rcrb
rcl
dec
in
loopne
out
call
sbb
mov
mov
scas
arpl
stos
mov
les
les
ret
sbb
fstp
bswap
int
or
aam
push
std
std
incb
addb
add
add
add
rol
incl
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
std
adc
xchg
sub
arpl
dec
mov
rcl
repz
rclb
icebp
mov
fidivs
push
cld
xchg
scas
mov
sbb
and
iret
push
pop
push
xchg
jae
cmc
movsb
mov
pop
in
jl
testl
lds
mov
jp
mov
add
inc
push
pop
mov
gs
xchg
mov
xor
call
or
cmp
adc
outsl
push
mov
lea
in
mov
push
add
jno
lret
xchg
icebp
mov
test
xsha256
cmpsb
push
std
push
popf
cmp
mov
mov
fsubrl
push
hlt
pusha
mull
inc
jle
js
movsl
cmp
cltd
pushf
xor
ret
pop
or
mov
js
inc
fsubrs
jge
xchg
scas
xchg
testb
out
stos
sbb
cmp
push
cmp
leave
push
pop
lock
mov
mov
bndstx
and
add
pop
test
ds
and
outsl
and
push
nop
inc
fcmove
jae
out
mov
sbb
dec
lods
jg
fists
mov
es
fldcw
mov
test
jmp
adc
aas
pushf
xor
push
lods
js
mov
lret
into
gs
xchg
out
push
out
mov
outsb
add
cmp
pop
mov
nop
pop
mov
push
mov
lahf
fnstsw
mov
int3
std
push
push
lds
stc
nop
shlb
dec
jecxz
adc
iret
inc
subb
fs
in
xchg
aad
pop
pop
mov
or
sub
sub
les
pop
mov
pop
dec
loope
mov
es
push
inc
xor
push
push
jmp
inc
movsb
cmp
jb
xchg
ret
notl
ja
dec
scas
insl
pusha
mov
ja
andl
push
clc
lahf
xchg
sub
sbb
mov
and
sti
xchg
mov
les
in
xor
mov
or
sub
jae
pop
sub
mov
dec
ffreep
or
mov
jecxz
std
adc
aaa
mov
add
mov
xor
xchg
sub
jbe
mov
mov
adc
in
inc
add
arpl
fsubr
orl
sub
lahf
pop
sti
jmp
sub
dec
or
add
stc
push
repz
fsubl
arpl
jbe
sahf
xor
leave
sbb
ss
cmp
stc
nop
hlt
nop
adc
stc
nop
adc
ss
scas
addr16
xor
or
ficoml
or
sub
mov
inc
in
es
into
gs
lods
inc
add
in
orl
mov
stos
ljmp
mov
std
push
inc
fldl
mov
inc
ret
stc
hlt
dec
mov
sbb
mov
ss
push
out
inc
cli
xchg
jae
fdivl
xchg
sbb
xchg
out
int
mov
scas
out
push
jmp
or
into
cmp
push
in
mov
nop
daa
shrd
fbstp
scas
inc
bound
xchg
sub
or
mov
mov
test
ljmp
sub
lahf
pop
cli
in
subl
mov
jle
inc
lahf
sub
push
icebp
inc
frstor
jae
sbb
lahf
ss
xchg
sbbb
sbb
aaa
sbb
jae
cmp
xchg
repnz
jae
adc
mov
loope
xchg
adc
into
xchg
xor
scas
push
mov
cmp
pop
inc
fimull
xchg
xor
sarl
mov
sub
rol
jns
pop
add
pop
xchg
insl
add
ret
hlt
mov
pop
jecxz
mov
push
jmp
xchg
shrl
ret
repz
repz
nop
sarl
xchg
das
js
pop
popl
lcall
jne
popf
cs
in
pop
mov
jbe
lds
int
push
pop
icebp
pop
mov
xchg
fbstp
and
push
call
scas
rcr
je
iret
in
std
sub
xor
int
push
jns
xor
iret
dec
in
ret
jecxz
cmc
sbb
push
inc
insb
push
lods
cltd
gs
xchg
mov
sbbb
adc
lret
rcrl
ja
cwtl
popa
fbstp
mov
std
xchg
in
ds
outsb
inc
mov
jne
cmc
mov
test
mov
and
stos
pop
push
daa
mov
add
je
dec
pop
push
in
mov
adc
lret
and
lods
inc
mov
jne
or
jo
dec
pop
shrl
cwtl
rcrl
mov
dec
dec
xor
test
sbb
or
jge
and
fisubl
es
dec
sub
jge
jns
rep
scas
inc
xchg
cs
dec
iret
data16
xchg
sub
lods
sub
scas
inc
push
mov
pop
scas
popa
cmp
push
rcrl
push
out
hlt
cmp
popf
xor
mov
cltd
xor
cmp
add
lds
clc
inc
mov
je
pop
mov
fwait
xor
dec
movsl
cmp
sbb
dec
stos
dec
in
fsubrl
push
inc
fiadds
and
adc
add
add
add
and
xchg
sub
sbb
sub
sti
test
sub
cmpsb
scas
rep
cmp
jns
mov
sub
out
cld
mov
fsubrl
jg
push
scas
or
mov
mov
leave
pusha
add
notb
mov
fs
outsb
jno
lahf
push
es
popl
cwtl
mov
outsb
dec
out
sbb
jl
fucomp
jg
push
out
xchg
xchg
sti
xchg
leave
jecxz
data16
jbe
add
xor
hlt
mov
pop
stc
nop
mov
push
cmp
iret
sbb
xchg
or
jne
sbb
mov
add
scas
push
call
xchg
icebp
pop
and
xor
into
in
jne
and
je
out
pop
sahf
sbb
adc
inc
and
mov
enter
push
ljmp
jp
xor
or
pushf
xor
push
aam
addb
push
xor
cld
sub
xor
xchg
mov
ss
dec
or
inc
fwait
aaa
into
shlb
add
icebp
push
in
es
xchg
sub
push
inc
xchg
scas
mov
fdiv
xchg
out
bound
mov
cltd
in
repnz
mov
loop
add
lahf
outsl
cmp
mov
loop
pop
fistpll
fsubrs
mov
push
jecxz
insl
and
mov
xor
in
popa
clc
and
popf
jnp
jecxz
cs
xchg
fdiv
shrl
inc
insl
jb
xor
sub
repz
icebp
jns
and
or
imul
jnp
aad
and
pop
cs
adc
es
sub
testl
dec
das
jl
fdivl
cmpsb
inc
xchg
sahf
xor
test
daa
mov
cmp
enter
lea
iret
adcl
out
pop
call
adcl
rcrb
scas
lea
cltd
jnp
add
gs
out
mov
and
sbb
jns
aaa
into
mov
fistpll
rorb
fsubrs
xor
dec
js
mov
fidivl
shrl
rolb
or
push
fidivs
ja
stos
movsb
jbe
rol
dec
mul
cmpsb
mov
dec
xor
lahf
gs
or
ret
xchg
lods
hlt
fnstenv
dec
dec
sub
xchg
xchg
cs
fisubrl
lds
bswap
gs
pop
testl
fcmovbe
les
std
inc
sub
jno
dec
stos
inc
addl
lock
or
adc
sub
mov
jge
ds
sahf
fsubr
iret
lret
sub
std
lock
and
fsubr
push
inc
push
and
mov
les
push
push
adc
testl
les
inc
ficoml
add
cmc
mov
data16
lea
scas
inc
loopne
inc
fmuls
push
xor
aaa
das
pop
negb
gs
sub
push
in
pop
out
aam
and
push
pop
push
xchg
stos
rorb
mov
cmpsl
sbb
dec
push
jns
nop
lods
iret
mov
je
push
push
lret
sti
leave
stc
nop
sti
sbb
jle
xor
lock
les
sbb
repnz
inc
lock
sub
cli
jl
insl
testl
xor
jle
or
mov
sti
push
sbb
mov
or
test
or
xchg
inc
mov
gs
movsl
jbe
mov
jbe
shrb
mov
stc
js
mov
dec
bound
add
repz
or
ds
and
jmp
xor
and
add
pop
xor
xchg
jne
leave
repz
mov
negb
mov
sbb
xchg
mov
gs
lahf
test
push
and
xchg
ret
int
cmpsl
mov
std
repnz
cltd
aam
js
xor
dec
cmp
fsubr
cmc
jbe
and
shll
lds
cld
push
mov
or
test
imul
scas
add
pushf
insb
dec
pop
mov
in
cmp
loop
xor
mov
jae
movsl
in
fstl
jg
dec
lahf
adc
push
mov
into
adcl
xchg
or
inc
je
sti
jle
lock
xor
jle
call
lahf
insl
adc
xor
imul
arpl
insl
inc
adc
loop
mov
mov
push
xchg
loope
ficoms
lea
in
sbb
rcl
push
mov
jbe
push
addr16
iret
sub
fisttpl
mov
mov
cmpsb
sbb
sub
int
cmp
popa
dec
sti
sar
jns
pop
movsl
int
push
jmp
push
inc
stos
and
stos
xor
xchg
dec
icebp
movsl
loope
mov
jbe
push
jne
loopne
lcall
sbb
or
nop
ds
sbb
mov
pop
push
test
pop
lods
cmpsl
push
mov
mov
or
cmp
stos
call
cmp
icebp
inc
sbb
jae
fnstcw
add
jb
push
popf
and
push
cmpsb
std
outsl
push
jne
lods
xchg
add
lcall
pop
jecxz
mov
adc
movsb
pop
popf
xor
push
arpl
xor
mov
xchg
rcrl
add
fidivrs
incl
mov
xchg
lcall
aas
cmp
scas
push
adc
jge
jmp
xor
repnz
adcl
cmp
in
data16
idiv
jb
pop
enter
and
xchg
fisubrl
cs
fwait
and
xor
push
dec
cmc
push
scas
loopne
mov
cmpsb
gs
or
xor
jno
ss
in
xlat
cli
data16
dec
jns
addb
mov
sbb
pop
xor
inc
fldcw
mov
sti
leave
int
add
adc
xor
adc
mov
rol
mov
call
jo
mov
push
out
or
xchg
add
push
mov
or
enter
inc
jmp
movsb
cmp
push
scas
or
mov
jo
sbbb
and
in
lods
inc
and
insl
add
dec
fidivs
ret
in
cld
xchg
ret
or
sbb
lods
cmp
iret
dec
xchg
push
in
xchg
rolb
jno
je
mov
and
sub
xor
and
push
call
out
mov
sbb
or
test
mov
mov
push
out
sar
lret
bound
sbb
inc
sub
adc
data16
push
std
pop
sahf
jnp,pt
sbb
fisubl
lret
mov
xor
popa
clc
stos
pop
shrl
ret
jg
cmp
pop
mov
outsb
lcall
mov
dec
loope
push
call
call
testl
imul
pop
lea
and
jp
pop
hlt
les
add
fdivrp
xchg
and
mov
sahf
dec
sbb
jae
test
roll
xchg
pop
mov
pop
out
pop
xlat
aad
mov
jbe
cwtl
loopne
mov
lahf
les
mov
aad
sub
jb
dec
dec
loop
jge
nop
xchg
ja
add
xchg
fiadds
ss
mull
jmp
arpl
or
nop
daa
aas
add
xchg
jns
mov
xor
sar
addl
or
gs
mov
lods
lea
int3
mov
stc
cmc
in
outsb
pop
pop
inc
fcomps
add
js
pop
divb
and
enter
std
loope
xor
push
dec
in
adc
add
fsubrs
fisttpll
lea
aad
stos
cld
xlat
outsb
in
push
xor
cmpsb
or
cltd
mov
int
mov
dec
outsl
push
mov
ret
cmp
dec
loope
fldcw
call
add
jle
dec
add
popf
inc
bound
mov
mov
leave
sub
in
inc
dec
loop
cmpsl
jnp
clc
xchg
imul
in
mov
inc
push
mov
cmp
cmp
pop
mov
int3
loop
pop
push
and
inc
pop
xor
lahf
outsb
push
mov
mov
cmp
in
jle
push
push
pop
repnz
das
pushf
xor
jb
adc
xchg
sarl
pop
test
shrl
inc
and
jne
add
pop
cmpsl
pop
mov
inc
push
jmp
jmp
aam
fiadds
repnz
push
mov
adc
idivl
das
xchg
int
jae
mov
ljmp
jge
lahf
sbb
mov
adc
jp
xor
mov
repz
fisttpll
and
jnp
fimull
add
cltd
xor
fidivl
ds
jbe
jl
js
pop
popf
addb
je
shlb
xchg
adc
hlt
xor
lds
pop
or
repnz
sub
jle
jns
pop
cwtl
dec
loopne
jbe
cs
out
push
mov
call
adc
jnp
push
movsb
cmp
add
add
stos
push
sub
ja
jge
leave
fsubrl
mov
stc
enter
and
adcb
dec
cmp
js
sahf
xor
or
jbe
pop
ror
popa
mov
shr
jg
mov
mov
fcoml
cmpsl
sbb
adc
push
inc
xlat
add
cmc
mov
push
sub
jl
cltd
inc
mov
xor
pop
cmpsb
cmp
daa
mov
pop
loope
pop
add
jecxz
fwait
sub
mov
mov
pop
mov
lret
pop
ds
cmp
jb
pop
repz
fdivrs
leave
outsb
js
ret
das
adc
testb
add
ja
movb
mov
xchg
mov
fs
add
sbb
add
cs
aas
xchg
nop
daa
gs
pop
out
mov
jbe
adc
arpl
xchg
mov
mov
ret
scas
sub
or
add
out
test
popa
clc
sub
mov
push
shrl
sbb
dec
fildll
lods
inc
xor
pop
lret
pop
test
outsb
mov
scas
jle
mov
and
aam
mov
stc
mov
repnz
fsubrs
out
and
cmpsl
aaa
pop
mov
mov
lods
inc
mov
fxch
bound
push
data16
nop
or
mov
mov
fsubs
fldcw
ret
dec
ss
push
insb
insb
add
jl
xchg
sbbl
mov
cmp
cmp
pop
daa
xchg
pop
repnz
inc
out
jns
das
outsl
repz
dec
mov
popf
sbb
mov
mov
aas
test
enter
dec
in
ss
inc
or
add
mov
int3
and
pop
xlat
inc
xlat
add
outsb
push
sub
popa
jg
mov
jl
sti
cmp
mov
adc
xor
cmp
push
lret
ret
ftst
xlat
outsb
add
imul
sub
mov
mov
dec
jnp
stos
bound
lds
dec
out
dec
out
adc
imul
lds
call
jno
sbb
add
icebp
sub
enter
stc
loope
loope
adc
incl
lds
xchg
mov
aam
cwtl
sti
fdivl
mov
xchg
in
sbb
aaa
add
jnp
adc
in
lods
xor
inc
push
cltd
xor
push
in
push
mov
dec
ds
add
data16
cwtl
adc
xorb
rcrb
es
dec
ds
fildl
push
out
xlat
push
stc
xchg
icebp
test
mov
mov
xor
inc
aas
mov
jbe
fcmovu
jno
in
test
daa
clc
jo
or
int3
lcall
sti
xor
repz
push
in
insl
sbb
cmp
jno
scas
cmp
es
scas
inc
xchg
int3
arpl
sahf
in
cmp
ljmp
sbb
dec
outsl
ss
popa
push
out
xchg
pmulhuw
push
stos
ret
jge
inc
push
loopne
xchg
test
arpl
fsubr
xor
pop
or
mov
daa
mov
cmp
inc
fcoml
popa
push
cli
inc
push
xchg
scas
cmp
mov
ret
pop
sbb
cmp
push
pop
lret
cmp
test
cmpsb
or
js
shl
lock
sub
dec
fildll
les
xchg
mov
test
jo
test
cltd
mov
cmp
fdivs
pop
sub
into
gs
fbstp
sahf
clc
pop
push
std
xchg
lcall
mov
lock
icebp
cmp
or
fs
andb
out
pop
stos
sbbb
jb
or
jnp
aaa
mov
fisubrl
dec
clc
fmul
arpl
adc
mov
movsb
adc
arpl
mov
ljmp
sbb
mov
test
mov
jae
inc
fsubl
iret
arpl
add
lret
bound
xchg
aam
lahf
ss
sbb
pop
jbe
mov
dec
arpl
or
es
fidivrl
sbbl
je
and
mov
mov
add
or
jo
sub
in
inc
nop
mov
fisubrl
adc
add
mov
fistl
test
fisubrs
pop
repz
sti
xchg
cs
addr16
xor
dec
adc
adc
mov
xchg
push
mov
test
cmp
cmp
jmp
push
in
fsubrl
xor
sbb
xchg
sub
ds
imulb
test
mov
mov
xor
add
jle
xor
testl
shrb
pop
pop
pop
and
mov
ds
or
mov
sti
cmp
lret
add
mov
dec
scas
sub
mov
push
iret
dec
jmp
jcxz
add
ds
cmp
pop
arpl
gs
lea
rcll
int3
xchg
mov
fistpl
mov
xchg
sbb
dec
les
dec
inc
test
cmp
sarb
sub
jnp
scas
movsb
or
xchg
popa
or
dec
aas
pop
and
or
aad
mov
pop
mov
inc
gs
addl
dec
mov
pusha
or
mov
sub
jbe
dec
imul
loopne
mov
jle
mov
inc
xor
aad
push
sub
adc
shlb
sbb
icebp
fisubs
aad
sti
testl
aaa
insb
mov
paddq
xchg
fcmovne
jmp
push
bound
xchg
mov
or
fs
pushf
je
arpl
push
mov
aad
sbb
test
mov
jl
dec
out
dec
push
mov
dec
inc
idivb
test
xorl
dec
stos
push
cs
inc
push
inc
xchg
sti
mov
sahf
aad
cmp
hlt
cmpsb
dec
xor
push
sub
loop
in
dec
test
and
fdivrl
out
outsl
push
mov
adc
lret
cmp
xchg
movsl
js
dec
jl
add
push
mov
mov
push
cmc
sahf
mov
stos
stc
fwait
xor
ficoml
mov
sub
test
sbb
addr16
jmp
bound
sub
stos
mov
repz
jl
out
or
nop
mov
push
xor
xor
ret
pusha
jecxz
out
not
int3
movb
rclb
xchg
pusha
mov
and
cmp
adc
add
cmp
lock
pushf
add
test
divb
push
sarb
shrl
inc
mov
ljmp
mov
repz
aaa
out
jg
mov
ret
pop
xchg
add
jnp
mov
stos
or
push
xor
mov
ja
mov
mov
shl
loop
lcall
xor
xchg
in
lods
mov
and
je
adc
test
insl
enter
pop
jle
negb
aam
dec
mov
and
xchg
mov
jp
mov
clc
xor
sbb
stos
mov
stc
ljmp
aad
ss
and
jns
jns
test
imull
clc
sub
xor
aaa
cli
pop
bound
popf
sbb
adc
bound
ljmp
outsb
test
sub
mov
pop
stc
jmp
cmp
idiv
adc
js
test
aaa
call
jmp
fld
out
mov
add
mov
cmc
sbb
aad
mov
xor
pop
jecxz
adc
mov
sarb
mov
mov
mov
pop
ss
in
jge
movsb
fdivrl
mov
adc
xor
into
cmpsl
aad
movsl
jns
cmp
shlb
push
mov
cwtl
push
stos
mov
push
inc
xchg
out
ljmp
sti
stc
cmp
loop
aam
cs
mov
in
out
mov
pop
xor
mov
jmp
sub
cmp
inc
add
ljmp
mull
xchg
jno
sbb
addr16
imul
cs
xchg
iret
imul
mov
or
out
fidivl
imul
ljmp
outsb
xchg
push
fs
les
fisubrl
stos
std
jl
push
dec
imul
xchg
pop
mov
dec
iret
or
fs
movsl
lret
sub
int3
scas
or
cmp
lea
data16
jbe
cmp
jnp
cmp
cwtl
fsts
mov
sub
sti
push
mov
out
pop
out
arpl
shll
dec
sub
mov
cmpsb
mov
leave
xor
sarb
aas
bound
aas
imul
cmpsb
data16
and
lds
push
mov
mov
push
mov
imul
cmpsb
or
ss
cmp
pop
jno
loopne
jns
dec
dec
push
push
and
mov
cmp
sub
adc
mov
shlb
sbb
xchg
std
inc
xor
dec
or
jecxz
and
jge
stos
test
mov
jmp
and
ret
or
sbb
mov
sub
xchg
or
ftst
xor
mov
lahf
cmp
xchg
les
push
ljmp
fmull
scas
dec
icebp
xchg
adc
mov
into
add
push
loop
jns
in
add
in
dec
aad
xor
loope
in
sarb
or
in
xchg
and
add
mov
jnp
push
lret
push
mov
xchg
push
sub
xor
push
or
divb
xchg
decl
jg
sub
gs
xor
lret
and
adc
je
push
aad
insb
lods
jo
mov
mov
test
mov
xchg
inc
mov
jl
cmp
and
cmp
mov
sub
cwtl
mov
sub
enter
mov
sub
pop
cld
bound
pop
sbb
fwait
adc
shll
inc
sbb
push
jnp
lds
out
je
ret
sbb
lcall
int3
andb
cmp
test
push
add
add
cmc
cs
dec
inc
fwait
sbb
mov
mov
sbb
xor
mov
sub
test
push
fs
and
pop
jno
insb
test
test
adc
aad
into
jns
adc
inc
jmp
test
and
inc
cmpsb
push
mov
pop
push
arpl
mov
mov
hlt
stos
pop
push
inc
add
shl
adc
jbe
mov
or
mov
add
mov
shrb
mov
xchg
jne
dec
jg
push
and
rorl
sub
data16
fsubs
mov
jne
outsb
mov
movaps
add
jbe
pop
or
mov
aaa
pop
cmpsb
sub
lods
jns
inc
xor
rol
mov
ret
sbb
mov
dec
pop
std
pop
jle
loope
push
imul
test
and
mov
pop
mov
cmp
dec
mov
jle
dec
and
dec
or
repz
andl
dec
sahf
aas
out
fstpt
inc
inc
movsl
jle
sub
jecxz
ret
fmuls
mov
jg
xor
inc
push
push
mov
push
ds
pop
cmp
inc
dec
mov
fbstp
sub
jnp
iret
add
sub
je
mov
andb
inc
push
lock
dec
fisubrs
pop
adc
repnz
daa
ret
dec
rsm
and
cmp
fidivl
lret
inc
call
out
mov
mov
shlb
pop
fwait
and
rcrl
sbb
es
push
mov
sub
bound
out
aaa
cmpsb
shr
jae
xchg
and
pop
sbb
mulb
add
out
jno
out
test
insl
call
adc
and
icebp
inc
pop
dec
push
rorb
in
cmp
push
jmp
sarb
sbb
mov
fisubl
fnsave
push
xor
mov
add
jg
adc
test
and
cmp
jne
les
fisubs
aam
xor
adc
jp
adc
call
fidivrs
insb
xchg
test
sbb
movsb
mov
sub
push
pop
rolb
mov
and
xorb
mov
mov
movsb
jae
into
stos
push
pop
push
sbb
sbb
jnp
pushl
mov
in
pop
into
fsubrs
pop
int
stos
push
rorl
pop
popa
cltd
stos
lahf
adc
out
xchg
dec
loop
and
jmp
mov
fcoms
enter
jp
dec
mov
fisttps
daa
add
out
cmp
hlt
push
mov
inc
dec
lahf
jbe
fbstp
push
pop
lock
or
pusha
xchg
insl
mov
push
or
test
sti
inc
sbb
out
test
jmp
pop
jae
rol
out
push
xor
cmp
sub
outsl
lret
inc
lock
xor
lret
mov
push
sahf
pop
lods
pop
jns
push
push
jb
dec
pop
insl
es
dec
inc
or
testl
les
cmp
loope
dec
cmp
mov
loop
mov
dec
stc
test
outsb
fwait
std
scas
sub
popf
rcl
jp,pn
lods
pop
push
xchg
jbe
mov
aaa
sub
sub
insb
jg
sahf
mov
in
cmpsl
jecxz,pt
jmp
push
aaa
das
fiadds
or
jne
add
adc
pop
sbb
sbb
push
jnp
push
ja
sub
test
mov
int3
test
cltd
in
nop
fdivp
or
mov
mov
add
pop
or
mov
lret
pusha
frstor
inc
lods
cmp
pop
imul
lcall
je
pop
dec
and
mov
adc
lods
xchg
sub
clc
cmp
sub
test
repz
sbb
lods
aam
add
or
sti
lods
aad
pop
fucom
sub
rcr
mov
mov
cmp
sbb
into
out
aad
rcrl
movsl
clc
cld
nop
mov
clc
outsb
and
mov
xchg
rcrb
mov
je
cs
cmpsb
mov
cld
stos
dec
in
add
mov
sbb
dec
es
aad
xchg
jmp
imul
lods
fstl
xchg
xchg
rcrb
lods
fwait
sub
stos
popf
jb
out
xor
inc
xchg
sbb
inc
adcb
rcrb
push
xchg
jns
pop
mov
push
sbb
mov
mov
cmp
mov
rorl
ja
cmp
mov
pop
adcb
mov
xchg
nop
cmp
pop
cmp
jns
ret
aam
push
mov
mov
xchg
add
add
sbb
clc
jae
or
jecxz
negb
inc
and
and
rcll
mov
ss
mov
lock
xchg
shlb
or
int
jb
dec
ss
mov
cmp
lods
aam
add
xor
pop
jns
inc
push
push
xchg
mov
ss
lods
in
lret
test
shr
xor
rol
mov
mov
lahf
mov
jl
xor
cmp
mov
mov
lcall
fstl
mov
arpl
pop
fwait
dec
xor
in
hlt
in
inc
gs
rcrl
lds
xchg
push
jl
xchg
fucompp
lcall
add
or
and
dec
and
fistl
loope
js
sbbl
cltd
rcrb
pop
xor
fadds
inc
pop
cmp
dec
imul
or
cwtl
push
mov
mov
sbb
subl
pop
fbstp
sbb
call
mov
xor
mov
mov
mov
sub
xlat
mov
loopne
push
flds
inc
xchg
dec
test
xchg
or
adc
push
icebp
inc
das
jnp
int3
pop
ljmp
popl
aad
lods
popf
push
fdivrp
inc
decb
inc
or
jae
sub
fs
xor
outsb
js
xor
push
lcall
or
scas
lock
mov
scas
push
push
das
pusha
push
andb
xchg
cmpl
ja
sub
das
sbb
sbbb
and
in
xchg
insb
cmpsb
mov
pop
add
xor
test
lahf
stos
inc
rcll
sub
push
xchg
int
mov
jne
cmp
ds
ljmp
push
lahf
push
out
icebp
inc
jbe
mov
pusha
ljmp
pop
movsb
adc
jbe
mov
movsb
pop
mov
push
fsubrl
ss
mov
dec
leave
movsl
int3
leave
shll
mov
jns
ret
daa
loop
cmp
imul
fcmovnu
clc
int3
jp
outsb
push
sub
stos
xor
lods
mov
xor
add
jg
cmpsb
push
mov
push
std
mov
mov
xchg
dec
faddl
in
pusha
aad
call
pop
shlb
shr
les
jmp
and
jnp
cmp
popf
lods
push
jle
add
stos
pop
jmp
cwtl
mov
sbb
adc
cmp
xchg
pop
popa
and
sbb
push
addr16
enter
ret
lcall
fstpt
inc
add
lds
mov
lock
cmpsb
adc
xchg
cmp
pop
aad
inc
in
xchg
jnp
call
inc
loope
cmp
aad
lahf
ret
insb
jnp
sahf
mov
ret
xor
push
jne
cmp
dec
or
or
adc
imul
jbe
pop
rcll
sub
outsl
dec
mov
mov
mov
outsl
and
mov
push
lahf
int
push
add
cmc
inc
jbe
stc
xchg
sub
cmpsl
mov
dec
int3
jg
jno
adc
jnp
lcall
mov
and
jl
sbb
jae
test
inc
sbb
mov
idivb
jo
fiaddl
add
push
xlat
orb
lods
in
in
mov
xchg
pop
adc
mov
sahf
fistl
test
xor
sbb
and
and
int
cmp
cmp
scas
sbbl
add
addr16
mov
mov
xor
mov
in
inc
not
lahf
and
outsl
push
xchg
inc
es
cmpsl
mov
imul
xor
int3
das
jns
sbb
lods
mov
arpl
or
sub
js
push
mov
or
out
pop
cli
inc
add
or
push
cwtl
mov
scas
push
pop
popl
push
jmp
mov
jl
rcll
vandpd
lds
mov
mov
adc
mov
and
sti
sbb
movsl
loopne
cmpsl
sbb
sub
jl
sahf
dec
adc
dec
icebp
roll
adc
sti
cmp
pushf
mov
push
test
and
inc
sub
vxorpd
jmp
imul
pop
insl
cwtl
repnz
mov
adc
ds
arpl
dec
nop
fldl
popa
popf
loope
xor
imul
cmp
aaa
fnstenv
call
addr16
jmp
or
cmp
jge
and
push
sub
pop
push
nop
inc
stos
pop
xor
dec
xchg
mov
adc
sub
mov
and
cmpsb
sahf
inc
movsb
xchg
jnp
mov
ret
mov
push
pop
cmp
test
xchg
xchg
or
mov
adc
lcall
or
out
jp
pop
and
sub
mov
mov
fdivl
sti
xlat
sub
data16
and
xor
movsb
sbb
out
iret
cwtl
adc
pop
mov
mov
mov
sub
xor
mov
test
adc
testl
add
addr16
xchg
sub
pop
mov
nop
shll
and
pop
sahf
pop
fadds
les
inc
je
fs
rclb
neg
call
int3
fwait
insl
or
xchg
push
imul
outsb
test
daa
pop
imull
jbe
inc
loopne
loop
mov
mov
xlat
paddq
xchg
test
xor
in
lahf
sub
jb
push
xchg
xchg
cmp
lcall
mov
fstpt
mov
cmp
inc
dec
pop
popa
xorl
aas
mov
das
jl
dec
push
push
mov
out
jp
jnp
push
inc
and
movsb
bound
sbb
sub
jae
nop
shrb
js
lret
sbb
in
ret
sbb
jne
lods
pop
xchg
loope
wbinvd
dec
mov
outsl
mov
frstor
mov
fstpt
inc
dec
movzwl
in
dec
adc
mov
or
mov
shlb
sub
mov
lods
mov
inc
movsl
into
dec
inc
jle
pop
sbb
push
sbb
jp
insl
mov
cmc
cwtl
test
mov
lret
out
fstpt
jmp
add
std
pop
outsl
and
jnp
mov
adc
xor
ret
add
push
add
mov
pop
mov
aam
stc
insb
adcl
fs
mov
cmp
cmp
sahf
jb
push
hlt
mov
xor
in
test
inc
cmp
shr
fstpl
dec
sbb
fistpl
sub
add
repnz
test
xchg
mov
orb
pop
fbld
add
mov
or
jnp
rep
lret
out
and
mov
pusha
call
repz
jbe
dec
mov
cmp
fnstsw
xor
add
and
pop
jo
cld
dec
cmp
push
push
push
mov
adc
sbb
loop
out
add
divl
es
xchg
rcrb
add
jge
and
adcl
fstpt
push
mov
or
push
or
enter
push
scas
cmp
cmp
movsl
inc
dec
sub
lcall
push
loop
add
ror
fldcw
in
testb
jecxz
dec
cmp
fisttps
repz
dec
xor
mov
movsb
adc
push
jno
cvttps2pi
xorl
sub
arpl
mov
jge
xor
aad
sub
mov
xchg
push
movsl
lcall
stc
je
orb
fs
xor
movsb
cmc
jnp
push
jae
movsl
mov
jo
or
mov
sub
mov
clc
movsl
jmp
mov
ret
xchg
pop
ss
icebp
pop
pushf
dec
movsl
test
adc
or
adcb
stc
push
and
mov
or
std
insl
les
or
dec
jne
ret
and
mov
push
shr
iret
hlt
xchg
add
hlt
test
je
sbbb
xchg
insb
mov
dec
imul
ret
aam
pushf
xchg
scas
adc
sahf
aaa
cmp
push
shll
or
lock
int3
adc
pop
lcall
sbb
push
mov
xlat
and
sub
stos
jecxz
scas
sbb
addr16
je
clc
mov
pop
lret
addl
jns
jno
jae
shll
jne
mov
cld
sahf
jecxz
subl
ja
add
fistps
fsubrs
mov
xchg
sbb
or
dec
stos
lock
sub
nop
sub
xor
sbb
xor
call
xchg
adc
in
dec
dec
jp
xchg
mov
mov
cltd
imul
adc
stos
dec
or
mov
sub
test
jle
es
mov
xor
fidivrl
cmp
push
imul
cltd
mov
scas
outsl
mov
cltd
sbb
stc
cmp
sub
add
mov
add
in
dec
insb
dec
and
outsb
insb
fldenv
pop
das
adc
dec
jo
pop
and
lret
mov
pop
fs
push
sbb
dec
cmp
jae
ljmp
jle
inc
push
push
aas
test
insb
rol
mov
aas
rep
inc
pop
adc
rolb
add
mov
scas
popf
push
or
int
or
gs
pop
cltd
mov
cmp
sub
xor
push
inc
pop
nop
clc
jnp
in
jne
jb
mov
mov
in
test
jmp
sar
and
fwait
jne
fwait
fwait
mov
js
jns
stos
fsubrs
ljmp
test
lods
notl
and
xor
push
pop
aaa
xchg
xchg
hlt
rolb
insl
add
call
daa
jecxz
inc
dec
and
jge
xor
fs
cmc
test
jmp
mov
sub
cmp
sub
sub
or
cmc
mov
pushf
negl
cmc
out
call
mov
cmp
test
out
daa
add
xor
lods
ret
mov
stos
add
iret
push
sbb
imul
pop
popa
lret
jns
cmpl
pop
adc
sub
loope
or
test
pusha
ljmp
push
cmpb
outsl
xchg
dec
and
xchg
pop
add
mov
leave
setbe
fsubs
cld
jecxz
out
outsl
inc
inc
test
xchg
scas
or
mov
repz
adc
jae
fldln2
mov
dec
addr16
jmp
push
mov
mov
fdivrl
push
loop
filds
mov
fs
pop
test
xor
lea
frstor
mov
inc
popa
cli
cld
icebp
or
lahf
push
div
sub
sarl
sub
repnz
pop
jnp
sbb
es
lret
push
add
mov
cs
xlat
lahf
xchg
xor
sub
cmp
mov
imul
icebp
test
and
jecxz
imulb
mov
xorl
arpl
xor
flds
enter
subb
daa
cmpsb
mov
es
ja
mov
test
inc
push
inc
cmp
xor
shll
cli
lock
dec
push
lock
adc
shrd
insl
aas
test
dec
pop
inc
push
cmpb
dec
add
mov
xchg
xorb
push
imul
stos
loop
push
and
rcrl
xlat
in
dec
jbe
ljmp
punpckhbw
xchg
adc
mov
loope
icebp
ds
lcall
and
pop
mov
cmp
and
push
adc
fbld
fwait
imul
ficoml
xor
fwait
jo
adcl
adc
xchg
insb
lods
adc
in
push
pop
jle
cmp
sti
cmc
in
push
arpl
cmp
ja
hlt
push
lock
adc
adc
xchg
xchg
cmp
subl
out
mov
and
dec
cmp
mov
fcoml
mov
pop
arpl
jle
mov
lods
ror
cmp
adc
and
or
jle
repz
fdivrl
adcb
jmp
in
int3
cs
into
adc
push
push
xor
cmpsb
stos
cmpsl
push
mov
and
dec
cli
fs
mov
jbe
cmpsb
jno
add
sarl
mov
push
div
subb
scas
mov
inc
cwtl
lea
inc
dec
je
xor
mov
mov
into
dec
icebp
lret
lock
mov
add
or
orb
pop
fisubrl
mov
push
fucomi
call
or
sbb
mov
ja
push
lods
or
popf
mov
jno
call
mov
cmp
shll
mov
inc
mov
fptan
fisubl
mov
dec
inc
js
sbb
cs
cmpsl
jnp
imul
sahf
repz
fnstenv
out
shll
test
and
inc
lcall
xchg
push
loope
shlb
sub
sarl
mov
mov
jle
nop
aam
cwtl
clc
leave
ss
mov
jle
cmp
inc
shl
inc
push
jmp
cltd
jmp
vpsllq
push
mov
test
bound
push
aam
sti
adc
icebp
pusha
insb
add
and
lods
mov
inc
cmp
push
push
lods
adc
scas
sub
iretw
pop
inc
lahf
xor
add
pop
pusha
clc
clc
fs
jge
lds
inc
and
mov
jp
or
add
pop
faddl
fadds
push
mov
sub
lea
stos
icebp
cltd
sbb
mov
or
cltd
loopne
mov
rcr
test
shlb
mov
insl
inc
dec
jle
inc
cmpsl
push
push
sub
and
mov
inc
es
rcr
sub
jne
sub
jmp
dec
xchg
fsubr
mov
hlt
lcall
cld
mov
punpckhdq
imul
lods
sub
adc
leave
fdivl
pop
ds
scas
roll
pop
push
bound
inc
insb
into
lret
jecxz
shrb
and
jbe
and
cwtl
jb
call
inc
into
scas
add
lcall
test
push
mov
xor
push
fistps
hlt
daa
movd
in
test
jp
mov
addr16
imul
xlat
out
movsl
arpl
xchg
or
sbb
icebp
dec
and
xchg
in
adc
sbb
xlat
dec
push
jecxz
fsubrl
mov
lret
cmpsb
out
cmpb
in
jno
sbb
lcall
ss
scas
nop
in
call
jecxz
loop
xor
mov
lcall
mov
or
movsl
inc
mov
inc
js
cmp
and
jno
add
call
fildl
div
jle
addb
xchg
xorl
and
syscall
add
imul
ss
dec
iret
sbb
divl
mov
xchg
insl
stos
hlt
sbb
pop
dec
andl
mov
popa
ljmp
jo
and
fdivrs
add
jb
sub
cmp
sti
popa
cltd
xchg
and
mov
cmpsb
lahf
int
add
jle
jmp
out
xchg
xchg
scas
mov
inc
adcb
lock
jl
mov
cmp
js
cwtl
fs
inc
jb
cli
xchg
push
outsl
aam
in
jp
shll
sbb
test
xor
decl
filds
cmp
cmp
test
mov
out
or
outsb
stc
out
sbb
inc
jg
add
push
out
sarl
loopne
clc
bound
inc
sub
out
sbb
iret
pop
push
adc
sub
mov
lods
cmp
cli
mov
std
movsb
insb
xchg
xchg
or
add
psubw
dec
mov
inc
add
or
test
lahf
bound
js
mov
xchg
push
jp
inc
js
push
push
and
jne
out
jmp
pop
mov
pusha
jb
and
cmp
mov
cmpl
jmp
xchg
mov
mov
pop
or
dec
lahf
push
cmp
xchg
jecxz
mov
adc
aad
or
xchg
out
push
fdivrl
mov
pop
sub
xor
pop
pushf
dec
push
or
insl
fcomps
cmp
leave
out
sbb
adc
pop
out
sub
xor
mov
push
out
mov
pop
dec
ds
add
stos
loopne
adc
pop
inc
xor
and
inc
pusha
lea
add
hlt
aam
mov
cmpsb
lea
add
data16
jno
stos
push
mov
imul
sub
pop
das
enter
stos
in
mov
adc
es
popf
pushf
dec
jl
aaa
mov
sar
aaa
sub
lods
mov
adc
lahf
dec
clc
cs
mov
push
dec
ret
js
enter
cmc
push
sbb
inc
and
push
cmpsb
pop
clc
xchg
dec
fsubr
jecxz
jmp
icebp
pop
push
out
push
jb
or
call
insl
push
xchg
pop
or
je
insb
daa
cmp
mov
and
adc
in
pop
mov
inc
lock
xor
inc
lds
sti
aas
movsl
jle
aad
lods
inc
imulb
popa
loope
lret
bound
jmp
or
pop
sahf
xchg
pop
sahf
and
es
sub
clc
jge
pop
notb
lahf
sbbl
push
mov
das
mov
fbstp
js
xor
insb
fs
add
mov
mov
ret
ret
pop
lock
dec
loopne
es
pusha
mov
jns
mov
frstor
dec
xchg
xor
pop
bound
jbe
pop
lock
xchg
or
mov
pop
lods
daa
mov
lods
incl
xor
push
out
call
sti
andb
or
test
aad
xchg
sub
mov
stc
dec
mov
bound
ja
insl
repnz
rorl
repnz
pop
scas
jb
xor
inc
xchg
sub
les
jecxz
in
jmp
mov
jb
imul
nop
daa
mov
addr16
int3
arpl
out
xchg
sub
mov
or
lahf
pop
stos
sub
fsubrl
es
jnp,pn
fldt
pusha
idiv
mov
js
push
hlt
mov
and
into
hlt
mov
cltd
cmpsb
cmp
inc
in
scas
sbb
ds
mov
test
mov
ss
aam
in
push
js
lea
loopne
pop
scas
cli
xchg
fdivrs
test
and
mov
incb
adc
adc
enter
xchg
jmp
dec
loop
xor
popa
outsb
psubb
mov
addl
jp
pop
add
cmp
xchg
add
es
fstps
es
mov
ficoml
add
cmp
pop
add
cmp
or
leave
cli
xchg
repz
pop
scas
loopne
pop
mov
add
push
cwtl
pop
or
jecxz
rclb
test
add
sarb
pop
mov
mov
test
cmp
fcomip
mov
test
push
enter
cli
xchg
xchg
cmpsb
cmp
xor
jnp
cmp
pop
inc
fiaddl
test
push
shl
enter
push
ljmp
mov
aas
fcomps
enter
jnp
pop
inc
in
jg
sbb
ficompl
add
and
pop
addb
jp
lea
fwait
loop
xchg
es
and
shlb
xchg
jnp
cmp
lret
pushf
jmp
in
dec
in
call
xor
jo
addr16
insb
xchg
imul
mov
lock
fldenv
mov
popa
and
add
rcrl
xchg
sub
push
adc
repz
jae
pop
lods
outsb
std
xchg
cwtl
into
movsb
cmp
mov
cmpsb
cmp
cmp
pop
xchg
sub
test
pop
repz
es
dec
sbb
fcomps
sub
and
jbe
push
inc
adc
jge
inc
fisubrs
or
xchg
mov
push
out
aad
lcall
mov
mov
fxam
jl
xor
jmp
pop
pop
and
test
pop
movsb
leave
inc
xlat
icebp
push
jmp
adc
dec
and
pop
insb
testl
loop
xchg
cs
xchg
and
adc
cmpsl
push
cmp
add
pop
mov
mov
jb
sti
lods
cmpsl
test
loopne
aaa
into
clc
add
cmp
lea
gs
sub
faddp
or
sub
sbb
dec
fbstp
mov
sahf
xchg
dec
loop
sarb
adc
ss
ljmp
mov
sub
jmp
xchg
adc
lahf
ss
xor
adc
xchg
pop
pop
mov
fldcw
mov
aaa
and
pop
push
mov
outsl
cmpsb
mov
hlt
in
scas
inc
add
cmp
aaa
and
lahf
pop
push
pushf
xor
mov
xor
decb
jo
dec
push
pop
icebp
lea
xchg
lods
popf
xor
mov
pop
in
clc
stos
inc
and
sbb
jnp
jg
sbbl
jecxz
xor
add
cmp
mov
imul
mov
inc
xlat
dec
loope
add
xor
pop
mov
test
scas
movsl
dec
iret
pop
hlt
idiv
pop
scas
sub
inc
fiaddl
call
xor
mov
dec
fists
ss
into
jo
stc
mov
popf
xor
jmp
ds
mov
xor
sub
mov
xor
fsubr
test
adc
aaa
xchg
jo
xchg
sub
mov
inc
ficoms
push
jmp
jno
popf
xor
xchg
pop
xchg
sti
xchg
fwait
and
jns
adc
test
xchg
and
mov
inc
fstl
aam
and
shrl
xchg
xchg
sub
je
dec
movsl
call
mov
dec
ja
cwtl
das
inc
cwtl
hlt
mov
shrb
repnz
in
adc
inc
xchg
sub
lret
popa
push
jmp
in
or
out
inc
fisubrl
insl
add
nop
inc
xlat
leave
bound
cltd
ljmp
lock
test
jbe
mov
inc
xchg
cmpsb
cmp
xchg
in
dec
adc
aam
push
mov
jg
push
sbb
or
and
and
stos
inc
jge
jns
fs
lcall
xchg
sub
cs
dec
enter
mov
cld
mov
enter
clc
xor
fwait
push
pop
mov
mov
ds
rcll
adc
xor
mov
cmpl
push
idivb
pushl
daa
push
andl
dec
movsl
inc
ja
mov
fistpl
loop
sub
add
mov
aaa
xor
insb
xchg
inc
in
andl
sbb
sbb
cmp
sub
mov
test
pushf
sub
and
push
je
dec
stos
jge
fwait
movsb
int
cli
lret
sbb
notb
das
mov
pushf
addr16
movsl
out
mov
fsubr
add
aam
add
outsl
popa
push
xchg
push
insb
stc
nop
mov
jle
jecxz
sahf
daa
xor
pop
scas
aaa
xchg
test
icebp
xchg
aad
iret
push
sub
and
and
fbld
dec
push
cmc
je
out
ja
pushf
andl
adc
cmp
test
pop
cmpsl
mov
fisubrl
aam
cli
or
pop
adc
sub
outsb
inc
imul
mov
leave
outsl
push
add
mov
cs
jecxz
xorl
mov
in
jmp
in
aas
pop
outsl
or
inc
push
mov
lret
mov
mov
sbb
jb
and
mov
push
je
test
mov
rcr
or
mov
add
aas
mov
jp
outsb
lods
inc
movsb
mov
loop
testl
adc
xchg
test
sub
add
loop
fisubrs
inc
movsl
push
lea
jns
shll
xchg
int3
sbb
movsl
dec
push
push
das
leave
jge
fstps
sbbl
mov
ret
add
jno
xor
sbb
arpl
lret
scas
add
pushl
cmp
fisubrs
mov
mov
jge
sub
jne
mov
decl
cmp
push
mov
dec
adc
push
mov
dec
cmc
test
adc
cli
inc
adc
push
mov
xchg
aam
lods
push
mov
fxch
jne
push
daa
leave
jb
call
or
lcall
shr
sub
mov
dec
icebp
push
mov
or
and
pop
gs
mov
and
adc
les
sub
push
fs
data16
pop
popf
scas
rolb
mov
xlat
or
dec
pop
cmp
xchg
ja
enter
sub
cmpsb
pop
sbb
jmp
test
testl
aaa
aam
pop
jecxz
push
sub
mov
push
aad
jnp
xor
std
addl
rcrb
xchg
sub
cmp
fisubrs
mov
cld
mov
mov
loopne
sbb
jno
andb
push
movsl
cmc
xchg
into
inc
fxch
pusha
or
ficomps
mov
sbb
adc
rcrl
mov
popa
ret
and
mov
out
addr16
cmpsb
pop
mov
cmp
and
pop
mov
les
lods
sbbl
insb
and
xor
mov
testb
push
fsubs
adc
popf
xor
dec
cli
xchg
jle
les
lahf
and
rcrb
mov
sub
and
js
jne
scas
inc
xor
push
dec
in
jmp
imul
cmp
insl
stc
mov
sub
cmpsl
ds
inc
pop
lods
lds
int3
arpl
jecxz
and
add
dec
xor
mov
dec
daa
mov
mov
inc
fld
rcrb
or
push
out
sbb
adcb
cmp
mov
les
mov
mov
adc
jecxz
jae
mov
sbb
adc
cld
lea
stos
inc
aas
out
pop
repz
jo
push
push
jb
call
cs
fld
pop
cld
lea
mov
sbb
sub
adc
ss
repz
lcall
cmpsl
mov
xchg
hlt
mov
and
inc
mov
xchg
xorb
add
lea
fstps
scas
inc
dec
cld
test
push
mov
rcr
test
or
xchg
iret
mov
adc
fbstp
cli
inc
ficomps
ja
adcb
sbb
sbb
hlt
sub
adc
xchg
sub
pop
mulb
mov
xchg
xorl
loopne
popf
xor
add
lea
xor
dec
add
adc
ss
or
das
lods
fmul
inc
out
jmp
pop
ret
das
add
arpl
loope
jnp
shll
fwait
xor
pushf
jmp
push
cmpb
out
jo
fdiv
push
adc
ret
hlt
cld
adc
cmc
mov
push
iret
cmp
cmp
xchg
lcall
clc
in
cmpsb
xor
mov
lahf
lret
out
js
jb
mov
in
mov
fiadds
sub
jp
inc
xlat
pop
fwait
jle
or
mov
in
test
dec
into
jmp
jge
jp
cmp
int3
pop
sbb
fisttps
cmp
fs
jmp
jge
xchg
in
add
add
and
lahf
adc
and
shrl
xchg
mov
fstps
xchg
int3
sub
das
pop
in
fbstp
jae
in
movsb
inc
fidivl
lds
scas
iret
sbb
andb
inc
xlat
fwait
inc
sub
je
mov
popa
leave
setp
inc
ljmp
xchg
cmp
pop
outsb
mov
cmp
mov
mov
insb
push
and
divb
mov
aad
push
cwtl
ficoml
enter
adc
dec
xchg
rol
xchg
push
lods
and
jp
sub
bts
ficompl
loopne
imul
aas
call
sub
loopne
cld
push
xorl
mov
pop
repz
mov
dec
cli
loope
adc
mov
inc
push
imul
add
stc
xlat
inc
mov
ret
push
aad
out
fdivrl
push
pop
fidivs
popf
je
dec
sbb
lret
int
fwait
push
xorb
push
icebp
rcll
aaa
orb
jns
enter
loope
mov
bound
shl
mov
sbb
mov
out
inc
loop
cltd
je
adc
push
xchg
cld
jle
add
mov
insb
pop
sbb
sarb
cmpl
arpl
scas
mov
jne
cmpsl
pop
xchg
test
xchg
out
lcall
dec
pop
popf
shll
mov
popf
xchg
mov
mov
xor
dec
sub
pop
cltd
loopne
cmp
mov
mul
adc
pop
test
clc
cmp
mov
pushf
dec
mov
psrad
adc
jns
mov
hlt
outsb
mov
test
pop
cld
shlb
jno
das
bound
divl
stos
inc
push
lahf
testl
sub
call
out
dec
clc
cmp
out
ret
sahf
mov
mov
pop
scas
push
inc
fildl
mov
mov
push
out
filds
paddb
out
daa
loopne
pop
out
lea
jb
push
movsl
in
dec
xlat
int
cmpsl
std
push
loope
mov
testb
mov
fsubrs
inc
xor
xor
pop
lock
inc
pop
lock
insb
mov
int3
pop
lock
dec
pushf
xor
pop
insl
dec
push
mov
inc
arpl
xchg
jae
jo
rcl
repz
or
lret
or
lods
xchg
dec
jno
cmp
inc
mov
xor
push
in
dec
xor
mov
aad
lret
lds
or
push
jb
inc
sbb
aad
mov
repnz
das
sub
lahf
add
or
pop
xor
nop
adc
inc
xchg
lock
mov
adc
add
fnsave
in
ss
icebp
mov
mov
push
arpl
xor
cmp
push
push
push
aad
sbbl
or
dec
cmp
cmp
adc
add
jae
mov
adc
cmp
xor
adc
fidivrl
xchg
insb
dec
push
inc
mov
pop
xchg
jmp
leave
bound
inc
fisubrl
fsubrl
iret
fdivs
pop
jae
jle
push
sub
hlt
xorb
mov
dec
loope
insb
movntq
mov
pop
push
test
mov
lods
movsb
int3
fbstp
into
mov
add
push
in
pop
xor
test
ret
cmc
pop
pop
repnz
sbb
inc
fdivr
gs
xchg
lcall
scas
out
shlb
out
insb
add
sbb
data16
arpl
dec
mov
mov
mov
mov
xchg
sub
mov
lret
cmp
adc
pop
pop
sahf
dec
push
jb
xchg
adc
xlat
out
or
dec
aas
in
or
xchg
jl
xchg
scas
repz
ror
arpl
or
push
jnp
xor
test
sub
aad
fidivs
mov
jb
sub
repnz
inc
adc
movl
and
pop
aaa
imul
aas
repnz
jecxz
sbb
xchg
sub
pop
lods
inc
push
out
leave
sbb
insb
fs
cmpsl
cmp
jecxz
scas
jmp
mov
dec
gs
jno
lea
mov
aad
mov
or
jae
xor
xor
xor
mov
rcl
insb
add
cwtl
das
pop
jb,pn
popa
fwait
int3
arpl
adc
es
mov
or
in
push
testb
in
aam
ffreep
xchg
sub
push
mov
xchg
pop
xor
dec
ret
fidivl
addr16
cwtl
test
push
sbb
repz
push
push
scas
inc
sub
inc
popf
loopne
adc
adc
or
in
cmpl
jnp
sub
pop
icebp
mov
lea
cmpl
lea
and
xchg
clc
repz
jl
lea
mov
stos
and
aaa
repz
pop
and
jae
test
popa
clc
mov
push
popf
jmp
add
jecxz
imul
test
loop
or
sbb
test
cwtl
and
or
pop
push
in
pop
daa
mov
cli
dec
stc
nop
lock
nop
jecxz
add
aaa
call
incl
cmp
xlat
outsb
in
js
jns
cli
imul
stc
adc
jmp
std
lods
inc
out
imul
ljmp
add
dec
and
cmp
inc
fdiv
pop
shrl
sbb
jp
jnp
sbb
test
xchg
outsl
adc
repnz
mov
pop
dec
push
pop
testb
stc
lcall
pushf
out
pushf
xor
adc
aad
inc
fistpl
mov
jp
lret
mov
rcrb
mov
and
and
pusha
notl
aam
jne
pop
add
mov
pop
repz
mov
outsl
insb
sti
inc
fldt
jo
ljmp
aad
gs
test
push
and
pop
inc
mov
arpl
inc
fcoml
pop
sub
stc
jne
rclb
add
sbb
in
cmp
and
add
iret
push
rcrl
test
sbb
adc
fs
sub
pop
mov
pop
shll
cli
sbb
test
fwait
push
andb
jmp
inc
fisttpl
and
stos
inc
nop
addb
mov
out
mov
pop
pop
sti
xchg
mov
mov
iret
into
lds
test
sub
pop
ret
daa
mov
mov
lret
std
sub
mov
inc
js
or
jns
xchg
outsl
add
mov
pusha
pop
lds
push
popf
push
cmpsb
cli
fadds
add
and
cmp
rorl
cmp
test
jns
jecxz
and
notb
sbb
pop
or
push
mov
out
les
cmp
cli
jp
xlat
outsb
sbb
pusha
sub
push
lock
sub
jle
imul
lret
out
cmp
dec
loop
cmp
pop
lods
ds
xorl
lods
pop
lcall
push
in
ret
adc
ds
bound
cmp
cmp
mov
push
mov
adc
inc
lods
inc
jb
dec
out
pushf
dec
loop
xlat
pop
enter
sbb
cmpsb
jle
mov
fs
fwait
insl
mov
shlb
arpl
lret
bound
xor
es
dec
adcb
jmp
jle
lods
xor
loop
scas
jnp
and
ja
xchg
in
mov
pop
fdivs
aaa
sub
or
jge
lret
rolb
add
xor
jno
fmuls
push
loop
lret
popf
xor
and
adcl
cld
das
orb
mov
movsl
pusha
notl
pop
mov
add
fimull
mov
jae
lods
inc
pop
adcl
je
sbb
iret
and
ficoml
lds
cwtl
das
mov
stc
xchg
leave
stc
mov
mov
mov
cli
mov
mov
jecxz
in
pop
icebp
inc
push
test
xchg
mov
out
mov
pop
loop
mov
fimuls
cli
ds
add
mov
xchg
xlat
mov
inc
fdivl
pusha
test
pop
jmp
cmp
mov
scas
dec
sbb
ja
mov
mov
rclb
rcrb
testb
inc
sub
pop
lock
pushf
mov
push
jmp
or
insl
pop
mov
xchg
lea
mov
fnsave
test
sub
or
mov
pop
scas
lods
sub
mov
add
xor
lods
inc
push
push
imul
test
leave
jmp
cmp
inc
les
outsl
sub
pushf
popf
fidivl
mov
clc
xchg
es
add
inc
push
mov
pop
mov
lea
mov
in
sbb
rcrl
or
loopne
adcl
xchg
jecxz
inc
adc
aaa
into
imul
cmpl
mov
and
sub
je
inc
fnsave
aam
sti
add
dec
sbbb
xor
cmp
xchg
ret
push
sbb
xchg
cs
pop
fsubrs
cmp
imul
adc
vmread
lret
testl
movsl
dec
push
ds
mov
scas
adc
mov
push
jno
std
mov
leave
add
adc
ds
in
add
mov
leave
xlat
outsb
sti
adc
faddl
lds
mov
pop
lcall
mul
sub
loopne,pt
pop
rcrl
mov
aam
test
pushf
sar
push
das
repnz
js
inc
fimuls
lret
dec
in
in
mov
push
mov
pop
mov
das
mov
mov
mov
dec
out
pop
lds
call
pop
adc
push
cmpsl
and
pop
xchg
iret
sbb
sbb
scas
inc
pop
pop
add
fildll
ret
cmc
add
adc
ret
push
add
pop
mov
push
jecxz
inc
faddl
or
idivb
pop
adc
enter
rorb
std
xchg
jl
push
ljmp
hlt
mov
js
loop
xchg
sub
loope
inc
shr
xor
pop
adc
lea
shll
mov
mov
pop
scas
loope
clc
or
or
pop
pop
scas
mov
sub
sub
mov
lods
fwait
adc
and
xchg
lahf
movups
jmp
add
xor
movsb
pop
pop
xor
mov
mov
movsb
aam
xlat
lcall
xor
mov
mov
or
dec
aam
es
xor
or
mov
sub
mov
xchg
sub
movl
inc
mov
into
mov
rcll
jl
loop
aaa
adc
pop
xchg
aaa
into
outsl
mov
shlb
pop
call
add
sub
ds
jns
cs
aas
sbb
hlt
fistpll
rcrb
enter
out
aad
pop
imulb
ret
clc
cmc
call
nop
daa
dec
jmp
mov
addr16
mov
loopne
rclb
aaa
into
test
pop
out
aas
mov
lahf
sub
xchg
movsb
mov
jle
fidivl
and
hlt
pop
mov
mov
jge
jns
push
out
mov
pop
cli
out
xor
adcb
nop
add
fdivs
jmp
repnz
and
cmp
leave
dec
inc
fidivrs
jmp
sbb
adc
adc
push
test
fwait
push
filds
adc
push
cmp
outsb
insb
push
jo
mov
rolb
sahf
add
xlat
popa
sub
rcll
aaa
into
test
aaa
into
add
xor
movsl
cmp
aad
lret
lds
fs
cmc
xor
in
pop
mov
adc
cmp
push
shrl
rol
fidivs
test
sbb
jge
clc
pop
xor
dec
adc
mov
fwait
sub
mov
leave
pop
icebp
cli
mov
inc
sti
pop
bnd
cltd
xor
int3
ds
lret
push
ljmp
and
les
push
jmp
xor
and
jge
push
jmp
cwtl
fs
mov
aam
imul
push
popa
clc
aas
daa
es
js
dec
jecxz
xchg
pop
hlt
mov
and
add
loope
sub
lock
push
mov
lret
loop
loop
or
dec
es
nop
ds
loope
mov
and
push
sub
ret
pop
movsl
inc
pop
hlt
jbe
arpl
jbe
cli
xchg
shlb
xchg
data16
popf
xor
ja
xor
cmp
ja
ds
lahf
fdivl
lcall
sub
outsl
push
inc
inc
sbb
js
or
xor
sbb
xor
fsubrs
nop
pushf
xor
int3
imul
jmp
rcrb
mov
fdivl
cs
mov
movsb
cmp
push
jmp
mov
push
pop
dec
xor
in
imul
sti
xchg
or
nop
daa
lods
and
int
cmp
scas
std
int
out
enter
and
xchg
adc
adc
or
mov
and
push
cmpsb
push
out
sbb
sub
adcb
mov
repnz
inc
fstp
sbb
ret
dec
out
enter
lret
bound
mov
push
popf
sub
or
dec
pop
mov
dec
arpl
sahf
or
pop
dec
pop
lods
and
pushf
xchg
sbbl
dec
stos
lods
inc
fnstsw
xchg
insb
cmc
dec
loop
lahf
mov
addl
mov
frstor
sub
daa
pop
call
andl
jle
xchg
testb
daa
cmpsl
inc
fcoml
push
lods
inc
andb
mov
stos
stos
inc
sbb
jbe,pn
mov
shrl
rol
sub
iret
add
ja
lret
bound
ja
pop
push
imul
mov
mov
lods
inc
or
xchg
dec
loop
cmpl
scas
imull
call
jmp
rcr
adc
inc
inc
psllw
mov
leave
in
test
sbb
mov
inc
fdivl
int
insl
sub
sahf
sbb
nop
mov
mov
int3
add
add
sbb
lea
mov
leave
mov
xchg
sub
jo
shll
adcl
subl
lahf
loope
int3
arpl
scas
imul
add
push
mov
inc
push
lods
inc
mov
push
xchg
mov
dec
in
cld
in
xchg
cs
mov
cmp
and
or
aam
dec
out
xchg
in
fisubl
cmp
imul
sbbl
sub
fsubrl
push
loope
dec
loope
in
in
jg
test
fimull
mov
push
mov
lret
das
pop
mov
rorl
cmpsb
ret
daa
inc
fcomps
clc
in
out
movsl
out
jne
int
sbb
sbb
mov
daa
mov
mov
sarb
mov
push
in
and
icebp
mov
daa
mov
sub
lret
scas
xor
loopne
clc
jge
xlat
cs
xor
repz
test
repz
ret
add
out
xchg
sub
ja
sbb
test
leave
out
mov
mov
mov
mov
mov
into
gs
xlat
outsb
cmp
imul
lahf
lcall
mov
movsl
mov
incb
stos
add
xor
xchg
cs
dec
xor
jle
adc
lret
ja
loope
inc
adc
movsb
cmp
sbbl
dec
fnsave
out
mov
push
movsl
fisttps
outsl
inc
cmp
push
and
mov
aad
clc
or
and
push
mov
add
mov
lds
imul
inc
fstl
pop
scas
ss
js
dec
fnstenv
movb
cmp
and
lods
outsb
lds
adc
loope
enter
add
fbld
mov
mov
mov
xchg
sbb
jg
adc
xchg
and
sub
outsw
mov
pop
cmpb
or
sub
shl
imul
aas
mov
out
stos
test
iret
inc
or
jg
mov
mov
mov
jg
std
xchg
mov
sbb
pop
sarl
das
filds
ds
inc
dec
ds
jno
pop
jmp
adc
ds
or
lock
adc
les
xor
adc
inc
push
mov
test
mov
mov
cli
xor
movl
add
add
out
test
push
pop
jns
clc
icebp
leave
imul
iret
xchg
divb
das
pop
sub
sbb
sub
testb
pop
fstpt
jo
clc
mov
xchg
mov
cwtl
scas
int3
mov
lahf
mov
popf
stc
jle
ljmp
ret
stc
repnz
sub
push
and
xor
inc
pop
fmuls
dec
inc
add
pop
pop
add
cld
push
outsb
jp
lea
loop
push
jae
jnp
dec
push
enter
cmp
pop
xor
push
or
xchg
ret
adc
dec
mov
push
lcall
in
mov
mov
mov
cwtl
sbb
int3
mov
push
mov
mov
inc
add
xor
flds
insl
xchg
or
test
jl
loop
icebp
jmp
cmc
aam
scas
jge
push
and
popa
insl
xchg
popf
les
pop
dec
pop
jp
push
xor
cmc
push
shrl
lds
ljmp
sbb
push
stos
mov
push
jmp
and
mov
dec
sbb
cmp
ss
sbb
push
pop
out
mov
mov
or
mov
xchg
sub
lods
fnsave
mov
addl
shlb
push
outsl
push
test
mov
and
dec
mov
inc
sub
leave
popa
in
cli
xchg
and
jmp
scas
je
pop
sahf
mov
and
jmp
incl
xor
jb
div
stos
inc
and
xchg
sub
leave
pusha
jne
mov
sahf
xchg
out
enter
icebp
jmp
out
xchg
and
or
cs
clc
lcall
adc
pop
jne
stos
je
xchg
adc
ficoml
xor
inc
sti
scas
inc
sub
dec
int
loop
lahf
mull
jns
es
adc
js
int3
lods
inc
call
int3
arpl
sbb
jae
test
adc
fistl
xor
inc
cld
scas
inc
arpl
xchg
dec
int3
movl
fidivs
adc
push
ljmp
jno
js
mov
stos
test
adc
sti
pushf
mov
and
sarl
test
out
rol
pop
clc
icebp
testb
inc
adc
je
add
mov
push
out
adc
inc
cmp
imul
or
jl
pop
ret
inc
icebp
adc
or
mov
adc
and
or
and
cld
test
shll
push
xor
ss
mov
test
shll
stc
fildl
jb
sub
push
push
pop
insb
add
mov
and
mov
inc
xor
push
pop
mov
loop
bound
add
cs
push
mov
push
and
pop
mov
pop
icebp
stos
hlt
pop
hlt
and
inc
jnp
js
xchg
cs
cltd
cltd
xor
jae
dec
movsl
in
mov
push
shrl
aas
aad
jno
repnz
mov
insl
adc
push
shrb
icebp
aaa
das
push
mov
mov
inc
stos
mov
mov
lods
outsl
lds
cmc
popf
fdivl
data16
mov
and
nop
sbb
outsl
int
addr16
cmpsl
ret
int
js
sbb
clc
sbb
or
fwait
mov
dec
stos
sub
inc
cmc
popf
jae
icebp
lret
adcb
mov
loope
inc
into
jnp,pn
movsb
xchg
cmp
and
inc
fldl
inc
mov
aad
jno
fst
and
jp
mov
sbb
call
aas
jge
cmp
scas
sub
add
in
cmc
inc
cld
mov
pop
mov
sbb
pop
sbb
dec
jge
cli
lods
insb
popa
negl
sarb
and
xor
push
mov
rcr
divl
popl
repnz
adc
cwtl
adc
ljmp
in
aas
add
xor
jae
scas
push
insl
add
mov
nop
sub
icebp
test
es
dec
mov
enter
aam
add
lea
or
test
sub
jo
xor
add
mov
pop
in
sub
dec
in
dec
fcomip
mov
or
cmpl
push
mov
dec
jae
jae
mov
rolb
movsb
shr
pop
mov
outsb
aaa
pushl
sbb
loop
fnsave
dec
add
lcall
out
xor
insl
xor
shrb
mov
rorb
pop
sub
repz
fucomi
dec
aad
pop
clc
pop
fnstenv
mov
jmp
das
jb
cli
add
dec
xchg
or
sbb
test
stos
rolb
jl
jp
jge
add
jnp
dec
bound
shll
pop
mov
or
sbb
pop
mov
dec
lret
je
sbb
enter
push
dec
daa
jg
pop
addr16
push
mov
jp
sbb
mov
inc
popa
dec
push
add
pop
out
movsl
mov
or
rorl
mov
fsub
and
jae
insb
mov
scas
into
scas
dec
xchg
enter
sahf
sbb
or
fmul
jl
sahf
es
xor
and
xlat
inc
xchg
loopne
push
fsubs
xchg
mov
or
ljmp
sbb
mov
adc
cmp
xchg
mov
repz
xchg
sub
mov
divl
dec
xor
fcoml
add
out
sub
jecxz
imul
daa
out
fisttps
add
push
push
push
fnsave
in
xor
pop
push
int3
movsb
inc
outsl
aaa
out
lahf
lods
in
sahf
pop
pop
popf
lods
stos
push
or
adc
cli
or
fs
or
data16
imul
cmp
aam
cmc
imul
lret
xor
loope
jg
mov
jge
icebp
push
add
fbstp
aad
loop
es
aam
loopne
pop
sti
gs
inc
sub
sbb
into
mov
outsl
fcoml
mov
pusha
push
xor
cmpsb
in
enter
pop
xchg
aaa
xchg
adc
into
les
mov
cmpsl
loopne
dec
xchg
ss
xor
and
cmpsl
push
xchg
jnp
mov
in
orl
pop
add
div
gs
mov
in
mov
jne
pusha
aam
cmpsb
mov
or
cmp
push
mov
call
sbb
repz
insb
pop
in
inc
adc
les
scas
sbb
cmpsb
sbbb
inc
out
pop
jns
mov
sarl
outsb
and
and
mov
mov
std
pop
sub
pop
sub
negl
loope
ljmp
cmp
mov
sahf
psllw
lds
mov
sbb
sahf
and
sbb
sbb
sti
add
jmp
clc
cmpsb
mov
std
mov
hlt
sbb
xchg
xchg
xchg
adc
push
outsl
sub
push
je
cmpsb
mov
stos
lea
sbb
cltd
lock
pop
mov
aaa
mov
aaa
insb
mulb
mov
jbe
jns
in
cmp
in
cmp
cwtl
outsl
mov
dec
or
xor
or
mov
movsb
push
xor
cmp
inc
mov
add
jnp
push
stc
out
dec
es
lret
push
sbbl
out
jge
or
and
dec
call
mov
xchg
call
cmpsw
dec
mov
fwait
mov
cmp
jnp
push
test
clc
lea
mov
sbb
sub
add
and
pusha
in
arpl
jnp
jns
iret
mov
daa
mov
xchg
mov
mov
mov
addr16
nop
dec
loopne
lcall
cltd
jbe
dec
in
mov
inc
adc
mov
mov
lock
and
sub
cmp
into
pop
aas
dec
or
mov
int
inc
nop
dec
or
lcall
and
cmp
mov
cwtl
gs
ror
test
xlat
mov
iret
mov
mov
daa
ljmp
sbb
out
push
mov
in
and
pop
sarl
out
pop
fsub
mov
fnclex
mov
movsb
push
andb
movsl
push
fnsave
movsb
cli
mov
cmpsb
aas
adc
insl
addr16
ficoms
std
add
pop
lea
or
cmp
cli
daa
out
adc
dec
sub
fnstsw
xor
sub
lods
icebp
adc
mov
cmpsb
fwait
cmpsl
lods
xor
add
pop
adc
lock
jno
leave
pop
in
sub
mov
jo
decb
jo
testl
int
sub
mov
or
lea
pop
lcall
gs
jae
les
scas
mov
test
leave
popl
call
xchg
cmp
enter
in
and
outsb
ss
cwtl
push
xchg
inc
jbe
adc
pop
cmp
in
cmp
icebp
xchg
js
inc
mov
or
cmp
mov
loope
dec
or
or
loopne
adc
scas
inc
call
push
cmpsb
adc
sub
pop
cmp
dec
shrb
ds
fsubr
jbe
lods
and
je
mov
movsb
push
mov
or
movsb
out
cmp
push
into
jno
insb
fiadds
rol
icebp
add
cmp
lret
inc
les
ret
bound
mov
push
pop
push
lahf
and
outsb
mov
fisttpl
scas
bound
pusha
xchg
sub
add
mov
xor
mov
jg
mov
sbb
add
adc
sub
fisubrs
inc
fcmovb
xlat
xchg
lods
cmpsl
lods
adc
push
popf
cwtl
imul
decb
test
cmp
mov
aam
enter
push
call
addb
dec
cmp
nop
daa
jnp
cwtl
jp
inc
imul
jo
pusha
pop
hlt
sbb
adc
jp
aam
dec
into
sbb
ror
insb
xor
cmp
or
and
xor
addl
test
cwtl
push
push
scas
push
mul
push
aad
outsb
test
shrl
and
ss
and
popa
mov
inc
ficoms
iret
ret
cmc
lock
and
or
jne
sub
stos
xchg
ret
lret
pop
repnz
jmp
jp
push
cmp
xchg
outsb
jno
das
mov
les
rcll
sbb
lea
pop
push
movsb
nop
xor
sbb
dec
mov
pop
sbb
nop
mov
mov
mov
lock
adc
add
in
sbb
cwtl
repnz
lock
xor
in
dec
inc
adc
pop
sub
data16
sub
push
in
scas
ljmp
add
stos
inc
sbb
movsl
cmp
cmp
pusha
insl
jbe
pop
test
out
ror
js
loope
pushf
adc
and
mov
sarl
xlat
pop
testb
pop
repnz
sub
pop
data16
cwtl
jl
xor
iret
mov
dec
aas
and
outsb
push
pusha
aam
xchg
jne
mov
enter
push
adc
dec
pop
das
mov
popf
stos
dec
in
mov
imul
xor
cmp
jb
adc
dec
dec
push
push
arpl
and
cmp
std
push
inc
xor
sub
in
inc
push
inc
stos
sbb
arpl
or
mov
and
adc
add
xchg
mov
jg
mov
adc
jecxz
rorb
and
sti
adc
push
inc
push
loopne
mov
sub
lock
add
xchg
add
adc
pushf
jno
mov
ret
dec
in
adc
pop
inc
adc
in
xchg
push
add
in
or
mov
inc
pop
aas
mov
jl
lods
pop
hlt
fnsave
adc
pop
and
sbbl
mov
cmc
fdiv
aad
sub
jl
xor
mov
lcall
movsb
mov
and
insl
sub
in
dec
hlt
mov
imul
test
cmp
ret
in
test
push
aaa
xor
insl
je
xor
dec
xchg
or
sbb
xchg
scas
pop
negb
popf
jne
int
aad
xor
xchg
lahf
push
push
lods
inc
cmp
or
mov
stos
push
js
lea
mov
cmp
or
inc
fcoml
mov
mov
mov
pop
push
mov
push
dec
jecxz
and
arpl
jge
pop
add
addb
sti
insb
out
mov
mov
jp
iret
pop
scas
stc
and
jo
popf
sbb
mov
movsl
inc
gs
aaa
inc
fnsave
lret
sub
ja
repz
pop
jno
stos
inc
add
mov
sbbl
mov
mov
pop
dec
push
lods
cmp
ja
sub
je
rclb
pop
jb
inc
mov
sbb
scas
pop
dec
loop
dec
repz
aaa
cmc
mov
jp
lods
or
cmp
leave
pusha
rcr
movsl
add
dec
cmpsb
inc
fndisi(8087
hlt
mov
out
jp
roll
stos
js
fsubrs
cltd
fidivs
xor
inc
arpl
lahf
popf
push
cltd
xor
mov
repz
push
sbb
or
mov
lcall
movsl
cmp
mov
outsl
cld
pop
xor
dec
sbb
fidivl
mov
mov
into
pop
out
or
in
xor
push
inc
fldl
sub
scas
push
lcall
sub
das
icebp
sbbb
and
add
lods
xchg
sub
aaa
jno
dec
lods
pop
pop
repz
dec
out
test
daa
cmp
xchg
jge
test
insl
push
in
add
dec
cmp
pop
hlt
xchg
fbld
add
movsb
loope
jmp
pop
repnz
repz
js
push
lcall
mov
outsl
sti
shrl
xchg
dec
in
mov
ss
mov
ror
xchg
sub
imul
dec
xor
cmp
pop
sbbl
dec
sub
xor
jns
pop
add
jno
jg
jno,pt
xchg
sub
xchg
out
add
daa
in
sbbl
mov
sub
dec
loope
dec
cltd
xor
outsb
mov
stos
pusha
insl
add
inc
xor
xchg
push
gs
mov
inc
clc
push
out
push
add
jne
lods
test
push
loopne
inc
sbb
aas
xor
push
movsl
inc
cmpl
push
mov
fldt
push
and
es
gs
sbb
xor
and
repnz
inc
fdivl
pushf
push
call
inc
popa
mov
mov
dec
in
jp
jle
add
or
sbb
imul
mov
inc
jmp
test
popf
mov
into
gs
pop
fs
mov
insb
dec
and
mov
lahf
es
lret
jo
dec
in
xchg
jno
add
push
out
fs
xchg
mov
and
cmp
xchg
push
cmp
cmp
fwait
xor
pop
xor
dec
fidivrs
mov
fbstp
subb
stos
adc
bound
cmp
aad
cmp
test
lret
xor
in
nop
daa
iret
jbe
jecxz
lock
ss
pop
icebp
pop
add
scas
and
dec
in
sub
lcall
add
dec
and
sti
imul
push
add
mov
loop
gs
xor
iret
pop
scas
and
xchg
leave
mov
sub
mov
in
xor
lods
push
loope
inc
inc
xchg
jp
testb
jp
push
insb
ljmp
add
lds
inc
xlat
sti
mov
loope
cltd
out
loop
jns
cmp
ja
dec
pop
ds
insl
inc
ficomps
movsb
cmp
shlb
out
xchg
out
xchg
out
add
and
sub
shlb
cmc
mov
lock
fs
ss
mov
orl
test
aas
aam
dec
in
jp
mov
push
imul
cwtl
test
sub
arpl
lahf
lods
shrd
mov
rcr
or
xor
push
out
ds
mov
mov
and
mov
pop
repnz
arpl
fwait
push
stc
inc
mov
inc
xlat
daa
push
aam
inc
lret
or
push
cmpsb
inc
fcmovnbe
jbe
subb
movsb
cmp
pop
enter
mov
cmc
scas
xor
imul
inc
xor
inc
fidivrl
push
inc
fildl
push
repz
mov
fidivl
pop
pop
lock
mov
loop
sbb
xchg
scas
fdivl
or
sarl
inc
fdivl
xlat
sub
or
aad
dec
movsb
inc
xlat
out
fsubrs
mov
jge
jl
xor
push
inc
add
fidivl
and
jo
push
push
in
dec
mov
sub
call
cmp
cmp
outsb
jae
xchg
outsb
mov
pusha
and
sbb
repnz
lahf
ss
scas
in
test
cmpsb
add
pop
sahf
arpl
lret
cmp
test
lret
or
fldl
into
inc
cmc
mov
sub
loopne
mov
aaa
add
mov
cmp
call
pop
sub
mov
ja
sub
adc
xor
leave
pop
pop
mov
push
in
mov
es
xchg
xlat
push
jmp
not
je
and
shrl
aam
inc
add
cwtl
das
jecxz
adc
adc
xor
mov
inc
fcoms
jbe
popf
js
jle
sub
mov
xor
pop
and
dec
add
add
ss
out
test
int3
arpl
push
movsl
lods
push
repz
pop
mov
push
in
test
sbbl
jae
add
mov
daa
and
xchg
aad
push
push
mov
or
scas
mov
mov
cwtl
pop
and
dec
sub
inc
pop
insl
in
test
dec
loop
sbbl
jo
imul
mov
cmp
stos
out
and
imul
shlb
out
cltd
repz
in
lea
push
xor
ja
fs
pop
cwtl
gs
or
jle
daa
sub
nop
popf
aam
sub
mov
lcall
xchg
cld
xchg
int
imul
cltd
jbe
xor
or
cli
call
or
lea
in
and
push
cltd
inc
lock
jl,pn
pop
push
mov
inc
in
sub
adc
mov
pop
mov
jb
insl
dec
fidivs
mov
lahf
pop
and
jp
mov
test
outsl
push
filds
jbe
mov
adc
fwait
nop
mov
dec
loop
jl
xchg
xor
mov
and
sbb
ss
icebp
cmpsl
push
mov
dec
enter
imul
fdivrl
popf
popa
std
jo
rolb
cld
xchg
iret
inc
call
adc
xchg
cwtl
lds
inc
and
ljmp
push
dec
loopne
fmull
push
add
dec
in
lret
outsb
adc
leave
nop
stc
sub
sbbb
dec
sbb
push
loope
jae
je
fiadds
movsb
xor
pop
cmp
cmp
fnstenv
xchg
lds
cmp
pop
mov
mov
jl
shrb
cli
pop
xlat
std
pop
sub
mov
lahf
jp
xlat
jecxz
notb
add
sub
insb
add
push
lods
jl
popf
xor
popf
inc
fxch
fsubrl
sti
and
lret
bound
test
xor
mov
cmp
inc
ds
enter
push
pop
lock
rcrl
mov
push
imul
mov
lock
stos
inc
push
jge
cs
in
lahf
mov
cmp
in
inc
or
adc
fwait
inc
xlat
outsb
pop
mov
lahf
ss
xor
jle
mov
xor
outsb
imul
mov
mov
test
pop
std
cmp
negb
mov
mov
loopne
push
in
jge
mov
xor
ljmp
orl
mov
inc
fcom
aad
mov
hlt
pop
cmp
std
inc
sbb
jl
fidivl
mov
jmp
mov
jno
out
fs
loopne
fst
insb
xchg
fsubs
dec
mov
jp
jb
test
int3
enter
fdivrl
push
lods
aas
mov
call
jnp
dec
in
mov
ss
cmc
adcb
sbb
dec
nop
jns
jae
out
and
push
mov
mov
add
jb
scas
lcall
or
mov
sbb
mov
xchg
mov
andl
dec
sbb
lcall
fildll
imull
mov
inc
or
xor
jg
jae
and
or
inc
push
pxor
rcll
mov
or
push
xor
mov
push
lret
inc
lea
in
sbb
sbb
cmpl
push
fimuls
out
ret
lcall
push
lret
xchg
test
fwait
jne
rorb
and
lcall
std
cmpsl
cmp
cmp
sub
xchg
dec
loopne
push
or
test
pop
jecxz
ljmp
dec
loop
ja
cmpsl
test
imul
mov
jmp
aas
sub
inc
cmp
xor
pop
lock
push
push
aad
rcrb
icebp
cmp
fmuls
pop
inc
into
lcall
aam
jl
fsubrs
scas
sbb
cmpsb
sub
sbbl
mov
jmp
sub
cmpsl
cltd
lock
enter
in
xor
fldl
arpl
jp
rcrl
mov
xchg
mov
pusha
add
icebp
bound
mov
push
cmpl
jne
xor
fidivl
jbe
outsl
push
idivl
and
mov
gs
fucomp
test
mov
or
les
fisttpl
mov
filds
push
in
mov
rcll
ficomps
push
jmp
and
mov
or
sbb
cmpl
data16
or
xor
push
out
pop
push
xchg
sub
dec
loope
mov
jmp
in
adc
fsubrs
sahf
mov
lsl
push
in
out
jmp
cli
xchg
cmp
mov
sub
js
add
imul
aaa
jmp
or
jns
or
lret
mov
loope
and
movb
ljmp
daa
repnz
add
ret
push
out
mov
inc
fcoml
iret
data16
adcb
xchg
lret
xchg
mov
in
insl
jb
pop
cmpsl
xchg
iret
data16
call
sub
mov
rcl
push
call
mov
add
jp
jbe
jno
xor
pushf
xor
movsb
aad
pop
mov
cmpsl
cld
int
cmp
andb
sahf
mov
adc
frstor
pusha
test
mov
mov
xchg
icebp
mov
leave
pusha
loopne
lcall
dec
ss
adc
outsl
mov
pusha
outsl
lods
inc
pusha
ficoml
mov
add
push
jecxz
jg
aad
std
xchg
xchg
testb
jmp
or
mov
pop
stc
nop
aas
shlb
mov
in
gs
adc
rcrb
mov
or
and
nop
xor
mov
jnp
pop
insb
and
mov
lea
sbb
gs
fiaddl
lock
je
jbe
add
aam
push
sbb
add
test
ljmp
add
aaa
into
mov
push
in
fnstcw
adc
das
or
imul
insb
add
mov
mov
sbb
mov
xlat
outsb
xchg
jmp
jle
repnz
add
mov
inc
ficoml
and
in
loop
pop
ror
repnz
sbb
movsb
cmp
sub
pushf
fdiv
mov
imul
sub
inc
xlat
push
inc
int3
arpl
push
jle
fwait
addr16
mov
xchg
repz
clc
sub
into
sub
mov
mov
lret
leave
mov
xor
dec
mov
ret
aad
cmp
jp
mov
rcrl
shrl
push
fs
imul
mov
inc
xor
jmp
cmp
push
stc
bound
adcb
fcomps
in
add
cmpsb
adcb
push
push
jmp
sbb
cwtl
popf
jne
mov
inc
dec
jecxz
and
test
and
negb
icebp
fs
pop
sahf
mov
pop
out
sbb
sbbb
cmp
mov
notb
loopne
pusha
mov
or
mov
xchg
sub
mov
cmc
icebp
sub
imul
shlb
add
mov
cli
pushf
popa
clc
cs
mov
ret
loopne
pop
hlt
dec
add
stos
pushf
mov
adc
push
xor
dec
cltd
xchg
jo,pn
into
inc
dec
in
test
mov
or
scas
push
pop
testb
or
xor
sbb
mov
lret
bound
shll
add
shl
in
xchg
sub
push
outsl
push
xchg
adc
lea
imul
jnp
pop
xchg
mov
lcall
and
fcompl
xor
inc
mov
jo
ja
pop
xor
push
rclb
xchg
sub
xchg
dec
fnstenv
pop
mov
fcmovnb
pop
or
call
mov
ficoml
shr
sub
cmp
lods
mov
cs
iret
inc
fsubl
sub
js
inc
and
sub
pusha
testl
pop
cmc
inc
popa
mov
mov
cmp
out
jo
mov
jno
or
and
adc
cmc
scas
push
fnsave
sbb
ljmp
sub
ja
arpl
cmpsl
ds
sub
sbb
or
and
and
or
shrl
js
cmp
push
sbb
lea
xor
or
adc
cmp
imul
call
cltd
push
mov
or
div
lea
mov
insb
add
aad
xor
scas
and
push
push
pop
stos
adc
jno
dec
loop
xchg
rorl
pop
loop
lcall
pop
mov
int3
pushf
xor
out
mov
push
pop
insb
add
lcall
fnstsw
aas
adc
insl
movsl
shl
xchg
daa
mov
xchg
test
mov
outsl
pop
rcrl
iret
data16
xchg
sub
out
or
xchg
ds
mov
cli
lret
insb
inc
ficompl
jmp
xchg
adc
movl
mov
and
jmp
xchg
loopne
int
push
inc
fisttpl
jge
xchg
jo
cmpsl
outsl
mov
popa
mov
loopne
js
fsubrs
or
jo
scas
stc
push
out
mov
mov
dec
in
sub
mov
push
mov
shll
fsubs
inc
fidivrs
and
sbb
jae
into
cmp
cmpl
cld
push
in
sub
dec
outsb
add
mov
fwait
xor
in
mov
loope
ret
xchg
ss
mov
mov
ficoml
or
scas
sub
sbb
dec
daa
fbstp
repnz
icebp
loope
cmc
mov
fsubrs
shll
jge
inc
pop
xor
jae
jmp
fsubrs
xor
movsb
out
xor
add
outsl
xor
out
sub
dec
rcrl
pushf
imul
xchg
mov
stc
adc
xchg
jns
gs
jge
jg
in
push
and
jg
jge
push
mov
loopne
test
pop
ret
mov
pop
sub
nop
imul
mov
cmp
jmp
mov
jp
stc
stos
lea
lret
aaa
fsts
mov
packssdw
sbb
or
jecxz
sbb
aaa
stos
inc
imul
xchg
sub
sbb
je
cmp
rorb
mov
push
pop
lea
sub
xchg
in
in
push
cmpsl
fcomps
into
push
movsb
jle
mov
shl
mov
scas
pop
dec
pop
int3
push
mov
push
xor
mov
sarl
sbb
out
xor
jecxz
call
pop
mov
ficompl
push
test
jmp
xchg
jle
movsb
test
adc
cld
and
ljmp
push
repnz
inc
sbb
out
xchg
cmp
push
les
aas
lret
push
mov
pop
movsb
mov
mov
jl
les
sbb
pop
sub
mov
bnd
pusha
inc
mov
xchg
stos
pop
inc
cmpb
dec
mov
push
xchg
cmp
ljmp
xor
jp
mov
add
pop
lods
or
lock
popf
xchg
jl
pushf
sbb
pushf
cmp
lahf
or
pop
cmpsl
pop
scas
out
or
iret
in
ret
icebp
popf
test
fwait
movsl
push
pop
int
rcr
xchg
movsl
lea
stos
cmp
jge
pop
scas
and
shrl
and
pop
iret
es
jp
cltd
push
or
incb
sbbl
and
lret
inc
stos
xchg
movsb
inc
rorb
in
addr16
sbb
ds
dec
mov
sbbl
pop
sahf
repnz
subb
mov
addb
adc
add
stc
leave
ds
fstpt
out
fisubrl
pop
jmp
push
mov
out
hlt
xchg
mov
and
jo
inc
mov
stc
call
loopne
mov
sbb
dec
xor
insl
fs
xor
mov
sbb
mov
movsl
imul
or
lret
dec
adc
insb
lcall
inc
fdiv
out
mov
and
xor
movsl
gs
mov
and
mov
jne
add
push
or
ds
jg
call
hlt
jmp
push
call
dec
mov
fnstenv
sub
jge
xchg
cmpsl
sahf
inc
cwtl
sbb
loopne
mov
js
sub
mov
mov
push
rcrl
pop
les
decl
mov
push
dec
mov
pop
or
dec
pop
nop
mov
push
cltd
lea
mov
lods
pop
loop
mov
icebp
addb
enter
jmp
mov
mov
or
inc
out
fbstp
mov
out
push
mov
sahf
xchg
jecxz
daa
mov
cmc
stos
dec
loope
push
int
xchg
std
sbb
or
fs
mov
fstps
mov
xchg
lods
arpl
mov
lea
test
and
dec
loope
sbb
outsl
xor
pop
hlt
movsb
push
or
inc
fldenv
leave
mov
pop
and
test
jge
cmp
adc
decl
xchg
sub
sbb
divb
ficompl
fisttpll
add
es
and
mov
ss
mov
xor
adc
xchg
lret
imul
addr16
cmp
or
sbb
shlb
pusha
push
and
inc
daa
rcll
mov
cmp
inc
add
push
nop
inc
insl
sub
je
lret
jl
jle
sbb
test
add
in
lret
gs
repnz
dec
mov
test
mov
jg
repnz
fisttpl
in
fwait
mov
out
dec
loopne
stc
mov
adc
jo
call
or
icebp
mov
add
enter
lea
out
dec
ja
mov
push
mov
mov
cli
fs
xor
xor
dec
mov
adc
shlb
push
cmp
mov
sub
add
sbb
divb
addr16
fs
andl
add
inc
mov
cwtl
loop
data16
int3
fstps
lea
pop
cmc
jge
mov
cmc
jne
sahf
dec
loope
es
jl
mov
add
aam
in
xor
into
jl
add
sbb
mov
or
xchg
popf
mov
pop
push
pop
mov
ret
mov
imul
adc
icebp
jnp
mov
mov
lahf
xchg
in
mov
shlb
cld
xchg
dec
add
push
xchg
orl
subl
popf
xor
push
mov
and
cmp
jmp
adc
test
mov
push
and
adc
or
es
fnclex
mov
ljmp
mov
fbstp
mov
ljmp
xchg
cmp
popf
or
inc
xchg
js,pn
jge
push
aad
jmp
pusha
mov
lock
jo
loopne
lcall
xor
push
fildll
jo
xchg
mov
pop
sbb
mov
jle
adc
xchg
sub
scas
dec
add
inc
cld
xchg
je
mov
lret
mov
pop
sbb
or
lods
adc
jns
testl
clc
dec
adc
cmp
orl
pop
mov
cmovg
cmp
push
mov
testl
pop
std
fdivl
mov
nop
mov
int3
leave
out
add
arpl
push
xchg
sbb
pop
fnclex
xor
nop
push
in
shll
sub
cli
push
call
test
add
inc
fs
jbe
inc
fiadds
adc
adc
xchg
lods
enter
xor
in
data16
mov
fisttps
je
lret
adc
mov
adc
sbb
mov
mov
inc
push
sub
outsl
popf
shl
xchg
adc
xor
fstpt
or
hlt
int3
jbe
fsubp
jle
shlb
dec
jnp
pop
repz
not
out
mov
stc
in
negl
cmp
aam
mulb
ljmp
push
pop
les
pop
repz
ret
sti
in
pushf
add
jmp
dec
xchg
iret
or
or
inc
jmp
lret
loop
andb
inc
data16
push
jecxz
xchg
imul
add
adc
xchg
push
mov
mov
rorb
dec
ror
sbb
mov
sub
shrl
dec
lds
xor
sti
das
pop
dec
or
adc
sbb
xor
test
and
mov
call
pop
pop
imul
xchg
movsb
ss
jp
fisttps
mov
testb
add
iret
mov
push
push
sbb
lods
dec
dec
fsubl
jg
mov
mov
sub
es
mov
push
decb
dec
nop/reserved
dec
mov
cmpl
ja
outsb
in
mov
push
cmp
insl
daa
in
insl
aas
jg
movsl
jno
into
insl
cmp
cmp
imul
inc
cmp
jl
scas
pop
jp
inc
mov
add
mov
nop
fcmovnbe
scas
arpl
sbb
xor
sti
xchg
xor
mov
inc
sub
movsb
mov
cwtl
ret
out
or
adc
loope
inc
or
test
mov
pop
roll
jg
rcrl
mov
pop
call
pmulhuw
gs
in
int
iret
data16
jae
cmp
pusha
test
dec
call
pop
jg
stos
mulb
lea
mov
cmpsb
mull
mov
clc
cmc
mov
lcall
mov
leave
mov
add
fcmove
mov
adc
inc
movsb
mov
shrl
xor
sub
or
dec
subl
dec
or
xor
fdivl
push
call
xchg
dec
dec
fists
add
jmp
das
jbe
movsl
ds
jecxz
inc
mov
shll
inc
pop
mov
js
add
gs
lods
jle
push
mov
xor
js
xor
jb
push
xchg
sub
pop
cli
inc
test
push
test
popf
data16
mov
add
in
subl
jne
sbb
jle
das
lret
bound
add
imul
dec
lds
xchg
push
xchg
test
icebp
jecxz
iret
test
mov
dec
repnz
in
sbb
shll
mov
stos
sbbl
dec
cmp
cmp
lret
cmp
rol
pop
add
cld
sub
rcr
je
xor
out
jo
sub
out
imull
sub
pop
mov
mov
lahf
mov
fldenv
push
jb
pop
sahf
inc
adc
js
dec
mov
mov
mov
mov
lret
or
xchg
push
add
jg
imul
mov
test
lahf
pop
and
incl
pop
in
jae
fdivl
dec
adc
xchg
jle
shrb
daa
add
cli
xor
push
sbb
jl
subl
push
jle
jle
cmp
mov
lret
ja
cmp
fmuls
push
ss
sub
jl
inc
xor
arpl
push
adc
xor
stos
add
mov
adc
inc
fldcw
insl
push
mov
jge
push
in
fnsave
adc
add
in
lahf
hlt
or
aam
inc
in
sub
cwtl
fbstp
sbb
add
cmp
outsl
xor
jp
jne
dec
xchg
mov
add
mov
ss
mov
inc
test
sbb
js
ret
sbb
pop
hlt
mov
jg
outsb
mov
xlat
cmpl
insl
add
ja
out
popa
cli
shlb
clc
inc
and
adc
testb
imul
mov
movsb
jns
sbb
jbe
test
cmc
inc
or
dec
es
inc
mov
mov
lret
negb
sbb
mov
lcall
mov
mov
sbb
adc
pop
daa
xchg
loope
loope
hlt
pop
xor
mov
mov
sbb
xchg
adc
xlat
ret
pop
or
mov
sahf
mov
leave
lods
jnp
jp
add
xchg
scas
inc
cmpsb
pop
jo
fs
aaa
pop
hlt
negl
call
arpl
call
in
fstl
add
xor
lss
inc
and
ds
lods
jle
aas
sub
cmp
outsb
inc
inc
pop
repz
das
lods
popf
push
jb
sub
enter
stc
adc
js
and
add
sub
push
sbb
aaa
and
pop
icebp
lock
xor
popa
adc
divl
or
rcl
sbb
pop
inc
adc
mov
sbb
sbb
and
mov
xorl
or
test
xor
das
mov
cwtl
push
cwtl
or
xchg
popa
iret
cld
pop
xor
clc
test
and
lods
pop
sub
enter
loopne
xchg
push
jmp
test
add
mov
sbb
sbb
pushf
xor
mov
push
and
fidivrl
outsb
xchg
xchg
xor
lahf
sub
mov
int3
fists
clc
and
pop
sub
into
push
repz
ljmp
cmp
cs
repnz
jae
test
lret
jg
mov
icebp
mov
xchg
test
mov
in
test
sbb
lds
es
cmp
push
add
mov
or
cmpsl
push
enter
filds
cld
sbb
xor
sahf
bswap
sub
inc
dec
push
dec
icebp
cs
and
subb
mov
push
push
sarl
dec
sbb
lds
stc
mov
and
mov
xchg
dec
sub
outsb
imul
or
mov
xor
cli
xchg
hlt
out
int3
mov
adc
fistl
sbb
in
movsb
subb
out
and
mov
jmp
in
and
dec
mov
ret
ret
jp
js
mov
bnd
sahf
fdivrs
ljmp
hlt
or
dec
push
sub
inc
push
js
and
push
cmp
jecxz
outsb
dec
jo
fstp
xchg
jg
insb
sbbb
inc
cld
pushf
dec
or
pushl
jbe
dec
nop
mov
cld
xchg
add
loopne
cwtl
cmpsb
mov
outsb
xor
xor
out
push
cmpsb
mov
pop
dec
push
sbb
icebp
adc
test
mov
out
pop
mov
test
dec
ret
outsl
xchg
mov
cmp
sar
cltd
mov
incl
call
inc
and
jl
jmp
insl
add
pop
jae
aam
or
es
cmp
and
xor
aas
mov
stos
jne
loop
lret
iret
sub
adc
mov
push
repnz
fwait
rorl
add
ret
cmpsl
xor
cmp
stos
jae
cmp
inc
sbbl
cmp
or
mov
pop
xor
mov
add
jge
pop
sahf
inc
sub
xchg
lock
je
lret
js
aad
pop
or
adc
shrl
cltd
insl
sub
sahf
adc
jmp
mov
jne
faddp
jl
push
pop
cli
popf
mov
and
dec
data16
out
or
cmp
mov
stc
int3
pusha
mov
sbb
in
jge
sbb
addr16
lcall
add
out
ljmp
push
inc
pop
stos
inc
mov
jmp
xchg
je
pushf
cmp
out
xor
subl
jb
movsl
inc
sbb
jp
fdivl
movsb
test
jmp
pop
push
mov
cmpb
leave
xchg
push
in
ljmp
sub
push
int3
out
add
adc
and
leave
fldcw
push
mov
jp
inc
xchg
out
rcrl
mov
js
inc
inc
fnstcw
fstps
dec
xor
pop
aaa
into
and
push
sar
add
jle
xor
lcall
adc
mov
int
fsin
jbe
shrl
das
mov
mov
adc
push
cmp
cmp
out
aam
fdivl
cmc
loope
shlb
lahf
pop
sub
mov
xor
dec
movsb
or
push
insl
push
mov
xchg
cmp
insb
xor
aas
data16
pop
cmp
adc
inc
and
add
cmp
lods
lods
and
push
into
stos
xchg
cs
cmc
mov
adc
rolb
push
cmpsb
loop
sub
ss
lret
aam
lds
push
add
mov
fwait
stc
out
xor
daa
add
sub
ds
push
loopne
jns
into
imul
sub
dec
aas
les
sbb
arpl
jo
addr16
fcoml
cmp
pop
in
and
inc
loope
mov
push
imul
cmp
test
cmp
dec
out
add
outsl
out
jl
mov
adc
xchg
int
xchg
xor
popf
in
adc
xchg
add
pop
stos
loop
ss
scas
mov
mov
fistps
push
scas
mov
pushf
icebp
out
jo
xchg
sub
lea
mov
xchg
push
xchg
mov
jle
fsubrl
inc
add
push
out
mov
loopne
cs
outsl
push
sbb
inc
xor
jae
pop
pusha
scas
rorb
xor
in
stos
ljmp
shrl
cmp
lock
and
xor
push
stc
mov
arpl
dec
xchg
xlat
jmp
pop
xchg
call
mov
shll
repnz
mov
loopne
cltd
mov
push
adc
xlat
jmp
test
jecxz
fldcw
lds
add
and
mov
push
mov
nop
jp
cmp
push
xor
fstl
sub
sub
jecxz
mov
jg
push
dec
push
and
adc
mov
and
sbb
sbb
pushf
aad
aad
add
imul
and
inc
test
cmp
sub
inc
mov
scas
in
out
mov
arpl
movsb
iret
sub
pop
shrb
lods
clc
inc
sub
inc
orl
movsl
clc
pushf
pop
aad
and
loopne
stc
aam
inc
negb
cmpsl
mov
jnp
or
dec
cmp
dec
enter
dec
lahf
jns
pop
pop
or
data16
call
mov
xor
aaa
into
and
push
mov
in
add
out
test
fnsave
lods
xchg
mov
push
or
pop
ds
sbb
xchg
test
shlb
sub
dec
je
pop
shl
add
mov
mov
jno
repz
cmp
inc
insb
in
mov
aad
leave
push
xchg
or
mov
je
fistl
sahf
aaa
xchg
fisubrs
mov
sub
loop
arpl
lock
repnz
into
int
pop
in
lret
mov
fists
xchg
mov
cmp
xchg
xchg
xchg
mov
adc
add
jns
xchg
inc
sbb
or
loop
mov
xchg
or
pop
sahf
outsb
push
inc
sbb
sub
neg
imulb
push
cld
adc
or
dec
dec
cmp
lods
andl
xor
add
nop
lahf
cli
inc
xor
ljmp
movsb
arpl
xlat
cwtl
mov
les
icebp
scas
mov
dec
mov
jp
push
fmuls
dec
aam
push
and
xor
test
or
push
and
scas
ljmp
cwtl
out
lds
test
pusha
in
in
fisubrl
xor
mov
add
mov
pop
mov
and
in
fildll
fnstenv
mov
xchg
dec
and
mov
and
inc
dec
loope
jl
mov
jne
mov
movsb
pop
out
aad
mov
xor
pop
pop
push
in
mov
inc
fwait
xchg
jmp
out
ficoms
xchg
dec
fmull
jecxz
sub
dec
mov
push
push
call
scas
call
or
pop
mov
mov
xchg
xchg
fs
cmp
dec
push
cmc
mov
icebp
mov
push
inc
ficomps
xor
jmp
gs
lods
or
out
int
sbb
pop
outsb
add
push
mov
and
jae
push
movsl
add
inc
ss
fidivs
push
leave
pusha
mov
std
xchg
dec
stos
out
fsubrl
pop
in
rcrl
cmp
lods
inc
fildll
push
cmp
sub
push
sahf
xlat
and
loopne
aas
mov
idivl
fsincos
in
sub
or
push
ds
xor
shlb
xchg
scas
push
popa
fidivrl
pusha
movsl
lds
adc
sbb
aaa
bound
insb
jle
lahf
addr16
ds
out
sbb
mov
ds
cwtl
int
fcomip
cltd
jae
idivl
lds
mov
lds
or
das
adc
es
pop
sar
xchg
and
or
add
rcrl
jae
jnp
loopne
mov
and
push
sbb
cmpsb
cmpsb
lret
mov
dec
mov
dec
repz
shr
pop
pop
loopne
pop
sbb
cmp
inc
dec
pop
jb
sbb
jle
movsb
jl
dec
out
sti
mov
cld
loopne
into
mov
mov
das
pop
xchg
cltd
xchg
test
out
lcall
aaa
add
and
inc
dec
aad
pop
or
fiadds
lea
enter
test
sbb
lcall
cmc
jmp
cmp
outsl
and
in
lcall
aaa
pop
sub
mov
shlb
pop
mov
nop
mov
or
aas
mov
pusha
or
push
scas
mov
ficompl
xchg
nop
stc
dec
sub
mov
sti
pop
pop
arpl
pushf
add
push
loope
inc
xor
xchg
sub
cmpb
mov
scas
xor
sbb
fsubrp
in
sbb
cld
add
lds
push
fucomi
and
inc
lock
pmaxub
or
sbbl
shrb
ret
sbb
pop
lret
mov
scas
loop
or
jbe
xchg
mov
jae
lret
into
pop
cmpsb
cmp
out
jns
lcall
insl
jne
daa
pop
popf
sub
loop
fldenv
cmp
push
jp
out
fistpll
clc
adc
inc
flds
sub
push
cmp
adc
test
cmp
cmpsl
clc
jae
jae
or
gs
xchg
gs
jb
mov
push
andl
test
outsl
pop
xor
in
mov
pop
in
js
jnp
mov
ljmp
sub
adc
fsubrl
movsl
inc
enter
push
js
lods
loop
leave
sub
add
mov
arpl
pushf
in
mov
pop
out
inc
pop
cmpsb
pop
bound
or
and
jp
xchg
frstor
sbb
popl
out
in
push
mov
or
cmpsb
jge
push
int3
xor
jae
lods
or
pop
mov
adc
and
cmp
fdivr
jae
scas
mov
pop
mov
xchg
add
inc
mov
shll
fucompp
inc
xchg
push
jne
test
into
push
mov
lcall
xor
push
cmp
inc
add
jl
out
push
aam
mov
fisubl
leave
pusha
sub
jl
mov
notl
mov
ficoms
roll
cmp
arpl
jle
mov
add
imul
andb
cmc
cmpsl
push
xchg
icebp
sub
and
jmp
stos
xchg
lret
imul
mov
mov
xchg
dec
in
sub
outsl
xor
and
fnstsw
mov
je
cmc
rclb
dec
add
test
adc
pushf
jae
les
cmp
arpl
icebp
fs
push
push
jmp
push
xor
xor
push
adc
fldl
mov
mov
lret
popf
or
cmp
adc
ds
mov
out
popf
sbb
xchg
sub
cmp
dec
dec
sub
cmc
dec
shll
repnz
outsl
cs
je
pop
shl
incb
subl
lds
cmp
push
mov
pop
cmp
adc
mov
push
jp
adc
dec
push
int
imul
adc
sahf
inc
xlat
fwait
es
cli
fadd
bound
push
movsb
sub
loop
cmp
jb
mov
rorl
pop
xchg
jecxz
sbb
sub
fidivrs
nop
xor
mov
push
pop
scas
adcl
xor
idivl
xor
jg
or
daa
mov
movsl
cmp
fisubs
push
ds
int3
mov
pop
iret
outsl
insl
ljmp
fxch
sub
or
arpl
xorb
aam
popf
mov
pop
mov
xor
psubsw
ljmp
xor
jge
mov
inc
or
jl
int3
pushf
mov
push
pop
in
inc
call
xchg
mov
sub
outsb
outsb
daa
mov
stos
mov
mov
sbb
xor
sub
xchg
stos
push
adc
pop
jns
gs
xchg
fcomps
cmpsl
ret
or
mov
sub
xchg
adc
iret
push
mov
cmp
inc
dec
mov
enter
adc
xor
loopne
out
mov
adc
leave
mov
jmp
or
cmp
and
lahf
jb
pop
rcl
and
sbb
dec
dec
xorl
lea
push
fs
mov
inc
lahf
pushl
test
jo
fdivs
in
xchg
das
mov
mov
ss
cmp
xor
stos
mov
lock
stc
rcrl
into
loop
ret
pop
add
scas
push
mov
fnstsw
sti
lds
test
int3
ret
mov
adc
sbb
sbb
pop
xchg
push
xchg
add
mov
sbb
int
iret
mov
mov
sbb
pop
cmp
insl
lods
lds
nop
push
call
rcrl
mov
jnp
xchg
das
lahf
cli
rcll
loope
mov
cmp
lret
cld
sahf
push
mov
lcall
adc
mov
mov
dec
ret
xchg
shrl
and
inc
ja
jns
pushf
dec
lret
xor
notb
xchg
jmp
fnstenv
lock
jae
mov
out
jnp
inc
fcmovnu
fwait
aas
aad
jge
jae
insl
pop
repz
dec
scas
push
mov
dec
jae
mov
push
xchg
xor
xor
add
jnp
sub
stc
cmp
gs
jl
push
loopne
jp
cmp
sub
movsb
xor
repz
ljmp
in
lret
inc
pop
notb
inc
out
jne
testl
roll
inc
in
iret
xchg
jae
jno
inc
movsl
jns
out
xor
or
cltd
jg
and
into
out
add
sbb
xor
int
cmp
out
or
mov
nop
fdiv
rorl
push
cmp
cmpsb
cmp
mov
inc
clc
shll
mov
jp
aad
and
popf
fsts
in
clc
cld
aaa
addl
xchg
loop
ficompl
mov
das
mov
dec
add
mov
cmpsl
cmpsl
insb
pushf
aaa
scas
movsb
push
push
sarl
mov
cmpsl
jp
mov
int
jmp
mov
loopne
subb
addr16
pop
cs
mov
cmpsl
gs
gs
dec
repnz
test
pop
add
scas
mov
aas
jmp
cld
cltd
pop
sub
std
xchg
jl
leave
xchg
add
inc
bound
cmp
das
mov
jecxz
xchg
sub
js
or
cmp
pop
mov
hlt
or
sbb
orb
push
push
pop
popf
pop
cmp
loopne
jnp
mov
test
push
rol
dec
pop
imul
ds
pop
scas
imul
fcoms
mov
add
jno
repnz
fwait
and
clc
outsl
pop
mov
jp
fsubrl
loop
xlat
lret
clc
leave
pop
fidivs
out
inc
or
mov
lock
and
fdivl
andb
mov
mov
bound
call
pop
scas
add
icebp
lds
lods
cmc
and
jne
pop
jg
pusha
lods
and
inc
pop
shll
stos
imul
pop
rolb
sbb
mov
dec
loop
xlat
call
test
cli
scas
cmc
and
das
cmp
subb
sbb
lds
leave
movsb
in
stc
scas
mov
dec
jle
dec
out
test
leave
sahf
jmp
js
lret
ret
outsl
mov
add
sub
shll
pop
jb
inc
bound
iret
pop
in
add
cmc
in
fldt
xlat
scas
or
popa
clc
gs
scas
scas
lea
pop
lret
sbb
inc
sbb
dec
dec
mov
shrb
xlat
test
add
outsl
and
das
into
shrb
push
lcall
push
sub
fldt
jb
jp
push
in
ficompl
lret
push
push
sub
inc
call
dec
cmpsl
out
std
aad
jo
insl
in
sbb
sbb
js
pop
daa
xchg
xlat
outsb
and
xor
inc
sti
sahf
ss
add
push
and
fsubrl
pop
xor
inc
jp
aam
popa
push
fistpll
fldenv
shl
lods
xchg
cmp
mov
bswap
pop
xor
notl
sub
es
xchg
pop
push
add
pushf
adc
fdivrl
jno
xor
xchg
pop
lret
cmp
es
adc
shlb
jne
dec
and
mov
dec
lret
fsubl
jecxz
test
adc
fsubrs
or
xchg
movsl
jns
call
jg
jo
imul
xor
fistps
dec
xor
adc
mov
ss
scas
ret
cltd
js
inc
test
daa
pop
fdivr
mov
in
imul
ljmp
mov
inc
in
mov
jnp
inc
std
cmp
ret
or
lahf
xchg
mov
sbb
aas
mov
mov
adc
ds
adc
in
cmp
mov
or
aam
mov
fnstcw
fisubrs
sbb
cmp
rorb
mov
cmc
ret
jge
and
data16
int
xchg
jg
sub
push
pop
fimull
addr16
test
pop
jae
out
push
xor
or
xor
adc
testb
xchg
cs
mov
push
mov
jmp
test
pop
mov
sbb
rorl
ja
dec
dec
fistpll
jne
imul
ret
pop
sbbb
subl
mov
dec
idivb
push
xchg
cltd
cmp
cld
sbb
adc
outsb
adc
arpl
icebp
xor
bound
mov
mov
mov
add
aas
jle
pop
imul
pushf
divl
adc
cwtl
mov
cltd
xor
pop
fsub
mov
adc
pop
push
or
xchg
mov
out
in
gs
xchg
push
jmp
mov
sbb
cmp
jnp
inc
fidivrl
shrb
dec
xor
loop
aad
mov
xor
mov
pop
cli
and
cmp
fsubrs
fcomps
pop
scas
std
xchg
ret
and
adc
arpl
js
mov
push
iret
in
xchg
sub
sahf
bound
xchg
sub
lcall
mov
xchg
std
loope
add
cwtl
sbb
add
cmp
in
and
stos
stos
in
pop
scas
movb
inc
aaa
aad
int3
pop
push
xor
mov
mov
int
popa
add
out
pop
aaa
dec
cmp
xchg
inc
cmp
adc
mov
mov
sbb
mov
dec
pop
jmp
insl
cli
cmp
and
shrb
sub
pusha
xchg
out
cli
ret
sahf
into
pop
push
movsl
aaa
arpl
inc
mov
inc
or
out
and
adc
mov
insl
push
xchg
and
ja
ljmp
and
xchg
mov
inc
ss
jle
cmp
mov
fildl
or
stc
loop
add
stos
scas
xchg
insb
xchg
xchg
pushf
scas
rcrl
inc
dec
xor
gs
test
mov
shrb
fisubl
mov
adc
into
aaa
popa
ss
push
adc
jmp
inc
std
out
je
outsb
aaa
bound
or
push
pop
stc
mov
xor
adc
push
ja
xor
mov
stos
mov
nop
enter
icebp
sbb
data16
pop
pushf
test
ret
into
and
lds
pop
popa
or
mov
sarl
inc
dec
inc
call
sub
inc
xor
cmove
cmp
fdivl
mov
rcrb
loop
int
add
pop
cmp
stc
scas
out
ljmp
scas
sti
cli
int
inc
adc
sub
xchg
push
je
mov
rcll
das
jbe
jle
imul
cmp
out
push
test
push
inc
test
add
cld
clc
sub
int3
f2xm1
push
das
stos
jae
fwait
lret
mov
mov
jmp
imul
fisttps
xchg
push
imul
cmpsb
call
lock
ja
stos
and
nop
adc
nop
inc
repnz
pop
or
dec
pop
cmpsb
out
in
dec
fldl2t
dec
fisubrs
add
mov
popl
push
pop
int
push
adc
dec
pushf
scas
dec
push
stos
into
ret
jl
xor
xchg
nop
movsl
ds
xor
les
mov
mulb
ss
arpl
mov
mov
aaa
sbb
jmp
and
inc
subb
shlb
out
and
pop
addl
mov
ds
sti
or
cmp
js
imul
mov
fwait
jecxz
sbb
aas
add
rolb
shr
fwait
pushl
xchg
mov
imul
lahf
imul
fwait
xor
test
fdiv
loop
cmp
lahf
test
js
je
xlat
fsubrs
aaa
or
adc
push
scas
jbe
or
mov
jbe
test
xchg
in
test
dec
nop
sbb
add
ljmp
inc
pop
decl
lds
mov
jp
cvtpd2dq
fcomip
sub
scas
inc
filds
xor
test
push
mov
inc
mov
fucomip
adc
or
inc
inc
fucomp
jnp
adc
xor
xlat
outsb
mov
pop
dec
mov
mov
lahf
add
cld
ror
inc
sar
pop
loope
out
push
xchg
aaa
sub
mov
cltd
data16
aam
in
popf
and
cmpsb
and
push
movl
sub
ret
cmpl
pop
in
push
fmuls
cmpsl
nop
test
mov
sbb
je
pushw
jne
hlt
cmpsb
pop
xchg
adc
dec
sub
jg
mov
add
inc
lds
out
jbe
mov
xor
imul
pop
push
mov
mov
cmp
loope
mov
pop
sub
xor
xlat
sbb
push
shlb
fsubr
push
jo
mov
xchg
push
xchg
mov
pop
jo
inc
pop
sbb
jnp
cmp
add
sbb
and
jecxz
dec
add
aas
inc
in
test
xchg
outsb
mov
bound
data16
or
pop
jp
push
jg
sbb
or
mov
mov
pop
sub
cmp
push
push
shlb
cltd
xorl
lea
pop
pop
dec
cmp
jl
add
sbb
scas
pop
aaa
inc
movb
gs
inc
in
pop
dec
jne
incl
lret
jb
rorl
inc
xchg
push
jmp
test
jo
push
and
rol
mov
mov
fidivrs
iret
jnp
add
pop
xchg
pop
xlat
pop
mov
and
shlb
addb
or
mov
xchg
sub
es
fwait
mov
dec
paddw
inc
push
repnz
jns
mov
sub
imul
lock
loope
cmp
push
xchg
xchg
pop
inc
inc
fs
cmpsl
jo,pt
fiaddl
mov
ret
pop
popa
jle
sub
sub
sbb
ret
adc
sub
and
lcall
cmp
or
xchg
int3
jge
sbb
jecxz
outsl
enter
pusha
cmpsl
cli
adc
into
cmpl
and
cli
mov
das
sbb
sbb
cmc
divb
pusha
cmp
fcmove
mov
xchg
sub
imul
xchg
xchg
push
pop
cmp
and
cmpsb
mov
ds
add
movsb
sub
icebp
fmuls
pop
imull
lret
jge
std
inc
movsl
mov
push
stos
sub
cltd
daa
dec
jb
nop
je
test
into
ja
add
xchg
ret
jo
dec
ss
idivb
sbb
lahf
bound
dec
and
pop
jmp
ja
hlt
aas
inc
sbb
pop
aaa
push
test
lahf
add
addb
scas
dec
leave
loope
inc
add
pushf
fcomps
enter
xor
or
xchg
es
outsb
xchg
lret
popl
mov
pop
fsts
fbstp
cmp
outsb
push
pop
fdivp
or
lea
mov
jnp
les
push
popf
xor
repnz
out
fwait
jge
jp
mov
jb
out
in
lods
adc
xchg
test
ljmp
fwait
xchg
mov
scas
mov
pop
cmp
cmp
insl
cmp
movsb
push
fbld
mov
lret
mov
pop
push
fidivrl
arpl
push
insl
pushf
xchg
inc
mov
xchg
mov
pop
push
sahf
fnstcw
shrl
and
push
sahf
loope
jo
stos
test
and
sbb
sbb
xchg
out
sbb
data16
push
imul
adc
nop
mov
sbb
adc
or
ret
lcall
shll
adc
orb
mov
sbb
xchg
pop
cs
test
dec
add
repnz
push
add
mov
sbbb
mov
stos
out
mov
shl
ss
cli
sub
adc
test
in
or
popf
clc
or
jp
jo
mov
aas
mov
loopne
xchg
sub
cmp
cmp
rorb
sub
dec
lds
and
fstl
ret
adc
inc
dec
repz
nop
fcmove
jg
rcrl
mov
xchg
sub
insl
pop
movlps
dec
push
xor
stos
out
sub
mov
iret
cwtl
and
push
pusha
dec
xor
pusha
dec
jne
inc
lods
cmpsl
xchg
dec
pop
dec
xchg
fidivl
cld
add
pop
leave
mov
mov
or
es
xor
repnz
push
pop
pcmpgtd
xchg
or
ret
les
fucomp
jns
or
mov
mov
test
sbb
enter
je
dec
sti
mov
mov
js
subl
lea
or
add
stc
lret
cltd
xlat
adc
pop
out
das
add
outsb
mov
adc
aaa
push
mov
xchg
jbe
loopne
push
or
pop
sub
out
orl
test
mov
inc
iret
mov
or
pop
frstor
add
jbe
out
out
movsb
or
outsb
sub
inc
pop
mov
stc
mov
jno
loope
rorl
shr
mov
sub
adc
mov
or
pop
jbe
mov
xchg
sub
or
mov
mov
insb
pop
dec
jle
lods
ret
in
outsb
shr
mov
pusha
outsb
xor
dec
shll
and
in
pop
repnz
add
push
xor
xchg
setge
les
jle
popf
jbe
das
jnp
lods
lahf
stc
or
out
mov
sbb
ja
loope
push
jo
out
mov
cld
jo
push
push
cmp
xlat
mov
jo
inc
leave
xor
cli
clc
dec
cmc
or
sub
sub
add
sbb
pop
insb
inc
cld
xchg
out
mov
popf
enter
mov
ret
faddl
inc
xchg
repnz
shlb
les
adc
daa
push
sbb
es
mov
mov
stos
and
jp
aaa
xor
les
xor
mov
test
jle
mov
xchg
xlat
sarb
inc
pushf
call
fnstsw
add
mov
push
iret
sbb
or
lret
xor
add
sbb
rol
inc
mov
mov
pusha
rcl
mov
fsqrt
stc
mov
out
cld
repnz
addb
mov
test
mov
insl
loopne
pop
jns
add
outsl
or
fmulp
dec
add
jns
jb
sub
call
xchg
movsl
cli
mov
in
mov
adc
sarl
mov
fsub
jge
cmp
lahf
stos
mov
cmpsb
jle
adc
and
sbb
filds
fs
rcll
mov
push
decb
js
mov
mov
mov
movsl
push
ret
push
aam
cmp
sti
jbe
adc
jnp
aad
sbbb
loop
push
aas
or
in
push
jp
push
xchg
andb
nop
adc
pushf
enter
subb
and
not
xor
lock
push
xchg
jmp
fcmove
les
jbe
add
and
sub
xor
in
jo
and
test
lods
shll
int3
push
fstpt
shll
lahf
dec
mov
pop
xchg
or
popf
mov
pushf
dec
adc
jg
sub
in
cltd
or
cmp
mov
loop
cli
lds
ss
xor
pop
pop
ret
outsb
loope
arpl
push
pop
dec
fisttps
sbb
push
hlt
out
int
imul
ds
je
or
movsb
subl
ficoml
sbb
adc
adc
push
push
inc
mov
insb
notb
xor
cmp
inc
mov
test
mov
push
pop
out
inc
sbb
popa
outsl
xor
lock
add
lahf
add
xlat
xor
mov
mov
aaa
mov
jne
ficomps
pop
pop
mov
sbb
sub
leave
pop
idiv
xchg
repz
or
jb
pop
cmc
xchg
mov
jl
outsb
or
cmp
das
mov
dec
out
jno
xchg
add
insb
push
into
ja
add
fadds
add
std
xchg
imul
xor
ljmp
mov
pop
lcall
or
push
inc
or
pop
aad
inc
pop
jle
cltd
mov
mov
mov
imul
or
inc
jno
cmp
popa
and
or
pop
push
mov
sub
loope
stos
add
mov
sbb
cmp
pop
xor
push
mov
push
mov
jl
movsl
xor
dec
jmp
je
push
test
push
mov
jg
push
mov
inc
lods
dec
ja
dec
sub
mov
or
mov
outsl
in
pop
dec
cli
push
mov
adc
loop
fwait
add
std
jg
mov
push
push
add
int
test
popf
add
repnz
inc
or
iret
fistl
aaa
test
inc
les
pop
sub
outsb
imul
add
sti
or
jg
iret
pop
bound
cmp
mov
dec
dec
jmp
test
lods
jb
jno
and
xor
pusha
cmpsl
mov
add
cld
aaa
pop
xchg
push
sar
xchg
add
add
outsb
movsl
cmp
ds
das
jns
pop
pusha
lcall
push
mov
mov
stos
imul
lret
sbb
push
xchg
std
pop
leave
js
hlt
pusha
add
push
cmpsl
xchg
push
push
jns
scas
dec
adc
clc
aas
ficoml
hlt
mov
inc
lods
sub
pop
xchg
inc
fdivrs
push
xchg
push
mov
push
adc
dec
push
jb
sub
xor
pop
js
dec
mov
adc
ret
jp
jne
nop
lret
cmp
xchg
out
rolb
insl
loopne
mov
ja
out
into
cmp
lods
cmp
lret
xor
xor
or
mov
test
sub
ret
sbb
push
nop
mov
sbb
sbb
icebp
cmp
cmc
stos
push
scas
or
sbb
js
popa
arpl
push
addr16
cmp
lret
push
pop
inc
pop
subb
dec
aad
xchg
sub
jmp
out
add
lret
into
pop
movsb
arpl
mov
loopne
push
insl
and
pop
pop
inc
int3
jle
jo
adc
mov
fdivs
adc
cmc
add
cmpsl
jns
lea
out
loopne
inc
adc
pusha
idivl
mov
shll
data16
scas
pop
unpcklps
mov
roll
xchg
ret
pop
push
sbb
jns
jg
and
jl
cs
cmp
add
ficoms
out
daa
cli
and
roll
repz
enter
adc
push
adc
test
icebp
xchg
pusha
pop
mov
cmp
adc
nop
sub
xchg
mov
std
jae
add
ds
xchg
imul
mov
pop
sbb
dec
push
sub
inc
out
xchg
shr
dec
cmpsl
push
test
or
mov
rorb
mov
iret
cmp
push
insb
mov
js
fdecstp
inc
lcall
sbbb
add
pop
cmp
mov
sti
mov
subb
push
ss
out
in
sub
jmp
test
fmull
in
or
mov
push
mov
out
ljmp
leave
int3
xor
pop
jecxz
sahf
push
sub
sub
sub
jnp
mov
scas
out
popf
dec
add
sub
inc
sti
push
pusha
push
xchg
xchg
xor
push
sbb
ret
sub
xchg
test
xchg
push
sub
pushf
cmp
jl
xchg
enter
add
fbstp
mov
inc
push
inc
mov
inc
movsl
xchg
add
cmp
ja
add
pop
cld
fldcw
and
push
push
fdivl
fdivrs
inc
mov
sub
hlt
push
push
sub
lret
push
dec
ret
or
loopne
mov
xchg
jp
in
inc
mov
stc
xchg
sub
mov
push
test
push
call
xor
inc
fnsave
push
jae
cwtl
xor
call
mov
cli
pop
inc
stos
icebp
jl
int3
mov
stc
push
loope
ja
sub
ss
mov
in
push
outsl
cwtl
out
push
mov
and
sub
jecxz
repz
sti
fists
lds
or
call
fs
cmpsb
or
xor
cmp
mov
popf
jle
mov
icebp
mov
dec
movsb
mov
push
movsl
imul
out
lret
jae
gs
mov
nop
xchg
adc
push
ret
mov
fwait
les
add
xor
jle
sub
mov
es
fdivl
es
pop
push
sahf
xor
mov
in
andl
bound
push
testb
bound
inc
call
sub
cmp
or
push
es
pop
out
inc
sbb
mov
in
add
jge
iret
imul
pop
cld
aam
sub
sub
cmp
mov
sub
pop
or
push
pop
dec
ljmp
jge
xlat
outsb
dec
mov
lods
cs
andb
push
pop
push
sbb
cmpb
aaa
sbb
dec
in
xchg
inc
pop
data16
push
ja
pop
imul
hlt
sbb
push
dec
shll
jle
dec
inc
sbb
call
pop
fiadds
xchg
rorl
add
imul
mov
xchg
inc
fdivrl
adc
pop
out
sub
push
sub
dec
movsb
stos
in
add
push
ja
cltd
icebp
cltd
subb
insl
lret
mov
mov
imul
std
pop
mov
icebp
xchg
aam
dec
ror
repz
arpl
adc
mov
mov
imul
lret
pop
fsts
push
push
movnti
jmp
sbb
push
mov
mov
xchg
cmp
inc
shrl
xor
push
fs
mov
mov
xor
add
dec
mov
dec
push
in
cmp
andl
stos
imul
daa
jne
ja
xor
movsb
mov
mov
jle
fs
adc
test
mov
inc
rcrl
mov
or
mov
or
call
int
movsb
or
sub
sbb
pop
push
gs
adc
inc
add
mov
cli
inc
cltd
xor
sbb
add
aas
andb
adc
fmull
pop
inc
fisttpl
cbtw
out
xlat
ljmp
mov
repz
cmc
mov
mov
les
addb
mov
lahf
push
loopne
mov
ret
add
sbb
dec
cs
outsb
xchg
xor
mov
xchg
in
mov
fsubs
push
scas
dec
sub
or
pop
repz
mov
clc
adc
aaa
addb
mov
test
jl
mov
lea
incl
xor
dec
out
push
call
jae,pn
push
push
repnz
cld
push
xor
jns
je
add
push
cmpsb
mov
mov
leave
mov
nop
inc
pop
jbe
jno
outsl
xchg
jecxz
dec
push
test
mov
or
mov
adc
popa
mov
cmc
mov
mov
pop
fisttpl
lock
xlat
iret
xchg
imul
arpl
int
pop
addr16
addr16
cmp
xor
pop
mov
cs
fnstsw
nop
push
testl
cli
call
mov
cmc
cli
mov
xchg
lock
xor
and
push
xor
rol
mov
outsl
iret
cmp
xor
or
stc
push
stc
jp
in
inc
div
sub
cmp
or
aam
add
leave
xorb
mov
ljmp
int
popf
xor
lret
test
or
xchg
jbe
xchg
mov
outsb
adc
inc
outsl
lods
pop
jge
scas
and
rclb
sub
stc
leave
repnz
cmc
cmpsl
ljmp
and
lds
jp
xor
mov
inc
mov
in
xchg
lcall
clc
jmp
fstpl
enter
add
jecxz
pop
sbb
dec
lahf
outsl
ret
add
dec
fstpl
dec
lock
xlat
insl
cmpsb
xchg
lahf
popa
xchg
mov
outsl
icebp
jae
shl
mov
adc
ljmp
mov
xor
mov
jle
mov
shlb
popl
fdivr
mov
mov
xor
lock
je
or
mov
jge
stc
adc
lahf
adc
nop
adc
add
test
push
rclb
movsl
cmp
idiv
xchg
shlb
pop
and
and
push
jb
pop
ret
mov
inc
xchg
lret
movsb
jo
adc
adc
int3
test
mov
mov
lahf
mul
push
add
xchg
adc
lret
mov
icebp
sub
clc
sub
popa
push
push
pushf
jg
into
je
push
cli
fdivrl
in
jmp
insb
sbb
or
cwtl
mov
popa
addr16
pushf
inc
aaa
aam
mov
fiaddl
mov
xchg
test
fwait
mov
xor
inc
mov
or
sub
inc
push
stos
xchg
add
sti
cmp
enter
lret
cmpsl
insb
lock
inc
push
push
nop
push
lods
push
add
dec
add
pushf
sbb
arpl
dec
popa
sub
push
nop
mov
push
ret
pop
stc
inc
popa
sub
xor
aad
push
dec
push
cmpsb
inc
jno
in
cmpsb
scas
xchg
xchg
out
insb
pop
mov
ret
mov
inc
popa
das
inc
test
icebp
pop
bound
sar
js
xor
stos
fbstp
cmc
repz
cmc
cmpsl
out
sub
pop
outsl
test
stc
ss
inc
pop
mov
xchg
mov
dec
add
pop
movsl
ja
push
sarl
scas
repnz
cld
lea
adc
add
push
push
inc
xor
jp
ret
xor
in
dec
lock
cmp
hlt
insb
inc
stc
mov
imul
scas
mov
sub
adc
add
xchg
pop
jmp
push
sub
addb
cmp
cmp
icebp
iret
gs
ret
xchg
inc
bound
or
in
jg
js
loop
ret
push
popf
hlt
fdivl
fimull
out
adcb
push
pushf
pop
lds
add
ja
push
inc
cmp
sub
push
jb
ret
sub
xlat
dec
cs
cmp
dec
out
lret
xchg
sti
xlat
pop
icebp
les
test
jg
push
jae
mov
pushf
mov
jecxz
lahf
sahf
out
divl
cmp
imul
xor
cld
pop
dec
push
push
cmp
and
adc
inc
ljmp
ja
lods
jmp
push
lretw
or
push
mov
ret
loopne
xor
push
movsb
pusha
test
arpl
inc
aaa
jno
cld
mov
cmp
fstps
mov
daa
les
ret
scas
mov
mov
xchg
sub
jecxz
movsl
hlt
xchg
jmp
ss
xor
push
clc
jae
push
int
lods
add
cwtl
das
dec
sbb
sbb
hlt
inc
sub
aad
test
out
fistpll
push
movsb
stos
xchg
push
sarb
scas
mov
lea
shrl
mov
pop
sub
xor
cltd
mov
sbb
popa
sub
cmp
xor
jno
lfs
mov
movsl
movsl
or
aad
adc
mov
cwtl
stos
sbb
jg
leave
push
jmp
scas
mov
out
dec
lea
lret
and
shrl
stos
push
scas
adc
jae
and
cmpsl
out
in
cmp
rcr
xor
xlat
les
ds
cmp
test
and
xor
cmpsl
and
out
cmc
lcall
sub
mov
adc
jb
cwtl
mov
enter
dec
rclb
pushf
pop
sbb
fbld
das
subl
repnz
fnstcw
push
arpl
jno
arpl
mov
fsubl
mov
mov
mov
scas
cld
aad
ficompl
xor
push
mov
int
lahf
insb
test
faddl
lods
insl
sbb
xchg
addl
movsb
mov
push
pop
scas
andb
ret
mov
popa
ret
lods
inc
cmc
mov
xchg
xor
mov
cmp
jl
sbb
ja
xor
inc
inc
mov
inc
sbb
iret
xchg
mov
fbstp
add
mov
aad
scas
popf
xchg
inc
mov
pop
jo
jo
ss
fucom
ret
push
flds
sti
push
mov
jbe
lods
scas
in
cli
insb
cmp
xor
xchg
fwait
ja
and
inc
fucomi
inc
jmp
clc
push
mov
test
mov
xlat
popf
cltd
xor
shll
negl
sbb
mov
mov
dec
jne
inc
xlat
flds
imul
in
into
jne
mov
adcl
mov
mov
and
cli
sub
je
xor
or
xlat
fisubs
push
sar
leave
int
fstpl
add
pop
adc
dec
xchg
dec
aaa
mov
inc
cmpb
test
fisubrs
addr16
xchg
xchg
enter
aam
loopne
and
mov
jge
and
pop
mov
lea
out
test
mov
jbe
aaa
arpl
je
daa
inc
shrb
mov
rorb
jecxz
cwtl
lahf
mov
dec
ss
push
pushf
mov
or
cmpsb
shll
inc
nop
push
xlat
repz
pop
mulb
dec
test
sahf
cmc
pushf
cmp
and
inc
xchg
loop
sub
xor
adc
fcoml
es
cs
and
sub
mov
pushf
jns
jecxz
fstpl
leave
xlat
out
stc
fisttps
mov
test
mov
sbb
or
add
rcrl
cmp
insb
mov
xchg
dec
cmpsb
sub
cwtl
icebp
xor
mov
push
mov
mov
inc
and
scas
or
gs
cmpsb
or
xor
les
add
mov
jb
in
fldenv
and
cli
pop
mov
das
inc
sub
popf
fsubs
test
fisttpl
cmp
add
or
aas
dec
bound
push
pushf
jl
cld
xor
pop
test
movsb
stc
and
dec
loope
mov
mov
pop
mov
aaa
std
aad
sbb
aad
mov
or
push
mov
stc
movsl
lcall
cmpsb
out
fadds
adc
out
xchg
add
orl
popa
push
cmp
je
rcrl
add
jmp
add
jb
pop
mov
adc
jo
push
push
or
test
mov
sbb
or
out
lods
mov
add
divl
inc
push
pop
in
es
jnp
addr16
pushf
cmp
xchg
sub
sub
pusha
xor
jnp,pn
lret
daa
jg
mov
mov
nop
cmpsl
pop
add
stc
cltd
repnz
jge
cmp
sahf
xchg
cs
fdiv
cwtl
mov
ret
out
das
push
jmp
push
jmp
mov
fmull
decb
movsb
push
mov
hlt
dec
push
data16
adc
add
movsb
jb
sub
adc
mov
adc
mov
mull
jbe
and
insl
jge
sub
mov
push
lods
mov
jmp
or
mov
fwait
out
pop
rcrb
test
inc
in
push
pop
or
scas
test
out
xlat
es
insb
add
sbb
jp
arpl
insb
ret
add
arpl
mov
insl
mov
orl
dec
enter
cmp
pusha
dec
data16
sti
adc
out
adc
stos
mov
fmulp
mov
std
xor
leave
xchg
xchg
data16
pusha
push
int
ret
or
popa
adc
shll
xchg
push
mov
jg
xor
or
cmpsl
pop
pop
pop
xchg
pop
int3
lret
xchg
mov
js
aas
mov
fcmovne
cmpsl
mov
pop
or
enter
xchg
fs
dec
sbb
aaa
xchg
sub
jp
sub
dec
mov
or
dec
lods
mov
sbb
ret
mov
push
mov
mov
sub
adc
mov
mov
pop
jo
aam
cltd
leave
cltd
aaa
into
ret
addb
push
in
mov
imul
inc
sub
xor
sub
pop
rclb
lea
rol
lret
stc
jne
fcmovne
push
xlat
jmp
in
sbb
lret
jecxz
jno
sahf
loop
push
cmp
sub
hlt
js
cli
pop
bnd
jmp
pushf
or
test
out
xchg
dec
cmp
repnz
sbb
inc
dec
mov
shlb
fnstenv
outsl
outsl
pop
daa
sti
xchg
pop
jno
dec
jb,pn
lahf
test
repnz
pop
and
test
jbe
ror
fldt
pop
adcb
arpl
das
add
or
movsb
inc
scas
jb
mov
lahf
pop
mul
pop
shrb
aas
std
jg
out
dec
mov
mov
xchg
int3
imul
clc
imul
push
movsb
xor
rolb
sbb
jmp
dec
gs
jo
nop
cmp
in
mov
push
mov
adcl
pop
sub
ljmp
adc
adc
aad
mov
sbb
add
or
nop
sub
es
push
sub
sti
leave
mov
cmpb
adc
and
insb
ret
daa
mov
mov
jmp
pop
sub
jp
mov
add
popl
jne
aas
lods
push
repnz
cmp
scas
mov
xor
push
cli
pushf
jae
dec
int
and
xchg
sti
xchg
cltd
push
ror
repnz
daa
and
pop
push
and
mov
into
jg
dec
xor
out
incb
clc
cmp
clc
imul
push
into
adc
aad
out
xchg
sub
in
shll
int
iret
loopne
mov
out
add
sbb
mov
shlb
clc
xchg
push
iret
fbstp
push
xchg
sbb
js
dec
push
movsb
std
out
popf
popa
xor
in
jno
das
mov
jmp
dec
pop
movsb
loope
cltd
jl
ja
dec
adc
testb
insl
and
les
push
rcrb
iret
push
sub
push
aam
sbb
shll
aas
pushf
xchg
sbb
scas
mov
ja
xchg
js
or
mov
mov
negl
daa
xchg
imulb
scas
mov
fstp
xlat
mov
mov
call
test
sbb
inc
add
addr16
es
mov
mov
inc
pop
ret
imul
into
js
push
xlat
adc
jno
clc
sbbb
sbb
xchg
xlat
jbe
imul
and
pop
adc
jp
int3
jp
fwait
in
outsb
xchg
inc
enter
cwtl
sub
jns
push
cmp
loopne
lock
icebp
sbb
and
mov
jno
cmpsb
js
mov
adc
or
es
dec
add
fcoml
mov
aam
repz
daa
aas
push
xorb
xchg
sahf
popf
or
xor
push
lret
sub
outsb
out
icebp
jbe
cmpsl
dec
and
decb
sbb
mov
push
orl
add
shlb
jae
addr16
xchg
pop
dec
lret
in
fcoms
pop
inc
es
jno
sub
js
jge
lahf
cmc
pop
mov
nop
push
daa
mov
and
mov
pop
push
insl
out
scas
fdivp
lret
addr16
cld
adc
inc
xor
in
and
popf
popa
mov
jo
and
fcomps
clc
mov
adc
sub
push
xchg
sub
scas
adc
out
sbb
lcall
mov
cmp
push
outsb
pop
insb
push
sub
fucomp
out
adc
add
enter
cmp
mov
dec
mov
xchg
and
sbb
pop
cmp
add
inc
shrb
xor
xor
xor
mov
cmp
ss
inc
fidivrs
lret
cmpsl
or
fcompl
outsl
cmp
incl
arpl
call
or
dec
push
mov
outsl
jae
shll
shlb
mov
insb
adc
sbb
ds
outsl
mov
cli
xchg
stc
or
sub
xchg
push
cmpsl
mov
push
cs
or
fs
test
or
scas
sbb
xor
aaa
dec
stc
popf
jnp
sbb
mov
shld
stos
jbe
adc
xchg
jb
sub
cmpsl
pop
idiv
movaps
jae
jge
dec
scas
xor
je
jns
jge
leave
add
push
fidivs
sbb
pop
mov
into
xorl
push
push
daa
xchg
jbe
jge
cmp
or
push
jnp
jp
sub
and
sbb
jb
loopne
pop
fidivrl
aad
lret
repnz
xor
push
loop
sahf
pop
aas
or
push
xchg
jnp
and
je
cltd
iret
pop
xchg
ss
out
cmpsl
mov
imul
popf
pushf
dec
loope
or
lods
es
dec
mov
push
add
mov
and
psubsw
add
jl
sub
cmp
lock
mov
mov
mov
jb
push
cmpb
cmp
test
call
pop
mov
adc
clc
in
jbe
std
push
jb
out
rcll
pop
sbb
sub
fiaddl
and
pop
out
push
fiaddl
rol
mov
pusha
add
inc
ficoms
dec
in
jae
mov
sarl
cmp
loop
xor
dec
or
hlt
movsb
data16
aad
jo
xchg
test
or
jo
mov
lret
dec
lock
cmp
sub
aaa
sbb
or
adc
mov
loopne
loope
jecxz
mov
and
dec
dec
dec
mov
clc
enter
mov
mov
adc
push
int
push
hlt
push
outsl
add
xor
mov
fnstcw
pop
popa
and
jnp
ja
mov
mov
jne
adc
dec
dec
pop
test
enter
frstor
call
ljmp
sbb
in
fldenv
hlt
cmp
and
addr16
adc
pushf
out
cld
fisubs
xchg
push
mov
mov
xchg
ja
lods
push
cmpsl
cmpsb
ds
push
jne,pn
lds
inc
scas
push
push
push
mov
dec
ljmp
add
pop
xor
mov
xor
xchg
mov
enter
movsb
cmp
leave
fstps
sub
jecxz
mov
mov
push
xorl
movsb
adc
add
test
movsl
mov
mov
int
data16
sbb
jmp
inc
jmp
push
pop
jmp
adc
mov
mov
test
ret
int
cmpsb
mov
jmp
adc
sahf
popf
jb
inc
mov
shlb
xor
mov
out
cmpsl
adc
imul
or
je
iret
pusha
xchg
xchg
push
ljmp
and
divl
inc
lods
arpl
jbe
pusha
lods
xchg
jge
stos
and
dec
adc
sub
push
mov
mov
jmp
jle
lea
stos
ret
xor
mov
mov
test
cmp
loop
testl
pop
out
pusha
xchg
sbb
add
add
popa
sub
pop
jno
dec
jp
push
jae
iret
cmpsb
nop
mov
addb
cmp
adc
xchg
add
mov
aas
jmp
es
and
filds
jbe
into
loope
insl
lds
mov
movsb
sbb
mov
mov
xchg
add
and
jp
addr16
cltd
push
mov
sub
int3
mov
xchg
in
add
inc
mov
jle
testb
fistpl
mov
fwait
adc
push
aad
daa
add
neg
addr16
out
lods
push
and
sub
xchg
je
fnstsw
dec
aam
xchg
pop
mov
dec
ror
idiv
inc
lods
pusha
loopne
mov
fnstenv
test
jge
into
mov
arpl
addr16
jne
add
xchg
repnz
or
sti
das
xchg
add
gs
and
xlat
stos
and
test
pushf
pop
outsl
cmc
lods
inc
shll
push
mov
lcall
add
sbb
or
cmp
pop
mov
cmpsb
cmp
fnclex
iret
nop
xlat
jae
imul
add
cld
in
clc
xchg
stos
ret
lods
push
or
mov
cmp
pop
pop
loope
test
mov
aam
dec
and
mov
ds
icebp
aad
mov
iret
push
sub
loop
add
pop
dec
decl
int3
xchg
push
inc
adc
pop
adc
mov
sahf
pop
cmp
jle
cld
imul
push
popa
or
idiv
cmp
mov
mov
movsb
cmp
nop
cs
cmpsb
inc
fsub
mov
pop
mov
sub
movsl
push
xchg
es
rclb
jo
ret
mov
adc
ss
lret
sti
cli
cmc
mov
dec
dec
xchg
jnp
icebp
pop
or
push
pop
or
cmpsb
cmp
int
jge
xchg
push
mov
and
js
gs
inc
jns
or
pop
adcl
fimull
pop
xchg
pusha
jae
adc
shl
fisubl
sub
mov
sbb
add
fsubrl
mov
ret
jbe
add
pop
mov
je
push
fsub
dec
enter
pop
mov
repz
mov
cmp
pop
int
jle
pop
enter
inc
fmull
subb
ljmp
xor
adcl
lea
loopne
adcl
mov
jae
pushf
mov
push
mov
mov
clc
pop
shlb
xor
lods
arpl
pop
and
icebp
mov
enter
and
mov
ja
cwtl
jo
pop
mov
jge
mov
mov
stos
ret
in
cmpsl
repz
loop
mov
or
pop
mov
ret
pop
cmpsb
push
sub
jnp
je
loopne
inc
fcmovbe
lds
xor
out
test
mov
fldl
xor
xchg
jnp
in
add
into
gs
cltd
adc
jmp
adc
push
jmp
in
add
in
in
mov
and
flds
adc
hlt
xchg
sub
sub
xchg
inc
jbe
jle
mov
rolb
sbb
push
lret
stos
add
insb
push
lods
pop
adc
xchg
popa
cmp
pop
in
outsb
add
dec
arpl
insl
sahf
xlat
mov
mov
pop
aad
mov
mov
sbb
mov
daa
xchg
repz
test
inc
sbb
arpl
sbb
and
inc
xchg
int
or
cmp
jnp
stos
xor
dec
or
imul
icebp
mov
loop
dec
out
xchg
fstpt
inc
xchg
cmp
pop
ljmp
ja
cmc
mov
jmp
in
lds
fisubrl
sbb
pop
adc
dec
add
stos
out
mov
std
fmuls
out
mov
mov
sub
pop
lods
sub
fidivrs
add
jl
sahf
ja
xchg
test
es
cltd
popa
out
bound
dec
in
sbb
mov
andb
rorl
add
insb
icebp
xor
xlat
aad
ds
mov
das
push
iret
mov
fcmovbe
jb
aaa
add
xor
lret
xchg
sub
sbb
and
ja
stc
jbe
fwait
in
sti
push
test
sub
xor
mov
cwtl
nop
call
and
imul
and
jmp
push
pop
cmp
insl
and
je
xor
mov
mov
movsl
push
imull
push
push
rorl
pop
dec
repnz
mov
pop
cmp
pop
push
lret
outsb
xchg
inc
pop
fcoms
mov
add
fs
pop
sbb
test
push
pop
mov
pop
xor
pushf
scas
idivb
or
push
gs
push
test
js
mov
push
and
adc
mov
stos
inc
ficomps
pop
xchg
pushl
jg
out
fisubrs
in
aam
jp
xchg
xchg
inc
jmp
fs
push
dec
out
xor
insl
or
xchg
cwtl
cs
adc
mov
xchg
jbe
lret
lock
sbb
dec
scas
into
es
ret
push
mov
pop
stos
jo
je
fldenv
mov
arpl
inc
inc
jecxz
out
dec
lcall
sbb
mov
mov
cwtl
cli
or
aam
hlt
std
or
test
icebp
jmp
cmp
int
int
shlb
insb
xor
rclb
call
testl
xchg
aas
ret
push
fidivl
dec
dec
cwtl
and
repz
mov
rol
lret
loop
push
cmp
jmp
in
sbb
iret
and
jmp
xor
or
mov
and
add
mov
and
sub
mov
ja
and
stos
mov
inc
inc
lret
out
dec
sub
inc
fnstenv
pop
pusha
xorb
inc
popf
adc
mov
xchg
add
pop
imul
sub
cmpl
fyl2x
and
testl
rol
adc
sti
fsubs
pop
and
aas
test
jbe
scas
pop
fidivl
int
cmpsb
ja
and
and
inc
xlat
imul
insb
aas
jnp
lret
xlat
sbb
leave
outsb
and
sub
rcl
and
pop
mov
daa
sbb
xchg
sub
sub
cmp
imul
mov
int3
push
je
cmc
jg
daa
insl
in
test
sbb
cmp
sub
jb
inc
push
iret
popa
lods
outsl
ficoms
jge
nop
xor
in
jl
sbb
fcoml
dec
cltd
or
pop
decb
loopne
or
mov
outsl
xorl
push
push
add
push
jns
push
mov
lret
adc
sbb
adc
inc
mov
jmp
mov
mov
loope
push
and
and
add
sbbl
aas
inc
push
enter
rcr
adc
mov
movsl
movsl
inc
cmp
jg
sub
aas
xchg
jl
daa
stos
mov
ds
sbb
mov
cmp
cmp
xchg
ret
add
rorb
fidivrl
add
cmp
ds
ret
testb
add
push
cltd
pop
adcl
adc
sbb
push
imul
int3
mov
and
jbe
in
and
add
sbb
in
push
xor
mov
mov
ss
jge
jo
xchg
imul
ss
repnz
lret
cmp
push
in
or
lods
ja
dec
inc
sbb
stc
movsb
out
imul
sarb
in
mov
mov
je
popaw
in
mov
in
add
and
xor
repz
ds
xor
loop
adc
stc
add
push
and
addb
es
mov
test
adc
into
addl
popf
in
and
sbb
int
push
mov
pop
fwait
adc
inc
cli
xchg
mov
shlb
enter
mov
lods
jg
es
add
outsl
xor
pop
insl
test
fildl
loopne
lcall
gs
mov
iret
sub
push
jno
pop
mov
js
mov
sahf
ficoml
shll
scas
jns
pop
call
add
mov
lahf
pop
jp
addr16
inc
mov
js
add
test
cwtl
mov
jae
subl
jns
lret
scas
ja
inc
icebp
xchg
mov
sar
adc
fbld
int3
pop
shl
sbb
lods
jg
adc
int3
dec
loop
popf
mov
cmpsl
ljmp
fsub
cmp
inc
sti
out
addr16
and
sbb
add
and
cs
icebp
add
adc
xor
adc
inc
fstp
sub
and
cld
fs
imul
xchg
fstpl
mov
mov
pop
cmc
fists
pop
jb
jl
sbb
pop
dec
cmp
xor
das
jbe
insl
xor
mov
sarb
push
push
mov
mov
rcrl
inc
orl
out
pop
movb
xchg
jne
or
test
inc
push
cld
shrl
cmpsl
pushf
call
sub
out
jmp
push
mov
aas
pusha
and
xchg
sbb
and
imul
pop
xor
mov
int3
mov
jle
sbb
loopne
test
lods
imul
add
mov
jp
subl
push
lds
ja
mov
nop
outsb
test
mov
lret
push
rcrb
adc
pop
das
adc
movsb
pop
cmp
iret
loop
mov
inc
push
scas
mov
lret
adc
dec
iret
in
add
ss
adc
cmp
shr
xchg
mov
scas
push
mov
cmp
inc
negb
inc
push
cs
pop
push
pop
lret
rcrl
push
jecxz
mov
dec
xchg
cli
cmc
lret
and
iret
jecxz
inc
mov
fadd
nop
inc
lods
rorb
sti
int
into
and
cld
sbb
mov
loop
in
inc
add
and
mov
jmp
fldl
mov
mov
pop
clc
ljmp
fsub
clc
cltd
mov
mov
in
pop
xchg
adc
mov
pop
xchg
inc
jmp
pushf
sub
bnd
jo
fs
jg
inc
scas
mov
shll
ror
std
jge
or
nop
push
push
xor
mov
scas
outsl
das
jns
pop
cli
sub
cwtl
pop
mov
popa
or
push
mov
xchg
scas
test
popf
andb
imul
and
decb
xchg
jne
mov
test
imul
mov
fdivrs
cmp
js
fmull
les
sbb
and
xchg
adc
sub
cmp
mov
xor
aaa
bound
and
jmp
rcl
add
inc
xor
std
out
in
push
sbb
xor
mov
sbb
or
into
adc
test
or
jne
ljmp
xchg
scas
and
cs
test
stos
lret
xor
sti
in
inc
call
or
mov
or
test
mov
sub
xchg
mov
jmp
sbb
jne
lods
jns
or
adc
loope
sbb
mov
sahf
cltd
pop
movsb
jl
cmp
xchg
mov
xlat
push
test
mov
add
pushl
imul
push
xor
inc
and
inc
push
scas
std
imul
imul
sbb
dec
mov
mov
aas
loope
fdivs
sbb
mov
dec
pop
test
arpl
push
sbb
cltd
cld
jmp
into
shrl
fbstp
add
push
mov
push
cld
iret
pushw
repz
dec
nop
cmp
movsb
xchg
out
fwait
and
mov
es
mov
adc
cli
or
mov
hlt
in
cmp
jecxz
lea
rcll
jno
inc
mov
inc
mov
mov
imul
mov
mov
adc
addb
inc
pop
in
sub
adc
jge
push
movsl
inc
test
fisttpl
and
cmc
pop
sti
jb
imul
dec
mov
mov
dec
add
sbb
loopne
pop
add
iret
and
jns
mov
pop
adc
leave
pop
adc
push
insl
xlat
adc
pop
test
xchg
clc
mov
fsubr
ret
mov
lea
dec
adc
mov
mov
mov
test
sar
fwait
adc
adc
movsb
inc
inc
test
daa
test
xlat
into
fdivl
fsubl
cmp
loopne
adc
pusha
daa
jb
rclb
outsl
xor
cmp
add
dec
aad
push
orb
push
and
pop
imul
scas
lcall
lcall
xchg
scas
sub
jnp
popa
sbb
or
aaa
push
push
jmp
loop
sbbb
out
imul
xor
adc
sbbb
out
xor
xchg
cmpsb
push
mov
jb
dec
subl
mov
fadds
cwtl
leave
aam
data16
ja
or
jle
lret
jo
lea
mov
inc
mov
mov
or
dec
fdiv
es
loope
push
repz
push
bnd
mov
out
xchg
and
cld
imul
mov
mov
movsb
jno
leave
out
pop
adc
push
cmc
xor
sub
arpl
mov
test
or
push
fadds
jnp
push
pop
jae
mov
adc
cmp
jl
pop
lcall
xor
push
cmpsb
jecxz
jmp
dec
and
mov
lods
outsl
daa
mov
addr16
push
jp
shr
xor
fisttps
mov
lret
test
loop
rcll
jnp
aad
push
lods
pop
cli
fdivl
shll
cmpsb
adc
fdivs
xor
jne
adc
pop
repnz
movsl
jle,pn
sub
mov
rorb
mov
popa
mov
or
push
add
loope
outsb
cmp
xchg
xchg
aaa
adc
pushf
mov
fdivl
enter
pushl
inc
mov
clc
fiaddl
cltd
push
or
pop
lock
dec
lea
std
into
jns
pop
mov
jb
cmp
jp
push
sti
pop
jbe
loope
mov
es
jb
hlt
xchg
scas
jns
sbb
adc
in
pop
inc
cmpsb
in
pushf
shrl
push
sub
das
jne
inc
push
xor
push
cmp
imul
loope
mov
pop
hlt
cli
cmp
icebp
and
adc
cli
out
cld
mov
jo
mov
cmp
jg
adc
jno
inc
pop
data16
jbe
fiadds
push
out
sub
sbb
outsb
and
addl
pop
lock
xor
bound
into
ja
int
inc
stos
xchg
rcll
in
into
and
inc
testl
sbbb
xchg
pop
sub
fmulp
movsl
icebp
jl
out
orb
icebp
pop
stc
insl
scas
push
mov
cmp
inc
in
orb
into
pop
out
leave
sbb
mov
mov
push
out
stos
mov
add
lret
in
insb
out
mov
mov
stos
outsb
inc
aas
mov
jg
test
dec
fwait
repnz
rorl
lea
sbb
mov
sbb
jns
inc
cmp
ljmp
movsl
aas
add
imul
scas
inc
pop
sbb
mov
ljmp
fwait
cmpsl
repnz
shlb
mov
or
or
jle
mov
sub
sbb
xchg
xchg
pusha
inc
pop
mov
movsb
mov
fnstsw
daa
cmp
fsubs
hlt
and
imull
adc
jnp
jecxz
jg
mov
xchg
mov
add
das
mov
addr16
test
cmp
repnz
add
jecxz
scas
inc
jecxz
fs
xchg
pop
add
lock
imul
ja
outsl
lods
lock
test
scas
sbbb
xchg
pop
scas
dec
sbb
scas
and
sub
inc
push
adc
out
insl
popf
dec
repnz
push
mov
loope
sbb
cmc
dec
mov
clc
jl
push
mov
or
push
dec
xor
test
jge,pt
leave
sahf
sub
or
adc
dec
aaa
xlat
notb
stos
push
mov
rcll
dec
loopne
mov
xchg
xor
pop
out
cmp
les
pop
cmp
bound
cmp
and
fwait
xor
jg
fadds
sbb
fcoms
mov
sub
pop
out
inc
add
or
mov
pop
pop
pop
and
inc
imul
or
xor
in
cmp
jnp
push
roll
inc
subl
or
pop
mov
idivb
mov
movsb
jg
popa
fs
shrb
mov
sub
mov
jae
stc
mov
pop
xchg
out
idiv
xchg
add
fwait
decb
push
loopne
adc
nop
popa
dec
xchg
cmpsb
nop
jp
ret
adc
imul
dec
lods
push
call
xlat
push
inc
scas
inc
mov
jg
or
bound
sub
sub
cmpsl
adc
xlat
push
mov
enter
stos
sub
lcall
and
repnz
xchg
jg
insb
es
in
sbb
out
mov
mov
inc
push
fnstcw
addr16
stos
xor
jne
jae
in
push
js
repz
xchg
fwait
repnz
pushf
mov
sub
cmp
push
fwait
push
mov
xor
fucom
lods
jge
cld
repz
push
fimull
mov
testb
add
stos
cld
jl
int
in
sbb
pop
scas
mov
popa
push
fdivl
xor
mov
out
ja
pushf
or
xorl
jne
sbb
addr16
or
fwait
rcrb
adc
mov
enter
or
dec
popa
cmp
enter
scas
push
sub
test
aas
push
mov
add
lea
pusha
jnp
add
into
adc
aaa
dec
outsl
imul
mov
push
add
or
testl
leave
fstpt
push
push
mov
push
mov
inc
jae
push
mov
pop
jle
icebp
xchg
in
loopne
cmp
sbb
push
or
lcall
mov
push
cmp
mov
mov
cmc
scas
mov
push
pushf
hlt
or
jno
leave
jbe
dec
push
nop
sbb
cwtl
adc
ss
xlat
aaa
subb
cmp
enter
movsl
jmp
adc
or
cwtl
jno
mov
push
shlb
pop
jge
xchg
pop
jnp
test
mov
fdivrl
mov
into
dec
and
iret
sahf
ret
jnp
push
mov
scas
mov
stos
rorl
dec
rcr
shl
dec
adc
mov
adc
inc
pop
jnp
mov
cmp
pop
lahf
mov
sub
push
outsl
sbb
inc
and
mov
jge
push
out
adcl
fs
sub
jmp
dec
jno
shll
inc
mov
push
xchg
mov
out
lahf
sahf
jns,pn
cmp
popf
test
xchg
cld
xchg
ret
stc
les
imul
int
out
aas
out
outsl
daa
lock
jnp
mov
add
sahf
scas
and
in
inc
xchg
push
loope
sub
jns
pop
bound
add
incb
cmp
fsubs
stos
popf
mov
push
icebp
out
xchg
pop
xor
aas
scas
nop
add
jbe
sbb
in
lret
rcll
cmpsb
sub
ss
call
mov
shll
std
nop
arpl
sbb
sub
inc
imul
mov
data16
testl
test
les
testl
dec
iret
lock
add
xor
lock
dec
faddl
push
xlat
call
and
fimull
or
jge
addb
lret
aam
sbb
mov
cmp
lret
jae
fadds
and
popf
push
jecxz
hlt
cltd
xor
push
loope
sub
mov
repz
outsl
scas
lcall
outsb
lahf
sub
test
call
sub
push
cmpsl
popl
lcall
insl
scas
mov
mov
aam
fmull
pusha
test
dec
sbb
in
insl
jp
adc
call
insl
inc
add
mov
das
inc
jmp
movsl
aam
nop
les
movsl
data16
push
mov
mov
inc
xor
std
aad
test
pop
js
pop
fstl
notb
icebp
pop
and
pop
stos
or
mov
mov
push
inc
sbb
sbb
and
dec
or
xchg
leave
inc
scas
sarb
test
cld
fdivs
dec
out
cmp
push
mov
push
stos
push
xor
insl
jmp
cmp
lock
popa
test
cmc
lahf
sbb
pop
lock
adc
test
dec
xor
das
out
push
sub
lds
lahf
rcll
loope
mov
mov
arpl
mov
rorl
sbb
pop
enter
and
daa
mov
xor
push
sbbl
mov
and
adc
ds
and
ret
xchg
add
mov
testb
mov
fcompl
pop
mov
mov
shrb
ret
pop
or
add
js
adc
pushf
cmp
push
popa
dec
pop
arpl
add
hlt
mov
push
addr16
push
mov
loopne
cli
or
pop
in
mov
lcall
out
into
push
fadd
lret
or
ret
jnp
aaa
sbb
sbb
inc
sub
inc
mov
inc
lods
aas
dec
cmp
mov
fiaddl
aad
lock
mov
cmc
cmp
pop
xchg
jbe
or
out
nop
leave
aam
test
ljmp
fnstenv
in
loope
jmp
sub
push
mov
dec
mov
call
push
pop
jo
sub
pop
loop
pop
iret
cmpsb
or
sub
jecxz
popf
cmpsl
aad
iret
out
dec
das
cmp
xlat
and
loope
out
jno
data16
xchg
add
jo
or
pop
mov
sub
shl
in
imul
and
aas
ret
mov
jecxz
test
subl
mov
stos
test
xchg
xor
add
sub
pop
mov
sahf
dec
in
or
jns
push
imul
aaa
dec
adc
mov
sub
xor
into
je
inc
fidivs
mov
inc
fidivrs
pop
fidivrl
ljmp
roll
pop
addr16
xchg
add
mov
lcall
mov
push
lcall
sahf
gs
into
and
loope
shrl
testb
xchg
pop
shlb
cmp
cs
pushf
xor
iret
jmp
test
mov
add
fisubrl
int
aam
mov
mov
in
pop
loop
add
push
inc
data16
pop
arpl
aaa
into
xchg
pop
and
pusha
not
cmp
cmpsl
add
inc
js
inc
stos
popa
mov
adc
and
cwtl
and
mov
jb
and
dec
mov
sbb
pop
and
cmc
setg
ss
mulb
mov
gs
push
sbb
inc
push
fiaddl
adc
mov
cwtl
stos
subb
and
cmpl
pop
mov
mov
aam
in
xchg
sbbl
lds
outsb
rorb
or
fidivrs
mov
sar
lea
sub
cmp
mov
jnp
cmp
daa
in
cmp
cmp
inc
mov
xor
lcall
lret
stc
out
cmp
xor
jecxz
cli
push
inc
aaa
repz
rcll
mov
jle
popf
lcall
xor
xor
inc
add
cmpsl
mov
fsubl
dec
cld
out
push
add
mov
pop
ja
cmp
xsha256
cmpsb
pop
add
leave
cmpsb
clc
stos
cmpsb
sub
aad
lcall
jg
dec
mov
testb
mov
movsb
add
or
pop
cmp
lret
inc
pop
mov
mov
jge
jae
pop
mov
add
dec
pop
cmp
pop
popa
ss
ss
mov
repz
fwait
pop
xchg
mov
loope
mov
jbe
lods
xchg
shrb
in
xchg
cli
pusha
loop
in
push
xor
pop
sub
dec
push
fdivl
sub
inc
inc
xor
out
jp
sub
fcomi
sbb
push
maskmovq
negl
or
inc
cmp
sbb
pop
int
jl
cmc
push
inc
sub
ljmp
lret
xor
cmp
bound
mov
enter
or
sub
mov
stc
inc
and
rcrl
xor
adc
mov
scas
sti
scas
lcall
leave
fsubl
mov
sbb
arpl
jle
push
jb
lahf
xchg
lods
mov
test
mov
adc
insl
sbbb
mov
in
sbbl
test
xor
and
sub
pop
cmp
xchg
push
sbb
loope
iret
xor
add
jne
lods
lret
mov
mov
push
mov
cmp
jg
adc
mov
fisubrl
ds
rorl
lret
or
iret
push
cmpb
sub
jmp
imul
push
cmpsb
insb
fbld
inc
fdivp
test
rcrb
repz
sbb
xchg
jns
loope
lods
push
out
xor
push
adc
lahf
hlt
mov
and
inc
and
call
mov
test
xor
mov
cmp
popa
fbstp
adc
loopne
out
push
xor
push
cmp
pop
lea
gs
jb
xor
pop
xchg
inc
fsubr
cli
add
sub
xor
in
push
add
gs
fdivr
lods
push
jle
das
mov
xor
cmp
sub
xchg
ret
xor
testl
out
bound
mov
mov
notb
jne
shrl
imul
add
clc
and
mov
scas
pop
jnp
dec
aas
outsl
imul
lods
mov
push
aas
sbb
sub
popf
push
arpl
pop
sahf
inc
mov
or
fcomps
sub
pop
out
xchg
pushf
push
or
add
mov
cmp
test
orb
adc
or
jnp
pop
clc
pushf
or
ljmp
sbb
mov
sbb
test
out
mov
mov
loopne
clc
adc
cmpl
pop
mov
hlt
mov
bound
aaa
loopne
popf
cmc
xchg
into
mov
shrb
idivb
icebp
inc
sub
cld
add
add
lret
or
ret
or
or
cs
and
push
sub
mov
test
mov
jae
inc
push
insl
mov
ss
stc
aam
sbb
and
mov
cmpsb
decl
mov
cmpsb
sbb
prefetchnta
ds
and
clc
cmp
push
movsb
das
jae
int3
mov
dec
dec
add
imul
push
int
fwait
test
movsl
sbb
sbb
xor
xchg
mov
into
fwait
aas
stc
neg
jbe
fwait
imul
mov
jo
pmaxub
call
push
popf
pop
imul
and
decb
mov
push
cmpsb
clc
shl
int
sbb
add
fld1
test
sti
std
add
sbb
ljmp
add
jb
xor
push
add
xchg
daa
sub
jne
sbb
lahf
push
shlb
sbb
jl
aaa
stos
xor
shlb
mov
in
cmp
int3
imul
pushf
in
inc
iret
lahf
mov
jb
sti
cmp
xor
arpl
nop
jp
fwait
xchg
push
imul
jno
notb
cmp
mov
mov
stos
jne
jp
divl
loope
shll
outsb
stc
xchg
jnp
jns
or
and
sbb
adcb
mov
test
push
in
sbb
lock
mov
out
test
and
fwait
sbb
jle
sbb
push
xlat
or
push
imul
xchg
test
inc
inc
shll
or
out
leave
imul
mov
pop
and
hlt
ljmp
test
or
push
push
out
jb
push
in
jno
push
mov
stos
cli
std
fwait
repnz
lods
mov
mov
test
jle
xor
push
adc
ss
arpl
ss
push
push
push
aas
in
mov
jnp
mull
push
dec
dec
fdivrp
jb
inc
aaa
dec
pop
imul
ja
mov
sub
scas
push
insl
pop
sbb
push
sub
xor
fisubs
out
loopne
cmp
push
adc
push
out
out
cmp
mov
pusha
sub
pushf
mov
cld
cmpsb
in
push
push
in
test
inc
pop
lock
lock
and
pop
ljmp
cmp
js
in
mov
adc
jmp
adc
insb
jmp
cmpsb
in
mov
lcall
mov
nop
ds
aam
pop
pop
shl
pop
xchg
ja
inc
stos
inc
aaa
addl
pop
enter
or
rclb
loope
rcrl
es
inc
bound
mov
add
std
subl
imul
jnp
dec
imul
iret
push
ret
lock
and
cmp
xor
xchg
push
stos
shll
xor
in
out
mov
jle
inc
stos
inc
ja
outsb
xor
test
stos
xchg
into
iret
stc
inc
or
dec
mov
insl
fldenv
mov
and
fwait
imul
cwtl
out
add
inc
and
jl
gs
sub
aaa
jbe
add
mov
inc
ja
popa
fldenv
aaa
nop
fbstp
jno
dec
cmp
jb
xchg
push
cmpl
ljmp
jmp
mov
jno
cmp
xor
and
out
xchg
mov
call
xor
push
fnsave
cmp
or
pusha
sahf
jns
fnstenv
jge
imul
popf
push
int3
fsubs
mov
aas
shll
push
pop
ss
sbb
scas
icebp
aaa
int3
sbb
ljmp
call
stc
xchg
jae
push
xchg
cmp
iret
data16
push
icebp
and
cmp
int
rclb
sub
ja
or
cmp
xor
pop
push
inc
mov
and
mov
xchg
or
xchg
push
sub
mov
add
movsb
cmp
js
push
and
mov
cwtl
add
scas
mov
int
or
sbb
mov
aaa
stos
in
pop
push
lcall
ja
mov
fpatan
pusha
push
xlat
lea
enter
or
cltd
test
mov
mov
pop
test
fidivs
mov
push
inc
ja
pop
sbb
mov
ret
mov
insb
movsb
cmp
cmp
cld
xchg
fstpl
scas
push
loop
outsl
enter
std
movsl
imul
xlat
dec
xor
testb
cwtl
pop
and
inc
or
pop
jb
ds
icebp
jle
sub
lods
xchg
ljmp
dec
divb
or
xchg
xor
sub
mov
icebp
push
loop
jp
ljmp
push
sub
cmp
pop
sbb
fbstp
sbb
clc
sbb
loope
mov
xchg
dec
cmc
adc
sqrtps
or
and
cwtl
test
pop
shl
loopne
jae
mov
jmp
dec
fisttps
cmp
out
cmpsl
xchg
pushf
pop
dec
test
aaa
pop
jo
dec
adc
push
pop
cmp
test
insb
push
fistpll
and
clc
dec
add
push
lcall
mov
push
inc
nop
adc
insl
mov
aaa
or
aam
mov
mov
sbb
mov
push
lds
adc
rclb
fldl2t
sahf
dec
loop
dec
ljmp
pop
loop
jge
jae
fsubl
adc
sub
sbb
adc
mov
or
xor
in
or
jae
jg
cmpsb
and
or
test
aam
push
stos
add
stc
inc
fbstp
jo
std
sub
add
loop
mov
aad
dec
popa
pushf
call
add
sub
dec
mov
das
aas
test
imulb
out
lret
pop
push
lods
xchg
cmp
sbb
leave
fsubrs
jmp
ret
pop
insl
mov
nop
xor
push
xchg
scas
xor
sub
cltd
out
xor
ds
jp
or
fbstp
sub
int3
fiadds
sub
sarb
int
push
pop
dec
ja
ret
push
fwait
hlt
sar
adc
rep
pop
mov
in
dec
out
sahf
jge
mov
add
push
jae
iret
popf
push
lods
int
add
xchg
enter
mov
mov
shlb
cld
inc
xor
stc
cld
int
add
dec
in
mov
or
sub
push
out
inc
sarb
cmp
movsl
sbb
jae
mov
cmp
or
out
cmp
fnstcw
lods
lcall
pop
cmp
sub
les
mov
adc
dec
dec
pop
jge
mov
fnstcw
daa
lods
cli
pushf
xor
mov
sub
jnp
xchg
pop
lret
xlat
jmp
and
cmp
sarb
aaa
incb
pop
mov
xchg
orb
fdivs
mov
lret
xlat
push
cltd
outsl
pop
popf
xchg
iret
mov
pop
ljmp
test
mov
and
xor
in
xor
mov
test
pop
mov
roll
ret
lods
jp
clc
stos
push
js
inc
dec
into
dec
repnz
mov
sub
fwait
rcll
adc
mov
push
stos
push
cwtl
pushf
lods
rclb
movsb
rorb
fisubs
ret
dec
adc
pushf
jp
out
cmpsb
cmp
loop
jbe
jnp
arpl
mov
movsl
mov
outsl
test
push
mov
insl
dec
test
jl
cmp
ret
ljmp
fcmovbe
shr
or
imul
cmp
test
test
test
jno
pop
dec
hlt
push
loop
mov
int
ljmp
lock
mov
es
ljmp
sub
cmc
lock
insl
add
hlt
cmp
cmp
frstor
dec
pop
pop
movsb
mov
rdmsr
ret
stc
jae
or
jmp
sbb
mov
push
push
mov
mov
xlat
cmc
jnp
dec
jb
movsl
or
sbb
mov
sbb
push
aam
jge
push
cmc
popf
frstor
add
mov
test
call
push
sbb
je
adc
rolb
lahf
andl
jo
mov
andb
in
imul
mov
lcall
pop
cmp
movsb
mov
lods
mov
icebp
insb
out
pop
xor
push
addl
sbb
test
fwait
bound
jp
cmp
push
les
jb
add
sbb
mov
mov
mov
je
mov
pop
inc
or
inc
imul
inc
stc
sbb
adc
mov
jnp
addr16
jg
inc
push
or
fisubs
dec
outsb
add
cwtl
cmp
fsubrl
cwtl
stos
sbb
rolb
pop
cmc
test
icebp
lock
cmpsl
arpl
and
mov
sub
dec
jp
inc
pop
subb
adc
les
je
imul
push
fnsave
cs
cwtl
xor
mov
icebp
cmp
divl
repz
mov
out
mov
ds
xchg
jb
in
pusha
in
mov
ret
cmp
stos
fstl
mov
push
fimull
shrl
push
cmpsb
pusha
mov
ja
loopne
outsb
sbb
sbb
fdiv
scas
stc
xchg
mov
repnz
out
popf
mov
lret
orl
add
repz
and
mov
lret
out
and
insl
aad
sbb
lret
pop
sahf
cld
and
and
xchg
lods
bound
outsl
inc
loopne
insb
test
dec
push
mov
addr16
test
cli
mov
popa
and
sti
fwait
sub
repz
and
iret
or
add
sbb
pop
push
ret
pop
cld
sbb
les
cmp
cmp
lret
adc
or
mov
inc
adcb
das
and
addr16
push
dec
lods
ds
out
or
rorb
shl
jp
mov
mov
scas
jg
dec
or
xchg
lcall
dec
or
mov
data16
test
dec
test
out
cwtl
imul
push
in
cmp
or
jp
shlb
fidivrl
clc
mov
into
test
leave
mov
loopne
ret
pushf
dec
repz
ds
in
inc
adc
mov
dec
cmp
cmc
popf
xor
rcr
xchg
popl
or
dec
test
dec
inc
and
adcb
and
scas
push
mov
or
es
jp
loop
jl
dec
sub
shrb
jmp
mov
ret
pop
sahf
shl
iret
jg
in
or
sarb
scas
and
daa
out
xchg
sahf
movsl
cmpsl
jmp
jns
sbb
addr16
jbe
cmp
jae
movsl
lcall
jns
jnp
inc
pop
jns
pop
xlat
fidivl
std
cmpsb
jmp
aaa
jle
movsb
sub
orl
mov
cmp
inc
fnstsw
sub
movsb
and
fs
data16
xor
xchg
or
sub
nop
push
pop
aas
outsl
loop
push
fwait
inc
movsb
dec
movsb
pop
mov
pop
pop
and
xchg
inc
imul
loope
aad
adcl
sbb
push
sub
inc
popa
daa
inc
jg
enter
nop
mov
jnp
pop
lods
stos
ds
lods
cmp
cmp
outsb
insb
testl
pop
jp
mov
lahf
xchg
add
cltd
cmc
push
fnstenv
sbb
add
cli
jne
loope
or
mov
fwait
in
pop
cmpsl
out
andb
mov
test
sti
gs
xchg
nop
mov
shr
ds
setne
push
or
xor
inc
sub
js
jne
jge
gs
stos
and
push
gs
lods
out
int3
call
push
mov
add
xchg
sub
cmpsl
xor
stos
ljmp
inc
dec
mov
inc
rclb
rcrl
and
insb
inc
mov
push
add
test
lods
or
enter
inc
pusha
sub
fisubl
inc
xor
leave
add
stos
push
dec
movsl
mov
arpl
mov
cld
xor
pop
lods
jge
fbld
push
imul
add
inc
cs
pop
hlt
mov
push
cmp
mov
jns
dec
sub
and
add
mov
test
mov
add
sahf
out
inc
sti
lods
repz
hlt
cmp
xlat
sub
or
inc
pop
jecxz
push
ljmp
jno
xchg
lock
loopne
enter
js
stos
mov
rcll
lahf
outsb
orb
jno
call
cmp
and
imulb
xchg
jp
shlb
add
mov
adc
and
mov
ss
push
xor
jmp
jle
mov
mov
push
call
pop
mov
ret
xor
lcall
in
ret
xor
adc
and
lds
pop
or
xor
push
adc
call
jmp
sub
inc
cmc
out
mov
push
aas
add
mov
lods
fdivl
dec
fists
cld
mov
sbb
bound
jl
adc
leave
mov
dec
jo
ret
mov
mov
xor
add
adc
push
mov
cmp
mov
mov
scas
cmp
pop
in
aas
adc
hlt
mov
fildl
out
cmp
mov
mov
loopne
sub
add
les
mov
or
dec
dec
fiaddl
cmp
mov
enter
enter
pop
pop
icebp
fildll
inc
ss
das
pop
rorl
pop
mov
xor
cmpsl
push
aam
cmp
in
jl
movsl
sub
mov
enter
rorl
lahf
sbb
pop
and
lock
add
cmpb
jecxz
push
rcll
test
mov
mov
cmp
xor
pop
pop
dec
pushl
lret
add
push
jbe
mov
cmpb
push
out
cmc
fwait
movsb
iret
stos
adc
add
xchg
xchg
ljmp
adc
pushf
xor
xor
mov
mov
jb
repnz
jmp
dec
outsl
roll
je
in
mov
insb
cmp
imul
mov
fnstenv
rcr
adc
fimuls
lahf
pop
je
inc
bound
fucom
lods
add
ljmp
cltd
xor
push
out
outsl
aas
mov
cmpsb
add
mov
cmp
push
enter
and
sub
sar
cwtl
das
xor
int
mov
repz
sbb
sbb
pop
insl
nop
mov
or
sub
es
pop
xor
leave
and
fistpl
push
pop
jle
ja
xor
dec
pop
xor
and
pop
fsubl
mov
mov
lahf
lods
imul
inc
cmp
dec
daa
jle
das
or
sbb
mov
jg
in
adcb
inc
stos
icebp
xchg
dec
mov
popf
push
xor
outsl
enter
jbe
fidivs
and
cld
adc
pop
mul
mov
add
adc
lods
xchg
mov
dec
test
mov
or
scas
inc
ds
mov
adc
adc
out
fiadds
sub
int3
orb
dec
stos
into
xor
cmp
in
add
movsb
mov
mov
orb
cmp
aad
xchg
pop
push
inc
scas
push
push
mov
sub
sub
mov
adc
cmp
cmpsl
add
sub
push
inc
int3
dec
xor
mov
dec
inc
call
mov
popf
out
sbb
lock
daa
adc
std
cmp
neg
xor
ja
ficomps
jmp
out
add
fwait
xor
xor
xchg
jmp
sbb
lds
and
cmp
add
xor
xor
les
xchg
pop
cmc
xchg
lgs
jne
in
cmpsl
mov
rcrl
mov
and
dec
add
dec
adc
and
pop
jmp
arpl
push
mov
mov
aaa
and
cmp
jmpw
sbb
ret
cmp
pop
sahf
sbb
loop
cwtl
mul
and
jne
outsl
jp
lods
mov
rorl
add
data16
xlat
mov
xor
push
lcall
or
std
out
sbb
ss
sbb
pushl
and
insb
repz
mov
icebp
jo
push
lahf
leave
push
js
imul
cmp
mov
out
push
fmull
shll
mov
mov
pop
jno
xchg
aas
in
fwait
cmp
hlt
jo
test
push
fdivr
nop
jge
out
or
lahf
pop
xor
cmp
xlat
mov
push
or
gs
sarb
mov
cld
pop
push
andb
pop
popa
jmp
xchg
jge
add
daa
xchg
movsl
iret
jmp
sub
and
in
or
scas
decl
in
inc
rcl
mov
movsl
xchg
fdivrl
mov
mov
cmpsl
cmp
popa
pop
or
les
in
dec
lcall
cltd
push
ret
sbb
pop
into
scas
inc
add
sub
jb
sbb
jle
divl
sbbl
adcl
push
imul
push
mov
sub
xchg
stc
mov
cmp
xor
mov
movsl
in
dec
cmp
mov
loopne
loopne
adc
in
sbb
outsb
mov
jle
lret
mov
pushl
push
ja
mov
sub
jo
loope
icebp
pop
xor
and
push
inc
push
jge
stos
inc
imul
or
sub
push
adc
add
test
test
jnp
adc
aas
shlb
hlt
inc
outsb
ret
pop
call
or
and
mov
into
pop
int
cmpl
stc
xchg
out
or
lock
add
cmp
xchg
subb
dec
inc
cs
insb
cli
das
call
sbb
or
mov
test
mov
enter
lahf
adc
and
pop
pop
sub
xor
mov
ret
movsb
cs
pop
cmp
push
out
js
xchg
test
pusha
dec
fadds
jns
out
enter
cwtl
mov
jbe
add
pop
xor
scas
loopne
cltd
fbstp
lcall
cmp
mov
cmp
jge
push
sub
pop
add
mov
ljmp
cmp
dec
mov
cli
shl
leave
ret
adc
mov
and
push
lahf
shrb
rol
jae
and
rol
xchg
js
jecxz
push
adc
pop
pop
clc
cs
shl
loope,pt
scas
cmp
xchg
lea
add
loope
in
sub
sbb
enter
negl
inc
lret
bound
popa
sbb
pushf
bound
mov
repnz
dec
xchg
sub
push
fiaddl
dec
das
adc
stos
add
push
dec
das
das
jae
test
pop
adc
inc
or
xchg
pop
cmp
ret
lock
jle
imul
dec
cmc
jae
jbe
out
in
std
cmp
push
push
leave
xchg
jbe
sub
push
pop
cli
std
push
and
lcall
jno
lret
pop
or
xor
loopne
push
imul
push
jo
mov
ret
inc
ss
mov
mov
mov
xchg
outsl
jae
and
cli
mov
mov
adc
movsl
scas
xchg
ret
push
imul
ja
and
in
ret
push
fisttps
mov
adc
jns
sub
mov
insl
arpl
adc
dec
cwtl
cmp
pop
mov
repz
cmp
pop
mov
jl
push
in
mov
popa
les
mov
add
test
js
lods
mov
pop
xorl
scas
and
rol
xchg
mov
scas
sbb
cmp
call
cwtl
jg
jno
jp
ja
sub
inc
rcrb
jno
lret
outsl
xchg
scas
jns
or
nop
or
xchg
cld
mov
cltd
imul
sbb
je
lds
lret
daa
adc
jbe
xchg
loopne
and
into
aas
mov
or
adc
mov
pushf
xchg
insl
ret
cmc
dec
lahf
sub
push
mov
or
rorl
rol
cwtl
mov
ds
aas
push
stos
in
dec
cli
rcll
pop
push
and
inc
imul
cmp
jo
push
popa
or
in
lods
ret
sbb
jg
loopne
out
rorl
or
xchg
enter
adc
xchg
es
pop
add
sub
xor
les
hlt
cmpsl
dec
add
xor
shr
mov
cmpsb
cwtl
test
lods
stc
call
push
mov
addr16
bound
xchg
fucomp
or
dec
outsb
movsb
subl
repnz
xchg
xchg
shrl
das
add
xchg
cmp
lods
incb
andl
xlat
mov
sti
push
dec
popf
inc
lcall
xchg
scas
push
lods
jg
les
jle
cli
into
cmpsl
pusha
sarb
imul
add
mov
cltd
sbb
lods
mov
ljmp
les
jge
call
lea
sbbl
push
pop
lcall
xor
dec
pop
jge
cmp
add
mov
or
bound
lahf
gs
fistps
jo
shlb
into
fwait
xchg
clc
push
cli
in
aam
mov
cmp
mov
testl
pop
in
adc
mov
adc
jg
inc
lods
sub
pop
bound
loope
mov
data16
aam
xor
je
dec
popa
pop
imul
add
aaa
adc
sarl
js
push
cmc
inc
fwait
out
mov
daa
mov
xchg
adc
add
mov
rolb
mov
xchg
fwait
inc
push
int
stos
mov
mov
test
mov
or
aad
and
enter
daa
stos
xchg
push
fld1
jnp
inc
cmc
ja
pop
or
scas
mov
mov
std
les
adc
push
inc
aaa
or
xchg
jmp
push
sbb
pop
out
cmp
adc
or
mov
jo
push
lret
and
push
xor
dec
lods
mov
jno
leave
push
push
in
cmp
pop
xor
pop
jmp
cmp
imul
xor
sar
dec
sub
mov
pop
inc
mov
mov
or
xor
or
mov
jb
out
in
mov
lods
xor
sbb
push
lods
jl
into
mov
das
sbb
sti
pop
dec
nop
out
test
les
or
sub
mov
push
xchg
ds
shlb
adc
and
jecxz
pusha
ljmp
pop
pop
pop
sti
dec
add
test
cmp
pop
pop
sbb
xor
sbb
pop
int3
push
je
fdivl
xlat
xchg
pop
insl
jecxz
mov
mov
inc
enter
fists
pop
cvttps2pi
inc
sub
dec
lret
stc
test
mov
sub
nop
xor
mov
ds
mov
nop
inc
fcmove
jae
fucom
push
bound
jne
or
ret
pop
filds
arpl
cmp
xor
addr16
add
push
mov
pop
jmp
jae
andl
jb
push
mov
add
std
jg
xor
outsb
sbbb
cwtl
int3
faddp
inc
xor
dec
xchg
inc
adc
aas
or
mov
outsb
jne
inc
inc
jbe
sbb
sbb
stos
mov
push
gs
addr16
out
out
test
cmp
aad
or
fidivrl
lods
jnp
lods
or
repz
jp
mov
std
lods
adc
jbe
xchg
mov
insl
jge
xchg
push
mov
sbb
inc
add
mov
mov
and
sahf
lods
adc
and
pop
push
in
dec
lahf
lret
sub
pushf
push
fstl
push
sarb
or
ds
sub
bound
inc
daa
push
mov
fdivrp
jg
xor
cmp
shrl
loopne
xor
out
les
loopne
pop
adc
outsl
mov
mov
fsubrp
xchg
jbe
and
scas
add
outsb
movsb
clc
and
aaa
test
sbb
xor
lods
push
mov
xor
pop
fcomps
sti
xlat
push
cmp
out
pusha
enter
mov
jno,pn
cs
lods
xchg
loope
mov
mov
in
sbb
push
ss
lahf
mov
xor
jnp
inc
lods
out
and
std
push
adcb
sub
mov
cmc
int
pop
gs
imul
cmpsb
les
lock
inc
gs
xlat
xchg
movzbl
adc
jne
lret
in
jae
idivb
test
sub
out
mov
out
les
pop
icebp
outsb
insl
loop
pop
push
mov
je
sbb
mov
stc
cmp
imul
push
xchg
jae
mov
mov
jno
xor
fs
dec
shll
js
scas
ret
movsb
cli
jmp
cmpsl
orb
aam
cmpsb
sbb
outsb
push
xor
ja
xchg
xor
add
test
pop
imulb
mov
xlat
or
incb
js
jmp
pop
cmp
inc
push
mov
mov
je
push
xchg
inc
jns
ss
mov
xchg
stc
or
dec
dec
jno
add
mov
std
xchg
xchg
in
dec
mov
lahf
add
stc
xchg
out
data16
push
pop
sbb
pop
xchg
mov
and
shlb
push
pop
outsl
xchg
sbb
sahf
lods
push
nop
cld
or
cltd
jg
jmp
lret
bound
xchg
jl
fisubrs
test
pushf
inc
mov
es
test
lret
lret
push
inc
push
ds
imul
pop
std
out
push
in
pushf
ret
push
ja
add
lahf
xchg
movsl
sbb
add
mov
pop
lret
int3
and
jns
push
xor
dec
enter
mov
fs
sub
outsl
dec
clc
mov
or
xchg
jb
lcall
pop
pop
lds
outsl
subb
push
leave
and
jb
ss
adc
mov
mov
mov
clc
cmp
mov
pop
loop
orl
jnp
loope
add
jnp
fistl
scas
sub
bound
div
or
repz
mov
js
dec
add
imul
mov
outsb
adc
imul
dec
jo
cmp
test
push
cld
xor
incl
repz
dec
lret
lret
loope
test
xchg
push
adc
loop
call
dec
stos
mov
andl
cmpsb
xchg
push
push
aaa
cmp
or
pop
in
jl
add
js
mov
add
pop
imul
xchg
loopne
shlb
sub
or
aaa
stc
test
dec
nop
jbe
and
dec
mov
ja
jecxz
inc
push
add
jbe
mov
loope
mov
fdiv
or
sbb
ds
decb
gs
ret
sahf
jmp
dec
mov
js
out
lods
fwait
xchg
outsl
inc
mov
cmp
ret
jge
push
orb
test
mov
rorl
test
push
popf
out
sahf
xchg
xchg
ss
mov
sub
ljmp
imul
cmc
push
imul
or
xchg
xchg
adc
int3
cmpsb
divb
push
scas
stos
sbb
insl
mov
dec
cmpsb
push
inc
test
xchg
xchg
pop
aad
jp
sub
xchg
adc
stc
fisubl
or
out
sti
add
push
orb
sbb
fistpll
sbb
cs
adc
lcall
les
xor
lcall
cwtl
push
and
into
fdivrl
js
jno
pop
into
jbe
cs
arpl
lods
sbbb
stos
in
insl
imul
fdivs
add
mov
mov
dec
xchg
cmpsb
inc
sub
mov
pop
or
pop
imul
mov
rolb
add
leave
dec
in
push
sub
repnz
jae
push
scas
xchg
jnp
pop
dec
pop
mul
bound
mov
iret
cmp
jb
push
fdivs
out
pop
inc
lahf
add
cmp
pop
test
sub
push
sub
xor
adc
xchg
fwait
sbb
mov
bound
fnstenv
jge
andl
xchg
dec
lret
inc
or
cmpsl
lods
stc
inc
mov
in
push
xor
xchg
push
ret
push
jbe
popf
clc
gs
or
mov
jle
inc
xor
adc
mov
and
mov
stos
dec
int3
xchg
sub
push
mov
push
xchg
pop
ds
dec
gs
in
js
cmp
xchg
add
dec
push
or
shl
stc
rorb
rorb
and
pop
mov
out
ja
iret
fistl
jne
ss
sbb
jae
adc
dec
mov
or
nop
sbb
sub
mov
pop
divb
jmp
or
lcall
fcoms
xchg
dec
stc
push
cmc
sub
lret
aam
psrlq
mov
add
into
ds
mov
pop
rcl
shll
dec
loope
sub
mov
insl
and
jns
sahf
mov
xor
jge
addr16
fwait
in
xchg
dec
hlt
test
adc
mov
cmc
inc
movsl
jp
cs
sbb
add
cmp
adcl
shll
inc
pop
sbbb
rcl
mov
or
shlb
outsl
inc
push
vorpd
pop
sub
js
stos
stos
stos
adc
xchg
aaa
and
mov
pop
cli
nop
stos
inc
enter
mov
pop
inc
sub
aas
pop
les
aad
int3
or
pop
mov
fiaddl
push
inc
inc
mov
aaa
mov
mov
repz
xor
in
add
lcall
jbe
xchg
mov
loop
mov
sahf
xor
add
sub
mov
mov
and
xor
cmpsb
sub
outsl
dec
push
imul
out
hlt
scas
addr16
pop
lods
push
adc
jns
imul
icebp
mov
jmp
add
mov
ret
inc
push
loopne
movsb
leave
pusha
adc
jne
mov
cld
push
lcall
jne
mov
mull
shrl
js
addr16
nop
xchg
xchg
pop
lcall
mov
fdivr
or
cmp
push
lret
sahf
xor
xchg
stos
mov
iret
in
adcb
pop
movsl
cwtl
push
cmc
jg
mov
ret
nop
addr16
xchg
mov
cmpl
cmp
mov
sub
imul
mov
insb
dec
test
inc
sub
test
mov
dec
and
ret
push
ja
popf
xor
imul
jle
lahf
addr16
dec
pop
rcrl
mov
push
testl
mov
fmull
fwait
cmp
xchg
mov
enter
adc
inc
enter
cld
xor
jmp
lcall
pushf
xchg
sub
pop
lret
mov
les
test
lret
sub
mov
push
add
or
shrl
push
mov
jbe
jo
or
fcoml
push
subb
pop
cmp
cmp
sti
xchg
jb
popa
sbbb
es
lock
sbb
insl
dec
xor
push
xchg
sbb
fstl
xor
clc
repz
mov
jecxz
lods
aam
jns
bound
pop
and
mov
push
xor
cmpsb
das
jge
rcrl
push
inc
jnp
mov
mov
test
daa
dec
xchg
xchg
cltd
pop
stc
shlb
lcall
add
nop
xor
pop
loope
test
sahf
test
add
imul
cli
dec
movsl
shrb
mov
xor
mov
adc
jge
test
dec
insb
jo
cmp
popa
inc
fisubl
push
push
or
xor
mov
aas
scas
ds
fisttpll
pop
jge
dec
sbbb
stos
sbb
pop
lret
mov
add
popa
cmp
and
out
adc
mov
je
sbb
stc
xchg
and
cli
lret
stc
test
pop
jo
push
inc
adc
mov
mov
lcall
sbb
and
xchg
addr16
push
lret
outsb
bound
add
scas
sbb
sti
sub
inc
xor
mov
jle
sbb
cmp
insb
mov
inc
jnp
add
jnp
enter
cmpsl
add
test
insb
sub
adc
ds
test
out
inc
scas
sbb
xor
popa
loope
xchg
push
cwtl
aaa
mov
mov
cmp
xchg
xadd
addr16
mov
ret
lods
imul
in
push
dec
and
addb
jae
or
daa
dec
shrl
lods
mov
sbb
icebp
je
add
adc
mov
sbb
fadd
ljmp
sbb
mov
insl
mov
mov
ficomps
inc
rcrl
test
jb
bound
ror
es
repnz
je
icebp
leave
fwait
dec
sbb
jle
pusha
jp
cmpsl
out
fstps
rcrl
mov
or
xor
lret
icebp
mov
xor
dec
test
xor
insb
push
jle
mov
sbbl
push
sbb
inc
testl
imul
icebp
mov
lar
lea
xchg
adc
ret
out
and
movsl
jne
mov
add
cmpsb
add
mov
outsb
mov
aad
dec
mov
sbb
mov
inc
sti
xor
fcompp
inc
pop
mov
adc
test
cmp
xor
ud0
frstor
xchg
sub
sbb
xor
lret
cmc
jns
loop
sbb
push
add
cmpl
scas
mov
push
loopne
in
loope
xor
ljmp
cmp
dec
push
negb
push
inc
mov
cmp
xor
not
mov
es
add
ret
call
cmp
xlat
xchg
fs
out
cmpsb
sub
movsl
mov
shrb
mov
push
inc
pop
ficoml
int3
dec
and
xor
scas
iret
std
ja
ljmp
push
lahf
movsl
stc
sbb
sub
es
xor
cmc
out
mov
and
sbb
mov
pop
xchg
jl
call
lret
int3
gs
mov
mov
add
hlt
iret
pusha
popf
cmp
push
pusha
orb
stc
xor
rcl
stc
adc
xchg
sub
cld
lcall
push
sub
in
mov
mov
mov
or
notb
dec
or
in
shr
std
shll
es
push
pop
push
movsb
scas
and
shll
call
cmp
dec
iret
cmp
mov
jb
xchg
mov
divl
ficoms
fsubrs
fistpl
fimuls
xchg
push
lods
shlb
cmpsb
popa
sahf
iret
fcmovnb
lods
out
dec
mov
stc
xchg
insl
sub
enter
test
xor
dec
and
sub
mov
fs
fnsave
loop
mov
or
dec
mov
adc
mov
push
fs
push
repnz
pop
das
inc
nop
or
repz
loope
or
pop
or
orb
inc
shrb
into
adc
rolb
xchg
sbb
pushf
imul
enter
sbb
ret
rcrl
cmp
inc
stos
add
mov
gs
adc
cmpsl
aaa
and
std
mov
fisubrs
pop
aaa
andl
movsl
test
addr16
rorl
out
sti
in
mov
cli
mov
sahf
xor
mov
into
in
imul
mov
test
and
pushf
mov
cmpsl
out
mov
shlb
incb
cmp
xchg
mov
push
pushf
rcl
std
pop
imul
xchg
inc
mov
fnsave
adc
arpl
xor
rol
adc
loopne
dec
push
inc
pop
mov
xchg
mov
lret
jb
imul
mov
mov
outsb
imul
or
or
xor
push
lahf
ja
scas
inc
push
cltd
and
mov
xchg
push
sub
mov
lods
mov
and
cli
rcl
std
xchg
sub
scas
ret
sub
lcall
mov
rcrl
repz
mov
jl
in
add
pop
ret
mov
pop
sub
lods
test
and
dec
shlb
popa
pop
add
inc
outsb
xor
movsb
mov
imul
test
fmull
iret
out
sti
and
mov
pop
xchg
mov
add
xchg
ret
lret
lahf
mov
in
push
mov
xlat
push
xor
pop
cmpsl
cmp
andl
cmp
lret
or
cmp
shr
aas
push
cmp
dec
rorb
movsb
out
and
enter
jge
ljmp
mov
jp
and
jle
cmp
jge
notb
dec
fstpl
loope
pop
sbbb
cwtl
nop
dec
push
sbb
std
and
das
push
int
cli
pop
pop
dec
and
jmp
mov
adc
mov
adc
mov
outsb
mov
mov
jbe
fdivrl
and
fsubs
in
and
push
cld
andl
jo
jecxz
outsl
xor
je
inc
cltd
cmpsl
inc
out
push
inc
and
ss
and
in
mov
jbe
call
addb
pop
enter
sub
into
push
lock
enter
insb
sbb
push
imul
mov
imul
faddp
sub
aam
int3
jg
jp
lods
add
repz
fnstcw
cwtl
ja
mov
mov
das
fisubs
xchg
sub
bnd
and
mov
xor
in
mov
insl
sub
shrl
pop
xor
lods
js
test
pop
dec
ss
jge
lcall
movsl
rclb
mov
hlt
movsb
pop
mov
pop
test
not
clc
push
push
sub
js
test
int3
add
sbb
mov
cmp
int
repnz
cmc
xchg
dec
pop
aam
pop
fsubs
sbb
sub
fdivs
pusha
sbb
popa
loopne
in
jl
adc
cmp
add
rcrl
gs
fldl
clc
ja
mov
xor
lret
es
jmp
jmp
jmp
adc
push
mov
aam
add
sub
mov
sub
mov
mov
daa
xchg
int
frstor
sar
movsl
lea
and
mov
fidivrl
add
jecxz
push
mov
insl
mov
cmpsb
mov
aam
and
xchg
inc
leave
ret
mov
test
sub
push
ss
subl
popa
divl
xor
sarl
fnstenv
pop
mov
mov
out
test
cmp
cs
pop
ds
mov
push
mov
pop
loopne
aas
std
lret
lret
jne
test
repnz
push
fnsave
addb
pop
nop
das
pop
orl
scas
mov
dec
icebp
cwtl
adc
cmp
pop
data16
jle
and
sahf
cmp
xchg
xchg
pop
cmc
aaa
lret
fstl
fsts
fldenv
adc
cwtl
mov
add
ljmp
and
mov
lahf
sbb
adc
dec
jbe
loop
fcomps
nop
arpl
push
xor
mov
sub
and
in
les
ljmp
inc
and
ds
insb
inc
jo
mov
and
inc
jnp
shll
push
add
scas
adc
loope
mov
mov
imul
and
jb
bound
fbstp
mov
sbb
loop
fs
xchg
sub
xchg
add
inc
pop
xchg
jno
push
mov
jl
mov
bound
and
add
mov
in
mov
clc
adc
popf
imul
pop
notl
cli
insl
jle
cltd
scas
mov
ljmp
js
frstor
sub
xor
cmp
je
cmp
gs
push
jae
andb
in
fbstp
sub
xor
dec
adc
outsl
mov
shlb
jb
stos
xor
inc
xchg
rcll
jmp
out
and
enter
push
jmp
xchg
adc
dec
in
mov
sahf
fucom
idivb
inc
push
inc
jbe
hlt
add
std
nop
sahf
sbb
dec
out
cmp
adc
aas
mov
sub
bnd
xor
mov
in
leave
dec
data16
mov
lea
push
rorb
or
inc
clc
scas
xor
stos
adc
pop
das
jns
adc
dec
or
push
negl
mov
mov
lea
int3
mov
movsl
pop
hlt
sbb
mov
or
sti
jp
rcrb
nop
mov
mov
out
mov
mov
pop
or
cmpsb
insb
inc
fnstcw
adcb
and
jnp
fisubs
dec
push
mov
inc
push
jbe
test
ja
test
cmp
pop
icebp
nop
jmp
inc
inc
xor
frstor
notb
cmp
inc
in
fcoms
or
and
dec
pop
jne
mov
std
adc
mov
xor
into
repnz
and
xlat
cli
adc
sub
mov
scas
jmp
mov
xor
push
sbb
gs
popa
mov
mov
inc
loop
mov
push
test
pop
sub
sub
mov
fidivrl
nop
cmpl
lods
test
add
ret
insl
sub
fidivrl
xor
cmp
mov
stos
test
adc
repz
and
inc
sbb
imul
pusha
jnp
mov
lret
cld
jmp
dec
repnz
push
jp
push
insb
push
psubw
aaa
frstor
mov
dec
es
or
into
dec
mov
mov
push
jno
test
faddl
xchg
xor
mov
cwtl
mov
orl
call
nop
pop
push
ds
hlt
dec
stos
inc
aas
or
test
xor
loopne
lock
and
cmp
fdiv
push
pop
ds
jecxz
das
insl
add
add
mov
xchg
inc
xor
arpl
lods
cmpsl
cmp
mov
sbb
adc
cltd
inc
test
cmp
sbb
sub
mov
pop
scas
dec
pop
dec
mov
idiv
inc
loope
ja
jg
rclb
dec
outsl
das
mov
jo
and
jp
lock
xchg
xor
fwait
mov
imul
cmpsb
lock
call
cmp
ja
mov
mov
xor
push
mov
xlat
xchg
xor
repnz
outsl
mov
jge
aad
cmc
and
out
cmp
sbb
cmp
and
cmp
jmp
mov
mov
inc
fnstenv
cmp
jae
int3
call
mov
fnsave
cmpsl
mov
jne
rcr
addl
popa
jg
cmpsl
mov
xlat
movsb
data16
andb
pusha
mov
dec
shlb
pop
lret
pushf
dec
mov
out
stos
inc
mov
jl
aad
leave
jno
xor
mov
mov
icebp
stos
iret
dec
or
push
xchg
lods
cmp
add
stc
cmp
das
insl
popa
and
push
cmpb
cmp
daa
sbb
jno
or
gs
xchg
add
out
xchg
orb
and
xchg
cwtl
mov
lcall
sub
aaa
or
adc
pop
cli
jl
mov
popa
insl
mov
and
mov
decb
sbb
imul
pop
insb
xchg
add
fldcw
sti
jbe
in
mov
mov
popa
xor
mov
in
ret
adc
rolb
hlt
mov
pop
jge
fbstp
call
adc
push
or
outsb
scas
cld
leave
lret
jno
mov
mov
push
lods
pushf
std
cmp
cmp
cmp
mov
cltd
xchg
or
and
aas
scas
xor
push
addb
lea
xchg
mov
sbb
shlb
test
data16
insl
jg
xor
leave
cs
scas
push
mov
xchg
test
filds
sub
inc
fwait
pushf
stos
xchg
mov
popf
xor
scas
subl
pushw
mov
lahf
sti
lods
repnz
nop
into
push
mov
jg
stc
mov
je
or
mov
pop
das
sub
jl
jg
out
in
adc
inc
rcrl
push
sub
lods
mov
data16
aad
add
mov
xchg
pop
insb
roll
push
jb
adc
or
pop
mov
cltd
movsl
jns
pushf
popf
jnp
xchg
mov
inc
loop
mov
sbb
or
pop
and
inc
pop
lock
jbe
push
sbb
push
push
cmp
jge
sbbl
push
jge
negb
cli
imul
cmp
test
movsb
stc
in
aaa
cwtl
push
or
lock
and
xor
mov
cmp
mov
imul
xor
mov
lock
leave
mov
add
flds
mov
scas
adc
push
mov
mov
mov
jge
pop
stos
xchg
mov
std
ret
shrl
rol
sub
aaa
sti
cmp
fimull
or
sti
in
jbe
sub
leave
aas
mov
inc
cwtl
jbe
xlat
dec
leave
push
push
stc
rorb
pop
insb
mov
in
out
aad
mov
inc
lods
imul
push
cmp
pop
in
lds
or
cmp
fstpt
sbb
imul
add
test
lret
hlt
cld
xchg
mov
sahf
and
xchg
sbb
outsb
mov
fs
dec
loopne
gs
add
out
jb
test
add
mov
loopne
out
jg
jmp
push
mov
fldenv
mov
dec
and
fildll
adc
fdivrl
sub
pop
repnz
fidivrl
lds
jb
xor
in
fcoml
xchg
sbb
jns
in
faddl
inc
lret
aam
fwait
sub
pusha
pop
mov
lods
test
push
dec
adc
in
outsl
cs
stos
add
orl
cmpsb
add
outsb
loope
or
loopne
sbbb
popl
insb
out
xor
jne
repnz
push
dec
jae
loop
outsb
push
aam
icebp
test
mov
pop
adc
orb
mov
fdivl
mov
pop
sub
xor
adc
mov
gs
dec
mov
fcomps
iret
aas
push
xor
inc
dec
inc
or
push
daa
or
dec
and
sub
shrb
mov
out
dec
lret
cmp
insl
sbb
add
adc
adc
inc
popf
cmp
popf
xor
sub
cltd
push
and
sahf
jne
je
mov
sub
jecxz
add
mov
aaa
sub
pop
adc
pop
xchg
pop
sub
lret
pop
xor
lret
jle
jne
mov
testl
sbb
sahf
lods
dec
fisttpll
mov
fstl
pusha
mov
xchg
cmp
in
sahf
scas
xor
hlt
in
test
arpl
or
testl
xchg
call
shll
rorb
fsub
sti
inc
lcall
and
mov
call
mov
popa
mov
testl
aas
pushf
sbbl
pusha
iret
push
pop
sbb
and
add
out
mov
xor
test
pop
je
cmpsb
int3
mov
cmc
adc
daa
lret
push
and
xchg
xor
jmp
sub
sub
mov
iret
popl
hlt
cmp
mov
xchg
into
movsl
mov
xchg
mov
je
sti
push
sub
adc
hlt
sahf
fs
scas
lret
fstpl
clc
mov
mov
repnz
lods
pop
mov
push
inc
fwait
or
or
sub
cmp
imul
cs
ss
out
sbb
lret
enter
sbb
ds
data16
xchg
pop
hlt
shrl
fcmovnbe
and
cltd
jns
shlb
fisubrs
dec
cmpl
out
shll
test
or
int
cli
je
mov
dec
stos
inc
jge
inc
mov
leave
mov
cltd
add
cs
in
ljmp
sub
lea
bound
add
sub
outsl
adc
xchg
jno
push
inc
dec
sbb
sahf
or
fst
push
je
cmp
fxch
xor
cs
and
adcl
enter
and
into
stos
mov
rorb
push
nop
aaa
rol
je
insb
push
xlat
jbe
cmp
es
adc
test
gs
test
push
shlb
repnz
dec
jecxz
sbb
dec
dec
aaa
push
movsb
movb
mov
fldcw
or
or
cltd
popa
pop
mov
jno
cmpsb
and
daa
xchg
dec
jbe
cmp
xchg
pop
or
jmp
jl
rcrl
jb
cltd
repz
test
jle
xor
sub
cmpps
popa
mov
xor
xor
imul
lret
lret
ret
nop
or
xor
shrb
dec
pop
xchg
xor
fsubs
daa
add
cwtl
inc
fidivs
add
pushf
sub
pop
out
push
sub
adc
add
sbb
cwtl
jae
lea
stc
and
scas
shrl
inc
add
mov
test
addr16
int
rcrl
outsl
fildl
xchg
pop
xchg
imul
dec
lea
loopne
sub
sbb
push
xchg
imul
inc
imul
mov
cmp
jl
inc
inc
decl
or
lret
fisttps
mov
cmc
pusha
jl
pop
andl
push
inc
cmpb
lahf
mov
dec
aad
or
xchg
pop
dec
fsub
xor
hlt
or
xchg
push
sub
test
or
sbb
inc
in
cmp
pop
push
jl
mov
add
daa
sahf
sbb
mov
sub
adc
cli
mov
fstp
inc
mov
cmpb
rol
lds
sbb
mov
sub
not
imul
lcall
cwtl
orb
incb
push
add
fldcw
clc
mov
mov
pop
aad
mov
aaa
call
adc
cmp
outsl
dec
stos
mov
mov
call
cmc
aaa
jns
dec
into
jge
je
mov
inc
lea
leave
dec
cmpsb
xchg
inc
mov
xor
cmpsb
ret
test
int
push
fimull
add
push
sahf
push
sbb
lods
jle
dec
lods
or
xor
repz
cmp
inc
dec
aas
shl
outsl
push
cmpsl
adc
adc
sbb
add
clc
mov
cs
jb
data16
xchg
jg
mov
jl
jns
scas
test
push
roll
pushf
sbb
pushf
mov
pop
pusha
ss
stos
jbe
jg
cs
stc
inc
xchg
sti
stos
and
mov
enter
leave
subl
cltd
cmp
push
je
adc
dec
add
xor
cmp
mov
add
push
cld
test
loop
lret
repnz
test
into
xor
jmp
shll
adc
xor
sbb
test
dec
add
sahf
mov
jp
push
mov
lds
frstor
ss
push
andb
addr16
divb
insb
scas
ds
in
aaa
dec
or
mov
testb
dec
insb
ror
push
mov
lock
mov
test
inc
sbb
push
mov
into
loop
add
xor
push
sub
push
enter
and
pusha
negl
out
sbb
lret
gs
jge
sub
dec
add
inc
test
jae
cmpsb
leave
and
xchg
in
das
test
ficoml
xchg
pop
inc
or
jp
add
std
cmpb
sahf
push
rclb
nop
and
sbb
je
int
jle
push
cs
mov
int
mov
and
dec
pop
adc
iret
jp
cmc
pop
clc
jl
or
xor
mov
idivl
fnstenv
fdivr
popf
and
std
sbb
cmp
shr
rorb
or
xchg
lcall
push
mov
push
xlat
fs
hlt
bound
outsb
cmpsl
mov
imull
out
xlat
pop
jbe
jecxz
out
add
lret
xor
dec
add
in
inc
cmp
mov
js
into
fidivrl
mov
out
inc
and
xchg
aas
iret
push
xor
sbb
lods
in
addl
jl
lret
mov
push
inc
ficompl
xchg
or
pushf
in
pop
fwait
in
and
negb
mov
hlt
sub
add
in
adc
and
mov
xchg
pop
cmp
mul
insl
sbb
inc
das
js
lea
push
shrb
inc
das
or
icebp
movsb
sub
dec
sub
aad
imul
scas
das
sbb
mov
add
mov
adcb
cltd
fidivrl
clc
nop
mov
jge
cwtl
stos
pop
jg
xchg
sub
shr
cmp
push
xor
cltd
xor
aad
jo
inc
out
pop
xchg
clc
imul
movsl
stos
pmuludq
loope
scas
add
movsb
dec
out
ljmp
and
mov
lret
xchg
cs
std
cs
pop
loope
das
cmp
cs
lret
mov
fldt
push
rcl
ret
sbb
mov
xchg
push
xchg
push
jo
add
in
mov
mov
xor
sbb
dec
push
sub
cwtl
xchg
int
mov
sbb
cmp
pushf
push
lret
cmp
cwtl
adcl
sbb
sbb
orl
sub
push
push
jbe
dec
mov
cli
movsb
lahf
mov
movsl
add
mov
loope
notl
pop
sbb
and
out
lret
divb
sub
insb
cmp
ret
std
jno
dec
mov
loope
jle
aad
xchg
add
cwtl
sub
iret
mov
fwait
repnz
mov
jmp
movl
loop
mov
inc
dec
cmp
fists
mov
mov
cli
fildl
sarb
aam
or
daa
jbe
lcall
adc
popf
lods
aaa
mov
jbe
mov
out
in
mov
adc
mov
loop
shrb
adc
mov
mov
hlt
int3
addl
popf
iret
ret
mov
push
jns
sub
nop
pop
icebp
shll
push
mov
test
in
sbb
cld
jg
jns
pop
ds
sbb
lahf
bound
or
subb
fwait
cmc
repz
mov
jg
lahf
jns
xchg
xchg
testl
stc
lods
jge
stos
xchg
pop
ret
rolb
xlat
ljmp
xlat
fsubrl
sub
add
clc
or
bound
out
pop
addr16
ss
sub
cmp
cmp
mov
cmp
inc
mov
je
loope
movsl
lds
xlat
lock
lods
jnp
sti
inc
mov
fwait
push
xchg
mov
ret
mov
mov
xchg
jmp
dec
adc
push
scas
mov
aam
xor
and
and
scas
dec
mov
outsb
or
adc
cmc
popa
outsl
pop
sbb
ficoml
push
mov
stc
dec
mov
jl
imul
scas
ja
xor
cmp
adc
stos
add
xchg
sub
pop
scas
inc
push
inc
fisttpll
mov
jno
dec
and
mov
inc
movsl
sahf
mov
lods
xchg
scas
mov
lahf
stos
push
fdivrs
dec
cli
xchg
jle
mov
push
or
cmp
insl
sub
rol
ss
add
push
fdivl
xor
xchg
mov
int3
in
ss
mov
mov
xchg
fists
mov
cmpsl
pop
mov
call
addl
mov
hlt
cmp
insb
mov
sbb
int3
adc
int3
cmpsb
in
push
loopne
lret
cmp
insl
mov
and
jle
mov
mov
out
dec
aad
cmp
test
hlt
mov
mov
or
lock
xor
mov
call
xlat
dec
push
cmp
imul
lds
and
lahf
jp
mov
pusha
shrb
or
test
xchg
call
dec
xchg
dec
lods
dec
or
icebp
les
in
das
cmp
sbbl
fcomp
ret
lods
mov
lea
add
xchg
shl
add
fldenv
or
xchg
pushf
lahf
push
or
add
mov
sub
sub
xchg
dec
pop
fstpt
adc
adc
inc
fdivrs
xchg
cmpl
out
mov
outsb
and
cmp
lods
jl
jno
cmp
sub
mov
push
push
cli
push
or
jno
cmpsl
clc
xchg
or
stos
mov
mov
sub
mov
cmp
push
mov
cmpb
popa
mov
insb
push
cwtl
out
add
out
push
push
xlat
inc
xor
mov
jne
cld
mov
push
push
push
mov
rorl
dec
insl
loopne
stos
scas
dec
lock
xchg
jecxz
jecxz
test
fstpt
movsl
push
sub
cmp
mov
xchg
decl
cld
inc
cmpsb
and
popf
jno
sti
add
push
jmp
cmp
sub
movsl
fadd
movsb
bnd
aam
fists
xchg
adc
add
xor
jg
mov
or
pop
inc
dec
or
shll
cs
and
ds
fnstenv
pop
hlt
mov
mov
fsubrs
xor
je
imul
xchg
fists
mov
test
inc
shrb
dec
mov
dec
dec
pop
xor
add
jp
outsl
mov
fcmovb
cmp
push
js
mov
sbbl
jns
inc
fs
aas
inc
mov
sbb
push
mov
xchg
scas
mov
rorl
adc
clc
push
pushf
push
mov
daa
ss
fldl
lret
xor
in
xor
lock
and
and
gs
adc
mov
mov
aaa
movsb
cli
jne
sub
hlt
fwait
jno
clc
adc
mov
fdivrl
sub
cli
aas
shl
or
and
fs
jg
inc
pop
out
pusha
lock
sbb
testb
test
mov
or
push
mov
aam
sub
enter
decb
xor
loop
sti
mov
test
lea
daa
or
dec
nop
dec
push
cmp
push
adc
xor
push
jbe
sub
sub
popa
ds
or
bound
push
repz
push
xchg
mov
mov
xchg
sub
add
dec
dec
sbb
test
jns
shrb
inc
stos
cltd
or
jg
xor
pop
push
stc
fnsave
cmpsb
mov
lock
fsub
pusha
test
or
in
cmp
dec
pop
in
adc
pop
loope
pop
leave
lcall
mov
outsb
mov
add
push
lret
push
call
lahf
dec
jecxz
push
push
xor
sbb
shl
mov
ret
mov
rolb
fwait
jb
jg
xchg
xlat
lahf
inc
and
inc
aaa
lock
fisttpl
cli
bound
out
inc
fists
lods
mov
lds
mov
cs
andl
dec
lds
cmp
imul
pusha
mulb
and
out
ds
lcall
push
outsb
or
mov
or
jg
jle
enter
int3
enter
jle
sbb
sub
inc
sub
xchg
cmp
movsl
sbb
xor
aaa
leave
pop
imul
sarb
mov
push
ss
jnp
or
fdivrs
xchg
xor
adc
fnstcw
imul
adc
ret
arpl
mov
leave
addr16
adcl
outsl
inc
fidivs
xor
ficompl
lds
insb
sbb
mov
sub
not
pop
sbbl
push
lods
je
cld
scas
loopne
or
sub
cwtl
cmp
jg
sti
push
std
xchg
nop
shld
xchg
popa
incb
iret
rcrb
push
addr16
or
fcoms
ret
scas
and
xchg
pop
jecxz
xchg
xchg
stc
mov
enter
jbe
add
scas
outsb
sahf
leave
in
cmp
fidivs
mov
sbb
push
add
sbb
dec
nop
dec
pushf
dec
dec
mov
sahf
fldl
lods
mov
lds
pushl
outsb
jl
cmc
mov
rolb
and
xchg
addb
mov
enter
lea
leave
jle
test
mov
cmp
inc
mov
stos
xor
ds
fcmove
jns
shll
stos
adc
movsl
sub
inc
cmp
xor
dec
push
jge
add
pop
sub
bound
mov
inc
fnop
jb
sbb
xor
and
test
mov
in
andl
lret
mov
sub
sbb
push
fisubrs
xorb
push
ficoml
pop
aaa
sub
scas
ret
divl
adc
adc
mov
push
movsl
lods
lahf
sbb
and
call
test
inc
cwtl
clc
movsl
jb
adc
and
fldt
mov
xchg
insb
dec
fcoml
mov
shl
leave
mov
jge
pop
ret
lds
add
mov
push
jmp
xchg
orl
out
and
cmp
movsb
xchg
pop
iret
or
notb
loop
lds
push
push
bnd
std
data16
aad
cltd
xchg
sub
xchg
add
and
incl
xor
out
nop
popa
or
gs
iret
gs
faddl
jnp
pop
mov
jecxz
clc
lcall
add
mov
out
cmp
push
jle
das
push
xchg
sbb
sub
nop
pop
mov
dec
aaa
movsl
cmpsl
mov
inc
push
mov
outsl
xchg
imul
sub
fiadds
and
xchg
cmp
jnp
cmp
pop
pop
pushf
mov
test
in
popf
push
jp
cmp
inc
pusha
mov
mov
sub
neg
jae
bound
sbb
cmp
mov
fdivl
sub
dec
inc
idiv
sub
int3
pop
sbb
cmp
sub
and
push
xor
mov
int
add
fimuls
lods
and
gs
sbb
mov
mov
orb
mov
jg
sub
aad
cs
sahf
pop
xor
call
mov
add
xor
adc
loope
mov
cmp
inc
pop
pop
pop
push
fldenv
les
or
shrl
js
xchg
stos
mov
shl
dec
dec
test
out
cmp
cwtl
repz
test
sub
dec
notl
xchg
pop
lock
xchg
xlat
les
aaa
cmp
inc
and
out
jb
add
cmp
add
push
xchg
push
popa
push
in
jno
add
push
jne
pop
sub
cltd
sub
sti
jbe
or
std
or
scas
cmp
arpl
xor
xchg
jp
and
jo
mov
insb
imul
repnz
inc
in
ds
outsb
push
inc
mov
insl
or
mov
nop
sub
add
cwtl
outsb
in
inc
or
mov
shll
xchg
sarl
mov
or
fs
outsl
inc
in
jp
mov
fstpl
add
iret
cmpb
fdivl
pop
sub
int3
clc
sbb
test
sub
aaa
lret
shlb
push
call
jns
outsl
rclb
and
cmp
inc
loop
call
sub
addb
or
push
inc
dec
pop
jne
sub
jb
xchg
cwtl
and
mov
dec
jne
push
cld
outsb
lds
idivb
out
fs
les
fimull
and
cwtl
mov
fdivl
mov
fwait
mov
sub
mov
and
pop
mov
sbb
add
xor
push
add
js
dec
pop
pop
pop
push
js
movsl
xor
pop
stos
sbb
cmp
loop
xor
aas
xchg
sub
sbbb
mov
pushf
sbb
xor
mov
inc
scas
fildll
mov
les
adc
fs
mov
into
gs
icebp
mov
aad
sbb
imul
fcompl
nop
mov
andl
pop
jns
out
adc
and
loopne
or
stos
shrl
sbb
mov
bound
rolb
in
nop
xorl
add
mov
imul
fidivrl
scas
push
jge
outsl
mov
movsl
push
enter
inc
adc
not
icebp
or
data16
out
in
stos
in
test
push
fstpl
inc
cmp
in
xchg
cmp
shl
loop
lea
or
cmp
fdivrl
pusha
sub
into
insb
xlat
mov
adc
sub
out
push
or
lea
dec
ljmp
mov
jnp
int
push
pushf
imul
into
or
lcall
push
push
or
repnz
pop
sub
nopl
mov
cmp
mov
cmp
ljmp
jecxz
sub
push
ret
jge
arpl
fbstp
pop
mov
shrb
cld
push
jbe
mov
popa
pop
imul
das
sbb
mov
cmp
aad
or
add
jnp
push
mov
jae
jb
cmp
addr16
stos
pop
jno
addr16
inc
fbstp
pop
in
lds
incb
mov
inc
sbb
scas
mov
sbb
push
loop
aas
adc
push
out
mov
jmp
xorl
movsb
jle
and
inc
pop
aaa
dec
push
dec
lods
insb
sub
das
push
leave
mov
cmp
mov
daa
bnd
and
jl
outsl
ror
pop
enter
mov
pop
enter
adc
pop
mov
test
pop
arpl
nop
flds
fiadds
jmp
clc
dec
hlt
xchg
xchg
shlb
and
subl
mov
mov
xlat
xor
imul
in
mov
inc
popa
add
cmp
lahf
push
mov
rcr
push
lcall
ficompl
add
push
xor
mov
jge
xor
push
insb
jg
inc
xor
test
stos
xchg
jns
jnp
or
jne
xchg
movsb
jmp
lea
gs
add
xor
sbb
les
das
mov
mov
insl
dec
shrl
sahf
push
adc
push
lea
sbb
pop
das
xchg
add
and
lahf
insl
sub
cmp
fisubrs
repnz
dec
mov
mov
dec
push
adc
es
bound
test
sub
adc
rol
sbb
fs
shlb
xchg
test
mov
dec
test
out
repnz
push
fcmove
sbb
outsl
mov
push
or
movsl
ret
mov
push
jle
fbld
fistpl
into
sbb
clc
and
adc
mov
mov
xor
mov
scas
and
lods
repnz
in
mov
orl
lds
lods
add
test
push
mov
inc
out
mov
dec
bound
repz
xor
or
dec
xor
imul
xor
ljmp
jne
push
xchg
ret
bound
call
mov
xchg
fwait
sbb
cs
add
bound
and
and
sub
and
mov
dec
xchg
ret
mov
add
mov
sub
adc
ljmp
mov
push
into
cltd
rorl
icebp
fbstp
aad
xchg
sbb
dec
push
jmp
cwtl
test
addr16
xchg
ror
sbb
push
ret
xchg
mov
in
xchg
call
mov
add
fcomp
sti
xor
lock
mov
pop
inc
lods
stc
add
gs
xchg
lret
push
test
and
dec
xlat
fsubr
mov
add
loop
push
adc
loop
mov
push
pop
in
pusha
mov
push
jge
jnp
out
add
inc
sti
rcrl
jg
iret
xchg
popa
mov
out
cli
xlat
roll
das
test
fistps
ljmp
lds
fildll
dec
xchg
add
shrb
push
daa
lcall
nop
icebp
enter
xor
xor
out
insl
stos
push
pop
xacquire
jnp
xchg
sub
int
sbb
adc
movsb
inc
out
dec
sti
inc
cmc
add
iret
cmc
in
push
inc
out
push
jbe
fwait
push
in
pusha
imul
pop
xchg
xchg
sbb
sbb
or
jg
sti
push
addb
scas
mov
push
cwtl
lret
imul
pop
aam
js
jg
mov
xlat
adc
pop
loop
leave
jecxz
push
lock
nop
ss
add
and
mov
fidivs
xchg
jmp
sbb
pop
pop
mov
cmp
out
inc
and
push
ss
mov
into
pop
hlt
push
mov
pop
scas
cmp
pmaxub
mov
test
cltd
lret
or
test
adc
pushf
out
mov
les
aaa
pushf
pop
mov
mov
repz
pop
stos
loop
jbe
out
cli
mov
add
fwait
mov
movsl
xchg
orl
andb
lahf
out
push
sahf
jmp
push
xchg
pop
movsb
icebp
jb
sub
and
sarb
mov
sub
in
arpl
xchg
test
out
xor
mulb
pop
xchg
fisttpl
subl
adc
mov
orb
loop
loop
roll
xor
not
je
cmpsb
in
xchg
sub
lahf
ret
ret
jmp
enter
sahf
ret
or
xor
addl
sbb
jge
test
cld
nop
push
es
lcall
adc
movsb
add
aaa
jo
and
in
mov
mov
idivl
test
nop
ds
fwait
push
or
fldl
arpl
inc
mov
fstpl
or
test
or
pop
cmp
outsl
pop
jecxz
xlat
mov
int3
push
fnstsw
pop
and
imul
out
cli
lret
testb
xor
inc
jo
cs
decb
outsl
mov
inc
rcl
push
mov
loop
add
adcl
cmc
push
xchg
and
and
dec
mov
popa
cltd
adc
pusha
fidivrs
out
aas
add
fadd
fistpll
lods
jo
cmp
inc
cmp
stc
fwait
inc
cmc
leave
mov
jne
ss
xchg
or
addl
mov
add
fdivl
fwait
popf
nop
and
mov
fistl
daa
pushf
mov
push
or
xor
inc
stos
inc
ret
inc
fistl
cmp
pop
lcall
and
lods
fcompl
sarl
adc
cmp
fdivrs
push
call
mov
ljmp
or
jbe
js
jmp
push
xlat
adcb
iret
xlat
outsb
add
ss
loopne
cmp
lret
cmp
xlat
xchg
sbb
imul
imul
insl
outsl
inc
loope
mov
adc
adc
add
insl
mov
xchg
fcmovne
enter
lds
dec
dec
jecxz
jmp
imul
rcrl
ljmp
btl
fcmovne
xchg
sub
mov
mov
add
retw
xchg
mov
pop
jnp
out
xchg
pop
adc
or
inc
rcll
or
pop
jbe
jbe
push
xchg
in
mov
jl
xchg
shlb
jo
sar
inc
adc
xchg
lods
dec
fwait
xor
in
mov
inc
fdivs
mov
pop
mov
or
stc
ljmp
xor
fwait
in
mov
das
xor
nop
pop
pop
scas
dec
cmpsl
ja
mov
aas
xorl
loop
xor
sub
cs
dec
or
mov
imul
pop
pop
rorb
subb
mov
mov
push
push
fsubrp
add
cltd
negl
push
stos
repnz
popa
je
andb
fdivl
or
cmpsl
mov
sub
xchg
mov
subl
xchg
stos
push
push
push
movsl
andl
mov
adc
or
outsb
lret
pushl
fwait
shrb
cmp
adc
in
mov
inc
or
leave
push
rclb
cmc
out
push
or
adc
xor
pop
push
jae
out
out
xlat
pop
or
pop
or
xor
jle
cmp
daa
xchg
pop
xor
in
aad
dec
push
andb
leave
add
inc
mov
sbbb
pop
stc
pop
adc
jae
stos
movsb
cmp
int
xor
xor
sub
mov
icebp
xor
and
lret
into
gs
xchg
pop
lock
sub
inc
sbb
dec
inc
xchg
sub
adc
into
data16
mov
test
inc
out
adc
or
sub
jne
inc
pop
xchg
mov
inc
push
mov
or
xchg
in
movsl
mov
ja
leave
and
stc
aad
dec
jae
subb
xchg
push
sahf
int
pop
daa
fwait
enter
dec
push
mov
sbb
dec
mov
cli
pushf
out
ficoml
push
mov
or
sbb
jle
xor
add
aad
mov
or
cmp
jg
adc
je
fwait
xor
mov
mov
cmpsb
mov
push
or
mov
add
pop
push
testb
push
lds
cmp
jp
mov
popf
in
mov
push
mov
movsb
sti
pop
xor
insl
jmp
sub
pop
dec
mov
xlat
negb
nop
sbb
out
pop
andb
pop
cmpsb
cmp
inc
mov
imul
ljmp
cmp
dec
in
inc
int
or
or
sbb
mov
dec
adc
cmc
enter
lds
movsl
push
ljmp
and
jno
mov
stos
cmpsl
les
mov
cltd
in
in
jnp
dec
dec
cmp
mov
inc
lods
insl
xor
test
mov
repz
jo
cld
cmp
outsl
jmp
imul
dec
xor
pop
or
add
lcall
and
and
cwtl
in
lret
sbb
xchg
xor
jmp
frstor
fiadds
and
call
outsb
je
cli
xchg
cmp
fwait
hlt
mov
xor
loopne
cld
mov
aam
sbb
xor
gs
sub
dec
fsts
mov
sub
call
push
dec
test
sahf
inc
pop
inc
clc
xchg
jnp
scas
inc
int3
xorb
xlat
sub
hlt
scas
enter
jp
fcoms
pop
push
dec
cmp
push
inc
aam
movsb
imul
daa
outsl
mov
adc
scas
adc
ss
test
bound
cmp
repnz
adc
in
cmpsl
xchg
loope
or
and
xchg
or
pop
in
xor
leave
call
mov
mov
loope
mov
xchg
fwait
scas
mov
fldcw
jmp
cltd
inc
mov
lcall
push
push
sti
add
cmpsb
das
rep
pinsrw
div
jo
loopne
add
jb
sti
pop
mov
icebp
scas
jle
test
out
cwtl
mov
cmpsl
push
mov
call
and
jbe
jmp
xor
orl
test
and
cmp
mov
add
stos
inc
jmp
fnstenv
fmul
fnstsw
scas
es
lock
aas
cmp
cmp
adc
out
mov
enter
add
sbb
jle
xor
pop
jg
data16
pusha
aam
addr16
push
das
cmp
notb
dec
pop
popa
and
ret
dec
mov
ds
xchg
test
lock
pop
sbb
mov
sub
push
inc
dec
iret
data16
lret
sbb
xor
jmp
repnz
mov
movsl
pop
jge
aas
sub
ret
dec
clc
push
cs
push
dec
lahf
lea
jnp
jae
repnz
push
repnz
insb
jl
mov
not
jp
jge
or
lock
push
out
outsl
loop
in
lea
lock
bound
jmp
mov
push
xor
ljmp
lcall
pop
pop
xchg
pop
movsl
repnz
movl
cmc
add
lea
outsl
xchg
adc
test
mov
in
pop
push
loopne
xor
jecxz
pop
jl
or
xchg
push
fisubrs
arpl
mov
jo
das
cmpsb
pop
mov
fsts
in
into
cli
rcrl
or
and
push
sbb
nop
or
lods
mov
ficompl
adc
aam
mov
aam
push
cltd
sub
push
mov
addl
sahf
pop
sub
repnz
cmp
xchg
scas
inc
cmpsl
test
ret
add
dec
negb
push
sub
cmp
cmp
js
lret
push
lock
jp
jbe
dec
dec
dec
inc
add
test
xchg
sub
hlt
or
std
mov
fidivrs
mov
sub
add
and
mov
jge
test
sbb
insl
nop
ds
mov
xor
cld
mov
mov
cmp
jge
stos
jbe
push
in
outsb
clc
movsb
inc
in
mov
clc
movsb
inc
fadds
push
xor
sbb
outsb
push
pop
popa
dec
xchg
mov
adc
push
xor
add
sbb
es
sbb
imul
test
jae
daa
aaa
in
xor
adc
loop
lea
enter
sbb
test
arpl
jns
lea
inc
adc
inc
inc
mov
xor
mov
mov
in
out
adc
add
xchg
inc
in
shlb
fwait
ret
xchg
das
pmulhuw
mulb
sub
daa
dec
dec
fwait
push
cwtl
sbb
push
add
test
lret
sub
add
cmpsl
pop
cs
rcl
jns
adc
test
xchg
iret
mov
lcall
xorl
ret
lods
xlat
imul
xchg
bound
and
push
push
test
loopne
outsl
inc
movl
add
out
bound
mov
jmp
inc
pop
push
jae
mov
mov
inc
mov
jae
xor
and
cmc
sub
or
fnsave
add
cmovs
in
adc
movsl
mov
pop
cs
sbb
mov
jecxz
int3
mov
push
xlat
push
pushf
out
movsl
push
cmp
jne
sub
add
jmp
xor
fidivs
mov
add
sbbl
scas
mov
fstpl
popa
and
adc
fdivs
cmpl
testl
jns
rorl
xor
mov
shll
sti
cltd
rcl
mov
les
cmp
sbb
push
outsl
push
outsl
repnz
sarl
or
and
inc
pushf
lret
xor
lock
dec
mov
push
cmp
xor
shlb
xchg
jecxz
sub
out
stos
xchg
jmp
and
popf
stos
mov
test
mov
iret
xor
popa
add
les
mov
testl
dec
or
sub
dec
push
test
jb
push
jmp
adc
push
fwait
fwait
mov
roll
sbb
lods
inc
jmp
mov
lds
add
jno
and
mov
dec
stos
and
sbb
sub
into
test
inc
cmpsl
das
pop
dec
sub
jno
jecxz
ficompl
mov
push
jecxz
pop
xor
jl
sub
xor
xchg
sub
out
add
mov
aad
cmp
fisttpll
sub
rorl
rcrl
test
int
les
sbb
adc
mov
roll
inc
test
test
sbb
movsl
and
mov
adc
out
dec
push
sbb
push
push
adc
xchg
xor
fwait
adc
sub
jns
leave
clc
loopne
jle
fwait
sbb
mov
sbb
lcall
bswap
cmp
dec
or
movsl
xchg
mov
aad
jo
repz
addr16
repnz
inc
dec
push
sbb
insb
rol
inc
sbb
cmp
jnp
mov
inc
or
addr16
add
sub
hlt
jmp
data16
pop
add
int3
and
data16
fidivrs
mov
mov
cmp
stos
cmp
cmp
addb
jb
daa
outsl
adc
rcrl
jns
or
jg
lahf
stos
dec
mov
repz
mov
test
clc
xchg
sbb
mov
or
xor
cmp
cmp
add
mov
mov
xchg
insb
arpl
cmp
outsb
ds
and
push
mov
xor
dec
rcr
mov
xchg
mov
jg
mov
into
scas
pop
sti
lods
jbe
mov
fists
cli
clc
mov
test
pop
jae
lahf
lods
add
xor
cmc
psubq
sbb
xchg
scas
jb
imul
dec
gs
jb
rclb
sub
adc
add
aaa
jne
test
lock
scas
rcrb
pop
xor
mov
mov
int
ret
cwtl
push
rcrl
cmpsl
sbb
pop
pushf
and
sub
mov
fdivrl
out
xchg
nop
loop
or
pop
jno
push
add
movsb
and
mov
pushf
mov
pop
and
mov
insb
out
rorb
test
mov
out
pop
cwtl
into
out
repz
cmp
pop
inc
sbbl
mov
push
mov
fcmovne
and
out
sub
sbb
xchg
loopne
ret
mov
outsb
and
cmc
mov
lret
cld
insl
mov
int3
enter
fs
test
popf
into
jne
inc
das
cmp
scas
call
cmp
sub
leave
xchg
jmp
sub
jecxz
lock
sub
mov
out
sbb
mov
sub
lea
stc
push
xchg
fidivs
pop
testb
sub
sbb
punpcklbw
stc
xor
testl
or
repnz
cmp
in
jge
mov
sub
xor
js
insl
das
lock
int3
dec
mov
sbb
or
mov
mov
scas
push
adc
add
mov
jae
in
xchg
inc
fnstenv
fidivl
test
xor
xlat
sbb
jecxz
jg
lret
inc
cmc
mov
add
in
ljmp
loopne
scas
jns
lcall
mov
add
mov
addr16
fwait
jae
call
sub
push
aas
shrl
imul
mov
sbb
or
lods
rcrl
dec
and
fidivl
push
add
add
ds
or
sub
and
mov
adc
jl
inc
cld
cltd
mov
dec
jl
mov
insl
fistps
arpl
lret
into
popf
jns
xor
add
mov
sbb
jbe
out
cmp
push
mov
add
push
notl
cmpsb
adc
dec
hlt
inc
jmp
enter
shlb
out
inc
scas
mov
inc
cmpsl
adc
push
pop
xchg
or
clc
and
cld
push
int
lcall
jle
insb
popf
iret
or
dec
cltd
popf
bound
inc
pop
in
aaa
and
and
sub
pop
push
lock
gs
xor
loop
repnz
push
jmp
ficompl
mov
dec
sub
call
push
xchg
xchg
fdivrs
fcomps
or
push
sub
outsl
jnp
cs
outsl
xchg
xchg
and
jmp
xor
sar
pushf
or
sahf
clc
cltd
ret
jb
cli
push
scas
sub
icebp
push
sti
jo
and
mov
movsb
std
push
test
cmp
clc
into
hlt
cmpsb
fucomp
xorb
pop
adc
idivb
mov
jmp
mov
ret
ret
fs
jo
repnz
sbb
shll
and
mov
dec
jg
jge
daa
mov
dec
mov
push
in
ret
fnsave
xchg
and
call
fsubrp
xchg
js
adc
sub
into
mov
jno
jg
aas
cmp
icebp
add
mov
rorb
mov
pop
push
imul
mov
sbb
aaa
mov
arpl
or
ss
mov
cmp
repz
mov
iret
dec
mov
shl
mov
mov
rcrl
pop
pop
inc
into
call
dec
pop
inc
jmp
pop
mov
push
push
jb
inc
sbb
jp
xchg
js
and
ret
roll
ja
pop
lock
mov
mov
inc
test
out
repnz
inc
testb
subb
cmc
ja
cld
sbb
and
adc
xchg
clc
push
outsl
clts
sub
and
sub
xchg
jge
mov
daa
lcall
or
mov
stc
pop
lret
cmp
mov
rcrl
mov
xchg
dec
jg
test
dec
test
sbb
dec
jns
out
pop
loope
adc
out
daa
icebp
cwtl
aam
jbe
cmpsl
cmc
pop
sub
mov
out
lock
incl
ss
push
mov
dec
stos
int3
dec
in
push
rsm
inc
cmp
scas
lock
jmp
das
out
mov
adc
int
mov
dec
mov
rclb
sub
sub
cmp
fbstp
cmp
jge
push
mov
mov
cmp
sub
push
cmc
cmp
cmp
stos
jmp
pop
inc
jecxz
jmp
push
sub
adc
xor
inc
adc
into
xchg
xor
clc
add
cmp
icebp
xchg
xchg
ffree
iret
cmc
xor
in
mov
loopne
add
and
dec
inc
push
jecxz
in
imul
bound
out
rolb
or
xchg
and
repz
dec
push
add
mov
loope
fsubl
sbb
scas
jmp
xor
ljmp
in
dec
mov
into
xor
shll
sub
inc
enter
pop
inc
in
mov
mov
or
push
cwtl
loopne
mov
dec
dec
orb
adc
iret
and
jb
lock
lahf
std
jge
add
mov
in
sub
mov
cli
cmp
jl
mov
pop
or
out
push
jle
lea
xlat
jmp
sbb
mov
outsb
dec
push
lret
add
and
pusha
mov
or
push
mov
adc
out
lea
addb
shld
outsb
mov
ret
mov
push
stc
xchg
ja
add
mov
in
xchg
cltd
addl
jno
cmp
scas
in
das
jne
jnp
or
lcall
adc
ror
out
cmp
inc
cltd
pusha
mov
mov
or
push
rcr
jnp
imulb
inc
movsl
js
or
mov
jecxz
sbb
dec
dec
jp
mov
jl
sbb
add
cmp
test
test
mov
mov
imul
dec
cwtl
and
notl
xchg
pusha
mov
fxch
sub
loopne
jecxz
pop
inc
shrb
not
jl
aas
scas
clc
jmp
mov
cli
inc
jmp
adc
dec
leave
dec
xor
es
dec
sbb
out
mov
pop
push
jmp
fcomps
es
jb
jmp
data16
icebp
or
jp
in
jle
lcall
ss
out
sahf
lds
xchg
add
stos
movsb
inc
jae
cmp
outsb
sbb
pop
mov
outsl
jl
aad
jo
add
aad
push
mov
cli
mov
out
xor
lods
outsl
bound
icebp
fs
jp
dec
mov
cmc
out
imul
adcb
mov
clc
ja
cmpsl
std
xchg
adc
jns
and
test
repz
testb
dec
scas
adc
fwait
push
mov
adc
mov
cmp
bound
mov
stc
mov
pop
jecxz
in
in
in
push
inc
hlt
jmp
out
lcall
sub
fwait
adc
mov
pop
or
out
arpl
stos
or
daa
dec
aam
decl
sbb
and
xor
mov
mov
cltd
add
aad
pop
testb
lds
sbb
jp
out
leave
pop
in
xor
outsl
pop
hlt
in
add
clc
xchg
push
insl
mov
fistpll
pop
sbb
mov
std
inc
ds
lcall
jno
aas
mov
loopne
std
add
test
addr16
fcompl
push
pop
mov
aad
push
insl
xor
xor
cltd
dec
pusha
repz
jns
clc
mov
ja
testl
sub
and
inc
mov
test
shl
add
scas
fisubl
stos
cmpsl
mov
aas
cmc
repnz
daa
popa
pop
lahf
cmp
mov
inc
stos
mov
into
gs
hlt
pop
mov
les
dec
mov
dec
movsl
sbb
push
or
fcomip
sub
arpl
fisubl
push
lock
in
add
lret
xor
test
fs
ss
mov
loopne
fdiv
jae
enter
cmpl
cmp
or
mov
add
jl
jae
cmp
call
ds
scas
jl
or
bound
cltd
ja
jo
xchg
cmpsl
and
lock
mov
imul
gs
xor
sarl
mov
pusha
cli
cmp
pop
sbbl
adc
lahf
cmp
mov
push
stos
rorl
pop
cmp
mov
pop
lret
es
lods
pop
jne
xlat
ja
int
pop
dec
packsswb
mov
test
push
aad
xchg
xchg
mov
fnstsw
cmp
sbb
mov
in
xor
bound
das
cld
push
pop
cmp
add
fwait
jne
xchg
pop
xor
mov
repz
pop
ret
lock
cmpsb
mov
pop
jl
xor
cmp
push
pop
repz
mov
iret
and
dec
mov
cmc
and
fnsave
jnp
setg
pushf
mov
mov
or
rorb
pop
cmp
push
mov
xchg
subl
or
add
cmp
add
sbbl
pop
mov
ljmp
int3
push
jns
add
ss
clc
sub
push
stc
test
lock
mov
sarb
push
sbb
daa
jnp
sbb
cmp
sahf
test
shrb
jne
cmp
cmp
aaa
negb
dec
push
or
jno
movsl
dec
push
fsubrs
fs
mov
lret
and
jb
les
pusha
sti
aad
inc
aaa
push
lock
push
add
sub
aas
inc
lret
pop
inc
push
xchg
xchg
adc
imul
lds
out
ret
pop
dec
sub
daa
bound
shr
sub
test
les
idivb
mov
sub
cmpsb
out
in
inc
fdivr
jns
popa
xor
push
mov
jnp
xchg
push
call
repnz
push
sub
mov
pushf
call
or
daa
pop
imul
aas
xchg
add
repnz
int3
xchg
xor
jp
pop
jle
or
andl
imul
mov
adc
repnz
stc
pop
loope
mov
icebp
dec
jl
fisubrs
and
xor
mov
test
imul
mov
sbb
push
mov
inc
out
mov
nop
insb
and
in
and
xor
lret
stc
inc
std
shl
push
push
and
loop
das
sbb
sbb
imul
add
hlt
js
and
xchg
xchg
cmp
push
jg
cltd
push
mov
or
and
loope
test
add
rorl
mov
push
cli
push
pop
mov
pusha
outsb
mov
xchg
out
lret
pop
mov
sarb
jb,pt
arpl
pusha
xchg
push
scas
or
cmp
sub
or
scas
stc
popf
das
out
mov
xchg
dec
jno
jle
jb
jmp
out
mov
mov
cmp
scas
out
jl
pop
lahf
ss
data16
js
cwtl
inc
xor
ret
and
fstpt
mov
fstpl
stos
cli
iret
ss
fidivrs
cs
cmp
mov
sahf
ds
mov
std
icebp
fdiv
adc
dec
cmp
mov
shrb
call
shrb
push
cmp
punpckhdq
mov
lcall
or
or
inc
lds
cwtl
sbb
adc
pop
adc
jo
dec
ffree
rolb
xchg
fmull
mov
lods
hlt
in
and
pop
repnz
xchg
sub
xor
adc
add
mov
subl
xchg
bound
ror
or
rcrl
mov
mov
mov
fsub
sub
stc
dec
enter
jmp
dec
rcrb
mov
popa
clc
shr
add
mov
sbb
fnsave
mov
dec
jae
mov
loope
fidivrs
dec
int
insl
jbe
xlat
ja
mov
lock
ret
sub
mov
add
cmp
mov
les
adc
dec
jo
xor
jle
test
xlat
xchg
fldcw
pusha
out
mov
in
fcoms
jg
push
call
imul
enter
call
fimull
mov
inc
sub
cwtl
push
out
cs
mov
jb
jne
mov
dec
jecxz
in
jge
rorl
imull
ja
xor
es
pop
xchg
ljmp
and
pop
cmovo
cld
fsubrs
lea
and
aaa
inc
pusha
stos
enter
dec
lods
js
insl
cs
push
in
movsb
sbb
adc
or
lds
in
sub
jne
pop
xchg
testb
jge
add
xor
mov
dec
xor
and
stc
push
shrb
cli
mov
mov
mov
mov
jne
or
mov
in
sub
mov
mov
icebp
push
aas
inc
ljmp
pop
lds
out
andl
cmp
sti
loope
hlt
sub
fcoms
lea
xchg
outsb
in
out
push
loopne
addr16
inc
cmpsl
xchg
scas
inc
fstpl
js
pushf
pop
fdivrs
or
out
add
mov
jbe
xor
ret
loopne
shl
insl
add
loope
rol
or
stos
in
add
add
lock
dec
push
xor
rcll
inc
or
enter
jl
lret
adc
cmp
mov
test
xor
jne
clc
jae
pop
mov
mov
notl
into
in
inc
sbb
jb
and
aam
mov
fnstenv
or
fs
mov
mov
pop
mov
rcr
dec
call
sub
test
jnp
push
mov
fs
xlat
inc
inc
mov
push
decl
lods
or
out
daa
insb
int3
mov
jmp
nop
das
push
popf
js
jg
sub
out
out
fwait
xor
ss
pop
mov
xor
bound
test
addl
popa
mov
xchg
dec
imul
shrb
adc
lea
add
ret
or
jl
jecxz
sub
xor
out
sub
ret
dec
popa
sbb
add
jne
mov
pushaw
or
sahf
mov
pop
cmp
mov
js
hlt
and
inc
test
xchg
ja
lods
xchg
iret
sbb
add
sahf
lds
mov
rcll
in
pop
mov
dec
jp
inc
arpl
and
xchg
mov
and
xchg
mov
pop
mov
mov
sub
stc
test
pop
dec
jmp
call
add
lret
fldlg2
and
sbb
xor
mov
inc
jp
fs
push
gs
inc
mov
sbb
mov
cmpsb
lods
insl
mov
lds
lcall
iret
xor
sub
mulb
ds
mov
and
pusha
cmp
or
push
arpl
ss
and
sti
sbbl
leave
movsb
orb
inc
mov
test
push
das
xchg
mov
push
mov
jl
cmpsb
sbb
jp
icebp
mov
sbb
ds
xor
outsb
decl
int3
aam
js
push
sbb
mov
fxch
test
sub
pop
jg
imul
or
push
lahf
jmp
mov
sub
aam
push
sbb
call
mov
test
shll
sbb
inc
ja
mov
pop
cmpsb
cwtl
add
test
push
sub
xchg
repnz
call
cs
adc
jae
sub
imul
fnsave
xchg
xor
add
jp
popa
cmp
bound
mov
dec
cmc
inc
pop
and
ljmp
add
pushf
mov
push
js
mov
test
cs
and
mov
stc
popf
in
outsb
lea
adc
into
in
jmp
pop
outsb
mov
hlt
lahf
cmpb
int
daa
jae
inc
push
jmp
jg
js
fs
push
repnz
iret
sbb
ja
outsb
cmp
mov
push
loop,pt
jae
test
jae
divl
js
into
scas
lock
rolb
cmc
dec
cltd
test
adc
outsl
daa
sub
aam
mov
enter
add
cmp
push
lahf
pushf
xor
sub
stc
rcrb
sti
test
in
adc
hlt
dec
movsb
or
cmp
cmpsl
mov
push
test
and
sti
sub
push
cmc
pop
push
xor
or
mov
and
out
sahf
xchg
and
aas
push
std
cmp
xchg
test
pop
sub
aas
xchg
addr16
xchg
jmp
jg
insl
xlat
in
fiaddl
ffreep
es
jecxz
inc
int3
and
dec
push
add
sbb
adc
sub
mov
daa
scas
jb
adc
dec
scas
fidivl
scas
aas
push
jne
stos
inc
stos
fiaddl
sbbb
lret
dec
xchg
cmp
enter
xchg
pop
fidivl
imul
test
adc
push
test
inc
push
and
or
push
dec
and
mov
insb
fwait
jnp
inc
sub
outsb
dec
adc
es
scas
jo
mov
mov
inc
aad
and
lret
and
mov
stc
nop
testl
fwait
xor
mov
xor
lcall
js
out
mov
pop
jbe
mov
mov
and
aam
andl
cld
cwtl
das
add
shll
xor
dec
mov
das
repz
cmpsl
jno
cld
adc
inc
mov
cmc
lcall
pop
cmpsl
add
pushf
das
shll
jle
ljmp
mov
adc
pop
sub
clc
pop
inc
pop
aad
inc
cltd
add
xchg
xlat
jl
xchg
std
ror
add
jp
jmp
aas
add
cmp
outsl
outsl
xchg
insl
subl
or
xchg
jno
ret
xchg
mov
or
mov
ret
ret
mov
push
cmc
cmp
adc
into
pop
icebp
js
sti
es
jge
xchg
into
mov
fisubs
inc
es
stos
add
jns
sub
ret
push
jecxz
fists
fisttpl
and
mov
mov
test
shrl
subb
mov
movsb
mov
xlat
push
and
lods
leave
or
inc
jle
insb
add
pop
push
stos
lret
lods
mov
sbb
pop
cmp
popa
xchg
ds
xchg
mov
pusha
sbb
jmp
adc
gs
popa
cmp
push
or
cmp
pop
dec
addl
ja
ret
push
jecxz
sbb
pop
or
icebp
xor
sbb
das
repnz
shr
repz
mov
dec
fdivrp
out
xor
sbb
in
add
cmp
notb
popf
jnp
xchg
ja
cmp
in
bound
hlt
mov
cmpsb
adc
aam
and
xor
cltd
xor
rcl
mov
push
inc
fwait
into
test
es
in
jg
sub
push
ret
mov
xor
push
hlt
test
iret
jb
add
jle
cwtl
icebp
mov
mov
loope
sub
ljmp
jge
jo
test
push
ret
xor
mov
push
ljmp
or
xchg
fbstp
pushf
jl
loop
push
in
das
aam
imul
ds
leave
push
adcb
sub
mov
ret
idivb
jmp
ss
push
movsb
daa
dec
lea
jo
js
sahf
outsl
ret
cltd
or
jle
aad
jl
mov
add
shll
jno
loopne
mov
cmp
out
xor
inc
dec
fsubrs
popl
iret
popa
xchg
xor
int3
popf
lods
in
dec
aas
mov
out
add
dec
stc
aad
sbbl
aam
add
daa
dec
pop
test
iret
popf
cmpsb
add
mov
mov
xchg
pop
push
movsb
cmp
aaa
push
popf
xor
jecxz
scas
pop
adc
sti
inc
imul
push
cmp
repz
mov
mov
jp
or
out
test
movsl
xor
loop
inc
lds
fmull
incb
xchg
adc
push
sbb
jno
and
loop
push
cmp
ss
mov
pop
mov
push
jns
mov
addr16
cwtl
xor
cli
xor
mov
lods
and
fiaddl
loopne
push
dec
repz
lods
cmp
xchg
adc
mov
mov
xor
cltd
into
mov
jg
test
out
or
cmpl
popa
mov
pop
push
das
les
incl
inc
jo
lock
scas
sbb
jno
ret
test
hlt
dec
mov
mov
jp
daa
push
xchg
sub
out
cmpsl
mov
repnz
and
or
fldenv
mov
insb
mov
mov
sbb
sarl
icebp
mov
popa
inc
lods
xchg
mov
push
pop
sub
xor
add
mov
pop
ljmp
fs
insb
and
loopne
aam
iret
jecxz
ret
les
dec
sarl
loopne
or
test
shlb
or
xchg
push
sub
pop
insb
popf
dec
gs
push
outsl
mov
pop
movsb
ret
pusha
push
leave
xor
push
mov
mov
repnz
inc
aad
sub
scas
jnp
push
or
cld
cmp
mov
mov
inc
idivb
dec
leave
dec
sub
or
push
pop
aam
shll
add
cmc
mov
daa
ret
add
in
and
in
popf
adc
push
mov
xor
cld
loopne
mov
pop
loopne
insl
jbe
push
xor
sbb
notb
cli
mov
call
cmpsl
sub
cs
and
adc
das
ljmp
imul
hlt
jle
or
mov
cmp
test
jb
pop
dec
int
pop
pushl
inc
fldenv
cmp
out
movsb
jnp
add
lret
cmp
cmc
cmp
lcall
jno
jmp
xor
push
push
pop
sub
sub
or
xor
pop
mov
enter
mov
test
leave
or
mov
jge
imul
push
pushf
jg
into
shlb
pop
sub
test
icebp
add
es
cwtl
mov
mov
push
jae
aam
adc
and
add
scas
fdivp
test
sahf
mov
push
push
cmpsb
pop
dec
in
ljmp
aaa
mov
xor
mov
in
xchg
cli
aaa
stos
shl
pop
addb
cwtl
sbb
sub
mov
popa
cli
adc
rcrb
enter
cmpsl
loop
in
aad
cmc
mov
movsl
fnstcw
sbb
les
mov
cltd
mov
ficoms
push
adc
add
nop
emms
scas
stos
inc
fists
nop
pop
dec
cld
or
pop
cmc
test
sub
and
sti
sbb
inc
sbb
stos
fidivrs
mov
xor
add
push
xor
inc
push
out
xchg
jl
pop
insb
lret
inc
mov
outsl
dec
sti
cmp
add
sbbl
outsl
pop
ja
inc
pop
mov
mov
jge
pop
rol
fiaddl
iret
es
mov
outsl
popf
out
lods
cmp
mov
lock
inc
push
jb
je
sub
outsb
ljmp
js
les
xor
nop
mov
stos
cmpsb
in
pop
into
scas
jb
sti
jb
icebp
daa
add
sbb
and
aaa
mov
shrl
outsl
pop
dec
inc
lret
jg
aaa
pop
sahf
mov
cmpsb
call
jo
lret
scas
and
cmp
divl
rcrb
adc
dec
xchg
mov
fbld
loope,pt
push
popa
xor
xchg
sub
sub
dec
mov
add
enter
lods
cld
ret
cmpsb
mov
mov
idivb
inc
mov
add
ficompl
xchg
pop
jmp
stc
pop
call
andb
sarl
add
jae
and
push
lock
lods
loope
stc
loope
inc
mov
mov
xor
add
insb
fs
adcl
or
pop
pmulhuw
mov
mov
pop
inc
shll
out
cmpsl
inc
into
jg
xor
xchg
mov
xchg
es
dec
or
push
mov
add
inc
pop
pop
jns
mov
ja
mov
dec
mov
pusha
cmpsb
pop
cvtdq2ps
cmp
mov
mov
pop
mov
test
sub
jae
or
push
out
pop
arpl
mov
jecxz
in
out
int
push
sbb
and
mov
loop
mov
inc
jne
xor
add
daa
jno
daa
ret
xchg
pop
adc
into
push
mov
mov
imul
lahf
sub
jb
andl
in
pop
lret
test
ds
push
js
test
push
push
add
and
add
pop
jb
in
loope
or
adc
sbb
adc
ljmp
mov
leave
xchg
cmpsl
jbe
jmp
inc
fnstenv
pop
popa
mov
shll
sub
ss
inc
imul
imul
xchg
jns
mov
out
push
in
push
mov
push
push
sub
or
lea
aad
add
enter
pop
dec
fiaddl
dec
notb
call
cmp
and
mov
or
sarb
or
stos
scas
jp
xor
push
or
mov
mov
push
mov
or
or
mov
or
sbb
cmp
jle
test
dec
push
jmp
xor
xor
xor
sar
pop
fs
ss
in
inc
cwtl
push
push
sarb
dec
divl
mov
adc
out
iret
push
adc
cltd
dec
jne
das
arpl
mov
xorb
aaa
sti
jmp
pop
jne
fdivl
enter
mov
jg
mov
pop
jno
add
cmp
aad
daa
ja
pushf
jns
inc
test
test
inc
js
mov
mov
les
hlt
or
pop
data16
dec
dec
cmp
mov
lods
xor
xor
cmpsb
push
sub
ss
lds
test
inc
jge
xchg
out
fidivl
push
ret
add
stos
fdivl
xchg
imul
pop
cs
nop
leave
lds
mov
pop
inc
jecxz
movsb
sti
popf
add
aad
push
sub
test
mov
or
lds
jp
pop
pusha
mov
addr16
es
scas
inc
fdivrl
mov
bt
push
jmp
sub
enter
in
mov
jbe
sub
push
and
push
push
sub
push
dec
addr16
cmc
out
out
aaa
push
xor
cmp
shrl
jmp
inc
test
inc
repnz
push
insl
jg
push
sahf
xor
adc
dec
test
pop
push
mov
dec
push
mov
push
add
outsl
jbe
xchg
xor
lds
jmp
sar
loop
and
jmp
ljmp
xchg
push
pushf
add
sti
push
cwtl
das
mov
inc
sub
cld
or
movsb
stc
fwait
jne
and
sub
or
clc
or
sub
pop
and
pop
cvtps2pi
push
in
pop
negb
xchg
jge
clc
repz
hlt
out
xchg
mov
call
out
xlat
les
mov
xor
aas
or
shlb
sub
aad
xchg
imul
stc
or
popl
or
hlt
pop
sub
or
fwait
mov
aad
mov
rcrb
cmp
jge
jmp
ja
xchg
xchg
and
incb
sbb
clc
stos
fwait
xor
sbb
shll
push
rolb
inc
in
adc
pusha
ljmp
stos
and
loopne
dec
xchg
rcrb
addr16
pop
mov
fdivs
mov
xchg
xor
loopne
lds
mov
mov
pop
xor
dec
fldt
loopne
mov
insb
add
je
lds
repz
out
adcb
pop
mov
mov
inc
or
daa
fdivs
ret
bound
mov
jno
mov
das
and
stc
nop
into
fstp
adc
pop
fidivl
outsl
ret
adc
fisttpl
push
cmpsb
dec
cli
icebp
addb
xor
int
push
ljmp
out
and
push
push
adc
ja
cmp
cmp
adc
add
inc
iret
sub
shr
dec
add
negl
sti
jo
popf
ror
pop
push
jmp
push
jns
nop
and
lahf
and
sti
add
inc
cmp
test
and
mov
xchg
mov
mov
xchg
mov
stos
rcrl
lock
jo
idivb
or
xchg
and
pop
das
add
mov
and
push
jle
pop
mov
mov
sub
sahf
dec
int3
sub
push
pop
lods
mov
cwtl
cs
or
fnstenvs
jecxz
mov
dec
lahf
sub
push
imul
out
or
xchg
jge
fimull
hlt
or
movsb
pop
xchg
and
lea
cmp
in
push
push
lahf
nop
jge
ret
pop
lahf
jne
cs
pusha
add
push
gs
adc
scas
xor
out
stos
cld
xchg
frstor
imul
jmp
inc
sub
leave
bound
js
out
out
dec
movsb
cmc
lcall
adc
test
jae
movl
popf
adc
cmp
cli
mov
ss
sti
cmp
mov
outsl
mov
sbb
ds
mov
gs
loope
cmp
xchg
test
call
mov
xchg
mov
lods
pusha
adc
cmp
lret
mov
idivl
mov
cmc
dec
out
xor
inc
out
lock
mov
sub
add
push
out
mov
mov
mov
push
insl
inc
push
lds
dec
pop
cmpsb
pop
sub
mov
movsl
xchg
pop
xchg
aad
jle
mov
fsubs
xchg
inc
aaa
call
leave
push
pop
out
pop
outsb
lods
push
sub
pop
mov
in
icebp
xchg
sub
jbe
dec
push
add
mov
jmp
es
add
imul
xor
popl
xchg
mov
pop
push
sbb
data16
ret
xchg
dec
lds
mov
fdiv
lea
fsub
mov
mov
jecxz
hlt
lret
ljmp
pop
mov
mov
cs
shr
cltd
repnz
imul
dec
inc
testb
mov
mov
stos
xor
insl
in
adc
push
roll
push
lods
lds
cwtl
icebp
ds
ret
jg
sub
mov
jo
popf
cmp
mov
add
mov
cltd
cmp
aas
je
in
inc
inc
shll
inc
scas
scas
data16
pop
sbbb
lods
xchg
out
loopne
adc
jbe
add
pop
stos
in
lds
lock
and
push
imul
gs
lret
xchg
aam
jbe
fmul
subl
and
rclb
iret
jmp
gs
sbb
jecxz
add
stos
repz
in
call
or
shrl
mov
jmp
xor
add
shll
sbb
cmp
dec
mov
clc
cmp
sbb
jno
sub
xchg
inc
std
or
cmp
fisubrs
and
rcll
gs
sub
jle
jae
cltd
je
push
sarl
rcll
xor
icebp
xchg
or
hlt
cmp
adc
dec
dec
add
dec
xchg
fmull
mov
ffreep
leave
pushf
lcall
in
sub
das
mov
stc
jo
add
pop
ss
shlb
adc
test
and
sub
sbb
cmp
fdivs
mov
fidivl
scas
imul
daa
aam
or
lcall
adc
mov
sbb
out
fwait
rolb
and
clc
pop
icebp
and
imul
lea
pop
xor
test
cmp
add
leave
test
inc
fdivr
shrb
fdiv
movsb
add
cmp
inc
push
out
lock
jae
and
jne
arpl
fdivp
add
jg
inc
xchg
mov
leave
out
or
xor
popa
adc
push
or
cmp
fdivrl
mov
call
mul
xchg
and
sbb
pop
cmp
or
mov
bound
xor
pushf
mov
add
xchg
jno
pop
cmpl
aaa
push
fnstenv
pop
out
mov
testl
rcrl
scas
cmp
insl
dec
loopne
add
aaa
mov
es
cwtl
mov
xor
lret
je
lahf
jo
inc
fs
rcl
inc
cmpsl
or
or
imul
gs
mov
and
jmp
fcomps
clc
mov
pop
aas
iret
subb
adc
xchg
ja
push
out
das
jne
rcr
jno
or
lea
cmp
xor
pop
mov
dec
dec
in
sbb
fisubrl
cltd
mov
les
adcb
pusha
add
cmp
sbb
push
xchg
loope
frstor
out
insb
sub
dec
shlb
das
loope
pop
mov
test
inc
fsubl
xchg
pop
or
div
cmp
mov
dec
mov
es
sub
mov
das
add
push
add
mov
enter
popf
icebp
and
xlat
popa
jns
or
popf
or
fwait
shlb
mov
lcall
lea
mov
add
stos
xchg
sbb
and
in
test
add
adc
and
leave
fistl
dec
pop
imul
jb
lods
pushf
scas
fnstsw
cld
shlb
mov
insl
gs
arpl
aas
mov
dec
mov
add
cmp
loopne
imul
xor
es
pshufw
rclb
mov
push
cwtl
adc
in
je
fmul
dec
and
cmp
pop
idiv
daa
push
xchg
xor
pop
mov
shl
add
sbb
cmp
cmp
stos
std
test
mov
push
test
mov
dec
scas
push
pop
xor
dec
inc
dec
xor
jnp
dec
and
int
popf
notb
out
adc
sbb
pop
cmpb
mov
ja
sarl
push
jns
lahf
stc
rcrb
pop
jl
xor
adc
inc
aad
inc
adc
pop
xor
into
gs
test
pop
loope
xchg
cmp
dec
movsl
sbb
or
push
mov
fbstp
xlat
xor
jge
adc
imull
cmp
pushf
cmpsl
enter
xchg
sbb
lcall
and
idivb
mov
call
jmp
cmp
lret
fidivs
and
lret
jecxz
testb
add
out
hlt
andb
sub
xchg
xlat
dec
xor
ret
push
cmc
mov
dec
and
out
xlat
fmull
mov
xchg
xchg
pushf
pushl
lods
jnp
lret
or
test
lcall
xlat
enter
adc
shl
jnp
add
testl
mov
push
xchg
or
jmp
in
push
inc
leave
mov
les
jmp
or
cmp
push
jae
push
into
xor
dec
cli
xchg
jg
jecxz
pop
sbb
or
ss
mov
push
jmp
test
scas
mov
and
or
in
jb
test
or
popa
inc
ficoms
xor
or
pop
push
shll
xchg
push
call
lret
repnz
insb
syscall
std
mov
cmpsl
and
xchg
cmpsb
aad
add
stos
or
mov
xor
sahf
das
bound
fs
cmp
loope
xor
popa
fucomip
xchg
pop
xor
xlat
das
cmp
push
mov
xlat
adc
adc
xor
ja
mov
decl
cmp
adc
dec
shlb
push
push
and
sahf
cwtl
stos
inc
int3
lds
cmp
test
push
mov
mov
cmp
mov
inc
pop
fwait
and
movsl
call
dec
mov
pop
mov
pop
outsb
cmp
outsb
jp
lcall
nop
fnstenv
ss
xlat
insl
xor
shl
lret
xchg
jae
lods
inc
clc
pop
sub
pop
push
cld
inc
lods
sub
pop
fiaddl
xchg
xchg
test
push
and
add
mov
mov
ret
pop
pop
cmpl
mov
fnstsw
inc
je
pop
mov
push
xlat
inc
test
fcoml
ds
dec
jg
clc
pop
pop
hlt
cmp
mov
mov
imul
outsb
cmp
lahf
dec
adc
std
xor
mov
inc
mov
jecxz
or
xchg
sub
fcoms
xor
negb
mov
mov
enter
mov
adc
div
lea
test
inc
fcmove
insb
popf
sti
ror
bound
mov
cmp
jmp
jg
mov
jecxz
ss
into
adc
fisttps
shlb
aad
push
pop
fsubs
dec
mov
mov
cltd
push
or
cmpsl
mov
push
ret
movsb
or
aad
pop
adc
or
mov
cmp
lock
and
ret
movsl
cwtl
xor
cmc
cmp
lcall
je
loop
icebp
and
mov
add
notb
aam
stc
add
xchg
jns
nop
cmp
shll
popa
and
nop
mov
cmp
pop
mov
or
rcl
arpl
cmp
push
cs
addl
test
mov
mov
jne
mov
xchg
xor
mov
loope
lods
inc
xlat
out
push
call
push
xor
fstl
or
push
cltd
test
lret
clc
arpl
jbe
out
je
jne
das
inc
add
xor
ss
pop
testl
pop
fcomp
sub
bound
dec
inc
data16
fsubl
or
jb
push
call
jg
sahf
outsl
stos
mov
repnz
cli
jne
mull
mov
add
sbbl
dec
push
jno
imul
lcall
sbb
cmp
cmc
sbb
lea
loope
jae
adc
incb
mov
inc
fnstenv
test
sbb
or
mov
jp
iret
fnstenv
cmpsl
das
adc
lock
jp
inc
jmp
xchg
popf
hlt
inc
sub
push
shll
std
aam
jns
jmp
fisttpl
xchg
sbb
outsb
mov
dec
popa
out
rcrb
imul
dec
gs
movl
cmp
mov
adcb
xchg
sub
mov
pop
jne
mov
pop
das
xor
int
arpl
push
fnstenv
clc
push
ret
mov
pop
mov
aas
adc
mov
pop
jp
mov
cmpb
outsb
mov
insb
push
and
movsb
scas
inc
inc
mov
mov
xchg
sub
aas
iret
in
mov
cmp
lock
loopne
cmc
push
lea
and
xchg
stos
push
leave
sub
lret
dec
in
dec
addr16
pop
loop
xchg
pop
xlat
lret
rorb
pushf
ficomps
mov
ljmp
inc
call
xlat
sahf
jecxz
sets
push
push
cld
std
xchg
mov
push
test
inc
mov
ret
dec
dec
popa
push
je
push
loope
cltd
or
int
cmpsb
cmp
int3
xchg
pop
cmp
ljmp
mov
cmp
inc
out
je
repnz
lods
add
inc
adc
inc
xchg
pop
jg
adc
rorb
aas
lret
mov
lods
imul
or
loop
mov
movsb
mov
and
out
push
lds
enter
loope
mov
dec
sti
fstpl
lock
fwait
cmp
int3
cmp
fildl
ss
fs
iret
int3
fdivrp
stos
inc
pavgb
test
add
sub
jg
sub
outsb
xor
mov
push
aad
ds
das
adc
pop
inc
pop
sahf
dec
and
ss
out
or
ljmp
cmp
adc
or
mov
repz
jl
lods
cmp
pop
or
stos
mov
imul
and
movsl
mov
pop
mov
mov
in
subl
lods
scas
insb
push
jbe
xchg
push
and
cmpsb
inc
push
insl
add
pop
xor
mov
add
and
jae
inc
das
test
int
bound
xchg
ffreep
loopne
add
cmp
push
stc
adc
and
fisubl
mov
xchg
aaa
imul
adc
or
mov
notb
jnp
jne
xor
add
ja
sub
push
out
lcall
jle
xchg
shlb
dec
sbb
mov
mov
inc
push
nop
out
mov
adc
in
and
stc
xchg
mov
cltd
pushf
bound
gs
jg
jge
add
rorb
jo
ret
mov
fimuls
orb
orl
add
xchg
push
inc
lahf
cmpb
push
fidivrs
fcoms
push
mov
in
sub
add
inc
push
out
les
inc
sbb
pop
xchg
xor
or
push
mov
or
pop
icebp
and
adc
stos
add
sbbb
sub
sbb
sub
mov
sbb
mov
dec
lea
ret
sbb
ss
jo
pop
pop
roll
pop
dec
dec
jecxz
loopne
push
add
std
dec
jecxz
push
arpl
icebp
pop
fimuls
and
cmpsb
ja
and
addb
jbe
and
adc
cli
jae
scas
inc
adc
out
pandn
imul
add
push
add
lock
mov
pusha
ss
cs
push
fwait
xor
and
addl
lds
sub
sahf
cmc
mov
push
sbb
mov
pop
lahf
xchg
mov
push
fwait
aas
fwait
inc
arpl
xchg
lods
jmp
push
cmc
jmp
mov
into
mov
stos
sti
stos
xchg
mov
pop
ljmp
loop
adcb
test
leave
or
jle
clc
adc
push
lahf
cmp
jg
pop
scas
pusha
xchg
mov
sti
mov
pop
ss
add
sbb
mov
jecxz
cltd
icebp
xor
push
mov
ret
mov
mov
shll
loopne
sahf
mov
jnp
cmp
pop
lahf
cmpsl
pop
mov
sub
andl
and
and
movsb
jno
push
lret
in
jnp
je
sbb
mov
aam
add
pextrw
sahf
xorl
push
movsb
and
and
outsb
aad
mov
sbb
pop
mov
pop
push
ror
mov
cmp
cwtl
stos
pop
mov
inc
xchg
int
shlb
jecxz
push
mov
fnstcw
lock
xorl
outsb
pop
icebp
or
lods
lods
xchg
das
insl
test
sbbb
out
hlt
addr16
mov
and
mov
xor
sub
iret
or
inc
adc
mov
ret
insl
adc
or
mov
sarl
lea
and
aad
pusha
lret
push
pop
orb
xor
loope
mov
inc
push
or
push
enter
add
pop
cmp
xchg
ret
out
fs
sbb
outsl
outsb
loope
mov
and
gs
jb
xor
cld
xchg
popa
cmpsl
jae
adc
mov
jg
jl
push
sub
jne
movsl
or
and
or
dec
aaa
push
cli
in
movsl
lret
adc
mov
pop
enter
jle
mov
gs
and
push
xlat
xor
or
sub
mov
cld
outsl
push
sbb
jle
es
iret
mov
bound
cmp
repz
lds
fstpl
sub
and
jmp
cmp
test
aam
fwait
sti
arpl
push
je
mov
and
adc
sahf
xor
dec
popa
mov
aaa
into
xchg
inc
jnp
xchg
shlb
xchg
test
jo
shrl
shlb
enter
inc
or
or
xlat
add
push
cmp
movsl
inc
inc
rcrl
addb
daa
sbb
outsb
shll
pop
stos
mov
enter
jne
xor
mov
mov
push
mov
and
jle
cmp
jmp
dec
scas
cwtl
push
ljmp
call
ret
stos
xchg
in
sub
add
cmp
inc
sahf
scas
mov
xchg
test
jns
xlat
test
out
out
bound
jmp
iret
xor
pop
push
jmp
mov
outsl
leave
daa
jge
add
dec
push
daa
push
stos
xchg
stc
fldenv
push
shll
cld
lock
mov
testb
pop
pop
jge
pop
cmp
mov
and
int
push
rcrl
pop
cmpsl
ret
jo
stos
xchg
cmp
add
je
mov
xchg
rcl
ret
pop
mov
int3
adc
sub
addl
cli
fisubl
mov
cmp
shr
stos
arpl
mov
jno
jmp
out
dec
in
out
mov
xchg
xchg
jmp
sbb
inc
clc
ja
and
and
test
ja
jo
mov
loopne
jge
jae
pop
mov
sbb
popf
lret
push
fnsave
stc
dec
mov
add
pop
pop
das
rorb
out
notl
push
jnp
jecxz
push
aas
daa
inc
and
mov
inc
call
int
lahf
mov
movsl
jno
dec
xlat
popa
test
push
push
testl
jl
add
xor
mov
cs
jnp
out
mov
pop
nop
push
test
xorb
aam
inc
adc
cmpb
fimuls
push
xor
lahf
test
inc
and
popa
out
cmp
sub
clc
or
outsl
lcall
jp
loop
mov
cwtl
icebp
and
ret
out
add
aaa
or
inc
scas
inc
adc
mov
repnz
mov
les
into
sub
or
stc
js
mov
add
lea
rolb
inc
enter
adc
in
jae
mov
ljmp
ljmp
inc
cmp
bound
inc
aad
pop
les
mov
icebp
jle
cmpsl
jo,pt
pop
push
es
lahf
fisubrs
std
pop
adc
fwait
dec
or
fcomi
outsl
fildll
push
outsl
xor
add
les
jecxz
xchg
lods
aad
scas
outsb
test
add
fimull
or
fbstp
lods
sbb
enter
hlt
jb
test
or
jl
dec
clc
inc
pop
insl
loop
cmp
rolb
xchg
sbb
push
sub
movsl
lcall
mov
cld
cmpsb
inc
dec
add
add
outsb
add
add
aaa
pop
lea
push
pop
data16
cmp
aaa
rcl
cmp
ja
mov
jecxz
aad
int3
push
aas
fwait
xor
jns
cmp
xchg
cmp
dec
mov
xor
push
adc
mov
outsl
in
cmp
push
or
ret
push
data16
and
sahf
outsl
add
inc
repnz
pushf
bnd
mov
cmp
sub
popf
lds
dec
stc
inc
xchg
xor
inc
rcrb
inc
pusha
cli
lds
jge
mov
jo
add
or
jge
in
add
ficomps
mov
dec
dec
xor
xchg
jmp
inc
sub
sti
mov
xchg
jbe
xchg
xchg
test
adc
test
cmp
ja
push
rcr
jb
test
jmp
fwait
pop
inc
sbb
and
xchg
pop
jmp
ret
mov
fnstenv
add
cmpl
dec
cmpsl
rolb
popa
inc
in
jns
xorb
mov
xchg
jnp
dec
mov
mov
sbb
and
jmp
rcr
insl
jb
hlt
std
inc
scas
and
jmp
sahf
add
addb
not
jmp
pusha
popl
insb
sti
xlat
pop
adc
in
mov
dec
xor
test
hlt
mov
xor
nop
std
mov
sbb
sbb
in
dec
repnz
pop
outsb
or
andb
pop
in
adc
inc
mov
paddd
fdivp
sbb
ficomps
dec
roll
rcrb
in
orl
in
xchg
jns
mov
xchg
mov
and
xchg
bound
dec
loope
call
push
jge
jg
cs
repz
frstor
movsb
not
cmpsl
outsb
stc
aaa
pop
mov
clc
sbb
sub
lock
stos
loope
adc
inc
and
push
push
int3
cwtl
test
scas
mov
out
ret
hlt
bound
icebp
fs
sub
or
inc
sti
mov
dec
pop
inc
cmp
pop
jb
icebp
incl
push
jg
inc
sub
negl
mov
ljmp
mov
enter
pop
adc
dec
mov
push
or
dec
ss
in
loopne
xchg
push
inc
and
test
mov
xlat
imul
cmp
repz
push
add
xchg
fcomip
push
pop
dec
pop
scas
fwait
mov
repnz
fstl
dec
sti
jge
mov
mov
sbb
cmpsb
sbb
add
repnz
stc
cmp
sbb
lock
cs
movsl
xchg
add
cmp
pop
dec
stos
jmp
dec
pop
cmc
fwait
jno
fistl
ljmp
lock
aad
inc
data16
imull
sub
pop
add
mov
je
adcl
xchg
jmp
loope
test
fsub
stos
mov
lret
sahf
jno
push
adc
inc
fs
push
jge
mov
add
cld
stos
js
dec
cmpsb
mov
dec
pop
repz
mov
lods
mov
jle
push
scas
test
cmp
test
bound
mull
adc
xchg
pop
jo
lret
icebp
out
rsm
cld
jo
or
mov
pop
pop
xchg
push
subl
jbe
dec
mov
lea
and
test
mov
test
jb
loop
cmp
adc
xor
pushf
push
pop
mov
mov
and
data16
xchg
icebp
and
jecxz
dec
mov
out
add
fmulp
pop
xchg
jge
push
in
lret
jp
std
scas
loopne
adc
stos
test
imul
sbb
adcl
lahf
stc
and
cld
lea
push
addb
and
es
mov
outsl
mov
jp
in
mov
ret
jp
mov
xor
fldl
orb
lcall
lds
adc
pop
loopne
stos
adc
sbbl
imul
nop
adc
sbb
dec
fwait
dec
cmp
adc
push
add
movsl
bound
mov
mov
fsubr
add
and
outsl
sbb
and
icebp
mov
sub
call
orb
insl
mov
inc
bound
mov
movsb
inc
and
cmp
inc
inc
insl
mov
jae
push
scas
scas
mov
and
inc
add
push
add
cs
dec
pop
sub
mov
roll
mov
cs
aas
icebp
in
sub
scas
add
jne
sbb
imul
iret
mov
outsl
mov
mov
daa
dec
stos
stos
sbbb
scas
mov
cmp
pop
repz
jp
in
sbb
jne
mov
jp
out
sbb
push
xchg
sbb
push
xlat
mov
imull
mov
mov
cmp
lret
add
cmpsb
pop
mov
or
popa
mov
pop
mov
mov
mov
cmp
push
mov
add
pop
es
jle
pop
int
es
or
fst
ljmp
stos
fcomps
add
mov
inc
and
pop
imul
call
fmuls
mov
shlb
jle
pusha
gs
bound
clc
pop
imul
into
je
mov
ret
idivb
lds
dec
mov
cs
pushf
mov
pushf
test
idivl
fstpt
pusha
fiadds
stos
mov
les
xchg
or
subb
add
push
mov
addr16
int3
loopne
mov
sub
sub
repnz
jbe
mov
das
adc
and
out
dec
push
cvtdq2ps
sub
fwait
arpl
lret
js
sahf
mov
and
push
cltd
xor
xchg
leave
enter
loope
cmp
xor
daa
cmp
mov
lcall
pop
add
xchg
mov
cmp
popf
mov
cmp
ljmp
cltd
mov
ret
jp
cmc
sarb
ja
dec
dec
jl
cmp
sbbl
sbb
cmp
sbb
in
clc
andb
test
imul
fidivrs
jbe
inc
pop
inc
inc
lock
jl
es
roll
inc
lods
jl
pop
daa
hlt
int3
scas
call
cmp
sbb
clc
sahf
ret
bound
or
xchg
or
add
jp
and
cltd
pop
loop
add
mov
in
sbb
dec
add
test
xlat
mov
push
stos
mov
lea
fwait
or
xchg
pop
dec
lods
repz
xchg
pop
adc
jno
test
mov
mov
pshufw
ret
les
movsb
xlat
jmp
imul
mov
lds
and
adc
push
xchg
lahf
xchg
mov
inc
sarb
filds
jns
shrb
repz
and
dec
dec
jp
icebp
push
icebp
and
xchg
push
mov
lock
or
mov
aas
ret
lds
xor
jbe
sbb
jle
mov
or
arpl
inc
pusha
hlt
subl
add
testb
sbb
aas
xchg
jg
lahf
dec
idiv
ja
jbe
xchg
mov
xchg
mov
xchg
in
test
add
push
jae
dec
mov
js
and
xchg
push
js
mov
shll
jmp
pop
sub
or
cwtl
dec
aam
mov
ja
dec
test
loopne
fsts
out
xchg
jnp
pop
jnp
mov
mov
mov
and
push
add
mov
fwait
jb
imul
xchg
mov
jne
sub
add
out
xor
xchg
cmp
cmp
mov
jno
jp
loope
mov
mov
es
fsubrl
push
xor
jo
cs
fldenv
push
mov
mov
lret
cmp
rorb
jp
pushf
jbe
ds
jle
das
pusha
xchg
pop
xchg
push
cltd
or
add
xor
decl
jg
push
inc
xor
jge
fucom
orb
xlat
test
repnz
or
sub
in
ljmp
lret
pop
outsb
pop
lock
fidivs
dec
loop
push
jmp
mov
rolb
jne
subb
pop
sti
rorl
les
jmp
dec
push
aaa
dec
fidivl
cmpl
loop
enter
push
ljmp
jb
int3
pusha
sub
jbe
cmp
or
adc
stc
data16
add
mov
rolb
movsb
sbb
es
fldenv
or
dec
mov
rcrl
cmp
push
or
or
insb
fbstp
jle
cmc
and
pop
mov
and
shlb
rorl
mov
add
sbb
call
insl
push
push
ljmp
mov
icebp
scas
mov
cmp
sti
movsb
cmpsb
pop
rolb
int3
push
xor
test
jbe
sti
sub
movsb
pop
sbb
popf
mov
or
outsl
leave
scas
flds
fs
cmp
stos
adc
cmp
test
jecxz
enter
lahf
ss
inc
out
pop
inc
lret
in
pop
sub
sahf
sbb
dec
dec
pop
jl
mov
jg
lods
mov
aam
mov
jb
sub
jg
fimull
cmp
push
sub
dec
cltd
dec
dec
scas
ljmp
push
mov
and
daa
es
xchg
push
add
inc
aas
aad
in
sbb
mov
bound
js
pop
mov
mov
fildl
mov
cli
push
inc
repz
xchg
cmpsb
cmp
push
in
shlb
repnz
mov
adc
jb
push
push
pop
stc
or
mov
mov
cli
sub
test
and
cmpsl
stc
js
sbb
faddl
rclb
in
rorl
pop
sub
lds
lcall
mov
pop
adc
sahf
mov
sbbl
lcall
stos
sti
subb
popf
fldl2e
call
xlat
pop
lds
cmp
xchg
addb
sbb
and
jl,pt
mov
add
xchg
inc
pop
loop
in
xor
jg
shl
sbb
dec
loop
sti
mov
cmpsl
dec
imul
and
xchg
add
scas
push
adcl
push
lods
stos
in
decb
int3
dec
sub
jecxz
pop
rclb
in
and
add
mov
inc
cmp
sub
add
xor
jmp
lret
xor
or
adc
mov
fiadds
cmpsb
add
mov
push
sbb
dec
push
rclb
mov
sub
mov
inc
xchg
das
stos
mov
or
lahf
cli
xchg
rcrl
jae
xor
repnz
and
aad
ret
push
and
lcall
dec
lret
xchg
push
rcrb
call
std
pop
sbb
and
sub
mov
imul
mov
out
ds
or
and
out
mov
mov
mov
pop
jns
mov
adc
fidivrl
sbb
xlat
filds
aam
xor
jbe
xor
test
mov
or
push
and
mov
mov
xchg
test
inc
xchg
decl
clc
aaa
out
out
insb
std
in
das
mov
ss
push
popf
lods
jg
dec
mov
lods
jb
cmpb
repz
pop
add
aad
cmp
arpl
mov
out
int3
outsl
imul
inc
adc
cli
sub
testb
aad
iret
nop
xchg
shll
xchg
test
popf
sub
inc
ss
jns
aaa
test
mov
add
and
ror
add
jne
lcall
push
jecxz
sub
fwait
cmp
pop
test
mov
fdivrl
jmp
sarb
hlt
and
mov
mov
and
lret
das
shrl
loopne
jb
xor
faddl
gs
jo
or
inc
push
and
jae
mov
push
cltd
xor
cmp
test
sbb
stc
cltd
inc
lret
xor
in
xor
roll
cli
daa
mov
pushf
pusha
fst
test
mov
lods
dec
mov
icebp
or
mov
xchg
in
inc
jmp
fs
mov
cmp
nop
daa
xor
scas
call
and
aas
fildll
adc
outsb
jne
test
xor
inc
in
sbbl
or
pusha
mov
push
jp
dec
mov
push
sub
push
sub
mov
pop
clc
pop
aas
pop
mov
mov
mov
push
cmp
cmp
sbb
icebp
push
mov
out
mov
aaa
scas
push
xor
pop
dec
mov
insb
enter
outsl
adcb
lret
fdivs
xchg
jmp
xor
xor
jmp
and
push
test
xor
lods
and
mov
adc
xchg
les
mov
jge
inc
and
xchg
decl
pop
push
rolb
add
mov
dec
loopne
cmp
rol
pop
cmp
insb
jp
scas
add
nop
pop
push
cltd
cltd
lock
into
sub
stos
jmp
imul
and
or
dec
sahf
scas
xchg
pop
inc
test
lahf
adc
dec
loope
ljmp
pushf
cmp
xchg
xor
movsl
mov
dec
sarb
sub
and
adc
pop
adc
mov
jae
fdivrs
popf
sbb
stos
mov
add
cld
sarl
dec
cs
cwtl
mov
jp
std
xor
in
dec
ret
movsb
pop
sbb
dec
loop
mov
imul
insl
outsb
add
xor
imul
jge
jp
xor
inc
xchg
xor
outsb
sub
movsb
cmp
cwtl
sbb
imul
pop
and
arpl
sub
loopne
xchg
ret
out
cmc
sahf
fwait
scas
inc
push
xor
lcall
arpl
mov
data16
sub
sub
movsl
adc
pop
mov
xorl
xlat
ljmp
mov
push
or
add
inc
lods
adc
push
addl
cmp
add
cltd
test
push
sub
pop
push
mov
add
aas
mov
shll
popf
shlb
add
movsl
aas
repz
mov
repnz
in
cld
call
cmp
test
divl
lahf
mov
scas
xchg
push
stc
sub
pop
in
adc
ret
rorl
and
dec
in
scas
sbbb
shlb
fadds
shr
dec
rcll
and
leave
sub
mov
ja
mov
push
ret
ja
jae
gs
ret
orb
xor
sub
push
push
add
cmp
mov
fidivs
call
call
push
aad
into
ja
mov
pop
test
mov
push
leave
jbe
sbb
test
xchg
popa
inc
adc
mov
push
inc
fidivrl
mov
sbb
jecxz
movsb
pop
xor
xchg
adc
dec
gs
xor
jae,pn
xchg
adc
data16
jb
push
xlat
aaa
aas
push
jae
xor
jp
sub
mov
xchg
push
fistps
js
in
rclb
jbe
and
mov
nop
stos
inc
add
push
out
mov
je
sub
jge
sub
add
xchg
jns
jmp
pop
jbe
stc
cmpsl
jle
jnp
dec
mov
out
xchg
xor
andb
das
sti
xor
daa
out
or
dec
cmp
mov
popa
adc
mov
xorl
fdivp
je
mov
repz
mov
shlw
dec
mov
imul
not
out
pop
movsb
dec
pop
lret
mov
loopne
test
out
pop
xor
in
jecxz
outsb
jp
call
lds
pop
in
add
out
push
xor
dec
cmp
xlat
ret
mov
pusha
rolb
cld
adc
ljmpw
cmpl
xchg
stos
iret
cs
cmp
and
adc
jno
mov
pusha
jg
dec
sub
and
ds
sub
dec
sub
jae
and
in
adc
insl
filds
out
mov
or
daa
xor
push
icebp
movl
mov
bound
insl
js
neg
or
jbe
xchg
mov
jp
lcall
cld
mov
stos
fs
cmpsb
adc
pop
dec
call
mov
shll
or
rorl
cmpsl
mov
sbbl
mov
jo
push
test
rorb
pushf
imulb
inc
sub
inc
mov
push
ljmp
mov
shrl
ret
dec
dec
xor
sub
mov
dec
in
jl
mov
mov
mov
aas
push
out
push
jae
lds
fidivrs
mov
pop
inc
into
ficompl
aam
pop
aad
jp
inc
cs
int
jo
push
insl
fsubr
rclb
test
test
dec
adc
mov
je
push
ficomps
push
and
out
movsl
adc
adc
scas
int3
ljmp
xchg
ret
insb
cmp
and
stos
in
pop
ss
adc
lret
out
inc
jb
in
jbe
cmp
add
sub
inc
ljmp
push
mov
test
dec
jg
inc
xor
js
cmp
sbb
mov
ret
adc
stos
imul
lods
popa
imul
cwtl
pusha
ljmp
mov
sub
jle
cmpsl
stos
pop
scas
faddp
inc
xor
cmp
fwait
or
ficoml
adc
shll
sbb
xchg
xchg
std
sbb
popf
ret
rolb
mov
xchg
fs
mov
das
dec
mov
fsubr
clc
push
daa
ljmp
xor
mov
lahf
jae
inc
or
inc
pop
iret
cmp
rclw
xchg
pop
std
in
rcrl
loope
xchg
pushl
inc
mov
sbb
pop
jle
sbb
mov
out
cmpl
cwtl
xor
addb
sub
mov
je
pop
stos
adc
inc
sbb
or
dec
gs
pusha
pop
jmp
mov
lock
xchg
jns
xchg
mov
scas
insl
add
fwait
data16
xchg
xchg
nop
sub
das
mov
mov
cmp
out
popa
loop
orl
sahf
mov
jg
std
sbb
push
vunpckhps
push
bound
and
inc
adc
call
test
push
add
add
insb
xor
std
xor
fnstenv
push
mov
testl
xchg
sti
out
lds
add
imul
bnd
xchg
inc
sahf
sbb
sti
sub
mov
test
testl
sbbl
mov
insl
add
sbb
into
dec
adc
push
mov
mov
ret
mov
jl
outsb
jl
mov
rcrl
mov
add
es
mov
ljmp
inc
pop
cmp
push
and
fsubrl
xchg
ret
arpl
push
scas
fldl
jo
sub
xor
cmpsb
lods
and
shrl
lret
es
out
lds
adc
dec
sub
sbb
sbb
movsl
push
fwait
daa
std
and
and
inc
insb
sti
dec
es
cmp
inc
mov
sbb
int
pop
mov
mov
outsl
ja
push
sbb
xchg
dec
sbbb
imul
jo
cmpsb
cmp
pop
adc
xchg
and
cmc
fsubl
shlb
js
add
mov
xchg
mov
stc
fidivl
into
mov
dec
xor
decb
daa
aaa
push
gs
adc
pop
xchg
jnp
sbb
cmp
scas
outsl
pop
icebp
inc
fdivr
les
cwtl
pop
adc
mov
or
dec
pop
pop
jne
push
xchg
popf
movsb
and
hlt
pusha
fndisi(8087
dec
sti
xchg
jle
dec
dec
mov
pop
jnp
ret
hlt
cltd
or
daa
jns
xchg
outsl
scas
adc
adc
inc
add
jbe
loope
mov
ja
mov
ficoml
jb
je
mov
dec
or
hlt
ret
sub
pop
inc
xor
dec
aam
jb
fs
test
lods
jge
cmpsl
daa
es
aaa
mov
cmp
sbb
mov
fildll
dec
testl
mov
inc
popa
ret
shl
mov
lods
adc
and
das
test
push
xlat
repnz
cmp
push
jns
mov
push
popa
add
xor
lcallw
jne
sbb
xchg
push
imul
les
testb
pop
int
adc
int
dec
dec
psubq
lods
pushf
dec
gs
mov
shlb
nop
addr16
dec
mov
mov
rolb
xchg
jmp
jmp
popf
pusha
movsl
xchg
fs
ss
aaa
rol
sub
inc
mov
movb
cltd
sbb
imul
lahf
dec
out
sbb
mull
inc
mov
fldl
cwtl
or
cmpsl
pop
ja
fsub
mov
dec
out
dec
mov
sub
adc
ficompl
jne
aaa
fdivrs
ficoms
push
push
out
enter
mov
mov
nop
es
inc
and
mov
xlat
push
jnp
scas
xor
bound
pop
dec
in
movsb
and
xor
jg
je
xorb
sub
mov
add
lock
lret
push
sbb
pop
add
or
mov
sbb
jmp
xor
push
lock
or
xchg
sub
mov
aam
cmp
and
les
add
jnp
push
ja
jbe
cwtl
test
stos
sub
scas
lcall
xchg
mov
repz
lods
hlt
dec
scas
inc
int3
xchg
ss
jle
daa
enter
jmp
scas
jb
nop
int3
jg
icebp
ficoml
inc
fstl
push
fisubl
arpl
jp
test
dec
push
mov
sub
add
add
test
dec
add
rclb
mov
cwtl
push
or
xor
push
pusha
cld
pop
inc
test
push
push
cmpsl
adc
test
cmp
xchg
ds
pop
icebp
cwtl
pop
push
mov
cmp
sbb
cmp
dec
sbb
jnp
push
cmp
enter
and
jg
int
mov
mov
push
adc
sbb
fistpl
cwtl
mov
ret
movsl
and
xchg
je
adcb
lahf
mov
add
push
mov
test
cmp
inc
xchg
popa
pop
out
mov
sub
add
adc
shl
enter
popa
fidivrl
pop
test
jo
fistpl
push
push
inc
les
sub
adc
pop
mov
fdiv
mov
cmp
pop
bound
cmp
push
outsb
sbb
xor
movsl
cmp
lcall
pop
adc
je
push
lret
addr16
push
ljmp
loope
xor
pop
insl
and
shr
adc
mov
or
dec
or
adc
push
lods
das
pop
dec
adc
popf
xor
test
xchg
inc
fs
sarb
repz
out
into
fdivrs
movsl
daa
lods
mov
cmp
jge
push
fisubs
out
je
and
push
jne
push
lds
or
ds
stos
pop
cli
dec
jo
jbe
push
test
negl
js
cmp
pop
fcomi
cmpb
sbb
in
arpl
xchg
outsl
push
mov
adcb
xchg
enter
sahf
push
fldenv
call
sbb
push
xchg
ja
sbb
in
fdivrl
cmpsl
addb
inc
cli
adc
imul
mov
push
leave
and
adc
ss
popa
sub
out
int
cld
movsl
fbld
sti
aas
mov
pop
cli
jne
pusha
adc
push
repz
dec
cmp
clc
shrl
inc
mov
xchg
mov
fnsave
fcoml
mov
clc
stc
pop
lock
add
cmp
lock
or
lcall
gs
fwait
nop
paddw
rcl
daa
sbb
subl
dec
pop
pop
cli
lret
jnp
push
scas
sbb
lret
dec
adc
roll
and
mov
mov
cmpsb
xor
jle
mov
or
jl
ffree
jge
ja,pt
xor
addr16
pop
xor
sub
add
or
xchg
cmp
outsb
outsb
mov
jo
xorl
cmp
orb
hlt
adc
es
test
mov
lds
mov
adc
nop
sbb
icebp
dec
icebp
data16
jb
mov
sti
gs
xor
push
std
mov
in
fwait
popa
in
pop
ret
insb
mov
sub
inc
frstor
in
pop
sbbb
loop
or
dec
xchg
sbb
push
push
es
rcll
sbb
jp
pop
xlat
aas
addr16
pop
cwtl
push
data16
push
push
sub
loop
sub
pusha
cmp
or
mov
sbb
roll
mov
jne
and
add
popa
inc
xor
out
mov
lcall
xchg
movsl
add
pusha
sarb
nop
cmpsl
lods
sbb
test
xor
bound
xchg
and
and
mov
in
test
mov
fstpt
int
es
leave
mov
add
xchg
jg
or
in
mov
outsl
and
out
cmp
or
cmp
xchg
xchg
out
orb
mov
pop
xchg
int3
add
push
orl
sub
icebp
push
push
fld
mov
es
add
cmc
lahf
sbb
iret
add
iret
int3
scas
push
inc
test
xor
and
jmp
lea
popa
sbb
add
test
add
mov
pop
and
cmpsl
dec
aad
loop
notb
or
push
cmc
mov
lahf
stos
std
jmp
push
pop
add
ret
loope
ficoml
aam
sub
mov
lret
mov
sbb
adc
js
data16
dec
pop
jecxz
add
and
cmpsb
mov
loope
invd
or
mov
test
insb
and
mov
sbb
movsb
or
in
popa
pop
test
xchg
in
push
cmpsb
into
arpl
jecxz
and
repnz
mov
or
dec
mov
add
andb
and
mov
notb
pop
lods
loopne
mov
ljmp
cmp
and
call
into
mov
and
lret
cmp
repnz
fmuls
mov
arpl
ja
and
pop
rcrb
cmpsl
ja
fldcw
pop
ret
gs
popa
add
mov
sbb
sub
gs
xor
ss
fdivrl
adc
add
push
add
sarb
push
cmpsb
cmp
andl
lcall
jns
mov
call
and
imul
imul
mov
mov
lods
popa
and
push
adc
sbb
stos
xchg
shrb
sbb
std
xchg
out
add
repnz
jle
mov
mov
jle
mov
loope
aas
addr16
push
popl
and
lds
push
hlt
mov
fs
sub
cltd
loope
mov
jmp
testb
pop
dec
in
jp
add
shll
xchg
fsubrl
dec
roll
fstpt
pop
lods
cld
fiaddl
xchg
lock
xor
xchg
aam
mov
and
xor
cli
cld
jg
or
mov
or
inc
add
lods
or
clc
int
add
xorb
in
dec
cmp
loope
xor
mov
aaa
mov
cmpsb
add
jl
addl
jp
mov
xchg
inc
inc
xchg
or
mov
jno
adc
cwtl
mov
into
pop
ret
int
xchg
pusha
repz
adc
fnsave
mov
cs
and
fs
mov
outsb
add
sbb
and
es
fwait
loopne
mov
lds
jge
lret
bound
lahf
push
das
aaa
sarb
repz
dec
in
or
inc
mov
inc
pop
test
or
sbb
movsl
rolb
mov
mov
rclb
mov
xchg
icebp
pop
lret
add
cltd
pop
xchg
sbb
cs
xchg
cmp
sbb
iret
andl
ds
inc
vpminsw
pop
push
sbbl
fimull
std
pop
fdivs
and
rol
adc
pop
stc
cmc
mov
pop
out
dec
in
mov
insb
adc
push
addr16
ljmp
inc
xor
and
stos
jmp
lea
mov
cmp
push
or
jge
xchg
dec
pop
adc
incl
sbb
adcl
cltd
sbb
xchg
bound
add
movsl
aas
dec
cltd
std
push
fs
mov
inc
data16
lret
clc
popf
jns
adc
in
inc
and
xchg
jmp
rcrb
enter
test
shll
cld
push
mov
jns
or
mov
adc
push
rcrl
cmp
mov
dec
loopne
mov
test
sub
imul
fmul
add
mov
push
and
shlb
incb
inc
stc
pop
repnz
push
jns
stos
sub
ficomps
imul
jl
cwtl
inc
lcall
mov
sub
ds
inc
push
rorb
jle
pop
fildll
sarl
insb
pop
push
lret
jno
dec
jnp
and
cli
dec
adc
scas
dec
sbb
shl
cmp
fs
loop
cmp
mov
sti
stos
les
data16
insl
jle
xchg
adc
add
lods
out
adcl
fbld
hlt
je
sub
mov
mov
pushf
dec
dec
and
lods
hlt
and
push
and
js
push
cli
pushf
or
sbb
mov
pusha
adcb
dec
xchg
mov
xchg
loop
fwait
sti
or
push
pop
mov
mov
ja
test
pop
xor
aas
popa
inc
stos
popa
nop
out
test
ja
adc
lret
dec
mov
das
xor
daa
dec
add
mov
mov
mov
mov
pop
mov
pusha
negl
std
xchg
mov
subb
sub
popl
cmp
push
in
pop
fsub
dec
scas
cmp
aaa
pop
xchg
call
adc
jo
into
xor
dec
outsl
scas
jle
sbb
adc
adc
xchg
sbb
unpckhps
icebp
dec
mov
fisubrl
lods
inc
push
xchg
dec
in
lcall
inc
fsubrp
dec
sarl
mov
jae
test
jg
push
mov
or
cmc
add
fdivrs
pop
jbe
movsl
fucom
loop
cmp
fs
rcrb
daa
xor
cmp
push
push
in
decb
inc
and
adc
fbld
ret
cmp
adc
jmp
sub
push
or
enter
repnz
push
stos
in
js
mov
inc
insl
scas
jecxz
ja
ljmp
or
inc
xchg
cmp
test
mov
cmp
adc
leave
and
es
push
cmp
sti
ds
push
imul
aaa
jbe
pop
cmc
cmc
jne
cmp
push
std
xchg
jbe
shll
adc
call
stc
mov
inc
add
xor
xchg
xchg
cmp
fiadds
push
test
outsl
movsl
add
ret
jb
rol
cmc
pop
dec
js
repz
mov
cwtl
pop
scas
inc
cmp
mov
mov
adc
nop
mov
jb
ja
add
jp
sub
sbb
add
xor
xor
pop
gs
pop
jne
pop
in
inc
and
les
or
inc
cmp
filds
fnstsw
in
push
jp
icebp
loop
jae
mov
pop
ret
subb
popa
ja
sbb
or
movsb
popf
inc
into
mov
xor
pop
jmp
xlat
out
jo
and
adc
sbb
mov
movsb
add
pop
iret
mov
pop
bound
and
rolb
lcall
dec
mov
shrb
scas
add
dec
pop
repz
and
xchg
sub
inc
fbstp
enter
inc
insb
inc
fisttps
sub
pushf
fistl
dec
lret
cmc
ret
sub
jo
ds
pop
jg
lea
add
sbb
pop
out
cs
xchg
or
stos
mov
pop
xor
scas
dec
inc
andl
lods
push
outsl
dec
mov
pop
jbe
push
shlb
sub
in
mov
and
jns
or
mov
adc
fdivrl
test
push
mov
push
push
movsb
repnz
mov
subb
and
inc
in
pop
sbb
test
push
sbb
je
pop
div
xchg
sbb
dec
and
jnp
aas
push
and
xchg
inc
fimuls
stos
gs
arpl
inc
dec
lods
push
popa
mov
jns
dec
adc
movsl
insb
cld
ss
cmpsb
adc
mov
mov
in
cmp
xor
iret
dec
arpl
iret
insl
daa
int
repz
pop
dec
jbe
pop
cmp
push
inc
out
imul
sub
mov
fnstcw
aad
push
adc
or
push
fs
or
xor
ret
or
pop
lret
jb
mov
enter
repz
scas
cmc
cltd
nop
sbb
shrb
mov
sbb
mov
jmp
ss
in
xor
andl
adc
mov
pop
sahf
or
fs
adc
mov
or
pop
jb
popl
fsubr
and
jl
cmp
nop
stos
loopne
jl
mov
adc
jnp
xchg
sahf
and
fadds
shrl
repnz
das
pop
imul
mov
pop
popa
ss
sbb
cld
xchg
dec
jl
xchg
jno
sbb
push
sahf
or
inc
xchg
sub
insb
sbb
mov
inc
cwtl
pop
inc
lret
xchg
aaa
cld
sahf
xor
xor
xor
je
fcoml
nop
push
cmp
stos
lods
jmp
jae
mov
push
lret
push
out
dec
mov
cwtl
push
cwtl
xchg
sub
cmc
mov
dec
rolb
pop
xor
rcrl
idivl
and
pop
imul
lea
or
adc
cmp
or
out
jne
xor
jmp
mov
enter
insl
test
lahf
jno
std
subb
push
push
mov
sti
push
sub
and
in
pop
inc
arpl
hlt
jl
jne
mov
inc
mov
fdivp
inc
dec
add
aaa
scas
mov
dec
mov
fs
fs
iret
data16
test
cmp
sahf
mov
dec
int
cmp
pop
jl
ds
adcl
ret
jne
ret
xchg
xchg
push
push
mov
bound
jne
mov
push
lcall
xorl
xor
cmp
orb
out
and
int3
add
dec
and
mov
out
pop
lods
push
pop
sbb
adc
or
cmp
adcl
mov
xor
sahf
lea
cmp
mov
rolb
into
inc
mov
mov
mov
icebp
aaa
push
adc
insb
xchg
adc
xor
adc
add
mov
jae
push
add
mov
iret
push
mov
fldenv
xchg
pop
adc
cmc
mov
mov
insb
sub
es
ret
or
hlt
xchg
sbbl
inc
les
xchg
outsb
out
lcall
xor
jmp
push
inc
or
pop
dec
mov
lret
pop
pop
mov
rclb
jmp
cmp
lahf
cmp
in
mov
push
stos
pop
mov
mov
cltd
mov
lret
stos
scas
sub
lret
or
shrb
push
sbb
cmp
enter
mov
and
push
les
fsubl
pop
stc
jmp
stos
inc
testl
lcall
pop
pop
stos
call
dec
cltd
mov
cmp
mov
push
jae
repz
mov
adc
push
orb
out
xor
and
inc
push
rol
imul
inc
sbb
out
inc
out
fisubl
mov
add
xorb
rcrb
enter
or
dec
dec
lret
aaa
xchg
leave
cmpsb
push
repz
insb
gs
lock
mov
movsl
inc
outsl
pop
fisubrs
inc
sub
mov
sub
fsts
inc
sbb
loopne
ss
add
xchg
xor
negl
insl
or
enter
jae
sbb
or
sti
es
rclb
xor
sbb
lods
mov
mov
jb
mov
roll
call
xlat
push
jmp
mov
int
jle
nop
test
xchg
ret
ffree
jmp
movsb
cmp
jno
lds
jbe
cli
inc
sbbb
push
inc
cld
mov
ret
inc
dec
outsb
fcmovnbe
cmp
cmp
sti
out
addr16
dec
sti
push
fdivs
vmovss
ficoml
out
ja
int
and
out
fidivs
negb
mov
xor
pushf
out
cmp
cwtl
push
adc
sub
pop
sahf
loop
push
jns
inc
mov
je
jmp
jl
xor
jg
aaa
xchg
sub
cli
inc
popf
negl
pop
outsb
rcrb
scas
sub
lahf
hlt
addr16
sar
jno
rorl
hlt
pop
jb
and
pop
popf
dec
pop
push
out
xchg
sub
push
std
push
jl
mov
int
jno
and
sbb
std
not
cmpsl
pop
hlt
mov
mov
adc
mov
in
push
out
mov
dec
xor
outsl
dec
out
pop
pop
push
pop
aam
enter
sar
and
gs
insb
mov
jge
xor
mov
ret
jle
xor
dec
shrl
shl
dec
je
sahf
loope
aad
stc
ss
xor
mov
test
add
mov
add
cld
fnstsw
imul
mov
xorb
pop
mov
rol
jo
mov
sub
je
push
push
inc
xchg
and
cmpsb
loope
dec
dec
push
lret
mov
or
or
scas
adc
inc
adcb
arpl
sbb
packuswb
xchg
jb
jnp
arpl
add
aad
in
and
lahf
mov
pop
out
out
pusha
mov
insl
push
sub
mov
mov
lods
insl
or
loop
jne
sahf
fsubrs
pop
pop
pop
pushf
sub
push
ss
inc
jae
movsb
jno
sbb
adc
addl
xor
or
pushf
mov
jge
jb
dec
rcrl
test
push
jmp
ret
hlt
push
jb
adc
push
fildl
popa
faddl
lret
lods
lret
js
mov
push
add
xor
mov
mov
cmc
sub
aas
ret
call
or
arpl
scas
cmp
cmp
cmp
lahf
and
iret
ret
pop
mov
sbb
aas
ja
add
dec
and
imul
pop
rcrb
cmp
push
xchg
dec
clc
ja
fildll
xor
push
push
movmskps
iret
xor
sarl
cld
loope
in
sub
mov
dec
xor
push
mov
fsub
jg
aaa
cwtl
das
xchg
mov
mov
fnstcw
sbb
insb
add
insl
cwtl
mov
mov
adc
adc
pusha
arpl
negb
lods
adc
mov
push
adc
jns
push
stos
stos
mov
shl
or
insl
shrb
movsl
sbb
pop
icebp
jbe
sub
pop
cwtl
jp
add
outsb
enter
cmpb
or
mov
ret
icebp
lods
stc
lahf
push
enter
mov
cwtl
ffree
dec
sbb
repz
arpl
cmp
cs
sahf
xor
addl
jl
sub
out
add
aam
mov
pop
sbb
xor
ds
imul
fcoms
hlt
adc
add
sahf
and
jo
jmp
jle
mov
pop
jbe
mov
sbb
mov
repz
lcall
loope
push
rorl
fmul
xor
jle
add
inc
inc
mov
sbb
fisttpl
xchg
cmp
pop
cmp
mov
rorl
add
cli
rcl
aas
jbe
imul
push
jmp
lods
pop
imul
jnp
mov
push
adc
faddl
fwait
cli
lds
cmp
mov
inc
imul
adc
adcl
es
cwtl
sbb
mov
out
sbb
sahf
cld
mov
mov
mov
rcrb
sbb
push
add
dec
lcall
fwait
mov
popa
imull
icebp
mov
push
jmp
mov
jb
lahf
leave
ja
iret
mov
mov
sbb
js
in
fdivs
packsswb
xor
and
pop
cmp
cs
dec
into
adc
hlt
lret
repz
hlt
adc
icebp
inc
or
stos
inc
or
stc
mov
xor
jmp
ss
adc
push
inc
xchg
dec
lods
mov
mov
pop
jge
jmp
lea
nop
mov
scas
or
in
jne
ret
mov
sbb
test
enter
push
xor
cmp
sub
sub
dec
dec
cmp
data16
mov
inc
mov
test
push
xchg
mov
mov
dec
lret
mov
mov
lock
fbld
cmp
cmpsl
sbb
jo
sar
sub
lock
push
push
xchg
rcrl
mov
mov
mov
push
mov
cmp
push
cmp
pop
sbb
dec
stos
mov
add
mov
cwtl
jle
dec
sub
sbb
aas
jae
bound
out
test
cltd
jae
insb
jbe
popf
dec
xor
push
mov
lcall
add
outsl
sbb
dec
pop
pop
add
sahf
fldcw
mov
aas
aad
nop
lods
cmpsl
mov
dec
fdivp
fcmovb
mov
aad
mov
adc
mov
jbe
cld
pop
jg
ljmp
xchg
stc
dec
mov
cwtl
mov
lret
push
aas
loop
mov
jae
andl
push
imul
mov
sbb
add
ljmp
sahf
jns
ss
cmp
cs
mov
sub
jge
out
sbb
icebp
cltd
pushf
test
fwait
mov
das
adc
es
jle
inc
loopne
mov
hlt
mov
mov
xchg
jecxz
lods
stc
iret
sbb
jmp
fisttpl
sti
ret
mov
clc
nop
mov
jne
xchg
mov
dec
xor
mov
cli
or
and
nop
sub
and
sbb
stos
leave
push
mov
lret
aad
add
scas
xor
loopne
aam
hlt
repz
push
sbb
add
cmp
jbe
mov
xchg
icebp
out
xchg
mov
lock
movsb
test
in
scas
lret
test
sbb
enter
aam
or
loopne
cmc
sub
data16
cmpsl
inc
mov
push
push
xor
test
or
les
scas
cmpsb
rcll
adc
push
mov
adc
pop
jge
loopne
sub
fbld
mov
sub
ds
fisubrl
fstpl
mov
outsl
sub
mov
iret
fcmovbe
xor
pop
stos
add
mov
cwtl
fadds
mov
fiaddl
mov
jge
pop
aaa
inc
cmpsb
pop
in
jno
xor
and
add
es
push
inc
fmul
je
xchg
lods
daa
ds
xor
push
test
push
enter
jl
movsl
cmp
nop
es
nop
ljmp
es
push
popf
add
stc
mov
pop
adc
imull
and
push
sbb
add
ljmp
mov
shlb
jae
les
xor
stos
aas
xchg
jl
adc
repz
pop
sti
pop
imulb
mov
addl
jno
mov
mov
in
pushf
xor
in
jns
add
std
imul
or
cmpsb
stc
jecxz
mov
fsubs
outsb
pop
push
mov
push
int3
pop
out
sti
mov
mov
popa
push
jne
aaa
or
inc
fimuls
neg
xor
dec
fsubrs
mov
push
out
jno
jo
fdivrs
insb
dec
aad
adc
cmpsb
push
xorl
cmp
push
nop
inc
clc
bound
pushf
cli
push
inc
jbe
cmpsb
int3
push
test
fdivrl
adc
cwtl
fistl
in
sbb
pushf
or
incl
sahf
das
sahf
add
cmp
lcall
sub
aaa
ficompl
shrb
daa
pop
pop
adc
int
fs
jecxz
jecxz
shll
lock
sbb
or
inc
shl
mov
clc
rol
scas
in
imul
mov
add
mov
ret
mov
inc
cli
xor
mulb
lds
lret
cmp
mov
mov
jl
aad
popf
sbb
push
enter
adc
insb
repnz
and
xor
pop
test
nop
mov
outsl
sbb
mov
stos
aas
inc
sahf
fwait
arpl
push
push
adc
sub
xchg
pop
jmp
xor
andb
sarl
sbbl
or
inc
repz
fildll
or
adc
fstpl
lock
sub
popf
int
cmpsl
mov
jl
push
mov
add
inc
pop
push
cmp
jle
imul
loop
scas
mov
jns
or
mov
sbb
fldl2e
andb
pop
ljmp
push
fwait
mov
imul
push
fcomps
in
les
add
pop
xor
pop
pushf
retw
test
xchg
mov
ret
sbb
adc
out
adc
pop
xor
cld
addb
cmc
inc
jae
sbb
mov
sub
iret
arpl
adc
mov
idiv
pushf
cmc
adc
je
pop
loope
test
sarb
mov
or
in
out
outsl
jl
or
orb
pop
mov
inc
fistpl
mov
in
cmp
out
push
push
lcall
call
movsb
pop
icebp
xor
into
jno
cld
push
push
pop
int3
push
or
shrb
jg
rol
sbbb
loope
jge
adc
sub
pop
push
pop
add
jns
jae
cmpsl
xchg
sbb
test
sub
mov
in
int3
stos
in
adc
out
test
add
cmp
or
fadd
push
pop
dec
mov
xor
xor
movsb
cmp
adc
jb
mov
pusha
sbb
adc
lds
fstps
enter
pusha
in
push
cwtl
sti
xchg
fnstenv
fs
jne
mov
mov
jnp
xlat
cmpsl
scas
data16
js
hlt
pop
lcall
rorb
fcomps
fcmovbe
dec
filds
pop
sbb
cmp
movsb
mov
decb
iret
and
popf
mov
lret
push
push
sub
mov
ss
xchg
mov
dec
sbb
push
movb
enter
xchg
ljmp
dec
std
mov
xor
jle
sub
nop
inc
clc
sub
fs
jle
dec
dec
xor
lahf
or
fwait
lret
int
jne
inc
sub
pop
pop
mov
fs
mov
lcall
cmp
call
mov
xchg
popf
xor
cmp
xlat
mov
sbb
in
xchg
shlb
dec
cld
sub
leave
pop
inc
or
out
cmpsb
in
mov
sbb
cmp
xchg
inc
pop
fnstenv
call
pop
push
dec
gs
xlat
jae
mulb
or
and
xchg
imul
cmp
jnp
mov
and
clc
add
mov
arpl
je
outsl
insl
std
cli
mov
mov
imull
out
pop
or
mov
mov
dec
data16
rcrl
iret
fimuls
push
imul
aaa
xor
addr16
jo
mov
jb
ficoml
les
cmpb
mov
lds
jg
pop
adc
mov
test
je
std
push
sbb
imull
mov
in
pop
arpl
sbb
les
stos
xchg
adc
nop
sti
push
dec
std
xchg
out
test
mov
lahf
mov
push
fnstsw
in
imul
pop
cmpsl
jp
mov
loop
daa
pop
in
mov
push
scas
dec
adc
mov
adc
fidivl
mov
fnstenv
or
data16
es
jae
mov
shlb
pop
sub
movsb
and
fimull
inc
and
jmp
xlat
mov
or
add
xor
xlat
in
mov
add
aas
and
inc
lret
fidivl
mov
mov
and
push
jmp
cmpsl
sbb
cld
rcrl
testl
sub
std
pop
and
mov
ror
xchg
jle
loop
test
data16
fstl
shrb
fldcw
mov
ret
ret
push
jp
pop
mov
push
out
push
lcall
pop
lea
stos
jnp
lds
xor
out
jl
cmc
push
shll
rcll
xchg
pusha
mov
js
sbb
push
sub
pushf
hlt
sbb
adc
sarl
sub
mov
mov
cmp
movb
ret
xchg
nop
aam
out
xchg
inc
sbb
xchg
dec
addl
sub
loopne
ficoml
clc
mov
pop
pop
push
addr16
rcr
into
cs
in
cmp
jge
sub
nop
push
cmp
aas
inc
ds
insb
dec
push
inc
in
jb
mov
stos
leave
cmpsb
xor
sub
cmpsl
ds
or
add
data16
cmpl
inc
clc
xchg
xchg
jmp
les
lock
xchg
mov
insb
in
out
xor
addr16
popf
xor
jmp
xorl
outsl
xchg
and
aas
stc
je
mov
xlat
cmp
lret
mov
gs
movsl
adc
nop
aam
add
nop
add
mov
fidivl
push
inc
sub
std
in
or
jle
pop
lahf
cmp
push
xchg
shl
iret
in
pop
jno
std
sbb
xchg
or
sub
in
cmp
xchg
push
mov
cmp
xor
test
add
mov
mov
adc
sub
arpl
into
enter
inc
xor
outsl
popf
stc
xor
filds
scas
push
xor
js
mov
scas
daa
lcall
adc
lahf
test
stc
mov
stos
fs
push
inc
iret
fnstcw
test
jae
loop
ffreep
pop
test
lahf
and
popa
sub
xor
mov
sub
imul
dec
adc
mov
imul
aaa
dec
andl
fstpl
sub
sbb
subb
adcl
mov
push
push
push
jmp
aam
mov
pop
negb
fucomip
movsl
cmp
repnz
mov
testb
jne
fldenv
js
test
scas
or
movsb
outsl
add
test
mov
mov
sbbb
jl
mov
mov
loopne
push
shrl
mov
and
lock
lods
mov
adcl
iret
jg
xchg
fcoml
scas
icebp
and
dec
adc
push
pop
and
mov
lret
lods
scas
xchg
fisubrl
cmpsl
imul
mov
jecxz
popf
xchg
imul
sbb
sbb
insb
or
scas
scas
fstl
mov
or
fistl
sub
shlb
mov
and
cs
sbb
das
pop
shl
icebp
lcall
push
mov
jb
and
or
adc
mov
push
insl
je
mov
add
aad
xchg
jge
popa
jbe
mov
test
in
scas
repnz
rorb
mov
or
dec
add
adc
jge
push
xor
lret
inc
mulb
sub
mov
daa
mov
inc
test
bnd
mov
adc
mov
outsb
mov
iret
lret
pop
and
xor
mov
mov
push
or
adc
push
bound
mov
cmp
data16
jo
sbb
lcall
pop
sbb
adc
dec
pop
xchg
sbbl
sarl
mov
fs
fs
int3
pop
fstpl
and
xor
lcall
lea
xor
jmp
xchg
arpl
and
adc
push
insl
sub
dec
orl
or
cmp
xchg
push
push
aas
dec
xchg
mov
je
scas
jnp
push
or
lcall
in
addl
jnp
ja
ret
fsubl
hlt
push
jbe
push
inc
stos
bound
jb
xorb
test
jbe
hlt
and
push
mov
xchg
lcall
and
outsb
sbb
adc
dec
pop
cmpsl
or
cmpsl
adc
or
cmp
push
and
pop
jo
push
adc
jmp
xchg
rorb
and
xchg
push
insl
or
jo
movsl
cmp
push
mov
in
sbb
mov
leave
int3
js
lret
sub
xchg
cmp
push
fists
sbb
mov
aas
mov
jae
mov
dec
imul
adc
pusha
jb
sbb
sub
or
lret
add
xlat
cmc
int
dec
cmp
daa
insl
test
cmp
pop
adc
aaa
nop
pop
inc
jo
xor
lea
stc
sti
and
addr16
daa
stc
push
fmull
push
jp
in
insb
adc
in
aaa
daa
incl
push
mov
jp
inc
sbb
sub
std
push
pop
shr
cmp
sahf
cmp
cmp
xchg
add
pop
shr
xor
gs
out
lahf
xor
sar
outsl
imul
sbb
dec
jg
mov
or
aaa
push
cmp
test
cmpsl
fnstenv
test
test
in
xor
fistps
xchg
adc
add
sub
push
xchg
cs
push
mov
jne
mov
mov
aad
cmp
gs
mov
bound
xchg
bound
clc
daa
inc
cs
add
push
sahf
inc
adc
jns
sbb
fiaddl
jae
in
or
inc
pop
fcomps
mov
xchg
sbb
mov
aad
lock
pop
in
nop
arpl
mov
movsb
xor
adc
xchg
and
cld
mov
negl
push
dec
mov
lods
adc
in
gs
and
loop
dec
or
call
mov
scas
dec
xchg
push
dec
jbe
fsubs
fwait
pop
sahf
mov
mov
es
jge
fucomi
ret
sbb
mov
int3
arpl
push
hlt
adc
cmp
fsts
or
cli
jne
mov
in
clc
xor
lods
adc
inc
jmp
divb
popf
sbb
and
pop
cmp
sub
daa
mov
mov
nop
in
lahf
fmul
push
xor
sbb
xchg
mov
sbb
pusha
ds
sbb
adc
push
cmpsl
idivl
test
loopne
call
mov
pop
sub
inc
stc
popl
inc
cli
mov
insb
imul
movsl
std
pushf
pop
out
xor
test
push
jo
leave
test
sbb
arpl
mov
stos
push
and
dec
test
dec
fisubrl
mov
stos
mov
mov
mov
lret
and
ja
pop
in
dec
jns
cmp
sbb
inc
ljmp
into
test
ret
ret
sahf
mov
rcr
clc
xchg
push
jmp
mov
movsl
xor
add
inc
dec
pop
add
std
iret
adc
es
repnz
cmp
cmp
pusha
jecxz
mov
mov
imul
pop
fdivrl
fiadds
mov
movsb
sub
out
out
push
sub
stc
inc
aas
add
jno
das
pop
jne
icebp
movsl
mov
lcall
sub
sbb
notl
cmp
and
xor
outsl
jnp
push
mov
push
cmp
fimuls
test
inc
mov
sbb
fiadds
aam
fmul
mov
ss
inc
push
cmp
and
inc
in
cmp
data16
push
adcb
ret
iret
incl
mov
pop
jge
sub
loope
outsl
repz
pusha
mov
hlt
in
push
mov
aam
lods
mov
ja
lcall
add
faddl
into
sub
sbb
sbb
cmp
and
mov
push
in
sub
sbb
dec
test
roll
jl
xor
sbb
mov
xchg
add
mov
aaa
and
push
cmpsl
out
jle
or
jne
jmp
sbb
les
jo
dec
aad
test
mov
jp
push
sbb
fdivrs
pop
inc
cmp
add
add
imul
scas
inc
mov
ret
cmc
mov
inc
fucomp
mov
fnsave
adc
fmul
push
pop
aam
or
orb
mov
dec
in
mov
cmp
pop
cli
inc
or
aam
lock
mov
lock
outsb
push
pop
mov
int3
sti
mov
push
out
mov
push
or
cmp
push
dec
mov
sbbl
mov
pop
xlat
arpl
int
cli
outsl
jnp
cmp
pusha
sub
sbb
add
mov
cmp
enter
mov
mov
icebp
sub
cs
loop
pop
aam
repnz
adc
stos
adc
sti
imul
outsl
loop
lock
test
ret
or
inc
fistps
ret
or
or
fcmove
push
jae
leave
ret
xlat
pop
and
sti
sbb
jge
repnz
push
cmp
jle
add
lret
mov
mov
mov
inc
gs
loope
add
iret
sub
cmp
rol
xchg
jecxz
sub
sbb
mov
mov
add
mov
cmp
jl
rorl
iret
in
adc
bound
rcrb
mov
mov
fwait
cltd
ja
mov
jge
push
scas
cwtl
jne
out
or
enter
push
shrl
push
cltd
fcoms
inc
add
sbbb
mov
push
pop
push
dec
xchg
jp
mov
leave
testb
jns
popf
orl
movsb
sub
xor
add
jne
xchg
xor
scas
js
pusha
xor
enter
call
outsl
mov
sarb
push
xor
xchg
cld
push
das
les
lock
in
and
sub
mov
rol
jle
out
popa
jnp
ret
xor
jbe
in
insb
fists
mov
push
inc
fdivp
mov
loop
inc
div
ds
sub
stos
into
push
mov
mov
jae
sbb
xchg
sbb
mov
rorb
adc
ret
out
dec
xchg
sbb
leave
adc
push
mov
cli
cmp
imul
and
aam
mov
sbb
popf
js
or
repnz
in
outsb
mov
dec
adc
popa
mov
push
gs
xorb
cmp
mov
dec
cmpsl
sbb
popf
cs
rcrl
jl
mov
pop
scas
jmp
xlat
jmp
lea
pushf
testb
xchg
leave
sub
hlt
xchg
sub
mov
or
xorl
cmpsl
setb
jae
inc
pop
mov
or
das
mov
call
push
icebp
mov
lcall
addr16
push
aam
aaa
enter
cmp
cs
adc
mov
sarl
cli
cmp
ljmp
insb
addl
cwtl
pop
clc
test
pop
lods
cs
cmp
pop
repz
mov
adc
mov
xor
pop
test
test
jne
mov
out
addr16
mov
dec
push
in
sahf
out
push
rolb
mov
mov
cwtl
sub
inc
ret
push
jg
lock
dec
insb
js
xchg
dec
and
xchg
xchg
test
mov
xor
imull
sub
mov
leave
out
push
sbb
push
xchg
outsb
cmpl
cmc
and
and
push
inc
mov
or
stos
xchg
imul
outsl
xchg
stc
dec
jno
add
les
push
insb
or
xchg
xchg
lahf
xor
rol
xor
psrad
test
into
mov
cmp
fidivs
cmp
pop
scas
rcr
pop
iret
outsl
pop
adc
sub
xor
mov
xorl
scas
mov
in
xlat
pop
inc
jle
fwait
outsl
jbe
out
mov
jbe
cmc
jl
push
mov
mov
or
ss
xchg
inc
ficoms
and
push
imul
cmc
xor
dec
fwait
push
add
push
dec
and
fdivs
test
pushf
push
xchg
xchg
cli
xchg
mov
sbb
data16
or
mov
pop
vpmacswd
sbb
xlat
int
pop
repz
inc
fwait
lds
iret
sbb
mov
mov
jle
xchg
push
jecxz
addl
cltd
xchg
out
test
inc
stos
adc
test
dec
or
imul
fistl
push
mov
push
add
jb
sbb
xor
ljmp
fidivs
fsubl
adc
bound
pop
or
push
xchg
std
mov
incl
ret
inc
fcmovne
xlat
clc
adcb
sar
xor
push
loop
dec
aas
std
inc
in
lcall
jecxz
fildl
xchg
cmpsl
jbe
outsb
jl
and
popf
sbb
xor
and
cltd
and
out
and
pop
jmp
pop
icebp
cs
and
xor
xlat
add
jo
mov
lret
sub
inc
xlat
scas
dec
mov
xchg
rol
pop
loope
test
jp
inc
pushf
stc
pop
mov
xchg
adc
mov
xor
icebp
mov
inc
xor
sbb
orl
mulb
jns
cmp
mov
cltd
or
aam
dec
jg
hlt
cmp
push
out
pusha
jnp
mov
sti
icebp
addr16
fidivrl
jecxz
or
pop
sti
xor
std
push
mov
shr
lds
ja
sub
out
out
and
rclb
and
js
mov
fbld
mov
jmp
add
mov
lret
loop
divb
push
in
lds
cmc
repnz
xor
sub
es
adc
add
add
pop
sub
and
cli
xchg
imul
sbb
xor
xchg
fcompl
add
rcrb
movsl
pop
mov
loope
rol
jg
repnz
sbb
adc
push
jae
aad
call
ret
das
mov
sbb
test
aaa
pop
xchg
sub
xchg
aas
and
xchg
or
rcl
add
xchg
mov
fs
and
add
fsubs
bound
mov
xor
jno
mov
xlat
sub
or
add
in
aaa
fdivl
mov
shlb
add
out
or
stos
iret
sbb
jne
dec
add
pop
loop
pushf
jge
push
or
fbstp
jecxz,pn
and
add
mov
dec
out
sub
pop
std
cmc
mov
arpl
mov
sub
add
mov
sbb
dec
pop
xchg
shll
test
push
aam
jns
push
icebp
mov
mov
xchg
and
test
idivl
lea
push
test
dec
in
adc
mov
mov
dec
scas
inc
jo
jns
dec
pop
xor
int3
loop
mov
ljmp
pop
xchg
cmp
mov
into
es
push
sub
and
push
mov
mov
inc
scas
loope
add
mov
scas
ret
jmp
push
push
mov
push
mov
jmp
addr16
mov
adc
movsl
popa
mov
mov
xchg
sarb
or
jo
mov
dec
mov
imul
push
add
pop
dec
pop
push
js
mov
jecxz
negb
cld
pop
call
jge
ljmp
int3
xlat
icebp
into
outsb
nop
out
push
and
ret
mov
addr16
jb
jo
test
jle
mov
and
rolb
dec
ja
cwtl
pusha
out
mov
dec
jb
in
add
sbb
jbe
iret
xor
dec
sbb
sbbb
outsl
icebp
mov
data16
xorl
fdivrs
mov
out
sar
sbb
ss
cmp
inc
xchg
xchg
inc
cmp
mov
mov
imul
mov
xchg
fiaddl
xchg
iret
data16
mov
xchg
mov
jle
pusha
out
ja
subl
xor
jmp
add
in
add
je
xor
and
leave
mov
inc
loope
in
andl
leave
xchg
rorl
scas
nop
cltd
and
or
orb
pop
mov
inc
adc
stos
add
dec
daa
out
pop
hlt
test
repnz
xchg
adc
and
sub
cmp
das
js
adc
fstl
lock
jecxz
cmpl
jne
mull
sbb
lea
fldcw
mov
dec
add
arpl
push
xor
popf
push
or
fsubrs
sub
je
scas
cmc
mov
popf
mov
jmp
insl
add
or
les
mov
rcrb
ljmp
mov
adc
adc
jg
bound
cltd
sbb
jp
ficoms
pop
mov
xchg
mov
mov
xchg
cmc
inc
push
mov
pop
cwtl
pop
cmp
gs
jne
push
lret
mov
outsl
jecxz
in
rol
jmp
shld
xor
imul
xchg
lods
or
hlt
xchg
xor
and
ljmp
paddd
and
sbb
xchg
dec
mov
adc
popf
leave
ss
cwtl
outsb
sbb
mov
mov
mov
inc
sub
out
ds
sub
sarb
xlat
outsl
pop
cmp
sbbb
jmp
jns
mov
mov
jmp
out
rcrl
or
sarl
cmp
clc
pushf
sub
xor
mov
mov
cli
pop
inc
and
xor
and
cmp
enter
addb
mulb
xor
inc
ret
decb
pop
pop
xchg
inc
dec
shlb
in
outsb
repnz
aam
test
pop
adc
gs
mov
pop
arpl
dec
inc
xor
cmpsl
push
mov
popf
mov
mov
movsb
add
jp
outsb
add
leave
mov
xor
push
rcr
dec
stos
fs
mulb
les
inc
push
shll
adc
or
cmp
sbb
sbb
push
sub
inc
push
cmc
mov
sub
add
scas
jg
loopne
ljmp
pop
call
aam
test
in
in
pop
hlt
roll
dec
cltd
jecxz
push
sub
sbb
inc
pop
out
addr16
jb
xor
out
cmp
pop
or
and
out
dec
test
cmp
repnz
frstor
sbb
or
scas
push
in
lea
or
xchg
ds
jecxz
das
sbb
xchg
lods
mov
ja
mov
test
cmp
jno,pn
adc
cmp
fcomps
xor
push
mov
add
jno
ja
xor
cwtl
mov
lcall
jbe
pop
inc
lods
inc
or
inc
push
push
jae
jns
in
inc
and
scas
arpl
mov
push
shll
lods
mov
xchg
arpl
mov
xchg
repz
add
push
nop
inc
pop
lcall
test
aaa
and
jne
mov
mov
jge
adc
lods
sbb
fidivrs
inc
popa
mov
imul
mov
ja
jbe
pop
hlt
xor
leave
adc
shl
xor
dec
adc
and
push
jl
inc
or
cmp
mov
out
aam
outsb
add
cmc
mov
add
sbb
mov
daa
lcall
dec
add
in
sub
dec
dec
mov
loop
mov
sub
call
dec
sbb
enter
int3
jo
nop
xchg
add
sub
xlat
push
mov
mov
pop
call
or
call
gs
inc
inc
or
mov
sbb
push
xchg
add
idivl
std
mov
mov
sub
shlb
mov
sahf
fidivrs
mov
sar
out
and
xlat
ja
in
addl
xchg
mov
or
pushf
mov
pop
or
mov
sarl
pop
and
cmpsb
aad
add
lret
test
mov
inc
das
xor
cmpsb
ds
mov
popf
push
mov
xor
jnp
dec
xchg
scas
inc
pop
mov
leave
jg
jle
cmp
fsts
loope
int3
cli
pop
lods
mov
xlat
adc
inc
add
xchg
sarl
pusha
lea
or
popf
jmp
mov
xchg
xchg
and
mov
xchg
pop
add
xlat
sahf
sbb
cmp
sub
sbb
aad
sub
fists
sbb
xchg
pop
cmpsb
repnz
cwtl
and
or
cmp
adc
ret
mov
inc
pop
inc
shl
xor
inc
arpl
cwtl
popa
push
push
or
jp
sbb
adc
push
lods
xor
adc
sbbl
and
lahf
nop
mov
mov
stc
pop
leave
pushf
jg
gs
jbe
mov
dec
out
insl
or
movsb
mov
jecxz
add
cmp
pop
xor
pop
and
cmp
pop
pop
mov
rclb
jae
cld
jl
adc
std
dec
mov
mov
dec
pushf
les
add
je
or
cld
es
jo
add
mov
cwtl
gs
out
iret
ja
test
sub
in
or
or
cwtl
lahf
mov
jge
inc
sbb
fidivs
cmp
mov
outsb
xchg
xchg
mov
out
enter
inc
and
lahf
fucomi
add
movsl
mov
xor
test
xchg
and
inc
dec
mov
pop
outsl
and
lahf
add
js
inc
int3
jae
stc
or
dec
movsl
adc
or
or
adc
popf
cmp
adc
xor
cs
aas
movsl
shr
add
mov
and
pop
cmp
xchg
and
insb
xor
aad
xchg
xor
mov
lods
jo
push
adc
dec
out
push
js
lods
loopne
xchg
sub
mov
mov
mov
adc
bound
nop
cmovl
nop
insl
add
push
loopne
cmpsb
ja
xor
bound
xor
mov
test
xchg
push
adc
aaa
aam
cld
jmp
dec
push
in
jnp
lods
mov
mov
mov
int
dec
mov
adc
add
insl
out
fimuls
adc
or
lods
in
testb
inc
inc
int
inc
mov
sbb
dec
pop
adc
mov
dec
fs
dec
in
and
imul
nop
jle
in
imul
insl
pop
movsb
dec
addr16
in
and
add
mov
and
mov
iret
out
lods
xchg
mov
iret
bound
xor
cmpb
mov
xchg
jl
cmp
jl
jg
cli
push
ja
scas
ret
popa
fdivrl
add
dec
subl
dec
enter
jp
cmp
and
cmp
mov
add
mov
iret
dec
mov
mov
pop
mov
lods
shlb
xchg
imull
je
push
cmpsb
push
mov
pop
or
in
fisttps
push
mov
xchg
outsb
jle
les
inc
dec
mov
outsb
push
mov
sbb
ds
popf
push
rcrl
xor
js
jo
push
xchg
jnp
aas
addr16
imul
les
push
aam
pop
pop
leave
sbb
pop
cmp
data16
out
lea
cmp
jo
cld
push
cmp
out
lods
rol
sbb
push
inc
pop
ret
dec
clc
popf
out
inc
lret
mov
repnz
or
sub
iret
push
or
scas
leave
test
dec
inc
ret
push
icebp
sti
fldcw
xchg
sub
push
imul
movsbl
insl
mov
int
dec
mov
cmp
cmp
subl
mov
lret
cmc
aam
add
mov
dec
add
orb
push
repnz
stc
ss
lret
int3
and
out
jne
testl
mov
mov
mov
aad
ljmp
insb
scas
aad
jno
jae
adc
sbb
ja
mov
fnstcw
sbb
dec
ljmp
mov
imul
xor
jp
pop
mov
and
push
int3
aas
ds
fwait
push
mov
mov
pop
fidivrs
and
mov
cmp
mov
fistpll
cmp
xchg
pop
lahf
jb
mov
icebp
outsl
adcl
adc
outsl
cmpsb
out
cmp
stos
adc
movsb
repnz
pop
dec
push
out
popa
inc
out
adc
lods
cmp
pop
sbb
icebp
push
push
das
pop
mov
imul
shrl
dec
lock
shlb
rorb
sahf
imul
in
xor
sub
push
icebp
iret
dec
je
sahf
movsb
add
jge
add
lds
pop
dec
mov
loop
and
and
sub
pushf
enter
in
stc
aas
negb
push
adc
or
sar
popf
pop
mov
outsl
or
out
push
mov
pop
xchg
movsl
mov
adc
xchg
and
mov
ret
dec
hlt
sbb
push
test
mov
cmpsb
jecxz
mov
iret
sbb
sbb
ret
lcall
xchg
js
adc
inc
and
adc
fldenv
jmp
mov
ja
rcrb
popa
pop
dec
jns
mov
enter
jl
out
fdivrl
jo
push
push
xlat
cmc
sbb
xchg
and
dec
adc
adc
aaa
stc
mov
dec
fwait
cmp
shll
lea
xchg
je
mov
xor
subl
push
ret
loop
sbb
lods
bound
xchg
adc
das
popf
xchg
and
cmpsb
ret
pop
test
mov
cmp
pop
jge
int
mov
pop
loopne
inc
dec
ret
sub
sbb
sbb
dec
or
adc
push
mov
int
ret
insb
dec
loop
sub
je
jne
leave
in
add
sub
push
jo
sub
or
mov
int3
lret
mov
clc
pop
aad
dec
inc
cmpsb
sbb
pop
movzbl
or
jp
rcl
dec
jg
ret
mov
movsb
fdivs
into
daa
fdivs
mov
add
sbb
loopne
add
int3
movsb
gs
dec
arpl
scas
inc
insb
call
cltd
mov
push
jge
xchg
sbb
loop
sub
loopne
push
adc
pop
insb
jp
adc
imul
and
cltd
mov
pop
xor
imul
nopl
or
loope
xchg
sub
sub
sub
add
sub
adc
stos
faddl
lock
movsl
adc
ror
mov
sbb
leave
and
jg
pop
xchg
pop
pusha
stos
xor
add
mov
es
xchg
clc
test
push
out
das
dec
fimuls
dec
and
pop
pop
cmc
push
jecxz
aas
sbb
jnp
mov
sub
sbb
and
push
or
lods
cmp
adc
pop
les
pop
sub
and
push
movsl
mov
fwait
gs
and
and
int3
lock
mov
ret
mov
loopne
sub
imulb
enter
xor
xor
jae
mov
icebp
sbb
lcall
adc
fwait
ret
arpl
dec
mov
xor
pop
adc
in
andl
gs
ja
and
mov
sbb
sub
aas
mov
in
sbb
xchg
lahf
cmp
add
dec
sbb
push
xor
sub
jne
xor
xchg
sbb
lods
fdivs
adc
enter
loop
loopne
sub
jp
addb
in
dec
shrl
pop
frstor
dec
push
jne
inc
sbb
add
sub
out
popf
shll
adc
mov
sarl
xchg
sbb
xchg
cltd
decl
push
xor
adc
mov
push
fsubp
jns
sbb
outsl
mov
inc
inc
popf
adcb
in
insl
pop
jbe
push
mov
pop
ss
xchg
jp
inc
cltd
or
arpl
clc
mov
ss
inc
add
pop
je
mulb
lret
js
in
cmpb
push
pop
lcall
and
sbb
imul
rcrl
in
loop
lds
inc
push
divb
sahf
mov
sub
nop
mov
or
stos
or
cmpsl
mov
and
dec
int3
cmp
cmp
cmpb
sub
popa
cmp
pop
cmp
push
inc
movsb
adc
and
jns
imul
mov
push
and
orb
scas
inc
sbb
cli
dec
pop
into
pop
jp
add
loope
scas
das
imul
dec
sti
mov
inc
push
xor
inc
cltd
jnp
loope
xor
xchg
xchg
stos
sub
daa
add
mov
xor
adc
aad
in
cmp
fildl
sbb
mov
cmp
pop
pop
add
pushf
dec
fwait
dec
push
adcl
inc
push
cli
in
mov
jno
sub
fs
enter
adc
sub
fsubs
aad
scas
inc
dec
mov
inc
adc
imul
imul
xor
dec
fists
push
neg
pop
data16
mov
dec
test
hlt
mov
enter
sub
xchg
sbb
xlat
push
jmp
push
shl
dec
dec
or
jecxz
jg
xchg
sbb
in
adcb
pop
repnz
mov
jns
adcb
adcl
into
movsl
lock
ljmp
or
daa
test
enter
mov
sub
imul
jb
jge
or
andb
cmpsl
or
sub
fwait
testb
xchg
fdivr
xchg
sub
sbb
mov
inc
cli
xchg
inc
stc
push
jb
mov
mov
xchg
cld
xlat
adc
cmp
mov
std
test
jno
add
sahf
jmp
hlt
xor
mov
xor
push
ljmp
jb
mov
shlb
add
dec
test
cmp
push
ss
scas
jns
loopne
and
je
and
mov
mov
pop
inc
jp
mov
cli
leave
mov
add
out
dec
movsb
xchg
test
xchg
mov
sbbl
pushf
mov
pop
dec
mov
scas
cmc
cs
cmp
fwait
test
sbb
sahf
scas
jl
dec
scas
mov
aam
and
inc
cmp
xchg
in
or
push
dec
push
out
cwtl
sub
les
adc
jae
sub
pusha
or
push
popf
and
ljmp
jmp
push
in
fisubl
pop
xchg
sti
jae
bound
cltd
push
cmp
rolb
sbb
rcrl
aaa
mov
fidivrl
mov
jmp
out
pop
dec
cmp
mov
jmp
mov
stos
and
push
scas
test
jne
dec
sbb
add
pop
add
and
popa
shrl
push
dec
jno
inc
pop
cmp
mov
xchg
mov
jp
mov
adc
ror
popa
add
test
dec
lcall
and
xchg
mov
orb
cmpsb
std
xor
mov
pop
scas
es
and
mov
ret
pop
jg
mov
and
dec
sub
bnd
sub
cmovge
sbb
imul
sbb
or
popf
stos
push
jae
xchg
sbb
inc
rclb
fistl
push
adc
fcomps
pop
push
scas
pop
mov
sti
mov
mov
test
xchg
mov
and
test
cmp
jecxz
jle
enter
sbb
shrb
or
push
mov
adc
in
scas
hlt
cltd
int
sbb
aam
in
cld
sub
movups
lods
cmp
incl
iret
jae
dec
add
sbb
cwtl
mov
mov
shlb
imul
add
jne
mov
dec
xchg
inc
fdiv
jno
or
fldenv
mov
das
out
pushf
insb
xchg
xor
xchg
lahf
jmp
dec
mov
aad
imul
in
push
pop
je
test
or
sbb
sub
push
rcrb
fistpl
lods
test
push
dec
jo
fstpt
arpl
leave
in
xchg
push
dec
cwtl
daa
insl
negl
ljmp
xor
inc
dec
xor
lret
mov
cld
shrl
cmpsb
test
aad
dec
cmpsl
subl
sti
push
lret
in
cs
lods
push
addr16
push
pop
mov
and
jl
dec
and
sub
mov
stos
into
fsubl
test
jge
sub
shr
sti
pop
cld
xlat
outsb
out
dec
push
sub
leave
outsb
loopne
xchg
icebp
dec
test
addr16
push
outsl
mov
hlt
out
jge
fwait
bound
sbb
and
enter
mov
clc
out
aas
imul
push
cmc
mov
lcall
cwtl
mov
bound
dec
fst
icebp
add
movsb
xlat
mov
out
ljmp
out
cmp
iret
scas
xchg
inc
mov
ret
cli
call
jecxz
rcrb
xor
cli
sbb
and
mov
sarl
jg
out
aad
cmp
add
jg,pn
mov
jp
fnsave
fsubrs
pop
or
cmp
push
cmc
jb
nop
pop
push
sbb
and
cmp
fs
push
lods
test
adc
aas
cmpsb
xor
int3
adc
dec
pop
cmp
push
fucomi
cmp
enter
sahf
xor
aaa
xchg
xchg
xchg
jg
int3
mov
dec
test
jns
add
adc
mov
aaa
mov
addr16
fbld
iret
mov
mov
jb
sub
cmp
ret
mov
mov
dec
loope
push
iret
loope
fsts
ss
push
push
idivl
and
dec
add
add
dec
pop
loopne
pop
ret
sub
popa
xor
sub
push
aaa
das
outsb
out
and
inc
mov
xchg
inc
fs
mov
inc
xor
mov
xlat
je
rcl
lcall
stc
adc
add
sub
pop
iret
inc
aaa
ss
je
dec
pop
dec
fildl
arpl
repz
out
mov
shrl
inc
ds
sbb
pushf
outsb
jbe
aas
push
pop
ljmp
or
inc
cmp
adc
mov
out
mov
and
and
mov
call
popl
mov
out
xchg
mov
push
dec
nop
sbb
pop
inc
cmp
xor
or
jno
ret
xchg
sub
ret
cmp
adc
movsb
mov
in
jg
jnp
insl
push
cwtl
cmp
jae
adc
enter
xor
cwtl
arpl
and
cmpsl
lea
push
test
popa
cmp
rclb
les
mov
jne
xlat
outsb
imul
hlt
outsl
push
nop
daa
mov
push
xor
and
int3
cmp
cmp
mov
in
jp
mov
sarl
xor
inc
sbb
inc
push
xor
leave
xchg
outsb
mov
aam
ss
sub
test
jne
pop
fldenv
les
ret
push
sarl
xchg
pop
adc
out
sub
mov
jb
cwtl
xchg
dec
dec
fnstenv
pop
iret
push
dec
popa
sub
sbbl
cld
aam
neg
sbb
fisttpll
data16
inc
sti
mov
in
mov
dec
jp
test
das
int
imul
xchg
pop
mov
aas
aad
fsubrl
pop
das
xchg
int
je
xor
push
mov
aad
aaa
sbb
ret
jle
imulb
cmp
sbb
or
fcomi
pop
jmp
sbb
push
shrl
outsb
inc
aam
push
gs
mov
jecxz
push
fmuls
sbb
negl
cmp
xor
test
add
dec
out
xchg
pop
and
movsb
mov
xchg
sub
jo
mov
pop
mov
mov
in
push
mov
cmc
push
roll
inc
aam
jb
xlat
cmp
push
pop
sub
movsl
cmp
dec
push
xchg
aam
repnz
dec
negb
enter
mov
pop
fdivrl
movsb
out
rorb
xchg
xchg
rorb
loop
adc
nop
and
xchg
or
cmc
lods
xor
rcll
jae
pushf
scas
jns
or
dec
pop
push
sbb
xor
cli
movsl
mov
insb
jl
and
and
clc
stc
popf
ss
lcall
and
popf
cltd
adcb
call
in
xchg
outsl
jnp
mov
jmp
inc
push
subl
adc
outsl
add
and
je
mov
push
push
mov
pop
test
loope
xor
sub
xchg
stc
gs
dec
adc
call
in
inc
jecxz
fsubp
das
inc
push
inc
and
dec
inc
or
jmp
rol
aam
mov
leave
mov
push
inc
sbb
mov
js
xchg
push
xlat
in
mov
sahf
movsb
add
repz
loope
mov
shlb
fisubl
iret
lods
lahf
add
jae
aaa
cmp
jne
hlt
insl
push
push
out
xchg
mov
inc
mov
sbb
pop
outsb
notb
out
xor
insb
sbb
in
out
pop
ss
ret
lods
pusha
cmpsb
xor
addr16
cmovge
out
xchg
sub
in
xchg
xor
cmp
out
imul
sub
jnp
or
popa
pop
xchg
xchg
xlat
mov
or
add
daa
rcrl
test
mov
xchg
roll
add
lahf
cmpsl
mov
lcall
stc
ds
cmp
mov
xchg
xor
out
scas
sbb
jp
jno
add
sub
lret
xor
mov
jl
add
xchg
jp
test
cmpsl
add
mov
aas
xor
negl
lods
fbld
push
fidivs
and
mov
lret
sub
int
iret
cmp
into
idiv
or
push
stos
push
les
bound
rcrl
repnz
test
xchg
loope
aam
jmp
dec
xchg
sahf
pop
or
pop
cmc
or
leave
pop
test
mov
fs
fiaddl
nop
lock
lret
mov
vpinsrw
hlt
or
cmc
lods
push
sub
or
or
outsb
arpl
ss
pop
nop
xchg
cmp
push
push
mov
xlat
xor
sub
dec
xlat
cmpsb
push
nop
je
iret
adc
mov
jge
lds
xchg
xchg
or
jnp
sahf
pop
jne
dec
xor
dec
nop
dec
rolb
sub
sub
mov
out
inc
dec
pop
push
inc
incl
loope
xchg
mov
add
sahf
roll
jmp
inc
push
mov
adc
loopne
pop
or
mov
sub
or
jl
imul
xor
lock
mov
xacquire
mov
call
fisubrl
mov
lret
std
xchg
inc
test
mov
lret
xchg
sub
dec
div
or
add
cmp
cwtl
pop
cmp
movsl
test
test
pop
push
pusha
movl
pop
adc
and
xor
ret
jnp
loopne
push
pop
dec
mov
mov
fmuls
xchg
push
push
pusha
or
movb
jl
push
pushf
push
dec
cwtl
test
add
dec
mov
xchg
movsb
sub
int
adc
mov
cmp
dec
es
xchg
dec
sbb
outsl
jmp
xchg
jl
js
das
adc
mov
inc
test
or
loope
cmp
pusha
nop
scas
dec
movsb
mov
and
in
hlt
push
in
popf
dec
jmp
xor
cmp
test
mov
sub
sub
dec
xchg
call
pusha
push
sbbb
or
mov
mov
inc
fimuls
icebp
cmp
sub
mov
xor
push
jmp
dec
ss
mov
movsl
cmp
sahf
das
dec
loope
repz
sub
mov
cli
adc
cmpsb
pop
test
mov
jp
mov
dec
adc
or
jnp
shrb
call
arpl
ffree
push
mov
xor
sbbb
mov
lret
sub
out
inc
les
xchg
ret
into
pushf
xor
dec
sti
fs
sbb
ret
and
or
daa
data16
test
jge
rorb
cmc
adc
addr16
xchg
sub
push
cmp
pusha
std
popa
sub
stos
sbbl
dec
cmp
in
in
call
push
fwait
test
pop
subl
jle
inc
sub
ffree
jl
aaa
mov
orb
cmp
aad
dec
and
sbb
sarl
pop
into
add
jo
in
insl
pop
rol
sbb
inc
mov
icebp
scas
mov
scas
mov
adc
paddsb
cmp
jl
insl
scas
mov
sarb
xlat
mov
lds
test
arpl
test
xchg
or
and
add
jne
cs
test
jecxz
adc
push
or
outsl
pop
mov
sbb
insb
outsb
jmp
cs
lahf
arpl
paddb
and
mov
mov
mov
mov
jnp
push
pusha
mov
into
xor
out
and
push
push
adc
loop
jno
js
xchg
sbb
fs
dec
adc
pop
rclb
or
push
addr16
dec
pop
adc
out
or
mov
inc
xchg
mov
adc
les
test
rol
mov
aad
push
mov
sbb
sub
push
pop
jecxz
pop
lcall
outsb
xabort
repz
ficompl
mov
imul
dec
and
imul
cmp
lods
pop
adc
adc
in
dec
ret
aas
jmp
push
roll
iret
cli
enter
dec
in
pop
push
adc
std
outsb
loope
dec
mov
sar
push
arpl
xchg
xchg
or
scas
cmpsl
test
fadds
movsl
cs
leave
in
mov
movsl
scas
jae
test
call
jmp
sbb
inc
aas
popa
jno
rcr
int
dec
add
jbe
jns
fstl
pop
jns
cmp
fs
cld
inc
push
add
pusha
ss
fnsave
imul
repz
pop
xchg
inc
adc
add
mov
xchg
sbb
ds
sbb
xor
shlb
adc
std
lcall
in
pop
xor
push
movsb
inc
lret
push
xchg
add
xor
addr16
adc
imul
jne
xchg
cs
inc
stc
je
sbb
insb
pop
in
dec
and
cmp
mov
mov
or
and
cli
mov
or
setns
out
xchg
cmc
xchg
shlb
jp
test
mov
lret
mov
jl
or
xor
iret
xlat
popa
mulb
addr16
mov
jnp
jle
pop
sbb
lods
int3
mov
adc
push
aas
sbb
dec
xchg
dec
out
inc
arpl
xchg
bound
rclb
sub
clc
das
inc
scas
xor
cmpl
push
test
jnp
cmpsb
mov
pop
dec
add
mov
inc
outsb
scas
pop
mov
dec
in
repz
aas
stos
sub
pop
ffreep
fdiv
add
jg
shrl
rolb
jecxz
cmovle
mov
jbe
xor
js
orb
adc
scas
xchg
addr16
fcompl
shr
mov
mov
insb
mov
mulb
xor
adc
mov
sahf
addr16
jno
xor
iret
push
ds
inc
fdivrl
aam
adc
pop
cmp
pop
out
inc
cli
lods
leave
push
in
in
push
rorb
ret
dec
mov
push
loopne
ss
imul
mov
xor
pop
xchg
mov
push
inc
fistps
lcall
sub
push
movsl
clc
pop
mov
pop
loope
pusha
jbe
out
jno
sti
adc
clc
mov
dec
xor
cmc
pusha
xchg
add
push
adc
pop
xchg
pop
add
push
stos
xor
push
bound
and
iret
adc
repnz
rol
lahf
sub
aad
add
mov
mov
in
clc
xchg
sbb
mov
sub
mov
mov
leave
sub
xchg
push
insb
les
add
sub
jb
mov
int3
pop
out
add
psubw
jns
sbb
cltd
das
adc
inc
gs
mov
and
stos
sub
icebp
mov
pop
lea
inc
stc
xchg
mov
mov
or
mov
fucomi
jbe
fsubs
mov
cmpb
jne
dec
sub
jp
xor
mov
outsb
das
dec
lahf
roll
inc
or
and
jae
or
xchg
dec
sub
rcll
popl
push
jl
sub
enter
mov
arpl
test
out
mov
push
sub
dec
stos
jbe
jne
push
mov
outsl
insl
mov
ret
repnz
or
xor
ds
aaa
mov
jmp
pop
cmp
pop
mov
adc
mov
scas
add
insb
or
decl
inc
push
popl
out
sbbl
mov
outsl
xor
imul
jae
pop
add
js
add
test
mov
sbb
dec
adc
insl
pop
mov
test
mov
inc
push
sub
mov
pop
sahf
imul
xor
mov
movsb
mov
jmp
jmp
repnz
sub
add
xor
test
popf
push
adc
cmp
push
mov
dec
pop
lea
push
jne
jo
mov
cwtl
int
xor
fs
movsl
inc
cwtl
loop
nop
push
sub
pop
stos
push
push
sbb
dec
sahf
dec
aam
call
ja
sahf
jmp
cwtl
xor
jmp
popf
jb
inc
imull
scas
inc
dec
test
pop
in
jns
push
sub
push
divl
jno
bound
loop
jo
dec
fwait
rorb
lret
inc
or
pop
or
pusha
mov
and
sbb
adc
xchg
jb
push
and
test
jl
jmp
inc
cmp
mov
mov
int
jmp
add
jo
std
scas
inc
adc
aaa
adc
jle
rclb
mov
xor
fsubrp
daa
push
cmp
xcrypt-ecb
cmpsl
dec
pop
dec
inc
movsb
lret
outsl
dec
gs
jnp
fsubrs
lea
cmp
repz
and
push
adc
lock
sbb
lock
fisubs
mov
jecxz
rcrl
sub
ret
adc
popf
sbb
bound
stos
aad
push
in
test
cli
call
es
inc
push
fldcw
sub
ljmp
lcall
cli
xchg
ss
cmpsb
sbb
dec
add
xchg
or
mov
imul
or
arpl
sub
es
sbb
cmp
mov
notl
mov
es
test
xchg
ret
jmp
sub
jl
hlt
dec
cmp
jp
push
xor
insb
push
pop
sub
lret
rclb
inc
lret
jno
push
loopne
xor
mov
mov
test
lods
pop
lret
daa
mov
test
mulb
into
pop
daa
ljmp
insb
sub
xor
or
push
cwtl
push
mov
nop
scas
dec
cmpsb
push
mov
and
and
mov
mov
jne
mov
fldcw
std
sbb
add
mov
outsl
inc
sbb
mov
nop
out
cmp
cmp
shll
pop
adc
mov
mov
mov
test
stos
fisubl
mov
dec
popa
mov
ja
sub
lahf
mov
jae
push
jmp
sbb
lea
adc
pop
xor
xor
mov
add
push
mov
inc
loope
mov
arpl
inc
cli
xor
jno
jp
xchg
imul
push
mov
test
lcall
gs
andl
lret
loop
js
ds
push
loop
jle
adc
push
cwtl
sub
pop
lahf
data16
jg
inc
dec
mov
jne
in
addr16
cltd
std
xchg
pop
inc
stc
shlb
mov
inc
mov
js
pop
mov
push
mov
out
aas
and
scas
sbb
aaa
mov
lock
inc
adc
mov
inc
adc
sahf
dec
cmpsb
sub
loopne
jg
pusha
add
fistpll
mov
das
jmp
repnz
call
cmp
mov
sti
adc
test
orb
adc
inc
add
mov
add
or
nop
movsb
mov
jmp
fcoms
mov
jg
sbb
stos
clc
adc
jb
pop
mov
flds
addb
js
aaa
mov
pop
jle
mov
lea
sub
adc
sub
aaa
mov
jae
sqrtps
inc
leave
orl
lea
mov
aas
ret
xchg
fsubrl
xchg
jmp
mov
jmp
jge
popf
jo
xchg
lret
mov
dec
pop
jnp
and
dec
mulb
mov
popf
test
push
jmp
fbstp
dec
dec
cmp
dec
arpl
add
mov
out
out
xchg
sbb
out
cmc
insb
std
ret
sub
leave
mov
loop
and
nop
shrb
add
jno
jae
cld
stos
clc
add
sub
push
xor
mov
jge
sub
rolb
mov
add
fcmovne
sbb
xlat
insl
call
or
out
faddl
or
data16
and
mov
jo
jecxz
push
xchg
sbb
xor
out
das
ficoms
enter
xchg
insb
movsl
cmpsl
mov
mov
fisubs
int
es
sbb
xchg
fwait
jnp
nop
imul
and
out
dec
push
inc
xchg
dec
xor
fisttps
jns
push
jecxz
outsl
adc
cmovae
aas
add
jno
popa
jbe
push
and
dec
fisubrl
pop
mov
lods
inc
and
jg
loope
shlb
xchg
cs
ja
xchg
sub
adc
in
dec
xchg
inc
xchg
mov
mov
add
jge
sbb
cmp
push
push
test
xchg
xchg
cmpsb
mov
lds
and
mov
dec
mov
jmp
jge
xchg
fs
mov
dec
inc
cltd
xor
sub
fsubrs
xchg
xchg
push
sbb
jb
push
idivb
fdivrs
das
pop
or
lock
xor
ja
sbb
sbb
adcl
aas
push
scas
inc
dec
dec
dec
mov
shl
daa
es
cmp
jp
in
pusha
fidivrl
xchg
orl
cli
pop
in
jmp
int3
pop
sub
out
adc
dec
mov
fsubr
sbb
pop
jle
cltd
scas
xor
addr16
imul
cwtl
imul
xchg
pop
ja
mov
in
daa
iret
adc
jne
mov
push
xor
xor
cmp
xchg
insl
pop
jbe
jecxz
insb
shl
jmp
jbe
sub
jg
or
enter
rorl
popa
cmpl
ds
dec
repz
push
cmpsb
shl
cmpsb
mov
sahf
push
add
aaa
cltd
add
inc
idivb
lea
pop
mov
std
arpl
cli
sub
inc
xchg
leave
jne
pusha
cmp
sbb
dec
call
cmp
stos
aas
in
les
aam
cmp
popf
out
iret
out
mov
mov
shl
lret
sarl
shr
and
gs
mov
loope
pop
sub
jne
jo
xchg
pop
out
gs
jle
push
lahf
or
mov
cwtl
fnstenv
xor
push
adc
ret
mov
push
out
scas
xchg
call
jg
or
frstor
daa
add
adcl
push
mov
fldl2e
mov
cmpsl
cmp
pop
test
pop
jecxz
fnsave
pop
dec
rcl
fwait
lock
cmp
mov
incb
les
jmp
leave
mov
movsl
lods
mov
mov
jmp
bnd
imul
fmuls
dec
dec
push
cmpsb
xchg
cmp
aad
gs
fstl
mov
jecxz
es
shl
movsb
inc
stos
sbb
leave
mov
filds
cwtl
rcrl
cs
testb
mov
sub
mov
ja
int3
mov
mov
xor
fildll
mov
mov
dec
fsubl
inc
xor
pop
fincstp
adc
cmp
lret
xchg
add
inc
mov
mov
push
mov
fs
loop
aad
push
incl
sub
sub
pop
ljmp
popf
jbe
es
jg
lods
mov
insb
add
nop
mov
fisubrl
int3
dec
clc
cmp
out
mov
xchg
icebp
pop
lock
js
jmp
jl
jmp
mov
fidivl
dec
push
mov
ffree
in
ret
mov
xor
or
cmp
cld
mov
pop
insb
xor
mov
adc
adc
push
std
int3
cmp
xchg
push
test
fcom
insb
or
shrl
jo
cmp
adcb
xchg
ljmp
xor
mov
aad
ljmp
fwait
mov
push
test
bound
adc
cmp
cs
lcall
jnp
in
push
pushf
sbb
jae
outsl
push
fldenv
lret
in
cwtl
je
add
arpl
sbb
lds
or
mov
xchg
xchg
fs
packuswb
pop
push
sbb
loop
push
adc
std
or
ss
inc
out
int
xchg
pop
ss
pop
xchg
mov
cmp
inc
shl
inc
out
lds
testl
sbb
enter
loopne
daa
cmp
mov
mov
dec
adc
clc
pop
push
ret
inc
fcmove
pop
repnz
xor
mov
out
mov
lea
pop
add
xchg
orl
adcl
out
inc
xlat
inc
pop
jae
and
xchg
mov
rol
add
sub
jns
pop
ds
push
or
lock
push
mov
push
sbb
mov
mov
jno
daa
lea
mov
add
stc
or
shrb
jl
push
scas
push
in
test
stos
jae
pop
lods
mov
fisubl
push
add
cld
fidivrl
jbe
mov
xchg
push
cmp
jno
scas
call
in
sahf
push
or
in
outsb
out
push
push
pusha
lds
sti
scas
mov
les
call
inc
jno
xor
fdivl
mov
sti
gs
cli
adc
leave
lods
mov
inc
js
cmp
mov
test
enter
pop
loope
pop
pop
fwait
xor
xchg
or
or
add
stc
pop
pop
and
sbb
ljmp
push
cmpsb
lods
mov
cmc
aaa
cs
rcl
dec
jecxz
ficoml
cmpsl
imul
or
dec
mov
scas
out
repnz
cmp
inc
bnd
mov
orl
jl
push
dec
pop
test
mov
popfw
or
popf
call
push
xor
mov
test
cld
jg
dec
clc
movsl
jge
push
sahf
adc
xor
pop
pop
sub
testb
sahf
cli
imul
add
js
cld
mov
mov
push
into
pop
inc
sbb
jo
mov
cltd
xchg
and
sbb
insl
iret
pop
push
lret
xlat
mov
stc
push
push
pop
scas
jno
mov
or
ret
hlt
adc
popf
lods
mov
sti
lods
mov
cli
xchg
inc
push
pop
ds
cwtl
add
sbb
jp
stc
mov
ret
jg
mov
fldenv
push
xchg
sub
jle
ja
sub
das
mov
jbe
pop
dec
icebp
lret
stos
sbb
addr16
cld
and
mov
xlat
pop
ljmp
mov
cwtl
mov
test
andl
mov
aaa
push
xor
sub
mov
xor
out
fnclex
jns
add
adcl
push
popf
sub
dec
loope
stc
dec
loop
clc
adc
bnd
mov
push
xor
sahf
imul
jecxz
and
sti
nop
ficoms
je
insb
hlt
cmp
sbb
lahf
and
adc
xor
and
nop
push
inc
or
jb
dec
insb
mov
nop
movswl
xlat
mov
in
push
inc
pop
and
push
mov
add
adc
stc
stc
jl
jno
iret
jle
inc
test
lock
push
jb
mov
xchg
mov
fldenv
push
jae
stos
or
push
and
jnp
popa
lahf
add
imul
test
cld
enter
aaa
pop
and
in
xchg
repnz
jp
pop
add
in
lds
adc
outsl
jno
setle
pop
cld
scas
lea
xchg
jb
std
xchg
fsubrs
in
dec
sbb
inc
lret
shll
xchg
repnz
push
mov
insb
add
jmp
imul
daa
je
adc
mov
fisubrs
adc
pop
adc
mov
mov
std
mov
xor
imul
xchg
lods
xchg
mov
arpl
inc
test
lea
xor
shrl
add
mov
das
insb
sbb
movsl
push
mov
xchg
and
push
arpl
orl
mov
mov
test
mov
jmp
sarb
jg
shrl
mov
mov
aam
stos
mov
aam
aad
outsl
dec
xchg
mov
pop
add
dec
ret
aad
movsb
cwtl
into
mov
push
out
test
leave
sarl
push
mov
std
sahf
lahf
sahf
out
inc
sub
jge
cs
push
lock
and
out
xchg
jmp
rol
xchg
cmp
inc
mov
jbe
xchg
inc
outsl
jge
les
mov
ret
add
mov
mov
sbb
sbb
adc
jb
xor
sti
fwait
jo
xchg
pop
xor
sub
or
push
jg
xchg
int3
dec
or
je
rclb
into
jne
out
fcompl
cwtl
or
add
push
mov
aaa
pop
out
or
add
lock
add
mov
mov
outsb
test
add
cmp
push
in
mov
sarb
add
movsb
std
or
fwait
or
jge
shrb
jae
sarl
sbb
sahf
add
ja
test
mov
inc
into
push
push
mov
pop
daa
dec
js
adc
movsl
cld
arpl
jmp
out
pop
sti
fwait
adc
xchg
popa
mov
ror
mov
cmp
fldt
or
popf
test
push
push
mov
sbb
push
mov
in
pop
add
clc
mov
fincstp
movsb
adc
jge
ret
ret
add
jecxz
or
mov
adc
mov
inc
mov
sbb
inc
inc
xor
je
xor
movsb
arpl
pop
mov
std
enter
mov
or
clc
testb
mov
insl
rcr
dec
mov
mov
dec
outsl
add
jg
xor
adc
push
adc
test
push
cld
loope
jmp
sub
mov
jne
jl
clc
cmp
dec
mov
jecxz
sbbl
ss
aad
nop
xchg
bound
dec
mov
in
mov
aas
fwait
xor
divl
cmp
jo
dec
stos
and
jge
dec
in
movsb
stos
mov
gs
cmovnp
mov
add
and
scas
xor
xchg
jecxz
adc
rolb
adc
sbb
xchg
push
repnz
jl
cld
dec
arpl
pop
sbb
pop
jg
sub
push
cmpsb
pop
dec
iret
fildl
test
js
fsin
or
mov
imul
cltd
pop
xchg
imul
fs
inc
push
repnz
lock
cli
adc
xor
xchg
inc
mov
jp
pop
ret
push
test
push
dec
or
rcrb
call
cmp
mov
fs
jne
mov
jne
gs
stos
inc
int3
lock
sub
mov
call
cld
cmp
sub
mov
inc
out
scas
and
pop
push
cld
lcall
jne
xchg
dec
add
add
popa
xor
out
test
push
insl
cmp
daa
mov
popf
testl
arpl
fs
sub
arpl
and
add
sub
inc
out
inc
outsb
mov
int
in
das
rol
das
sub
mov
push
jbe
inc
and
les
and
iret
push
push
and
mov
lods
adc
ds
mov
and
dec
push
mov
cmpsl
test
iret
adc
push
je
cmp
call
imul
xchg
xor
lods
fistpll
popf
pop
mov
mov
add
or
sbb
mov
sbb
sub
cmp
test
dec
cmp
inc
pop
mov
sub
gs
jbe
call
cmp
inc
jmp
jle
cwtl
push
aaa
stc
enter
bound
and
ret
mov
ficoms
mov
jl
int3
xor
jmp
dec
loopne
mov
or
dec
mov
and
pop
out
movsl
test
mov
repz
dec
sbb
mov
and
or
test
ret
repz
inc
and
int
xchg
inc
fcmovne
jmp
xlat
jbe
mov
es
jne
daa
push
and
cmp
mov
movsl
leave
sub
cli
test
mov
inc
popf
inc
add
inc
test
divb
adcb
inc
cwtl
xchg
std
mov
lods
add
push
or
sahf
sub
mov
inc
jg
cld
adc
lock
fsts
inc
lock
or
imul
push
inc
jbe
fs
vmcall
test
mov
xchg
mov
in
test
and
adc
sbb
dec
mov
push
aaa
push
lcall
cwtl
mov
popl
cmpsl
inc
mov
js
out
out
rorb
xchg
xchg
cmp
scas
xchg
pop
sbb
lret
mov
add
loop
jmp
call
mov
mov
xchg
sbb
push
out
or
movsl
dec
xchg
mov
gs
xchg
shlb
mov
adc
subl
xchg
inc
jno
cmp
jbe
imul
insl
push
xchg
push
call
cwtl
fisubrs
repz
sub
in
sti
dec
in
in
add
popf
stos
or
pusha
mov
sahf
or
sbb
cmp
push
lea
sub
push
sub
leave
pop
sahf
dec
jnp
lret
in
pop
jecxz
cmc
push
lods
inc
das
jo
mov
push
int3
mov
pop
mov
sar
insb
test
jp
popf
or
adc
jb
jns
mov
or
xor
sbb
xor
or
imul
in
jp
inc
push
jl
sbb
cmpsb
cmp
sub
xchg
mov
and
inc
push
lds
lret
mov
pop
cld
sbb
cmc
mov
push
xchg
sbb
cli
ret
add
add
fidivs
aam
into
mov
cli
addr16
and
imul
mov
xlat
fimuls
mov
pop
pop
test
pop
sti
mov
pusha
jp
pop
imul
add
jo
push
push
out
ret
adc
vcvtpd2dqy
add
add
cli
insl
push
xchg
into
xchg
or
movsl
and
add
mov
mov
mov
test
shll
add
loopne
bound
add
inc
mov
dec
jae
test
and
arpl
cmpsl
inc
xor
adc
inc
in
in
orl
dec
pop
out
push
or
mov
jnp
lret
in
stos
sbb
test
push
jae
sub
inc
outsl
imul
hlt
lahf
in
xchg
enter
jb
pop
add
jmp
iret
and
push
add
stos
adc
adc
add
cmpsb
mov
cmp
dec
sub
lods
addl
call
jns
mov
aad
repz
adc
adc
aad
adc
xor
pop
jne
xor
imul
out
js
mov
cli
xchg
rcll
daa
ret
jbe
push
xor
scas
cmpsl
sub
inc
pop
or
popf
cmp
xchg
jl
jmp
sbb
xchg
jle
notb
push
les
fdiv
cmp
add
dec
dec
adc
and
fs
jae
lea
int3
push
or
fbstp
sbb
shrl
jecxz
sub
adc
mov
notb
addr16
hlt
sbb
add
test
mov
mov
push
sbb
and
out
aad
int
xchg
incl
push
adc
push
insl
pop
out
inc
xor
mov
repz
mov
push
inc
popfw
adc
je
cmpsb
jecxz
adc
gs
pop
jnp
sahf
jg
jge
enter
loopne
dec
mov
movsl
stos
sbb
dec
xlat
jae
xor
bound
push
and
inc
mov
xchg
jb
leave
arpl
pop
dec
into
jp
jecxz
pusha
sub
cwtl
sub
pop
mov
mov
inc
pusha
ret
mov
in
fs
mov
ret
repnz
stc
out
aas
xor
lock
pop
fisttpll
stc
cmp
pop
cmp
cltd
das
int3
jno
mov
sbb
jg
adc
decb
xchg
xchg
mov
enter
jo
das
cmp
adc
fwait
push
das
mov
mov
test
test
inc
mov
push
outsl
pop
aad
sti
or
cmp
mov
mov
cld
and
int3
out
push
jo
lcall
lahf
mov
stos
aam
sbb
xchg
sub
into
jmp
mov
jge
bound
push
out
push
fdivrl
subb
adc
mov
fcomi
pop
in
adc
and
sti
inc
mov
dec
faddl
lret
arpl
pushf
scas
jns
inc
flds
pusha
adc
decb
adc
aad
jbe
jo
pop
cmp
mov
jne
or
and
frndint
mov
sub
sti
lret
lds
mov
call
xchg
lahf
dec
int
repz
loopne
lret
sti
xlat
dec
push
xchg
and
mov
push
mov
orb
cmp
fisttpl
lret
imul
jmp
enter
ja
dec
mov
mov
insb
mov
adc
aas
test
lds
dec
data16
xor
mov
jl
dec
cld
cmp
jno
and
int3
push
adc
cltd
inc
lcall
and
mov
testb
push
repz
divl
mulb
xor
push
data16
gs
cmp
mov
fs
cltd
nop
inc
std
cmp
sbb
xor
push
jmp
dec
and
pop
fdivrl
and
movsb
and
lods
adc
adc
add
and
imul
xchg
and
dec
out
insl
sub
mov
cmc
jecxz
push
inc
mov
cmp
std
out
dec
lahf
cwtl
push
loop
psrld
fimuls
clc
dec
or
push
mov
nop
leave
push
scas
out
jnp
mov
pop
cmp
xor
sbb
dec
jmp
sub
in
hlt
sarb
push
mov
shlb
xchg
inc
cmp
test
jae
fists
cwtl
push
out
ljmp
mov
mov
in
ljmp
std
sbb
jge
push
mov
daa
push
out
xchg
pop
dec
fildl
pop
hlt
notl
ficoms
stc
les
fildl
mov
sub
mov
shlb
dec
pop
lods
daa
jg
stos
and
cmpsl
ss
das
mov
mov
test
mov
mov
or
stc
loopne
lret
mov
int3
mov
jl
inc
out
sbbb
in
hlt
lret
das
mov
dec
mov
movsl
or
mov
mov
sub
inc
mov
xor
and
into
or
daa
mov
or
pop
add
ds
pop
ror
lret
sbb
inc
pop
cld
fidivs
and
scas
pop
cld
push
divl
stos
pushf
xor
jmp
loope
jo
sbb
pop
call
imul
and
push
dec
sti
mov
push
cli
and
pop
mov
push
icebp
lret
std
aam
jle
pop
daa
lds
dec
enter
es
add
mov
imul
pusha
mov
xchg
arpl
fs
sbb
sub
leave
jecxz
fs
xchg
insb
adc
fadd
lcall
jbe
and
mov
push
cmp
push
out
test
divb
cltd
pop
and
movsl
add
loope
imull
std
lds
stos
pop
imul
push
lds
and
xor
pop
mov
push
adc
push
pop
outsb
insb
popf
lcall
add
pop
popf
idivl
mov
scas
mov
mov
rolb
cmp
vpshlw
cltd
xchg
outsl
inc
jae
lea
out
inc
aad
cmp
push
mov
jns
jb
cmp
push
testl
push
data16
mov
adc
dec
mov
pop
cmpsb
movsl
scas
enter
xor
mov
or
cwtl
fbstp
inc
fnsave
inc
xchg
ss
jmp
or
outsl
out
test
shrb
ret
mov
out
inc
stc
jg
aaa
dec
mov
test
pop
addr16
ret
xchg
sbb
mov
fs
icebp
inc
insb
add
sub
jns
xlat
dec
in
pop
inc
std
pop
stos
jle
sbb
dec
lea
dec
sbb
loopne
pop
jp
mov
das
cmp
add
repnz
pusha
jae
jne
add
pop
rcl
insb
mov
sub
repz
pop
popf
int3
fmul
arpl
xchg
xchg
fstps
fdivrl
push
inc
out
dec
xchg
repnz
scas
and
lods
jmp
sbb
dec
repnz
or
shrb
lret
mov
mov
lock
add
xlat
pop
ret
sbb
or
jnp
add
lahf
aas
shlb
mov
out
inc
std
outsl
jne
pop
mov
pop
adc
fmul
fs
xchg
stos
cmpl
aas
inc
pusha
aam
mov
xchg
lds
repz
test
fdivrl
mov
imul
and
sbb
sub
pop
in
or
cmp
fcompl
ja
xor
sbb
push
mov
xchg
xchg
fwait
call
lret
and
mov
insl
push
xor
push
sahf
xor
push
cltd
out
and
mov
inc
sbb
xlat
dec
arpl
mov
in
cmp
cmp
mov
dec
lcall
jns
sub
pop
cmp
testl
xor
in
pop
xor
out
xchg
jbe
lea
insb
jle
add
jno
jns
loope
jle
stos
push
js
lea
and
xchg
sbb
fucomi
or
cli
mov
ret
popf
push
pushl
and
fimull
stos
push
xchg
pushf
mov
ret
and
sbb
mov
movsb
les
inc
sub
gs
stos
push
adc
dec
inc
test
mov
stc
pop
sub
andb
and
mov
cmp
mov
or
stos
cmpsb
fwait
cmpsl
xlat
lret
sub
adc
addr16
sub
in
ds
mov
cmp
into
les
add
jae
movsl
loop
fistpl
les
adc
xlat
inc
dec
fcmovbe
aaa
cmp
jmp
jb
xor
out
add
rolb
ss
insl
jnp
js
push
and
shrl
es
stos
jnp
add
mov
gs
push
mov
push
mov
das
std
push
in
sahf
sub
jl
mov
fists
and
inc
inc
push
shlb
cmp
in
or
insl
jge
test
cmp
pop
imul
mov
add
out
mov
add
xchg
cmpsl
out
hlt
stc
cltd
das
xlat
icebp
loop
aas
clc
mov
sub
aam
popf
cmc
popa
mov
iret
les
dec
nop
push
in
sbb
ret
and
adc
sbb
jb
ss
loop
xchg
arpl
in
dec
pop
and
movsl
cmp
xlat
ret
ret
cmpsb
in
inc
lahf
push
add
push
shll
cltd
cmp
mov
call
lods
push
sbb
cli
jo
or
cltd
mov
mov
jb
test
jo
cmp
into
xchg
jns
push
mov
or
les
out
pop
jne
mov
repnz
data16
es
xchg
orb
test
idivl
mov
int
xor
pop
sahf
cwtl
shl
or
in
leave
sub
iret
nop
insl
lret
mov
out
push
push
loop
aas
jne
jo
dec
nop
jbe
xchg
sub
cmp
fcoms
xchg
mov
mov
mov
loope
ds
mov
add
jb
mov
les
nop
and
cmp
add
out
test
adc
adc
test
mov
mov
subb
test
lea
lds
dec
pop
int
dec
push
push
inc
pop
outsb
cmc
lret
mov
call
xchg
or
aas
jne
sub
adc
movsb
in
jge
inc
mov
xor
sbb
xor
dec
insl
add
cwtl
gs
gs
imul
mov
mov
xlat
mov
lock
and
pop
cmp
add
adc
loopne
jmp
aas
jb
mov
dec
sbb
jecxz
adc
ds
cmp
add
dec
dec
and
nop
insb
sbb
cmp
sub
orb
jnp
stos
pop
ja
mov
inc
sbb
inc
pop
sbb
out
in
sbb
pop
sbb
jp
mov
add
adc
out
jmp
loopne
fdivrl
in
cmp
hlt
daa
aad
inc
sbb
clc
xchg
rcl
cs
cld
ret
lret
mov
sub
xorl
iret
adc
and
mov
mov
jo
lods
lret
inc
ret
inc
cmp
and
negl
mov
push
in
out
shl
inc
push
jno
cmp
or
cmc
jnp
repnz
out
jns
int
test
jmp
test
jmp
js
mov
sahf
shlb
int
pop
inc
enter
fisubrl
or
pushf
jp
sub
notl
mov
fidivs
pushf
cmpb
ds
dec
sub
fidivs
mov
pop
dec
je
pop
xor
jp
adc
jno
pop
mov
addb
in
inc
mov
je
lods
push
jno
inc
or
cld
add
ret
loopne
jge
imul
and
jg
inc
jne
call
test
sub
stos
js
dec
loopne
lcall
jge
jbe
sbb
pop
xchg
xchg
cwtl
lods
xor
movsb
sbb
mov
clc
pop
test
cltd
fldl
shrb
imul
dec
dec
pop
imul
ffreep
lcall
inc
fidivrs
adc
dec
jle
jbe
negl
sbb
sbb
jecxz
xorl
mov
gs
push
adc
mov
fs
aas
adc
scas
cmp
movsl
dec
lea
lock
loopne
in
mov
mov
add
js
push
cs
repz
rcrl
xchg
cmp
rdpmc
sbb
xchg
xor
pop
jbe
sbbb
movsl
or
sbb
in
dec
and
or
cld
cmp
aaa
mov
or
stos
xchg
jl
mov
popa
sub
xchg
nop
loop
rcrl
loop
add
mov
out
bound
lods
std
jo
test
fnstenv
leave
lea
ljmp
push
fmuls
or
push
sub
or
xchg
jno
pop
mov
arpl
andl
pop
sbb
loope
inc
in
mov
inc
adc
mov
push
jb
jbe
mov
insb
clc
jle
or
insl
mov
mov
jbe
aaa
cs
dec
dec
out
mov
pop
orl
sub
dec
mov
dec
psllq
cs
fdivrl
imul
shlb
xor
rcrl
ss
xchg
fstps
sbb
adc
sar
jp
outsl
pop
data16
xchg
dec
cli
mov
mov
cwtl
cmp
fadds
aam
ljmp
add
sub
inc
pop
adc
insb
push
mov
pop
xor
outsb
pop
sub
lahf
stos
fisttpll
lea
dec
mov
in
fidivrs
sahf
cmp
lret
lds
popa
imul
fwait
out
push
mov
push
mov
fcomip
ss
sub
sub
cmpsl
push
inc
adc
pop
arpl
mov
mov
add
leave
and
xchg
jge
push
mov
xchg
mov
mov
cmpsb
inc
xor
xor
jp
scas
jb
cmp
movsl
das
or
dec
fs
aad
test
xchg
out
fwait
xor
pop
add
ja
ja
adc
pop
dec
push
hlt
lds
js
stc
cmp
lods
cs
insl
sbbb
xchg
cmp
adc
int3
fisubrl
lret
aad
push
sub
test
add
jbe
lock
xchg
push
loope
rclb
je
sub
clc
iret
dec
inc
add
jnp
jnp
shlb
cmpsl
inc
hlt
imul
cmp
fs
pop
push
sbb
jnp
cmp
in
aaa
push
enter
sub
jbe
clc
adc
mov
fimuls
dec
mov
jo
cld
inc
mov
push
in
fcompl
or
dec
call
mov
adc
dec
mov
nop
pushf
or
jno
iret
mov
push
int3
stos
outsb
fs
mov
hlt
arpl
out
inc
mov
and
xor
imul
fidivl
push
hlt
push
cld
add
push
insl
loopne
rclb
les
repnz
push
push
dec
loope
xor
frstor
subl
cmpsb
dec
cld
out
int3
adcl
popa
sbb
or
mov
adc
mov
aad
xchg
pop
icebp
push
inc
inc
sbb
cli
test
add
das
xorb
cwtl
adc
repz
mov
sub
cmp
sbb
mov
jmp
or
pop
subl
shll
push
addb
cld
call
sar
test
xchg
mov
fidivrl
jo
cmp
daa
cmp
pushf
or
xchg
cmp
xor
imul
mov
pop
mov
push
push
and
in
int3
pop
out
std
sbb
in
add
sub
dec
scas
fmuls
rcr
jmp
sub
xchg
mov
inc
mov
out
aas
xchg
inc
pop
int3
je
jecxz
push
cmp
or
xchg
ja
xchg
mov
notb
pop
mov
scas
inc
push
mov
mov
lret
dec
jecxz
das
mov
test
mov
aad
loopne
and
push
lods
stc
pop
sahf
or
cwtl
and
es
not
dec
sub
add
addb
push
notb
in
test
test
testl
mov
testb
loope
ret
adc
push
mov
stos
xor
xor
ja
subb
shll
and
or
push
cmp
dec
xchg
add
xchg
outsb
add
into
jge
and
mov
test
push
push
repnz
xchg
add
dec
fsubrs
push
in
mov
bound
cmpsl
ds
jnp
ss
lock
pop
adc
mov
pop
mov
shrl
mov
mov
ds
lods
xchg
sbb
mulb
xchg
pop
mov
add
sub
aas
and
int
cmp
push
divl
int
outsl
pop
ds
sub
dec
loope
fadds
out
push
roll
arpl
xchg
add
repz
push
sub
adc
push
cmp
popa
lods
into
add
jnp
sub
pushf
mov
xchg
sub
mov
xor
push
insl
dec
nop
into
cmp
shl
jg
movsb
cmp
test
push
orl
sub
mov
es
test
popf
movsl
xchg
pop
pusha
mov
mov
rcrl
popa
inc
adc
shrd
jge
xor
mov
jg
jp
std
mov
inc
cld
fidivs
lods
mov
cmc
xchg
add
mov
sbb
pop
and
push
ljmp
lods
jne
imul
mov
sar
jmp
sub
mov
push
or
popa
jge
mov
insb
outsl
ret
sbb
fistpl
pop
dec
jno
mov
mov
adc
mov
pop
mov
xchg
daa
lock
and
js
mov
lods
int3
cmpsb
mov
sub
bndstx
fsub
jl
or
and
out
mov
test
mov
into
mov
pop
call
or
push
daa
mov
std
in
test
inc
push
cmp
push
xor
cwtl
sub
out
jecxz
inc
cmp
notl
jne
mov
ficoml
mov
std
mov
jmp
sbb
cmp
lods
cmp
lcall
pop
mov
push
out
inc
shrl
jb
mov
lods
pusha
xor
xlat
mov
add
repnz
idivl
stos
pop
mov
mov
xchg
push
adc
add
xor
pop
adc
ficompl
lods
lret
fiaddl
movsl
rcr
out
cmpsl
daa
mov
sbb
ds
test
aad
mov
lcall
scas
shlb
cli
gs
addr16
es
jg
sub
jge
movsb
adc
xor
aad
cmp
or
pop
imul
mov
cmpsb
outsl
lret
cmp
mov
inc
pop
test
mov
out
pop
jnp
or
xchg
pop
adc
je
xlat
movsb
and
add
imul
rcll
push
xchg
mov
imul
lods
sub
mov
jns
outsl
adc
mov
aaa
insb
mov
loop
in
add
jbe
aas
sarl
cmp
movsb
add
sub
or
xor
repnz
adc
aam
sub
scas
insl
xchg
jbe
ret
clc
test
xchg
loope
insl
pop
jl
test
lds
push
int3
pop
xchg
sub
fwait
cwtl
xor
stos
stos
cmp
adc
or
fsubrp
lcall
aad
cmc
jmp
rcrl
jns
jns
loope
jmp
int3
add
mov
and
cld
xchg
push
or
sahf
in
mov
jns
popf
call
and
popf
dec
ficoml
movl
xchg
sub
lds
xor
sbb
or
push
cmp
sti
fwait
test
pop
ljmp
xor
ror
dec
addl
pop
outsb
adc
loopne
push
mov
jl
adc
arpl
xor
mov
rcrl
dec
adc
iret
fnsave
mov
mov
xchg
movsb
mov
sub
mov
movsb
xor
xlat
xor
aas
popf
das
mov
mull
push
or
movq
mov
scas
push
sarb
pop
pop
enter
fldt
dec
testb
cmp
dec
negl
lods
addr16
aas
cltd
int
sbb
push
call
sub
inc
cltd
add
inc
jb
ret
jl
dec
loopne
jge
cmp
sub
stc
xor
pop
and
fidivl
cwtl
out
mov
sub
mov
out
dec
insl
sub
sarb
cmp
xor
stos
mov
fmul
sahf
clc
push
js
push
xchg
rol
repz
xchg
loope
jle
movsl
mov
dec
push
inc
add
push
sbb
stos
stos
mov
xor
sti
dec
test
aas
xchg
dec
add
and
lods
inc
fcomip
mov
movsl
push
pop
cmp
mov
sub
pop
aam
dec
inc
dec
mull
and
pop
pusha
test
cli
push
mov
add
or
jge
stos
out
pop
jle
insb
lret
test
in
fcmovbe
cmpsb
cmp
ret
les
sbb
sarb
testb
das
lcall
sub
mov
lds
sbb
cmp
pop
loope
adc
imul
repnz
mov
adc
jns
xchg
jae
sbb
movsb
pop
fdivs
gs
outsb
fstl
mov
cmp
jecxz
push
xchg
pop
mov
push
mov
sub
xchg
xlat
cmc
pop
cmp
jns
inc
cmp
sbb
pop
out
in
dec
in
aad
inc
pop
imul
and
movl
sahf
rcl
shll
js
rep
fdivs
test
adc
out
enter
mov
mov
ljmp
push
dec
adc
loope
mov
adc
ja
mov
pushf
fiaddl
xchg
push
push
mov
js
into
cli
fs
scas
push
inc
xor
jae
incb
xchg
cmp
ja
leave
push
repnz
dec
cmp
inc
dec
cs
scas
cmp
dec
shlb
pop
xor
out
ret
xor
out
push
mov
ffree
cmc
mov
clc
movsb
stos
imul
test
cmp
add
dec
pusha
ss
or
test
cmp
in
pop
out
sti
clc
mov
pop
mov
std
jae
and
ja
pop
inc
mov
cmp
push
adc
pushf
lods
sbb
loopne
mov
scas
add
hlt
mov
cmc
inc
and
aaa
mov
push
lods
xor
jo
and
jns
subb
rcrb
jg
sub
or
ret
jbe
mov
push
sbbl
lret
shll
adc
fs
add
cmp
push
movsb
jg
mov
loop
rcrl
mov
mov
adc
or
push
ss
jle
in
push
jl
je
push
xlat
pop
dec
xlat
jbe
xchg
mov
mov
movsb
movb
add
sub
jns
mov
cltd
dec
int3
cmp
xchg
test
mov
in
add
lds
mov
fucomi
xchg
add
inc
shlb
addb
pop
cs
daa
cs
sub
mov
push
mov
mov
popa
cmc
arpl
das
inc
jge
inc
out
mull
cmp
and
inc
and
fnstsw
add
fwait
inc
aam
loop
xchg
rcrb
cmc
or
jb
push
movsl
xor
dec
cmp
in
lock
aam
mov
mov
pop
aaa
icebp
movb
push
cmp
adcl
jmp
loop
bound
lret
jb
shl
icebp
imul
mov
mov
mov
test
xor
jmp
push
push
pop
test
shll
pusha
jmp
push
inc
inc
inc
sub
mov
shl
in
insl
and
adc
shll
push
out
push
test
push
jnp
cltd
dec
icebp
xchg
imul
mov
sahf
lcall
add
cmpsb
mov
hlt
jnp
dec
xchg
xor
jmp
rol
shlb
pop
jae
jne
cmp
cltd
loopne
shl
subl
jno
insl
dec
in
cmp
jb
popa
mov
mov
jmp
or
movsb
mov
or
mov
std
or
dec
repz
mulb
cmp
xor
inc
mov
push
xchg
inc
sub
fistl
pop
xchg
test
mov
call
std
xor
push
mov
jmp
int
dec
pop
push
out
fidivs
push
cld
data16
or
inc
test
push
and
xor
jns
imul
movsb
jge
jecxz
inc
adc
add
addr16
mov
sub
lea
ror
repz
scas
add
popa
insb
jno
shrb
or
mov
negb
xor
loop
jmp
mov
dec
mov
mov
stos
xorb
nop
mov
sub
fisttps
add
mov
lods
jg
lahf
je
in
aaa
lds
mov
dec
push
std
fistpl
pop
aam
xchg
mov
adc
frstor
sbb
shl
outsl
push
in
adc
nop
jl
insb
scas
icebp
fsubrl
xor
repnz
inc
sbb
and
outsl
dec
sahf
pusha
adc
inc
insl
jp
pop
sbb
lcall
jmp
data16
push
int3
sbb
cwtl
jnp
daa
dec
xor
scas
js
sbb
popf
repz
fwait
xor
and
leave
imul
jo
and
or
mov
fildl
pusha
subb
dec
cmp
movsb
push
stc
outsb
push
test
pusha
ljmp
mov
inc
ja
push
fs
dec
nop
leave
mov
jg
jmp
icebp
mov
inc
std
jmp
sub
js
jo
ss
push
imul
popa
les
inc
or
xchg
sbb
ljmp
mov
dec
in
outsl
cltd
mov
insb
ss
or
push
aas
mov
fisubrs
out
push
xor
cld
fidivrl
pop
and
rclb
pop
repnz
cld
call
push
jo
mov
mov
mov
outsl
xchg
rclb
jne
mov
cmp
sbb
sbb
jl
loopne
hlt
push
xchg
xchg
push
ret
cltd
mov
sub
xchg
ss
scas
lret
jle
shr
mov
cltd
xor
icebp
jo
and
mov
jnp
loop
push
xchg
pusha
mull
mov
add
ret
dec
pop
cmp
pop
imul
lods
fcomps
stos
inc
loope
fisubrl
orl
jp
mov
cltd
fwait
push
fwait
adc
iret
and
xor
inc
mov
test
sti
stos
insl
adc
test
pushf
mov
jmp
out
mov
mov
mov
mov
pop
pop
test
dec
xlat
jmp
test
jo
or
pop
movsb
mov
inc
shlb
mov
pusha
ljmp
mov
pop
movsl
call
stc
sbb
ds
pop
jmp
sarb
out
data16
push
out
cltd
dec
mov
sbb
leave
or
nop
fbstp
dec
sub
rcll
or
or
ficoms
mov
adc
jmp
or
mov
inc
out
or
jmp
ljmp
pop
lcall
popa
mov
pushf
iret
gs
cmc
int3
repnz
pusha
jp
adc
xchg
mov
inc
add
cmpsl
aad
flds
fwait
je
js
test
into
mov
outsl
andl
push
sub
in
xchg
adc
push
mov
out
std
lods
cmp
jp
insl
cmpsb
cmp
mov
pop
mov
and
xor
les
mov
sbb
cmpsl
fs
je
leave
aaa
push
mov
rcrb
pop
push
repz
fcompl
push
mov
mov
inc
in
call
fldcw
aas
adc
bound
lret
jbe
movsl
in
pusha
adc
sti
pop
push
mov
lea
push
mov
lock
push
icebp
es
inc
lret
dec
into
popa
imulb
out
adc
rolb
lea
dec
pop
push
insl
lahf
cmp
mov
cmp
subb
in
mov
adc
in
loopne
mov
nop
xchg
cmp
in
cmpl
outsb
cmc
ss
aam
enter
sti
ja
ss
orb
fistps
bound
sbb
bound
ds
push
mov
fistl
lret
xchg
inc
pop
lds
sbb
dec
pop
clc
or
nop
add
xchg
jbe
arpl
test
inc
inc
add
sbb
insl
push
add
sbb
pop
fmuls
repz
stc
gs
ret
enter
in
sbb
xchg
shr
add
or
sub
rcr
or
bound
cmpsl
jmp
stos
scas
pop
lea
jns
int
pop
int3
psrlq
push
in
dec
mov
sub
add
cmpsl
ret
test
sbb
pop
stos
scas
and
movsb
cmp
xorb
xlat
in
sub
mov
mov
loop
xor
int
aam
cmc
mov
xchg
inc
xchg
outsb
rcr
pop
push
out
inc
inc
cmp
mul
mov
in
loopne
adc
mov
pop
inc
pusha
loopne,pt
adc
scas
pop
out
jb
fldl
fldenv
xchg
inc
lods
mov
and
lods
outsb
add
ret
jae
jecxz
sbb
jmp
adc
push
aas
fildll
pop
jmp
das
ss
outsb
jl
js
mov
push
inc
imul
sub
jnp
dec
out
jae
stos
jmp
lods
sub
sub
inc
push
daa
int3
in
jp
add
xor
test
sub
mov
jle
divl
mov
mov
and
into
cmp
mov
dec
xchg
or
sti
mov
sbb
push
xchg
dec
jecxz
jnp
ja
pusha
pop
std
push
mov
push
out
xor
scas
popf
inc
stc
add
jbe
or
aaa
loop
out
ljmp
inc
xor
fiaddl
push
or
xor
add
inc
jmp
es
adc
andb
jbe
jge
mov
inc
sbb
push
aam
jmp
mov
inc
clc
xor
ja
cld
pop
jae
ljmp
xor
jo
cwtl
pop
push
add
sub
jmp
add
rep
movsl
mov
imul
enter
mov
jae
mov
dec
dec
add
gs
sahf
dec
dec
mov
cmpb
aad
clc
mov
sub
add
mov
push
mov
mov
or
jge,pt
and
aas
or
hlt
scas
push
aad
icebp
cld
cltd
add
sbb
jno
xchg
in
test
stos
push
mov
adc
pop
loopne
jae
sub
xchg
testl
or
lods
mov
mov
push
sbbb
clc
mov
popa
fs
aaa
jg
data16
lret
sbb
xlat
icebp
cmpsl
mov
fldcw
scas
xor
mov
test
or
mov
mov
cmp
mov
add
add
outsb
add
int
lret
sets
mov
mov
mov
pusha
cli
cld
jae
adc
cli
push
jno
stos
bound
add
xorl
lods
cmp
and
ljmp
push
dec
in
jnp
ret
jae
inc
scas
mov
fs
arpl
mov
ret
adc
outsl
mov
xchg
stos
lods
or
iret
xor
enter
lock
ss
je
push
in
jo
pop
daa
sub
je
out
pop
lahf
ljmp
scas
mov
aaa
int
mov
rcrb
push
push
jae
sbb
iret
add
sbb
adc
xor
push
js
add
outsb
sub
xchg
rol
mov
cmp
and
inc
adcl
loope
sahf
xor
pop
push
adc
ret
mov
std
ja
or
test
add
rorb
outsl
iret
fstp
cmp
sbb
push
imul
lods
cmp
outsb
xchg
test
cmc
or
outsb
test
adc
xchg
pushf
sub
ret
cltd
sbb
ds
jg
test
jo
sbb
outsl
sbb
push
dec
sbb
cld
call
dec
dec
into
cmp
lret
xor
das
loop
int
mov
dec
in
mov
in
mov
inc
and
dec
xor
mov
push
mov
in
cmpsl
pop
mov
hlt
mov
cmp
fldl
mov
push
aas
mov
repz
inc
in
lea
scas
scas
inc
adc
shll
dec
ljmp
adc
leave
lods
dec
lahf
mov
sarl
sbb
icebp
sbb
sti
inc
xchg
push
repz
adc
pop
cwtl
mov
popf
xchg
enter
pop
fs
xchg
jge
out
out
sahf
dec
cmp
imul
gs
mov
cs
stos
sbbb
xor
mov
xchg
xchg
rcrb
aam
mov
inc
mov
or
fwait
xor
mov
mov
js
sbb
push
nop
xor
adc
hlt
mov
push
xchg
inc
and
cmp
sti
out
cltd
mov
add
into
cmpsl
dec
pop
jno
mov
or
fldcw
xchg
sbbb
push
popa
cmp
lcall
icebp
test
sub
mov
xchg
mov
pushf
mov
push
cmpl
xor
push
xchg
lea
cmp
xchg
ds
rcrb
dec
xorl
ss
out
subb
mov
test
mov
addr16
push
sbb
in
xor
jl
loop
aad
inc
add
adc
xlat
push
movsb
fsubrl
mov
scas
mov
je
iret
dec
jae
mov
sub
jmp
cli
fwait
push
dec
xchg
sbb
mov
movsl
les
jle
jnp
inc
add
mov
pop
mov
sub
cmpsl
and
lahf
mov
les
or
popf
dec
jmp
cli
jp
enter
cmpb
dec
mov
lock
or
add
sub
fiadds
cltd
sbb
jns
pop
pop
outsb
pushf
inc
xchg
popa
xor
mov
jl
fbstp
push
mov
inc
addr16
outsl
lods
mov
addr16
stos
jb
sbb
pop
pop
adc
rorl
in
icebp
xor
and
popa
int
lret
dec
stos
and
mov
lret
out
repnz
outsl
push
call
push
cwtl
outsl
inc
dec
iret
imul
shlb
repnz
fcomi
mov
adc
cmp
mov
xrelease
scas
adc
jne
sti
pop
mov
or
cmp
cmp
test
shll
idivb
sbb
sbb
sub
push
imul
nop
jnp
aad
mov
test
gs
mov
xor
fisttpll
movsl
dec
push
sub
sub
mov
sbb
mov
push
cmc
xchg
sub
lret
mov
mov
xchg
sarb
insl
jp
add
loope
lcall
lea
xor
pop
adcb
mov
mov
push
in
insb
decl
jge
cmp
pop
pop
aam
iret
roll
test
outsl
xor
mov
lret
lods
mov
or
jno
inc
mov
adc
addl
sbb
scas
pop
stc
mov
push
leave
lds
inc
push
test
scas
imul
add
xor
andl
mov
inc
fstps
dec
lods
fdivrl
mov
cld
js
jmp
ss
je
ret
push
out
lods
lret
dec
xchg
sub
jno
mov
dec
sub
es
add
or
mov
pushf
in
fucomp
arpl
arpl
pop
push
inc
fxch
dec
repnz
into
call
push
testl
cmp
fcoml
in
roll
xor
hlt
add
sbb
insb
adc
getsec
cs
pushf
dec
mov
add
daa
in
pop
pop
jecxz
mov
or
inc
rcr
jbe
test
sahf
loope
orb
in
faddl
test
repnz
leave
sbb
or
hlt
mov
sbb
hlt
mov
mov
xor
decb
push
xchg
sub
pop
mov
js
flds
push
pop
cmc
andb
adc
mov
fwait
push
scas
push
mov
iret
xchg
fs
ds
test
or
push
sub
lret
and
jb
pop
pushf
pop
outsb
or
add
imul
cmp
cltd
sbb
fidivl
test
int
or
cmp
xchg
sub
cmpl
or
outsb
loope
adc
inc
xchg
mov
fsubp
movsb
sub
mov
fidivs
jb
push
insl
pop
cmp
cmc
ja
es
xchg
in
fwait
cmp
pop
sub
sbb
and
inc
ss
xchg
stos
es
int
les
cmp
sbb
xchg
imul
fdivrl
adc
and
inc
mov
inc
xchg
sub
ret
push
jnp
mov
leave
mov
fwait
imul
xchg
test
dec
in
adc
imul
lds
out
adc
sub
cmp
jne
adcl
fldcw
jecxz
shl
mov
mov
xchg
xlat
outsb
leave
mov
add
stos
cmc
adc
icebp
sbb
pop
imul
cmp
iret
mov
pop
mov
sbb
add
test
loop
cmc
sub
push
sub
cmp
adc
sbb
xor
gs
mov
pop
fstps
je
cli
test
in
jbe
xlat
jo
pop
xchg
cmp
push
gs
pop
xchg
xorl
icebp
pop
stos
cmp
not
stos
cmpsb
mov
push
xorb
sub
fbld
lea
ljmp
insl
andl
stc
adc
sbb
push
mov
out
cmc
mov
jbe
mov
adc
stos
inc
xor
cmc
lds
notb
scas
inc
dec
mov
je
in
int
outsb
dec
add
cmp
cmp
pop
cmp
mov
inc
mov
pop
mov
sub
mov
inc
std
push
cmp
sbb
inc
jae
bound
xchg
aad
shr
xchg
pop
sbb
add
xor
cmpsl
inc
lret
fldt
push
pop
jl
subl
lea
jns
cli
pushf
push
push
sti
xchg
add
xchg
ds
mov
mov
cmpsb
adc
pop
and
imul
test
icebp
mov
popf
loope
adc
int3
aas
jmp
adc
or
movsb
cmp
fidivl
mov
jns
or
mov
fistpl
push
fmulp
sub
stc
mov
dec
fistps
loopne
jg
test
mov
mov
mov
mov
pusha
adc
gs
test
cmp
repz
pop
adc
fbld
scas
cmp
andb
and
lods
das
cmp
subb
adc
jmp
cli
xchg
sbb
mov
adc
fcoml
pop
mov
xor
loope
loop
push
clc
pop
movsl
inc
xchg
sbb
push
fisttpl
popf
je
stos
repnz
sti
adcb
push
sbb
and
or
adc
int3
mov
mov
jno
sub
push
shl
jl
ret
push
mov
or
js
call
sbb
push
xchg
inc
adc
push
jae
sbb
mov
sbb
in
mov
mov
adc
das
or
sub
sbb
adc
stos
loope
pop
or
pop
lret
mov
push
stos
leave
push
xchg
inc
stc
iret
sub
inc
bound
push
mov
ljmp
jmp
xor
enter
xchg
mov
dec
xor
jb
mov
or
cmc
mov
jo
sbb
jl
scas
pusha
ss
lods
sbb
pop
int3
or
pop
shlb
mov
inc
sti
jns
sbb
mov
mul
add
leave
push
sbb
sbb
jo
inc
adc
je
test
loope
mov
mov
ss
push
or
std
stc
xchg
sbb
mov
push
leave
insb
pop
jg
cmc
hlt
mov
mov
mov
cmp
cmp
mov
or
mov
xchg
cmp
mov
adc
xor
jge
or
adc
and
inc
mov
mov
ds
xchg
rclb
test
or
push
push
push
adc
mov
xchg
shrl
mov
adc
gs
xchg
loope
fdivrs
mov
enter
mov
movsl
lahf
popw
shll
testb
jl
testl
out
mov
call
arpl
pop
inc
xlat
xchg
daa
mov
fisubrs
les
lret
adc
fisubl
cmp
lods
and
scas
mov
lds
fcom
xor
push
adc
xlat
mov
sbb
ds
movsl
mov
ret
xchg
sub
out
shll
iret
fs
sbb
mov
dec
pop
aas
mov
into
pop
jmp
sub
push
icebp
adc
sub
sbb
fsubrs
aam
aam
scas
out
mov
push
sbb
je
cmp
adc
pusha
testl
or
xlat
mov
mov
pop
xor
int3
cli
cmpsb
xorl
mov
repz
decl
shr
lahf
insb
xchg
fdiv
fildl
movsl
mov
es
mov
icebp
rcll
and
incb
fbstp
xchg
out
test
mov
sbb
mov
ss
dec
std
cmp
mov
add
pop
cltd
jecxz
dec
xor
add
push
stos
mov
dec
dec
jo
ljmp
cmpsb
mov
rol
pop
and
mov
in
mov
shll
lret
aad
mov
push
call
mov
mov
xchg
sub
dec
movsb
push
rep
scas
out
push
jne
ret
imull
xor
lahf
enter
mov
inc
xchg
stos
scas
repnz
sahf
or
mov
mov
sbb
xlat
clc
out
xchg
rsqrtps
loop
adc
push
arpl
inc
add
jg
pop
lea
mov
add
mov
add
popf
lods
inc
and
in
les
jge
sbb
push
scas
or
xor
adc
add
push
pop
xchg
stos
jo
fnsave
pop
cmp
gs
fbld
mov
repz
adc
inc
stos
xor
jle
xchg
dec
int
jbe
cmp
xor
sub
pop
nop
loope
inc
idiv
pop
lock
lret
adc
aad
jne
jp
inc
arpl
popa
or
pop
and
sbb
mov
cmp
xorb
jmp
push
xchg
xchg
push
or
test
in
ret
jle
cmpsl
xchg
sbb
mov
pop
aaa
cli
test
sbb
push
andb
lcall
jae
cmpsl
ds
dec
jnp
push
scas
lds
add
aad
mov
mov
fcmovu
mov
scas
int
adc
inc
and
aaa
or
push
add
mov
pop
iret
adc
scas
test
loopne
mov
xchg
fdivs
or
sub
push
add
gs
mov
dec
xchg
fcmovnb
ja
popl
sahf
rol
in
mov
push
scas
sub
bound
sbb
xor
jne
mov
hlt
push
outsb
es
cmp
mov
sbb
push
dec
push
in
cmp
and
mov
mov
notb
inc
in
mov
ja
cmp
sub
pop
pusha
andb
dec
cmp
or
popf
es
cmp
popf
hlt
loopne
cmp
mov
push
mov
les
out
pop
and
mov
aas
cwtl
lods
ja
mov
movsl
mov
fbstp
mov
xor
cmpb
ficomps
cmpsl
ds
pop
xor
mov
xlat
sub
aas
mov
pop
mov
jle
sbb
ror
or
adc
rcr
mov
repz
mov
pop
das
jp
outsl
ljmp
idivb
jne
pusha
cmpsl
xor
in
push
stos
inc
data16
adc
ljmp
sub
sbb
in
inc
cmp
ja
in
int3
and
adc
lods
xchg
fisubrl
mov
mov
movb
adc
imul
ret
ficompl
push
jns
dec
lahf
repz
sti
imul
sbb
mov
nop
cli
mov
pop
in
pop
inc
fisubrl
mov
enter
mov
fmuls
notb
adc
push
mov
xchg
dec
mov
cmpsl
mull
cld
or
sbbl
sbb
inc
popf
fbstp
pop
ja
xorb
stos
push
push
lods
inc
jo
in
lods
push
xor
int
nop
xchg
outsb
ljmp
dec
mov
aad
xchg
or
mov
cmc
dec
adc
aad
orl
mov
cmpsl
push
scas
mov
out
mov
xor
into
repnz
xchg
outsb
into
jle
out
mov
cmc
xchg
cmp
pushf
popa
cmp
inc
fs
pop
scas
xchg
fsubs
mov
stc
jns
out
jne
and
pop
movsb
sbb
loop
ja
out
cwtl
incl
fmuls
or
inc
or
sahf
rclb
xchg
iret
or
sub
jg
and
cmc
push
dec
or
loopne
sub
mov
push
and
pop
mov
mov
pushf
sarl
imul
rol
in
adc
fdivl
xor
mov
jge
and
fnsave
fs
out
inc
popf
in
cmp
std
dec
movsl
popf
jbe
daa
test
std
push
or
pop
fnsave
mov
les
cwtl
and
sbb
ffree
idivb
add
fs
xchg
popf
xchg
xchg
std
out
popf
jbe
cmp
and
cmp
popf
rol
sbb
xor
movsb
jge
sub
fstp
sarb
xor
pop
clc
lea
sbbb
mov
lahf
ss
aaa
stos
cmp
mov
dec
dec
adc
popa
push
mov
data16
mov
stc
xchg
hlt
add
lea
xchg
lods
xchg
pop
push
cltd
or
inc
lahf
add
inc
es
stos
loopne
pop
stos
ss
adc
movsb
mov
or
and
ret
sti
lods
add
fmulp
sub
xchg
clc
add
or
jg,pn
sbb
pop
mulb
jge
gs
xchg
sub
fstps
leave
scas
push
or
mov
incb
out
stc
jnp
xlat
lods
cmp
push
imul
inc
mov
popf
jmp
sbbl
mov
mov
shrl
aam
lcall
scas
lds
lret
fimull
popf
sbbb
frstor
mov
push
mov
mov
out
or
pop
xlat
fwait
jmp
mov
test
push
lock
mov
pusha
add
xor
push
icebp
add
notw
inc
pop
add
out
into
fstpl
sub
movsl
inc
pusha
xlat
sub
jg
dec
into
gs
loop
xchg
mov
or
sbb
ljmp
icebp
mov
and
movsl
data16
ja
int
sub
js
pop
imul
cmc
mov
clc
push
ja
aam
rcl
decb
cmp
add
gs
add
mov
ret
call
dec
iret
fnstsw
loopne
arpl
xor
pop
out
clc
jl
add
pop
jl
into
in
xchg
sub
les
and
movsl
imul
push
or
adc
and
add
jg
push
push
dec
xlat
loop
or
mov
cmpsl
adc
or
dec
sbb
xor
sub
divl
ret
int
mov
int3
arpl
aam
sub
add
lock
jnp
lods
and
fcoms
fmul
andb
mov
inc
xchg
cmp
fs
fnstenv
dec
in
push
xchg
daa
in
imul
cwtl
das
out
dec
jecxz
or
ja
insl
lahf
xor
pop
mov
fst
test
fs
sbb
sarl
cmp
imul
mov
inc
jo
xor
adc
mov
icebp
push
mov
push
mov
fucomi
jl
rclb
xchg
push
xor
sub
nop
push
paddd
xor
sbb
add
cmp
push
mov
sub
cli
lahf
pop
sub
dec
jecxz
insb
ss
sbb
pop
shll
enter
out
std
lods
dec
pop
ss
and
pop
movsl
sbb
outsl
mov
lcall
je
pop
adc
sbb
in
test
cmp
dec
adc
push
pop
sbb
adc
fnsave
sbb
jno
dec
loopne
rcrl
in
loopne
dec
mul
repz
cmp
je
pop
push
jns
lods
inc
adc
sbb
lret
pop
or
add
mov
outsb
and
pop
subps
dec
cmpl
push
inc
push
shll
pop
adc
sbb
mov
push
in
popa
pushf
popf
xorl
mov
ret
cmp
ret
pop
mov
rorl
cmpsl
cmp
cmp
xor
inc
loopne
dec
nop
sub
iret
cmpsb
out
inc
xchg
mov
push
lea
test
sarb
ss
inc
enter
outsl
popf
jae
push
pop
and
pusha
pop
imul
subl
cmp
jle
imul
xor
ret
pop
sub
mov
push
stc
js
inc
mov
jmp
les
pop
sbb
ss
sub
insb
push
mov
jg
jp
fdivs
ret
je
lcall
and
pop
cltd
aas
mov
hlt
lds
mov
movsb
popa
loope
fwait
adc
popf
xor
loop
jg
xlat
ljmp
adc
cmpsb
rorl
xchg
mov
sbb
inc
jle
pusha
negl
mov
and
js
push
mov
in
imul
std
adc
add
dec
lcall
rcrb
es
lds
fs
xchg
lret
daa
inc
sbb
xchg
inc
shrb
in
jo
inc
mov
mov
les
ret
dec
add
mov
sti
rclb
insb
xor
sbb
lcall
xor
stos
scas
ss
xor
dec
sub
stos
dec
pop
inc
cmp
addr16
cltd
xor
fs
sbb
inc
pop
into
test
pop
cld
dec
add
call
mov
loopne
loopne
ds
push
aam
dec
in
call
insl
mov
inc
jo
imull
and
pusha
sbb
push
outsb
add
cmp
jmp
bound
cmpsb
xor
aaa
xlat
outsb
mov
push
mov
insb
fists
mov
mov
xchg
pop
cmp
pop
jae
dec
rcrb
ret
shll
xchg
push
adc
mov
dec
inc
jmp
mov
dec
xchg
es
leave
outsb
outsb
mov
scas
rolb
xor
push
shl
sub
add
cmc
mov
in
adc
adc
ret
push
fdivrs
cs
push
cld
pop
insl
adc
rcl
pushf
out
cli
jg
rcr
mov
cmp
in
pop
cmpsl
cli
dec
insb
mov
repnz
sarb
mov
add
lret
es
mov
xorl
out
xchg
stc
into
mov
cltd
das
mov
fdivl
das
push
inc
push
sahf
fistpl
in
add
pop
divb
mov
jge
jnp
clc
popl
jecxz
sti
int
stos
and
mov
xor
mov
pop
push
sbb
dec
ret
xor
popa
or
add
ja
push
and
dec
push
aas
icebp
insb
lods
stc
in
imul
sahf
adc
inc
mov
cmpsb
lock
in
aas
pop
lcall
mov
psubusw
push
sub
imul
sbb
sbb
mov
mov
sti
xchg
adc
add
xor
jo
adc
ret
stos
fcomps
push
jecxz
cmp
dec
movsb
xor
xlat
in
and
iret
push
lds
imul
pop
and
xchg
mov
and
das
sti
adc
imul
pop
stc
lods
aaa
mov
cmp
out
ret
stc
adc
pop
push
pop
inc
hlt
shlb
ja
mov
jge
popa
imul
cmpsl
mov
or
test
jp
stc
xchg
xchg
enter
stos
call
or
repnz
call
pop
enter
adc
fcmovb
clc
push
jo
cmpsb
adc
jnp
mov
xchg
jnp
sbb
add
or
cld
int
repz
xchg
mov
das
pop
cmp
and
rol
sar
loope
lret
cld
call
pop
jb
loop
adc
cld
adc
cmc
and
cmp
pop
neg
cltd
or
ret
sub
jmp
cwtl
jb
in
mov
sbb
fidivl
mov
mov
inc
fstps
mov
cmp
adc
daa
lahf
mov
ror
push
and
cmpsl
ret
aam
push
cmp
popf
xor
jne
lcall
in
scas
bound
pop
or
and
fxch
or
sub
into
mov
inc
outsl
push
jne
gs
sub
es
jge
or
shrb
sub
dec
lret
bound
lock
mov
sti
inc
jnp
fsubl
loop
stos
push
sub
push
mov
push
xlat
mov
mov
mov
sahf
addr16
mov
test
scas
sub
pop
rclb
lods
xchg
lahf
add
inc
mov
cmc
loop
ret
fistl
lods
ljmp
dec
lret
push
out
insb
int
sahf
adc
jbe
mov
dec
sub
ror
int
into
sbb
dec
clc
push
aam
push
add
data16
fs
sub
or
pop
cmp
test
and
push
scas
xchg
addr16
in
jecxz
div
popf
movsb
repz
xchg
sti
rcrb
ja
fisubl
or
or
loope
call
mov
bound
xchg
xchg
xchg
ret
push
jo
pop
mov
dec
xchg
mov
mov
test
inc
mov
add
adc
arpl
mov
mov
xlat
adc
xchg
adc
jae
jne
insl
shrl
xlat
xor
int3
sbb
add
xchg
add
cli
cli
sub
lahf
stos
and
dec
shll
mov
les
pop
lock
cmpsl
lds
push
lods
loop
fimuls
rcrb
pushf
push
jnp
stos
imul
das
cmp
pop
sbb
pusha
scas
das
adc
test
idivl
lidtl
ret
pop
insb
inc
in
xor
lcall
xor
push
into
sbb
or
sti
clc
push
movsb
add
jno
pushf
or
sbb
cld
outsl
jmp
push
cld
shr
jbe
xchg
clc
cmp
movsb
mov
and
cmp
inc
push
outsl
shll
aaa
push
fldl
sub
xor
or
fisttpl
jg
leave
in
cli
push
jmp
pop
imul
push
jg
cmpsl
lret
sti
loopne
mov
enter
mov
imul
je
push
xor
std
xchg
and
sbb
dec
clc
call
gs
push
movsl
sbb
enter
sub
loop
loop
cmp
imul
cmp
xchg
sub
sbb
mov
lcall
sub
add
mov
cld
xor
aad
sbb
stos
and
xor
les
icebp
sbbb
adc
rcl
cmpsl
lea
aad
mov
addl
rcrl
mov
or
outsb
xchg
insl
lods
rorl
push
jo
test
icebp
loopne
sbb
mov
shrb
jbe
mov
dec
xchg
cs
pop
and
inc
push
push
ficoms
xor
test
mov
out
push
shrb
movsb
xchg
shlb
jmp
out
fcmove
add
or
mov
mov
add
sti
xchg
mov
repnz
lea
psrlw
mov
stos
mov
or
cmp
lods
cmpl
add
xor
mov
sbb
xchg
pop
xor
add
xor
xchg
cmp
xchg
sub
mov
ss
push
and
add
xor
scas
out
ret
or
jp
or
sbb
jae
or
jp
mov
inc
lods
leave
pusha
push
pusha
sub
mov
xchg
call
mov
mov
pusha
xor
pop
cli
push
sub
in
xchg
push
clc
sarl
out
jnp
adc
cltd
mov
push
sahf
mov
pusha
sub
push
ret
or
popa
call
fistpll
orps
or
mov
test
adc
dec
mov
call
pushf
in
test
cmp
jle
es
dec
sbb
push
test
cmc
dec
lahf
or
sarl
pusha
rorb
data16
xor
mov
push
out
mov
xchg
xor
pop
pop
gs
mov
mov
icebp
hlt
mov
inc
pop
dec
jae
mov
mov
adc
sub
push
xchg
mov
xor
fwait
scas
pop
dec
lea
xchg
sub
int3
and
and
inc
sbb
syscall
shl
mov
mov
lea
mov
mov
pop
mov
push
xchg
cs
mov
xchg
out
or
mov
scas
fildll
dec
ds
lods
and
lock
add
xchg
xor
add
popl
adc
mov
insb
mov
aad
pop
push
wbinvd
mov
pop
leave
or
pushf
cli
stc
nop
sub
pop
scas
clc
mov
mov
push
xlat
or
or
push
cmpsl
fbstp
aaa
push
or
mov
sbb
mov
add
jl
jno
repnz
dec
mov
fdivrl
aas
stos
icebp
std
pusha
lcall
push
jne
dec
jae
push
int
and
hlt
push
cmpl
ret
xchg
mov
push
inc
fildl
xor
mov
add
pop
les
movsl
icebp
dec
mov
dec
push
stos
popf
scas
inc
iret
leave
fnstcw
lods
push
loope
jl
out
popa
pop
cmp
out
and
lcall
in
inc
icebp
adc
mov
fidivl
insb
sbb
sub
mov
mov
dec
or
dec
mov
scas
std
or
rcr
gs
adc
test
push
ds
inc
repz
sbb
adc
sbb
dec
sti
mov
or
dec
movsb
jnp
cli
scas
and
les
fnsave
xchg
jg
cmp
in
sbb
sub
cmp
aas
outsb
repz
adc
xchg
testb
mov
cmpsb
int
dec
xor
scas
inc
xchg
sti
xchg
mov
sbb
inc
jo
dec
xor
xchg
mov
movsl
in
out
testl
mov
pop
loop
mov
adc
repnz
cmp
movsl
daa
and
push
insb
int3
test
mov
mov
iret
push
xor
lahf
push
shll
stos
fsubl
jmp
sub
ret
jnp
mov
in
addr16
and
data16
xor
fwait
jae
mov
out
addr16
mov
sub
cwtl
in
stc
shll
ficompl
jge
mov
jle
mov
xchg
mov
inc
faddl
mov
jg
sbbb
cmp
push
sbb
out
mov
bound
test
and
outsb
out
xor
in
das
insb
pop
xchg
sbb
ds
or
mov
pop
lret
clc
push
adc
shlb
cmp
orl
xchg
mov
pusha
mov
pop
data16
mov
decl
push
jbe
mov
sub
mov
sbb
fsubrs
jno
lret
aam
adc
pop
mov
mov
pop
push
mov
pushf
pop
aaa
pop
js
stos
addr16
push
imul
clc
jnp
loope
fcoms
mov
int3
gs
mov
fwait
cmp
xchg
stos
sbb
add
pop
jne
fstpt
xor
test
sbb
mov
adc
mov
lea
insb
pslld
das
repnz
pop
in
inc
mov
loopne
xchg
sub
pop
mov
push
in
add
popa
loop
imul
in
push
cmp
and
push
mov
add
sub
mov
xchg
pop
or
mov
es
pop
in
insl
inc
std
test
xchg
mov
xor
iret
xchg
jmp
shll
pushf
scas
divb
lods
repz
aaa
ret
out
fldt
or
out
mov
dec
pop
repnz
je
movsb
in
add
fs
mov
testl
mov
xor
dec
loopne
add
pop
negl
jecxz
add
sbb
lds
notb
pop
ds
add
sbb
psrlw
lods
mov
add
xchg
call
xchg
sbb
mov
inc
adc
mov
movsb
loope
add
ret
cmp
aam
pop
sub
sub
mov
lock
sbbb
add
push
adc
jbe
enter
daa
std
adc
pop
mov
rolb
pop
xor
xchg
add
inc
sahf
and
cmp
push
popf
rorb
push
fs
cld
lcall
ja
dec
dec
icebp
or
inc
fbstp
mov
xchg
cmp
movsb
sbb
cmpsb
adc
sarb
sub
add
daa
test
pop
cmp
sub
push
rorb
sub
test
sbb
lea
push
inc
outsb
or
arpl
push
or
jp
ffreep
jecxz
mov
add
movsb
xchg
dec
pop
into
mov
add
data16
jle
stos
mov
les
pop
cmp
int3
cs
insl
popa
inc
or
clc
or
dec
lcall
jbe
lret
mov
mov
push
inc
test
inc
ficoml
fists
dec
sbb
mov
mov
ja
mov
add
das
adc
xchg
sahf
lahf
jne
push
cmpsl
shlb
icebp
dec
pop
inc
scas
lds
or
ds
dec
mov
xchg
loop
jmp
hlt
sbb
shlb
add
ja
push
jno
je
dec
cmpsb
xlat
test
jo
shr
imul
and
rcr
adc
jge
adc
int3
div
jl
gs
adc
mov
jb
mov
clc
cmpsl
dec
ret
dec
into
jecxz
add
cmpsl
mov
dec
xor
cmpsb
lock
into
fdivl
jg
icebp
jge
sahf
mov
inc
ss
sbb
xchg
dec
aam
jbe
cmp
lret
sahf
and
loope
dec
adc
pop
xor
or
jp
jle
push
dec
pusha
cmp
pop
stc
sarb
test
push
sbb
push
mov
ljmp
aaa
es
xor
cli
aam
jmp
and
daa
ret
ficoms
mov
cmpb
cmp
test
adc
decl
mov
mov
call
test
lret
and
lods
jge
sub
movsb
xor
jne
sarb
mov
sub
stos
cmp
leave
and
rcr
stos
incl
push
inc
jb
sbb
mov
push
mov
mov
mov
hlt
mov
adc
push
test
jne
mov
push
dec
popa
or
jle
dec
mov
fwait
lock
sbb
xchg
push
push
xor
pop
push
cwtl
push
inc
mov
lcall
movb
add
jne
xor
pop
ja
in
jmp
mov
xchg
sub
mov
mov
stos
mov
lds
sub
sbb
sub
out
push
push
stos
push
mov
fnstcw
stos
mov
lods
jae
int3
test
adc
test
xor
lret
mov
int3
lods
mov
sbbl
rdmsr
mov
iret
cli
jg
repz
popf
cmp
daa
xor
mov
movsb
cmp
sub
js
jl
push
cwtl
jecxz
lret
jl
bsr
sbbb
fcomp
jb
hlt
sahf
jno
pushf
stc
adc
jae
out
repnz
jbe
push
inc
inc
jp
mov
jmp
and
inc
mov
xchg
push
or
xor
cld
cli
pop
lret
dec
pop
adc
loope
movsb
int3
arpl
cmpsb
jmp
test
jmp
psubusb
sub
cmpsb
pop
gs
out
iret
ljmp
jl
shrl
inc
insl
pop
loopne
push
ds
sbb
fwait
mov
push
pop
test
inc
cmpsb
sbb
mov
fsubr
mov
jg
iret
sub
or
mov
add
push
out
mov
dec
scas
add
pop
fildll
push
stos
out
pop
jmp
inc
inc
ret
in
andb
leave
in
addl
mov
jne
xchg
sbb
insb
add
fidivrs
push
and
je
sahf
jb
ficoml
fldenv
outsl
in
push
dec
bound
cmc
push
and
lret
es
or
sahf
bound
mov
and
push
aam
test
notb
or
mov
lods
sti
stc
je
inc
test
mov
fistpll
adc
jge
int
lret
repz
in
mov
ljmp
popa
cmp
mov
push
lcall
cmc
bswap
and
fldt
jge
and
cmpsl
pop
sbb
xchg
mov
scas
cmp
or
sbbl
and
iret
mov
sbb
jb
in
std
cmpsb
inc
icebp
xchg
lods
push
inc
lea
sub
inc
in
sti
pop
fcmovnb
call
stos
inc
cltd
data16
pop
fdivrs
fwait
jl,pn
sub
rorb
cmp
lahf
ret
lcall
jne
loop
adc
fstl
jle,pt
jle
in
mov
sbb
xor
mov
in
shrl
pop
decl
xor
jmp
mov
sub
mov
inc
sub
jae
xor
cld
pusha
int3
lds
into
loope
push
shl
xchg
test
icebp
push
sub
jle
push
sub
pushf
cmp
lret
jge
out
adc
sub
gs
and
insb
cmpsl
push
dec
jmp
cli
add
xorl
gs
aam
iret
pop
movsl
cs
or
aaa
mov
fiaddl
hlt
iret
xor
xchg
lea
or
icebp
test
adc
push
fmuls
mov
mov
dec
test
push
hlt
fdivl
push
mov
xchg
insb
mov
adc
jbe
xchg
mov
lds
push
inc
push
jge
hlt
pusha
sub
sti
mov
pop
cltd
fistps
pop
aaa
mov
inc
test
inc
int3
and
dec
adc
inc
cwtl
repz
outsl
jmp
push
shll
es
sub
sarb
mov
repz
icebp
pop
cltd
jl
mov
pop
cmp
cmpsl
lds
mov
dec
lods
nop
jle
lret
mov
jo
pop
xchg
data16
xchg
js
outsb
ss
jecxz
loop
outsb
sub
aas
pop
cmc
jo
test
cmp
test
sti
adcl
cs
pop
adc
insl
push
popf
sbb
dec
je
jge
enter
xchg
inc
jo
lods
mov
fidivl
mov
or
push
dec
lahf
out
das
jp
add
sbb
shrl
cld
daa
add
cmp
les
push
daa
frstor
aas
jno
imul
add
clc
sbb
pushf
popa
andb
jbe
aam
insl
shl
mov
fs
loop
sub
inc
outsb
pop
jle
lret
push
int
xor
or
jl,pt
inc
sbb
dec
ss
pop
loope
inc
stc
push
stos
inc
test
enter
push
xorl
lock
repnz
test
andl
in
push
in
pop
push
les
xor
insb
inc
stos
jg
stc
or
pop
movntps
and
jno
movsl
pop
xchg
xor
and
adc
inc
inc
f2xm1
lods
dec
jecxz
adc
or
movsb
dec
movsl
rcrb
out
push
lods
stc
jecxz
push
adc
adc
xor
out
fsubrs
cltd
sahf
pop
aad
jp
cmp
daa
jbe
pop
sbb
jp
sarb
sbb
out
mov
sub
jnp
pop
shrb
in
outsb
sti
xor
pop
fs
test
push
lahf
or
sbb
add
push
call
jae
fxch
cs
scas
pop
in
dec
loop
pushf
stos
inc
popa
adc
lret
jmp
imul
shl
push
lret
and
mov
outsb
dec
add
adc
mov
adc
dec
mov
in
leavew
xchg
sub
das
mov
dec
xchg
or
sub
loope
xor
dec
inc
sahf
mov
and
das
push
imul
in
inc
stos
lock
mov
aam
mov
push
rcr
pop
cmpsb
mov
mov
imulb
jmp
mov
and
das
push
out
mov
imul
ljmp
mov
mov
out
outsb
adc
clc
adcl
pop
xor
mov
xor
cmc
mov
call
ja
lods
add
test
xchg
xchg
cli
imull
sbb
pop
add
and
das
pop
andb
jle
out
push
aas
and
push
lret
cltd
dec
bswap
mov
ret
fldt
jp
stc
jl
xchg
xor
dec
sarb
sbb
les
jle
mov
push
cmc
xor
mov
sbb
sub
shrb
mov
lock
xor
dec
sahf
ss
out
xlat
xchg
jno
jmp
in
cmp
mov
nop
aas
int
pop
aad
lcall
in
mov
mov
cld
push
or
jne
into
push
fisubl
add
mov
cmc
inc
shr
lods
xlat
lahf
divl
stos
or
stos
mov
jle
pop
push
mov
dec
sub
sbb
adc
rolb
cmpsb
daa
push
jo
rol
bound
sbb
pop
lret
movl
pop
mov
in
mov
ficompl
pop
mov
fwait
cld
in
fdiv
pop
add
sub
repz
pop
lret
adc
nop
inc
lock
dec
mov
shl
hlt
inc
data16
mov
push
shrb
lods
xor
rcrb
xorl
hlt
nop
in
fistl
xchg
roll
pop
das
ljmp
das
sbb
mov
mov
test
pop
or
lret
imul
mov
cs
push
lds
adc
xchg
adc
int
mov
lret
and
push
mov
xchg
loopne
dec
push
mov
icebp
mov
or
loope
push
push
or
mov
or
add
pop
insb
jb
xlat
mov
xchg
movsl
dec
insb
xchg
mov
das
ds
stos
mov
xchg
add
xor
xchg
inc
inc
sub
or
mov
mov
or
pop
add
lods
push
inc
push
cltd
xchg
dec
lods
xor
push
push
test
mov
mov
sub
mov
jle
push
arpl
xchg
incb
pop
lods
mov
mov
je
mov
mov
pop
fdivl
pinsrw
cmp
or
push
jne
sbb
out
rorl
mov
pop
mov
xsha1
cmpsb
mov
and
stos
mov
outsl
fldt
lods
dec
je
mov
pop
imul
mov
add
int3
cmp
std
mov
sub
add
stc
xor
cwtl
adc
cli
stc
orb
nop
sub
pop
repz
call
mov
mov
cmpl
shl
pop
dec
and
fwait
push
cmp
fdivrl
cmpsl
and
push
mov
xlat
test
xor
fmul
lret
call
int
sar
xor
in
add
push
push
sbb
into
cmc
adc
xor
and
test
std
mov
cmp
aaa
jmp
aad
mov
pop
sub
xor
and
outsl
mov
adc
insb
das
jns
ja
flds
add
fcomi
or
insb
sub
test
fdivl
cs
xchg
in
test
inc
aas
popf
pop
add
mov
std
ljmp
lret
out
out
xlat
adc
fsubs
add
stc
popf
scas
daa
dec
mov
jmp
or
icebp
cmp
imul
pop
mov
cmp
int
cmp
and
pop
shrb
icebp
mov
jmp
hlt
js
fldcw
ret
add
mov
mov
js
inc
stos
into
adc
ds
jmp
cmp
out
add
clc
mov
xchg
push
stc
dec
push
cmp
add
scas
and
sub
movsb
pop
cmp
scas
call
fldcw
stos
mov
or
jo
insl
add
pop
fdivrl
fdivs
cmp
sahf
or
sub
mov
mov
push
jb
movsl
jmp
lahf
mov
fsubrl
or
inc
aam
xor
sbb
inc
fiaddl
mov
enter
adc
xchg
scas
cmp
loopne
and
xor
rorl
pop
add
cmp
clc
fidivrl
fisubs
mov
pop
sub
mov
scas
mov
sbb
adc
dec
push
and
or
test
subb
std
and
mov
xchg
aam
add
mov
in
inc
out
pop
popf
out
fsubr
stos
add
out
js
shlb
rorl
hlt
ljmp
lahf
negl
lods
loope
insl
xor
mov
je
sub
les
into
gs
faddl
out
mov
je
xchg
pop
aad
jo
jg
sub
mov
cli
pop
jl
cmp
sub
shr
popf
es
out
xchg
in
out
scas
pop
jb
xchg
jl
negl
pop
mov
add
push
xor
mov
or
mov
clc
xor
daa
adc
xchg
jne
jb
call
adc
inc
pop
repz
dec
jb
in
adc
loop
mov
fiaddl
enter
mov
push
or
cmp
add
imul
bound
mov
bnd
loopne
push
outsb
jmp
or
mov
into
or
nop
inc
lahf
stos
div
mov
daa
add
movsb
jo
mov
pop
sahf
mov
jecxz
daa
sbb
cld
jb
cmp
gs
add
push
push
push
mov
or
out
mov
jb
scas
jp
xor
cld
adcb
mov
sahf
xor
call
mov
push
mov
in
cltd
mov
insl
cmp
lods
mov
lea
ret
jae
inc
fsubl
push
fnstenv
arpl
ljmp
shl
cmpsb
add
jb
dec
imul
lods
inc
push
bnd
push
xchg
or
mov
jae
loope
pop
daa
or
jecxz
out
push
in
popl
mov
sub
dec
pop
pop
inc
or
ret
shrb
jno
movsl
loop
out
add
sbb
ret
adc
loope
sbb
lahf
push
cmc
insb
lsl
xchg
xlat
adc
or
insb
inc
push
nop
mov
lret
mov
sub
add
and
loop
sbb
cmpsb
jg
lcall
jne
fadds
nop
sbb
mov
sub
mov
movsb
xchg
xorl
nop
sbb
add
add
mov
in
and
out
add
dec
lods
lahf
fsubp
lds
jb
nop
negl
jnp
mov
xchg
pop
cmp
into
mov
xor
cmpsb
gs
mov
rol
pop
jl
out
popf
and
add
out
xor
or
mov
push
add
roll
or
enter
ljmp
adc
mov
jo
or
sbb
lds
shll
sub
mov
call
sub
mov
adc
into
jle
andb
outsl
jl
shrl
xorl
outsb
insb
push
xchg
add
add
mov
pushf
fs
xchg
sub
mov
adc
repz
mov
jp
call
pop
mov
sub
outsl
lahf
sub
inc
pop
pop
jb
ret
pop
movsb
sar
or
mov
cli
or
das
sub
aad
pop
loopne
xchg
mov
shll
jecxz
xchg
push
jbe
push
inc
mov
arpl
lahf
and
add
mov
lret
jle
shrb
adc
xchg
outsb
std
test
pop
cmp
divb
push
mov
aam
xchg
mov
push
sbb
mov
mov
dec
pop
aaa
shlb
cltd
lods
data16
out
lods
sub
mov
sub
pop
imul
mov
daa
and
sbb
mov
sahf
jp
adc
lds
pusha
rclb
pop
mov
push
xor
push
adc
mov
pop
orl
test
or
adc
push
outsb
pop
cli
or
jo
sbb
je
punpcklwd
mov
sahf
or
arpl
or
inc
int3
outsb
in
sbb
sub
repz
icebp
sarb
shrl
enter
loop
push
and
inc
fdivl
xchg
pusha
or
push
loope
mov
or
and
pop
lds
or
int
pcmpeqb
push
xlat
inc
xchg
scas
add
inc
cs
push
jno
mov
mov
loope
ret
jecxz
pop
push
mov
mov
pop
mov
push
jle
rcrl
jne
jbe
fs
mov
in
cmp
lret
lock
js
adc
jp
ds
sub
jne
inc
inc
add
sub
add
xchg
scas
das
outsb
rcl
cmpsb
sbb
jle
mov
mov
cltd
xor
pop
outsb
ret
icebp
push
ds
mov
iret
pop
pop
jno
mov
aas
js
pop
les
in
pop
sahf
addr16
xor
mov
pop
ds
lar
dec
pop
mov
lods
sub
xor
sub
pop
loopne
into
push
and
repnz
sbb
xor
enter
pusha
inc
xlat
loopne
dec
test
xor
test
sbb
push
add
shrl
nop
sbb
sbb
sub
dec
jl
push
push
stc
and
fs
movsl
inc
and
je
mov
pop
movsb
add
jl
push
aas
shr
add
insb
jle
xchg
mov
rcrl
pause
xchg
jbe
adc
cmp
shrb
scas
repz
jns
repnz
mov
add
mov
out
sub
movsl
lock
js
dec
dec
xchg
test
pop
fimuls
dec
jecxz
incl
inc
mov
stos
out
add
sub
data16
inc
sub
push
test
imul
add
adc
ror
insb
mov
ret
hlt
ret
imul
sbb
je
divb
loopne
mov
jae
jbe
adc
mov
or
bound
xchg
xchg
jle
sbb
inc
sub
and
or
inc
lret
dec
arpl
xchg
xchg
xor
push
sbb
stc
cmpsb
imul
pop
fcmovnbe
pushf
sti
cmpsl
mov
flds
jg
clc
arpl
jo
fcos
subb
test
cwtl
cmp
insb
jg
mov
xchg
dec
cmovs
jb
push
addr16
xchg
decl
aaa
jne
test
shl
adc
or
les
cmp
in
sbb
mov
jnp
dec
adc
jl,pt
inc
fwait
loop
push
cmp
sti
or
fistps
dec
pop
push
std
fidivs
inc
pop
mov
lea
inc
cmovs
pusha
lods
push
xchg
mov
mov
mov
stc
into
xchg
or
stos
loope
lods
and
mov
xor
pop
stc
push
lret
fs
ss
xchg
lret
pop
add
aam
mov
dec
push
out
pop
xrelease
icebp
test
xchg
push
stos
push
xchg
outsl
xor
out
scas
sbb
scas
xor
sbb
sbb
jbe
pop
hlt
sub
scas
xchg
or
mov
fnstsw
loope
xchg
mov
rcll
das
loop
cmp
int3
pop
test
push
and
jno
arpl
aam
push
xchg
ret
pop
movb
xchg
dec
push
test
popf
sti
jbe
push
ljmp
cs
and
jp
and
push
subb
xchg
scas
clc
call
fdivl
stos
add
jg
cld
mov
test
sbbl
cmp
jg
testb
inc
inc
cmpsb
jb
fs
lcall
in
stos
fadd
inc
pusha
jl
fdivrl
xor
flds
decb
mov
rol
icebp
jg
inc
xor
rcr
icebp
inc
push
inc
hlt
mov
insb
dec
cli
pop
push
aas
ret
js
mov
test
inc
frstor
lock
mov
fnsave
lcall
fidivl
fcom
dec
mov
shlb
les
scas
jb
ljmp
and
leave
push
ss
xlat
fsubrs
jnp
mov
dec
insb
push
ret
mov
cli
cmp
stos
add
stos
and
push
mov
in
jge
sbb
fwait
and
shl
jnp
mov
sarb
mov
ja
mov
sub
cwtl
std
aaa
add
push
cs
adc
pusha
fbld
test
pop
jb
sbbl
sub
push
inc
and
andl
push
das
subb
adc
xchg
mov
arpl
adc
and
xlat
sub
or
or
push
cmp
lea
mov
cltd
bound
inc
xchg
cli
xor
mov
push
mov
sbb
push
jmp
mov
pop
loop
push
mov
jle
or
pop
repnz
flds
mov
pushf
and
jecxz
mov
cs
adcl
mov
sbb
xor
gs
add
xor
adc
cmp
nop
push
or
call
in
in
int
pop
in
stc
cs
outsl
sub
dec
int3
push
mov
aam
dec
repz
jecxz
pop
out
and
jo
mov
mov
std
mov
jbe
nop
adc
in
mov
push
mov
dec
repz
cmp
cmp
xlat
pop
movsl
or
mov
push
dec
xchg
inc
ret
push
inc
out
mov
jne
jge
xor
adc
jo
adc
shl
cmp
jmp
rcl
imul
dec
or
in
lret
inc
cmpsb
sub
in
xor
shrb
popa
pop
sub
mov
xor
cs
sahf
lds
jl
mov
outsb
out
test
xchg
les
outsb
mov
popf
jb
iret
cmp
call
loopne,pt
pop
and
sbb
push
mov
decb
or
mov
mov
and
xchg
fcmovb
mov
outsb
or
jecxz
aam
cmc
mov
lret
cli
ret
gs
cwtl
mov
int
stc
inc
pushf
jae
push
xchg
mov
cli
pushf
out
and
mov
pop
int
xchg
out
jno
mov
and
repz
shrl
push
xor
dec
fadd
fnstcw
aad
jge
outsl
mov
pushl
xor
cmp
adc
test
sti
aas
xchg
and
push
repnz
and
cmpsl
ds
lea
pop
pop
jo
mov
enter
mov
orl
push
stc
test
pop
repz
shlb
fisubrl
or
sti
jae
and
cmp
sbb
enter
mov
and
adc
fldenv
add
mov
sbb
add
jl
jno
lods
inc
iret
ficoml
jmp
lret
cmpsb
cld
xor
cmp
loope
test
out
jg
pop
mov
dec
inc
mov
aam
xorl
insl
in
push
cmovo
ret
xor
xrelease
in
pop
pop
cltd
mov
add
les
push
sbb
stc
test
jp
fldcw
jne
das
cmpsl
leave
mov
pusha
cmp
sbb
loope
cmpsl
gs
fsubrs
adc
ss
or
cmp
sub
imull
mov
pop
test
imul
popa
pop
imul
mov
jle
aam
mov
cmp
out
push
adc
das
jae
pop
in
mov
mov
dec
fdiv
scas
inc
sbb
mov
jp
jae
lcall
jg
sahf
in
inc
cltd
cltd
std
cwtl
lods
mov
xchg
xor
or
mov
pop
int
inc
xchg
sub
cmpsb
cmp
cmp
push
sti
xchg
push
push
add
push
and
roll
leave
das
pop
xor
add
and
mull
cli
sbb
dec
pop
cmp
adc
xchg
outsl
in
test
cld
ja
or
mov
and
daa
pop
daa
inc
mov
or
inc
leave
jl
push
int
loopne
ds
push
pop
push
push
or
push
cmp
dec
dec
pop
xlat
aas
loop
cmp
jne
xlat
sub
loope
movsl
mov
imul
aad
xor
jmp
popf
lock
inc
mov
out
mov
jbe
lea
dec
dec
iret
das
dec
cmp
imul
and
lods
int3
jbe
fs
fistps
and
add
xchg
fcmovbe
lods
and
rol
inc
adc
sahf
rorl
rolb
xchg
jmp
xor
adc
mov
and
dec
aam
repnz
jg
push
movsb
add
ljmp
xchg
shrl
mov
or
cs
jge
lret
scas
cmp
outsl
jl
add
inc
sbb
mov
sahf
lods
inc
pop
out
cmp
and
enter
arpl
ret
cmp
xchg
daa
mov
into
hlt
inc
clc
shll
xor
sub
adcb
mov
adc
cmp
sti
cmpb
add
or
sbb
addr16
mov
lahf
daa
jns
clc
sahf
bound
jmp
popf
adc
pop
push
and
xchg
xchg
xchg
test
ds
inc
sbb
pop
mov
arpl
add
ljmp
sub
imul
adc
xor
add
shr
int3
imul
adc
and
rcl
xchg
adc
mov
cltd
into
gs
push
add
in
das
sub
mov
fwait
ret
outsl
in
fdivl
popf
inc
stos
sbb
or
out
cmp
aad
adc
fadds
push
lock
movsl
mov
into
push
push
inc
decb
insb
ds
incl
call
mov
decl
movsl
sbbb
jns
push
push
insb
test
mov
movsl
pop
ja
dec
pop
inc
inc
test
xor
cmpsb
mov
and
js
cltd
mov
adc
shl
ja
test
ret
imul
inc
fst
jo
cmp
das
aad
popa
dec
sub
sbb
in
xor
mov
addr16
inc
sub
jno
imul
sbb
mov
insb
jae
mov
xchg
ret
jp
lcall
and
popf
js
and
lret
call
lods
cmpsb
xor
fnstcw
or
pushf
mov
aam
test
or
jno
or
scas
jnp
loopne
ficoms
test
pop
jb
rcrl
enter
dec
push
orb
add
mov
test
pop
mov
into
and
repnz
mov
rol
out
add
pop
mov
insb
movsl
in
lea
xor
fisttpll
push
das
repz
sub
jnp
push
adc
mov
test
add
sub
les
and
addl
lahf
xchg
xor
jl
imul
into
sbb
jl
adc
sarb
test
cltd
sti
dec
movsl
push
mov
jle
and
push
scas
mov
and
mov
or
sub
lret
dec
mov
push
inc
pusha
movsb
sahf
lcall
flds
call
fisttpl
dec
out
cmp
adc
int
fildl
or
pop
xor
cwtl
ret
stc
orb
fidivs
push
adc
lahf
imul
mov
or
js
test
leave
pop
sub
inc
xchg
daa
xor
or
mov
out
xchg
push
fisubs
mov
mov
fnstsw
pop
jbe
mov
pop
xchg
push
rol
push
les
faddl
mov
sbb
or
mov
mov
or
add
mov
adc
inc
aaa
bound
push
popf
mov
mov
jmp
xchg
pop
sahf
out
lds
cmp
push
xor
mov
mov
in
ret
fistps
jo
aas
je
cltd
not
xchg
pop
ret
xor
inc
hlt
imul
mov
outsb
sub
or
imul
xchg
in
inc
jle
clc
push
pop
in
stos
sbb
call
or
push
ret
xchg
cli
in
mov
xchg
jecxz
clc
inc
sarl
jmp
fs
mulb
dec
pop
les
and
adc
addb
cwtl
das
dec
sub
int3
push
ret
dec
cmc
inc
adc
insb
cmp
test
inc
mov
push
jmp
stc
push
test
jge
or
jb
mov
or
aaa
mov
mov
sbb
fwait
dec
or
lods
gs
ret
je
aas
dec
ds
and
push
scas
test
std
cltd
ss
lret
je
pop
sub
jno
cwtl
addr16
push
mov
jp
pop
loopne
inc
sub
jnp
inc
lods
jae
sbb
jno
iret
call
adc
mov
loop
push
mov
inc
out
xchg
adc
add
out
push
cltd
pop
addb
sub
pop
imul
mov
in
push
cmpb
sbb
das
stos
out
dec
rolb
sahf
stos
cli
xchg
push
cld
les
icebp
lret
ret
fistps
dec
dec
lock
sub
or
push
xchg
push
leave
sti
fwait
testb
ficomps
jbe
adc
sub
das
push
nop
add
divb
push
ds
and
inc
ret
add
mov
cmpsb
rcrl
aam
loopne
popa
adc
jb
jae
add
rclb
int3
mov
out
popa
inc
in
lret
cld
outsl
adc
and
gs
pop
int3
mov
ja
ljmp
mov
jp
push
lock
pop
dec
adcb
push
aam
popf
or
xchg
cmpl
pushf
push
stc
rclb
xlat
mov
mov
adc
adcl
inc
xchg
xor
inc
shlb
movsb
pop
adc
xchg
adc
jno
jmp
iret
cwtl
xor
test
lods
das
add
sbb
scas
cmp
imul
std
sub
shrb
js
fucomi
add
aas
xchg
aad
push
pop
mov
loope
ja
cmp
test
mov
insl
jg
pop
out
sbbb
imul
out
arpl
dec
mov
in
and
adc
adc
jo
pop
out
rcll
test
out
loope
xor
jle
lahf
test
lock
adc
popa
pop
ds
fildll
cmp
fcom
out
arpl
xor
stc
cmpsb
push
pop
jbe
lcall
aas
sub
jnp
adc
fnstsw
add
mov
lods
and
ja
sub
das
addr16
pushf
or
addr16
pop
push
loopne
sbb
gs
xor
loope
mov
pusha
shlb
jge
add
push
dec
mov
push
out
cs
cmp
testb
xchg
cltd
add
fwait
jno
fildl
sbb
xchg
and
sti
dec
ffreep
sub
fsubs
inc
data16
pop
add
dec
cmp
out
xchg
pusha
cmpsl
out
sbb
idivb
or
or
lods
pop
jp
sbb
pop
sahf
mov
aam
pop
jns
sub
bound
out
and
stos
cmp
jo
or
mov
jbe
and
loope
mov
push
sub
cmp
mov
shlb
hlt
pop
icebp
jmp
daa
mov
mov
inc
hlt
cmpsl
dec
dec
das
add
fwait
mov
rol
lock
xlat
rcrl
pop
imul
xor
rolb
mov
inc
pop
loopne
sbb
sub
inc
xlat
cmc
js
or
dec
int
pop
and
mov
in
loopne
dec
sbb
enter
dec
dec
or
rcrb
fsubr
shlb
mov
sub
mov
adc
fbld
cvtpi2ps
sti
imul
popa
pop
xor
movsb
cmp
cmp
jge
mov
andl
orl
xlat
push
mov
dec
pop
aas
cld
out
enter
sar
add
repz
pop
es
loopne
cmp
cmp
push
push
movsb
addl
movsb
mov
test
iret
and
sub
aaa
mov
mov
fiadds
add
mov
jno
test
out
jle
sbb
push
mov
fdivs
loopne
ds
dec
in
ja
jle
inc
mov
push
or
pop
add
aad
mov
inc
je
ljmp
jno
mov
ljmp
test
in
mov
push
xorb
cmp
clc
cmp
adc
mov
cld
scas
subl
stos
out
jno
popf
mov
jle
test
jecxz
mov
popf
aas
xor
js
mov
in
jae
sti
xchg
into
mov
popf
or
mov
imul
imul
notb
js
adc
pop
sub
jns
loope
shrl
mov
out
xchg
mov
lock
nop
fbld
out
lret
arpl
push
push
push
lret
cmp
rolb
lret
fucom
adc
mov
sbb
jge
fwait
iret
movsb
adc
jae
mov
xchg
xchg
pushf
gs
pop
xor
in
sub
push
sub
int
out
adc
adc
mov
sbb
ret
cwtl
adc
inc
loopne
iret
push
je
shlb
mov
pusha
daa
jg
enter
bound
push
push
dec
push
pop
nop
mov
imul
lret
es
mov
jg
sbb
add
sub
and
int
ds
addr16
xor
jmp
cmpl
int
rorb
bound
cmp
arpl
mov
mov
out
and
movsb
repnz
shrl
into
mov
or
fimuls
pmuludq
adc
mov
dec
or
push
pop
mov
lahf
orl
adc
dec
push
pusha
sbb
cmp
pop
cmpsb
inc
inc
mov
dec
and
lcall
sub
data16
test
adc
fdivs
sahf
dec
popf
sbb
jmp
inc
sbb
add
js
and
out
push
cltd
adc
add
mov
pushf
outsl
das
subb
mov
mov
xchg
imul
jno
add
xlat
out
iret
mov
mov
loopne
mov
mov
leave
cs
cld
inc
into
xchg
mov
in
push
imul
imul
in
mov
lret
sbb
incb
lods
cld
movsb
sbb
sbb
fsubs
test
jbe
cmpsb
push
jo
cmp
mov
stos
ficomps
cli
jg
in
push
inc
outsb
push
divb
orb
mov
dec
outsl
aam
mov
push
ljmp
ja
cmc
int
sub
in
int3
jae
inc
fadd
sti
pop
cli
sbb
lret
loope
jp
psubusb
rorl
cmp
inc
cmpsb
sub
stos
add
push
xor
mov
cmc
fbld
sbb
mov
xor
and
dec
fldl
repnz
adc
filds
or
cmc
ja
or
aas
outsb
xor
out
ljmp
xchg
cmpsb
shl
stc
jp
jb
fisubl
imul
repnz
xchg
sbb
adc
daa
ljmp
pop
loope
cmp
das
pop
add
jle
insb
push
out
aaa
push
lds
jmp
jmp
inc
xchg
xlat
repz
inc
outsb
call
mov
and
push
lods
lea
mov
sbbb
lea
les
mov
pop
imul
loope
out
in
inc
sbb
mov
movsl
leave
cmpsb
pop
sub
jb
aad
fnstsw
push
jmp
movsl
mov
mov
movsb
jle
sbb
push
std
mov
iret
loop
sbbl
decl
stc
ret
outsl
push
into
dec
sub
cvtsi2ssl
les
push
iret
pop
cmovle
test
fwait
sti
jne
add
fcoms
pusha
jmp
int3
stos
mov
pop
in
test
insb
into
orl
sub
dec
stos
jg
xor
shll
pop
in
cmp
shr
xor
mov
std
aas
add
sub
dec
and
lret
cmpsl
ja
ds
fs
cmp
push
popa
mov
xchg
stos
ss
push
jl
sti
mov
mov
cmpsb
in
adc
push
mov
push
dec
jns
fwait
shll
loop
mov
dec
dec
add
and
cmp
mov
bound
pop
int3
xor
push
mov
xlat
fnstenv
jnp
cmp
or
jne
cmp
sbb
and
shrl
mov
lcall
jne
mov
jg
cmc
sbb
ret
mov
clc
jg
mov
mov
or
push
pop
jbe
aaa
rcl
add
dec
hlt
test
repz
adc
mov
and
cld
and
pop
jg
bound
cld
lods
push
add
es
lret
and
rcrl
jo
out
out
ret
mov
adc
inc
inc
addr16
daa
sar
mov
push
in
lods
pop
in
sbb
ret
scas
sub
xor
pop
les
push
aas
xchg
outsl
addr16
jns
shlb
xchg
add
clc
ja
sarb
in
add
push
aam
pop
dec
int3
cmp
push
int
cmpsb
sub
jmp
cltd
iret
cwtl
repnz
jecxz
jns
pushf
and
out
add
xchg
ljmp
jne
sub
pop
sub
orb
jns
jmp
or
inc
mov
jl
int
jmp
and
jns
mov
enter
or
insl
mov
inc
scas
mov
enter
cmp
in
sbb
add
insl
mov
int3
sbb
inc
pop
push
sub
hlt
insl
fmul
ss
mov
mov
add
decl
jae
xchg
xchg
icebp
leave
cld
daa
mov
lret
push
lods
mov
jmp
adc
popf
pop
cmp
dec
sub
outsb
adc
imul
or
mov
mov
int
push
fsubs
lods
fwait
and
int
adc
ss
test
fwait
out
push
inc
int3
repz
rorl
je
cmp
test
cld
sti
add
mov
add
test
mov
rolb
or
or
jp
mov
cmpsb
fwait
mov
sbb
xor
jno
pusha
mov
movsb
cmpsl
sbb
inc
les
cmp
cld
dec
movsb
cmpsb
ret
xchg
jb
push
mov
cmp
mov
cmp
jecxz
dec
cmpsb
mov
in
sbbl
ja
xchg
imul
ljmp
xor
dec
loopne
insl
fwait
xchg
cli
dec
add
out
mov
popf
add
stos
mov
bound
adc
test
xchg
jno
jns
imul
pop
jne
cmp
xorb
push
fsts
mov
xorl
and
push
add
clc
fsubs
inc
fnstsw
xchg
cmpsl
adc
xor
call
mov
out
icebp
mov
and
inc
shl
mov
adc
sahf
mov
call
dec
fbld
sub
push
adc
ficompl
add
in
push
jge
push
cmp
sub
lds
addr16
pop
lods
xchg
mov
push
xchg
ret
fldl
mov
shrl
lock
jmp
test
jo
fstpt
cmp
jg
out
mov
xchg
mov
addr16
jmp
fs
push
loope
mov
pop
jne
jmp
cmp
loope
mov
sbb
cli
daa
ljmp
dec
fisubs
mov
xchg
in
mov
jns
mov
mov
cmp
js
sbb
repz
int
add
sbbl
lcall
sub
andb
push
add
shl
dec
test
sub
adc
mov
or
pop
adc
pusha
int3
sbb
mov
pop
adc
add
decb
pop
fwait
inc
mov
jno
cmp
out
pop
pop
insb
mov
inc
xor
sarb
sbb
stos
ret
dec
arpl
pop
sub
pop
xchg
lods
sbbl
imul
push
cmp
in
in
cmp
lds
leave
in
test
dec
ljmp
leave
xchg
nop
data16
mov
daa
daa
je
std
movl
mov
insl
mov
insb
pop
inc
lods
loopne
ret
push
lods
stos
dec
push
enter
inc
dec
fdivrl
sbb
xlat
ss
pushf
lds
shrb
lret
mov
jb
mov
mov
rcrl
stc
addl
adc
mov
imul
sub
leave
fsub
jne
movsl
cmp
js
mov
ret
jp
cmp
test
mov
test
push
mov
fisttps
jnp
clc
jl
push
push
mov
pop
dec
scas
cmp
scas
push
add
xlat
scas
cld
and
push
mov
fdivl
mov
into
adc
mov
xchg
and
mov
cmp
push
dec
insl
daa
cli
xchg
std
cs
push
mov
test
pop
lea
jbe
sbb
jae
pop
popf
xchg
dec
mov
fcmove
insl
xor
mov
fs
jp
sbb
or
clc
ja
mov
cwtl
loope
std
xchg
test
jae
dec
mov
sbb
mov
cwtl
cmp
test
iret
or
push
and
mov
pop
jb
pop
pop
and
xchg
sub
in
addr16
imul
jmp
in
loopne
inc
pop
in
pop
dec
lret
out
icebp
scas
data16
xchg
inc
test
sub
mov
mov
push
mov
push
mov
jmp
and
mov
dec
push
push
and
xor
stc
pop
inc
push
cli
sbb
pop
test
mov
cwtl
movsl
insb
inc
lods
popf
pop
add
cwtd
xor
mov
test
mov
xchg
jge
sbb
push
and
mov
addr16
mov
int
jmp
add
mov
xchg
adc
testl
jne
jmp
push
out
test
gs
into
jnp
popf
pop
out
es
mov
sbb
and
xchg
sbb
xchg
jle
insl
cmp
add
cmp
mov
mov
scas
cmp
loopne
xchg
mov
mov
jg
popf
ljmp
in
sbb
in
aad
scas
push
or
mov
pusha
sbb
rorb
mulb
aas
pop
out
mov
inc
lret
jno
mov
sbb
adc
insb
xchg
inc
addr16
movsl
dec
loope
pop
and
mov
mov
cmpsl
push
clc
or
nop
dec
and
jno
push
pop
loope
lods
cmp
inc
mov
jg
mov
fwait
mov
test
iret
into
aas
or
andl
sbb
mov
mov
pop
add
loope
loope
push
mov
loope
dec
adc
xor
aaa
xlat
call
leave
movsb
add
es
mov
push
dec
loopne
xor
and
movsb
xchg
insl
pop
pop
mov
lds
add
addb
inc
sbb
lahf
test
jg
xorl
cs
cltd
push
push
mov
jl
movsb
push
or
lcallw
inc
loop
mov
aam
jle
adc
mov
sbb
in
jnp
push
lock
push
movsb
jge
sahf
cmp
insb
jl
out
lock
mov
push
fcmovnu
mov
sub
pop
push
mov
ret
insl
inc
bound
nop
xchg
in
jno
in
mov
insb
adc
xchg
sub
pop
movsb
stc
aam
sub
mov
mov
movsb
jg
sub
mov
mov
dec
sar
xchg
enter
fldt
popf
shr
enter
add
lds
jmp
daa
int
scas
arpl
mov
cmovno
stos
stos
es
enter
adc
inc
dec
pushf
cld
cld
and
xor
lcall
sub
mov
shll
or
negb
loop,pn
cmp
mov
stc
fisttpll
dec
lods
adcb
dec
loop
sbb
stc
mov
mov
in
and
bound
push
js
pop
leave
and
hlt
inc
shll
test
out
mov
rcrl
dec
adc
jo
xchg
mov
or
or
pop
jge
or
xchg
testl
jle
jae
sarl
jo
fistps
mov
pop
mov
mov
sub
mov
xorb
xrelease
stos
inc
pop
mov
mov
rorb
fdivr
push
mov
mov
mov
inc
loop
les
mov
lcall
gs
iret
inc
and
out
std
push
sbb
popa
cli
dec
fimull
pop
inc
adc
adc
lcall
pop
jne
mov
rolb
clc
iret
mov
adc
pop
mov
fdivrl
add
test
and
fcmove
pop
dec
xor
jle
js
push
mov
movsl
xchg
xor
pop
lret
jge
add
mov
mov
ja
mov
and
sub
jmp
add
ds
stos
mov
rolb
mov
mov
cli
scas
inc
sub
adc
pusha
addr16
mov
js
dec
pusha
sub
inc
xchg
pop
popf
inc
fsin
aas
les
pushf
pop
int3
dec
jns
jl
ret
arpl
jns
add
aad
test
fwait
nopl
add
cmp
les
and
rorl
sti
repnz
lods
int3
mov
xor
out
dec
in
pushf
mov
jnp
mov
lret
cltd
sbb
int3
cltd
push
and
push
xchg
cmp
inc
loope
pop
pushf
fs
ss
pop
xchg
cmc
push
mov
pop
add
cmp
imul
inc
arpl
pop
jmp
lea
daa
mov
sbb
inc
mov
insl
or
cmp
or
int
push
mov
xor
mov
fxch
outsb
das
movsb
pop
sahf
mov
je
jmp
mov
jnp
ret
dec
aam
jmp
lahf
pop
out
jl
loope
or
scas
adc
ficomps
mov
pop
jo
lock
ljmp
push
fnstenv
roll
jmp
inc
fldt
dec
push
adc
mov
nop
push
ljmp
push
inc
pop
test
ret
repz
jbe
jg
outsb
loope
adc
dec
add
and
xor
cwtl
mov
sbb
test
dec
push
insl
test
call
daa
adc
inc
xlat
in
insb
and
repz
jle
int
cmp
inc
fwait
repnz
idivl
sub
mov
out
pop
inc
sbb
mov
loope
repnz
mov
sti
sub
dec
clc
push
mov
cli
cltd
sub
adc
mov
fsubrp
sbb
fsubrp
push
dec
mov
andl
pop
into
cs
mov
mov
push
dec
mov
mov
out
lds
lret
out
dec
jecxz
pop
pop
repnz
mov
je
aad
dec
rcrl
mov
sbb
or
es
and
xchg
cmp
cli
push
pop
jne
aam
cmp
xchg
mov
inc
lds
je
mov
mov
jmp
xchg
addr16
rcrl
xchg
insb
jnp
lds
sbb
push
mov
lea
outsl
sub
sets
lods
cs
mov
and
sbb
inc
cltd
sbb
fcmovb
je
repnz
inc
pop
add
jg
mov
fcoms
js
cli
call
xor
repz
pop
in
sarl
sbb
and
test
movsl
sarb
push
je
shlb
nop
rclb
das
inc
test
sbb
in
xor
out
sub
fmuls
dec
dec
push
push
arpl
ljmp
mov
jmp
and
ds
ret
xor
idivl
jg
mov
xchg
test
clc
loopne
dec
pop
leave
sub
popf
pop
out
cmpsl
ds
lret
cld
xorb
leave
jnp
imul
and
loopne
adc
cmp
mov
clc
loop
xchg
pop
stc
mov
xchg
arpl
mov
ret
hlt
mov
or
cmp
lock
cwtl
and
or
push
mov
iret
bound
fcom
pop
mov
in
sbb
jl
mov
lods
fidivrs
mov
mov
mov
clc
inc
imul
aas
mov
push
in
loop
mov
xlat
add
negb
daa
pusha
mull
sbb
rcrl
adc
cli
adc
in
add
ja
mov
push
sub
or
repnz
cmp
jae
push
lcall
lret
jge
mov
outsl
xor
mov
dec
dec
dec
popl
xor
adc
ds
aam
sbb
jno
shll
scas
mov
add
icebp
stc
sbb
dec
sbb
jns
iret
push
xchg
push
xorb
std
xchg
ret
into
and
aas
sbb
loopne
push
xchg
mov
lods
sbb
xchg
std
and
xor
jg
adc
int3
fnstsw
pop
bound
shll
mov
je
stc
pop
je
cs
jnp
pop
shr
mov
fstps
jmp
rorb
and
fucom
mov
arpl
test
int3
popa
nop
mov
dec
insb
fnsave
rorb
ror
mov
xchg
lods
mov
mov
stc
adc
test
rcrb
pop
enter
adc
ret
lods
mov
pop
cmp
fnstcw
sbb
or
aad
push
cmp
out
or
fwait
shrb
and
or
fisttpl
cwtl
mov
je
mov
mov
lds
mov
push
stos
sbb
dec
mov
or
lret
popl
cwtl
mov
out
or
xchg
mull
test
std
mov
loopne
mov
outsb
or
mov
adc
loopne
inc
and
ja
arpl
pop
jbe
and
xlat
jbe
leave
dec
jle
test
sbb
imul
xor
sub
jmp
pop
shll
push
jl
jbe
inc
je
je
popf
icebp
in
popf
jne
adc
js
cltd
and
xor
mov
sub
xor
and
test
mov
lret
push
mov
bound
gs
mov
test
scas
mov
test
mov
divl
addr16
rol
jo
dec
hlt
cmp
xor
push
fildl
sbb
mov
mov
pop
lods
and
mov
sub
mov
fidivrl
nop
fidivrl
outsl
mov
inc
xor
xor
inc
xor
insl
aad
xor
addl
les
scas
add
sub
repz
dec
negb
ja
repz
adc
stos
inc
imul
insl
mov
mov
or
ret
dec
add
mov
je
negl
outsl
nop
or
push
idiv
testl
lcall
add
mov
or
add
repnz
dec
pusha
lods
fidivs
cld
ja
add
mov
shr
push
add
sbb
add
cltd
xor
mov
mov
mov
js
loop
mov
bound
hlt
lret
jg
nop
pop
mov
push
addb
or
jo
daa
xor
push
adcl
and
push
xlat
cmpsl
push
jp
pusha
lea
in
or
dec
jecxz
nop
cmc
popa
pop
loop
les
jg
cld
stos
mov
aas
cmp
roll
stos
inc
sub
dec
scas
mov
pushf
mov
adc
mov
fsubr
mov
mov
add
shll
imul
in
adc
inc
aas
push
add
mov
push
jne
push
in
sahf
push
ljmp
int
incl
and
xchg
das
inc
ret
sub
push
pop
test
std
lods
pop
das
clc
jae
divb
outsl
insl
daa
ljmp
mov
xchg
adc
out
test
and
push
xor
jne
arpl
xor
test
cmc
int
daa
inc
call
divps
or
sbb
rcrb
movsl
loop
ljmp
xchg
sub
aaa
les
lods
scas
adc
in
loopne
xchg
fdivrl
popa
adcb
fdivrs
push
pop
jge
adc
pop
sub
dec
loop
pop
clc
das
mov
test
loopne
push
stos
lock
and
and
mov
cmp
xor
xchg
push
jns
sub
pop
fdivl
xchg
mov
dec
push
and
lret
aas
sub
cld
add
ds
loope
cmpsl
insb
add
or
and
fs
mov
stos
cltd
test
xchg
cmc
jae
cmpsb
stos
bound
mov
rcrl
pmulhw
dec
jg
push
jg
in
movsb
jo
cmp
data16
or
movsb
cmpsl
out
xlat
add
imul
xor
jp
lods
mov
lock
xlat
xor
mov
mov
mov
pop
dec
cmp
std
sbb
xchg
fidivl
jb
jmp
out
enter
inc
and
mov
mov
pop
repnz
rol
loop
fstpl
sbb
cwtl
push
pop
jp
shll
ret
lcall
jbe
mov
and
mov
shll
lret
outsl
mov
cmpps
and
pop
daa
jge
mov
jno
inc
loope
jbe
loope
inc
frstor
push
mov
mov
cltd
je
jp
out
mov
fcomps
mov
pop
xor
sub
inc
pop
mov
out
and
or
movsl
or
adc
or
xor
mov
andl
test
adcb
clc
in
out
inc
in
popf
mov
and
outsl
xchg
mov
cmp
adc
cli
inc
add
xchg
dec
push
inc
xchg
lock
push
imul
adc
push
mov
in
out
mov
dec
or
mov
aam
or
es
sti
clc
pop
push
xchg
std
lods
jne
adc
repz
pop
out
adc
andl
mov
shl
insl
mov
xchg
inc
addr16
push
leave
mov
push
addb
dec
in
orl
jle
les
repz
in
call
or
mov
les
fisubrs
test
cld
mov
lcall
lret
xchg
or
fdivs
mov
out
jae
fists
pop
out
push
xchg
rcl
add
or
push
or
mov
ljmp
push
lcall
xchg
ret
or
jecxz
in
test
out
rcll
jne
dec
mov
loopne
test
dec
pop
push
jmp
mov
mov
pop
cmpsl
loope
and
movsb
fidivl
cld
adc
test
push
nop
inc
idivb
vmwrite
jae
lods
add
or
cli
sub
sub
sbb
xor
push
outsl
fsts
jl
popf
or
cli
shl
pop
iret
xchg
popa
loope
gs
imul
aam
sub
fistl
test
cmpsb
rcll
ljmp
push
std
pop
mov
into
xlat
imul
int3
jo
mov
rcrl
jnp
rorb
loop
xor
ret
clc
and
adc
arpl
push
sbb
adc
data16
cmp
test
xchg
cmp
and
imul
loop
out
xlat
inc
stc
pop
stos
adc
and
rol
adcl
pop
pop
mov
mov
xor
call
test
xchg
sti
popf
jo
mov
call
mov
rcll
xor
adc
ljmp
xchg
adc
dec
push
mov
mov
mov
adc
and
mov
inc
jmp
test
or
jg
mov
fsub
cmp
fsubr
or
cmpsl
lds
aas
dec
cmp
mov
or
push
outsb
sbbb
ja
idivl
dec
xchg
push
rcll
out
xchg
dec
gs
xchg
or
movsb
or
push
stc
loope
shl
or
jl
cltd
lods
xor
popl
dec
sub
testb
sbb
jg
add
in
daa
pop
cmp
adc
outsb
sbb
dec
test
cmp
jns
and
or
fdivs
pop
scas
mov
mov
aam
stos
nop
xchg
xchg
daa
sahf
jbe
sub
mov
outsb
lock
push
push
rorl
sbb
dec
push
orb
sbb
pop
adc
ds
cwtl
xchg
daa
inc
out
movsl
and
pop
cmp
cli
inc
sub
loop
mov
sbb
stos
push
or
push
pushf
cli
jno
mov
adc
jo
inc
mov
test
pop
push
push
ja
mov
mov
in
add
adcl
aas
mov
fdivl
mov
xor
jg
inc
mov
and
mov
add
lcall
aas
jge
mov
iret
inc
int3
outsb
and
dec
loope
pop
mov
test
mov
sub
add
inc
push
in
les
stos
mov
les
shll
fsub
adc
sbb
arpl
stos
jge
push
pop
pop
mov
sbb
or
jae
adc
mov
movsl
mov
and
orl
scas
inc
xor
push
or
adc
push
fcompl
test
jecxz
xchg
rcrb
xor
mov
pop
ljmp
cmc
push
lahf
js
pop
outsb
xor
daa
lock
movsl
mov
mov
push
std
out
lock
pop
xor
mov
lret
cld
push
std
and
push
cli
jmp
and
xlat
outsl
add
mov
sbb
cwtl
test
in
outsl
imulb
inc
insb
filds
cld
mov
jbe
lret
lret
dec
xlat
mov
les
sbb
fxtract
adc
stos
and
inc
enter
in
popa
mov
lods
es
sbb
inc
int3
mov
inc
push
pop
dec
or
jno
cld
mov
cmp
mov
icebp
data16
push
adc
dec
call
leave
fbld
adc
pusha
cmp
xor
sbb
into
xor
xorb
push
hlt
leave
clc
out
bound
jns
jge
sbb
mov
lret
mov
jae
ss
ds
lods
pushf
push
add
add
loope
add
icebp
mov
push
jl
test
mov
mov
fstpl
fadd
leave
imul
pushf
imul
pop
data16
push
jbe
xchg
shl
notl
sub
and
mov
cmpb
cmp
mov
inc
dec
jp
shr
iret
fwait
push
jbe
fdivl
and
dec
jo
and
ljmp
int3
int3
out
cmc
push
xlat
push
dec
mov
mov
cld
aad
jl
sbb
sub
or
xchg
fwait
stc
jge
daa
lret
testl
add
inc
push
jae
fs
fisubrl
mov
loopne
pop
jae
inc
push
cmc
fwait
cmp
push
loope,pn
cli
lods
lds
cld
dec
jecxz
xor
inc
push
js
add
jbe
frstor
cmc
fnstsw
leave
inc
adc
adc
mov
inc
out
dec
adc
and
stos
push
jb
cmp
mov
jl
into
pop
pusha
testb
sbb
fwait
aaa
cltd
imulb
loope
or
mov
test
dec
hlt
xchg
mov
sbb
inc
mov
inc
jne
out
fsubl
push
pop
xor
loopne
fs
je
in
out
add
and
rorl
mov
xor
stos
add
jnp
fisubl
test
test
insl
push
out
fmull
cmp
or
mov
bound
mov
xor
cmc
jo
cwtl
das
and
jb
add
stc
xor
movsb
cmpsl
mov
mov
mov
mov
xchg
stc
mov
outsl
xlat
xchg
and
pop
sub
shrb
adc
pop
cmp
inc
es
sub
jbe
pop
jb
lods
pop
hlt
fnstenvs
push
push
inc
and
mov
clc
or
lcall
xor
in
xor
cld
mov
in
mov
push
inc
cld
cltd
and
in
test
sbb
sub
pop
xchg
mov
sahf
js
rcrl
fdivrl
xchg
mov
fnsave
testb
mov
jmp
xor
bound
test
js
addr16
push
sbb
cmp
lret
dec
push
push
push
icebp
pop
out
push
add
adc
pushf
cmc
push
aas
or
jmp
cmpsl
sub
push
nop
fcomip
push
nop
dec
adc
jmp
call
cmc
mov
sbb
mov
loopne
mov
pop
add
and
mov
mov
fidivs
mov
or
adc
shrl
push
inc
scas
mov
push
sbbl
flds
jmp
inc
mov
aas
imul
inc
fucomi
loopne
jp
or
cli
cmp
js
jbe
insl
incb
pop
int
mov
add
add
mov
mov
cmc
gs
sahf
mov
inc
xor
sbb
imul
movsl
xchg
adc
test
add
xor
cmc
push
pop
jae
cltd
cli
cmp
jne
sbb
cmp
adc
mov
cmc
out
movsl
mov
in
ret
in
jp
test
adc
jns
dec
cs
shrl
lret
lret
xchg
xchg
pop
or
jecxz
sub
fbld
dec
add
push
dec
adc
pop
xacquire
out
dec
loope
push
and
mov
fs
cmp
mov
dec
int3
lret
pushf
push
je
lret
aad
hlt
push
adc
push
mov
xchg
pop
lcall
and
lret
dec
sub
fwait
mov
jb
sub
dec
adc
cmp
mov
push
xchg
loop
dec
dec
mov
push
add
test
sub
enter
rclb
ss
adcb
push
mov
sbb
mov
mov
sub
dec
push
add
adc
pop
pop
shlb
lret
fdivs
pusha
or
cs
and
aam
jae
jg
and
dec
sub
xorb
scas
scas
mov
pop
fldl
push
sub
cmpsl
fiaddl
cmp
aas
lods
jo
filds
mov
add
int
push
or
xchg
cmp
xor
shll
fisubl
shll
out
fmull
jg
ret
jge
adc
jo
into
jns
shrb
sahf
inc
xchg
inc
vpunpcklbw
call
out
or
loop
sub
rorl
jne
and
bound
repz
or
sarl
pop
mov
push
adc
jnp
push
jg
mov
fwait
insl
sbb
pop
into
xchg
inc
xchg
dec
loop
dec
adc
cmp
ret
inc
jae
inc
std
gs
mov
insl
ja
xor
adc
cmp
ds
or
mov
cli
inc
aas
rclb
ficompl
sub
mov
pop
imul
pop
ja
mov
mov
inc
addl
and
sbb
test
mov
cli
mov
dec
xor
loopne
and
das
std
push
nop
adcl
dec
cmpsl
int
cs
push
or
pop
push
lock
jle
xor
dec
rclb
jg
sbb
cmp
pushw
dec
mov
xor
mov
mov
insb
stc
lret
sbb
stos
fldenv
fdiv
dec
cmp
fldcw
adc
pushf
mov
add
push
jl
jecxz
call
and
pop
mov
lahf
adc
mov
shrl
mov
loope
mov
jns
mov
pop
cmp
jbe
jge
loopne
lret
xrelease
aad
pop
and
mov
in
pusha
dec
andb
ljmp
outsl
mov
insl
sahf
or
cmp
out
ss
inc
kmovd
popf
push
movsl
int
popf
push
enterw
sahf
inc
jecxz
dec
dec
loope
xor
pusha
cmpsb
pop
imul
and
inc
shlb
push
sub
dec
sarb
cs
ss
pop
ret
pop
cs
dec
jp
repnz
mov
mov
or
jno
inc
popa
mov
push
cmp
rolb
mov
icebp
xchg
cmp
cli
cltd
pop
out
push
and
inc
ss
and
jnp
mov
sbb
mov
nop
test
mov
sbb
js
lea
xchg
xchg
sub
aam
push
mov
inc
shll
xchg
into
push
in
cmpsl
mov
push
stos
jg,pn
hlt
inc
push
push
fstl
gs
iret
sbb
xchg
mov
push
shrb
lods
pop
and
push
addr16
arpl
ja
ret
into
ficoml
enter
pop
and
adc
test
aas
mov
arpl
cltd
inc
mov
mov
mov
fsts
dec
js
ret
cmp
cmp
sub
jb,pn
and
mov
inc
outsl
cmp
in
xor
test
pop
mov
pop
imul
mov
mov
mov
xor
ret
cmpb
test
jno
jge
fcomps
adc
ljmp
inc
cltd
mov
rcll
call
pop
int3
jmp
gs
and
dec
sub
and
pop
adc
mov
lcall
in
shll
mov
into
ret
pop
and
dec
adc
sbb
adc
push
gs
xor
rcrl
jo
fsubrs
add
pop
dec
xchg
aas
cmpl
mov
jb
adc
adc
dec
pop
lods
int
fisubrs
stc
xor
mov
and
fisubrs
mov
fucom
insb
pop
out
pop
xor
jae
mov
hlt
ja
orb
push
push
sbb
or
cmp
insb
out
scas
xchg
fidivrl
sbb
loopne
adc
dec
clc
and
mov
xlat
fmulp
add
lods
ljmp
cmc
cmc
js
popa
xorl
push
call
dec
adc
into
add
adc
ljmp
shrl
jmp
clc
xchg
not
add
xchg
ret
sbb
add
jnp
out
arpl
mov
jl
pop
or
into
mov
ficompl
gs
int3
sti
das
cmp
xchg
pop
call
xor
mov
shll
dec
subl
sbb
rorb
push
jmp
in
cmp
scas
mov
adc
ljmp
out
or
jb
mov
pop
nop
mov
cmp
push
push
lahf
imul
add
sti
adc
inc
lods
jno
pop
outsl
pop
cmp
sub
sbb
xchg
data16
cvtpi2ps
xchg
push
and
sub
adc
xor
out
sbb
jnp
dec
dec
testl
xor
shll
push
xor
push
outsl
iret
aam
in
jbe
lret
lret
jge
mov
test
inc
outsb
add
xor
lock
imul
jecxz
adc
call
pop
xor
imul
aaa
or
push
mov
pop
lretw
dec
push
xor
pop
jg
cwtl
mov
aam
and
faddl
or
and
mov
cltd
cmpsb
pop
mov
xor
jo
mov
push
insb
lret
mov
les
movsb
and
push
adc
imul
push
mov
lods
clts
nop
mov
pop
es
push
jl
add
jl
out
mov
daa
fisttpl
call
iret
cmpsb
sbb
je
dec
pop
addr16
pop
sub
fwait
fs
adc
jl
arpl
cmp
sbb
cmp
xchg
aam
stos
addb
std
mov
std
and
in
jae
sbb
pop
jno
and
ss
mov
jecxz
fstl
xchg
cmp
scas
push
sbb
push
shl
aas
add
call
in
mov
jnp
in
mov
inc
nop
cmp
adc
dec
sub
movsl
fidivrl
int3
lds
rorb
xlat
push
fwait
or
hlt
jnp
push
rcrl
ret
dec
rsm
insb
mov
cmpsb
cwtl
out
push
out
or
pop
jae
cmp
jge
int3
je
jbe
jo
movsl
stos
imul
dec
fdivrs
lret
negl
arpl
adc
sub
out
shl
pop
dec
repz
mov
out
sbb
push
aas
shlb
jne
popa
nop
push
das
insl
mov
jmp
push
orb
jle
scas
lods
push
xor
adc
stos
in
jg
outsl
mov
loope
inc
push
out
mov
cmp
loopne
mov
stos
jge
adc
inc
ficoms
sbb
push
xor
rcrb
enter
and
das
popf
rorl
jge
test
fs
adc
adc
fildl
sbb
faddl
adc
and
xchg
pop
stc
int3
arpl
sub
xor
addr16
push
jae
mov
dec
loope
push
pop
inc
or
push
aam
fildl
pop
loop
movsb
jno
leave
popa
or
movsl
push
in
push
push
pop
mov
lods
pop
shrl
into
fbstp
xor
cmc
hlt
cli
cmp
icebp
cmp
imul
jnp
out
stos
cmp
push
cld
dec
xchg
cmp
sahf
rclb
lods
inc
mov
xor
mov
adc
jge
fstps
mov
addr16
cltd
orl
or
xor
jle
adc
mov
out
xchg
adc
push
addr16
xor
lret
dec
shll
mov
enter
sub
fistpl
adc
and
fldenv
xlat
push
xchg
cli
push
ljmp
sub
push
loope
inc
scas
inc
fldl
rcrb
lcall
decb
pop
or
mov
stc
enter
xchg
sbb
dec
imul
shl
cli
fcompl
adc
sub
dec
subb
jb
adc
adc
pushf
loope
test
stc
add
add
inc
jne
into
outsl
mov
push
push
push
out
rolb
dec
lds
insb
out
js
mov
pushf
sbb
fwait
jecxz
pop
adc
jmp
pop
cmp
dec
stos
es
xor
jecxz
stc
push
ffree
leave
montmul
cmpsb
xchg
fldenv
sub
sub
rcrb
adc
lret
imul
push
fildll
mov
jmp
jo
pop
push
stos
aaa
xchg
je
repz
sub
mov
clc
jge
ljmp
xor
cltd
sbb
mov
daa
in
fdivs
mov
fistpll
mov
leave
xchg
jge
mov
and
push
inc
je
loop
and
insb
out
push
je
lea
sub
cmpsl
icebp
aas
add
mov
inc
or
mov
aad
pop
push
iret
das
inc
aaa
imul
or
jne
andl
add
pop
ret
int3
arpl
icebp
fnstsw
cmpsl
nop
inc
aad
int
mov
repz
cmc
jns
cmc
pop
lret
pop
mov
js
pop
dec
and
lahf
sub
shll
in
inc
cmp
add
mov
je
andl
mov
leave
mov
push
popa
xor
xchg
jb
fnstsw
fsubrs
sbb
ret
nop
lcall
xor
cmp
insw
ret
sbb
sti
cwtl
jge
movsb
das
les
cmp
inc
jae
ret
jge
cltd
scas
in
incb
push
pushf
mov
lods
sbb
adc
sub
and
shlb
adc
addr16
jo
gs
xchg
inc
orb
inc
xor
leave
imul
mov
mov
push
shll
std
pop
divl
push
push
xchg
cmc
leave
test
aas
sbb
mov
popf
cwtl
imul
shrl
inc
dec
adc
lock
mov
jo
pop
leave
fucompp
cmp
jg
push
inc
xor
mov
mov
pushf
push
jb
adc
negb
aaa
jge
xchg
mov
imul
scas
dec
scas
out
xchg
jb
lahf
xchg
je
cmc
sub
and
inc
xchg
rclb
popf
push
int
pop
imul
mov
jno
and
push
outsl
xor
adcb
push
mov
add
js
hlt
pop
sahf
in
lahf
sub
mov
jb
insb
insl
and
lcall
repz
in
sbb
jb
ds
loope
xor
push
out
aam
lcall
add
and
xchg
ret
push
pusha
fisttps
in
inc
pop
daa
or
sub
xchg
mov
jge
ror
inc
loope
push
dec
fnstenv
xchg
or
sbb
call
inc
jbe
std
faddl
xchg
push
bound
sti
dec
aad
loop
jo
cmpsl
pop
mov
cmp
in
ss
shlb
jae
pop
aad
movsb
shlb
test
dec
cmp
push
inc
add
jl
loop
push
movsb
mov
daa
or
sub
rcr
aas
dec
pop
xor
andl
adc
push
iret
sbb
push
lods
mov
push
daa
roll
aad
test
icebp
das
and
pop
or
test
test
jle
in
mov
cs
sub
cmp
testl
cmp
shl
adc
je
leave
pop
cmpsl
and
or
test
dec
jecxz
sub
pop
add
loopne
add
dec
xor
test
xor
ss
sti
loop
jg
int3
stos
inc
mov
fwait
dec
dec
xchg
insl
enter
cmp
pop
jns
cmp
and
ret
mov
jge
adcb
movsl
cmp
cmpsl
ret
ljmp
add
add
jmp
mov
mov
xor
xor
add
mov
loop
sahf
and
int3
mov
dec
push
out
cmpsb
inc
ret
gs
xlat
int3
pop
push
push
stos
inc
aaa
ret
lret
movsb
jne
mov
out
cmp
inc
std
out
xchg
add
sar
xchg
lds
dec
es
lds
loope
mov
dec
loope
mov
jmp
add
adc
lret
test
mov
push
les
sbb
ja
push
fyl2xp1
xchg
xchg
sub
loope
imul
ss
sarb
pop
push
push
inc
inc
pop
lock
out
aad
jecxz
inc
inc
push
jbe
mov
push
sbb
push
fmuls
and
lahf
lock
sbb
cli
shl
xor
ja
xor
and
jp
mov
xchg
jne
lods
dec
mov
inc
jecxz
adc
jo
popl
call
adc
xor
sub
xchg
nop
pop
or
enter
in
mov
in
data16
cmp
or
insl
dec
sub
cmc
pop
push
sbb
sbb
add
mov
testb
in
andl
and
fs
and
nop
xorb
scas
adc
outsl
stc
hlt
cmc
mov
push
lcall
add
add
push
dec
pop
pop
pop
and
test
cmp
mov
xchg
xchg
in
fsubs
sub
jb
jl
inc
mov
mov
push
pop
or
adc
mov
add
cmp
jle
jo
push
fbstp
dec
xor
and
daa
or
mov
icebp
cmpsb
out
mov
jne
jmp
std
ret
jae
stos
in
mov
call
push
ret
out
ja
insb
loope
outsb
ds
repz
subl
add
inc
outsb
aad
inc
orb
orl
imul
adc
imul
sub
lods
adc
xchg
call
cmp
cmp
aam
sbb
sub
mov
inc
into
or
nop
add
loope
andl
push
add
cs
lds
or
mov
jae
pop
lret
push
popa
aas
pop
adc
pop
xor
sbb
sti
ds
ficompl
pop
int
mov
lea
sti
pop
push
xchg
push
jmp
and
pusha
xlat
add
jg
adc
lods
lret
pop
xchg
add
sub
mov
scas
subb
xor
test
fidivrs
pop
dec
inc
scas
call
dec
aad
sahf
rcl
cmp
mov
push
adc
xchg
test
scas
push
in
in
pop
fwait
popw
pop
lret
test
into
sub
aad
lea
pop
aas
scas
cli
adc
jbe
or
push
mov
and
xchg
pop
int
adc
std
addr16
add
and
cmc
xchg
or
inc
repz
mov
inc
scas
pop
into
lahf
cwtl
mov
fsubs
int3
stos
in
cld
out
push
cmp
xchg
outsl
xchg
adc
add
adc
das
loopne
mov
cmpsl
push
pop
das
fwait
test
shl
mov
jnp
jge
sub
sbb
ss
adc
xlat
and
test
sti
imul
imul
sub
repnz
hlt
mov
adc
inc
inc
shr
jnp
stc
shl
cwtl
mov
cwtl
sub
daa
add
cs
adc
mov
xor
jmp
add
es
out
cwtl
subb
cmp
dec
lahf
mov
fsubrp
adcb
jge
cmc
mov
adc
adc
maskmovq
imull
cmpsb
cmp
out
loop
cwtl
xor
shll
sbb
mov
xchg
dec
lds
jg
loop,pn
daa
push
push
sub
cli
rcrl
inc
loopne
xor
ja
xchg
shrl
mov
incl
xchg
movaps
jp
hlt
mov
lods
je
lahf
push
mov
inc
push
mov
sti
outsb
fstps
push
xchg
in
pushf
mull
rcl
sub
scas
inc
stc
insb
daa
out
lock
gs
and
cs
adc
xor
ret
loop
cmp
in
outsl
in
hlt
dec
xchg
jbe
out
xchg
pop
shrl
fisttpl
sar
cmp
je
imul
fldl
mov
test
inc
fstp
mov
push
xchg
cmp
pop
jo
das
rcrb
cmpsb
decl
inc
ljmp
mov
fwait
pop
jecxz
or
test
pushf
pop
cltd
xchg
sub
lock
xor
cmpsb
lock
inc
aad
jge
or
mov
sbbl
hlt
mulb
stc
mov
out
es
mov
and
lds
repz
aam
sahf
mov
dec
mov
lahf
pushf
jns
test
stos
scas
mov
or
loopw
movsb
clc
fnsave
push
lock
cs
push
add
stc
nop
aaa
das
add
loop
sub
dec
dec
int
mov
imul
ss
push
xchg
sahf
add
push
and
mov
cmp
popf
dec
fstl
loopne
imull
ret
dec
loop
pop
xor
and
push
pop
rcrl
mov
arpl
sub
test
mov
add
push
and
adc
cld
mov
ret
fnop
pop
out
iret
lods
aaa
sbb
lea
lret
add
push
jecxz
ja
lret
es
inc
jns
mov
mov
mov
cmp
scas
push
dec
push
jmp
lea
lds
xlat
dec
fbld
ficoms
test
std
jo
mov
shrl
ret
pop
sbbl
fidivl
fldenvs
push
fists
push
ret
int3
add
lret
enter
sub
jmp
dec
cmp
in
fwait
nop
fidivrs
inc
in
into
gs
out
and
sti
adc
dec
stos
mov
icebp
cli
stos
shlb
push
mov
pop
jae
mov
jo
sbb
dec
cmp
in
hlt
daa
iret
push
test
imul
scas
sahf
adc
xchg
xorl
scas
movsl
jle
sar
mov
out
add
test
rcrb
inc
and
imul
sarb
stos
and
sbb
insl
sub
in
and
call
add
xchg
mov
mov
ror
jae
pop
mov
lret
jmp
sbb
cmp
cmpsb
dec
cld
aad
test
inc
jmp
mov
jae
lcall
in
jg
lret
out
rolb
and
rcl
out
mov
dec
imul
mov
cmp
xor
inc
movswl
sub
sub
push
pop
sub
pop
adc
xchg
es
xchg
loopne
test
mov
pop
ds
xlat
in
inc
cmc
mov
mov
notb
jmp
pop
adc
rcl
xchg
lock
adc
test
xor
pop
mov
fnstenv
mov
pushf
and
adc
adc
test
pop
lahf
pop
fdivrs
push
pop
dec
pop
lahf
stos
cmp
into
and
or
xor
addl
mov
cmpsl
mov
sbb
cld
add
cwtl
aas
stos
inc
fadds
fbstp
add
inc
sub
jp
xchg
insb
jb
add
loopne
daa
xchg
inc
or
adc
xchg
loopne
js
movsb
dec
cmp
jnp
les
pop
dec
xlat
testb
push
aaa
jbe
in
ret
jmp
cwtl
mov
pop
fnstenv
lds
ret
mov
pop
in
pop
jne
addr16
cld
inc
add
mov
pop
add
adcl
cld
jbe
sbb
inc
xchg
dec
push
stc
outsb
mov
outsl
leave
inc
stc
outsb
imul
or
pop
add
js
xchg
jl
dec
jnp
dec
pop
fbstp
inc
pop
jg
push
std
and
out
jb
insl
mov
lahf
push
xor
loop
mov
xor
sub
mov
outsl
xchg
jp
jle
xorl
jbe
js
dec
lahf
and
bound
xchg
movsl
faddl
mov
and
icebp
mov
in
jne
repnz
imul
xchg
clc
push
imul
push
test
lcall
fdivrl
xchg
lahf
jae
shl
dec
cmpsl
fsubrl
sbbl
or
jbe
inc
sbb
shrd
hlt
shrb
mov
in
cmp
enter
add
fimull
pushf
fsubr
xchg
aam
sbb
shrb
faddl
adc
xor
cmpl
jbe
faddl
push
pop
jo
js
jge
xchg
pop
mov
xor
bnd
mov
adc
fnstenv
dec
repz
divl
out
lcall
cld
jecxz
sbb
xor
imul
mov
or
cwtl
jae
jmp
daa
pusha
popf
add
mov
mov
jge
loope
shll
push
jbe
ja
push
scas
js
inc
out
gs
ret
lret
repz
dec
je
xor
jl
push
and
jecxz
push
mov
sbbb
mov
mov
pop
clc
xor
jecxz
jnp
dec
pop
lock
xchg
ss
test
and
test
ret
stos
sbb
mov
mov
int
imul
les
mov
stc
xor
fimull
push
pop
stos
xchg
or
fimuls
aaa
jge
jae
adc
pusha
cmp
test
ret
jne
movl
notl
sbb
push
sbb
std
push
out
cld
inc
hlt
clc
sti
jbe
popf
cltd
adc
dec
fstpt
sbb
sahf
sub
mov
mov
add
test
push
pop
sti
in
jg
ficoml
outsb
jp
add
int
outsl
insl
cmp
in
insl
adc
adc
ds
jo
xchg
sub
pop
fildll
ficoms
das
jbe
pop
cmc
push
xchg
aam
ret
jno
imul
sbb
fwait
push
sub
aas
push
or
sbb
jb
xor
xor
xchg
jmp
aas
cmp
mov
mov
dec
mov
aam
ret
cmp
fwait
inc
and
lea
rorl
jecxz
das
sbb
push
inc
pop
lea
adc
cmp
insb
loope
les
mov
mov
fimull
lock
mov
nop
repnz
mov
and
imul
repnz
clc
cmp
out
scas
mov
ret
pushl
xchg
sbb
mov
mov
outsb
xor
xchg
add
mov
aas
mov
sbb
sub
imulb
and
inc
jae
call
sbb
mov
xchg
mull
nop
daa
out
push
push
jmp
lea
out
xor
push
sbb
jge
xchg
dec
pop
fnsave
jge
inc
jge
mov
sti
fwait
xor
icebp
movsl
in
adc
jbe
mov
mov
adc
popf
add
call
inc
je
cmpsl
jp
inc
fwait
push
push
in
fildl
or
call
adc
dec
pop
scas
mov
xchg
je
xchg
arpl
ss
rorb
inc
out
mov
dec
call
insb
adc
or
push
leave
das
ljmp
aas
sti
aad
int
xor
mov
fbstp
data16
in
pop
stos
mov
je
out
mov
or
mov
loop
test
lock
ljmp
jno
cmpsl
mov
sbb
and
adc
hlt
jnp
adc
dec
in
testb
sbb
call
mov
out
push
movsb
sub
mov
cmp
xchg
jp
xor
push
add
and
mov
cld
sets
scas
sub
mov
fstl
cli
out
sbb
dec
jg
jnp
xchg
sub
and
jp
fstpl
addps
lcall
and
fcoms
cmp
stos
and
fnstenv
inc
xor
xchg
sub
mov
aad
mov
push
scas
dec
sti
or
push
out
xchg
xchg
jge
loop
lahf
xor
pop
or
aam
inc
mov
fcomps
push
adc
shrl
mov
push
mov
cmpb
sub
clc
btc
xor
jno
push
icebp
cmpsb
jnp
and
inc
pushf
push
xor
stos
mov
aam
cld
das
into
or
xor
sarb
push
jge
sahf
push
lods
xor
and
nop
daa
jae
mov
inc
push
outsb
inc
adc
out
xor
jmp
mov
gs
jo
lock
xchg
out
sbb
lret
loope
and
cld
and
cmpsl
cmp
xchg
dec
add
test
and
adc
jae
pushf
jg
xchg
js
fwait
dec
loop
shrb
repnz
mov
insl
sub
les
fisubl
ret
push
push
jl
les
and
push
pop
cmc
mov
in
lods
test
pop
fdivr
xchg
or
imul
vpermpd
mov
faddl
push
push
loop
test
xchg
out
out
or
sbb
cmp
xor
push
push
mov
decl
adc
pop
or
or
nop
push
and
test
inc
hlt
addr16
mov
pop
xchg
test
pop
mulb
jb
mov
jp
or
nop
dec
test
cwtl
das
fcmove
out
popa
test
int3
aam
ds
shrl
popa
push
or
push
push
cmp
mov
push
xchg
push
sub
add
inc
imul
daa
cltd
xchg
inc
sahf
fimuls
addr16
sub
lret
pop
cmp
sbb
mov
aam
adc
fidivl
mov
jg
out
jge
fnsave
push
stc
xorb
aad
sti
sbbl
jbe
out
add
push
jae
adc
mov
fs
mov
fiadds
push
shlb
mov
pop
xor
imul
cli
icebp
mov
xchg
or
xchg
cld
fmuls
into
sub
sub
lock
mov
jne
xchg
sub
pusha
clc
je
mov
insl
xchg
jg
fwait
iret
pop
xor
dec
inc
pop
out
lods
out
xor
fbld
xchg
jnp
subb
js
cld
orl
lcall
inc
mov
insb
sub
xchg
ss
jnp
outsb
pop
mov
sbb
sub
cltd
xchg
mov
mov
cwtl
xchg
lods
jecxz
pop
mov
mov
or
lods
and
mov
or
das
loop
cmpsb
mov
sub
lods
fildl
dec
into
enter
dec
mov
sbbb
loop
movsb
ret
out
mov
add
fstp
shlb
cmpsl
das
jne
ds
inc
mov
notb
loop
iret
mov
add
ja
into
call
sti
push
cwtl
out
stos
movsl
cmp
mov
pop
leave
dec
dec
iret
xor
shll
rclb
sub
mov
sub
push
lods
adc
xchg
jbe
repnz
dec
loope
mov
subb
popf
and
jp
mov
pusha
add
jecxz
jle
pop
je
cmp
jl
aam
shlb
pop
push
mov
test
insl
jns
push
stos
cs
jmp
ret
subb
cld
sbb
xor
fs
loope
jle
ss
movsb
nop
xchg
cmovne
mov
lock
mov
lock
mov
adc
pusha
inc
or
jne
arpl
add
adc
loopne
xor
lret
add
pop
jle
push
inc
sub
loopne
rolb
fbld
add
sbb
or
adc
sub
xlat
mov
jl
jecxz
ficomps
sahf
in
enter
mov
lahf
test
int3
testb
dec
lea
std
outsl
xor
lahf
popa
jge
int
fwait
pop
or
pop
ljmp
inc
push
leave
xchg
push
out
out
add
xchg
mov
sbb
adc
adc
mov
mov
pop
imul
mov
xchg
push
lods
xchg
nop
movsb
cld
inc
adc
inc
andw
and
pop
xchg
sbb
xchg
jmp
addl
sub
cltd
jno
cltd
sub
popa
clc
jo
loop
loope
jg
lods
mov
jo
inc
outsb
int
lahf
push
cmpsl
cmpl
pop
xchg
dec
out
jnp
jmp
inc
pop
xchg
rcr
icebp
ljmp
pop
inc
in
pop
inc
add
xor
inc
mov
sarl
insb
mov
xchg
outsb
ja
adc
xchg
cmp
adc
cmp
ljmp
or
xchg
adcl
inc
and
or
das
and
jb
cmp
imul
out
mov
mov
pushf
or
mov
dec
sub
sub
cli
xchg
je
adc
bnd
and
xor
in
xchg
outsb
dec
sub
std
nop
pop
jg
xchg
mov
push
add
int3
adc
jmp
push
push
cwtl
mov
pushf
xor
lods
scas
jno
add
fisttps
in
mov
xchg
mov
lods
mov
pop
pop
inc
movb
jb
xor
or
adc
aaa
push
out
arpl
inc
mov
in
daa
repnz
fbstp
rcl
rcrb
stos
add
mov
in
test
jg
lds
or
lods
inc
cmpsb
pop
xor
xchg
je
movl
lahf
je
lds
in
roll
dec
movsb
jecxz
imul
popf
clc
mov
add
mov
inc
test
and
ficomps
push
pop
adc
sub
push
lds
in
andb
xor
jne
ret
js
cmpb
pop
or
dec
pop
stos
or
mov
xor
mov
es
add
sahf
pop
jmp
decb
roll
jge
jbe
sub
pop
add
mov
shrl
fwait
sbb
ds
xchg
pop
or
xor
or
mov
pop
jbe
aas
push
adc
jge
mov
add
mov
jne
mov
mov
gs
xor
cmpsb
into
inc
cltd
adc
incl
call
lea
fldcw
es
xor
loope
inc
bound
sub
adc
int
mov
xchg
in
scas
push
roll
testl
nop
test
or
loop
cs
inc
shrl
lcall
mov
dec
mov
jle
xchg
loopne
ret
icebp
xchg
inc
aas
iret
xor
jne
lret
mov
pushf
sub
jbe
jl
ss
popa
cmpl
enter
sbb
clc
jecxz
pusha
or
cli
inc
lret
xchg
mov
push
addr16
push
inc
or
jno,pn
adc
adc
jo
pop
cwtl
cmp
mov
dec
mov
mov
or
adc
std
push
fnsave
ret
jmp
inc
in
inc
add
mov
daa
mov
iret
outsb
pop
scas
out
lahf
out
lahf
les
xor
mov
cmp
push
repz
addr16
fs
mov
pop
in
pop
iret
fnstenv
pop
mov
adcb
pop
sub
dec
jl
enter
orb
lods
jne
ja
push
or
cwtl
or
std
mov
xor
dec
jmp
add
or
xor
sahf
sbb
loope
cmp
and
mov
sahf
sbb
and
mov
inc
push
cmp
push
and
clc
push
loopne
loopne
jnp
int3
inc
push
shr
sub
cmpsb
lea
rcll
dec
and
xchg
test
push
mov
notb
adc
shrl
mov
mov
sbb
adc
xor
or
fstpt
movsl
ss
push
adc
xor
and
aad
ss
xlat
cmp
addr16
aaa
test
xchg
out
dec
cmp
push
sbb
mov
idiv
and
mov
scas
imul
xor
inc
xor
push
les
xor
add
scas
cmp
cmpsb
cmp
add
mov
mov
ret
mov
loopne
cmc
xor
mov
test
les
mov
leave
push
push
out
pushf
pop
mov
mov
push
push
mov
cld
andl
movsb
xor
pop
sub
sbbl
in
lods
roll
mov
cmp
test
jae
xchg
push
adc
lret
ret
jne
adc
push
movsl
rcr
cmp
jne
shrb
or
sbb
pop
or
ja
in
std
les
pushf
inc
dec
mov
stc
inc
dec
add
pop
push
push
call
insb
jo
and
cmc
jmp
or
out
mov
stos
nop
pop
or
cmp
xchg
cmc
cmpb
ficompl
nop
jns
or
xchg
add
popa
in
and
jmp
add
andl
jne
jnp
xorb
das
arpl
into
clc
mov
sub
enter
push
hlt
pop
test
xlat
sub
call
dec
aas
mulb
negb
jo
lods
shll
outsl
je
subl
jecxz
push
adc
negl
stos
inc
xchg
popl
sbb
aad
adc
sub
lahf
and
leave
dec
sti
test
mov
lock
adc
popa
cli
test
es
push
insl
xchg
cmp
push
jns
les
push
lcall
adc
fbstp
xlat
mov
fldl
push
and
nop
lret
and
stos
mov
jecxz
jg
sub
xchg
popa
xor
jp
lret
push
stc
loopne
mov
push
pop
sti
pusha
xchg
xor
jne
iret
aas
cltd
mov
push
cld
xchg
addl
call
mov
fstl
pop
fs
push
hlt
fidivrs
push
lds
lods
mov
add
nop
cwtl
popa
ret
fld
fnsave
fstps
mov
add
cltd
sub
inc
jbe
in
xchg
inc
fcomip
jae
movsl
and
cmpsl
shrl
or
pop
cli
xor
dec
aas
loope
mov
testl
mov
addr16
xchg
sbb
cmp
fcomp
orl
and
sbb
mov
sub
sbb
inc
xlat
hlt
mov
sbb
xor
movsl
push
popa
jns
repnz
jmp
jge
mov
and
jp
and
push
out
imul
repz
and
dec
pop
jle
jge
adc
in
sbb
fidivrl
sbb
push
lret
test
push
or
pusha
mov
fs
andb
mov
sbb
lods
inc
les
popf
fisttpll
jbe
lods
xor
add
jecxz
cmpsl
pop
repnz
out
shll
scas
and
mov
aad
insb
adc
fnsave
dec
movsb
incb
jno
push
imul
movsl
inc
jnp
pop
cmp
cmpb
inc
sub
fnstcw
sahf
nop
mov
mov
adc
leave
test
int
in
add
imul
mov
out
pop
push
pop
xchg
adc
outsb
jo
push
stos
sbb
pop
mov
xor
sbbl
test
sbb
es
cmpsl
out
fcomp
lret
inc
and
sub
cmp
xchg
xchg
dec
dec
das
mov
jmp
in
jb
dec
sbb
mov
outsb
mov
inc
fmuls
lods
cmp
add
ljmp
cmp
jecxz
pop
sub
fiadds
jmp
call
call
add
mov
cmc
mov
push
das
fsubl
add
push
xchg
push
sub
icebp
sub
lods
sbbl
out
xchg
push
push
stos
jmp
push
sub
sub
adcl
movsl
shll
mov
jp
cmp
sbb
push
loopne
ss
mov
or
xchg
push
xchg
in
idiv
les
sbb
sub
outsb
shlb
gs
or
pusha
or
push
shlb
xor
sub
or
in
repnz
sarl
in
jmp
aaa
das
inc
imul
adc
xchg
jle
adc
jae
insb
push
cli
push
inc
dec
andl
mov
jns
cmpl
pop
lret
dec
add
scas
iret
cmpsb
into
cmp
mov
insb
out
add
pop
cmp
cli
imul
xor
imul
sarb
mov
push
into
jl
lods
dec
in
in
xor
adc
or
inc
mov
shrb
gs
jbe
jb
dec
addr16
sub
dec
popf
jmp
push
add
push
ss
inc
or
mov
int
add
pop
cs
fadd
adc
cld
dec
cmp
loopne
xchg
scas
adc
sub
push
roll
sbb
jge
lret
adc
and
mov
unpckhps
hlt
push
jno
pop
scas
fwait
mov
addr16
data16
ljmp
or
xor
into
test
inc
inc
fmulp
lret
pushl
and
outsl
adc
pop
mov
lods
test
outsb
cmpsb
mov
ret
xlat
add
add
mov
adc
jbe
call
or
mov
push
or
imul
mov
lea
or
cmp
rorb
bound
xor
repnz
xchg
xchg
adc
xchg
add
jge
ljmp
insb
fwait
jge
push
negb
jo
push
add
sub
in
addr16
cmp
sbb
dec
mov
pop
ss
jl
mov
mov
cmp
in
pop
cmp
cld
pusha
sbb
jnp
sub
subl
mov
out
xchg
mov
pop
add
leave
gs
movsl
cli
lahf
jne
rcrb
xor
ja
rcr
rcrb
pop
mov
mov
outsl
jp
imul
dec
inc
add
jbe
sbb
jae
adc
pop
outsl
dec
push
push
sub
push
fsubl
fs
repnz
in
xchg
xlat
push
jecxz
icebp
mov
mov
psrlq
mov
iret
iret
add
filds
sahf
fldt
idiv
lret
xchg
mov
and
inc
xorl
fimull
sub
jne
mov
fldcw
jle
jle
cmp
adc
xor
cmpsl
testl
adc
pop
push
scas
std
clc
mov
test
jns
or
cmp
xchg
jno
jp
push
sub
outsl
push
in
in
test
mov
test
inc
or
movsb
rclb
adc
iret
mov
icebp
outsb
test
ret
das
and
cmp
pop
fisttps
fldenv
call
movhlps
negb
adc
push
sbb
jnp
push
jmp
in
push
jbe
cmp
aad
pop
lock
imul
lods
xchg
rcr
into
shll
jns
cmp
cmp
dec
cmc
lcall
mov
pop
inc
xor
sub
xchg
int3
jne
jmp
inc
fisubrl
lock
mov
or
push
pop
mov
imul
xchg
push
sbb
das
mov
xor
data16
scas
and
xchg
push
sar
ds
jnp
cmpsb
pop
adc
shrl
add
clc
inc
mov
fiadds
in
push
xor
sbb
push
cltd
imul
sub
cmp
cmp
cltd
repnz
fbld
loop
lods
nop
test
cld
cwtl
int
sbb
ljmp
ljmp
xchg
scas
stos
xchg
xor
mov
popa
shrd
mov
daa
mov
sbb
inc
mov
leave
xlat
sub
dec
test
cmp
test
xor
push
xchg
xchg
mov
outsl
add
pop
sbb
negb
cmp
cmp
rclb
ret
xor
cmp
shlb
insb
int
cwtl
mov
add
rorl
add
mov
fimull
aaa
lea
push
cmpsb
fcomps
sbb
lods
imul
bound
int
pop
movsl
negl
pusha
std
cltd
xor
mov
jge
cltd
sbb
push
adc
sub
push
xor
mov
push
imul
and
shll
mov
pop
int3
inc
or
push
dec
push
add
fsubrs
test
ds
nop
divb
xchg
mov
lahf
dec
push
pop
insb
mov
cmpl
fs
movsl
mov
gs
rolb
mov
cld
xor
lods
mov
cmc
mov
ds
scas
xchg
mov
ljmp
mov
cld
inc
pop
aad
loopne
inc
ljmp
int3
adc
pushl
nop
dec
sbb
ret
insl
movsb
sub
dec
jne
das
fdivr
and
dec
lods
loopne
inc
les
pop
jae
dec
shrb
mov
push
loop
sbb
andb
sub
push
xor
push
cs
mov
inc
pop
mov
int3
jnp
into
jmp
call
out
add
jb
xchg
sub
sub
push
xchg
jbe
ss
cli
inc
fnstenv
pop
cld
jmp
out
xchg
and
jo
mov
mov
fldcw
rcl
xchg
mov
push
push
testb
out
inc
mov
pop
out
lea
jae
sub
cltd
cltd
popa
mov
lock
cwtl
mov
or
or
enter
adcl
out
sub
pop
rclb
jne
daa
adc
out
mov
xchg
cmp
inc
pop
push
in
cli
pushf
test
data16
lahf
ss
out
cmp
mov
pop
sub
mov
int
dec
pop
test
aas
mov
cmp
lret
test
mov
or
add
push
add
push
cmp
mov
aam
mov
dec
pop
inc
stos
test
add
jl
addb
push
sbb
xchg
pusha
lock
and
insl
pop
jp
and
xor
mov
dec
aaa
mov
adc
data16
pop
cli
sub
arpl
and
mov
adc
jge
nop
mov
daa
fs
shlb
cli
sarl
sub
gs
out
rcll
adc
adc
jb
divb
jb
and
jae
and
arpl
int
mov
and
inc
push
dec
xchg
outsb
add
xchg
mov
les
roll
fnsave
mov
int3
xchg
test
jl
push
pop
xlat
movsb
cmp
in
mov
fiadds
xor
push
lcallw
pop
sahf
xor
and
test
xor
cld
xchg
outsl
repnz
incb
and
inc
rcll
shlb
insb
fistps
out
inc
sub
ja
cmp
in
lods
push
xchg
push
mov
pop
outsb
sti
imulb
scas
and
loopne
jno
xchg
addr16
cli
popl
jmp
or
ljmp
add
xor
scas
std
test
mov
push
lods
sub
popa
mov
dec
pusha
cmp
pop
call
shr
push
fisubl
xor
push
arpl
jp
out
mov
aad
adc
nop
lret
xor
test
adc
fs
outsl
pop
cmpl
les
shlb
std
dec
mov
jg,pt
push
mov
mov
jbe
test
sahf
push
in
dec
or
cmpsb
dec
push
mov
dec
fisubrs
dec
pop
int
jmp
sbb
nop
jge
ret
mov
repnz
in
push
push
mov
sahf
clc
mov
fisubrs
pop
fisubrs
inc
mov
dec
ds
sbb
popa
dec
dec
adc
popl
xchg
cmpl
dec
mov
cltd
xor
xchg
dec
in
insb
or
mov
adc
or
std
scas
mov
jnp
loop
cmc
push
in
push
jg
inc
lods
inc
je
cmp
add
loop
outsb
adc
pushf
lods
jmp
and
js
or
imul
sub
jbe,pn
nop
das
push
cld
lcall
in
adcl
js
xor
and
lea
sbb
in
std
mov
pop
xchg
into
inc
mov
push
pop
inc
dec
xlat
loop
popf
xor
jl
cli
jmp
mov
mov
and
shrl
and
and
aas
jae
pop
lret
nop
sbb
xchg
rcr
add
add
enter
in
cmpl
fdivl
enter
loop
inc
push
jno
pop
push
pop
push
and
push
pop
cmp
imul
loop
nop
js
xchg
call
arpl
sbb
mov
mov
cmp
sbb
dec
les
scas
pushf
aad
subl
nop
loope
mov
pop
repz
jne
mov
pop
adc
pop
movsb
and
pop
popa
cmpsl
jecxz
hlt
and
mov
or
js
xchg
mov
xor
mov
out
inc
fldcw
inc
sub
jmp
and
cmpsb
les
into
imul
inc
cmp
cmovp
popa
mov
jb
pusha
push
outsl
xchg
js
orl
jge
movsb
xchg
mov
movsl
and
dec
fdivrp
cmc
jge
add
push
leave
jnp
fldcw
call
pusha
stos
enter
sub
cmc
jne
movsb
gs
jl
incb
in
int3
test
stos
push
xor
aam
pushf
call
push
xlat
insb
jp
mov
popa
lods
inc
pop
adcl
lds
cld
aad
mov
adcb
cltd
adc
cmp
shrl
sahf
pop
insl
iret
dec
ss
cmc
and
mov
pop
psubusb
dec
les
mov
pop
imul
sbb
loopne
adc
out
sub
mov
xlat
ja
test
ret
xchg
jb
fcomps
test
dec
add
js
cmpsb
cld
cmp
in
push
arpl
arpl
jl
mov
sahf
lea
cmpsb
ss
hlt
loopne
jg
mov
xchg
lcall
xor
stos
add
lret
inc
int3
rcrb
mov
ffree
dec
mov
inc
push
adc
int3
fiadds
mov
xchg
cld
mov
stos
out
es
aad
inc
fsubr
xor
jno
subb
das
push
sbb
test
fsts
insl
sub
adc
push
bound
lock
cli
adc
push
repz
testb
jno
xor
test
inc
jle
inc
pop
lret
fcomi
push
push
xor
data16
pushf
cmp
sahf
icebp
dec
lcall
pop
lds
pop
mov
lds
movsl
xchg
dec
push
xor
push
add
loopne
push
pusha
or
pop
mov
int
loop
test
cmpsb
jle
mov
not
mov
sub
jnp
and
sub
hlt
or
loope
stos
insl
in
inc
or
imul
xchg
in
dec
mov
xchg
outsl
push
mov
dec
inc
cld
inc
stos
mov
out
push
xlat
cmp
or
cltd
or
out
in
adc
data16
cmc
int3
rorl
dec
icebp
and
inc
push
decb
xor
pusha
jg
jecxz
ss
mov
ret
push
call
cmp
hlt
mov
pop
sahf
or
jg
lss
add
leave
push
jbe
movsl
ficomps
fs
cmp
jmp
dec
in
movsb
jne
add
jne
adc
lahf
xchg
mov
test
cltd
xor
int
inc
gs
mov
add
mov
sub
stos
call
leave
int
inc
sbb
push
xor
mov
jno
in
sbb
jecxz
lret
rcrl
dec
and
arpl
out
shrb
sti
sbbl
jno
lahf
sti
rcl
jns
loop
adc
mov
xchg
push
jle
inc
fldt
xor
xchg
in
popf
or
push
call
inc
movsl
ljmp
add
lea
lods
pop
fcomps
in
stos
pop
xchg
insl
shl
sub
sub
mov
cmp
pop
in
fs
lds
xchg
js
jecxz
das
xchg
pop
cli
popa
cmp
out
lcall
sbb
lcall
jo
add
or
dec
dec
ljmp
fs
mov
stos
mov
out
mov
mov
jae
pop
movsl
mov
and
cmp
stc
adc
sbb
pop
and
mov
fwait
push
pop
and
pop
loope
xor
in
cmp
inc
ffree
popa
pop
loop
fnstcw
mov
mov
fisttpll
xchg
test
xorl
mov
sub
ds
repnz
mov
xchg
mov
pop
loopne
rcrb
push
xchg
sbb
addr16
jne
push
roll
and
in
cmpsl
je
mov
mov
dec
ret
fcmovnb
test
pushf
mov
enter
inc
pop
xchg
lods
mov
repnz
push
movsb
sub
and
sub
test
pushf
mov
add
lods
test
mov
dec
lret
sbb
int3
lea
out
pop
or
fidivrs
inc
loop
in
pop
lret
lock
cwtl
sbb
xchg
rorb
sbb
pop
pop
fsubrp
xor
or
testl
cld
loop
adc
pop
imul
loope
das
sbb
xchg
outsb
aaa
loop
imul
sub
mov
les
cmpb
lcall
popa
xor
in
mov
and
jb
scas
mov
mov
xor
add
dec
cld
popa
ds
pop
push
add
cmpsl
fcompl
or
push
dec
out
xor
imul
nop
lahf
push
stc
mov
std
adc
lret
out
fisubrs
pop
push
daa
jmp
xor
daa
xchg
pop
movsl
in
mov
inc
cld
jmp
fildll
inc
out
pop
pop
cmp
in
fwait
pop
leave
fnstcw
pop
or
fdivl
addr16
shlb
stc
jo
jle
sbb
dec
or
xor
mov
dec
push
sbb
mov
mov
sub
xchg
add
fnstsw
popa
xchg
dec
aas
mov
jb
stos
sub
mov
mov
pop
push
mov
cmc
adc
enter
adc
push
sub
inc
xor
add
and
lahf
insb
leave
xor
fs
cmp
rclb
mov
test
shr
outsl
pop
hlt
adc
jb
dec
fs
and
xor
mov
add
mov
sub
mov
test
cmp
mov
or
inc
push
cmp
push
xor
call
test
mov
fcmovne
fistl
inc
imul
adc
add
in
sbb
outsb
std
inc
sub
sbb
aam
scas
dec
hlt
addr16
inc
sub
mov
adc
loope
sbb
inc
add
jge
lea
scas
pop
loopne
inc
xor
mov
data16
fisttpll
lock
mov
stos
inc
push
and
lahf
push
dec
jbe
push
lret
inc
fsubl
andb
aam
mov
mov
or
mov
ret
mov
ja
sub
lods
out
fisttps
filds
aam
aam
cli
out
rorb
jge
ret
sbb
movsb
lea
xlat
jo
xor
js
loop
fmuls
or
mov
rorl
test
add
popf
in
xchg
movsb
sub
orl
mov
cmpsl
jecxz
cmc
adc
call
loopne
dec
push
out
inc
outsl
jo
sub
bound
jl
xor
shll
sbb
es
lods
mov
mov
js
lret
lock
jne
sbb
xchg
js
cmp
adc
push
ret
pushf
dec
jmp
and
cmp
imul
aam
sub
aas
test
push
lds
push
fwait
hlt
andl
jne
enter
inc
or
pop
inc
ficoml
ljmp
stos
cmp
int
add
push
cli
jnp
in
or
push
mov
popa
mov
jns
mov
xor
xchg
push
test
mov
fildll
arpl
mov
mov
clc
pop
inc
scas
inc
inc
fdivr
ret
mov
enter
sbb
decb
xchg
cmp
mov
push
inc
cmp
sarb
rcrl
push
sub
mov
and
dec
inc
fnstenv
or
xchg
dec
xorb
xor
sbb
hlt
pusha
je
lret
cmpsb
ret
mov
mov
jp
ds
faddl
and
push
and
int3
inc
jae
xchg
movsb
std
lods
mov
divb
rorb
adc
cmp
in
xor
pop
mov
jae
push
jno
js
cmpb
inc
incb
or
add
jl
add
sbb
sbb
daa
cli
enter
pop
jmp
movsl
jle
lcall
js
sbb
dec
jmp
or
jmp
or
jno
mov
adc
pop
sbb
push
lcallw
dec
pop
inc
xor
out
test
mov
sub
std
call
mov
addr16
bound
xchg
add
sahf
fwait
jmp
jno
xor
in
push
add
pop
pop
mov
sbb
dec
fdiv
jp
lret
into
int
pop
mov
push
iret
mov
in
cld
mov
inc
xchg
sbb
add
lea
sub
pop
push
inc
or
sub
pop
cmp
dec
sbb
xchg
jmp
sahf
jno
in
or
inc
cmp
or
mov
xlat
inc
mov
das
pop
ret
mov
mov
cmp
sti
lods
mov
int3
call
and
arpl
cmp
mov
cltd
jle
xchg
insb
xor
pop
in
sub
cltd
mov
mov
xchg
inc
push
out
jae
hlt
or
pop
mov
sbb
adc
test
add
jp
and
jle
push
out
push
jnp
cmovno
adc
or
stc
sarb
roll
jns
mov
or
cmp
mov
inc
push
add
enter
sbb
mov
flds
lret
sti
inc
arpl
jmp
lcall
jae
cltd
xchg
cli
or
sub
adc
movsl
inc
bound
test
jle
in
sahf
sbb
sbb
mov
mov
jmp
pop
rcl
out
and
lods
cmpsl
ret
jns
push
add
pop
mov
sbb
mov
jp
sub
lds
sbb
test
testl
add
push
push
mov
adc
in
mov
adc
sarb
push
lds
and
es
adc
inc
loope
or
int3
mov
fst
rcrb
dec
xchg
mov
test
jno
insl
call
mov
hlt
cmpsl
in
std
jecxz
das
movb
mov
pop
cltd
inc
orb
icebp
je
repz
ja
mov
jno
inc
sub
cmp
fwait
dec
or
xchg
loop
js
ja
jmp
inc
popf
mov
push
jmp
imul
push
out
leave
dec
lock
outsl
ljmp
add
push
or
or
fs
sub
jbe
dec
fwait
xor
enter
in
push
mov
repnz
aad
outsl
pop
or
mov
js
nop
cld
sbb
loope
sub
ljmp
jne
inc
ja
jae
std
cltd
cli
ljmp
pop
mov
jbe
roll
jo
inc
push
xlat
xchg
sbb
stos
call
sbb
mov
aaa
int
push
jg
adc
sbb
stos
or
arpl
stos
out
sub
fwait
push
xor
xchg
lret
fisttpl
push
adc
fs
cmp
shlb
or
mov
inc
mov
push
mov
mov
or
adc
repnz
rcrb
adc
jae
test
or
ret
sub
in
outsl
je
dec
and
and
ret
mov
push
cmc
xchg
sub
pop
rcrl
inc
inc
mov
or
push
out
sub
loop
aaa
movsb
push
je
jl
push
hlt
xchg
pop
mov
xor
stos
leave
in
mov
xor
and
pop
add
pop
or
imul
cmp
test
dec
sahf
insb
leave
pop
adc
dec
insl
icebp
xor
jge
adc
sti
stos
mov
mov
fsubrl
rcrl
dec
dec
ret
bound
shll
fcmovnu
add
xorb
mov
fmull
nop
sub
or
mov
sub
rcrl
inc
bound
sub
mov
fcmovb
pop
add
sbb
and
std
cvtdq2ps
test
les
lret
jns
es
cltd
adc
mov
std
subps
push
mov
mulb
test
notb
nop
pop
sub
pop
fbld
inc
fwait
fwait
or
add
lds
jge
aam
dec
dec
lret
int
jmp
rcrb
in
iret
mov
js
push
rol
loopne
imul
jae
sti
lcall
jmp
jnp
inc
and
cmpsb
fldenv
fsubs
imul
or
btr
gs
les
pop
sbb
mov
pop
insb
into
fisubrl
loope
sub
sbb
or
dec
cwtl
imul
xchg
out
or
and
and
sub
push
add
das
xor
mov
mov
or
adc
xchg
rorb
sub
cld
xor
int3
push
adc
xchg
inc
sub
fidivl
ja
enter
mov
add
bound
enter
push
or
js
movsb
sti
push
add
add
cli
iret
cltd
jg
inc
pop
mov
pushf
test
jae
xor
mov
lret
push
js
xchg
inc
sub
add
ss
scas
xchg
dec
lods
push
and
xlat
scas
push
inc
lcall
jb
ss
cli
cld
xchg
sbb
cwtl
cmp
sbbb
loop
dec
out
sub
cmp
xchg
xor
mov
lods
icebp
sbb
dec
cltd
sbbl
jo
cmp
pop
pop
mov
xor
sbb
jp,pt
movsb
aas
loop
pop
jecxz
or
int
aad
jb
imul
xchg
xor
push
jnp
lcall
push
inc
sbb
push
mov
and
ss
das
sub
inc
dec
mov
rcll
sbb
jp
xchg
jp
repz
push
in
addl
push
lods
adc
loopne
adc
xor
sub
xchg
test
cmpsb
lcall
lods
fdivrs
jl
pop
mov
add
addr16
jb
inc
cld
push
mov
sub
pusha
pop
cmp
or
lret
cld
decl
shlb
sub
dec
sbb
pop
popf
pop
mov
jo
ret
aad
out
push
loop
mov
push
push
out
and
ss
push
lea
cmpsb
in
mov
inc
inc
int
fucomp
shr
and
out
stos
adcl
movsl
insl
movsl
icebp
movsb
pop
in
into
inc
xchg
xchg
jb
repnz
inc
push
and
dec
mov
inc
inc
push
cld
pop
add
dec
stos
xor
rcrb
jg
test
andnps
dec
sbb
rcrl
mov
mov
movsl
xor
incl
jns
or
xchg
fisubl
xor
cmp
xor
andb
push
inc
inc
sub
cwtl
das
and
push
cmc
mov
inc
sub
cwtl
mov
mov
mov
cs
inc
push
inc
rcrl
push
rcll
lods
int3
xchg
andb
inc
xlat
out
xchg
out
push
idivl
jnp
sahf
or
pop
ret
dec
push
jp
mov
in
inc
repnz
shrb
sub
bound
mov
xor
mov
dec
fstp
xor
jmp
gs
mov
jmp
mov
push
mov
push
jns,pt
push
ret
loop
popf
dec
pop
sbb
outsl
cmp
filds
mov
mov
dec
dec
enter
and
rcl
ljmp
orl
ds
xor
sub
mov
sbb
mov
mov
push
push
ljmp
xchg
in
fdivrs
pusha
push
pop
adc
mov
cmp
mov
imul
sbb
popa
inc
xchg
xchg
add
and
push
mov
jae
adc
mov
cwtl
sti
scas
dec
jns
push
popa
inc
dec
pop
fidivrl
sub
repz
or
lret
dec
fildll
rcl
pusha
add
xor
cwtl
clc
mov
xchg
ret
hlt
mov
inc
in
ret
and
add
jecxz
sbb
jno
jg
loopnew
adc
adc
aam
pusha
inc
jg
add
scas
jb
sbbl
mov
cmp
add
scas
lock
cmp
in
fiadds
punpckldq
pop
popa
mov
cmp
sbb
and
xchg
sbb
arpl
jg
xchg
jecxz
inc
cmp
ljmp
jb
push
or
cltd
mov
mov
push
loopne
ror
int3
icebp
xor
inc
mov
and
lods
outsl
into
pop
mov
in
sbb
cmp
ja
nop
dec
mov
stos
or
jmp
clc
add
repnz
lahf
push
cs
icebp
jb
clc
mov
mov
xchg
scas
loop
inc
pop
mov
out
das
in
mov
jg
es
dec
push
stos
loope
sbbl
xchg
add
seta
xchg
adc
in
mov
push
jne
cmpsl
xor
fs
inc
popa
pusha
push
loope
mov
push
in
andl
pop
out
ud2
jp
ljmp
icebp
mov
push
scas
fwait
mov
xchg
movsb
dec
pop
xchg
inc
jo
inc
arpl
fldcw
jl
ljmp
cli
popa
jne
arpl
jge
xchg
pop
ljmp
sub
subb
xchg
mov
inc
pop
xor
cmpl
xchg
lds
push
das
popf
lods
test
arpl
mov
adc
mov
mov
xor
jno
testl
xchg
loopne
xor
add
aam
aam
jns
lock
lret
xor
mov
sbb
pushf
sub
sbb
add
mov
push
adc
int
imul
cmp
inc
mov
mulb
fdivl
push
cmpsl
cmp
fsubs
gs
pusha
ds
loope
add
popf
rcr
ja
insl
and
out
das
push
push
in
push
add
mov
cmpsl
loop
adc
pop
mov
fs
out
and
xor
xchg
leave
jo
sahf
iret
push
shlb
insb
sbb
test
inc
dec
lea
mov
insl
push
or
pop
and
xchg
repz
mov
ljmp
push
lcall
dec
nop
pop
lods
mov
fistpll
les
mov
pop
lods
dec
jae
or
cli
mov
add
decb
cmpsb
in
and
push
js
mov
push
mov
push
andl
pop
es
cmp
and
adc
aas
cmp
jno
adc
out
sbb
cs
push
fidivrl
dec
pusha
jp
push
in
shl
imul
je
or
inc
mov
repnz
int
insl
cmc
in
dec
inc
pop
xchg
sub
sub
inc
mov
push
data16
sbb
ljmp
ja
call
ja
mov
mov
nop
pop
add
push
bound
cld
test
sub
xchg
lcall
mov
cli
jo
jmp
dec
ss
mov
push
in
pop
stc
add
outsl
and
inc
push
nop
push
push
stos
fists
scas
fs
add
lds
push
and
inc
sahf
inc
cmp
cwtl
out
push
cmpsl
inc
hlt
pusha
out
out
mov
subl
test
cmp
fwait
push
mov
mov
loope
and
ret
cmp
inc
test
jns
push
jne
push
sti
scas
add
mov
add
mov
sbb
xor
mov
mov
daa
xchg
xchg
outsl
cmc
mov
dec
cmp
loop
mov
or
icebp
sub
fstl
and
jg
push
sbb
cmp
pushf
loop
mov
and
sub
outsl
sbb
enter
and
inc
les
mov
mov
test
sub
lcall
cmpsb
ret
pushl
push
fdivp
cmpsb
push
push
sub
push
mov
in
add
inc
divb
ljmp
jl
and
mov
pop
inc
push
jl
in
fisubrl
mov
mov
out
mov
sbbl
cli
xchg
push
pusha
in
push
xchg
cltd
decl
inc
ficomps
nop
cmp
mov
cltd
insl
jle
sub
dec
lret
mov
repz
cmp
mov
push
out
cmp
imul
out
test
pop
cmpsb
jno
and
out
and
sbb
aad
push
ret
inc
in
jmp
add
repz
push
cmp
and
and
into
pop
movsl
or
stos
jnp
hlt
mov
sub
push
popf
or
mov
lods
jo
push
roll
adc
mov
icebp
mov
sbb
mov
xchg
in
popf
pop
cmp
add
add
cmp
imul
mov
test
mov
jmp
imul
inc
push
gs
mov
lods
inc
fisttpl
mov
rcrb
push
cmc
push
addr16
test
mov
dec
test
jmp
mov
push
push
jb
pop
in
out
xchg
in
inc
or
test
imul
add
movsb
push
inc
push
jae
inc
sub
icebp
mov
ds
int3
into
fmul
aaa
or
lret
arpl
or
scas
addr16
sub
and
xor
cmp
cmpsb
out
and
fmuls
or
push
mov
mov
sbb
pushf
sbb
cmp
in
das
jmp
rcr
clc
fldl
pop
sub
ja
repz
lret
ljmp
mov
je
cmpsl
xchg
lret
andl
pop
repnz
mul
adc
or
das
adc
aad
lret
lods
fdivp
ficoms
or
lret
mov
lret
test
push
clc
adc
xchg
add
push
nopl
lds
xchg
push
add
dec
mov
jo
mov
jae
or
pop
cmp
adc
cwtl
in
ret
mov
lock
imul
inc
daa
or
outsb
mov
leave
add
enter
jge
ljmp
std
fsubr
add
push
popf
xor
sub
lea
push
ds
sub
mov
aas
inc
loop
xlat
jecxz
fdivl
add
ret
ja
insb
shll
js
ja
aam
mov
daa
mov
test
les
lret
pop
std
pop
hlt
sarl
outsb
loop
adc
or
jne,pn
adcl
out
cwtl
out
or
idivl
adc
lret
gs
sbb
xchg
test
shl
xor
daa
dec
jmp
mov
pfsub
jl
mov
into
mov
add
jg
and
sub
icebp
xchg
popf
add
cwtl
rol
data16
call
loop
adc
jge
mov
fs
loope
xchg
pop
adc
push
lods
inc
mov
jecxz
mov
pop
sti
mov
ss
out
test
jb
xorl
push
dec
push
xchg
pcmpeqb
aas
adc
mov
sbb
scas
xor
test
jbe
test
xor
lods
ja
mov
cmpsl
in
add
jmp
pop
in
pushf
mov
adcl
sub
setp
sub
icebp
pop
adc
pop
mov
mov
or
push
out
hlt
sahf
cmp
xor
jmp
sub
out
lock
jbe
out
mulb
mov
pop
xlat
push
mov
outsb
leave
mov
std
xchg
test
add
ficomps
jno
pusha
int
loop
lea
scas
mov
shrd
mov
push
fstl
dec
mov
mov
mov
cmp
ficomps
mov
cld
xchg
xchg
cld
gs
pop
popa
sub
inc
jp
fucomi
push
pop
lods
into
sub
sbb
mov
fucomip
test
jns
mulb
jmp
ds
movsl
addr16
fmull
or
test
sbb
dec
cmp
outsl
sbb
jo
add
sbbb
das
fcoml
mov
pusha
cli
inc
cmpsb
mov
push
arpl
inc
xor
push
loop
mov
mov
out
sti
xor
hlt
inc
xchg
scas
mov
notl
mov
pop
xor
inc
add
loope
dec
push
icebp
mov
mov
pop
pop
ds
xlat
xchg
lds
add
data16
add
sbb
loop
cmp
in
mov
in
pop
xchg
lahf
popa
hlt
sub
or
mov
call
leave
dec
push
outsb
jecxz
xchg
inc
das
pushf
or
movsl
icebp
lods
clc
fldcw
mov
xchg
rorb
sti
cmp
lcall
sub
popf
adc
bound
shr
stc
sbb
mov
add
push
shll
xchg
add
xor
lods
add
jno
sbbl
cmp
repz
jbe
cmp
or
outsb
sbb
lods
fsubl
push
test
mov
dec
sub
into
fdivl
daa
lcall
adcl
fs
adc
cmp
icebp
dec
and
loop
mov
idivb
adc
xor
cs
xor
adc
fdiv
addr16
in
incb
ret
cmp
stos
add
push
sub
jg
lock
mov
cmp
pop
push
fsts
cmp
jecxz
dec
push
xchg
stos
imul
dec
inc
test
outsw
sub
jl
cmp
and
lds
add
out
mov
mov
inc
xor
sub
pushf
aas
ljmp
mov
shrd
jne
js
mov
test
js
cmp
mul
subb
imul
or
loope
xor
mov
jmp
xchg
test
and
jecxz
xchg
dec
xor
cmp
sbb
lret
jns
jo
mulb
out
popa
fwait
jmp
pop
jp
xor
sbb
andl
pop
outsl
mov
sub
call
jb
pop
arpl
movsl
divb
aam
push
xlat
jno
dec
test
xchg
push
faddl
popa
or
sbb
int
mov
repnz
sbb
rcrb
cmpsb
xchg
fmul
loope
jp
mov
cmp
lods
push
test
dec
sti
movsl
lcall
ror
push
add
imul
xlat
fcomi
jnp
jle
outsb
xchg
data16
int
cmp
sub
sbb
ljmp
imul
add
jg
lds
insl
sub
push
xor
hlt
in
sub
decb
add
cmpl
xchg
inc
xlat
enter
out
mov
push
mov
loop
add
dec
in
fadd
dec
dec
inc
imul
loop
cmovle
repz
adc
xchg
xchg
jae
sahf
xor
loop
pop
mov
int
scas
push
leave
stos
lods
out
inc
mov
scas
mov
add
fstpl
mov
dec
lds
pop
mov
pop
popf
hlt
inc
shrl
xchg
outsb
sub
pop
in
enter
cmp
das
jae
push
mov
add
push
dec
sub
jle
jns
lahf
push
je
test
ljmp
mov
roll
les
pop
xchg
inc
sub
mov
movsb
cmpsb
les
ret
minps
pop
mov
push
fidivrs
inc
mov
loopne
sti
loop
mov
inc
inc
mov
aas
cmpsl
out
cmpsb
fnstcw
je
mov
adc
sub
fidivl
fsubs
adc
sbb
xchg
std
nop
mov
cmp
hlt
vdivps
je
xor
loop
mov
into
push
div
or
mov
fdivl
or
pop
mov
mov
jne
and
mov
rcll
jge
push
inc
rcrb
jecxz
call
shll
imul
mov
mov
fwait
mov
mov
mov
loope
not
jno
fisubrl
sbb
or
cmp
sub
outsb
mov
xor
aas
dec
inc
push
lock
fnsave
cld
scas
xor
sti
xchg
in
inc
jmp
pusha
or
push
out
jl
fisttpll
sahf
jne
nop
or
cld
aaa
icebp
xchg
and
fldt
dec
repnz
les
push
repz
sbb
mov
sbb
leave
loopne
in
push
stos
ret
jae
pop
mov
rcll
add
into
in
xchg
jecxz
sbb
movsl
push
xor
scas
in
fwait
push
imul
pop
sbb
subb
mov
js
push
sbb
mov
rep
pop
cli
ss
push
lahf
mov
stc
loopne
mov
gs
push
shrb
stos
out
ljmp
jmp
mov
fwait
push
test
mov
aas
je
fwait
lds
clc
fdecstp
push
mov
jle
xchg
xor
call
xor
dec
pushf
je,pn
pusha
mov
imul
repnz
sbbl
sbb
aam
xchg
pop
jbe
or
test
add
cltd
cli
fnstsw
push
es
add
sbb
xchg
bound
pushf
repnz
sbb
and
sbb
add
mov
mov
xor
cld
mov
jl
hlt
adc
pop
pop
cli
xchg
in
sti
cmp
dec
cmpsb
mov
in
popa
ret
add
test
inc
add
int3
pop
add
lahf
gs
xor
lods
add
add
lds
sub
adc
adc
jne
jmp
stc
nop
add
mov
imul
cmpsb
lret
mov
mov
ljmp
mov
cld
push
push
add
int
data16
fwait
outsb
dec
xchg
xchg
sub
adc
fwait
stc
mov
xor
das
dec
lcall
and
pop
jns
pop
lret
pop
push
sub
fisubl
lahf
jnp
sbb
cmc
push
das
mov
rorl
push
jle
enter
lahf
xchg
jo
xlat
cwtl
hlt
sahf
xchg
dec
stc
sahf
stos
sub
or
mov
push
add
jne
dec
and
xor
mov
add
cmp
test
jmp
rorb
inc
and
insl
imul
jg
lahf
sbb
add
cmc
jge
mov
push
cwtl
and
sahf
mov
or
sbbb
jo
push
daa
les
dec
mov
fcmove
pop
add
in
test
pusha
cli
xor
pushf
add
insb
in
mov
test
test
std
add
cmpsb
lods
shr
dec
outsb
arpl
addr16
xor
xorl
mov
mov
arpl
cwtl
mov
push
push
mov
hlt
push
lock
lcall
outsl
imul
adc
icebp
mov
sub
xchg
in
out
mov
add
sub
repz
dec
stos
pop
xchg
xor
sub
xchg
mov
int
je
jbe
pop
inc
jbe
xchg
pop
add
push
mov
mov
mov
dec
cs
mov
cltd
je
and
fsubs
or
add
imul
scas
inc
hlt
mov
stc
xchg
bound
rclb
repz
mov
push
jbe
mov
pop
data16
cs
imull
call
addr16
aas
addb
mov
or
xor
sub
adcb
mov
aaa
jg
ds
andb
pop
pop
xor
mov
int
xor
mov
or
cmp
pop
dec
sbb
arpl
inc
mov
lods
test
jle
jmp
mov
fldl
mov
das
out
lret
sbb
js
cmp
pop
push
adc
sbb
stos
mov
imul
pop
mov
test
cmc
inc
rclb
sbb
dec
cli
scas
dec
out
adcb
std
std
cmpl
das
fwait
xor
mov
push
and
outsl
and
adc
adc
roll
fwait
imul
in
in
aaa
fldl
mov
xor
loopne
push
push
sub
jo
pushw
sub
call
mov
xchg
shrb
out
sahf
cli
mov
test
inc
and
mov
bnd
pop
lahf
cmpb
scas
nop
or
mov
aad
sbb
call
test
enter
push
sub
test
adc
inc
sbb
ret
cmp
jmp
fdivrs
adc
cmp
lret
outsl
push
or
pop
pop
and
and
and
jnp
jmp
mov
stos
xchg
jp
xchg
fmuls
int
rcrb
and
pop
and
dec
sbb
out
and
lcall
push
in
testl
js
in
cld
inc
inc
popa
cltd
test
sub
mov
int3
cmp
jl
jge
xchg
adc
jle
push
lods
decl
imul
shr
sbb
and
notb
sti
inc
fwait
push
push
xchg
fisubrl
std
push
sub
pop
adc
push
lods
mov
mov
out
movsl
add
jecxz
adc
mov
loopne
jmp
push
or
mov
pop
xor
lds
test
je
ret
xchg
xor
insl
mov
adc
xchg
adc
lods
adc
ss
addr16
pop
cmp
loopne
pushf
sbb
mov
pop
cmp
xchg
add
cmpb
out
xchg
cmc
mov
mov
add
test
jle
clc
mov
xor
lods
or
xchg
dec
in
aaa
aad
es
jb
mov
cltd
lds
lret
cld
jns
pusha
lds
or
push
ljmp
ja
loop
out
out
sti
lret
lock
sub
dec
pop
adcb
cwtl
mov
adc
xchg
jbe
dec
enter
out
push
jl
push
inc
enter
insb
adc
pop
repz
add
aas
repnz
jmp
dec
inc
sbb
iret
ljmp
in
pop
cmp
rol
loopne
cmp
push
pop
fwait
cmp
int3
jae
andb
push
repz
dec
imul
dec
xchg
pop
repnz
popf
sti
mov
dec
xchg
popf
and
mov
rorb
mov
ds
or
fnclex
aad
and
xor
push
not
inc
mov
rorb
adc
push
nop
ds
mov
inc
jecxz
jns
jb
packssdw
pop
cld
cli
or
decb
lods
rol
push
and
subb
push
add
in
dec
inc
mov
imul
popa
int3
mov
call
sub
and
pop
in
mov
nop
push
hlt
sahf
mov
xchg
xchg
adcb
xor
cld
in
jae
push
or
es
pop
sbb
addr16
xor
repz
mov
push
ja
pop
cmp
cltd
shr
lret
xchg
adc
cmpsl
iret
xor
jecxz
out
sub
push
imul
scas
orl
es
mov
es
in
xor
out
mov
outsb
insb
icebp
shl
repnz
jmp
jnp
stos
or
cs
cltd
std
gs
mov
mov
xchg
add
jne
or
add
push
mov
pop
cmp
cmp
fisttpl
inc
mov
inc
bound
ja
ret
rcr
lods
mov
mov
leave
inc
hlt
lea
xchg
aas
cld
repz
cmpsl
jp
jo
and
mov
add
xchg
push
inc
inc
lea
cmp
add
sbbl
int3
jecxz
cmp
pop
addr16
ss
lea
je
mov
cltd
mov
std
insl
imul
sub
or
dec
fcmovnu
aas
fsubr
jo
push
push
push
jbe
outsb
mov
sbb
iret
sub
sbb
lock
fwait
inc
xchg
pop
cli
push
or
enter
das
imul
adc
fcomp
mov
icebp
mov
aaa
pop
add
out
mov
mov
push
ljmp
jecxz
mov
test
dec
es
movsl
loopne
pop
imul
ds
inc
inc
scas
aaa
push
ja
pop
dec
mov
push
dec
jecxz
ds
xor
cltd
iret
xchg
int3
fldt
mov
mov
shrb
mov
inc
mov
leave
lock
and
push
pushf
jp
mov
pop
xchg
lods
jmp
cmp
addr16
mov
out
jnp
inc
push
inc
imull
lods
stos
movsb
testl
gs
mov
out
pop
sub
pop
or
sbb
pop
aaa
add
pop
or
push
imul
mov
fstpt
andl
xor
insb
repnz
sarl
sti
fwait
mov
push
jmp
mov
icebp
xchg
xor
js
aad
outsl
xchg
push
adc
in
add
lods
lods
jns
lds
cmpl
ret
enter
xor
adc
idivl
lret
pop
lock
pop
js
pop
mov
in
sti
aad
mov
aam
lods
or
and
xchg
aam
aas
or
and
pop
out
daa
xchg
sbb
jmp
shll
or
nop
cld
shrb
mov
insb
fnstenv
jno
daa
mov
pop
ret
xchg
xor
ja
test
aas
mov
aaa
into
or
leave
jbe
lock
sub
pop
add
mov
imul
lods
fdivrl
sbb
dec
int3
mov
sbb
mov
cmp
push
dec
fdivl
push
icebp
dec
imul
jbe
inc
cwtl
rcll
pop
jno
insb
fidivs
ljmp
push
outsl
pop
push
lods
ret
lea
mov
ret
stc
jae
or
out
sub
and
ja
dec
mov
rcrl
out
or
xchg
fcomi
lret
imul
daa
decl
xor
dec
fmull
insl
daa
cmpl
inc
cmp
xchg
inc
fbstp
xchg
std
ja
lods
add
and
insl
lock
bound
test
mov
push
sub
pop
mov
inc
xor
loope
sub
add
fnstsw
repz
dec
cmpsb
in
loopne
sahf
pop
ds
add
lret
xchg
push
cli
xchg
fcmovnu
and
jbe
cwtl
dec
outsl
dec
pop
mov
pushf
scas
test
je
push
jbe
add
mov
push
imul
scas
jns
mov
adc
and
dec
clc
xchg
cli
lret
loope
repz
and
xlat
ret
inc
push
jne
jge
cli
and
sub
or
mov
jmp
js
or
dec
jl
icebp
sub
inc
test
arpl
jle
test
les
call
movsb
add
mov
mov
sub
in
div
push
add
daa
ja
sub
jle
out
cmc
dec
roll
cmp
pop
cmpsb
lock
testl
mov
sbb
dec
inc
lods
inc
stc
arpl
adc
cmp
xor
mov
inc
push
mov
xlat
mov
loop
ja
mov
out
mov
mov
cmp
adc
mov
dec
pop
inc
add
cmp
movsw
inc
cwtl
mov
dec
fists
nop
push
cwtl
scas
loope
mov
pushf
pop
cmp
jb
xchg
sub
pop
insb
push
ss
and
adcl
js
mov
mov
pop
fistpl
sti
push
sbb
xor
mov
sbbb
xchg
mov
lcall
movsl
add
xlat
xor
insl
pushf
pop
scas
jmp
test
sub
jb
mov
mov
jbe
lret
lds
outsb
aas
daa
jecxz
inc
not
test
fildl
enter
stos
enter
xchg
add
ja
adc
ljmp
mov
add
mov
sahf
adc
pop
xor
mov
or
loopne
outsb
sub
mov
ss
and
and
push
dec
fwait
push
test
dec
push
mov
cmpsb
inc
dec
popf
cmc
sbb
cmpl
mov
fistps
push
sbb
push
arpl
xor
xchg
mov
jmp
add
int3
xor
push
xor
mov
mov
in
mov
cmpsl
ds
clc
xchg
mov
xor
inc
int3
jg
dec
push
scas
call
aaa
xor
jg
push
mov
sub
inc
push
mov
push
adc
xor
sub
push
mov
add
pop
fstpt
push
mov
push
movsl
cmp
cmp
pushf
repz
repnz
cs
jbe
adc
fstpt
mov
shl
smsw
and
mov
pop
daa
cmc
mov
cmp
mov
push
mov
mov
popf
xor
mov
cmp
cmp
xchg
scas
pop
sub
dec
inc
push
or
mov
or
shlb
cmp
test
mov
lcall
gs
xor
cmpsb
out
push
sbb
push
inc
imul
movsl
inc
pop
jnp
aam
mov
loopne
fwait
mov
inc
in
jno
inc
fldcw
add
cmpsl
pop
pop
jmp
jno
out
jle
cmp
sbb
dec
enter
in
cld
out
fimull
std
sarb
loope
pop
sbb
sbb
or
lea
mov
lea
mov
adc
fcompl
mov
hlt
stc
daa
addr16
xchg
mov
dec
pop
pop
jl
jnp
mov
test
mov
mov
les
insl
sub
inc
inc
dec
ficoml
mov
iret
shr
in
xchg
xchg
xor
or
rcl
adc
fimuls
xchg
test
jl
leave
test
sub
inc
sbb
es
fnsave
xchg
loop
jl
mov
pminub
stos
test
dec
jnp
or
fildll
mov
std
sub
lcall
movsl
cmp
xchg
jmp
sbb
mov
mov
data16
inc
mov
mov
cmpsl
push
cmp
or
push
shll
data16
inc
mov
icebp
jnp
inc
xchg
lods
cmp
frstor
ss
leave
test
lcall
inc
insb
scas
sbb
popa
mov
ret
or
mov
pop
in
add
pop
mov
lods
push
add
lcall
or
cltd
je
in
jecxz
xchg
aaa
xlat
jmp
mov
mov
xlat
cmc
dec
xor
out
sub
add
ret
shrb
aaa
adc
jp
mov
cmc
mov
lea
adc
imul
xchg
aas
iret
mov
insl
sahf
dec
rcrb
or
dec
sahf
shl
mov
sahf
lea
rcl
sahf
adc
cltd
mov
mov
push
mov
xorl
nop
inc
add
jns
subl
xlat
lods
mov
push
mov
pop
cs
out
xor
stc
fs
lock
lret
cld
cmp
in
and
adc
add
movsl
push
dec
jae
cmpb
loop
cwtl
or
sbbb
jl
js
popf
outsl
movb
jbe
pop
jno
pop
jae
rorb
sub
or
pop
jae
cwtl
int
int
sub
adc
sbb
xchg
sbb
cmp
jbe
ja
lret
sbb
sub
dec
inc
lcall
lods
jo
aam
inc
movsb
mov
cltd
rol
rcrb
sub
int3
adc
or
jmp
cmp
or
sarb
out
push
mov
cmp
iret
sahf
cmp
push
aas
pop
out
or
cmp
mov
sub
inc
xlat
mov
jne
cmp
inc
in
or
xor
inc
push
pop
and
mov
sbb
cwtl
or
mov
xchg
fistl
ror
cmp
std
jne
popf
cmpsb
and
push
adc
sbb
in
ret
sub
fldl
out
cwtl
int3
jns
imul
add
xchg
or
out
cmpsl
loope,pt
out
insl
aas
mov
xlat
and
imul
or
inc
adc
mov
xor
test
rolb
push
hlt
sub
loope
inc
ficompl
punpckldq
inc
push
out
push
int
test
repz
pop
jno
inc
mov
dec
lret
mov
mov
jo
insl
jb
into
xor
inc
bound
add
xchg
fwait
jecxz
les
sbb
add
scas
call
inc
es
or
movsl
stc
mov
sbb
pop
and
adc
fidivl
jb
add
aas
test
dec
push
cmp
cmp
mov
or
sti
xchg
je
jae
leave
fnstenvs
pusha
push
pushf
sbb
xor
push
or
mov
add
jle
js
cmpsb
push
or
clc
inc
es
add
mov
push
ds
xor
pop
fstl
inc
popf
popf
mov
stos
outsl
mov
andl
sub
insb
inc
cwtl
inc
fistpll
loop
addb
push
and
pop
std
jne
hlt
mov
rclb
jns
es
repz
lret
or
cmc
insl
outsl
incb
ss
sub
pop
mov
dec
adc
data16
movsl
daa
lock
push
aad
mov
aaa
mov
call
mov
mov
and
xchg
mov
dec
stos
sbb
mov
push
dec
cmp
mov
addl
out
xchg
dec
or
pop
inc
mov
popf
inc
push
out
dec
loope
out
cmc
sbb
addr16
inc
mov
icebp
cmp
mulb
and
jnp
lds
mov
fmull
scas
int
sub
repz
ds
aad
std
push
and
int3
movsb
ret
je
outsb
jmp
jae
imul
cmc
mov
aad
xchg
sub
mov
sti
arpl
xor
loop
xor
sti
lods
inc
jmp
xor
enter
cwtl
dec
mov
cmp
jo
std
in
nop
daa
loope
clc
sahf
xor
mov
pushl
shll
lret
sbb
stc
mov
in
sub
push
jmp
jae
mov
jle
pushf
insl
mov
inc
and
nop
daa
mov
pop
cmc
loope
cmp
pop
xor
jle
shlb
js
je
pop
dec
fisttps
mov
lahf
aam
lods
inc
ljmp
scas
loop
or
jnp
cmp
aas
dec
rclb
jle
int
cmpsl
imul
cmp
mov
jl
repnz
das
loop
addr16
ds
cmpsb
scas
cmc
inc
xlat
call
xor
pop
daa
jp
gs
jge
fidivs
cli
xchg
inc
clc
inc
fsubr
fadds
lret
aas
and
dec
jl
dec
jo
pushf
xor
cmpsl
aam
pop
dec
cli
xchg
cmp
fwait
xor
jo
push
mov
jo
cwtl
mov
mov
jge
and
push
xor
jo
ja
fcmovb
pop
sub
shlb
adc
cmp
leave
jg
scas
lock
mov
sbb
pop
mov
adc
std
adc
test
in
dec
fldenv
or
cltd
and
lods
outsl
jle
and
outsb
out
xor
xchg
push
pop
cwtl
pop
push
pop
dec
jns
loope
mov
xchg
cmpsb
ds
sub
push
inc
xor
cld
jecxz
cmp
cltd
out
xlat
push
les
hlt
mulb
data16
sbb
mov
ret
jo
push
mov
adc
rorb
rorl
adcb
add
mov
out
arpl
sbb
aad
scas
pusha
mov
bound
inc
push
or
jae
adc
push
cltd
push
imul
push
sbb
jne
mov
xor
mov
in
or
dec
shll
mov
imul
test
std
fwait
sub
xchg
sahf
jne
lret
insb
insb
or
inc
imul
dec
inc
dec
ljmp
pop
xchg
inc
push
dec
cmpsb
push
adc
pop
repz
stos
mov
mov
and
subl
push
pop
dec
rcrb
fs
setae
xchg
test
jl
mov
jae
lock
pusha
and
inc
inc
fidivs
sar
xchg
in
pop
icebp
fistps
cmp
pushf
xor
fcoms
lods
lret
out
jae
fists
cltd
inc
inc
mov
xor
sbb
mov
push
cmp
mov
in
fs
pop
push
ret
pop
insb
cmp
insl
ja
jb
inc
pop
test
ds
push
imul
jns
mov
test
lret
lods
dec
arpl
mov
mov
cmp
or
adc
push
jl
inc
fldl2t
mov
in
mov
cli
les
icebp
mov
popf
lock
mov
incl
adc
xchg
out
int3
ficoms
add
mov
dec
or
sub
imul
ret
iret
inc
xor
dec
ret
jno
lcall
insb
test
mov
fs
mov
jmp
sbb
insl
inc
sub
xchg
mov
lahf
hlt
and
push
jg
xchg
mov
test
mov
inc
testb
push
insl
ja
pop
xor
roll
xchg
jno
pop
test
jae
xor
test
scas
fdivrl
jb
daa
cld
sub
call
and
in
mov
ret
test
push
int
jle
js
lcall
loope
leave
movsl
adc
pusha
cli
out
mov
cmp
inc
fldl
popa
mov
into
call
dec
fisubs
std
jae
popa
icebp
rcpps
xchg
in
in
inc
add
ret
xlat
popa
mov
mov
mov
pop
std
xchg
adc
jle
mov
or
jmp
sub
lods
imul
pushl
jp
lds
imul
mov
fisubs
add
gs
mov
inc
lods
mov
inc
cltd
js
arpl
inc
insb
and
imul
call
std
test
dec
push
lret
mov
out
int
pushf
push
dec
cwtl
xchg
decl
mov
push
ror
push
inc
clc
sub
lock
inc
fstpl
dec
pop
and
cmpsb
pushf
repz
cmp
adc
mov
mov
push
dec
xchg
andl
push
sbb
call
sbb
jo
cmp
lret
rcrl
sbb
cli
cmpsb
loop
or
dec
mov
test
pop
out
int
std
jmp
pop
ljmp
fiadds
mov
div
push
ss
push
leave
loope
mov
out
mov
lret
std
lock
stos
push
mov
inc
sti
pop
add
lahf
cmp
jae
ss
imul
test
sub
mov
mov
inc
stos
jg
std
stos
mov
cmpsl
mov
jnp
lods
call
mov
mov
fs
pop
xchg
sub
mov
xor
push
push
xchg
xchg
dec
gs
inc
cltd
xor
xor
dec
mov
push
out
arpl
nop
out
insl
xchg
cs
sub
mov
jg
in
or
mov
xchg
mov
push
push
inc
push
pop
mov
scas
xor
pop
jb
mull
test
shlb
jge
sub
into
test
sbb
fidivrs
mov
in
mov
scas
outsb
shll
fisttpl
cmp
movsb
aaa
adc
mov
gs
outsl
mov
xchg
jae
mov
gs
repnz
movsl
repnz
repz
pushf
dec
mov
ffreep
pop
sub
in
clc
nop
sahf
push
push
xchg
mov
aad
int3
jg
jp
shrl
rolb
push
loopne
ljmp
rolb
mov
inc
shl
jnp
int3
pop
icebp
nop
lahf
ss
or
push
mov
mov
or
or
lea
dec
cmpsb
dec
cmp
test
pop
gs
jo
adc
into
mov
sbb
adc
jecxz
in
mov
test
inc
sub
sti
dec
lods
sub
or
mov
sub
fucom
add
push
inc
data16
jle
jmp
fstpl
int3
xchg
mov
dec
fnsave
test
lds
and
popa
daa
out
ret
dec
jmp
leave
sahf
dec
popa
fcoml
and
or
dec
in
sub
jmp
sub
mov
push
sbb
sub
push
mov
lea
gs
mov
shrb
xchg
sbb
pop
push
xchg
pop
mov
cmp
stos
insb
vpaddusw
push
shrl
inc
sbb
dec
lahf
dec
fwait
movsl
mov
jo
pushf
jl
mov
fcomps
rcr
test
icebp
cli
push
jbe
fwait
sarb
lods
xchg
cs
rorl
sahf
cs
nop
imul
pmulhw
jnp
aaa
push
ficoml
shrb
fs
gs
rorl
enter
cli
scas
idivb
int
shll
lock
xchg
dec
xchg
xchg
push
out
add
push
outsl
lcall
outsl
or
mov
in
adc
in
jg
cmpsb
mov
add
or
test
stos
xchg
inc
fnstcw
sbb
add
ret
rcrl
inc
outsb
jl
pop
or
sahf
or
int
inc
sbbb
and
hlt
xor
aad
push
mov
sti
adc
xor
xor
in
lret
pushf
xchg
cmp
movsl
icebp
dec
add
scas
xor
mov
or
dec
jo
xor
sti
mov
push
and
aad
lods
inc
lea
int
scas
lret
push
push
lret
jbe
sbb
outsl
add
lds
imul
sarl
mov
sbb
jne
xlat
shll
and
add
jge
mov
mov
cmp
clc
aad
add
sbb
pop
movsb
adcb
cmp
push
clc
mov
test
shl
and
pop
sbb
push
xor
mov
dec
call
mov
and
lret
xchg
es
outsb
loope
aas
data16
fwait
jl
sahf
cmpl
mov
xor
mov
cmp
fs
mov
mov
push
icebp
mov
sbb
fiadds
push
add
jae
int
pop
push
mov
cmpsl
and
insl
movsb
pop
sbb
cmp
xor
push
mov
pop
lcall
loop
inc
push
or
stos
xchg
cmp
lret
scas
mov
sub
sub
adc
movsb
cmp
cmp
adc
jbe,pt
pop
das
xchg
mov
xor
add
cmpsb
fiaddl
add
bound
movsl
add
incl
or
pop
fs
pop
adc
and
cmp
jecxz
push
out
dec
imul
shrb
in
sub
mov
jbe
int
loop
clc
ja
movl
outsl
cwtl
in
push
fdivl
lea
inc
loop
or
shrl
aaa
push
test
mov
sbb
push
adc
mov
dec
cwtl
xchg
test
mov
push
pop
xlat
sbb
scas
incl
add
outsl
or
test
push
icebp
mov
adc
or
mov
cltd
stos
xchg
fdivl
sub
xor
mov
ds
lock
inc
les
mov
leave
mov
int
adc
shll
cmpsb
push
mov
fs
cwtl
orb
push
add
xchg
das
sbb
adc
pop
inc
xor
jb
fnstsw
xchg
imul
imul
sahf
gs
sbb
dec
popa
out
pop
xchg
inc
sbb
pop
dec
cld
lcall
cwtl
xor
xchg
lcall
dec
cmp
test
mov
sbb
ss
push
push
popf
cmp
leave
andb
mov
pop
fwait
pop
fs
mov
sbb
or
push
or
lds
and
in
inc
push
push
push
lds
xchg
sbb
inc
lret
aam
clc
cltd
push
sub
dec
xchg
call
ss
push
imul
add
sub
rorb
out
in
cmc
ret
jg
mov
out
push
in
cmc
call
sbb
adc
icebp
and
ja
lea
push
movsl
cmc
rorb
mov
in
jp
xchg
sahf
xor
scas
mov
dec
pushf
xor
pop
fstpt
sub
add
ljmp
sbb
scas
jno
sub
inc
loop
fs
sub
ds
and
aaa
fld
dec
out
cli
dec
in
xchg
jo
subl
data16
ja
dec
sbb
add
inc
lret
repnz
ds
jns
enter
mov
les
ss
push
sbb
fsub
push
add
or
xchg
ss
lds
icebp
out
xor
in
cmp
add
lock
cmc
lods
xor
aas
and
stc
imul
xor
or
leave
in
pop
aam
ret
es
ret
push
pusha
cmp
pop
in
inc
mov
xor
aas
fldenv
loop
jp
in
xchg
cmpsl
insl
loopne
dec
dec
dec
addb
adc
leave
movsl
lretw
aam
xor
stos
jl
sar
popa
xor
data16
sbb
inc
fistpll
clc
arpl
imul
aam
in
and
lock
inc
xchg
jne
pusha
test
xchg
ds
jg
adcl
dec
fwait
subl
sbb
xchg
bound
sahf
movsl
mov
decl
outsb
xchg
xchg
aas
mov
xchg
sbb
push
dec
push
add
int
scas
sbb
pop
jbe
mov
push
int3
xor
ss
inc
mov
mov
in
mov
or
bound
dec
or
into
xor
test
push
inc
fmuls
es
jae
ret
int3
xor
insl
es
pop
inc
fwait
add
das
inc
nop
fldt
pop
xor
mov
cmp
lahf
es
pop
es
xchg
inc
cwtl
push
jmp
std
push
test
dec
mov
or
inc
decb
in
fwait
inc
xchg
sub
data16
sbb
inc
or
xchg
add
ljmp
scas
cwtl
sbb
movups
movsl
adc
movsb
sti
mov
stos
push
cmp
jg
aam
push
inc
rol
jmp
pop
mov
lds
bnd
ss
shrb
adc
lds
insl
neg
fldcw
repz
sbb
xlat
enter
xchg
icebp
jp
aas
nop
popf
cmp
inc
pop
ljmp
lods
lea
xchg
cmp
adc
out
in
ja
cmp
movsl
cwtl
xor
frstor
and
xchg
in
pop
xchg
pop
repnz
fimull
fdivp
adc
pop
enter
xchg
les
sbb
ret
sahf
repnz
iret
xchg
mov
aad
lcall
imul
mov
loopne
mov
enter
imulb
push
imul
inc
in
jb
insb
adc
mov
push
mov
je
sub
ljmp
sbb
jge
dec
dec
add
sbb
cmpxchg
insl
adc
xchg
sbb
push
in
incl
adc
jecxz
mov
pop
movsb
dec
xlat
xor
mov
scas
mov
aaa
mov
or
push
out
xor
adcb
sub
and
shr
adc
mov
mov
popa
stos
es
out
ss
ljmp
in
loopne
cmp
stos
movsl
adcb
push
sti
shll
bound
sbb
inc
or
dec
jnp
inc
out
and
iret
cmp
jmp
ja
cmp
fcomi
out
push
leave
int3
sub
pop
sub
repz
push
bound
aam
xchg
notb
sbb
mov
outsb
dec
enter
jecxz
pop
stc
test
in
js
xlat
sahf
add
dec
sub
xorb
js
lods
xlat
inc
ljmp
sbb
xchg
gs
xchg
mov
sub
cmp
orb
arpl
clc
and
mov
fisttps
pop
outsb
sub
mul
into
and
cmp
adc
inc
mov
pop
pushl
adc
dec
int3
lret
ret
in
and
ljmp
test
sbb
push
mov
xchg
pop
mov
push
movsl
in
fs
jnp
inc
push
lods
add
mov
jne
mov
add
or
mov
mov
cltd
pushf
mov
xchg
mov
out
rcrl
pop
jo
add
jl
or
popa
mov
cmpsb
out
xlat
out
adc
xlat
pop
and
xor
mov
pop
pop
out
or
shrl
mov
repz
lods
sbbl
in
xchg
je
in
mov
dec
popf
sbbb
rcl
loopne
xchg
sub
test
jbe
push
test
inc
test
fdivl
xchg
cmpsb
or
pop
lock
mov
xchg
aaa
mov
xchg
insl
mov
dec
hlt
into
mov
incb
popa
and
sbb
outsl
in
std
into
jne
mov
mov
pop
lret
pop
test
cld
pop
fisubrl
sar
call
mov
push
cmc
dec
shrb
cmp
ds
mov
dec
mov
inc
push
fwait
pop
popf
clc
pop
test
mov
push
add
mov
cmpsb
dec
mov
jp
clc
pop
xor
cmpsl
int3
lret
pop
mov
sub
cmp
jg
jnp
cmp
in
add
sbb
cmpsl
insb
add
pop
test
int3
hlt
mov
mov
imul
sarl
add
shlb
pushf
lret
push
cmp
ret
push
pop
cmp
nop
popa
ret
fdiv
hlt
inc
or
xchg
mov
mov
or
mov
pop
imul
insb
and
loop
test
jge
push
iret
fisubrs
add
jb
movsl
sub
dec
fs
outsl
jns
das
push
lcall
push
imul
cmp
mov
repz
jmp
sbb
insl
nop
pop
pop
jo
rcl
out
cmpsl
sbb
mov
jae
aaa
mov
xchg
dec
movl
daa
test
shl
add
cmp
popf
aad
inc
ljmp
mov
fcoms
movsb
or
pop
jg
dec
xor
jno
pop
mov
jecxz
push
mov
add
jb
and
out
sub
lods
jmp
dec
mov
push
pusha
scas
inc
push
hlt
adcb
out
mov
xor
and
xchg
xor
sub
test
add
mov
pop
int3
arpl
outsb
outsl
andl
testl
jns
shll
pop
jne
mov
xor
in
lcall
shrb
out
pusha
mov
fisttpll
clc
iret
inc
pop
adc
xlat
fisttpll
aam
stos
cmpsb
cmp
mov
loopne
add
or
xor
push
fsubrl
cmpsb
aaa
stc
shlb
xchg
inc
arpl
mov
sbb
push
mov
jl
popa
sahf
xor
out
enter
inc
cmp
xchg
shrl
in
in
ds
cmp
mov
ds
das
push
push
cld
rcrl
jae,pn
xor
cltd
aam
paddq
jle
cmc
sub
cmpb
imul
addr16
jo
jne
insl
and
adcb
cmpsb
cmp
dec
sbb
test
xlat
sbb
fstpt
mov
repz
dec
or
mov
pop
adc
fnstenvs
clc
rcl
xor
sub
pop
dec
cmpsl
loop
scas
inc
or
sbb
scas
push
lcall
in
add
pop
jbe
shll
or
notl
pop
ja
cmp
ljmp
aad
dec
fs
arpl
je
sbb
lods
inc
mov
lahf
adc
cld
push
mov
out
sahf
fs
out
and
insl
or
outsb
sbbl
cmp
fsubrl
addr16
shl
cld
pushf
mov
aas
addb
adc
stos
add
sub
stc
cmc
add
idivb
shrl
jnp
mov
xor
add
cmp
jmp
andl
popf
flds
mov
adc
in
scas
pop
dec
cmp
mov
stos
dec
mov
and
jne
mov
push
and
loopne
dec
test
xchg
shl
add
lret
data16
pop
out
cwtl
lods
inc
int3
hlt
popf
jne
in
lret
adc
out
lods
jmp
pop
pushf
dec
adc
cld
mov
outsl
inc
fs
pop
pusha
xchg
add
xchg
incb
nop
imul
adc
inc
dec
jns
jbe
lcall
dec
mov
push
mov
fs
stos
jns
aam
push
lcall
leave
mov
mov
and
jge
pop
fstpl
mov
push
loop
add
mov
test
mov
into
or
xchg
sub
add
pusha
aaa
popf
cmpsb
mov
mov
and
mov
inc
adcl
xlat
lret
cmp
insl
mov
inc
addr16
dec
mov
pop
enter
les
cwtl
cmp
popf
hlt
mov
popa
daa
test
inc
push
and
fcomps
mov
insb
mov
sbb
xchg
fbstp
dec
sbb
stc
popf
repz
test
dec
xchg
fstpl
jo
inc
bound
xor
addr16
roll
out
gs
pop
jmp
jb
jl
xor
in
stos
lahf
sbb
jb
ror
xor
and
and
push
rep
xchg
cmpsl
push
jle
xchg
sbb
adc
adcb
and
jl
loope
add
and
jb
out
xor
into
sahf
aad
cmp
js
les
xchg
js
mov
sbb
sahf
jle
mov
cli
data16
push
mov
jecxz
sbb
lahf
mov
adc
sub
inc
out
shrl
dec
mov
bound
lods
sbb
rclb
in
jp
iret
sahf
jb
sti
test
ja
loop
popa
push
mov
test
add
dec
stc
orl
dec
pop
call
fldenv
jnp
push
mov
dec
cmp
mov
and
push
jb
imul
je
movl
mov
dec
dec
mov
shrl
imul
adc
loopne
ret
out
dec
jnp
cmp
mov
nop
xchg
lret
loop
shlb
ficomps
pusha
shll
xchg
test
sub
mov
mov
or
and
cli
push
push
mov
jo
cld
hlt
push
add
stos
inc
aad
shrl
cmc
aam
jecxz
fidivs
push
in
stos
sbb
loope
pop
mov
in
fdivl
mov
out
shlb
lret
pusha
lcall
lock
mov
dec
mov
test
cwtl
adc
pop
xchg
int3
push
inc
pop
cmpsb
adc
push
xor
mov
jns
push
imul
push
cmpsl
xor
andb
or
xchg
iret
mov
mov
outsl
ret
scas
xchg
insl
movd
dec
in
lret
stos
cltd
insb
enter
in
ficoml
cmp
sbb
loopne
sub
jo
mov
leave
fldcw
je
inc
mov
filds
mov
cmpsl
shrb
pop
push
in
test
clc
outsb
movsl
test
mov
xor
cld
push
daa
into
jmp
pop
xchg
pop
repz
shll
out
cmpsl
xchg
js
mov
jecxz
jne
ja
test
push
pop
xchg
mov
dec
mov
js
dec
outsl
jo
mov
mov
repnz
pop
push
mov
sub
cmc
mov
push
popa
xor
cs
add
push
lahf
mov
xchg
je
sub
ja
push
enter
jnp
movsb
mov
xchg
sub
cmpsl
jp
mov
add
enter
fwait
or
mov
mov
jae
lret
xchg
test
aam
out
xchg
push
fimuls
lds
call
outsl
jmp
mov
xor
mov
lds
push
enter
dec
shll
sarb
pop
jae
and
test
xchg
sub
arpl
mov
mov
or
js
lret
inc
push
rclb
cld
pop
jp
or
js
sub
push
aas
rcl
orb
scas
cmpsb
shrb
dec
jle
fs
jg
adc
xchg
push
cmp
xlat
cmpsb
outsl
dec
es
xchg
scas
cmp
mov
shrl
ret
add
pop
jmp
in
icebp
adc
es
leave
frstor
loop
test
add
dec
hlt
clc
sti
mov
scas
pusha
push
in
xlat
or
pop
xor
cltd
inc
outsb
pop
icebp
jp
pushf
inc
sbb
scas
ror
cld
out
cmpsl
stos
outsb
inc
loopne
enter
test
aad
sahf
test
ret
push
fstpl
ficomps
inc
dec
cs
jns
lahf
movsb
jnp
add
out
stc
mov
shlb
dec
pop
mov
jg
sub
inc
neg
mov
pop
inc
fwait
bound
dec
dec
dec
out
fimull
sub
fucomip
lods
out
jae
adc
or
and
shll
cmpsb
mov
nop
xor
jg
dec
dec
mov
in
out
ret
sub
mov
daa
jno
pop
sarl
dec
jmp
aad
lahf
mov
pop
sub
popf
cmpsb
mov
or
dec
lahf
pop
xor
fsubrs
lds
push
faddp
xor
jecxz
pop
adc
cmp
jp
push
xchg
fsts
jae
daa
mov
test
sti
sbb
jmp
or
dec
mov
push
repnz
cs
add
sbb
fwait
lea
cmp
fcmovne
mov
xchg
cld
int3
xor
ljmp
xchg
jno
jg
roll
stos
inc
test
inc
cmp
pop
movsb
enter
lret
bound
test
mov
adc
pop
add
push
fcoms
inc
cli
push
xlat
inc
in
adc
fisttpl
ds
push
jmp
testl
dec
je
cmpsl
out
out
test
arpl
push
jnp
mov
mov
sbb
jmp
jp
out
cmp
jns
xchg
mov
push
sbb
in
sub
pusha
or
push
iret
call
xor
ret
call
adc
add
mov
push
inc
fstps
pop
test
cmp
rep
and
andl
pushf
shl
jp
pusha
ljmp
mov
mov
push
adc
sbb
inc
add
jmp
call
adc
ret
cmp
movsb
dec
dec
push
or
shrl
rclb
mov
push
in
inc
icebp
rclb
fwait
js
cmp
nop
ja
push
xor
pop
mov
mov
cmpl
sarl
mov
mov
enter
dec
popa
jne
xor
enter
lret
sub
daa
inc
cld
hlt
mov
push
pop
addr16
ja
dec
sbb
inc
pop
xchg
in
nop
pushf
pop
mov
pop
or
mov
aas
jp
and
add
lds
push
inc
dec
cmpsb
cltd
cmp
das
les
cmpsl
cmp
mov
jbe
pop
and
inc
sub
push
cmp
mov
or
mov
jp
sbb
push
sub
loope
mov
sub
call
enter
pushf
fstpl
sahf
pop
xor
push
sub
lods
or
sub
adc
lds
xchg
pop
push
jmp
ss
xchg
xchg
jae
adc
sbb
push
inc
shll
xor
mov
sub
notl
dec
xchg
sub
mov
dec
jno
mov
into
pop
sub
addr16
dec
inc
pop
mov
cmpsl
pop
mov
mov
ficoml
insl
in
in
addr16
cmc
mov
mov
test
notl
and
dec
xchg
push
jno
sub
mov
mov
es
loope
xchg
sarl
push
xlat
push
sahf
scas
clc
inc
jmp
mov
xchg
xchg
push
or
or
mov
pop
sahf
adc
inc
repz
adcl
xchg
in
add
adc
je
xor
pushf
inc
sbb
push
xchg
cmpsb
lods
mov
and
sbb
fiaddl
test
in
fildl
hlt
mov
mov
or
aaa
into
jo
iret
xor
aam
test
push
daa
out
leave
movsl
cld
sub
push
cmpsb
test
xchg
cmpsl
icebp
dec
pop
das
insl
or
cld
pushf
cli
xor
xchg
jnp
push
mov
popf
test
int
lret
push
nop
daa
imul
cmpb
aam
xchg
fmul
outsl
mov
pop
xor
in
jb
xor
in
lret
fstl
cltd
gs
mov
jg
cltd
lcall
sarl
xor
clc
cwtl
jecxz
xchg
cmp
fcomps
int3
mov
push
push
fsts
les
jb
sbb
scas
cmpsb
lds
pop
lcall
out
ret
js
inc
fimuls
cmp
jb
movsb
dec
frstor
int3
cwtl
mov
or
test
fwait
lods
out
push
inc
cmp
stc
fstps
push
sbb
setge
imul
data16
add
xchg
sbb
inc
test
lcall
jmp
idivl
fs
and
jl
cmp
lods
add
pop
ljmp
and
or
rolb
mov
pop
sbb
dec
cmp
stos
roll
mov
cmp
fidivs
mov
cli
dec
pop
inc
sub
adc
icebp
mov
adc
scas
inc
aad
out
pop
stos
push
sub
nop
fbstp
imul
cli
sbb
lock
dec
test
add
mov
repnz
loope
scas
orl
cmpsb
and
push
jne
inc
and
cmove
jp
mov
sbb
lcall
mov
push
inc
push
iret
std
in
dec
insb
gs
rcrb
notl
out
push
jmp
out
inc
pop
xchg
mov
push
out
sbbl
sbb
xchg
adc
adc
or
loop
and
pop
cs
dec
fbld
mov
data16
inc
xlat
push
gs
mov
fistpl
pushf
pop
sti
or
ss
jl
mov
pop
xchg
mov
fidivl
dec
insb
dec
loope
jno
xchg
mov
dec
popf
xor
jge
cld
cmc
mov
cld
rcrl
sub
test
push
sub
cmc
xchg
lods
jecxz
test
roll
mov
scas
sbb
xor
mov
jb
stos
inc
scas
cmp
call
ret
pop
imul
in
lcall
pop
or
mov
into
ljmp
dec
xchg
dec
fistl
sub
movl
cld
aad
sbb
repnz
imul
cmp
dec
xor
fcomps
clc
shll
shll
cmp
adc
subps
repnz
push
push
popf
mov
ret
outsl
lret
sti
mov
shrb
outsl
add
sbb
mov
and
and
not
shll
push
addr16
repnz
and
jnp
mov
aam
inc
adc
loope
gs
jmp
je
fwait
or
outsl
xorl
dec
in
jle
repz
push
sbb
loope
sub
or
pop
dec
mov
jnp
sub
or
jns
pop
ret
inc
insl
jge
pop
jns
sbb
js
lret
or
inc
mov
js
in
xor
push
cmpsl
push
sbb
test
je
lods
aaa
push
push
adc
cmp
and
shrl
in
xor
daa
out
adc
pushf
mov
repz
out
and
xchg
lock
jne
jle
lahf
xor
insl
call
cmpsl
mov
nop
push
mov
adc
inc
mov
push
add
lods
ret
xor
push
aas
loop
sti
and
cltd
mov
pop
add
addr16
mov
xchg
or
ret
cli
mov
imul
sub
fwait
xchg
mov
popa
adc
test
loop
pop
inc
imul
mov
lret
and
mov
ja,pn
int
mov
jne
push
pop
loop
pop
js
sub
add
int3
or
or
fsubl
std
adc
loop
je
sbb
jb
push
cmp
repnz
sub
repz
and
xlat
sub
mov
jmp
lret
mov
jp
in
jno
adc
push
cwtl
xor
or
sbbl
lcall
enter
inc
jmp
ljmp
pop
inc
ficomps
imul
in
das
pop
jmp
in
jno
xor
xor
dec
sub
scas
rcll
add
push
pop
sbb
mov
js
out
lea
mov
repz
and
clc
cmp
outsb
cmp
adc
mov
adc
cmp
xchg
icebp
adc
test
ficoml
push
je
mov
jae
shll
sbb
test
scas
jl
push
in
add
jl
aam
negl
push
sbb
cs
movsl
dec
dec
movsl
bnd
fidivrs
clc
jmp
push
xchg
jp
popa
pop
dec
loope
and
mov
xchg
das
ss
ret
out
inc
testb
push
jbe
cmp
xchg
dec
arpl
lea
sub
icebp
inc
mov
jp
daa
jno
ret
ret
shrb
pop
pop
stc
xor
sbb
out
ret
sbb
int
mov
mov
mov
push
std
lods
xchg
in
rol
fistpl
jle
mov
nop
in
push
subb
sti
es
je
add
mov
int
sub
out
shr
out
xor
ds
sub
fists
ja
sub
std
cmpsb
dec
pop
cld
dec
hlt
xchg
pop
sub
push
outsb
jle
add
pop
xchg
rcrl
dec
cmc
inc
sahf
mov
pop
adc
aad
jmp
addb
loope
pop
xchg
ret
xor
lcall
outsl
sbbl
out
gs
iret
outsl
loop
enter
jge
cs
push
inc
jmp
lea
mov
mov
sbb
mov
push
cmpsb
std
fucomp
dec
mov
xor
fst
imul
mov
out
xor
in
mov
mov
push
fidivl
fdivl
sbb
cltd
jle
mov
jg
mov
mov
and
daa
popf
pop
push
call
and
push
shrl
outsl
dec
mov
push
sete
fstpl
add
cmp
gs
int
fbld
mov
adc
daa
divl
xor
enter
dec
pop
add
or
mov
jb
cmp
adc
sbb
dec
xchg
or
xlat
or
mov
and
outsl
cmpsb
xchg
xchg
inc
ss
xor
jne
jle
stc
ret
inc
and
out
ss
jno
int
and
push
in
jnp
int3
cmc
mov
sti
fwait
cmp
adc
xor
inc
cmpsb
push
mov
push
jle
imul
or
loop
scas
xchg
xor
int3
cltd
aaa
out
or
sbb
incl
fisubrs
adc
daa
cs
xchg
out
imul
mov
addr16
and
mov
bound
in
jge
shr
popf
lock
jge
xor
lods
lcall
sbb
mov
roll
sub
lea
push
sbb
call
jecxz
adc
repnz
and
jp
pop
or
imul
or
fldpi
icebp
xchg
push
or
xor
mulb
and
pop
push
mov
fistpll
pusha
clc
int
jmp
pusha
shrl
mov
loopne
lods
cs
or
mov
insb
pop
mov
ficoms
sbb
test
into
pop
sbbb
xchg
int3
addr16
stos
inc
mov
jo
push
push
push
add
jp
das
or
dec
popa
or
add
les
inc
lods
testb
mov
js
inc
xor
jl
test
popf
dec
add
jecxz
mov
les
repz
mov
pop
mov
cmp
sbb
pop
or
push
add
inc
shrb
test
sti
pop
cmp
jne
pop
adc
cmp
gs
adc
repz
mov
pop
cmp
gs
xchg
xor
inc
mov
jecxz
xor
js
dec
sub
mov
mov
dec
stc
pop
mov
jecxz
dec
cltd
std
jecxz
xchg
dec
add
mov
xchg
loopne
das
addr16
mov
sub
sbb
add
mov
jl
lods
out
fbstp
jle
loope
scas
fsubrs
cld
inc
xor
loopne
ret
and
and
pop
test
pop
cmp
add
adc
and
push
aas
xchg
inc
xor
dec
and
push
mov
add
neg
mov
testl
xchg
dec
fidivs
das
shlb
add
fcomip
aam
xchg
sub
dec
mov
mov
jmp
push
insb
roll
cltd
sub
daa
lods
inc
jg
in
cmp
add
pop
sahf
mov
xchg
enter
or
gs
shll
xor
shl
sbbl
cmp
xchg
pushf
xchg
iret
cli
imul
nop
pop
push
pop
jne
popf
pop
add
cmp
cmp
adc
pop
push
and
xor
and
pop
xor
cwtl
repz
ds
stos
shrb
jae
shr
jle
sub
test
lcall
lcall
pop
data16
mov
cmp
jno
sub
mov
jnp
mov
cltd
daa
shr
addl
pop
mov
repnz
movsl
aam
fwait
fwait
das
int
pop
inc
ret
add
add
out
mov
aas
push
mov
push
mov
stc
sub
sub
enter
sbb
mov
hlt
test
rclb
cmp
jecxz
cs
push
and
pop
jne
shll
call
test
adc
call
std
pop
ja
mov
cltd
das
inc
popa
mov
dec
fistps
data16
push
xchg
cmpsb
mov
dec
repz
sbb
repz
push
popa
jmp
mov
adcb
inc
sbb
jl
mov
jle
mov
adc
in
inc
xchg
jbe
es
pop
inc
pusha
hlt
popf
stos
arpl
mov
mov
sahf
xor
fwait
cmpl
or
mov
inc
xchg
fcompl
mov
sbb
jne
into
mov
adc
ret
addr16
and
popa
pop
fidivl
not
adc
rorl
ret
sub
push
loop
dec
lods
movsb
fcmovnbe
and
push
lds
adc
mov
sub
dec
mov
pop
pop
cmp
or
fildll
add
cmpsl
shll
test
pop
js
xor
in
add
mov
sub
fsubrl
adc
leave
arpl
cli
cmp
or
into
fisubrl
push
jae
je
sub
dec
ss
dec
sbb
stc
adc
cmpsl
ds
hlt
test
das
push
inc
outsb
ja
pop
lds
pop
cmc
aaa
call
hlt
cmpsl
pop
jl
mov
xlat
lods
insl
pop
sub
sub
sub
dec
dec
aam
stos
pop
mov
sahf
popa
cmp
in
dec
in
sub
stos
jne
jae
sahf
mov
lods
mov
pusha
es
mov
inc
out
jmp
enter
into
xor
inc
out
jmp
adc
lret
out
aad
es
cmpsl
lds
dec
scas
push
mov
jecxz
xchg
das
or
pop
mov
or
negb
jle
call
mov
lds
mov
pop
cmpsb
jb
mov
cld
lcall
jbe
popa
mov
mov
hlt
ret
in
mov
mov
xchg
fimuls
push
adc
das
jge
mov
decl
mov
mov
lret
jp
xlat
repz
push
inc
fdivl
les
xchg
arpl
dec
mov
and
cmp
movsl
mov
aad
push
xor
and
lcall
nop
rolb
sti
xor
inc
cltd
xor
cmpsl
or
jge
out
mov
or
adcl
jle
sub
pop
testb
mov
jle
pop
ss
xchg
jp
enter
mov
or
add
cwtl
inc
inc
lret
mov
arpl
xchg
int
mov
iret
inc
or
orl
repnz
imul
jmp
xor
pop
mov
push
divb
jne
inc
xor
arpl
and
or
hlt
mov
or
sbb
lcall
pop
push
and
mov
push
in
insl
xchg
insb
mov
or
lock
sub
xchg
pop
das
idivl
out
movsl
cmp
popa
insl
vcvtpd2dq
mov
int
inc
xor
sbb
push
repnz
mov
xor
lods
test
in
push
pop
pop
cmp
xor
xor
mov
cmpsb
arpl
std
es
rcr
out
popa
mov
inc
push
xor
int
pop
fsts
pop
adc
xchg
lret
addr16
mov
xchg
pop
xor
ds
cmp
xor
les
pop
and
pusha
mov
sbb
add
mov
push
sub
cmpsl
add
imul
test
lret
repz
mov
inc
enter
iret
add
push
sahf
mov
movsl
mov
stos
add
call
sub
in
cli
cmp
bound
aas
loop
cmp
cmp
xchg
dec
loop
mov
imul
out
jne
inc
xchg
add
mov
add
or
dec
adc
loope
jb
stc
fucomip
cli
pop
mov
leave
cwtl
in
adcl
push
adc
xor
mov
mov
push
jne
ja
lea
xchg
popa
clc
in
xor
cld
fnstcw
mov
daa
xor
ret
loopne
jl
adc
adc
ljmp
add
or
orb
mov
fsubs
fucomp
xor
mov
jge
testl
push
cmp
push
jl
pop
stc
and
and
test
and
pop
loope
call
fsts
lock
sarb
in
add
decb
inc
sbb
call
jae
es
insb
inc
push
in
mov
jae
cmp
push
sub
out
ficoml
inc
mov
cmp
lock
imul
mov
clc
dec
push
mov
jnp
bound
pop
mov
mov
in
jns
push
popf
dec
cmp
scas
xchg
jbe
sub
jbe
iret
fwait
add
std
pop
cs
out
mov
push
insl
jmp
mov
icebp
fucomp
mov
aam
mov
mov
icebp
es
or
insl
cmp
dec
fbld
or
and
frstor
inc
mov
fnstenv
in
ds
in
jae
push
lock
cmp
dec
test
push
push
xor
cmp
jns
and
jecxz
adc
dec
into
mov
or
out
xchg
sbb
inc
pop
iret
movsb
inc
imul
push
out
lret
out
movsb
and
ret
mov
sbb
jns
lds
push
loopne
cmp
jle
into
cmp
sbb
lahf
sbb
jg
push
cwtl
cs
aaa
jge
insl
std
and
test
xchg
inc
pop
inc
loope
out
inc
jmp
sti
ss
pushf
and
mov
int3
subl
popf
xchg
sub
add
scas
cmp
fs
not
stos
gs
repz
rorb
ss
imul
cltd
aaa
sbb
inc
pusha
incl
roll
pop
xchg
hlt
xor
and
and
int
into
movsb
push
mov
dec
cmp
fidivl
adc
lods
repnz
movsb
push
adc
cmc
pop
xor
or
es
add
loop
dec
jle
mov
imul
push
or
mov
test
imul
adc
push
lods
les
or
jno
in
pop
xchg
mov
mov
adc
cmc
xor
rorb
fisubl
pop
popf
enter
test
ret
dec
filds
in
ret
jno
or
cld
cmp
sbbl
mov
jg
mov
adc
loop
add
std
mov
mov
imul
dec
inc
xchg
shl
pop
icebp
mov
nop
icebp
lock
ret
loope
jns
cmp
push
js
mov
aas
fstpt
orl
inc
push
test
or
jae
outsl
push
sbb
pop
xchg
iret
fstpl
decl
add
jne
adc
fidivs
cmpsl
out
mov
push
jge
shlb
ja
pop
addr16
push
cltd
repnz
das
inc
fcoms
sarb
add
sbb
jecxz
sbb
inc
sahf
dec
cmp
clc
rcrb
je
insl
jecxz
push
out
inc
int
loopne
imul
dec
dec
xchg
or
test
push
push
mov
mov
adc
adc
stos
pop
icebp
cmp
mov
iret
jno
enter
out
mov
adc
rcll
out
cmp
inc
rcrl
cmp
sub
dec
xchg
sub
mov
add
mov
dec
shll
fisubs
bound
pusha
pusha
pop
jb
or
cli
push
popf
in
dec
enter
test
xchg
mov
lods
shrl
lret
movsb
pop
subb
push
xor
sub
lcall
stc
popa
icebp
in
pop
pop
lret
sub
rolb
pop
mov
push
xchg
mov
adc
mov
jg
bound
nop
fwait
xor
add
lcall
push
adc
inc
nop
daa
outsb
dec
flds
xchg
insb
mov
hlt
push
xor
xchg
sub
shll
lods
jle
mov
xor
adc
mov
cmp
pop
mov
aaa
push
cmpsb
dec
push
jmp
dec
add
jl
out
sub
repnz
push
add
lods
in
pop
lahf
sbb
add
icebp
mov
shll
jb
mov
pop
lds
jle
or
mov
pop
out
outsl
hlt
in
mov
mov
lcall
xlat
in
and
pop
xor
icebp
popa
mov
ret
inc
dec
mov
fldt
adc
adc
add
add
lods
xor
lds
and
and
sahf
clc
shl
cmc
js
mov
or
mov
jl
cmpsb
cmp
clc
jns
inc
es
xor
push
es
mov
fistpl
ret
and
cmpsb
lock
test
mov
xchg
add
stos
shl
lea
jl
and
sbb
adc
xor
iret
adc
mov
gs
mov
push
push
xchg
loop
imul
lock
jmp
rcll
mov
mov
push
mov
clc
out
add
xor
and
scas
mov
stc
sub
adc
cmp
leave
and
dec
movsb
jmp
push
or
jl
fwait
cmpsl
and
mov
js
in
fildll
nop
stc
js
cli
outsb
adc
loope
jno
fiadds
jl
mov
ja
xor
push
rorb
data16
xchg
cwtl
lahf
imul
inc
mov
ljmp
hlt
outsl
ja
cmpsl
dec
pop
jnp
inc
jle
jne
loop
xchg
xchg
pop
mov
icebp
push
scas
pop
out
jae
rclb
sbb
dec
cmp
cmp
jo
mov
int3
fucomp
push
nop
cmp
testb
pop
mov
lock
jns
dec
cmp
nop
sahf
test
mov
out
cmp
xor
inc
pop
cmp
cmp
jb
sarl
std
shlb
add
les
out
sub
pop
outsb
jle
mov
jle
cltd
popa
xchg
sub
insl
push
ret
mov
and
mov
sbb
out
arpl
push
xchg
iret
or
xlat
popa
es
rorb
inc
fisubl
out
popa
int
into
inc
jmp
or
xchg
mov
enter
xchg
shrb
push
jecxz
movsl
in
cmc
ja
cli
push
call
dec
loopne
push
sub
pop
jmp
stc
push
push
les
cmp
in
int
or
cs
out
lret
push
inc
scas
in
test
lods
mov
aad
addr16
inc
test
mov
fldl
jo
insl
clc
cltd
adc
aam
arpl
dec
out
ljmp
jno
jne
into
and
outsb
loope
insb
scas
jg
xor
jecxz
mov
out
adc
jl
pushl
inc
cmpsl
mov
sub
cmp
inc
fucomp
xor
andl
push
pop
or
scas
movsb
test
fdivr
insl
call
push
punpckldq
push
cmp
mov
jge
lret
push
or
outsl
add
call
hlt
mov
fs
call
sbb
es
popf
scas
dec
xchg
idivb
adc
test
jecxz
jmp
xchg
add
lods
inc
aas
pop
lea
xchg
sbb
scas
push
jae
xchg
xor
dec
mov
adc
dec
cmpsl
push
add
xchg
fsubr
int
push
out
xor
jl
mov
xor
minps
jmp
mov
dec
out
sbb
shrl
sub
sti
push
mov
iret
push
mov
mov
popa
mov
sbb
xor
fisubs
sbbl
pop
sbb
in
push
scas
pop
shl
andb
js
popf
inc
cwtl
ret
cmpsb
test
cwtl
imul
scas
and
pop
pop
pop
dec
dec
dec
aam
push
push
call
sub
shrl
push
enter
iret
out
jge
mov
inc
jmp
mov
out
pop
xchg
insb
sub
mov
imul
xor
cmpsl
cld
xor
into
iret
push
aam
mov
test
popa
push
lcall
push
push
in
lret
lret
inc
and
sahf
movsb
jmp
lahf
imul
push
popl
xor
outsb
clc
adc
cli
inc
xchg
clc
hlt
add
inc
pop
sub
mov
xchg
or
pop
fdivs
sub
hlt
add
push
dec
pop
cmp
das
jo
repnz
sub
or
dec
mov
xchg
xor
mov
mov
ds
xchg
stos
pop
mov
fimull
and
mov
pop
pop
inc
out
mov
cmp
stos
movsb
ret
pushf
jmp
push
notb
mov
outsl
shlb
in
lods
mov
adc
mov
cmp
sbb
xor
mov
mov
stos
sub
xchg
pop
adc
jp
jge
mov
fs
inc
or
jae
popa
clc
push
or
lret
cld
test
mov
daa
push
rclb
xor
jle
sub
jp
aaa
rol
repnz
clc
aas
push
aad
jnp
cmc
jg
scas
xchg
add
shlb
mov
jb
mov
pop
stc
push
mov
push
mov
adc
stos
pop
mov
push
outsl
jg
or
xchg
adc
cmp
lret
add
sub
adcb
aad
lds
cwtl
loop
fs
dec
lcall
fdivp
mov
ljmp
lock
add
or
lods
xchg
paddusw
xor
shrl
adc
jp
iret
iret
dec
in
push
stos
mov
into
mov
mov
dec
lret
push
lcall
push
daa
pop
adc
into
shrl
or
faddl
popa
fnstcw
ja
dec
loopne
rclb
pop
aad
into
pop
cmp
jl
jl
adc
mov
popa
rolb
je
sti
int3
jno
iret
mov
lock
jnp
idivb
sbb
dec
push
je
data16
adc
out
ljmp
jge
mov
scas
push
cmp
mov
and
adc
cli
sbbl
inc
push
xor
add
dec
and
mov
lea
mov
ss
push
sub
jno
int3
xchg
cmp
notl
cmpb
pop
in
leave
filds
popf
movups
adc
and
mov
aad
mov
in
jge
fldl
je
in
xchg
add
test
fsubs
std
in
jne
push
cs
testl
push
pop
jl
stos
and
bound
lret
bound
enter
fucomip
mov
test
js
dec
sub
loopne
notb
lea
add
lret
int3
adc
xchg
mov
adcl
xchg
mov
call
fwait
dec
orl
add
pushf
cmpl
jecxz
sbb
ds
cmp
pop
jae
xor
inc
fsts
outsb
les
std
and
pushf
outsl
mov
mov
popa
fsubrs
push
fwait
mov
shll
ficoms
andb
test
mov
add
jno
xchg
mov
inc
adc
test
add
stos
jmp
mov
xor
cwtl
notl
scas
int
xor
pop
adc
push
btc
outsb
xorl
data16
leave
mov
shrl
cmp
jp
pop
ficoms
or
negb
xor
and
cltd
scas
dec
push
jmp
cmp
mov
jge
sub
add
mov
loopne
repnz
lock
mov
jge
rclb
jnp
das
test
jae
repnz
mov
lds
movsl
jge
movsb
imul
negl
and
jecxz
pop
adc
fcom
sbb
jp
adc
insb
inc
out
jnp
cmpsb
push
ret
pop
push
or
sarl
dec
cmpsb
rcrl
or
and
inc
cmp
push
in
cld
aas
mov
dec
xor
push
cs
aaa
shl
xchg
loope
fiaddl
ret
xchg
adc
shl
lock
divb
sahf
add
push
adc
mov
cltd
mov
fdivl
enter
jb
cmp
jne
add
jp
jg
into
pop
in
mov
xchg
fmuls
mov
add
jns
inc
cmp
in
inc
divl
jle
mov
jae
sbb
xor
xchg
aaa
pusha
sub
mov
add
mov
les
pop
mov
adc
fsubrp
mov
insb
jmp
shll
ficomps
inc
push
enter
mov
in
jns
mulb
sub
scas
mov
push
xchg
test
and
adc
mov
mov
mov
in
scas
mov
fildl
cmc
daa
and
repnz
pop
in
mov
sahf
in
mov
sub
mov
jg,pn
sbbl
lods
mov
xchg
push
stc
adc
cmp
stos
jne
fidivs
inc
jecxz
mov
test
xchg
in
int3
or
js
dec
mov
xchg
outsl
jns
ret
mov
and
or
cvtps2pi
lret
xchg
cs
fnstsw
call
mov
mov
add
js
inc
jae
out
filds
push
lret
mov
test
jmp
test
imul
push
xor
pop
push
insl
in
out
mov
cs
push
cmpsl
std
fcmovb
ret
lds
ret
outsb
call
push
add
sbb
add
add
je
fdivrp
sahf
mov
push
call
mov
int3
arpl
lock
jne
pop
dec
pop
insb
mov
jle
loope
ret
jnp
movsl
icebp
xchg
cmp
xchg
add
out
call
mov
data16
and
mov
and
scas
sub
mov
and
add
xchg
push
jge
lods
dec
dec
ds
cmc
inc
xor
inc
scas
inc
jmp
stos
mov
or
addl
es
lock
push
icebp
xor
cmc
push
shl
push
mov
mov
cmp
adcb
nop
sub
xlat
outsb
xor
pushl
lock
cmp
cld
repz
outsl
dec
sbb
or
lea
mov
xlat
mov
bound
mov
cmp
and
adc
push
gs
mov
rol
enter
gs
aam
in
out
gs
pop
mov
push
shl
je
mov
mov
in
lret
pop
outsl
and
push
andb
jle
pop
fs
sti
aad
outsb
mov
movsb
pop
adcb
cmp
test
mov
loop
push
jecxz
push
stc
inc
cmp
cmp
pop
je
jo
and
sahf
jbe
lods
adc
and
pop
pop
inc
fs
pop
jae
xchg
xchg
mov
in
and
cmpsl
push
addr16
push
jne
ret
daa
fimull
dec
jno
lds
xchg
sub
dec
or
fwait
mov
insb
sbb
jnp
aam
out
repnz
fisttpll
jne
sbb
jmp
xorb
repz
adcb
nop
stos
out
test
mov
popa
jno
hlt
adc
sbb
cmp
add
inc
push
pop
sbb
into
je
push
inc
outsb
add
rcrb
lea
leave
fldenv
dec
arpl
movsl
xchg
fcmovu
icebp
push
mov
dec
jbe
stos
clc
aaa
xchg
jecxz
cli
jne
enter
stc
test
push
cs
push
or
inc
push
mov
test
dec
subb
lods
or
pusha
test
es
push
pop
or
push
xchg
add
je
std
inc
addr16
lret
mov
or
repz
xchg
lds
mov
aaa
push
cmp
in
cmp
cmp
pop
push
inc
add
jns
or
mov
ret
fsubp
mov
arpl
out
add
or
daa
xor
ds
xchg
mov
xor
jno
lea
and
push
cmpsb
les
mov
hlt
jl
and
in
push
rorb
faddl
xchg
insb
sub
iret
mov
mov
into
cmp
ljmp
cmp
clc
push
loopne
fbld
int3
mov
mov
cltd
xor
repnz
mov
es
xchg
inc
inc
xchg
popa
push
mov
icebp
iret
xor
inc
sbb
pop
sbb
rclb
movsb
ret
ret
frstpm(287
pop
daa
cmp
rcrl
mov
test
push
fisttpll
mov
aad
ret
and
jo
and
add
add
jnp
jle
lods
ljmp
pushf
cmp
shrb
cmc
sub
out
bound
cmp
mov
and
bound
push
add
jg
mov
mov
push
dec
adc
enter
mov
mov
xor
testl
xor
mov
mov
test
ljmp
ja
xchg
pop
in
or
leave
cmp
icebp
mov
shrb
jo
test
sub
push
add
sub
js
insb
xlat
mov
cmp
dec
jne
or
mov
daa
arpl
hlt
fmul
adc
hlt
leave
in
icebp
sti
xchg
and
enter
pop
adc
mov
xor
push
sahf
andb
nop
out
lahf
ret
nop
lcall
icebp
movlps
mov
and
add
cmp
lret
mov
xchg
subb
int3
mov
cmp
jo
mov
xchg
divb
jnp
inc
mov
xchg
dec
test
cmp
movl
xor
jno,pt
push
ret
cmp
data16
or
es
or
mov
pop
push
fcmovu
loopne
leave
loope
inc
shll
adc
jns
jl
jmp
into
insl
pop
or
sbb
pop
and
mov
push
xchg
push
jbe
or
dec
in
incl
mov
dec
int3
mov
adc
dec
cld
pop
icebp
insl
cltd
xor
xchg
mov
fneni(8087
sahf
sti
test
mov
or
pop
cmpsl
inc
jl
arpl
flds
aaa
mov
pop
xor
inc
dec
jb
incl
xchg
or
mov
movzbl
or
xchg
cmp
gs
add
mov
push
jp
and
mov
mov
mov
push
mov
dec
xlat
inc
mov
inc
data16
ret
jmp
lret
bound
cs
add
cmpsl
push
mov
add
daa
lcall
xor
xchg
and
lahf
mov
push
mov
pop
pop
cmp
xor
push
daa
jp
inc
and
mov
jle
sub
daa
scas
jo
es
jb
fsubrs
shrb
jno
in
xchg
xchg
stos
fwait
dec
add
ror
jae
sbb
adc
adc
bound
stos
push
stos
dec
and
into
fsubr
int3
dec
mov
cmpsb
stos
and
jmp
pushf
fwait
mov
lock
cmpsb
movsl
push
and
sbb
movsb
ret
mov
lahf
loop
lds
add
pusha
jno
cld
xor
data16
jo
jg
sub
repnz
mov
out
xor
lcall
and
mov
out
sti
adc
lcall
inc
das
fldt
xchg
out
xchg
loopne
adc
sbb
pop
push
and
std
fisttpll
jg
aad
sub
mov
jl
mov
xor
fdivp
adc
inc
inc
fadds
xchg
cmp
popf
out
lds
mov
mov
push
mov
es
rcrb
fdivrs
sbb
popa
mov
inc
jmp
or
loope
lods
mov
pop
xor
f2xm1
xor
js
push
nop
pop
or
push
and
movsb
rclb
or
dec
or
dec
push
leave
test
adc
out
xchg
mov
add
cmp
lret
sub
inc
lahf
aam
shr
jmp
loop
add
pop
inc
call
idivb
stc
je
adc
or
clc
add
mov
push
pop
scas
or
cmpsb
mov
dec
adc
sahf
xchg
insl
mov
sbb
mov
out
test
ret
clc
mov
test
dec
decl
jne
mov
cwtl
das
add
push
fsubrp
mov
test
shl
and
pop
movsl
dec
int
adc
push
mov
push
xor
scas
mov
jg
jmp
jmp
mov
aas
and
nop
daa
sub
pop
adc
les
jne
cmp
pop
sbb
out
adc
adcl
mov
loopne
pop
stos
push
inc
fstpt
and
sbb
mov
insb
jno
insl
lahf
cmpsb
mov
lods
js
mov
jecxz
outsl
popf
flds
xchg
dec
xorl
icebp
cmp
sbb
imul
lock
filds
mov
sub
mov
out
cmp
push
sub
out
scas
pop
lds
mov
mov
inc
icebp
push
ja
cmc
fwait
inc
push
xchg
pop
popa
and
popl
repz
mov
xorb
mov
notb
ljmp
xor
xchg
push
jbe
cmp
mov
xor
xchg
into
fidivs
mov
jo
cmpsl
ret
mov
shl
xchg
xchg
add
pusha
mov
push
mov
imul
mov
aas
loop
lcall
xchg
cmp
push
pusha
or
ss
xor
fiadds
sarb
lock
in
push
insb
mov
dec
cmp
mov
mov
test
xor
push
inc
in
sti
je
sub
xchg
push
jb
jb
mov
andb
addb
in
into
gs
hlt
inc
fisubs
mov
mov
ja
xchg
out
stc
in
mov
inc
scas
jmp
jmp
loopne
lods
mov
mov
movsl
mov
push
ds
test
sub
or
pop
movsl
add
pop
ds
or
jo
dec
stos
sahf
mov
push
or
xchg
sub
mov
es
pop
fs
aam
inc
inc
cmc
xchg
add
js
sbb
movsl
aas
inc
pop
adc
in
dec
adc
cmpsl
add
sub
imul
jb
leave
int
inc
pop
mov
mov
scas
mov
movsl
fldt
inc
xor
fidivs
pop
cs
adc
mov
fisubrs
ss
push
shll
cmpsb
out
mov
xor
sub
inc
pop
test
test
and
sbb
add
push
repnz
xchg
jne
dec
pusha
lock
xchg
cmp
stos
mov
jno
clc
mov
cmpsl
add
pop
mov
add
and
push
sub
pop
push
push
mov
push
sbb
push
das
inc
inc
jmp
ss
sub
push
pop
pop
nop
out
leave
stos
addr16
sbb
push
adc
push
leave
arpl
in
push
adc
loopne
mov
imul
rol
pop
inc
sub
sub
mov
or
push
cmp
insb
sub
jp
mov
dec
jl
or
jo
mov
inc
xchg
mov
loop
jne
je
lods
fldenv
pop
test
pushf
fwait
insb
pop
movsl
je
daa
mov
mov
push
je
adc
sti
and
lret
mov
xlat
insb
lods
std
xchg
fimuls
dec
dec
mov
pushf
push
in
imul
and
dec
in
popa
xor
int
push
pushf
cmpsl
ficoml
fisubrs
cmc
ljmp
cwtl
xor
in
and
aaa
ss
dec
loopne,pt
stos
jmp
aas
pop
jg
out
lret
sbb
ja
dec
add
xchg
add
rorb
adc
jns
inc
inc
fdivs
xchg
push
adc
dec
mov
sbb
xchg
xchg
divl
add
arpl
cmp
jns
cld
dec
lret
mov
or
lss
das
mov
pop
fstps
xchg
jge
inc
pop
into
inc
arpl
push
imul
xorl
adc
fwait
xor
std
scas
jp
pusha
mov
jge
cmp
das
push
xor
sub
dec
and
xchg
shll
enter
mov
movlps
stos
and
hlt
lods
sub
mov
popf
and
xlat
pop
imul
andl
xchg
cwtl
push
adc
sbb
imul
add
cmp
stos
in
test
stos
mov
mov
push
dec
loopne
lret
mov
and
test
and
mov
inc
das
shl
vdivsd
adc
jnp
jae
test
xchg
cltd
test
dec
ds
xchg
nop
enter
xchg
cltd
xorl
mov
add
popf
enter
inc
fsub
ficomps
ss
pop
inc
mov
aas
jmp
pop
jecxz
cli
mov
stos
inc
scas
and
jns
mov
iret
mov
popa
jl
xchg
mov
movsb
pop
sbb
imul
pusha
stos
xchg
aas
inc
out
jnp
das
pop
scas
scas
arpl
sbb
push
add
lds
jle
mov
es
test
outsb
loope
pushf
add
jecxz
jmp
repz
xchg
mov
mov
jnp
adc
mov
loop
sub
repz
decl
icebp
sbb
insl
xlat
lods
ret
insl
mov
or
cmp
add
pop
dec
fwait
inc
in
xor
xor
sub
repnz
jp
shll
xchg
mov
in
dec
rcll
movsb
jl
add
mov
sarl
nop
mov
scas
adc
and
stc
mov
into
or
jl
or
ficoml
cwtl
dec
testb
jo
popf
mov
mov
mov
jle
pop
or
sbb
dec
pusha
paddb
stos
int
adc
dec
dec
clc
jmp
cmp
call
in
das
pop
sub
or
sub
out
push
mov
je
pop
ds
mov
bound
push
aaa
leave
movsb
mov
test
mov
clc
lahf
divl
mov
das
lret
aam
cmp
push
xchg
mov
pop
jno
lods
xchg
dec
cmp
loope
pusha
incl
inc
outsl
aad
xchg
xchg
popf
inc
les
loope
xor
push
in
jg
mov
mov
lcall
sbb
fidivl
in
jb
mov
rorb
lret
fstp
add
and
pop
bndstx
out
jno
inc
pop
jp
jo
or
test
push
push
int
ret
push
loopne
pop
fwait
jae
int3
test
inc
xchg
adc
dec
xor
push
push
fwait
out
ret
outsl
jge
xor
out
ret
sub
push
negb
inc
inc
dec
inc
xchg
fsubr
inc
pushf
mov
rcr
dec
dec
divl
jg
jb
or
test
leave
aad
xor
mov
sub
stc
xchg
mov
or
add
cmpsb
jg
mov
inc
sbb
push
cld
call
es
mov
mov
pusha
push
ss
jno
jo
pop
inc
or
jl
shlb
and
push
jae
sub
and
enter
stc
add
movsl
notl
rclb
mov
mov
jnp
stc
daa
scas
bnd
cwtl
lods
xchg
cmpsl
or
int
sbb
xor
call
cmp
inc
adc
dec
ret
lahf
imull
sbb
pop
int3
les
xchg
jae
loopne
out
sbb
cli
mov
pop
call
lods
out
shrl
mov
cli
pushf
jmp
mov
cmp
lcall
in
stos
fisubl
jnp
je
sbb
je
movsb
sub
inc
call
cmp
adc
xchg
aaa
or
jb
fsubr
out
cmpsl
inc
xchg
pop
xor
inc
add
out
pop
scas
mov
jne
adcb
push
jno
jmp
mov
mov
cmp
dec
adc
stc
dec
addl
xchg
add
add
push
aas
push
jnp
outsl
lcall
cmpsb
lock
rcrb
push
and
cmp
and
lods
popaw
add
out
or
subb
shll
aam
or
movsl
push
xchg
outsb
out
ret
fdiv
pusha
adc
push
out
inc
cmpsl
cmc
mov
arpl
sbbl
pop
or
inc
incb
shufps
inc
cld
std
in
popa
inc
or
fldt
dec
lock
xchg
dec
cmp
out
mov
cli
lahf
das
push
sbb
ss
scas
mov
mov
cld
rcrl
cmp
bound
sbb
pop
data16
mov
cmp
negb
test
cmp
fildll
add
and
pop
jae
and
rcr
cmp
stc
dec
popf
movsl
ret
sbb
add
cmp
testb
hlt
sbb
adc
cmp
popa
xchg
push
aad
sbb
scas
je
pop
and
mov
sub
sbb
sbb
mov
and
sbb
pop
out
mov
mov
imul
push
fidivrs
adc
leave
les
push
mov
mov
out
push
pusha
inc
lock
sub
repnz
aam
mov
pop
loopne
fisttpll
sbb
lea
mov
testl
inc
mov
fiaddl
imull
inc
sti
andl
arpl
lock
scas
leave
or
xor
and
ficoms
xlat
sti
inc
lret
test
std
repz
loop
rclb
andl
xchg
add
jle
sub
in
xchg
ljmp
stos
adc
cmp
xchg
mov
dec
push
pop
sarl
push
aad
in
push
pop
sub
sbb
dec
mov
std
xor
outsb
jne
sub
mov
shlb
sbb
sub
pop
insl
cs
push
push
mov
jge
je
lret
ret
lret
js
or
jp
ret
jbe,pn
xor
mov
mov
clc
jmp
pop
adc
mov
je
icebp
shlb
sub
hlt
addb
stos
fidivrl
js
mov
and
leave
shrb
cmpsb
fistpll
ja
add
fstpt
faddl
mov
pop
jl
mov
icebp
jge
cwtl
imul
out
jle
movsl
sbb
add
and
or
fiaddl
jno
jno
mov
test
and
jno
inc
int3
xor
cmp
outsl
and
mov
sub
test
mov
mov
mov
in
sub
out
cli
sub
dec
scas
dec
inc
mov
sbb
dec
subb
dec
push
add
inc
adc
cmp
aad
push
add
sub
icebp
lds
cltd
xchg
add
lea
mov
outsl
sti
jb
mov
inc
in
dec
jbe
jnp
sbb
fistpll
lock
lea
adc
mov
loop
sbb
dec
lock
out
fwait
xor
js
mull
iret
arpl
adc
arpl
jmp
imul
jbe
shlb
push
mov
add
dec
mov
loope
cmp
stos
popf
mov
subl
loop
xchg
push
rolb
inc
add
xor
rolb
jno
fildll
pop
das
dec
cld
clc
aaa
inc
jo
pop
rcr
xchg
sub
movsl
mov
xchg
xchg
jp
into
pop
mov
pop
dec
xchg
pop
mov
sbb
cmp
adc
pushf
cmp
dec
sub
and
and
push
in
xchg
out
ds
pop
ret
pop
cmp
lods
jae
adc
mov
mov
and
shll
lret
cmp
mov
pop
mov
ret
and
js
sbb
sbb
pushf
addr16
icebp
xchg
lds
and
push
int3
clc
lods
pop
xor
aad
ds
dec
fbld
xchg
loope
cmp
cltd
aaa
bound
nop
inc
push
jne
loop
loope
cmp
jmp
mov
push
pop
push
fcompl
mov
lea
fdivp
bound
lret
test
add
mov
or
ret
mov
pop
repz
sub
adc
cmc
inc
xchg
imul
int3
and
aas
dec
xchg
or
repz
pop
mov
mov
in
sbb
rol
cmpsb
arpl
pop
adc
loop
out
cli
add
pushf
loopne
orl
jge
push
and
je
inc
and
ljmp
xor
mov
outsl
loope
int
in
sbb
loope
mov
xchg
cwtl
call
dec
xor
fisttpl
dec
push
jo
fadds
sbb
dec
fcmovu
jmp
popa
clc
lods
xchg
sub
cmc
into
jg
pusha
aas
jl
or
ret
std
lods
loop
dec
add
mov
adc
add
movsb
les
dec
pop
js
data16
mov
push
pushf
fs
xchg
cmp
pop
stc
aas
xor
cmp
out
add
fwait
xchg
mov
jg
call
adcl
jmp
lret
jmp
aas
push
mov
pusha
das
repnz
mov
inc
xor
ljmp
pop
push
pop
addl
adc
sbb
or
inc
std
js
das
imul
stos
test
jge
push
cli
xor
loope
cmp
adc
and
lods
faddl
pusha
decl
dec
addl
jle
cmc
pop
mov
mov
int
ret
test
cmp
or
shrb
and
call
in
inc
mov
rcrl
xchg
push
adc
mov
xchg
sbb
arpl
add
loope
dec
stos
ss
push
inc
popf
xchg
data16
bound
add
pop
or
fs
pop
push
and
push
jae
push
pop
rcll
fcoml
ljmp
scas
fiadds
data16
cmpsl
pop
in
inc
cmp
hlt
int3
je
gs
cmpsl
pop
xor
xchg
les
cli
lahf
xchg
add
cmp
insl
hlt
add
outsl
push
xor
push
out
dec
dec
pop
push
out
jne
pop
hlt
xor
in
bound
sub
sbb
stc
jno
popf
sub
push
inc
sbb
inc
push
jg
mov
loopne
das
fs
mov
mov
testl
or
es
add
add
jbe
adcb
xchg
mov
adc
sbb
jo
push
je
sahf
add
xchg
adc
into
mov
jae
repnz
int3
mov
fisubrl
insl
fnstcw
sbb
loop
rorb
mov
insl
movsb
mov
sbb
cltd
mov
or
add
rcrl
sbb
lock
push
cli
adc
push
into
xchg
aad
ret
inc
inc
add
js
cmp
adc
daa
mov
ljmp
pop
jo
fidivl
xchg
push
fcompl
or
and
sti
outsl
xorb
mov
arpl
loope
xor
sub
dec
jb
cmp
in
xchg
shrb
pusha
sub
mov
outsb
sub
cmc
insl
xchg
push
sbb
cld
or
cld
addr16
test
xor
leave
inc
fucomip
mov
or
out
fdiv
push
mov
mov
ja
loopne
sti
push
das
cli
xchg
jl
lret
fsts
mov
stos
and
inc
cltd
add
test
cmp
and
mov
ret
jb
jecxz
lea
mov
aaa
dec
pop
push
rcl
xchg
sub
pop
cmp
add
mov
mov
adc
popa
mov
mov
inc
sbb
leave
xchg
pop
imul
mov
push
or
outsb
dec
cmc
cmpsl
push
lea
cmp
divb
jb
pop
cmp
dec
fistpll
dec
imul
ficomps
pop
add
jne
xchg
lahf
jge
fstpl
repnz
xor
mov
pop
push
pop
int
cmp
ret
fsubr
adc
mov
jg
adc
fbld
mov
fisubl
pop
les
ds
push
stos
cmpsl
lcall
sbb
insl
lods
sub
test
lea
iret
sbb
ret
insl
fsubs
imul
and
addr16
loop
testb
dec
xchg
xchg
icebp
mov
rclb
push
or
mov
and
cltd
test
adc
int3
ss
xor
hlt
inc
push
inc
andb
bound
bound
mov
outsb
std
xor
push
jae
jg
loope
fstl
aas
xor
jno
leave
pusha
mov
ret
out
cmc
fs
pop
adc
adc
cmp
xchg
cs
lahf
xor
pop
add
lea
pop
fs
js
pop
jp
add
nop
flds
jae
mov
cmc
mov
add
test
ficoml
repnz
xchg
jmp
cs
pop
pusha
int3
cmpl
mov
push
jle
add
pop
data16
loope
rcl
and
pop
lret
cltd
clc
jg
or
shll
dec
fisubl
push
fnstcw
lret
jo
dec
or
add
cmc
out
mov
mov
xor
pop
pushf
call
or
lcall
add
testb
nop
jnp
sar
mov
pushf
xor
mov
loop
adc
inc
out
mov
push
test
daa
arpl
dec
popf
mov
pop
sti
sub
outsb
aas
into
arpl
mov
andb
push
scas
mov
cmc
xchg
lahf
and
push
out
shr
pop
xchg
out
das
lods
cmp
and
icebp
dec
jnp
jnp
mov
or
pop
cmp
xchg
cmp
mov
mov
mov
ljmp
xchg
sub
sbb
popa
mov
fildl
push
and
imulb
mov
in
incb
into
rorl
pop
stc
push
add
fucom
add
mov
mov
mov
xchg
sub
shrb
dec
lahf
lods
sarl
dec
mov
subb
aad
or
add
pop
sub
dec
loop
add
ret
in
inc
lahf
jnp
les
xlat
push
cmp
repnz
mov
and
sub
and
loop
push
fsubrl
sbb
pushf
mov
xchg
cmp
add
jns
in
jbe
mull
test
dec
add
into
and
repnz
fdivrl
push
fstpl
jbe
std
pop
cmp
jns
push
lcall
pop
repz
mov
add
mov
scas
sub
mov
mov
idivl
outsl
fs
negl
aaa
sub
mov
inc
out
adc
js
inc
js
ja
gs
lret
das
setle
cmp
jmp
fbld
mov
mov
cwtl
mov
xchg
imul
je
das
das
xorb
inc
loop
ja
sbbl
adc
dec
int3
push
mov
jbe
push
les
in
pop
push
loop
cmp
adcl
or
xchg
sbb
xor
and
or
and
dec
mov
es
fwait
pushl
sbb
fmul
repnz
xchg
xor
or
push
mov
mov
push
out
mov
cli
inc
fldenv
adc
insl
push
xor
inc
roll
lcall
inc
push
cwtl
out
lcall
cld
jmp
jne
enter
test
and
sub
adc
and
add
lods
dec
sti
mov
dec
insb
xchg
nop
je
xlat
sub
mov
push
push
mov
adc
sub
push
jmp
scas
lods
das
push
fiaddl
jns
cs
test
mov
lahf
push
sahf
rcrb
pushf
bound
pop
fldenv
or
cmpsl
clc
mov
arpl
cmpsb
cmp
in
sub
rcrl
adcl
or
call
jnp
in
stos
dec
cmpsl
mov
iret
loopne
push
daa
std
push
adc
pop
xor
inc
in
sub
lods
cmpsb
xchg
mov
pop
xchg
fxch
or
ret
dec
or
repnz
xchg
sub
hlt
bound
xchg
sahf
xchg
add
ljmp
test
sbb
insb
in
sub
std
pop
test
es
les
je
cli
test
xlat
xor
pop
mov
mov
ss
lods
movl
nop
push
xor
add
popf
xor
pop
sbb
iret
repnz
lock
arpl
adc
xorb
mov
xchg
sbb
int
cli
adc
push
andl
cmc
xorl
pop
pop
mov
pop
pusha
ret
mov
lods
sbb
push
insb
hlt
fcoml
add
inc
sub
xor
cmpsl
dec
das
dec
test
icebp
sub
and
negb
dec
jecxz
lahf
cmc
loop
xor
pop
inc
jbe
jae
push
sarl
add
push
jnp
pushf
stos
addb
jnp
imul
mov
movb
ret
cs
and
push
lods
mov
sbb
ffree
inc
jnp
popa
cmp
jecxz
leave
and
shl
jg
push
jmp
xor
xor
popf
xor
movsb
movb
xchg
jmp
mov
or
sbb
add
repnz
or
insb
sub
adc
bound
inc
cmp
xchg
sub
sbb
cmp
xchg
test
or
sub
rcl
out
mov
add
dec
mov
lds
xchg
test
outsb
adc
mov
mov
test
sahf
shlb
bound
stc
mov
aaa
dec
sub
pop
lcall
xchg
add
mov
push
mov
xor
loope
leave
int
imul
sbb
and
lahf
ss
jnp
add
cmc
rolb
lock
mov
mov
xor
xor
mov
fidivs
cltd
shlb
xchg
les
dec
fisubrs
je
pop
jnp
adc
lret
fisttps
pop
pop
cmp
add
icebp
xor
je
popf
outsb
sub
fs
icebp
sarl
mov
ret
jp
int
outsl
add
ret
mov
cmc
pop
iret
repnz
mov
cmp
sahf
xor
dec
mov
outsb
std
loop
mov
add
daa
test
test
xor
xchg
or
jecxz,pt
jnp
out
inc
cmc
mov
cmpsb
lock
jmp
pop
lret
test
cmp
mov
js
sub
repnz
dec
aas
jle
insb
lods
sbb
inc
mov
sbbb
pusha
das
and
out
xchg
pusha
or
into
mov
and
xchg
jle
jbe
xor
fiadds
movsl
js
decb
dec
mov
jbe
mov
jle
cmp
cwtl
inc
push
packssdw
inc
test
push
push
aad
jp
jl
lahf
clc
jl
shrl
popf
or
pusha
inc
cmp
loop
pop
mov
mov
call
into
sbb
xorb
lret
shlb
mov
adc
cwtl
cwtl
mov
jl
shrb
outsl
mov
add
int3
fidivrs
loopne
push
loope
rorb
mov
mov
inc
out
lcall
jns
test
les
add
es
pop
scas
mov
in
push
into
push
and
sub
jge
jl
aaa
loop
cmpsl
add
add
add
mov
add
lods
xchg
inc
inc
xor
xchg
cmp
enter
aaa
dec
jne
clc
sub
lds
xchg
lea
pop
jae
push
pop
xchg
dec
cmp
jl
cli
inc
xchg
fbstp
mov
std
mov
orb
jge
dec
xor
in
andl
add
xor
sti
push
movsl
xor
mov
jmp
pop
out
add
call
cmpsl
push
dec
rol
inc
fsqrt
mov
faddl
xlat
fsubl
jecxz
popf
pop
xchg
mov
movsl
lds
xchg
aaa
pop
or
ljmp
imul
mov
aas
xchg
pop
pop
lds
lret
ret
mov
rcl
out
xlat
repz
out
adcb
dec
cs
setbe
inc
in
xor
insb
sub
pop
and
xor
push
int
mov
pop
filds
test
cmpsl
test
mov
push
lock
push
loop
insb
inc
sub
call
xchg
and
cmp
ja
jecxz
aaa
fs
call
fisubrl
add
push
push
ret
jle
out
adc
xchg
mov
dec
xor
sbb
inc
jnp
jns
dec
cmpb
in
fwait
je
push
xor
xor
je
and
jae
sub
enter
loop
pusha
fsubrs
leave
mov
js
addps
cmpsb
cmp
xlat
jp
mov
jp
push
aaa
pop
addr16
ja
cmc
push
enter
mov
cmpsl
jne
mov
repz
fisubs
in
cmp
addr16
xor
sub
fidivs
cs
xlat
sbb
cld
cmp
sub
adc
cmpsl
jmp
gs
fldenv
mov
dec
sbb
jle
ds
mov
aad
add
popa
orb
dec
out
fimuls
pop
pop
mov
add
mov
xor
mov
xlat
push
mov
adc
pop
mov
pop
movsb
lods
je
fisubrs
iret
in
push
fdivl
add
cli
mov
movsl
sbbl
movsb
jmp
clc
cmp
mov
push
das
dec
outsl
jnp
jae
xchg
sub
in
addb
mov
add
out
sbbl
sbb
cmpsl
dec
push
and
subl
or
ss
jnp
inc
lods
cmp
add
dec
pop
sub
repnz
pop
ror
xor
mov
mov
mov
add
xor
xchg
notl
or
fwait
mov
or
mov
adc
xlat
dec
bound
in
mov
sbb
sub
out
push
test
push
cmp
in
xchg
add
push
and
pop
push
cmp
or
lcall
jns
sub
jg
push
ret
mov
hlt
ss
mov
adc
jns
jecxz
sbb
add
push
decb
addr16
movsb
jo
addr16
int
into
arpl
and
rclb
inc
jno
mov
fcmovnu
lock
nop
arpl
inc
mov
lock
and
dec
sub
or
inc
lods
xchg
addr16
push
lahf
mov
cmp
pop
popa
xor
sub
aas
mov
adcb
popf
out
mov
jo
imulb
lds
ss
push
mov
std
cltd
dec
dec
lock
mov
jl
and
or
jne
sti
mov
subb
lock
pop
jmp
push
repz
xchg
cli
pop
outsl
inc
jnp
test
xor
jmp
dec
add
fadds
dec
data16
stos
pop
icebp
push
pop
push
jbe
das
mov
aad
sub
ja
cmp
or
mov
lahf
std
sarl
jns
xchg
xchg
sub
int
in
mov
jnp
mov
sub
mov
mov
popf
jo,pt
mov
xchg
out
and
lea
out
aad
mov
out
mov
addr16
popf
das
inc
or
sub
dec
test
into
xor
dec
sbb
in
sbbl
fists
adc
idivl
xlat
cmpsb
mov
pop
loope
mov
mov
aaa
into
jle
leave
frstor
or
mov
loope
sub
xchg
jl
lret
xor
add
cmpsl
cmp
in
call
test
lods
pop
aaa
dec
dec
mov
dec
mov
bound
out
mov
sub
mov
ljmp
sar
inc
push
cwtl
sub
cwtl
mov
adc
push
dec
faddl
sub
push
call
repnz
scas
jo
mov
inc
insl
sub
cld
lcall
mov
cld
adc
stc
clc
loopne
push
push
inc
mov
movsw
fldcw
xchg
outsb
aam
insb
lock
outsl
or
adc
push
mov
push
pusha
mov
mov
addr16
sbb
and
pop
enter
into
insb
les
cwtl
stos
add
push
or
push
inc
add
cmpsl
inc
fldl
loop
enter
scas
push
int3
incl
dec
mov
sub
sbb
push
pop
cmp
adc
mov
test
sbb
mov
pop
lret
pushf
add
mov
js
fadd
data16
lret
pop
mov
or
cmpsl
dec
fstps
and
cmpsb
adc
or
mov
inc
jns
neg
dec
adc
sahf
cmp
xchg
pop
das
push
xchg
jno
inc
jae
mov
out
jno
pop
dec
sahf
mov
or
pop
mov
fidivs
test
test
stc
jno
xchg
lods
icebp
scas
xchg
in
pop
push
lock
jns
jo
mov
fadds
stos
fbstp
jge
cli
inc
in
cmc
pop
fldcw
test
test
cltd
or
mov
mov
xlat
in
xlat
cmp
stos
xor
jmp
jmp
inc
push
cmpsb
cmp
cmc
repz
jle
add
gs
push
jmp
popf
imul
dec
mov
cwtl
test
dec
mov
and
fidivrl
mov
mov
test
cwtl
dec
sub
movsb
cmp
adc
popa
aad
mov
xor
fimull
loopne
push
jae
adc
movsb
lods
lds
jge
add
mov
lret
lock
fsubrs
into
aam
cs
bnd
push
jo
int3
mov
sub
mov
add
mov
int3
fildll
in
dec
popa
jo
xchg
adc
lcall
mov
or
mov
mov
pop
in
insl
push
dec
sbb
sub
adc
or
pop
movsb
aad
les
enter
add
jne
fwait
xor
xor
daa
lea
je
mov
cmp
adc
inc
orl
ret
mov
lods
jl
dec
ljmp
lods
icebp
stos
cmp
sahf
and
sbb
add
into
mov
sbb
fadds
test
in
mov
push
stos
jo
je
repz
cld
rcrb
flds
mov
pushf
pop
mov
mov
push
addr16
pop
mov
and
cmpsb
adc
stos
dec
xchg
adc
push
cmpsl
mov
cmpsb
fnstcw
xlat
adc
mov
xlat
scas
cmp
cmpsl
iret
bound
or
adc
dec
testb
or
and
jne
in
stos
mov
shlb
cli
les
test
iret
cmpsb
mov
aaa
mov
xor
stos
inc
mov
enter
notb
xchg
bound
fisubrs
and
hlt
leave
jne
add
ja
imul
adc
mov
pusha
call
aas
xor
xor
sub
in
add
add
cmpsb
lcall
mov
mov
cltd
adc
pop
xor
dec
jb
mov
add
jno
sbb
sub
pop
jmp
mov
out
xor
fucomip
add
fldcw
jae
call
sub
adc
jge
mov
rclb
adc
mov
data16
dec
fisubrl
clc
sbb
in
jp
xchg
and
adc
test
cmp
xchg
pop
icebp
fucom
sbb
outsb
mov
pop
sbb
aas
pop
sbbl
subl
test
cmp
mov
add
pop
add
test
das
nop
mov
dec
or
testb
inc
fldenv
mov
and
fistpl
dec
dec
ret
bound
pop
cmp
ljmp
hlt
and
pop
xlat
clc
fsubs
push
xor
pop
lret
repz
jbe
ja
xchg
bound
subps
push
daa
clc
mov
scas
jns
and
pop
test
push
pushf
imul
js
std
cltd
sub
push
and
jg
in
decl
iret
popf
inc
in
das
movsb
inc
mov
xor
adcl
pop
fnsave
add
mov
pop
loop
dec
jecxz
insb
sbb
sahf
bound
pop
xor
pop
movsb
jp
pop
inc
lds
xchg
scas
push
out
cmc
mov
mov
dec
mov
adc
push
popf
rorl
and
movsb
les
mov
out
mov
pushf
cmp
ja
enter
xor
frstor
lds
test
lods
push
jb
mov
icebp
push
outsl
push
xchg
cmc
jge
loop
stos
adc
dec
push
mov
movsl
js
adc
jmp
ja
sbb
mov
and
xor
int3
xor
jmp
inc
pop
push
jns
loop
and
aaa
testb
xlat
in
inc
fmul
hlt
push
lods
rcrl
enter
sbb
sti
wbinvd
or
test
cs
xor
fbld
lret
lcall
cwtl
mov
scas
xchg
ljmp
and
adcl
test
loope
mov
in
pop
out
mov
pop
or
fildl
insl
sub
scas
fcmovu
hlt
lret
mov
popa
xor
std
ret
pop
mov
inc
imul
aam
sub
push
mov
cmp
fimull
mov
dec
push
jae
add
push
mov
pop
sub
jle
xchg
cltd
jecxz
push
data16
les
mov
leave
scas
dec
mov
jl
dec
dec
movsb
shlb
xchg
dec
pop
in
xor
pop
sbb
icebp
mov
sti
fwait
xchg
push
jnp
or
scas
mov
dec
fsubrl
leave
and
xor
out
xlat
cmp
aam
outsb
mov
cmp
fxrstor
jmp
inc
mov
loopne
push
push
push
mov
cmc
sub
stc
and
rolb
fs
jb
mov
pop
xor
pop
fs
xchg
shrl
adc
add
dec
push
cmpsl
mov
xor
ja
dec
aam
loope
jnp
movsb
test
dec
shrb
icebp
outsb
add
sub
shrb
hlt
adc
dec
popa
adcl
dec
dec
movsl
mov
ds
mov
mov
rol
pop
dec
imul
insb
scas
xlat
jmp
lea
sarb
xlat
sbbb
scas
inc
es
pop
fs
mov
hlt
and
push
mov
into
cmp
push
psraw
xor
pop
sbb
dec
popf
add
ret
xor
test
imul
dec
int
daa
fs
ret
xor
loope
movsl
dec
mov
jnp
int3
mov
shlb
mov
jmp
push
inc
and
lcall
imul
stc
dec
sub
jl
scas
sub
sub
pop
pop
in
xchg
and
push
mov
pop
fstps
pop
mov
pushf
icebp
jns
jns
sbb
pop
cs
js
sbb
addl
and
mov
and
jl
lods
std
add
mov
xor
inc
rolb
push
sbb
sti
add
xchg
sub
dec
push
mov
aas
insb
flds
imul
cmp
int
fnstsw
repz
and
aaa
and
xchg
pop
std
inc
mov
ja
sbb
movsb
ret
fcoml
push
inc
std
dec
loope
push
jmp
mov
repz
pusha
lea
mov
push
dec
push
loope
imul
cmp
je
ftst
clc
data16
sub
jecxz
sbb
test
cmp
ds
pop
mov
add
das
idivl
mov
es
xor
pop
hlt
mov
das
adc
adc
sbb
cmp
mov
adc
rcrb
sbb
pushf
xchg
outsb
inc
ss
sbb
in
mov
int3
popf
icebp
cld
xchg
cmp
iret
lret
cmp
imul
jnp
fs
dec
shrl
inc
pop
gs
dec
sub
mov
inc
or
in
mov
cmp
pop
jo
fstps
or
lock
dec
arpl
cmpsb
inc
inc
push
xchg
sub
add
ret
pop
les
les
cwtl
cmp
dec
hlt
jle
dec
arpl
cmc
and
jge
mov
mov
push
adc
jne
ljmp
fisubrs
fcomps
mov
cmpsl
adc
adc
push
out
mov
outsb
cmpsl
pushf
sti
inc
push
mov
out
aaa
jmp
cmp
xchg
cltd
stos
cmc
xchg
stos
mov
push
das
cmp
inc
in
dec
gs
lods
insb
jle
fdivrl
dec
cltd
and
lcall
cmpsb
int3
jnp
cld
aaa
push
push
jno
aaa
repnz
sahf
cmp
mov
stos
lods
sub
push
rcll
iret
sub
or
daa
add
mov
mov
ret
pushf
imul
mov
fildll
and
cmp
cli
data16
lahf
pop
xlat
cmpsl
mov
pop
sahf
sub
and
cwtl
and
push
in
fwait
push
lea
adc
ficompl
adc
test
sub
pop
inc
das
cmp
sbb
sub
ljmp
sub
sahf
xchg
sub
repnz
mov
mov
shl
insl
fdivrs
cmp
push
mov
daa
sub
cmp
loopne
nop
cmp
mov
jns
into
sbb
imul
vpunpcklbw
or
mov
fwait
mov
xchg
pop
stc
popf
sbb
js
push
insl
mov
cld
fsub
add
push
mov
push
sbb
aaa
gs
adc
cmp
push
push
arpl
add
mov
pop
push
jnp
and
imulb
scas
imul
jno
movswl
sub
or
ret
sbb
outsb
xor
call
or
xor
gs
jne
aam
std
pop
mov
mov
mov
addr16
pop
cs
mov
je
insl
subb
jge
lret
push
insl
sbb
mov
cmp
push
lock
sub
xor
nop
mov
lcall
xchg
add
lock
push
cmc
jmp
test
loopne
hlt
adc
mov
ja
push
jae
stos
pop
cmp
nop
dec
es
or
test
test
in
mull
jge
sub
sahf
pop
cmp
xchg
icebp
or
sbb
dec
xlat
push
outsb
mov
pop
jg
xchg
rcrl
pushf
sub
push
or
push
or
imul
in
loop
xchg
flds
ss
ljmp
fisubs
adc
cmc
cmp
add
pop
repnz
aam
xor
or
adc
mov
int
jecxz
shrl
mov
pop
scas
movsb
repnz
adc
loopne
rclb
arpl
mov
repnz
inc
nop
adc
rcl
push
sub
inc
xchg
jns
in
dec
mov
jecxz
mov
mov
xlat
cld
lcall
cwtl
sub
in
mov
lahf
imul
repnz
add
xchg
push
hlt
adc
jecxz
inc
xor
sahf
pop
ja
cmp
gs
sub
jbe
jle
dec
bound
rolb
out
stos
fidivrl
sub
aad
jne
sbb
fdiv
lods
inc
out
add
cli
mov
push
sbb
lods
push
into
aad
imul
jnp
push
sub
mov
fists
xor
hlt
adc
in
jbe
inc
dec
and
ja
cmp
and
lcall
jns
jne
add
ret
rorl
xchg
or
mov
out
cmpsl
pop
stos
hlt
cmp
hlt
mov
and
test
aam
cli
push
sub
nop
inc
mov
xor
mov
and
or
aaa
sbb
scas
mov
push
js
pop
push
imul
push
mov
or
jp
bnd
aas
dec
pop
outsb
cld
pop
fldcw
movsl
mov
add
leave
lock
addr16
sub
jo
mov
lret
mov
jp
push
push
inc
icebp
imul
loopne
inc
ficompl
inc
mov
cld
mov
push
mov
jo
aaa
jbe
mov
xchg
jnp
cltd
sub
test
bound
adc
mov
lods
pop
sub
jmp
jl
sbb
jg
roll
shl
clc
mov
orb
bswap
pop
stos
sbb
mov
mov
mov
mov
test
mov
sub
rcr
lea
and
add
push
sub
inc
icebp
jnp,pt
repnz
aas
out
jmp
sarb
ss
das
push
mov
lret
jb
ds
mov
rolb
call
aas
or
jge
pop
push
mov
cmp
clc
cwtl
ljmp
push
stc
repz
mov
mov
push
mov
lahf
xchg
lock
ret
xlat
mov
inc
fs
ret
fwait
cwtl
dec
and
rclb
gs
mov
add
cmpsl
inc
rcrb
xchg
dec
mov
cmc
inc
call
insl
scas
fcoml
nop
add
fsubrl
stos
pop
scas
fcompl
stos
pushf
std
xor
gs
frstor
movsl
out
adcl
lock
push
or
jmp
jne
ss
or
push
jp
lods
out
repz
gs
and
mov
pop
or
xor
xor
xchg
sbb
push
sbb
jle
mov
xchg
dec
popf
call
adc
add
inc
aaa
xor
dec
leave
out
inc
jbe
jno
nop
stc
arpl
mov
push
bound
out
inc
jns
jmp
and
or
pop
add
jmp
loop
cmpsb
imul
mov
add
and
cmc
ror
enter
lret
shlb
jmp
xchg
and
fiaddl
and
mov
rorl
mov
les
xchg
jmp
inc
sbb
inc
lahf
in
cmp
adc
or
or
pop
in
cmpl
push
xor
nop
out
cmp
adc
nop
xchg
int
inc
fs
loope
les
lahf
xor
lods
fmull
sti
dec
inc
fldenv
movsl
inc
movsl
push
jmp
dec
call
sub
movb
push
adc
or
jnp
rcrl
ss
cmc
cltd
xor
mov
pop
jbe
in
dec
jnp
jo
xchg
sub
xchg
dec
fldt
leave
mov
addr16
sbbb
push
xchg
mov
lahf
xchg
jg
pop
push
mov
loop
xor
sarl
mov
sub
imul
out
jp
mov
jns
mov
scas
ret
out
fsubr
xchg
pop
and
mov
mov
jg
in
fsubs
outsl
sbbl
nop
call
push
jg
jnp
adc
inc
data16
daa
inc
cmp
insl
add
andl
mov
pusha
pop
mov
fmuls
jg
leave
popa
loope
dec
in
pop
jo
cld
scas
insb
xchg
sbb
iret
fisttpll
shrl
sub
inc
ljmp
cld
pop
xor
jbe
and
mov
jae
pusha
lods
popf
imul
or
mov
bound
xlat
inc
test
pop
cmpsl
mov
push
lods
lock
or
pop
mov
repnz
ljmp
or
fdivrl
mov
mov
and
mov
jl
insl
push
hlt
xorb
leave
sub
xchg
pop
decb
fs
ret
mov
pop
daa
aaa
popf
xchg
mov
dec
mov
js
xlat
stc
lret
clc
in
test
dec
mov
inc
fisubrs
fcmovnu
in
push
gs
mov
jns
mov
xchg
and
jp
mov
pop
mov
inc
sahf
xor
xchg
inc
mov
cmpsb
push
mov
xchg
fs
cs
out
clc
test
push
popf
dec
mov
and
jge
fs
cmc
popf
call
mov
lret
sahf
roll
fnstcw
std
push
lcall
push
xchg
rclb
pop
imul
mov
jnp
imul
and
dec
int
pop
js
adc
fiadds
sti
icebp
aam
lds
ljmp
inc
inc
adcl
xor
fsubr
xlat
ljmp
aaa
ss
ss
jecxz
adc
lds
fcom
popa
scas
ljmp
idivb
orb
test
sbb
mov
or
lahf
xchg
mov
das
adc
push
rcl
mov
repz
mov
cmp
fs
mov
xor
sar
es
outsl
push
addr16
repz
lods
or
ss
mov
andb
mov
aad
and
aad
mov
dec
flds
jae
lcall
inc
mov
aam
and
jmp
cmp
imul
icebp
add
jmp
sub
lods
mov
or
add
mov
jmp
ret
mov
dec
add
adc
shll
pop
sub
or
dec
xchg
cmpb
lock
es
ret
aad
clc
aam
push
mov
add
mov
mul
shrb
add
and
cmpsb
fbstp
push
jbe
fs
mov
mov
xor
xlat
jnp,pt
addr16
ret
mov
popa
mov
mov
pop
imul
xchg
adc
lret
xlat
sub
push
jns
or
mov
lods
clc
xchg
xchg
xchg
lock
loop
ret
cmpsb
loopne
dec
mov
mov
mov
sarb
push
mov
sub
xor
or
mov
fildl
adc
and
popa
aas
inc
inc
js
mov
call
ss
nop
cmpsl
test
adc
adcb
ret
cmc
cmp
jbe
adc
in
cmpsb
jne
pop
cmp
jno
adc
adc
je
sbb
mov
or
stos
insl
rol
mov
sub
ret
jb
mov
stos
sbb
insl
lret
enter
outsl
sbb
mov
and
mov
hlt
lds
pop
repnz
cmp
fldl
fucomip
pop
int
cltd
or
incb
mov
jns
aam
out
test
ret
mov
or
dec
rcr
or
sbb
adc
cmp
data16
cltd
fmul
mov
cmp
fsubl
paddq
inc
xchg
jns
arpl
ret
hlt
call
push
or
pusha
bound
cmp
or
xchg
cs
scas
into
jns
pusha
mov
and
data16
xchg
jmp
cli
inc
ss
xor
add
scas
cwtl
fmuls
popa
dec
and
adc
pop
push
ja
pop
mov
mov
fistpll
bound
inc
pop
in
pop
ret
xlat
cld
xor
aaa
mov
jae
repnz
xchg
cmp
jbe
add
pop
mov
dec
xchg
bsr
mov
in
xchg
push
mov
pop
xlat
xchg
mov
in
pop
bound
pop
sarl
sbb
pop
push
push
ret
jbe
mov
adc
lret
loopne
push
iret
dec
shlb
mov
lret
pop
xchg
out
mov
adc
inc
sbb
jle
xchg
cli
xor
adc
sahf
cwtl
add
cmp
pushf
pop
in
pop
sub
lahf
outsb
iret
movsb
pop
mov
xchg
lret
mov
fcmovne
daa
jle
call
stc
or
inc
push
fs
jbe
je
mov
pop
cmp
adc
outsb
and
stos
inc
mov
jbe
mov
and
es
sahf
mov
iret
int3
imul
sbb
xchg
xchg
mov
push
dec
aas
inc
popa
imul
inc
sti
ljmp
dec
test
ljmp
idivb
sbb
and
add
and
jb
mov
mov
popf
push
repnz
add
int
mov
dec
fadds
push
lahf
testl
xchg
data16
adc
lea
ficoms
mov
adc
test
scas
comiss
sahf
inc
sbb
add
cmc
int
mov
xchg
imul
inc
add
or
xor
and
aaa
jmp
mov
cmp
pop
aam
cmp
hlt
mov
mov
out
popa
sbb
lea
jmp
popa
clc
iret
add
popa
stos
clc
xchg
andb
jecxz
mulb
jge
pop
int
movsb
xor
mov
push
mov
mov
push
mov
push
addl
pop
movsb
mov
ret
sub
hlt
fimuls
repnz
add
dec
into
jns
inc
imul
loope
xchg
xchg
or
or
xchg
imul
icebp
clc
push
xor
mov
jg
inc
inc
stos
add
shl
xchg
sub
cmc
sbb
mov
stc
cmc
sbb
mov
mov
cwtl
sbb
inc
push
adc
sub
sub
repz
repnz
adc
adc
std
pop
ret
rcl
jnp
jnp
test
xchg
mov
pop
push
cmpsb
clc
adc
in
add
shl
stos
nop
add
movsb
mov
iret
adc
mov
or
orl
mov
xchg
shll
lret
cmpsl
in
jne
inc
js
pop
mov
adc
ljmp
xchg
cmpsl
nop
inc
add
div
pop
es
dec
pop
pop
lea
mov
jns
shlb
pop
sahf
iret
loop
lcall
and
loop
stos
inc
ret
jnp
xlat
rclb
mov
dec
arpl
sub
and
shl
inc
into
andl
aad
push
mov
jae
ljmp
in
xchg
pop
lret
xchg
dec
ficomps
xor
mov
push
shlb
push
data16
cmpsb
les
sub
inc
pop
aam
fldl
inc
xchg
mov
call
popa
sbbl
int
nop
mov
cmp
popf
sbb
and
mov
add
inc
xchg
xor
sbb
add
cmp
test
or
iret
fadds
leave
sahf
mov
mov
ja
dec
mov
push
jle
xchg
pushf
stos
inc
iret
mov
lahf
daa
leavew
xor
and
jle
pop
out
out
inc
popa
jb
je
adc
xchg
fwait
cmpsl
imul
pushf
and
aaa
ds
push
fadd
lcall
aad
push
pop
xchg
add
or
fidivs
and
inc
jg
lret
push
popf
sub
shr
hlt
cs
rorb
dec
dec
dec
test
push
mov
mov
sbb
xor
mov
lret
mov
addl
add
sbb
jns
push
lock
xor
jae
lods
inc
inc
pop
push
sbb
mov
adcb
into
scas
fwait
rcrb
dec
bound
nop
ljmp
sbb
loope
xchg
loope
mov
add
xchg
sbb
shl
add
frstor
xchg
es
inc
adc
mov
lret
or
mov
sahf
lods
fisubs
in
push
movsl
decl
mov
pop
pop
mov
cmp
data16
adcb
scas
pop
loope
cmp
push
jmp
dec
fcomp
andl
clc
sar
insl
jo
ss
daa
push
mov
cwtl
scas
mov
fdivs
arpl
pop
push
push
add
adc
out
lret
jae
sub
nop
fmuls
in
add
lret
scas
cwtl
mov
stc
loopne
sub
pop
dec
inc
add
into
shl
mov
mov
dec
das
mov
insb
dec
mov
movsl
pop
lahf
mov
sub
rorb
xor
or
sbb
imul
pop
out
mov
je
cli
inc
dec
jle
jge
sbb
cmpsb
fstpl
js
mov
jne
or
push
dec
push
inc
repz
xorb
push
jmp
add
stos
jmp
test
cmp
mov
pop
cmc
mov
pop
jl
nop
rorl
xor
jae
daa
sbb
lcall
lcall
cwtl
xor
mov
mov
sbb
or
seto
or
mov
aad
pop
int
test
mov
adc
ljmp
jb
into
das
jle
xlat
in
sub
and
mov
xlat
adc
and
mov
pop
push
into
cli
ja
daa
out
mov
and
repz
lret
scas
jbe
cmp
test
out
sub
adcl
int3
repz
xlat
lds
mul
test
je
fdivl
xchg
mov
loope
test
bound
push
frstor
cmp
pusha
xor
rol
repnz
int3
pop
add
out
push
call
dec
sbb
fiadds
ret
lcall
fidivrs
je
addr16
xchg
sub
adc
cmp
jg
out
stc
xor
xchg
pop
xchg
orb
es
lret
negb
xlat
mov
aas
aad
jp
pop
test
mov
xor
andb
daa
push
jbe
js
in
inc
inc
popa
mov
out
dec
inc
or
mov
push
jae
or
push
xor
xchg
mov
outsb
sub
lds
hlt
pop
sbbl
sbb
push
mov
pop
cld
xchg
mov
push
jmp
addr16
divb
cwtl
cs
das
add
daa
pop
cmpsl
clc
sub
cwtl
arpl
sahf
fxch
pop
mov
sbb
enter
cmp
mov
sbb
lods
dec
dec
sarb
scas
push
or
notl
jg
xlat
outsb
pop
mov
movsl
int3
jl
add
ret
mov
movsb
pop
mov
cmp
jo
xor
cmp
lods
aas
sbb
inc
daa
in
jns
popa
mov
mov
mov
sub
fnstcw
mov
lret
dec
jo
adc
popf
sbb
outsb
sub
mov
or
gs
nop
cmp
pop
and
xor
lret
mov
shll
aaa
bswap
pushf
sub
inc
aad
out
nop
ss
call
lds
fisubl
mov
push
fucomi
inc
or
rorl
sti
push
pop
dec
xor
sub
adc
sub
mov
addr16
push
popf
dec
fdivs
jge
mov
ror
cltd
add
hlt
and
push
sbb
bound
aad
xlat
pop
dec
mov
mov
push
jl
popa
loopne
mov
test
insb
xor
xchg
movb
push
cs
pop
aam
ds
sarl
jb
xchg
cmpsb
shlb
and
pop
outsb
or
ja
in
mov
popf
mov
push
dec
ficoms
mov
inc
or
test
sbb
lcall
mov
sub
mov
sub
imul
sbb
mov
push
mul
xchg
xchg
daa
lcall
sbb
dec
pop
in
fistl
mov
stc
test
and
hlt
cwtl
popf
jo
mov
fldt
xchg
outsb
sub
roll
ret
fbstp
push
fwait
jmp
pop
arpl
jp
inc
mov
push
movsb
mov
mov
mov
dec
cltd
int
and
test
into
fdivrs
fs
bound
push
ljmp
mov
xor
imul
gs
mov
push
xchg
and
jae
scas
movsb
lea
sub
icebp
xor
pop
lret
fnstenv
enter
das
mov
jmp
mov
repnz
xchg
daa
std
call
scas
sbb
out
aam
rcrl
rcrl
jo
xchg
mov
fcmovb
int3
fidivrs
mov
pop
gs
add
inc
cmpsb
lcall
lock
xlat
subl
aad
xor
test
int
dec
push
and
push
jmp
or
xchg
popa
add
push
sbb
aas
dec
addb
pop
inc
stc
in
jne
sbb
fistpll
mov
inc
adc
dec
faddl
cmp
shl
fucomp
and
lahf
mov
fld
ljmp
and
popa
pop
jb
mov
and
push
inc
imul
adc
adc
push
popa
inc
in
pop
add
jne
ss
iret
push
mov
sbb
gs
push
ljmp
aaa
push
mov
or
cmpsl
ds
lcall
mov
pop
hlt
outsl
ljmp
jnp
shrb
int
aam
inc
jecxz
pusha
dec
loopne
add
ljmp
out
mov
outsl
int
sbb
aaa
dec
cmp
and
add
adc
inc
ret
push
rorl
inc
scas
cltd
int
mov
testl
ret
inc
pop
cmpsb
cmp
pusha
xchg
pushf
sbb
mov
insb
rcrl
adc
cmp
gs
pop
xchg
imul
rcll
arpl
jnp
xchg
xor
and
xchg
lcall
and
cmp
aas
daa
mov
pop
sub
mov
fcmove
ret
mov
test
cltd
dec
mov
js
sub
adc
push
iret
mov
push
dec
fldcw
sbb
sahf
cmpsl
lret
mulb
jp
push
cwtl
dec
fwait
mov
aaa
pop
sbb
int3
cmp
add
add
xchg
mov
aad
mov
popf
push
ficompl
pusha
rorl
jne
jae
dec
in
hlt
mov
adc
and
push
enter
es
fisubrl
mov
push
mov
dec
cmp
sub
shrl
dec
movsl
cmp
jo
mov
loopne
cwtl
in
jmp
mov
mov
mov
inc
test
cmpsb
or
dec
cld
scas
ds
ja
mov
les
xor
mov
push
and
cmpsb
xchg
inc
cwtl
sarl
insl
sub
jbe
out
loope
mov
mov
aaa
cmpsb
dec
dec
or
fsubs
sbb
cmp
dec
in
dec
add
fstps
xchg
or
dec
lcall
insl
pusha
sub
jno
nop
fs
pop
bound
jns,pn
cmpsl
xor
xchg
jecxz
shr
pop
lock
lea
push
jno
sub
xor
bound
xchg
sub
lcall
mov
fsubrl
mov
incb
xor
das
jg
push
cmp
xchg
rcl
cmpsl
pop
xchg
push
out
pop
insl
and
outsl
outsl
mov
sub
out
jns
shlb
fwait
notl
xchg
test
sbb
mov
js
mov
cwtl
add
lret
sti
mov
mov
popf
add
shll
mov
cmpsl
sahf
dec
repnz
sub
mov
or
aam
outsl
pop
mov
and
xchg
mov
mov
mov
js
sbb
dec
ljmp
fdivp
push
pop
negb
insb
outsl
pop
mov
lret
fldl2e
adc
stos
es
xchg
mov
int3
cli
xchg
pop
push
in
xchg
jns
imul
je
aad
out
xor
testl
inc
testl
repz
rolb
std
icebp
mov
jmp
add
out
mov
inc
pop
sub
aas
push
jb
loop
hlt
xchg
dec
les
xor
sub
xor
call
mov
ja
xlat
rcrb
arpl
add
mov
xor
stos
sub
shrl
sar
ds
outsl
in
dec
pop
out
je
test
or
jae
shl
imul
mov
fcoms
daa
jecxz
fstpl
out
adc
subl
aaa
testb
pusha
int
push
movsb
dec
pop
lea
gs
shl
jb
out
rclb
icebp
cmp
cs
loop
lret
add
daa
out
loop
push
xor
mov
xor
cmpsl
lock
add
mov
push
nop
sub
idivl
out
or
push
add
movsb
cmp
add
inc
daa
lret
addr16
cmp
or
mov
dec
mov
push
mov
iret
popa
sub
and
mov
mov
test
or
cmpsb
dec
pop
call
aas
bound
push
push
push
ret
lcall
cwtl
popa
enter
call
or
xor
xchg
and
stos
movsb
decb
das
mov
fldl
repz
aas
loop
and
mov
popf
or
gs
xor
nop
xchg
call
xor
push
dec
pop
inc
mov
push
pop
and
pop
negb
ret
jns
jo
pop
faddl
cmc
or
cmp
fdivs
mov
aaa
push
movsl
push
pop
sub
xchg
mov
iret
sbb
int
lret
mov
test
scas
lea
lcall
test
inc
fstpl
xlat
mov
push
push
in
jmp
mov
loopne
data16
inc
inc
in
imul
push
lock
push
push
orl
int3
shlb
and
cld
add
xor
subb
icebp
ror
dec
or
movsb
xchg
mov
xchg
sub
insb
xchg
aaa
mov
dec
jle
cltd
lds
xor
bound
lock
inc
inc
inc
xlat
cmc
mov
das
jns
test
das
adc
mov
jno
insb
push
xor
dec
or
mov
into
or
inc
fsubrs
and
xchg
mov
enter
inc
scas
sbb
out
mov
xor
pop
testb
cld
hlt
mov
int
mov
fstl
pop
faddp
xchg
or
dec
xor
pop
movsb
push
sub
pop
das
dec
loope
mov
mov
scas
mov
mov
cltd
push
jae
out
imul
fs
popf
and
mov
aaa
push
insl
push
mov
repz
sub
cld
fidivs
mov
rol
movl
jb
and
inc
xchg
sub
testb
push
cmp
push
pop
shr
mov
int
mov
cmp
stc
aad
jo
aad
rclb
ficompl
mov
test
xchg
inc
insl
lea
mov
lods
out
add
xor
mov
sbbl
nop
mov
ret
outsb
sbb
push
cwtl
xor
sbb
fisubl
push
mov
int3
pushf
pop
faddl
test
popa
pushl
cmpsb
xchg
push
or
inc
jns
in
dec
leave
push
cmc
cwtl
sub
ret
pop
sbb
test
mov
pushf
dec
cmp
lahf
pop
call
ss
sbbl
push
dec
pop
jb
mov
inc
mov
adc
xrelease
loope
xchg
cmpsl
mov
sbb
push
sbb
mov
mov
xchg
addb
adc
pop
test
icebp
insl
adc
lahf
adc
data16
mov
decb
inc
leave
jns,pn
mov
pop
adc
cmp
add
xchg
out
je
icebp
and
dec
jp
icebp
dec
pop
push
pop
cmpsl
ret
mov
lret
adc
push
mov
out
adc
pop
xor
inc
in
fcmovu
call
dec
or
push
in
arpl
data16
sbb
clc
inc
jnp
lea
dec
adc
fisttpl
inc
mov
arpl
pop
ljmp
mov
dec
ret
jl
dec
hlt
addr16
in
mov
push
and
pop
mov
js
push
pop
and
add
lea
add
sub
mov
ret
imul
xor
nop
pop
icebp
pop
pop
pop
imul
les
inc
mov
ds
fs
clc
dec
adc
testb
decl
dec
pop
scas
testb
push
sahf
inc
fcmovb
jne
and
lock
loop
fadd
pusha
subb
test
notl
loop
aad
mov
int
popf
xlat
icebp
aaa
adc
jg
jg
imull
cmp
lock
jle
cmp
fidivs
jl
nop
push
mov
out
loop
cld
push
int
movsb
cmp
lods
push
sbbb
ljmp
into
dec
fdivs
outsb
lds
insb
cmp
mov
loope
push
mov
push
jne
outsb
cmpsl
xchg
fsubp
js
mov
add
testl
sub
testb
xor
push
call
or
mov
and
dec
fwait
call
sbb
xor
push
jp
dec
mov
fisttpl
rolb
test
dec
mov
add
xchg
adc
dec
pop
sbb
sbb
scas
mov
data16
add
push
push
mov
lcall
and
or
dec
sar
es
mov
testb
add
add
stos
mov
mov
mov
pop
jge
pop
daa
aas
mov
mov
or
outsl
ret
or
jbe
mov
test
pop
inc
fmull
out
inc
fdivs
fisubl
fldt
push
fdivrs
jnp
xchg
cmp
fstl
fsubrl
ror
insb
incb
lods
scas
xor
daa
mov
aas
lock
stos
out
jno
inc
push
xchg
movb
mov
fimull
les
mov
sbb
adc
push
mov
push
jecxz
mov
mov
dec
test
push
dec
mov
arpl
or
cmpsl
mov
outsb
mov
outsl
std
aad
inc
cmp
aaa
cmc
fcmove
scas
addb
and
in
rcr
in
mov
fcompl
jno
clc
js
movsb
xchg
rorb
mov
inc
fimull
in
inc
leave
jo
in
imul
test
faddp
and
int
js
push
jge
dec
inc
fnstsw
test
pop
fucomi
xchg
cli
push
jo
ds
dec
fidivs
fwait
pop
xchg
push
mov
cld
and
push
xor
inc
pop
divb
inc
inc
cmp
ror
mov
cltd
xchg
cmp
xor
loopne
inc
cwtl
test
pop
xor
hlt
int
mov
jl
mov
mov
stos
mov
xor
xchg
jbe
or
in
repnz
or
fdivrs
jne
jp
sbb
jle
repnz
mov
ret
popf
pop
push
test
clc
test
dec
out
test
adc
stc
bound
add
add
or
clc
cmp
fwait
clc
int
inc
fnsave
pop
add
push
mov
movsb
inc
or
out
test
shlb
jo
and
dec
adc
arpl
sbb
int
repz
insl
adc
ljmp
inc
rcrb
int
mov
out
push
ss
shrb
dec
xor
arpl
push
add
xchg
dec
inc
rcl
enter
mov
xor
jns
sub
add
daa
jno
popa
cltd
lods
inc
iret
aas
adc
in
mov
sahf
sub
out
sti
mov
cmpsb
push
push
ret
lea
cltd
xor
sbb
pop
int
jmp
aaa
hlt
in
adc
rcrl
fwait
mov
popf
dec
pop
ret
cmp
in
call
sub
les
lret
addr16
jne
aam
ret
pop
into
iret
data16
mov
stos
lods
add
adcb
mov
push
mov
inc
outsl
ss
fsubl
dec
push
pop
or
fiadds
call
iret
mov
sub
cs
rcr
aaa
jbe
mov
je
shl
cmpl
ret
mov
cmp
in
sub
fnstenv
dec
into
std
xchg
add
mov
mov
inc
faddl
arpl
jge
add
into
mov
inc
pop
push
push
inc
movsb
lret
out
cmp
in
xor
loopne
xorb
pop
mov
loope
sub
inc
push
aaa
push
fwait
ds
test
cmpsl
aaa
adc
rcl
mov
push
les
das
mov
sbb
pop
imul
cmp
je
pop
pop
in
xchg
pop
and
push
add
mov
popa
jnp
jnp
pop
jae
mov
ds
xor
sti
cmp
pop
ja
xor
lret
loope
push
out
xchg
push
push
popf
dec
addr16
push
push
gs
stc
les
je
popf
pop
mov
rcll
inc
mov
out
pop
mov
dec
bound
cmp
sub
push
popf
and
nop
add
jne
sbb
lahf
shrb
xor
mov
lods
divl
scas
add
mov
sti
dec
sub
xchg
jecxz
popa
pusha
mov
mov
xor
ljmp
ret
addl
iret
push
enter
gs
das
mov
in
repnz
lret
out
inc
or
les
and
adc
mov
jle
cwtl
js
leave
jmp
mov
adc
into
in
jno
jecxz
sbb
mov
sbb
rcll
test
cmp
pop
mov
icebp
or
add
xchg
add
mov
movsl
out
cli
xchg
sub
sub
lcall
sub
iret
or
mov
inc
arpl
sbb
cmp
and
fimull
push
xchg
and
lret
cmp
sub
push
mov
sbb
mov
xlat
decb
subl
leave
movsb
xor
xor
cld
dec
push
xlat
fsubs
in
and
stos
ret
pusha
dec
mov
jnp
shlb
daa
sub
mov
in
and
xor
and
leave
or
pop
pop
fsubrs
aaa
jne
pop
pop
je
jg
mov
mov
mov
mov
adc
xchg
mov
jg
xchg
es
daa
movsl
add
push
fcmovbe
pop
orl
dec
scas
sub
dec
adc
inc
outsb
call
push
xor
popf
data16
or
cmp
movsb
mov
jne
push
in
push
push
xorb
repz
mov
mov
sub
lods
xchg
and
sahf
into
push
rcrl
jmp
mov
pop
xor
loope
stc
inc
loop
loop
sbb
mov
add
mov
test
repz
xchg
sub
mov
fsubl
add
cmp
mov
cmp
icebp
pushf
call
mov
jno
push
test
les
cmp
jge
xchg
cmp
adc
je
test
cwtl
sbbl
mov
pop
xchg
and
out
rorl
fwait
int
scas
dec
push
jl
arpl
jns
out
mov
push
popf
or
cs
pop
pop
mov
mov
add
add
mov
xor
push
hlt
lds
gs
je
pop
and
imul
pusha
in
stos
rcrb
cmp
mov
jae
sub
insb
or
rorb
lret
in
aam
push
xchg
mov
xchg
lock
inc
ret
leave
pop
add
cmc
sbb
pop
out
dec
movsl
fimuls
hlt
testb
mov
mov
adc
inc
sbb
daa
ret
adc
sahf
scas
mov
dec
and
sub
js
sbb
les
cmp
sahf
ret
mov
pop
aad
xchg
dec
loop
mov
mov
cmp
adcl
fs
inc
and
push
or
shrl
andl
adcl
test
sub
mov
add
movsl
repnz
in
shl
movb
cmc
adc
das
xor
jmp
jl
adc
lea
out
push
hlt
pop
iret
adc
add
fs
mov
and
es
outsl
pop
fdivrl
inc
jb
test
mov
mov
lods
jl
cld
mov
in
or
cmpsb
lods
pop
jmp
mov
dec
pop
insl
int3
iret
cld
iret
jge
cmpsl
sub
fisttpl
or
mov
pusha
ss
mov
out
xchg
mov
mov
pop
xchg
hlt
add
mov
lret
ss
outsb
in
adc
aam
pop
mov
out
adc
hlt
inc
or
lcall
es
fiadds
lahf
dec
sbb
popa
adc
xchg
mov
stos
shl
xchg
push
mov
push
aaa
mov
mov
pop
lods
xchg
mov
movsb
jecxz
add
dec
jp
push
out
pop
jle
addr16
push
lret
push
das
and
pusha
add
and
or
and
cmp
fwait
hlt
jg
or
lret
cmp
cmp
mov
pusha
cmp
mov
xchg
push
sbb
pop
imul
mov
nop
and
daa
jmp
stos
loopne
mov
sbb
icebp
leave
int
or
les
dec
and
cmp
gs
jns
cs
push
movsb
fistl
or
pop
mov
cwtl
fadd
in
getsec
int
inc
xor
pop
push
cld
jb
and
push
cld
push
mov
sahf
dec
pop
pop
xchg
push
pusha
ret
std
or
dec
push
loop
xor
and
add
dec
mov
movsb
out
ficomps
test
in
and
mov
xor
movsl
mov
lahf
pusha
divb
fsubl
popa
adc
sarl
loopne
fs
jo
and
andb
iret
dec
enter
inc
je
cli
aas
push
out
out
sbb
aaa
cmc
dec
and
repz
mov
les
pop
fsubl
mov
sub
aam
test
loop
sbb
cmp
push
jmp
dec
xchg
mov
cld
lcall
pop
lds
inc
jecxz
cli
or
xchg
and
mov
daa
add
scas
les
mov
inc
addl
cmp
dec
push
sub
iret
xchg
mov
or
xor
ds
popa
leave
add
push
push
fs
cmp
jp
pop
test
dec
inc
stc
fsubrs
jmp
and
and
clc
push
fisubrs
mov
out
cmpsb
in
cld
pop
into
push
jmp
sahf
xchg
int3
ds
jg
pmulhw
xor
or
js
xor
repnz
xor
xor
and
sub
push
push
out
pop
cmp
dec
lods
inc
pop
scas
mov
dec
mov
dec
shll
mov
bswap
outsb
jg
mov
fldenv
xchg
sbb
xlat
jnp
jl
xor
call
sbb
insl
push
in
les
aam
insb
aaa
pop
lds
cli
push
daa
dec
add
aam
adc
dec
and
mov
test
xchg
popa
xor
in
jle
sbb
decb
pop
fisubs
add
jecxz
clc
aam
mov
push
ss
loope
sbb
add
mov
xchg
sub
add
push
and
mov
adc
in
or
xor
lahf
adc
jnp
add
imul
and
loopne
lods
lcall
clc
and
in
or
shll
add
jb
mov
sbb
xchg
push
insb
mov
mov
cmpsb
ss
push
push
mov
inc
jo
and
ret
adc
add
int3
adc
hlt
movsl
sub
lods
push
sbb
popf
mov
nop
xchg
jns
lds
xor
mov
lret
sbb
aas
stos
xchg
nop
mov
imul
push
aas
addb
mov
cmpsb
pop
dec
sub
mov
out
xchg
cmp
dec
pshufw
jecxz
and
les
mull
outsb
add
sbb
imul
inc
test
lock
movsb
dec
adc
mov
insl
xchg
push
push
aas
pop
cmc
rorl
pop
aas
pusha
iret
out
sub
push
push
jmp
xor
inc
fcomp
aam
cmp
pop
mov
aam
es
mov
jae
negl
sub
fdivl
add
cmovbe
xor
js
cmp
sbbb
pop
xchg
jl
out
outsl
int
out
lret
jecxz
nop
adc
cmp
mov
adc
lahf
stos
push
imul
xchg
push
push
mov
mov
add
jge
inc
out
or
mov
mov
imul
jmp
mov
cmp
push
fs
fsubr
sbb
scas
xchg
jbe
xor
gs
add
cmp
fwait
mov
dec
into
mov
shrl
dec
scas
call
pusha
stos
jg
fnstsw
or
and
out
add
aas
dec
dec
in
xor
clc
pop
ds
xchg
loope
add
xchg
ret
mov
xlat
in
xchg
mov
mov
dec
mov
jmp
adc
inc
xor
ror
xlat
add
or
repnz
and
cmp
gs
nop
jb
push
js
xchg
pop
stos
les
fimull
xor
push
jno
mulb
lret
rolb
aaa
pop
addr16
push
sub
std
mov
shlb
push
pop
xchg
jecxz
adc
repz
jp
dec
cwtl
idivb
lods
gs
adc
sbb
cld
mov
dec
pop
mov
push
and
pop
mov
adc
and
pop
jg
push
push
call
scas
cmpsb
outsl
jnp
sbb
fs
popf
lds
mov
dec
dec
out
jae
inc
popf
lret
adc
mov
lea
in
push
jecxz
add
adc
out
arpl
and
cmp
stos
rcrl
and
mov
fidivrl
rorl
fstpt
pop
dec
inc
or
sti
sub
xchg
pop
cld
and
cmp
pop
jmp
xchg
jbe
jmp
std
xlat
pop
icebp
jge
aas
lcall
ss
ja
lcall
xchg
imul
psrlq
movsl
or
jecxz
dec
mov
out
xor
fs
mov
xchg
adc
add
jbe
add
jno
shlb
or
jo
outsb
repz
fmuls
mov
out
jle
adc
out
popa
mov
mov
push
mov
imul
repnz
into
vsubpd
jmp
and
in
dec
inc
jl
icebp
push
jg
or
nop
daa
aas
sar
test
stos
scas
repnz
mov
add
dec
cwtl
repnz
pushf
lret
mov
ret
stc
jbe
and
repnz
pop
xorl
cmp
icebp
dec
int3
in
fs
mov
mov
lods
scas
sbb
lea
xor
lret
lret
mov
ret
daa
xor
addr16
pop
mov
mov
xor
inc
and
movsb
repz
into
into
pop
std
cmp
loop
jo
mov
scas
dec
fistps
mov
adc
add
cmpb
xchg
jo
cmc
mov
aaa
or
push
mov
push
mov
iret
xchg
mov
adc
lcall
jg
adc
sti
mov
cmp
std
popf
pusha
aad
sarb
or
jb
mov
mov
ret
mov
rorl
sarl
dec
pushf
jo
dec
dec
in
sbb
sub
lret
dec
in
daa
hlt
mov
jne
test
pusha
mov
mov
add
inc
mov
hlt
push
into
movsb
inc
scas
pop
out
arpl
fstpl
sub
cltd
scas
cmp
inc
fldl
cmc
ret
push
mov
loopne
ret
mov
jp
push
mov
test
xor
push
jge
add
sbb
push
out
cld
xchg
mov
pusha
add
fadds
mov
inc
pop
addr16
in
mov
or
jnp
mov
data16
add
xchg
mov
call
xor
call
mov
xchg
into
jno
pop
lcall
or
cmp
sub
mov
daa
ss
fdivl
lret
bound
sarb
hlt
mov
add
sbb
cld
add
fbstp
ret
outsb
sub
nop
rcl
mov
mov
loop
mov
cmc
cmp
js
push
repz
js
mov
int
mov
push
sub
sub
fisubs
fs
jmp
cwtl
jp
jns
xchg
mov
leave
ror
hlt
inc
addr16
je
les
xchg
movsb
ja
mov
xchg
sub
adc
xchg
xor
sahf
xor
pushf
sbb
dec
add
mov
adc
mov
and
inc
stc
out
add
les
adc
and
testl
push
dec
pop
push
mov
jecxz
or
test
jge
sub
outsl
int
dec
stc
cli
dec
fisubrs
pusha
shl
xchg
dec
gs
repnz
popa
pushf
rol
add
test
test
lods
xchg
std
adc
sbb
scas
rol
popa
inc
dec
repnz
insb
das
loope
adc
push
sub
mov
jae
sbb
xor
je
loope
adc
push
cltd
fists
inc
enter
xchg
jmp
shrl
leave
mov
addr16
jo
roll
loopne
pop
xchg
imul
mulb
cmpsl
inc
and
mov
je
mov
jae
pop
adcb
mov
dec
xor
mov
enter
lods
insb
jp
fisttps
stos
jl
pop
mov
cmp
popf
lods
outsl
jmp
cli
jnp,pn
ss
mov
push
rcrb
icebp
jp
and
std
adcl
cltd
test
cmp
pop
sahf
push
stos
movsl
insl
fcmovne
movsb
out
in
add
or
push
pop
loope
inc
sub
mov
cmp
adc
negl
push
push
inc
rclb
jmp
or
jb
xchg
or
cs
fidivs
pop
sbb
outsb
cmp
adc
repz
test
loop
aaa
pop
faddl
inc
pop
fsts
inc
add
sti
mov
fsts
out
and
cli
mov
adc
sub
xchg
pop
aam
dec
lock
and
dec
mov
cmp
je
inc
pop
cmp
xchg
stos
push
cld
sbb
jno
ret
test
hlt
push
loopne
imul
mov
and
int3
test
jns
mov
rclb
add
push
popf
aaa
out
popf
push
mov
push
sarl
mov
lret
repz
inc
mov
cmp
push
push
jbe
or
jne
out
enter
dec
dec
xor
and
mov
aaa
clc
mov
and
push
mov
add
mulb
cmc
inc
dec
movsb
cld
fwait
pop
push
sbb
dec
adc
jne
and
mov
push
push
aam
in
in
push
cs
out
mov
mov
inc
inc
xor
mov
mov
aad
cs
dec
fcmovne
cltd
push
jle
ljmp
mov
adc
dec
pop
movsb
clc
sbb
jo
cld
add
ss
and
pop
jno
mov
sbbl
mov
call
pop
sbb
scas
push
mov
test
pop
xchg
push
pop
push
imul
popf
xor
pop
insl
gs
dec
nop
movsl
icebp
xor
imul
jmp
fcompl
ret
std
test
pop
sbbl
testl
cs
add
and
imul
in
out
adc
insl
jmp
hlt
icebp
movsb
mov
sub
nop
es
ficomps
cmp
lds
jle
jmp
pop
sbb
sbb
addr16
data16
and
shrl
mov
xchg
jl
mov
xchg
sbb
subb
mov
pop
test
scas
cmp
pop
sub
jl
or
scas
lods
addr16
add
sbb
jg
adc
xchg
push
inc
adc
sahf
mov
sbb
xchg
sub
ja
icebp
andl
add
shrl
hlt
mov
xchg
mov
jge
insb
push
and
shrb
mov
mov
lahf
sub
cmp
test
fbld
insb
add
dec
pusha
mov
ljmp
loopne
enter
cli
lock
outsb
aam
ret
outsb
das
shrb
ud1
mov
imul
or
jecxz
mov
xchg
lods
inc
mov
popf
mov
or
repnz
insb
or
pop
or
fwait
pop
fucomip
mov
inc
fadd
sarl
arpl
aad
fwait
xor
mull
cmp
cmp
and
dec
mov
pop
cmc
das
stc
scas
ja
js
inc
cwtl
stos
jp
js
out
outsb
jle
int3
adc
js
mov
inc
dec
test
cmc
xor
pop
ja
cmp
enter
addr16
int3
mov
in
lods
fwait
cmpsl
jbe
das
ret
aas
push
dec
das
enter
repz
rorb
jg
sbb
or
mov
push
rcrl
mov
pop
icebp
pop
sub
fisubrl
movsl
ret
sub
jne
jbe
mov
outsb
xchg
loop
lods
rcrb
jb
fildll
xchg
rorb
mov
subb
push
xchg
mov
pusha
mov
xor
rcrl
scas
out
sbb
add
mov
ss
aas
push
mov
aad
and
adc
rcll
outsl
insb
or
andb
cmp
add
add
pop
fimuls
lcall
cmp
fs
and
shlb
es
sbb
xor
outsb
jl
fdivr
xchg
mov
es
jmp
sarl
or
mov
dec
in
inc
mov
lods
mov
jbe
je
fdivrs
pop
pop
jg
mov
fldt
inc
ret
cld
pop
cmp
int
push
adc
push
scas
gs
leave
mov
sbb
add
mov
push
ljmp
cmpsb
cmp
add
add
sti
sbbl
xchg
xchg
xor
cmp
mov
sbb
mov
mov
mov
aas
xchg
std
xlat
dec
cmp
push
popa
mov
leave
stos
ret
pop
in
bswap
aaa
add
dec
pop
jg
dec
fildll
ja
add
mov
jge
ret
mov
cmc
add
subb
xchg
jg
sub
rclb
sarl
lods
cmpsl
imul
jl
jg
aas
sbb
mov
inc
fucom
aam
std
pop
mov
jns
and
lcall
cwtl
daa
stos
addr16
aaa
pop
ss
fsubs
test
mov
xor
lcall
in
sub
es
cltd
xor
lods
mov
push
int
inc
aas
aas
xchg
dec
fsubrs
push
test
pop
lods
cld
mov
sbb
dec
in
adc
mov
push
adc
outsb
mov
loopne
dec
data16
lds
mov
fs
cli
jbe
pop
push
in
cld
jg
sub
dec
fiadds
fwait
mov
fcomps
mov
or
cli
sub
pop
sbb
mov
stc
dec
cmp
repz
ss
out
fisttps
push
lcall
xor
cwtl
fwait
leave
mov
or
add
sbb
adc
adc
lods
inc
sbb
lods
lret
xor
dec
test
aam
test
idivl
push
jl
push
mov
pop
jl
dec
nop
fs
mov
fnsave
sub
bound
jnp
cwtl
ror
aaa
stc
ja
in
or
lahf
add
into
cmp
inc
fs
int3
and
int3
pop
and
mov
xchg
xor
iret
cmp
in
fimull
pop
sub
ss
mov
popa
clc
scas
lea
mov
add
jne
arpl
jge
inc
test
adcl
cmovbe
push
mov
add
jne
jl
gs
mov
xchg
pop
xor
dec
rolb
sub
test
jne
stos
and
into
fmuls
gs
jb
sarl
mov
mov
in
aas
push
inc
out
pop
out
test
sub
daa
rorb
push
add
xor
jo
pop
in
cmp
cmp
nop
cmpsb
mov
loope
or
sbb
sub
fs
xchg
ss
in
stos
dec
pop
xor
arpl
data16
xlat
jle
pop
in
jns
popa
int3
sbb
out
mov
aaa
mov
roll
mov
pushf
imul
jmp
nop
sub
mov
sub
sub
sbb
lret
mov
fs
test
mov
mov
notl
mov
mov
std
movsb
nop
out
or
cmpsb
shlb
iret
sbb
mov
mov
es
xor
jne
popf
xor
dec
in
lods
inc
xchg
adc
sti
lcall
mov
mov
push
or
pop
mov
in
nop
aad
insl
push
mov
hlt
fistl
dec
push
jne
xchg
cmp
je
rcr
ret
pop
add
in
cwtl
ficompl
lcall
xchg
daa
sahf
popf
mov
jae
push
fs
imulb
fwait
adc
or
lods
add
sub
add
roll
nop
jnp
xor
pop
outsb
add
into
cld
mov
add
in
pop
xlat
mov
xor
xlat
repz
xchg
adc
out
pop
insb
and
repnz
add
sbb
outsb
lds
in
inc
mov
rol
pushf
push
pop
mov
roll
jmp
insl
dec
bound
mov
cmp
rcrl
aad
add
xor
inc
sahf
push
xor
test
dec
pop
adc
dec
mov
shl
dec
lock
test
mov
stos
jno
mov
hlt
lret
dec
fbstp
fbld
add
push
js
push
fbstp
aam
iret
movsb
icebp
push
stos
test
adc
nop
mov
subl
ficomps
sub
ret
out
icebp
fs
cmp
rcrl
out
cld
sarl
mov
sub
arpl
ret
lahf
cmp
add
jb
gs
int3
imul
loopne
lahf
lods
jl
jo
int
inc
arpl
cmpsb
xor
push
pop
mov
incl
lret
sbb
addl
dec
inc
adc
stc
imul
das
sub
je
jmp
mov
mov
test
cmc
or
cmp
push
sbbb
push
xchg
push
and
call
inc
xchg
addr16
aas
popf
stos
jo
mov
shll
es
repnz
sub
icebp
repnz
push
sti
movsl
aaa
add
mov
int3
pop
inc
push
ss
bound
loop
in
out
push
fldl
pop
push
cs
mov
rcrb
inc
xlat
stc
ss
sub
xchg
mov
xchg
mov
xchg
sub
mov
negl
inc
cmc
inc
negb
pop
jle
les
sbb
enter
lret
cli
outsl
pop
xor
jg
jecxz
cmp
jns
dec
sarl
cltd
xor
dec
iret
in
jno
add
mov
sub
dec
loop
rcll
rolb
and
sub
out
mov
or
movsb
sub
cmc
pop
enter
rcrl
lea
add
repnz
fsubrs
mov
and
jle
adc
mov
shlb
mov
mov
std
xchg
xchg
add
imull
ds
jmp
das
xor
cli
xchg
pop
mov
jae
fcmovne
jns
loop
jbe
push
addr16
cmpsl
add
loop
lcall
cwtl
stos
sbbb
aam
lcall
jb
inc
loop
shr
pop
sub
push
sub
je
inc
sbb
inc
test
mov
dec
cmpsb
cmp
push
les
leave
std
cltd
xchg
or
cs
es
into
sbb
icebp
aam
clc
mov
dec
outsb
arpl
dec
test
test
lcall
pop
data16
aaa
pop
xlat
sbb
dec
sbb
repz
arpl
and
xchg
lret
lret
aaa
and
sbb
or
dec
stos
pop
cmc
push
fdivrl
clc
insb
or
jle
nop
xchg
mov
in
aam
mov
push
loope
xchg
cmpsl
jae
mov
xchg
mov
jo
div
sbb
sub
js
movsl
add
lahf
sub
mov
notb
popa
js
arpl
fdivrs
fnstenv
cmc
shrb
cmp
pop
and
movsb
push
bndldx
pop
mov
pop
dec
add
pusha
jno
push
push
inc
mov
mov
leave
or
mov
push
lcall
mulb
insb
loope
je
int3
dec
daa
xorb
enter
aaa
pushw
cwtl
pop
or
push
mov
mov
in
mov
iret
pop
pop
push
fsubs
dec
xlat
push
shl
hlt
fdivl
sbb
sub
lahf
dec
xchg
xor
jg
add
push
aaa
insb
push
aam
and
sub
push
out
xor
lcall
push
gs
ret
mov
or
mov
add
cmp
repnz
ljmp
imul
cmp
mov
ret
jge
jae
cmpsb
sub
fcoml
test
inc
or
cmp
fxch
add
out
addr16
xor
cmc
mov
sbb
loope
mov
jmp
adcl
and
adc
jecxz
ja
cld
lcall
pop
clc
dec
je
lock
mov
call
cmp
dec
add
add
popa
push
or
orb
jl
enter
enter
fcomi
pop
or
mov
shrl
xchg
ds
mov
sarl
mov
add
movsl
sub
jmp
and
pop
mulb
add
adc
xchg
addb
xchg
xor
fs
inc
sbb
ret
sbb
dec
or
sbb
mov
lds
or
push
sahf
cmpsb
add
addr16
xlat
std
or
or
cs
ds
jecxz
add
pop
aaa
dec
cmp
mov
scas
std
xchg
and
adcb
in
das
or
jbe
lret
cmp
adc
lahf
push
sbb
addl
pop
negl
cmp
inc
xor
mov
mov
xor
stos
lahf
inc
in
inc
sti
mov
loopne
or
adc
in
mov
movsb
clc
push
cld
lcall
and
popf
mov
jp
xchg
sbbb
xor
push
sbb
daa
jecxz
cmp
scas
icebp
pop
jecxz
and
incb
inc
lcall
and
js
adc
jg
push
mov
inc
push
fadds
frstor
loopne
add
dec
test
xor
fs
int
mov
gs
lahf
xor
rolb
sbbl
push
mov
xchg
sub
imul
dec
loopne
push
sub
nop
cmp
mov
jno
shrb
ss
imull
out
and
mov
inc
sub
fidivl
sti
shl
test
xor
punpcklwd
sbb
stc
cmp
sti
jl
jns
mov
lock
int
das
cmp
fsts
test
mov
lds
daa
mov
dec
xor
aam
fiadds
adc
data16
dec
xor
lahf
inc
push
notl
inc
or
lods
sub
movsl
mov
aaa
sti
and
adc
mov
push
pop
mov
pop
imul
aad
mov
or
iret
cmc
push
es
and
sbb
outsb
lss
push
fists
xchg
cmp
mov
addr16
popf
pop
out
daa
out
test
sbb
push
jns
mov
js
imul
movsb
andl
pop
xchg
ljmp
and
jno
int
pop
clc
out
sbb
adc
xor
icebp
cmp
mov
dec
jmp
mov
add
mov
fidivs
pop
bound
es
out
push
rcrb
mov
imul
sti
inc
bound
and
mov
mull
out
sbb
mov
test
out
loop
cmpl
push
cmp
bound
and
dec
sbb
or
sahf
cmc
and
and
lods
enter
adc
push
or
xchg
sbb
lret
xlat
push
daa
outsb
jecxz
repz
scas
stc
pop
push
out
andb
aam
push
push
push
mov
mov
mov
xlat
neg
scas
dec
in
icebp
cmp
adc
pop
push
in
cmp
orl
or
sub
out
jp
jl
adcl
adc
movsb
xchg
mov
movsb
cmp
jp
cmp
and
aam
mov
pop
ret
repz
jle
lahf
imul
dec
and
inc
jb
inc
pop
in
sub
dec
xor
pop
stos
les
rcrb
ljmp
outsl
or
cmp
push
add
leave
xlat
daa
call
mov
cmpsb
xor
xor
mov
divb
pop
push
push
rorb
pushf
xchg
xchg
inc
lret
mov
xchg
imul
cmc
aas
pushf
push
adc
xchg
fsubrl
push
mov
jecxz
icebp
es
lods
call
push
mov
push
or
into
mov
aam
push
iret
jmp
js
xchg
or
pop
lock
push
movsb
adc
xchg
out
int
jl
sbb
cmp
or
icebp
push
mov
test
test
push
pop
test
stc
push
in
sub
sbb
and
mov
fs
loope
out
sbb
ss
inc
aad
lret
jle
andl
or
cmp
mov
and
sub
loopne
mov
mov
xchg
nop
in
mov
add
xorb
sbb
inc
pop
call
in
shrl
out
add
cwtl
js
add
jae
mov
add
mov
adc
outsb
arpl
jl
in
pop
imul
lahf
jno
loopne
mov
add
and
iret
mov
clc
arpl
xchg
sbb
or
stos
aaa
aam
jp
fists
push
add
js
test
daa
xchg
adc
add
push
stos
pop
fs
push
or
lods
arpl
add
jno
decl
inc
adc
inc
cs
in
push
rcll
dec
loopne
stos
fs
cmpsb
inc
arpl
fldl2e
lds
mov
inc
daa
and
dec
sub
data16
test
shl
insl
arpl
mov
loope
sub
popf
lds
icebp
shll
pop
lahf
repz
inc
and
sbb
mov
inc
lods
jle
das
jge
fsubs
ret
insl
xchg
fidivrs
pop
test
pusha
add
add
xchg
pop
and
addb
mov
mov
pop
push
push
in
insb
xchg
jns
lcall
jbe
repz
push
and
fs
dec
or
xor
push
mov
xlat
jmp
jae
pop
cld
push
cmc
xor
mov
jb
or
stc
loopne
stos
call
lret
jnp
add
push
adc
and
nop
sub
jb
or
sub
notb
insl
aaa
lea
lds
push
sub
pop
ja
or
add
xlat
sbb
xchg
in
sahf
xor
mov
mov
pop
push
sub
fs
adc
push
cmpl
add
xchg
push
sbb
inc
adc
js
adc
scas
pop
jp
sub
pop
jns
mov
jg
jecxz
sub
sub
sbb
cmp
imul
data16
pop
cmp
pop
shll
add
push
push
and
push
ret
stos
or
outsb
ds
push
sbb
repz
jne
mov
leave
outsl
adc
lds
dec
notb
aad
subb
stos
sbb
ret
ret
inc
fdiv
mulb
sub
fdivl
mov
cli
loop
rcrl
lret
fcmovb
fs
js
popf
sbb
daa
xchg
cmp
xor
push
adc
test
pop
add
ds
sahf
out
pop
lock
stos
test
cmp
inc
movsb
jecxz
pop
adc
out
loop
mov
jecxz
fsubp
js
dec
push
add
iret
xlat
dec
jecxz
sti
and
mov
pop
jp
and
lret
idivl
ret
jbe
sbb
push
jne
bound
jb
push
push
inc
add
xor
mov
or
sarb
test
lods
inc
adc
mov
xchg
mov
sbb
xchg
xor
or
pop
mov
jecxz
push
push
std
mov
or
arpl
sbb
dec
mov
mov
in
inc
pop
cmp
cmp
inc
lock
cmpsl
push
lret
inc
in
sub
sbb
pop
jns
out
mov
loope
dec
pushf
daa
cmp
mov
xor
xor
in
std
add
fxtract
scas
aad
stc
fistps
scas
xor
sub
fwait
rclb
scas
pusha
popf
loopne
mov
sbb
lds
mov
test
sub
ret
inc
arpl
xchg
subl
mov
mov
jmp
jge
and
mov
stos
rol
leave
shrb
lock
xchg
dec
iret
addr16
jne
int
mov
shrl
xor
lods
adc
out
sub
addl
push
cmp
jbe
scas
push
stos
pop
leave
dec
mov
loopne
jnp
divb
dec
push
movsb
xchg
aad
mov
mov
scas
dec
iret
lock
in
lock
lods
jns
or
sbb
pop
hlt
dec
jne
inc
jmp
mov
and
call
mov
sbb
movsl
jmp
mov
mov
push
cs
mov
push
mov
mov
xorl
push
push
ret
ljmp
fucompp
fs
xor
test
mov
in
sahf
xchg
jp
fisubrl
pop
loope
ss
xchg
pop
imul
aas
inc
mov
pop
and
adc
dec
in
daa
mov
test
int3
adc
std
push
pop
cmp
xchg
mov
pop
call
les
movsb
cmpl
andl
cmpsl
out
mov
adc
dec
clc
push
movsl
sub
pop
popf
lcall
je
shrl
push
pop
push
or
mov
ss
ds
hlt
out
mov
mov
jge
fs
in
ja
jo
mov
sbb
cmp
pop
jle
arpl
sub
jg
mov
mov
gs
xchg
ja
push
bound
mov
enter
adc
jp
repz
mov
jb
aaa
jp
imul
daa
mov
cmp
addl
cs
push
push
mov
or
xor
shrl
inc
lcall
push
xor
adc
push
jbe
in
sub
insl
sbb
mov
imul
cli
mov
je
fisubl
xchg
les
test
pop
mov
or
mov
mov
add
push
imul
jae
lret
xchg
outsb
or
mov
mov
stos
adc
lea
xor
cmpb
mov
fidivl
mov
or
or
out
fsubr
out
add
fcoml
loop
jmp
aaa
adc
lret
add
xor
push
mov
dec
pop
les
fxch
ret
adc
or
cld
xchg
xor
pop
push
sbb
mov
sub
sbb
inc
in
xchg
scas
out
push
mov
adc
inc
loope
mov
and
pop
jl
push
and
jbe
cltd
xchg
push
rcrb
repz
test
jl
lods
popa
mov
inc
out
aas
sbb
inc
arpl
xchg
inc
xor
sbb
aam
scas
jecxz
in
movsl
xor
mov
sub
ljmp
testl
jae
mov
jmp
pop
jle
sbb
hlt
sbb
scas
iret
nop
xor
cli
loop
pop
xchg
out
jns
sahf
dec
sub
or
fildll
mov
fs
cmp
in
mov
xchg
mov
cwtl
pop
cmp
adc
or
push
adc
fidivrs
pop
aam
push
inc
movsl
into
fmull
pop
xor
notb
push
mov
jb
movsb
cmp
xchg
outsl
nop
dec
mov
mov
lahf
mov
outsb
jo
and
fstpl
sbb
lahf
imull
xchg
sbb
ret
in
popf
xchg
enter
sbb
std
mul
jge
or
sbb
fisttpl
adc
call
jne
test
std
or
int
repz
movsb
xor
sub
jp
xchg
mov
push
sbb
in
aaa
push
dec
push
jmp
jno
jp
out
repz
adc
push
xor
add
add
xchg
mov
lret
adcb
push
jnp
and
add
mov
cmp
jbe
loopne
mov
popf
mov
or
push
pushf
push
cmovp
es
shll
xchg
xor
icebp
mov
mov
fimuls
xchg
cmc
js
icebp
test
mov
add
jmp
subb
loop
and
xor
in
sbb
mov
sub
cmpsl
out
imul
aaa
xchg
shll
ss
xor
in
add
dec
push
shlb
mov
addb
cmp
hlt
in
mov
and
add
mov
cmp
sub
insb
mov
cmpsl
and
out
pushf
inc
stos
cld
xchg
out
sbb
mov
fnstsw
mov
aam
inc
test
aas
ss
inc
cs
xlat
add
lea
lcall
test
fidivl
lock
push
fucom
imull
mov
ret
jp
test
cmc
adc
xchg
stos
add
xchg
lcall
mov
gs
xor
popf
shrl
mov
push
inc
xchg
mov
cmpsl
test
push
imul
cmp
out
and
sti
jecxz
sub
je
xor
pop
fs
mov
idivl
ja
shl
mov
push
lret
mov
lods
or
mov
and
dec
pop
mov
rcll
jae
inc
lods
stos
or
add
arpl
inc
out
rcrl
test
pop
in
movaps
cmp
aam
jl
jmp
loop
cmp
xor
mov
std
jbe
enter
push
mov
lret
sbb
adc
cli
shlb
and
icebp
data16
xchg
mov
popa
fdivrs
sbb
adc
mov
xchg
pop
aam
shll
subb
pop
rolb
cld
mov
lea
pushf
sbb
loopne
sbb
dec
jae
sbb
mov
out
dec
repnz
cmp
cmpsb
sub
sub
mov
jne
jbe
mov
cmp
cmp
pop
stos
imul
fdivl
imul
lea
mov
loope
mov
cmc
mov
jne
sub
adc
sub
dec
pop
push
xchg
enter
pop
xchg
fcomip
pop
addr16
rcrl
cld
mov
fistps
movsl
cmp
xor
lds
movb
push
hlt
inc
outsb
dec
jo
pusha
xchg
dec
sub
jge
fisttps
sbb
jecxz
inc
push
ss
push
rcr
pop
mov
cmpsb
cs
mov
das
jo
inc
dec
add
xor
and
les
lret
sti
cmp
sbb
mov
bound
fnstcw
cmp
xlat
outsb
mov
lock
dec
dec
pop
andl
insb
nop
adc
or
sahf
xor
cld
iret
inc
fisubrs
dec
fsubl
jo
lock
dec
mov
imul
insl
mov
mov
push
lcall
sbb
mov
push
repz
lds
mov
rorl
jmp
mov
fwait
sbb
sbb
add
int3
fcmove
xchg
and
mov
inc
adc
iret
rorl
xor
adc
in
loop
lods
cmp
scas
pop
insl
adc
cmpsb
scas
adc
and
xor
dec
mov
push
out
adc
stos
repz
movsb
int3
mov
aaa
push
inc
xor
bound
or
lods
insl
push
mov
pop
pop
fbld
inc
xchg
clc
aaa
out
imul
mov
lahf
and
mov
pop
mov
sahf
cmc
mov
sahf
xor
cmc
sarb
pop
sbb
jge
mov
mov
add
scas
sarb
orb
jp
xchg
add
es
and
loopne
sbb
js
cld
ret
xchg
pop
and
push
sti
pop
das
fcoms
imul
in
push
pop
add
repz
outsl
jns
loope
or
dec
jle
cmp
imul
mov
push
and
jo
cmc
add
sub
pop
jno
call
push
stc
adc
dec
xchg
fmuls
and
lock
out
pop
and
je
cmpsl
dec
and
mov
lods
lock
jbe
les
fidivrl
dec
ret
sub
inc
mov
push
jne
xchg
jno
jns
dec
jmp
pop
gs
mov
test
test
mov
movsb
sub
dec
adc
fidivl
pop
add
subb
cmp
sbb
test
pop
in
outsl
jmp
push
mov
sti
adc
cli
lret
sub
xchg
fidivs
push
adc
pusha
jp
mov
imul
test
fisubrl
cs
out
adc
mov
mov
fadds
and
fisttpll
dec
push
xor
jnp
inc
sbb
dec
data16
repz
mov
sub
pop
aad
xchg
cmp
sti
movsl
insb
add
or
jp
cmp
outsl
lock
and
pop
lock
aas
xor
cmpsl
stos
cmp
nop
test
mov
dec
addr16
imul
pushf
adc
mov
jb
movsb
out
out
gs
inc
out
push
mov
push
jb
or
fsubrl
stos
mov
not
add
nop
mov
bound
negb
add
movsb
push
imul
xor
sbb
cmp
movsl
xchg
sbb
inc
jae
rcrb
frstor
pop
pop
ljmp
addr16
sbb
xlat
xchg
cmp
test
jecxz
loop
pop
fldcw
or
push
dec
push
fsubrs
fisubrl
rcrb
mov
sub
push
push
movsb
mov
pop
jp
popa
lods
jnp
andb
pop
sahf
ja
sbb
pop
xor
and
out
push
pop
lock
arpl
testl
lcall
lds
les
cmpsl
adc
pop
loope
cli
sub
xorl
pop
and
outsb
pop
insb
push
cmpsb
push
jb
mov
pop
je
mov
sub
mov
scas
clc
mov
pop
and
pop
dec
xchg
add
sub
mov
clc
shrb
or
pop
dec
cmp
ja
ljmp
adc
inc
lahf
adc
scas
pop
sub
push
xchg
mov
rcrb
rcrl
mov
mov
lea
jno
jg
cwtl
pusha
xchg
cmp
xor
pop
repnz
push
divl
mov
push
daa
mov
repz
dec
adc
movsl
jns
imul
dec
xchg
pop
mov
push
in
mov
or
lcall
mov
mov
cmovb
stos
mov
xchg
add
call
dec
pop
mov
push
data16
sbb
mov
jmp
xchg
sbb
push
out
aas
shlb
dec
xchg
xchg
rcrl
es
fdivrs
lds
stc
loopne
in
push
inc
sarl
dec
xchg
rolb
xor
pop
je
push
subl
jp
xchg
out
dec
add
sbb
or
mov
sub
movsl
dec
dec
testb
adc
outsl
jge
xchg
jle
adc
aas
fwait
push
xor
add
adc
mov
dec
push
insl
jl
mov
vrsqrtss
aaa
jns
loopne
pop
es
cmp
mov
andl
stos
ret
xchg
icebp
xchg
mov
jge
mov
and
out
xchg
add
daa
sbb
jne
cmp
imull
lret
repnz
or
push
pushf
int3
das
inc
mov
sbb
addr16
cmp
push
sbb
shll
loope
out
xor
dec
mov
mov
dec
cs
out
aam
mov
xchg
jb
addr16
xchg
sbb
nop
inc
stos
fs
mov
xchg
dec
jmp
insl
xchg
push
bound
addr16
adc
das
xchg
out
dec
fwait
icebp
dec
lods
inc
xor
rcrb
jbe
mov
fmul
shr
jbe
mov
xchg
jb
lods
sub
bound
sub
mov
xchg
repz
sub
aas
mov
repz
xchg
ret
sti
subb
pop
sahf
mov
das
sbb
inc
sbb
add
test
es
lods
inc
in
push
repnz
and
ss
shl
repnz
cmp
jg
rorl
mov
add
jnp
push
or
incb
fmuls
packsswb
xor
mov
adc
les
fdivr
or
rcrb
popa
or
and
add
adc
adc
mov
aad
insb
inc
and
fisubs
pop
and
inc
rorl
inc
pusha
cwtl
pushf
dec
inc
sbbl
push
xlat
cmp
jb
movsl
pop
cmc
in
jno
adc
sti
test
dec
inc
lcall
adc
jmp
leave
scas
inc
sti
jo
push
xchg
faddl
inc
fstpl
popf
cmp
jg
lret
jae
push
dec
pushf
lock
jl
repz
pusha
ss
sbbl
adcl
jle
mov
and
inc
pop
in
fldenv
rclb
in
adc
cmp
mov
sbb
fidivrs
adc
out
sti
push
mov
mov
pusha
jb
dec
pop
pushf
sbb
hlt
jnp
inc
and
dec
sti
or
mov
aad
ficomps
hlt
add
jnp
lret
dec
iret
int
in
mov
shlb
xor
adc
push
mov
std
loop
jmp
add
cmp
aad
cmp
jl
pop
icebp
cmp
inc
dec
adc
jecxz
xor
inc
sub
jne
add
push
outsb
popa
incb
test
loopne
or
scas
xchg
mov
push
fadds
adc
les
pop
out
fisttpl
mov
and
pop
loope
cmp
mov
push
mov
loope
sbb
adc
push
loop
lcall
adc
scas
push
xchg
fcmove
jb
in
cld
loopne
iret
data16
jge
fisubl
push
jmp
xor
adc
cmp
pop
sbb
dec
dec
gs
cmp
push
enter
sbb
sbb
push
fdivl
mov
adc
xchg
stos
das
movb
dec
gs
iret
push
mov
shll
adc
or
mov
or
push
or
jge
stc
js
inc
in
lea
sub
add
mov
ret
fnsave
lea
jb
push
mov
and
popf
pop
shr
dec
idivl
out
jne
inc
mov
movsl
in
das
pushf
data16
sbb
and
mov
out
and
add
std
pushf
scas
and
mov
aaa
lea
inc
aad
je
aas
push
mov
mov
inc
sbb
es
inc
int3
add
sub
mov
clc
pop
ror
push
test
jne
inc
fstpt
fcomps
jmp
icebp
sahf
outsl
fidivrl
aad
jmp
lcall
fmull
rorl
dec
fsubrs
mov
test
repz
lock
lret
insb
xchg
scas
popf
in
adcb
mov
sahf
or
test
loopne
jne
shl
push
xchg
pop
sahf
in
rcrb
xor
lods
dec
into
xor
push
xchg
mov
push
or
sbb
in
stc
test
mov
ja
stos
neg
pusha
xchg
test
int
or
jp
cmp
imul
loope
cmpsl
enter
xlat
mov
add
dec
shr
sbb
and
mov
test
mov
cli
push
inc
mov
and
inc
scas
stos
stc
add
push
sbb
xchg
add
imul
arpl
push
stc
imul
iret
or
push
in
loopne
mov
push
es
mov
xorl
stos
sub
pop
loopne
or
mov
out
inc
inc
pusha
cmpsl
mov
lods
les
push
xchg
sub
call
mov
mov
mov
pop
divl
test
hlt
lods
add
or
cld
jns
in
pusha
sbb
pop
lock
sbb
in
nop
js
into
dec
push
adc
push
adc
mov
push
jae
xchg
sbb
xorl
mov
iret
data16
mov
test
add
xor
xor
mov
pop
in
mov
pop
inc
imul
xchg
cmp
movsb
mov
fisubrs
ret
sbb
scas
roll
push
jns
and
addl
mov
sbbl
out
negb
mov
push
inc
testl
or
mov
enter
cmc
in
mov
or
js
lock
or
adc
dec
loope
stc
cmp
andl
xchg
pop
inc
inc
or
adc
xrelease
xor
aam
lret
xlat
aas
xchg
in
mov
cmp
xchg
int3
pop
adc
ja
ds
movsb
mov
dec
push
lock
sub
gs
dec
add
rclb
lcall
insl
lock
imul
out
inc
loopne
mov
lock
add
test
add
sbbl
and
fstpl
leave
sub
xchg
sub
insb
cmp
sub
xlat
ljmp
mov
loopne
sub
jmp
push
jmp
or
inc
add
out
dec
jmp
bt
or
push
out
sub
mov
pop
mov
cs
pop
or
push
out
in
daa
sbb
xlat
and
xchg
or
dec
mov
es
adc
lret
divl
push
stc
sbb
mov
jb,pt
stc
add
repz
dec
loopne
push
test
pop
mov
mov
cmp
icebp
call
push
sti
popl
into
or
adc
add
repnz
push
lods
fldt
out
add
movsb
xor
scas
mov
xlat
into
ss
xlat
push
mov
jp
adc
fadds
movb
push
push
xchg
mov
dec
jg
int
test
ret
sub
scas
imul
pushf
sti
pop
mov
iret
shrl
jbe
lds
stos
orb
outsb
mov
mov
je
subb
popa
adcl
enter
xchg
jp
pushf
clc
sbb
in
aad
sbb
mov
lret
dec
fisttps
cli
xchg
inc
add
movsl
cmp
shrl
sub
cmpsl
je
dec
xor
fs
pop
cmp
mov
mov
mov
aad
lcall
and
sbb
inc
xchg
sub
imul
jnp
out
rcrl
pop
mov
fmull
push
pop
or
push
in
bnd
push
jb
push
test
push
add
add
movsb
cmp
mov
test
pop
outsb
jl
mov
mov
jne
lock
push
loopne
fdiv
sbbl
stos
fidivs
push
dec
lcall
cld
mov
and
js
push
mov
popa
dec
paddq
das
push
imul
xchg
jae
mov
add
adc
or
xchg
mov
adc
inc
dec
into
sti
lcall
or
sub
xchg
je
fwait
jge
ret
jp
pop
fwait
cmpsb
fnstsw
scas
mov
mov
popa
cs
repnz
repnz
scas
push
shll
inc
mov
sub
pop
sub
jne
loopne
loop
cmp
mov
pushf
push
add
jns
dec
push
xor
popf
push
jbe
call
ret
ss
into
shrl
ja
cltd
jge
insl
in
fisttps
out
inc
sbb
cltd
adc
aaa
xchg
sub
fdivl
lds
mov
test
xchg
push
aaa
into
dec
xchg
sbb
fwait
out
int3
pop
mov
push
jmp
inc
mov
mov
mov
mov
loope
das
std
xchg
popa
or
cmp
mov
std
xchg
stc
frstor
mov
adc
inc
inc
std
xchg
ja
movsl
cmp
stos
repnz
push
dec
loop
dec
std
xchg
test
movsb
cmp
js
mov
addr16
xchg
lret
cmp
push
icebp
xchg
gs
and
jns
xor
push
hlt
ja
test
imul
mov
fisttpll
push
test
and
push
jmp
mov
inc
pushl
es
gs
in
sbb
mov
sbb
iret
fisubrs
mov
imul
xlat
cltd
fs
xchg
dec
dec
ds
and
sbb
roll
enter
xor
and
in
sbb
dec
xor
cmc
icebp
mov
stos
out
push
push
xlat
xchg
inc
mov
loope
mov
lea
mov
scas
sarb
mov
mov
rclb
adcl
insl
mov
and
mov
enter
stc
icebp
cld
mov
hlt
shlb
cmpsb
xor
movsl
cmp
cmp
lds
or
jae
pop
stos
inc
mov
pusha
call
xor
push
jl
addr16
xchg
mov
and
mov
bound
cmp
imul
sbbl
in
and
fstps
cmp
sub
push
mov
clc
or
dec
fnstenv
xchg
add
cs
hlt
add
insl
mov
fs
fld
sub
xor
das
inc
repnz
lret
or
add
push
sbb
mov
dec
stos
fmulp
cwtl
pushw
pop
sub
loop
sbb
insl
xor
orl
xlat
push
xchg
aas
shll
shrl
sub
in
adc
outsb
mov
fsubrs
mov
test
dec
push
push
jae
add
dec
adc
xor
dec
cmp
imulb
xor
sbb
cwtl
jae
add
cmp
and
cmp
cmpsb
xchg
push
cltd
dec
xchg
insb
inc
jbe
fisubl
popf
ja
outsw
insb
add
add
das
mov
mov
jecxz
les
push
xlat
pop
xor
scas
pop
flds
push
call
je
push
movsb
or
cmpsb
addr16
pop
fs
or
mov
dec
add
dec
push
lea
jns
pop
outsb
mov
incl
scas
inc
inc
push
fcomps
push
xor
inc
mov
lcall
scas
mov
mov
sub
sbb
fwait
int
push
mov
dec
sbb
jo
mov
jg
jno
mov
mov
fdivrl
jge
int3
xor
sbb
sub
ds
lret
repnz
ljmp
and
jnp
lret
test
and
je
arpl
xor
cmp
rcrb
jbe
les
scas
ficompl
mov
hlt
mov
test
jl
cmp
insl
cmpsb
cli
sbb
sbb
mov
or
leave
scas
sbb
fistl
out
cmpl
mov
or
cmp
push
push
mov
testb
hlt
fst
cmp
lock
mov
dec
pop
movq
stos
in
pop
arpl
popf
dec
push
shll
decb
dec
jle
cmc
nop
out
cwtl
rolb
jno
jl
fildll
sahf
push
fcompl
cmp
call
sbb
dec
jp
xor
fisubrs
popa
shl
cltd
test
repnz
cmc
lret
push
outsb
pop
adc
cwtl
add
push
aas
in
lea
cli
insb
repz
popa
into
fcoml
je
scas
lods
xchg
mov
int
cmp
inc
and
sbb
push
push
lret
adc
mov
popf
aas
push
lods
jo
in
ret
pop
mov
leave
loopne
lahf
mov
mov
push
icebp
ss
jae
xchg
xor
out
add
sbb
hlt
xchg
ret
mov
dec
insb
xor
jno
jle
cwtl
mov
ret
mov
pop
pop
adc
lret
scas
out
mov
add
add
loope
dec
sbb
test
mov
out
pushf
sub
sarb
or
or
into
jle
out
add
dec
int
jmp
dec
std
movsb
rclb
adc
pop
fbstp
mov
jl
aam
adc
jbe
dec
loopne
fldl
inc
jno
ljmp
orl
shll
mov
pop
jmp
enter
push
leave
pusha
ljmp
stos
mov
popa
fcomi
lahf
repnz
and
loop
add
test
and
jno
or
sbbl
inc
in
decb
inc
lock
xor
cmpsb
push
outsb
fninit
nop
daa
adc
ljmp
add
cmp
inc
sbb
js
sub
mov
int
sub
or
mov
mov
iret
subb
sub
jno
mov
out
inc
dec
push
pop
ror
cmpl
fcmovu
mov
movsb
lods
je
int
into
jl
fdivrl
jbe
mov
out
das
add
clc
mov
out
or
jmp
clc
leave
dec
dec
pop
xor
dec
mov
and
push
push
mov
cs
iret
pop
inc
sar
je
in
test
fdiv
jecxz
aas
shrl
sub
sub
push
dec
push
sbb
mov
ret
and
iret
insl
call
int
adc
bound
sbb
pop
push
cltd
cmp
mov
repz
mov
dec
xor
xor
rcrb
mov
xchg
sbb
mov
pop
fldenv
lret
popa
sbb
je
aad
call
sti
sub
mov
cmp
adcb
leave
xlat
xchg
xor
cmp
stos
xchg
xor
outsb
icebp
movsl
cmp
or
push
repnz
xor
dec
mov
cwtl
ss
sbb
cmp
cmp
out
pop
test
lods
scas
xchg
xor
xchg
or
mov
cmp
in
repnz
gs
mov
mov
add
inc
fstpl
cli
xchg
jnp
test
xchg
out
xchg
insl
inc
fildll
sbb
sarl
lea
cmp
loopne
sarb
xchg
sub
pop
rorb
aad
mov
and
mov
sahf
jmp
mov
sub
jg
stos
mov
das
or
cld
or
push
xchg
xor
add
lock
xlat
sbb
dec
test
jge
inc
out
ds
test
sbbb
xor
shrb
mov
decb
in
and
in
xor
mov
cli
stos
stos
mov
pop
sbb
jo
repnz
arpl
clc
sbb
es
jb
or
int3
cmp
gs
loope
inc
fisttpll
mov
sti
lds
repz
xchg
jnp
jb
fidivs
mov
mov
lret
dec
adc
out
mov
jg
loope
div
mov
movsb
jle
cltd
jae
cmp
subb
or
mov
mov
repnz
daa
mov
lret
test
fwait
pop
nop
mov
dec
pop
and
icebp
sbb
iret
fstpt
push
sub
sub
cmc
pop
mov
dec
sbb
mov
insb
mov
test
movsb
mov
fsubl
inc
push
add
cmp
dec
sbb
mov
pop
fwait
lret
test
sbb
xchg
jno
loope
xchg
or
mov
mov
aam
mov
in
mov
fst
mov
arpl
cmp
push
test
dec
cmp
cvtps2pi
scas
in
fisttps
iret
decb
xchg
mov
fistpl
subl
sarl
adc
mov
test
pop
into
lods
and
test
mov
cmpl
or
xor
subl
mov
adc
push
xor
mov
pop
cmpsl
insl
stc
out
lock
in
jae
dec
jnp
mov
cmp
jl
lret
mov
insl
out
jle
xchg
mov
mov
xchg
jo
clc
mov
dec
mov
and
dec
insl
movsb
mov
push
pusha
and
cmp
pop
mov
dec
jecxz
shll
jnp
dec
rcl
xor
sub
xchg
mov
or
in
jmp
out
nop
jmp
outsb
or
out
inc
outsb
add
std
mov
mov
push
jmp
nop
adc
mov
movsb
mov
sti
lcall
clc
sbb
sarl
jne
inc
xlat
adcb
mov
sub
sahf
les
mov
es
outsb
in
inc
pop
imul
pop
lret
xchg
sar
inc
sub
out
or
movsl
stos
xchg
pusha
or
pop
ljmp
push
stos
fiaddl
jno
sbb
mov
bnd
or
sbb
es
sbb
insl
xchg
sahf
mov
repz
sbb
in
cmp
xchg
mov
push
cmp
and
pop
push
xchg
cmp
pushf
std
call
or
pusha
sarl
movsb
aad
orb
pop
push
fwait
pop
stos
pop
inc
inc
out
cmp
push
push
mov
dec
cli
rcll
fisubl
mov
pop
push
nop
xchg
mov
dec
jbe
push
arpl
pop
mov
add
mov
dec
jmp
mov
sub
dec
xlat
sbbb
sub
call
jb
imul
xchg
mov
sahf
push
cmc
adc
fs
pop
mov
rorb
or
mov
sub
sub
ror
bound
adc
mov
scas
je
pop
dec
cmpsb
lock
out
test
xor
fnstsw
push
out
cltd
lahf
lret
addr16
cmp
ds
mov
xor
or
and
outsb
arpl
xchg
inc
push
inc
jmp
sbb
sub
jnp
movsb
cs
jb
jge
jp
sub
jne
fdivrl
outsb
in
int3
iret
lcall
clc
and
jl
sub
nop
and
jo
aaa
mov
jg
cwtl
mov
andl
insb
int3
pop
adc
aad
es
fmuls
fs
out
fsts
lds
pop
divb
sarb
sub
sbb
lods
push
adc
inc
push
pop
push
test
ljmp
or
stc
inc
pop
rclb
int3
sub
sbb
test
sbb
les
or
or
mov
adc
dec
aam
xor
cmpsl
shll
imull
lahf
sahf
sbb
inc
ds
fwait
gs
xchg
shll
ficoms
rcrb
into
mov
out
insb
lods
jno
bound
divb
cmp
or
mov
push
and
cmp
sub
ss
cmp
xlat
lcall
add
add
push
add
cmp
push
lahf
push
je
icebp
aas
inc
lods
jo
xchg
pop
dec
dec
lods
mov
lods
daa
jmp
xor
adc
sbb
cwtl
jb
leave
cmp
insb
les
int
fwait
test
ja
push
daa
out
test
mov
in
rclb
adc
outsb
or
rcll
shlb
mov
fcmovne
add
jmp
cli
mov
cltd
cs
sahf
push
jle
dec
xor
bound
mov
pop
popa
dec
jecxz
inc
scas
add
jo
push
mov
lds
mov
push
add
leave
sub
cmpsl
rclb
pop
xchg
mov
xor
inc
pop
mov
iret
xor
dec
mov
sub
jge
js
mov
inc
cmpl
inc
mov
fcompp
and
xchg
or
scas
or
add
mov
icebp
xor
std
pop
stos
add
test
xor
sbb
xchg
mov
xlat
repz
mov
sarl
jecxz
repnz
outsl
jmp
rclb
das
test
xchg
lar
xchg
and
xor
inc
bndstx
in
sbb
cli
xchg
adc
out
ljmp
cmpb
pop
mov
addr16
cld
jne
inc
lahf
inc
fcoms
popf
or
mov
nop
xor
scas
mov
ret
inc
jmp
out
call
shlb
pop
lahf
sarl
mov
lret
adc
dec
cmp
leave
fidivl
mov
add
and
jbe
or
lcall
pop
inc
add
cmpsl
adc
ljmp
jno
into
push
add
inc
inc
and
fstps
pusha
add
jo
mov
loop
or
lods
ss
xor
mulb
inc
jne
mov
gs
sbb
cmp
inc
jno
insl
xchg
mov
add
add
pop
xchg
mov
bound
inc
or
and
push
dec
push
dec
loop
jns
stos
hlt
push
mov
ljmp
push
lods
mov
or
test
dec
pop
fs
add
inc
xor
ret
aad
mov
xchg
ret
rolb
add
mov
repz
ds
repz
xchg
decb
or
xor
loope
push
scas
push
inc
iret
test
icebp
andb
rcrb
pop
jb
call
into
mov
aam
pop
xchg
movsl
iret
in
cmc
jl
cld
jg
es
fnstsw
cmc
mov
and
sbb
cs
mov
fnstsw
mov
jmp
cs
jbe
or
pop
inc
inc
dec
fnsave
cltd
loope
aam
aaa
push
dec
mov
test
sub
mov
popf
pop
xchg
and
scas
cmpsl
pop
mov
inc
adc
movsb
ror
aam
fs
shll
das
les
scas
push
add
inc
fdivrp
cltd
pop
fsubs
pop
xor
dec
data16
in
lret
jb
cmp
inc
data16
adc
mov
data16
or
mov
pop
sbbl
xchg
bound
movsl
divl
fdivrs
pop
jle
ss
lods
iret
movsl
lock
adc
cmp
neg
push
aas
sub
jno
cmp
add
sbbl
add
mov
mov
insl
sti
jp
gs
lods
ret
xchg
xchg
sub
sub
and
in
jmp
and
inc
cmpl
mov
rdtsc
jo
subb
mov
xlat
repz
shl
adc
mov
cli
mov
adc
scas
lds
push
pop
test
lods
inc
lods
aas
data16
leave
sub
inc
lret
jns
cli
popf
xchg
js
fsubrs
movsb
xchg
add
test
cmp
push
imul
pushf
sub
xor
ljmp
cwtl
dec
testl
pusha
call
ds
scas
xchg
add
imul
jnp
xchg
sbb
dec
adc
mov
call
pusha
or
fldcw
outsb
pop
xchg
jnp
mov
mov
sub
jecxz
jb
fcos
or
jecxz
mov
dec
sub
shrb
adc
das
mov
xchg
scas
inc
ret
data16
test
outsb
jle
mov
rcrl
mov
push
xlat
mov
pop
das
jle
lods
cwtl
cmp
fs
mov
pop
cmc
mov
jno
outsl
cmp
mov
mov
mov
add
insb
insb
or
hlt
mov
xor
xchg
mov
clc
pop
hlt
sub
mov
ret
push
mov
sbb
dec
std
imul
insl
loopne
sbb
std
dec
out
cmpsb
in
test
cmp
nop
pop
into
shlb
scas
push
and
sbb
iret
js
jne
xchg
pop
stos
sahf
jle
dec
faddl
push
imul
aas
sbb
push
xor
sahf
clc
push
xor
arpl
lahf
outsl
mov
mov
dec
arpl
lods
repz
iret
jno
les
add
inc
sbb
mov
aam
xlat
aas
xchg
push
add
out
sub
psrld
loope
or
inc
cwtl
scas
adc
mov
adc
movb
jle
inc
pop
rcrb
mov
iret
xor
push
or
jle
lret
testl
cmpsl
add
and
roll
or
push
jb
or
or
dec
or
push
pop
push
adc
aaa
mov
out
cmp
mov
dec
loop
mov
loop
add
mov
in
mov
adc
xorb
push
call
das
pop
push
mov
pop
mov
fwait
shrb
loope
lcall
test
mov
push
xor
movsl
ret
pop
outsl
dec
jecxz
sbb
and
jb
adc
xchg
dec
lahf
mov
cmp
inc
int3
fsubrp
fs
pusha
into
nop
lea
xchg
sahf
adc
out
mov
lods
ljmp
inc
out
sub
dec
fsubrl
mov
push
and
fnsave
test
sub
inc
jb
notl
mov
lret
fdivrs
jno
in
adc
rolb
dec
filds
sbb
xchg
icebp
pop
lret
adc
rcrl
fs
call
pusha
mov
hlt
xchg
fwait
xchg
xchg
pusha
fidivl
repz
cld
mov
test
aaa
pop
cmc
cmp
inc
stos
lahf
daa
inc
cltd
pop
push
in
mov
data16
mov
add
push
mov
mov
iret
cs
jnp
mov
push
sbb
jle
js
fs
mov
aad
inc
pop
lock
loope
xor
mov
mov
mov
sub
les
jns
pop
imul
outsl
sub
xor
movsl
mov
adc
push
movb
daa
in
pop
sbb
push
mov
in
jbe
fnstenv
in
push
jno
aaa
incl
lea
rolb
iret
repz
lret
push
or
cmp
sub
push
xchg
ret
mov
sarb
mov
mov
cwtl
adc
mov
repz
into
inc
pop
or
cs
mov
lea
xchg
daa
repnz
mov
fwait
pop
insl
mov
push
sub
out
xchg
sahf
adc
xchg
movups
xchg
sahf
jecxz
push
out
scas
and
or
int3
xchg
bound
aad
pop
or
in
ja
pop
icebp
cld
test
mov
or
mov
into
js
mov
stos
or
dec
repnz
mov
cmpsb
lahf
mov
roll
fsubl
std
imul
call
movsb
fmull
call
mov
mov
cmc
pop
cmp
pop
outsl
ja
pop
testb
jp
jo
and
push
lcall
jmp
sbbl
dec
jb
nop
pop
mov
fsubr
adc
insb
in
and
ds
pop
pusha
push
popf
xchg
das
fnstenv
in
movsl
cmp
add
jne
lcall
lea
xchg
mov
ljmp
mov
ret
mov
jmp
sti
repz
cs
push
pop
xor
and
and
cmp
mov
cs
fwait
push
into
fcmovnb
leave
cmp
loop
clc
sarb
xlat
aas
mov
fwait
cmpsl
push
popf
mov
lcall
xchg
mov
pop
pop
push
jecxz
cmpsl
imul
dec
push
cmp
shl
adc
xor
mov
test
push
add
add
mov
sbb
xor
push
sub
sbb
and
cmp
mov
dec
lods
mov
push
jb
fwait
ss
test
xor
arpl
inc
test
push
mov
out
aas
sbb
clc
push
in
in
add
jbe
ret
sti
cmp
inc
cmpsl
mov
sbb
push
dec
cltd
cmp
cmp
xchg
jl
fldl2t
xchg
movsb
dec
fcomps
mov
xchg
js
jge
adc
push
stos
sbb
es
stc
jp
dec
or
fwait
push
sbb
loope
cs
outsb
bound
mov
adc
xchg
sbb
scas
jnp
in
jmp
fsubr
out
ja
sbb
testb
nop
std
sbb
adc
filds
sahf
test
sbb
arpl
outsl
inc
pop
sti
mov
lds
out
test
imul
leave
add
push
mov
mov
and
pop
lds
mov
sarl
mov
inc
pop
idiv
adc
sub
push
or
mov
mov
dec
test
out
mov
push
lret
jne
fnstenv
je
outsb
lret
dec
cmp
ds
xor
loope
mov
push
push
mov
roll
lcall
jno
push
sub
out
cld
add
xor
jg
dec
mov
hlt
xor
js
mov
xchg
jecxz
add
push
sub
mov
add
mov
test
int3
mov
gs
push
push
sahf
into
enter
push
push
mov
mov
aam
ja
mov
fists
push
jg
jne
mov
ja
push
add
sbb
cmp
fisttpll
stc
adc
xchg
cmp
fcom
push
pop
jmp
lock
or
push
xor
out
test
adc
mov
movsl
fisubs
sub
imul
jo
test
out
xor
or
fadd
sahf
test
pop
stos
icebp
dec
in
mov
add
inc
arpl
scas
cmc
inc
and
push
pop
mov
lea
jb
pop
dec
sbb
loopne
cwtl
pushf
mov
cmpsl
lock
inc
cmpsb
pop
or
mov
or
les
push
addl
out
hlt
pushl
mov
and
inc
nop
test
xchg
jns
sub
faddp
mov
pop
or
xchg
mov
into
cmp
in
mov
jge
sbb
and
pusha
aad
lret
or
adc
notl
inc
and
das
cmpl
movsb
fstpt
push
jne
pop
cmp
pop
repnz
lret
bound
pop
outsl
pop
push
idivb
mov
ret
mov
movsl
push
jecxz
dec
aad
push
sub
or
pop
xchg
ret
sub
mov
dec
dec
mov
or
mov
pop
lahf
daa
outsl
xchg
fdivl
adc
mov
cmpsb
daa
outsl
mov
out
in
paddusw
pop
sub
mov
ret
outsb
sbb
lahf
mov
pop
subb
sub
mov
les
mov
adc
rolb
popf
mov
push
adc
fisubl
lcall
into
je
add
in
and
gs
push
sub
xchg
add
inc
push
out
xor
push
jne
fistpl
inc
fcoml
add
mov
inc
jl
ss
shlb
pop
lcall
callw
gs
jns
mov
mov
aas
xlat
pop
mov
popa
rol
iret
sbb
push
arpl
pop
imul
pop
inc
jno
data16
clc
lret
lods
andl
cmp
fwait
mov
add
stc
ret
mov
pop
js
test
pop
test
mov
aad
xchg
sub
mov
sahf
stos
pop
icebp
fsts
inc
xlat
pop
dec
pop
jle
pop
cmc
jno
in
into
stos
sbb
sbb
mov
iret
jg
test
fisubl
sbbb
push
cwtl
das
test
aaa
outsb
movsl
mov
fdivs
aam
sbb
pushf
xor
repnz
mov
push
in
nop
daa
cli
xor
popa
sbb
shll
adc
cmp
das
movb
jns
frstor
mov
xlat
add
jne
clc
pop
icebp
sub
xchg
mov
add
icebp
mov
imul
cltd
xor
mov
sbb
test
jb
out
pop
lock
inc
fisubrs
arpl
sbbl
mov
lahf
outsl
aad
push
rorl
ret
cmp
pop
dec
loope
inc
shrl
mov
xor
in
inc
fidivrs
pop
repz
fwait
rcrl
js
jbe
call
fnstenv
adc
xchg
inc
test
mov
aam
mov
cmpsb
fnstenv
or
mov
pop
mov
mov
add
lea
mov
or
pop
lea
push
call
loopne
outsl
push
mov
fisttps
mov
aas
xchg
xchg
sub
in
mov
xchg
and
leave
in
xor
scas
test
dec
loopne
mov
loope
sub
add
mov
add
test
xor
sub
push
ljmp
mov
jmp
in
jno
and
imul
jb
shr
push
in
sbb
mov
inc
xlat
cmp
insb
add
dec
adcb
or
or
pop
inc
dec
loope
wrmsr
movl
add
and
and
ds
ds
pusha
sub
xchg
repnz
and
inc
fsubp
inc
push
movsl
jb
fidivl
xchg
pusha
test
jmp
insl
sarb
sbb
insb
repz
mov
sarl
fcompl
adc
fbstp
push
and
test
xor
adc
fs
xor
jl
mov
adc
jge
mov
ret
in
je
cmp
out
pop
icebp
sbb
jns
add
push
sbb
stos
inc
repz
test
sub
sbb
shlb
push
or
pop
jmp
push
sbb
sub
inc
adc
sahf
xor
or
sbb
cmpsl
dec
fsubr
xchg
sbb
add
xorb
lods
adc
xchg
adc
xchg
sub
add
xor
jne
sbb
or
or
dec
inc
out
mov
xchg
or
mov
jmp
in
xlat
outsb
and
and
adc
outsl
push
sub
cld
cmp
xor
or
sbb
or
arpl
loope
jnp
out
fidivs
add
scas
inc
cmp
xchg
and
hlt
in
test
or
lcall
pop
push
sti
sub
and
lock
clc
and
testb
es
mov
sub
add
xor
das
daa
jecxz
lret
adc
imul
aaa
clc
sbbl
sbb
push
push
movsl
ds
ja
lock
and
mul
jnp
or
test
out
pop
repnz
stc
cli
xchg
sub
shrb
cmp
roll
add
pop
repnz
icebp
mov
stos
inc
sbb
leave
pusha
or
sbbb
sbb
jmp
cmpsl
sbb
call
repnz
mov
ret
add
adc
inc
xlat
xor
cld
mov
xor
pop
repnz
leave
sub
in
daa
sbb
jns
push
sbb
dec
adc
inc
les
mov
cmp
insl
xor
bound
jb
fistps
xchg
push
mov
mov
mov
mov
js
imul
sahf
mov
pop
jmp
movsl
cmp
adc
dec
je
stc
nop
xchg
xchg
shrl
mov
pusha
in
adc
mov
imul
out
scas
out
jbe
push
add
testb
clc
sbb
lea
cmp
push
push
jmp
in
loop
mov
mov
or
mov
adc
std
xchg
pop
or
sahf
inc
or
cmp
popf
xor
out
mov
adc
scas
inc
or
mov
frstor
mov
jmp
call
xor
mov
jno
pop
mov
inc
cli
add
adc
adcb
mov
and
pop
scas
adc
rclb
cmp
inc
dec
fidivs
fiadds
mov
adc
fistpll
rcrl
fidivs
andb
test
test
test
mov
jmp
xchg
mov
jae
rorl
jnp
cltd
xor
inc
fcmovb
inc
ds
pusha
stc
nop
xchg
stos
lock
mov
pop
mov
loopne
jl
xchg
scas
inc
leave
xor
jb
out
add
sarl
or
mov
sarb
jp
in
inc
adc
jnp
loop
mov
mov
test
jno
call
cld
ret
add
sbbl
xor
lcall
and
push
push
xlat
jecxz
or
jecxz
sub
repnz
jl
lods
adc
pop
sti
arpl
mov
push
mov
pop
test
pop
outsl
inc
leave
loopne
jmp
pop
cwtl
pop
testl
pushf
adc
mov
jmp
icebp
or
mov
sbb
nop
or
fstpt
mov
and
pop
xor
add
shll
push
push
incl
mov
cmp
shrl
or
jnp
test
jge
push
pop
repnz
add
test
js
inc
cmp
je
dec
in
xchg
cmpsb
cmp
sub
negl
test
jle
push
dec
loop
movsl
mov
fmuls
insl
das
jae
or
jnp
mov
fwait
lret
ja
push
cmpsb
push
mov
dec
stos
cltd
je
int3
jne
mov
and
sub
inc
mov
inc
aam
push
fadds
jnp
xlat
lds
daa
movsl
insl
xchg
test
dec
pop
fists
ds
fcmovnu
inc
lock
adc
popf
xor
dec
sub
or
push
std
insl
mov
push
inc
rclb
cmpsl
les
fsubrl
dec
rcl
mov
scas
adc
cmp
rcrl
add
out
fwait
popl
es
push
scas
jne
stos
inc
in
push
or
inc
adcb
shl
sbb
xorl
sbb
ljmp
das
mov
adc
lahf
mov
inc
mov
mov
add
popf
mov
xchg
mov
fidivrl
fists
mov
loopne
pop
les
xor
push
sub
repz
jmp
lods
int3
and
shl
add
shrl
out
or
and
shll
aam
lret
or
mov
sbb
xchg
dec
out
inc
ret
out
outsl
push
ljmp
cmpsl
pop
cmp
or
outsl
mov
decb
or
mov
push
or
xchg
add
sub
cld
es
imul
pop
mov
les
bound
jbe
pusha
mov
and
test
popl
mov
fsubrl
lods
and
xchg
push
es
lret
add
jge
repz
sbb
inc
pop
xchg
mov
xor
cltd
in
cs
lods
inc
xchg
jns
lods
pusha
mov
test
js
dec
jecxz
pop
xchg
sti
and
push
lret
loope
mov
testl
sti
or
mov
fstps
pusha
cli
push
sti
fisttps
xchg
adc
xchg
sub
gs
push
sbb
nop
cmpsl
pop
pop
out
imul
stos
shll
stos
xor
push
lods
ja
lods
ss
pop
les
cmc
xor
ret
faddl
mov
inc
fstl
popf
xchg
xor
stos
in
pop
outsl
mov
jecxz
push
call
mov
repnz
sbb
pop
add
mov
push
stos
push
imulb
inc
dec
in
ljmp
adc
hlt
mov
aad
jns
jne
add
mov
cmp
in
and
mov
jb
imul
and
popa
mov
push
ds
lcall
cmp
lea
mov
shrl
sti
sub
in
xchg
xchg
add
dec
sbb
inc
sahf
pop
add
dec
lahf
test
or
mov
mov
ret
push
pop
mov
adc
mov
adc
negl
fists
rolb
jecxz
adc
ljmp
inc
or
push
jns
es
sub
sbbb
in
jge
dec
mov
out
sub
pop
cmp
or
push
gs
xor
pop
dec
popf
xor
pushf
in
xor
xor
pop
movsb
xchg
aad
mov
adc
fsts
inc
ror
lcall
cmc
push
stc
int3
aas
fwait
jg
roll
mov
sbb
out
arpl
sub
mov
mov
lds
adc
in
pop
pop
ret
pop
fcmove
jmp
aam
lds
loopne
fimull
ljmp
in
mov
adc
or
cld
cli
xor
adc
dec
ret
sub
ss
shlb
jnp
ljmp
ffreep
jle
cmpsl
aam
les
cmc
adc
decl
mov
mov
lea
mov
fcomip
sub
jns
jns
scas
iret
data16
fwait
xchg
dec
add
int3
cmpsl
aas
push
mov
jnp
pop
shrb
push
jmp
and
cmp
xchg
xor
push
jl
dec
inc
test
or
dec
xchg
or
inc
fimull
or
push
cs
mov
dec
mov
sti
mov
mov
or
sbb
pop
mov
testb
mov
jge
or
faddl
sub
cmpsl
pop
mov
mov
fwait
outsb
sahf
push
mov
jns
adc
arpl
lret
fdivrs
inc
mov
add
sahf
aaa
and
push
jge
jno
adc
cmpsl
popa
jge
pusha
imull
into
mov
sbb
xchg
xor
clc
call
fisttps
pop
lret
xor
pop
shrb
in
jns
mov
mov
repnz
shll
and
mov
fimuls
adc
loop
stc
mov
xor
sti
sbb
dec
add
xchg
les
adc
jno
jne
rorl
cwtl
mov
pop
fcmovb
dec
out
lods
data16
aaa
divl
jnp
adc
xchg
mov
hlt
jne
mov
jecxz
mov
hlt
lret
jmp
lods
jbe
movsl
pop
adc
cmc
mov
mov
sbb
xchg
inc
jmp
bound
xchg
outsb
jle
ficoms
mov
mov
fildl
cld
inc
lds
mov
nop
push
push
out
xor
imul
jb
movsb
insb
sbb
loope
ja
xchg
pop
lcall
mov
xchg
xchg
sti
nop
fnstenv
fldt
in
push
mov
repz
push
dec
cwtl
jne
ret
xchg
fcoms
dec
cli
mov
outsl
jo
cmpb
cmp
xchg
xchg
pop
mov
movsb
sub
dec
ret
pop
xor
adcl
sbb
jne
inc
lcall
pop
cwtl
jnp
cs
daa
mov
push
jge
jmp
sahf
movsb
test
stos
and
push
rcl
xchg
and
loop,pt
outsl
int3
dec
mov
leave
pop
ja
jns
sub
movsb
cmp
stos
cmpsl
or
cmc
dec
fimull
inc
or
clc
and
ljmp
loop
int
push
xlat
rcrl
in
shrb
stos
xor
xchg
mov
jno
xchg
xor
js
xlat
stos
enter
push
into
pop
add
rorb
push
ret
sub
repnz
out
fcmovb
xor
xlat
add
loop,pn
and
jnp
sbb
fisubrs
stc
inc
xor
xor
icebp
push
int3
inc
bound
imul
dec
into
push
cmp
inc
inc
ja
pop
inc
inc
mov
popf
gs
arpl
mov
xchg
dec
hlt
mov
mov
repnz
sbb
mov
rorl
adc
std
jbe
cmp
ret
or
or
sbb
dec
test
xorl
mov
jnp
aam
inc
xchg
daa
cmc
pop
mov
mov
dec
mov
ja
push
ret
xor
xchg
mov
cmpsl
imul
push
loope
mov
or
insl
lahf
lea
jnp
jnp
inc
pushf
xchg
jb
inc
ficoms
movsb
insl
or
mov
and
push
out
and
neg
jo
test
sbb
mov
ss
fxtract
das
ljmp
xor
mov
fdivl
lcall
fnstsw
dec
mov
in
and
icebp
daa
dec
pop
aam
mov
cmp
out
clc
cltd
aam
sbb
outsl
mov
pop
enter
jle
test
mov
jb
push
sub
dec
mov
lods
jle
into
cmp
xchg
insb
shlb
add
mov
lock
xchg
mov
pop
movsb
popf
fwait
sub
sarb
adc
lcall
in
mov
sub
mov
and
xchg
aad
pop
add
pop
xchg
xchg
inc
pop
sbb
lret
inc
mov
mov
pop
xchg
or
sbb
cmp
adc
fwait
sti
push
and
int
repz
pop
outsb
adc
jmp
nop
pop
or
call
testb
sub
jg
mov
jmp
add
cmpsb
xorl
js
bound
lret
sbb
mov
sub
mov
cmp
dec
les
or
shl
push
test
sbb
pop
inc
test
cwtl
sbb
xor
stos
daa
push
out
imul
insl
inc
sti
xor
cmp
mov
xor
push
imul
scas
pop
mov
in
push
push
push
out
aaa
lret
mov
inc
mov
mov
fistl
jmp
fmuls
test
push
sub
fisttpll
xchg
movsb
ds
push
std
and
jg
xchg
aaa
mov
pop
les
mov
ret
out
pop
cli
push
pop
stos
pop
or
pop
mov
fisttpl
xor
mov
dec
inc
pushl
pop
mov
xchg
add
add
mov
pop
imul
lret
pop
xor
ss
and
pop
cwtl
bnd
int3
pushl
sar
rorb
jecxz
mov
adc
dec
daa
mov
movsb
pop
or
lret
mov
les
out
adc
xchg
fdiv
dec
out
adc
scas
jb
sbb
cli
ss
pop
shrb
or
mov
cmc
das
xlat
add
xchg
dec
clc
sarl
mov
out
loopne
leave
jbe
lods
dec
rol
fiadds
cmpsl
inc
shr
inc
lock
dec
mov
mov
mov
mov
fwait
addl
xor
pop
enter
pop
out
popa
and
in
xchg
sahf
add
shl
cmp
in
shr
in
and
cltd
cld
cmpb
sub
sbb
or
inc
add
pop
insb
or
es
sti
xor
xor
add
pop
add
mov
out
cld
shr
xor
dec
pop
or
mov
ja
lahf
xchg
xor
mov
cmp
insb
push
dec
pop
add
push
flds
cld
es
test
popa
fdivl
sub
and
lods
jo
ja
xor
out
pop
mov
fmull
je
call
mov
shlb
enter
dec
xchg
mov
ret
xor
shrl
sahf
movsl
movlps
mov
sti
and
js
jo
push
mov
test
cmp
inc
lcall
xor
and
ficoms
pushl
fcmove
inc
fstpt
mov
cltd
xchg
stos
mov
or
insl
lahf
push
outsb
aas
aas
push
fsubrs
pop
dec
shrl
mov
cmpsl
sub
mov
movsl
cmp
cld
xchg
lret
lcall
xor
mov
and
repnz
pop
iret
lods
imulb
idivl
mov
lahf
insl
push
mov
lods
mov
and
cmp
shrl
testl
and
hlt
mov
adc
pop
add
adc
jp
lret
cmp
cli
dec
mov
loope
dec
test
in
cmpsb
jbe
dec
cli
es
shll
pop
loopne
push
test
xchg
test
lret
or
fimuls
ds
inc
and
push
test
adc
pop
and
outsl
aad
xchg
xlat
nop
add
aam
loop
jmp
cmp
cmp
mov
repnz
rcr
push
aam
rolb
rol
leave
inc
mov
mov
outsb
scas
jns
mov
scas
mov
add
jns
push
add
neg
push
sarl
dec
mov
dec
stos
sbb
cmpsl
in
rclb
out
fdivrs
cmp
shlb
out
mov
add
ljmp
xchg
mov
cmp
popf
js
iret
shl
mov
pop
lods
mov
fidivrl
mov
adc
push
dec
loopne
mov
xor
sub
fisubl
dec
dec
loopne
fcom
insl
adc
dec
lds
icebp
loop
adc
inc
mov
add
inc
push
lock
lods
push
add
push
inc
pop
fistpl
inc
faddl
insl
fistpll
jmp
mov
mov
lea
fldcw
loope
int3
mov
inc
ret
push
icebp
inc
aad
inc
xor
mov
sub
shl
lds
jle
xchg
out
add
cs
lods
xchg
fsubrl
das
add
xchg
jl
inc
insl
mov
cvtdq2ps
dec
xchg
xchg
push
jbe
xlat
sub
orl
inc
outsb
mov
gs
dec
les
sbb
addl
lcall
push
mov
push
push
push
mov
bound
pop
xchg
gs
test
into
idivl
xor
add
sbb
dec
scas
pop
sti
sub
or
or
add
nop
jp
or
pop
sti
xchg
and
pop
jge
and
cmpsb
xor
mov
push
mov
adc
pop
ret
into
test
and
xor
mov
popa
cli
movsl
rorl
fsub
xor
cmc
shlb
fsub
pop
pmulhuw
add
jnp
and
jle
pop
shlb
or
sub
stc
test
adc
in
xor
bound
fisttpll
inc
mov
pop
adc
xchg
pop
pop
push
cmpsb
jle
loopne
in
push
jmp
lret
ljmp
subl
xor
jnp
cmovns
ficompl
push
push
pop
cmp
pop
xor
adc
movsl
cmp
dec
out
xor
repnz
push
pop
subl
and
imul
mov
xchg
iret
inc
xchg
jnp
fimuls
push
cltd
mov
lds
fisubs
fiadds
cltd
xchg
fwait
sarb
shr
test
fldenv
cmpsb
jle
sarb
and
mov
fldenv
test
sti
divl
shll
inc
vcvtsi2sdl
clc
in
enter
dec
jmp
and
push
nop
mov
pop
and
fisttpll
mov
adc
mov
or
lock
jno
mov
or
movsl
cld
dec
mov
mov
fcompl
aas
arpl
out
push
and
sub
repnz
mov
enter
test
decb
enter
outsb
rclb
popl
mov
inc
leave
pop
out
iret
dec
mov
dec
lock
and
inc
movsl
push
gs
push
icebp
and
lods
inc
lock
jne
data16
inc
xchg
ss
jae
mov
xchg
xchg
push
sub
inc
fisubrs
gs
jl
adc
sahf
xor
push
pop
insb
add
mov
outsl
push
insl
dec
in
jp
jo
rolb
dec
sti
gs
inc
jmp
in
and
mov
inc
jno
fsubl
imul
jns
pop
sub
ljmp
cld
sbb
ljmp
xchg
nop
fisubl
adc
jg
push
fildll
dec
loope
nop
movsw
adc
mov
sbb
and
fdivs
xchg
xchg
jne
out
lock
mov
inc
fmull
or
scas
pop
pushl
fwait
call
pop
sahf
mov
imull
sub
jp
test
rcrl
jge
lahf
or
lock
or
mov
push
pusha
cld
bound
push
mov
leave
adc
cmpsb
outsl
lcall
je
adc
cmp
xchg
pop
cmp
jae
mov
loopne
fcomps
jbe
jecxz
add
aaa
mov
jb
mov
pop
mov
cld
pop
push
in
mov
inc
rcl
gs
fisubrs
cmc
out
mov
shrd
fistpl
imul
pop
add
and
das
loope
inc
fldl
xchg
sbb
pop
xor
movsl
pop
push
mov
pop
bound
push
inc
inc
rclb
adc
inc
inc
fsubrs
pop
push
push
pop
shlb
pop
lock
and
inc
insl
nop
fisttpll
cs
jl
sti
xchg
xchg
shll
insb
fwait
repnz
mov
addr16
adc
js
lret
xchg
xchg
xchg
sub
cltd
pop
repnz
xchg
jl
cmp
mov
repz
mov
shl
aas
call
jmp
test
or
sub
dec
aam
gs
cmp
inc
mov
and
stc
add
es
cmp
jns
into
sbbl
xchg
pop
mull
or
out
mov
mov
cli
lahf
mov
add
dec
ret
xlat
xor
pusha
jp
ss
fnsave
stos
lods
xlat
and
or
xchg
xchg
testl
mov
test
mov
repz
arpl
pop
out
dec
lret
fldl
jo
incb
int3
sti
mov
adc
mov
add
jo
xlat
cmp
std
xchg
cmp
cmp
pop
sbb
or
fistl
pop
inc
leave
jne
rorl
xor
xchg
mov
mov
jne
mov
mov
cmp
pop
fsubrs
cmp
insb
mov
add
push
adc
jnp
daa
xchg
push
inc
xlat
mov
pop
push
dec
shlb
sub
and
movsb
pop
jge
fistl
cmp
stos
inc
mov
lea
orl
push
xor
mov
jmp
mov
outsb
mov
sub
xchg
cmp
pop
nop
mov
or
fisubrl
mov
lret
mov
out
repnz
popf
xor
mov
fistps
push
and
xor
out
xor
push
lret
inc
ljmp
ja
pop
push
and
popa
mov
sub
push
xchg
lea
mov
sahf
pop
ss
sub
and
push
xchg
or
add
jl
cs
push
stos
push
fiadds
setge
data16
test
xor
test
push
adc
repz
std
mov
inc
or
repz
push
mov
xor
daa
sti
mov
repz
pop
enter
push
jmp
divl
jns
clc
lahf
lcall
xchg
popa
fwait
xchg
inc
push
push
mov
xchg
cmp
jns
mov
add
or
inc
xchg
xchg
mov
add
push
fdivl
xor
fcmove
aaa
icebp
arpl
inc
test
jmp
ja
xchg
aas
daa
sbb
movsw
insb
add
dec
pop
mov
dec
push
clc
xor
push
xchg
popa
push
int
inc
sub
aam
imul
stos
scas
cmp
inc
mov
adcb
stos
scas
jno
nop
fisttpl
mov
scas
jae
rol
aas
out
mov
sti
dec
dec
fildll
shrb
es
inc
into
sbb
sub
xor
jo
sub
mov
mov
repnz
push
incl
lret
add
and
cmp
and
jmp
imul
xor
sbb
pop
imul
add
orb
sub
xor
mov
filds
sarb
divb
clc
pop
add
jle
jnp
stos
xchg
push
pop
add
pusha
fwait
lods
das
aaa
fists
xchg
mov
fldz
pop
fst
rclb
stc
xor
into
rcrl
int3
cmp
stc
aam
in
adc
stos
mov
jp
jmp
inc
mov
mov
stc
call
rorb
jo
lcallw
xchg
into
stos
or
popa
push
int
ljmp
filds
jbe
push
push
addr16
fadds
mov
adc
mov
dec
cs
pop
mov
pop
lods
cmpsb
insl
or
scas
popa
and
jb
test
das
sbb
ja
mov
cmp
pushf
dec
cld
push
outsb
orps
jecxz
fistl
scas
sub
sti
fs
push
xor
outsl
dec
xchg
adc
arpl
xchg
fsubp
sbb
ret
hlt
outsl
std
das
push
adc
loop
je
pop
enter
xchg
jmp
push
mov
fimuls
lcallw
outsl
mov
push
test
push
and
cmpsb
fs
add
adc
lods
push
mov
data16
das
add
xchg
movsl
push
xchg
mov
xchg
cmpb
sahf
in
bound
sub
js
into
dec
mov
int3
std
and
rolb
clc
push
and
xor
add
mov
out
aad
pop
into
hlt
mov
sbb
fmull
inc
mov
repz
rcrl
push
clc
outsb
mov
push
insl
add
cmc
fs
leave
mov
jl
push
and
loopne
push
jmp
or
sbb
mov
or
mov
pushf
xor
sbbl
scas
jne
arpl
jmp
cmp
in
fucom
jl
mov
cmp
xchg
xchg
call
scas
lock
outsl
mov
mov
out
jo
mul
pop
rol
push
popf
add
ss
rcll
mov
sub
cli
and
lahf
inc
fisubrl
aam
out
dec
pop
int3
push
leave
ret
inc
fsubs
mov
or
lea
mov
sbb
pop
repz
loopne
in
mov
lds
cli
sub
lret
cld
inc
lret
lret
and
les
jmp
add
xor
iret
daa
pop
enter
jecxz
ss
movsb
xchg
or
pushf
mov
hlt
jl
fidivrs
adc
and
sub
and
shll
xor
insb
add
xchg
xor
sbb
test
cmpsl
cmp
fsubrs
pop
stc
pop
lock
in
dec
ja
jge
imul
lahf
xchg
sub
and
and
mov
and
cmpsl
ds
inc
shrl
lret
lds
out
xchg
push
in
push
jmp
movsb
sbb
add
outsb
les
mov
push
aas
inc
loope
adc
hlt
pop
jno
sub
cmp
jb
xorl
lret
enter
sbb
ss
xchg
xor
sbb
push
fs
xchg
jno
and
les
pop
jp
xchg
imul
loope
andb
sahf
mull
shrb
sbb
mov
mov
inc
fiaddl
aam
mov
sub
pop
es
pop
jp
lods
jns
cmpb
pop
mov
dec
jecxz
sub
mov
scas
imul
das
pop
lock
mov
ja
mov
ds
push
in
pop
cwtl
pop
mov
push
je
push
loop
rcll
jb
imul
add
push
loope,pt
cmc
adc
sub
xor
xchg
jno
fisubrl
add
push
mov
arpl
sysret
sahf
inc
sti
ljmp
sbb
pop
dec
mov
jns
push
outsb
je
and
js
ljmp
lods
xchg
dec
stc
lods
shlb
pusha
xor
ljmp
dec
cmpsb
rorl
sub
jae
ja
loope
cltd
push
int
push
ficoms
cmpsl
jmp
in
fcmovb
xchg
call
cmp
jne
stc
hlt
or
je
enter
js
loop
data16
pop
int3
dec
inc
mov
cli
stos
insl
add
mov
dec
and
xor
lret
lret
xchg
and
dec
pop
in
push
mov
add
and
out
mov
cmp
in
fs
sub
dec
enter
lods
and
jo
jg
push
dec
jbe
rorb
stos
insl
mov
lcall
lcall
inc
scas
push
repz
xchg
xchg
hlt
pop
mov
loop
jo
add
repz
dec
sbb
js
int3
ficompl
add
aaa
aam
xchg
or
pushf
sbb
pop
or
sti
sub
jp
lock
mov
push
imul
mov
add
pop
mov
cs
mov
outsl
es
psllq
ficompl
push
mov
dec
in
mov
sub
in
dec
test
inc
lcall
xchg
dec
cmc
mov
mov
mov
incl
ljmp
push
sti
mov
imul
cmp
inc
daa
fcompl
xor
mov
test
or
pop
test
push
aam
sbb
xlat
ror
mov
out
je
lret
sub
fstpt
js
inc
add
dec
iret
jns
loop
addr16
jecxz
shl
dec
std
push
loop
insb
cmp
imul
das
pop
mov
cmc
mov
hlt
mov
sbb
sub
cmp
pop
push
cmpsl
mov
imul
nop
or
mov
mov
xchg
aad
imul
xor
bound
aad
dec
lods
add
cltd
mov
xor
cmp
or
xor
add
int
gs
push
fsubrs
inc
test
lret
repz
or
test
adc
test
dec
out
and
test
or
cli
adc
loopne
xchg
mov
movsb
and
jp
movsl
lds
mov
dec
fmuls
jb
imul
jge
aam
std
xchg
out
js
add
jle
xchg
mov
jo
test
dec
sahf
xor
mov
pop
pusha
testl
pop
dec
loopne
out
rcll
stos
dec
rol
pop
ret
xchg
dec
fisttpll
into
pop
clc
gs
push
out
test
adc
mov
lds
scas
sbb
addl
movsb
mov
cmpsb
ret
xchg
dec
mov
out
cwtl
xchg
loope
stos
rcll
ds
shll
sub
stos
fcmovbe
cmp
lret
cmp
ds
push
outsb
xchg
inc
push
mov
or
push
mov
repz
xchg
dec
in
pushf
cmp
mov
rcl
arpl
xchg
popf
cmp
sahf
cmp
push
jmp
sub
xor
mov
add
lods
xor
adc
pusha
jge
dec
arpl
in
je
sub
or
and
jecxz
inc
xor
test
gs
loope
jg
fcomip
scas
ss
adc
add
aas
pop
add
adc
mov
nop
cmp
repnz
pop
cmpsl
repnz
mov
xor
sarb
add
ja
loopne
mov
repnz
shll
jae
stc
shlb
xor
test
jle
xor
mov
or
push
jle
jnp
insl
cmpsl
sub
adc
movsb
pop
scas
outsl
hlt
inc
dec
xchg
cmp
xchg
mov
andb
in
outsl
xchg
je
jmp
out
sbb
push
filds
mov
mov
adc
cmp
pop
out
pop
mov
mov
iret
xchg
inc
xor
sbb
dec
sahf
inc
in
out
repnz
mov
in
add
cwtl
cmp
orl
arpl
movsb
or
mov
jp
mov
dec
cmc
mov
test
sub
sub
push
aaa
cltd
jnp
mov
or
rcl
jge
addr16
aas
cmp
sub
jle
pop
das
mov
push
jb
shr
pushf
inc
xchg
repnz
std
aam
aad
jmp
mov
ja
push
cmpsl
sub
jae
imul
and
dec
adc
stc
mov
out
scas
mov
orl
insb
clc
lahf
jg
test
das
mov
sarl
test
push
or
cmp
push
and
dec
push
lahf
ret
sbb
out
add
mov
mov
scas
clc
push
cmp
adcb
xchg
xchg
dec
and
fcmove
roll
cmp
rcrl
ret
sub
adcl
mov
xor
ret
enter
fistpll
bnd
xchg
pop
js
xor
int3
mov
shll
mov
notb
test
loope
int3
notb
adc
int
and
add
xchg
adc
jnp
xor
clc
rol
xchg
cwtl
jecxz
cmc
pop
ret
mov
dec
add
cltd
xchg
test
les
icebp
leave
xor
stc
push
inc
adc
fcom
mov
mov
inc
adc
lret
add
adcb
neg
lret
out
lds
test
mov
ds
loopne
test
fcoml
mov
movsl
mov
das
stos
das
pop
mov
jge
insl
call
inc
fimuls
into
mov
mov
mov
xor
mov
push
test
cld
push
dec
flds
seta
cmpsb
mov
mov
adc
mov
cmp
movzwl
lea
cld
pop
roll
sarl
mov
mov
les
pushf
lfs
or
push
adcl
mov
mov
xor
rorl
dec
xchg
hlt
mov
ror
mov
or
lods
sub
cmpsl
sub
dec
imul
dec
and
xlat
aam
or
inc
xor
aas
xchg
push
and
adc
lock
jg
aad
mov
or
ret
mov
scas
daa
mov
movsl
xor
popl
jb
rcl
inc
adc
rorl
xchg
inc
das
adc
fsubl
into
gs
lret
xchg
shll
lods
adc
aad
mov
push
ja
xlat
xchg
inc
pop
fisttpll
int
or
rcrl
rep
push
aaa
mov
daa
subl
adcl
pusha
loopne
xor
adc
sub
nop
enter
pop
cli
dec
sbb
int3
outsl
xchg
insl
jmp
or
mov
lods
dec
shrb
xlat
xchg
inc
cmova
pop
clc
into
cltd
or
outsb
adc
push
jb
outsl
call
stc
sub
xchg
pop
les
pop
idivb
aad
jl
pop
test
data16
stos
xor
push
lea
pop
add
scas
in
je
popa
rorl
push
mov
enter
lods
and
xchg
cmp
xor
gs
add
mov
jns
xor
mov
xor
xchg
mov
stos
jl
or
mov
pop
out
stc
pop
stos
xor
ljmp
es
mov
cmp
pop
pop
pop
sub
jl
sub
lods
jge
or
cmpsb
jo
hlt
pop
mov
or
sub
add
lods
ss
inc
or
mov
lods
lea
adc
sub
xchg
rcrl
or
orl
iret
lock
cmp
fwait
dec
lods
ss
and
adc
lcall
xor
mov
sub
jge
sub
sbb
negb
repz
lret
xchg
aaa
jg
xor
xchg
adc
mov
mov
mov
mov
jmp
movsb
lods
das
jp
push
shll
jo
out
lods
xor
add
orl
adc
leave
nop
or
arpl
fmuls
call
lret
int
and
mov
sub
int3
sbb
clc
dec
lahf
inc
aam
or
mov
test
sub
sub
rolb
movsl
sub
jne
or
hlt
pop
cmpsl
pop
sbb
mov
stos
popf
cmp
into
les
dec
loop
ret
aaa
movsl
testl
js
les
loopne
les
scas
pop
loopne
pop
es
mov
cmp
out
add
es
lret
stos
jmp
jno
mov
lahf
addr16
fnstenv
jle
pop
clc
sub
gs
in
lahf
pop
inc
sub
sbbb
lahf
arpl
mulb
ljmp
fildl
ljmp
sub
imul
mov
xchg
pop
stc
push
sbb
int3
mov
fidivs
scas
xchg
inc
addb
jge
pop
dec
sbb
mov
cmpsb
mull
cmp
into
push
cmc
std
pop
pop
xchg
pop
adc
aam
dec
adc
decb
leave
mov
mov
aaa
mov
jo
xchg
inc
adc
or
dec
xor
into
push
mov
mov
ret
dec
pop
arpl
or
adc
fdivrl
add
sub
cltd
xor
and
mov
cmp
mov
scas
fildl
jb
dec
adc
fmul
mov
and
out
inc
or
hlt
mov
pop
pop
push
mov
mov
mov
cltd
mov
stc
outsb
pop
repz
leave
jl
enter
add
dec
mov
push
jecxz
rclb
jno
push
aad
inc
adc
movsb
adc
sahf
dec
cmp
pusha
fstpt
pop
in
xlat
add
mov
lods
in
stc
fidivrs
pop
jmp
push
sti
dec
or
cwtl
cmp
in
jo
cld
into
das
xchg
lcall
cmp
jg
sarl
imul
lahf
nop
decb
sub
aaa
in
pop
test
icebp
xor
and
mov
test
inc
inc
or
mov
sbb
jle
cltd
inc
and
jecxz
xor
and
fidivrl
xor
and
cmpsb
xchg
out
je
mov
inc
dec
cwtl
pop
add
popf
adc
xchg
into
xchg
ffree
xor
lahf
or
nop
sbb
add
pop
call
out
jb
test
mov
mov
outsl
leave
loopne
popf
adc
inc
adc
xchg
sub
iret
lret
jo
xchg
sbb
mov
insl
xlat
ja
jnp
pop
insb
mov
jnp
jge
cmp
push
fwait
inc
sbb
sub
dec
jmp
movsl
scas
aam
in
cs
out
daa
and
xchg
push
inc
xor
fcoms
int3
jmp
hlt
hlt
gs
lock
pop
dec
js
sub
into
aas
jae
inc
adc
xchg
iret
push
add
rolb
cmp
mov
jge
or
fnstcw
push
push
cmp
mov
jg
or
inc
mov
pop
std
sbb
mov
rolb
and
push
dec
push
popf
jge
dec
adc
outsb
sbb
sbb
cs
aam
rol
adc
into
lods
adc
movsl
xchg
mov
pop
push
data16
loopne
push
js
dec
loop
stos
ss
sbb
test
mov
cmpsl
sub
mov
out
dec
movsl
sub
ror
xchg
sbb
sbb
mov
lods
jne
rcrl
jp
fsub
xchg
aas
imul
pop
push
jae
ja
inc
push
mov
mov
mov
arpl
iret
cmp
leave
mov
data16
adc
add
pop
mov
rcll
mov
jo
fs
dec
mov
pop
enter
push
jmp
fiadds
jo
into
xchg
andb
sbb
sahf
inc
xchg
dec
filds
xchg
adc
mov
cmp
mulb
mov
mov
sbb
shlb
mov
jns
test
fs
sbb
daa
lcall
and
stos
mov
cmpl
in
dec
rclb
and
pushl
cmpsb
inc
sub
jno
jb
xchg
faddl
aad
cmp
cmpsl
ljmp
push
les
rorb
orl
lret
outsl
stos
xor
push
cmc
scas
xor
dec
cmpsl
sub
push
sarb
dec
push
cld
add
orb
movl
scas
gs
or
mov
sub
loope
xchg
stc
nop
inc
aas
sbb
inc
adc
stos
ret
xchg
or
xchg
inc
xor
pop
mov
mov
sub
jecxz
ljmp
mov
mov
daa
cmc
std
ret
out
cmpb
ds
outsl
and
cmpsl
flds
mov
add
pop
and
mov
out
sbb
mov
xor
mov
mov
arpl
lods
inc
test
sbb
cmp
add
leave
mov
js
mov
or
mov
mov
add
notb
pop
mov
ljmp
vpmulhuw
sub
xchg
push
add
sub
xor
daa
mov
push
pop
mov
mov
cmp
nop
ja
into
loop
cli
xchg
mov
add
pop
mov
xor
sub
out
cmc
sbb
jae
test
out
shll
mov
mov
jne
and
adc
popa
pusha
mov
push
jmp
in
aad
aam
push
outsb
inc
jmp
xchg
push
iret
mov
sbb
shlb
dec
in
jbe
xor
rcrl
jmp
negl
aas
in
andl
scas
xor
rclb
add
mov
dec
push
and
loopne
dec
or
dec
js
lret
mov
mov
loop
jo
xchg
aas
out
lret
std
mull
jp
sbb
xchg
sub
in
outsb
or
pop
push
pop
out
insb
ja
rolb
cmp
test
mov
mov
pop
movsl
ljmp
dec
mov
addb
cmp
sbb
inc
xor
mov
cwtl
popf
xchg
rcrl
and
lahf
ss
push
in
lods
xchg
fldl
loop
or
pop
xchg
fldl
loopne
es
push
imul
jne
xchg
cmpb
adc
outsl
call
daa
fldl
adc
shl
and
sub
pop
or
push
pop
stc
xor
sub
movsl
psubd
call
stc
orb
push
mov
push
rcr
and
mov
inc
and
das
xchg
rol
mov
sub
fisubl
add
pop
cmovg
jge
jo
adc
inc
mov
xchg
and
icebp
pop
imul
insl
icebp
cmc
dec
dec
jcxz
les
dec
ud1
and
rcrl
out
mov
mov
or
pop
nop
add
js
push
popf
inc
enter
xchg
sbb
rolb
sub
add
pop
das
mov
pop
mov
push
jle
add
push
sbb
pop
insb
sub
in
fwait
in
jns
cmpsb
xor
addr16
xchg
inc
dec
xor
xor
push
rep
inc
and
ss
jno
sti
hlt
inc
or
jmp
rolb
shr
jbe
inc
repnz
pop
cmp
jnp
mov
mov
dec
scas
test
jne
mov
test
add
das
mov
push
daa
stos
sahf
adc
orb
sub
add
add
out
fs
adc
mov
enter
daa
test
lcall
cltd
dec
cwtl
inc
mov
scas
and
lahf
cvtpi2ps
int3
dec
pop
push
jae
dec
push
ds
pop
pop
nop
jge
lea
push
jbe
mov
imul
dec
cmc
mov
jnp
pop
sti
xor
push
mov
std
xchg
sub
addl
fsubs
ret
orb
jbe
and
xor
movsb
jne
xchg
add
jl
ret
jecxz
mov
pop
daa
dec
adc
add
inc
or
push
in
jno
sti
scas
xor
dec
push
jae
fs
loopne
pop
cli
fs
sarb
jg
mov
sub
xchg
lock
pop
cli
ss
cmpb
pushf
cmp
mov
mov
lcall
ret
xchg
adc
sbb
or
jge
cmpl
sbb
push
adc
xchg
add
enter
cmc
jae
in
cmpsl
sub
repnz
das
test
nop
aas
lahf
cmp
fnstsw
repnz
rcll
jl
inc
int3
or
xlat
inc
aad
inc
push
out
cmc
pop
sub
sbb
mov
dec
jbe
push
ret
mov
inc
rorb
das
test
and
mov
mov
test
sbb
mov
ljmp
dec
jmp
xor
adc
fwait
inc
sub
xchg
cmp
or
das
scas
scas
pushf
fdivs
mov
lea
xor
add
js
pop
aam
mov
mov
cmpsb
xor
adc
jge
sbb
jg
stc
fldenv
xor
mov
xorl
test
inc
mov
mov
fwait
adc
add
push
xchg
inc
mov
fstpt
aad
repz
jmp
fildll
mov
mov
xor
fnsave
insb
fidivrs
mov
test
scas
jns
jne
fbstp
mulb
daa
push
xchg
cmp
cmp
xchg
pop
mov
mov
cmpsl
sahf
cmp
fcoml
or
popf
or
jg
lret
sarl
std
cmp
inc
push
dec
or
fwait
jne
jge
dec
or
cwtd
aaa
mov
pop
pop
xlat
std
pop
dec
inc
cmp
das
cld
inc
jg
lock
mov
scas
mov
add
jno
pop
ja
sti
adc
pop
inc
in
ss
adc
leave
nop
js
rorb
mov
or
cs
test
cmp
sarb
xchg
fwait
aas
push
inc
call
test
and
js
lcall
jmp
fadds
or
mov
pop
test
jb
xchg
int3
repnz
fistpl
aaa
mov
jb
loop
insb
insl
jae
and
xor
cmp
ja
pop
add
fidivrs
jg
adc
pop
xlat
fldl
adc
xchg
inc
adc
arpl
mov
jbe
pop
xor
xchg
cmp
test
int
inc
adc
sub
cli
repnz
mov
in
inc
sub
and
imul
or
xchg
and
sbb
loopne
cmp
xchg
sub
in
test
testb
and
ljmp
flds
aad
fstpt
jg
inc
sub
push
xchg
fiaddl
loope
fwait
inc
testl
cmpsb
cmp
cmpsb
mov
sub
push
jne
in
nop
cli
pop
rolb
ret
push
sbbb
hlt
loopne
es
je
cmp
and
sbb
sahf
inc
testb
sbb
xchg
cmp
into
pop
mov
lods
jecxz
mov
mov
std
pop
sarl
add
test
pop
sti
pop
mov
mov
je
insb
cmp
cmpsl
ja
std
or
divb
lods
jo
jbe
xchg
inc
and
cmp
out
sbb
aad
scas
loope
aas
push
mov
aas
movsl
dec
jb
negb
gs
loopne
repz
mov
cs
pop
push
push
pop
mov
jge
push
aad
mov
or
pop
jge
negb
jo
xchg
outsb
dec
pxor
mov
aas
jbe
pop
das
outsl
repz
dec
dec
adc
xchg
pop
add
mov
iret
xchg
imul
fdivrp
repnz
cmp
mov
faddp
jne
mov
stos
orl
hlt
push
repz
pushf
aas
out
call
popa
roll
ds
or
xorl
sbb
bound
stc
fdiv
outsb
icebp
inc
or
sub
dec
gs
cmc
divl
sub
nop
cmp
ds
clc
push
xor
out
fcoms
out
add
cwtl
cmp
cmpsl
sub
sub
pop
pop
mov
or
and
gs
mov
or
ja
lods
adc
loopne
push
push
lods
sti
push
push
je
es
outsl
dec
or
in
cmp
cmpl
xlat
xorb
iret
mov
add
push
je
stc
int
xchg
inc
loop
sahf
aaa
dec
add
inc
xchg
ret
xchg
add
jge
ret
xchg
adcb
not
lods
insb
ljmp
ret
xchg
xor
test
mov
adc
adc
inc
addl
insl
lods
xor
jns
movsb
movsb
push
addr16
mov
cmpsl
fimuls
rcll
les
fcompl
in
jo
mov
mov
cwtl
cmp
ror
hlt
jl
push
scas
adc
mov
inc
sbb
jbe
pushf
sbb
fwait
pop
je
mov
and
repnz
popf
jecxz
out
int3
arpl
xor
popa
ljmp
aas
dec
iret
xchg
sahf
das
cmpsb
sub
insb
not
push
mov
mov
xor
pop
sahf
adc
mov
jo
pop
shl
pop
rcrb
mov
xchg
dec
in
lock
dec
adc
out
test
jl
fisubs
mov
add
xlat
push
mov
push
xor
xor
es
incb
int
shll
or
mov
pop
mov
ficoms
mov
repnz
stos
out
push
cltd
mov
pop
add
sbb
dec
pop
mov
xchg
inc
cltd
inc
cs
ja
cmp
jg
and
cltd
inc
adc
pop
mov
dec
pop
mov
lcall
cmp
ds
lock
into
lea
mov
xchg
inc
inc
nop
push
add
push
pop
je
mov
jns
cmpsb
xor
in
jg
sar
iret
mov
mov
cwtl
repnz
fwait
dec
lods
call
icebp
xlat
test
icebp
inc
adc
xor
mov
test
mov
push
out
inc
pop
jbe
dec
gs
jae
lcall
ret
cmc
or
jb
test
mov
lods
mov
jb
movsb
mov
or
mov
mov
arpl
jo
fidivl
test
mov
push
mov
leave
sbb
repz
sbb
test
inc
push
ret
lds
inc
adc
and
push
xchg
pop
and
out
imul
sbb
pop
inc
mov
roll
dec
or
in
nop
daa
push
adc
sbbb
dec
adc
jnp
in
outsl
sbb
or
decl
mov
in
test
repnz
sbb
lret
xchg
or
fstps
faddl
leave
xchg
sub
sub
ljmp
sub
enter
cld
es
mov
stos
and
movsl
lock
push
pop
add
mov
jno
hlt
cmpsl
xchg
cmp
call
movsl
sub
aam
lcall
cmpsl
ret
scas
mov
sub
or
dec
imul
mov
mov
inc
pop
mov
scas
loop
pusha
negl
fstl
ret
stos
inc
hlt
push
mov
mov
iret
pop
xchg
fadd
mov
sarw
in
pop
shll
bound
iret
pop
rcrb
cmp
xor
les
stc
gs
imul
dec
inc
cmp
mov
dec
pop
jns
and
imul
out
stc
pop
cmpb
and
mov
xchg
inc
aad
fnstcw
paddsw
adc
add
ja
loop
aam
stos
add
sbb
inc
xchg
sub
rcrl
adc
mov
into
xchg
shll
iret
dec
add
aam
dec
adc
or
mov
bndstx
jl
orb
or
aad
pop
add
mov
add
push
popf
inc
popf
mov
mov
orl
gs
add
push
stos
daa
push
cmp
imul
loopne
ljmp
mov
cwtl
pop
ror
sub
pushf
popf
pop
ja
jnp
push
add
data16
adc
add
test
xor
jge
shrl
push
push
jmp
adc
lret
inc
mov
push
sub
mov
adcb
cwtl
cmp
loopne
or
sbbb
jnp
sahf
lods
sbb
out
lret
cli
jne
stos
ss
and
inc
mov
lea
lahf
aas
dec
fcmovnb
mov
ret
roll
int3
bound
mov
mov
push
push
push
mov
xor
mov
dec
hlt
clc
test
pop
call
xor
xchg
xchg
push
movsl
cs
push
push
loopne
or
jl
inc
or
outsb
rorb
aaa
mov
div
cmp
shl
mov
sbb
ja
dec
ret
jle
das
cld
push
lods
xor
lock
cmpsb
mov
jb
mov
inc
je
xor
movsl
inc
or
jns
je
fisttps
lcall
testl
insl
jmp
push
cmpsb
ss
cmp
mov
mov
mov
sub
jecxz
xor
gs
std
pop
push
jp
pop
xchg
pop
add
mov
xchg
in
push
js
in
push
mov
cmp
insb
mov
xchg
cmp
sbb
jp
pop
repz
jb
cmp
cmc
std
mov
jp
sbb
adc
mov
fistpll
js
daa
imulb
aam
mov
movsl
mov
dec
aad
push
ds
js
bound
pushf
aaa
lds
shl
sbb
adc
mov
add
fnstsw
mov
cmp
lds
es
sub
es
cmpl
mov
or
addr16
repz
jb
xor
cmpsl
popf
ret
mov
or
addr16
pop
push
jae
aaa
orb
pop
or
add
popf
pop
bswap
add
lods
cs
hlt
ja
and
dec
or
inc
sub
push
jle
xor
lds
and
jnp
add
jl
shll
std
pop
push
call
lcall
movb
cld
popa
inc
cs
das
xchg
xor
add
push
in
pop
mov
repnz
pusha
pop
cli
mov
lods
sub
add
ja
push
sub
sbb
pop
or
mov
daa
mov
pushf
cmp
cmp
rcll
leave
aas
cltd
mov
popa
repz
rorb
lea
sbb
pop
shl
cmp
insl
cmpsl
mov
ret
mov
mov
clc
je
psrld
retw
mov
loopne
out
lods
out
jb
mov
mov
inc
adc
mov
dec
sti
pop
addr16
sbb
andl
fisubs
out
mov
mov
ja
adc
test
pushl
push
orl
cltd
inc
cmc
fiadds
shlb
stc
cmpsl
pop
arpl
xchg
mov
push
mov
cwtl
fistpll
xor
rcrb
mov
jbe
nop
inc
cmp
in
or
push
add
int
jge
loope
pop
clc
sub
mov
dec
mulb
insl
call
sbb
sbb
mov
jb
fcomps
mov
jg
adc
aaa
fs
or
or
xchg
iret
and
les
std
sbb
cmpsl
jl
mov
mov
push
ljmp
fdivrl
jae
jmp
pop
in
lahf
rorl
sbb
mov
sub
cmp
mov
pop
fstpt
mov
in
repz
clc
sbb
jbe
orl
jae
fs
sti
dec
test
rol
lds
mov
scas
push
jle
add
jmp
xchg
movsl
in
insl
daa
adc
or
xchg
jp
mulb
pushf
rorb
push
orb
clc
arpl
iret
mov
mov
xchg
aas
push
lcall
fwait
leave
pop
std
ret
scas
lea
sbb
inc
sbb
test
cwtl
cmp
or
dec
or
cmpsb
push
inc
cs
sarl
das
mov
addb
push
and
pop
ss
jle
mov
lahf
cmp
mov
sub
inc
mov
jg
in
jbe
xchg
cmc
test
pop
enter
mov
mov
mov
jo
pop
add
fadds
shll
cmp
das
add
loop
push
aam
bnd
imul
cmpsb
out
xchg
js
sbb
mov
or
cmp
push
cld
mov
ljmp
cmp
pop
sub
notb
xor
xchg
pusha
inc
or
aas
sahf
and
dec
or
data16
cwtl
push
mov
shll
jp
test
pop
cli
inc
adc
cs
test
aaa
xchg
inc
or
push
rclb
fwait
sbb
ficoml
push
adc
in
fcmovne
or
mov
aas
push
ljmp
data16
mov
leave
ss
das
lret
cmp
mov
sub
ror
sbb
sbb
lret
push
inc
mov
and
fidivrl
lahf
dec
or
out
dec
data16
jge
call
cmp
sub
xor
hlt
aam
test
mov
xchg
cmp
mov
mov
ja
push
jnp
nop
or
mov
sbb
cld
push
sti
sbb
cmpsl
sub
mov
pop
xor
adc
lea
jne
out
xlat
lret
mov
icebp
stc
and
mov
xor
adcb
push
lret
xchg
cltd
cmpsb
lahf
inc
adc
dec
adc
sarl
fbstp
orl
pop
pop
and
cmc
arpl
mov
pusha
push
mov
jnp
push
add
mov
dec
sub
cmpsb
xor
push
adc
cmpsb
push
xor
rcll
fnstcw
dec
inc
adc
stc
cwtl
das
sub
and
xchg
inc
sti
add
outsl
cwtl
pop
add
jge
rorl
jmp
mov
sahf
xchg
and
push
mov
shlb
push
push
adc
sbbl
xchg
jo,pt
jecxz
inc
addr16
pop
cmc
xchg
jnp
pop
in
ficompl
loope
jae
cltd
inc
mov
or
frstor
lods
xchg
movsb
rorb
ror
lea
fcmovb
xchg
cld
pop
lcall
outsb
and
inc
mov
adc
lock
mov
jg
mov
lock
xchg
or
rcll
in
outsl
icebp
dec
icebp
mov
mov
stos
cmp
mov
mov
sbb
inc
or
push
push
ljmp
jge
out
jmp
call
and
sub
push
xchg
movsb
cmp
test
lea
dec
mov
mov
lcall
stos
sub
add
xor
push
sub
popa
cmc
adcl
arpl
dec
jae
inc
dec
xchg
sbb
adc
add
dec
in
hlt
call
adcl
mov
push
dec
popf
pop
clc
pop
xchg
xor
ja
movsl
ss
lret
mov
adcw
jo
jmp
shr
sbb
mov
cmpsl
xor
ret
xchg
enter
mov
dec
or
loop
fidivrs
add
xchg
addr16
dec
push
lds
mov
mov
jg
sarl
dec
push
roll
cld
in
xorl
cmc
mov
es
xchg
jne
into
sbb
lock
push
jbe
aas
pop
push
push
fwait
add
xor
fiaddl
pop
repz
cmp
cmc
jns
pop
add
pop
mov
xchg
or
cmp
fwait
inc
jecxz,pt
add
or
push
jge
fiaddl
jbe
pushf
js
out
lds
call
repnz
cltd
cmp
pop
mov
sub
pop
jge
push
outsl
loopne
pop
enter
xor
lods
xor
es
pop
out
sbb
mov
ljmp
jns
mov
xchg
aaa
out
jae
test
add
sub
addr16
cmp
arpl
andb
sub
repz
mov
negl
fisubrl
cmpsb
mov
mov
mov
cmp
or
pop
insb
icebp
dec
pop
mov
or
sub
into
mov
in
jno
fidivrs
cmpsb
jg
test
push
mov
insb
icebp
loop
mov
mov
orl
fnstcw
movsl
cli
adc
enter
xlat
sbb
cmp
xor
cmpsb
push
and
je
orl
dec
lods
arpl
sarl
lcall
shrb
loopne
mov
test
in
jbe
lcall
push
inc
or
aam
pusha
ljmp
xchg
cmp
inc
sub
je
dec
out
xchg
dec
loopne
lcall
sbb
mov
and
test
inc
test
cmp
loopne
pop
adc
in
sbb
jbe
cmp
lcall
and
or
aas
adc
pop
hlt
arpl
out
mov
jnp
mov
jne
add
cltd
xor
and
mov
pop
js
dec
stos
jle
insb
mov
iret
data16
shl
mov
pop
out
test
adc
mov
les
shl
dec
in
push
dec
loopne
sbb
push
mov
lahf
mov
test
repnz
pop
inc
pusha
ret
in
cwtl
mov
ja
mov
call
cmp
sbb
xlat
mov
pop
cmc
loopne
pop
lock
xor
ja
adcl
sub
test
push
mov
daa
cld
xlat
outsb
cs
shrl
dec
cmc
mov
mov
or
enter
ret
dec
out
xchg
dec
loopne
cltd
insl
add
out
pop
in
mov
pop
cmp
inc
jb
mov
pop
pop
adc
in
sbb
fbstp
cmp
lcall
and
or
aas
adc
rcrb
pop
hlt
bound
out
scas
cmpl
shlb
add
cltd
xor
and
sub
mov
pop
ja
dec
test
lret
cld
shl
mov
push
out
test
adc
mov
ret
sub
hlt
dec
in
adc
insb
add
addr16
cwtl
insb
mov
sahf
mov
test
icebp
or
cmp
adc
pop
inc
pop
ret
gs
xchg
mov
ja
mov
call
cmp
mov
pop
inc
xlat
lea
pop
cmc
pop
lock
dec
ja
adcb
mov
mov
dec
es
xlat
outsb
sub
dec
cmc
mov
mov
or
enter
ret
dec
out
xchg
dec
loopne
cwtl
insl
add
in
push
in
mov
push
cmp
inc
jno
mov
pop
faddp
pop
adc
in
sbb
fbstp
cmp
lcall
and
or
aas
movntps
rcrb
hlt
popa
jge
out
scas
cmpb
iret
jne
add
cltd
xor
and
dec
pop
jbe
dec
test
aad
scas
leave
iret
data16
iret
repz
sbb
adc
mov
ret
repz
dec
in
adc
loopne
sbb
data16
xchg
imul
ljmp
cmp
pop
ret
fs
xchg
mov
ja
mov
lcall
and
mov
xlat
mov
pop
cmc
fdivrp
pop
lock
jge
xor
push
jg
fwait
xor
cmpsb
mov
dec
and
inc
shrl
dec
cmc
mov
out
xchg
mov
or
enter
ret
dec
out
xchg
dec
loopne
xchg
insl
add
in
adc
aaa
test
ds
cmp
rcrl
in
pop
xor
jbe
cmp
lcall
and
or
aas
push
sub
rcrb
pop
hlt
pusha
jl
out
lods
cmpl
add
cltd
xor
and
dec
pop
jne
dec
cmpsl
jnp
insb
lods
enter
into
repz
sbb
test
adc
mov
shrl
repnz
notb
dec
loopne
pop
insb
add
addr16
xchg
push
and
test
out
or
inc
pop
ret
arpl
jl
mov
ja
mov
lcall
and
xchg
xlat
mov
pop
cmc
pop
lock
jl
xor
push
jg
lcall
movsl
mov
dec
and
inc
shrl
dec
hlt
mov
out
xchg
lahf
adc
push
repnz
and
ret
dec
in
xchg
dec
loopne
xchg
insb
add
in
adc
aaa
test
cmp
mov
pop
ret
pop
pmulhuw
jnp
xor
jbe
aaa
add
mov
and
or
ds
sub
rcrb
pop
repz
jl
out
lods
cmpb
into
jne
add
cwtl
das
push
and
dec
pop
jne
dec
cmpsl
jp
imul
mov
sbb
test
adc
lahf
jb
mov
les
cmc
adc
inc
push
insb
add
addr16
xchg
imul
aas
out
or
inc
pop
ret
in
xchg
scas
loopne
loope
add
xor
and
xchg
xlat
mov
pop
cmc
fdivr
pop
lock
jl
xor
jle
lcall
movsb
mov
dec
and
insl
sub
push
jge
out
xchg
sahf
adc
sbb
aas
sub
jo
dec
in
xchg
dec
loopne
xchg
insb
add
jecxz
adc
mov
sbb
test
cmp
aas
outsb
mov
pop
rcr
pop
push
jecxz
jnp
xor
jbe
add
mov
and
pop
fstpt
aad
sub
rcrb
pop
repz
jnp
out
lods
jg
adc
rcrb
sub
mov
push
je
dec
cmpsb
js
imul
repnz
sbb
xchg
test
insl
or
mov
ret
repz
inc
adc
add
push
and
mov
movsl
cmp
or
ret
pop
lea
jl
scas
loope
loopne
add
xor
push
mov
push
inc
xlat
mov
pop
cmc
pop
icebp
sub
jl
cs
js
jl
lcall
mov
mov
and
insl
sub
jbe
hlt
mov
lock
pushf
adc
sbb
xor
and
dec
in
xchg
insb
add
loope
call
out
and
xor
sbb
insb
xchg
mov
loope
jnp
loopne,pn
pusha
xor
cltd
gs
mov
aam
mov
fnstcw
aad
daa
cmp
pop
sub
jns
out
stos
jge
adc
rcrb
sub
and
dec
movsb
jbe
imul
repnz
sbb
xchg
adc
pushf
outsb
das
lahf
mov
dec
in
cmovnp
inc
adc
popa
imul
xchg
mov
push
out
test
ljmp
pop
cmp
pop
in
nop
lods
loop
fbstp
add
xor
pop
mov
push
inc
xlat
xchg
cmc
fdiv
pop
repnz
cli
jl
sub
jns
jnp
lcall
mov
mov
and
insl
es
shrl
inc
hlt
mov
icebp
mov
lcall
sbb
xor
push
cmp
les
dec
in
mov
mov
loopne
add
in
and
xor
push
data16
cmp
mov
pop
mov
jnp
loope,pn
pusha
xor
cltd
arpl
and
add
daa
cmp
pop
sub
jns
lock
jnp
adc
into
cwtl
das
add
xchg
sub
push
jb
dec
movsb
je
imul
repnz
sbb
mov
adc
pushf
insb
das
popf
mov
dec
in
cmovl
inc
adc
popa
push
xchg
arpl
pop
out
test
call
or
pop
cmp
pop
mov
mov
add
xor
and
adcl
test
cmc
negb
clc
jl
sub
adc
lcall
sahf
mov
dec
and
insl
and
aam
jne
hlt
mov
repnz
cwtl
adc
sbb
xor
sbb
lds
dec
in
mov
insb
add
loopne
add
jecxz
and
ss
push
mov
pop
mov
fucom
jnp
loop,pn
pusha
xor
cltd
popa
addl
mov
rcrl
mov
aad
aad
es
push
daa
pop
repz
js
icebp
test
lret
cld
int3
cwtl
das
sbb
mov
push
jo
dec
mov
ret
shrl
notl
repnz
adc
lcall
dec
in
or
insl
add
pop
imul
popa
mov
xchg
mov
and
mov
inc
out
test
aaa
pop
enter
pop
mov
jge
stos
in
add
xor
mov
push
inc
fadds
movsb
pop
not
hlt
pop
repz
inc
jp
jns
fwait
xor
das
int3
popf
mov
dec
pop
icebp
xlat
outsb
and
imul
mov
repnz
xchg
adc
sbb
xor
sbb
lds
dec
out
mov
mov
rcr
add
loop
and
mov
fs
cmpsb
cmp
mov
fsub
jl
sub
jns
das
add
mov
and
add
aas
add
es
hlt
push
jbe
icebp
cmpsl
js
adc
lret
cltd
xor
sbb
dec
push
outsb
mov
mov
rcl
repz
hlt
mov
adc
mov
adc
cwtl
imul
dec
out
or
cmp
outsb
add
pusha
mov
xchg
mov
and
mov
inc
in
test
xor
push
pop
mov
jle
test
add
cltd
sub
dec
and
andb
not
repz
repz
jge
sub
adc
fwait
xor
cwtl
das
lret
pushf
mov
dec
push
lock
outsb
and
imul
mov
repnz
xchg
adc
pop
jmp
lds
dec
out
mov
lea
mov
loope
and
xor
inc
data16
pop
mov
frstpm(287
jl
sub
jns
add
scas
andb
mov
push
mov
sarl
add
cmp
push
and
pop
icebp
cmpsb
ja
adc
lret
cld
sbb
dec
dec
insl
mov
lahf
jo
insl
mov
ret
hlt
mov
adc
mov
adc
xchg
push
cs
dec
out
or
cmp
add
mov
and
mov
inc
in
test
xor
leave
pusha
aaa
push
pop
xchg
jle
test
jnp
stos
add
cltd
sub
and
jg
inc
fadds
mov
pop
repz
jge
daa
inc
jp
ja
fwait
xor
cwtl
das
lret
push
int
mov
sbb
aas
aam
jno
cmc
mov
mov
xchg
adc
push
call
lds
dec
out
mov
mov
mov
loopne
and
xor
inc
andl
mov
jl
sub
jns
sub
add
mov
push
mov
sarb
add
cmp
push
and
hlt
push
je
icebp
movsl
jbe
adc
leave
cltd
xor
sbb
dec
dec
insb
mov
sahf
outsl
insl
mov
ret
hlt
adc
mov
stos
inc
adc
cwtl
mov
dec
out
or
cmp
outsb
add
lea
and
mov
inc
jecxz
test
xor
pusha
ss
pop
xchg
jle
cmpsl
in
fldcw
add
cs
and
sbbb
not
icebp
pop
repz
jge
es
jp
jbe
fwait
xor
cwtl
das
leave
lcall
sbb
xlat
outsb
and
aam
jo
cmc
mov
repnz
xchg
adc
adc
aaa
lds
dec
out
mov
mov
mov
fisttps
pop
popa
xor
cmp
mov
les
fxam
jl
sub
jns
sub
lcall
and
call
aas
add
cmp
hlt
push
jae
repnz
je
adc
cltd
xor
sbb
dec
dec
imul
lahf
mov
hlt
mov
adc
mov
adc
xchg
gs
xchg
mov
out
dec
out
or
cmp
outsb
add
mov
mov
stos
inc
loope
test
pusha
xor
pop
test
jle
cmpsb
in
fsubrs
add
sub
and
jle
aas
iret
lahf
pop
not
lock
hlt
and
jge
and
jnp
jne
fwait
xor
cltd
xor
cwtl
mov
dec
sbb
xlat
outsb
push
cmp
cmc
mov
repz
xchg
adc
adc
xor
push
ss
addr16
dec
out
mov
mov
fisubrl
or
mov
ucomiss
inc
bound
pop
mov
lds
in
or
jecxz
pop
sub
lcall
and
dec
aas
lcall
ds
and
push
jno
repz
ret
jp
cmc
lds
xor
mov
dec
fwait
imul
popf
mov
cmc
mov
pmuludq
inc
bound
test
xchg
mov
in
push
out
push
dec
out
pop
outsl
push
cmp
add
pop
lea
stos
mov
test
popa
xor
pop
adcl
movsb
in
cmpsl
push
popf
fdiv
add
sub
mov
jge
aas
int
pusha
test
icebp
jle
and
adc
pushf
xor
cltd
xor
xchg
mov
dec
sbb
fsubrs
cmp
insb
insl
testb
xchg
adc
ret
test
in
leave
adc
ss
out
xchg
mov
outsb
add
or
mov
push
sub
and
stos
inc
popa
jg
ds
enter
lds
out
or
jecxz
pop
sub
pop
jns
cwtl
stos
jnp
mov
cld
int
xlat
sbb
pop
notb
pop
repz
sarl
les
xor
mov
dec
cltd
push
outsl
pushf
mov
testb
adc
test
xchg
mov
jecxz
push
call
xor
push
insl
add
pop
mov
fldt
inc
cs
bound
dec
pop
adcl
jl
cmpsb
pop
sahf
xlat
cmc
add
sub
mov
jl
aas
lret
popf
popa
clc
into
in
pop
hlt
sbb
aas
jnp
jno
popf
xor
xchg
cltd
xor
xchg
mov
dec
pop
ljmp
imul
mov
fists
test
jecxz
lret
das
arpl
dec
in
xchg
mov
fisttpl
and
inc
pusha
jge
ds
or
pop
add
out
pop
and
jp
sub
cwtl
test
and
cli
int3
inc
fdivr
sbb
aad
push
pusha
testl
jle
mov
ret
pushf
xor
adc
push
dec
gs
xchg
imul
insb
ljmp
mov
pop
adc
xchg
mov
loope
push
jmp
xor
insl
add
pop
mov
lods
inc
test
bound
dec
pop
adcb
test
pop
sahf
hlt
add
sub
mov
jnp
aas
lret
clc
int
pop
hlt
sbb
jg
and
jnp
jo
popf
xor
xchg
cltd
xor
xchg
mov
dec
push
jmp
aad
push
testl
rcr
test
loop
lret
das
bound
call
mov
outsl
push
mov
fimull
and
stos
inc
pop
jl
ds
or
mov
lds
out
push
and
jp
daa
add
cwtl
cmpsl
jns
mov
stc
lret
inc
fdivr
sbb
aad
sbb
pop
repz
outsl
jle
mov
ret
hlt
adc
push
inc
fs
xchg
push
aad
jmp
or
mov
push
lods
aas
pop
adc
xchg
scas
xor
loopne
push
jmp
xor
or
push
insl
add
push
mov
lods
inc
fdivr
test
bound
dec
pop
jg
jmp
jl
movsb
pop
sahf
aad
add
sub
mov
jp
aas
leave
fwait
popa
clc
int3
ljmp
and
popf
xor
nop
cltd
xor
xchg
mov
dec
adc
aaa
aad
imul
repz
adc
adc
das
popa
xor
orb
test
mov
imul
and
stos
inc
pop
jnp
lods
jg
pusha
mov
lds
out
add
es
cwtl
cmpsb
js
mov
clc
lret
sti
sbb
aad
sbb
testl
jle
mov
rcrl
adc
push
inc
arpl
jo
mov
insb
call
or
mov
or
adc
nop
scas
xor
fbstp
dec
out
add
xor
push
mov
lods
inc
test
bound
dec
pop
jle
jmp
jl
mov
add
daa
inc
and
jns
aas
enter
dec
cld
fistpl
outsb
iret
push
push
mov
out
jns
lods
sbb
incb
dec
pop
call
pop
fs
imul
adc
inc
addr16
mov
xor
clc
adc
mov
push
or
push
jmp
imul
fistpll
add
das
sbb
xchg
das
test
mov
negl
call
inc
fbstp
adc
dec
dec
push
ret
or
inc
jb
push
in
ljmp
cld
and
outsb
lods
mov
ja
dec
enter
test
xlat
push
stos
mov
jge
cmc
cmp
scas
pusha
inc
test
out
stos
add
or
cmp
jp
xchg
jecxz
sub
add
stc
imull
bnd
dec
movsl
cli
icebp
fildll
and
or
mov
push
int3
push
subl
mov
mov
dec
jb
out
fsubl
dec
rorl
mov
jae
dec
cwtl
push
in
xor
fimull
dec
mov
in
ret
xor
mov
sub
aaa
and
pop
adc
and
jp
pop
sub
jnp
cld
sbb
inc
add
pop
adc
int3
inc
adc
inc
xor
dec
fsubl
and
fisttps
adc
xorl
gs
inc
pop
movsl
sarb
sub
pop
and
in
popa
adc
ja
outsb
cwtl
adc
adc
mov
enter
adc
fcmovne
movsb
push
stos
in
int
aam
jb
push
push
dec
ljmp
cmpsl
lret
push
daa
sahf
xor
adc
pop
fwait
sub
mov
shl
scas
pop
or
xchg
hlt
ss
lock
outsb
push
adc
sbb
gs
jo
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
dec
pop
mov
testl
inc
cmc
add
inc
and
and
xchg
jp
fldcw
loope
push
orb
mov
loope
rcll
adc
aad
adc
outsl
xchg
rorb
insl
inc
insl
xchg
mov
inc
imul
cmp
sbb
or
cmpsb
mov
jnp
loopne
stos
xchg
jns
int3
cmpsl
pop
mov
psubb
push
cmp
or
cld
cmp
dec
ljmp
or
push
adc
addr16
sti
push
ss
andb
sbb
outsl
xor
aam
loopne
push
insb
xchg
push
test
xchg
insb
push
dec
or
loope
enter
jp
cmpb
jge
adc
cmp
mov
ljmp
je
or
mov
push
in
dec
sub
mov
sub
or
xor
lock
cli
inc
loope
pop
into
mov
add
push
sbb
dec
iret
mov
or
mov
stc
outsb
outsl
iret
xor
test
push
adc
add
mov
pop
pop
inc
inc
xor
stc
psadbw
lret
mov
divb
pusha
nop
lret
sub
jns
cmp
into
and
repz
clc
and
pop
mov
es
push
gs
sub
out
sahf
aaa
scas
pop
lds
dec
dec
add
lcall
jmp
dec
int3
pop
popa
push
outsb
push
mov
test
cmpsl
mov
test
scas
xor
pop
cmp
loope
xchg
test
cmc
lods
adc
add
xor
mov
mov
fbstp
mov
push
cmpsl
xor
and
pop
scas
enter
xchg
add
and
sub
insl
clc
add
ds
hlt
lcall
inc
pop
jp
imull
out
jl
adc
fstpt
jno
daa
push
out
leave
mov
sub
inc
into
cltd
mov
mov
shll
xlat
mov
stos
dec
in
dec
xchg
insl
push
aaa
add
lret
stc
xchg
int3
iret
mov
cwtl
dec
xchg
mov
xor
ret
mov
lret
hlt
or
aaa
out
mov
ss
lret
cmp
std
les
lret
ja
jmp
cltd
push
fldenv
out
adc
add
lds
lea
insl
sbb
std
jp
jmp
or
cmpsb
lock
stos
pop
lods
xchg
jo
notl
adc
stos
lea
jae
insb
shll
pop
incl
adc
in
out
mov
loopne
pop
and
push
icebp
xor
xor
aad
imulb
shrb
mov
ljmp
test
add
cmp
in
sbb
loop
push
mov
jmp
cmpsl
in
mov
call
nop
jno
mov
mov
dec
mov
dec
mov
mov
cmp
shll
aaa
orb
fbld
pop
les
inc
mov
mov
mov
sti
into
xor
std
icebp
jbe
xchg
cmp
je
cmp
fnstenv
adc
out
fidivs
test
cs
scas
mov
sub
mov
ljmp
daa
mov
cmp
daa
mov
push
cmpsl
xor
mov
movsl
cld
mov
ja
pop
mov
pop
mov
cli
out
cli
lock
mov
das
add
aam
das
pop
pusha
fcoms
sahf
bound
cmp
xchg
cli
and
fldl
dec
mov
cmp
mov
stos
xchg
dec
cmp
push
jo
jmp
cmp
pop
lods
lods
das
je
aad
rcrl
sub
daa
mov
xor
cmpsl
std
jl
add
mov
cmpb
mov
outsl
js
adc
test
pop
in
inc
ret
and
mov
sub
cmpsl
pop
icebp
int3
daa
lea
xor
cmp
inc
add
mov
mov
mov
jp
sub
xlat
cmpsl
xor
sahf
pop
mov
add
icebp
test
inc
push
js
adc
jo
jno
pop
or
iret
mov
push
mov
xlat
dec
scas
push
mov
lods
repz
inc
std
and
add
or
dec
sub
sbb
rorb
mov
pop
bound
cli
repz
xchg
add
cwtl
into
clc
jg
insb
sarb
sub
xor
dec
push
inc
mov
push
push
inc
repnz
pop
arpl
adc
psrld
xor
jns
mov
pop
insb
xchg
mov
out
shlb
jno
and
fdivl
lods
add
adc
iret
mov
jbe
mov
fst
in
lahf
daa
cmpsb
mov
pop
dec
fs
sub
mov
pusha
pop
and
sub
push
std
pop
xchg
sub
scas
lods
add
jno
gs
out
jne
arpl
xor
add
xchg
add
mov
mov
cmpsl
add
add
fs
mov
sti
lock
cmpsl
pop
fmulp
jns
test
testl
sub
inc
cld
insl
pop
movsl
bound
scas
xor
pop
mov
mov
push
mov
cli
int3
lods
mov
out
aam
lret
cli
jno
push
je
mov
xchg
fiadds
inc
or
mov
sub
sarl
pop
notb
pop
inc
sbb
lea
in
mov
sbb
xchg
mov
sub
inc
add
in
lahf
sbb
incl
cmp
enter
std
mov
lods
xchg
aad
les
inc
sti
pop
mov
mov
dec
push
or
mov
idivl
ret
lret
and
fnstcw
mov
out
out
rol
dec
es
sbb
dec
cmp
and
xor
xchg
mov
mov
push
fwait
inc
dec
popa
adc
out
sahf
push
inc
popa
addr16
ficomps
mov
pop
mov
jnp
negb
mov
mov
dec
cltd
jno
adc
mov
ljmp
int3
dec
call
movsb
sahf
pop
ljmp
jbe
push
mov
daa
fildll
xor
imul
stc
add
fcomp
cwtl
mov
push
std
and
into
cmpsl
lods
outsb
fnstcw
dec
int
cltd
xchg
xchg
addr16
pop
loope
xlat
sarb
jns
jge
popfw
outsb
ret
dec
add
dec
add
lahf
dec
add
mov
mov
lret
lods
add
lods
lret
stos
sub
push
cltd
cmpb
mov
es
mov
cmpsb
pop
int
shlb
and
jb
mov
mov
xor
mov
