nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
mov
mov
pusha
call
add
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
pop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
mov
lea
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
jmp
ret
xor
mov
sub
mov
mov
shl
xor
sub
mov
mov
movl
mov
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
push
pop
jbe
popf
push
pushl
decl
ret
or
sub
push
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
add
lea
sub
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
xor
cmp
je
sub
mov
push
push
push
pop
push
pop
stos
pop
pop
subl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
lea
add
call
add
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
add
pop
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
add
mulb
add
call
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
add
add
add
sub
add
add
inc
and
add
add
add
add
pusha
and
add
add
add
and
add
and
add
and
add
add
adc
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
jo
add
movsb
and
add
and
add
add
adc
add
mov
and
add
and
add
and
add
and
add
and
add
and
add
add
mulb
add
call
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
add
add
add
sub
add
add
inc
and
add
add
add
add
pusha
and
add
add
add
gs
popa
jae
inc
jb
outsl
jb
add
je
inc
jbe
outsb
je
add
aad
inc
imul
add
insb
outsl
jae
dec
popa
outsb
fs
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
popa
je
inc
imul
jns
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
gs
outsl
jbe
inc
imul
jns
add
dec
add
popa
insb
inc
insb
popa
addr16
add
add
je
imul
bound
gs
add
call
inc
imul
bound
gs
add
cmp
push
jb
jbe
je
push
jb
imul
inc
add
add
gs
outsl
insl
insl
inc
jb
popa
imul
push
push
je
imul
inc
add
movsl
add
je
gs
imul
roll
dec
gs
jo
jb
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
rolb
insb
outsl
bound
dec
outsl
arpl
add
inc
jne
jb
outsb
je
push
add
pop
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
repnz
imul
jb
je
arpl
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
pop
or
jae
dec
gs
popa
addr16
add
mov
dec
jae
imul
jae
popa
addr16
add
xchg
inc
gs
imul
js
push
add
cltd
push
inc
gs
insb
addr16
jb
arpl
int
dec
outsl
popa
fs
jne
jae
jb
add
push
gs
jne
jae
jb
outsl
jae
add
dec
gs
popa
addr16
add
movl
outsl
insl
gs
mov
inc
imul
dec
gs
popa
addr16
add
rolb
jae
imul
jnp
push
gs
outsl
arpl
add
sbb
ja
jo
imul
pop
inc
gs
imul
outsb
addr16
add
push
push
inc
push
xor
cs
insb
add
add
inc
popa
outsb
arpl
add
add
dec
inc
jb
outsl
jb
add
add
dec
inc
outsl
outsb
outsb
arpl
or
push
push
dec
inc
imul
arpl
push
dec
push
inc
dec
xor
cs
insb
add
or
dec
jae
popa
je
push
push
inc
add
push
dec
push
push
dec
cs
insb
add
test
test
mov
sbb
xor
pop
jmp
outsb
rcl
addr16
shrl
xchg
ret
loop
repz
mov
std
fwait
int
inc
sub
push
pop
push
xchg
sti
cmp
sub
mov
sbb
test
xchg
jl
inc
adc
xor
sub
jg
loope
jecxz
xor
mov
jb
mov
adc
xchg
out
mov
gs
inc
jmp
jae
jge
mull
arpl
mov
jmp
cmp
dec
mov
lret
mov
cmpsb
push
gs
mov
ror
xchg
jp
jge
cmpsb
sahf
lahf
idivb
pushf
mov
pop
fwait
mov
aaa
mov
pop
pop
push
or
mov
mov
sbb
jno
mov
popaw
xchg
sahf
jb
sbb
cmp
push
pushl
mov
jp
jno
lret
dec
leave
xor
inc
dec
out
sti
clc
and
dec
dec
fistpl
and
or
mov
roll
daa
jge
jno
incb
push
and
in
arpl
inc
push
test
sbb
fldt
or
push
inc
xor
cmp
int3
mov
jb
sahf
dec
shll
cs
mov
iret
jl
inc
loopne
leave
push
enter
shlb
mov
mov
inc
nop
sub
sahf
in
dec
and
setp
xor
ds
aas
cwtl
scas
loopne
loope
addr16
loopne
and
xchg
imul
mov
mov
pusha
mov
fidivrl
repz
or
sti
shll
out
mov
stos
dec
cltd
popf
xchg
jp
jge
jp
add
rorl
dec
insb
mov
ja
jo
sbb
sub
fisttpll
ss
mov
add
add
add
add
xor
add
add
add
jo
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
or
add
adc
add
or
add
and
add
or
add
add
add
add
add
add
add
add
push
popa
add
test
add
clc
xchg
add
add
add
add
add
or
add
mov
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
sub
add
mov
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jge
jnp
jp
stos
stos
lods
add
cmpsb
push
mov
mov
mov
ret
ret
lret
int
int
rcl
shr
rcl
shl
ror
iret
hlt
int3
into
into
hlt
leave
enter
enter
in
mov
mov
lods
stos
lods
lea
cltd
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
out
leave
lret
not
rcl
cld
xlat
xlat
xlat
std
xlat
xlat
fcom
fdivr
rcl
iret
dec
int
aad
rcl
iret
inc
ret
ret
mov
mov
iret
mov
xchg
and
add
push
add
add
add
add
add
add
add
add
lods
lods
stos
add
lods
scas
sbb
mov
jnp
mov
mov
dec
lret
ror
sar
aad
xlat
xlat
fdivr
xlat
call
aad
int3
int
dec
int
call
aad
dec
int3
into
mov
mov
mov
std
test
cmpsl
ljmp
pop
or
or
add
add
add
add
add
pop
add
add
add
add
add
add
push
pop
pop
add
inc
add
pop
add
push
or
inc
or
sbb
push
add
add
add
or
or
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
enter
into
call
rcl
call
fcom
fcom
xlat
call
aam
dec
into
into
dec
lret
int3
int3
into
inc
mov
rol
mov
mov
jmp
mov
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
imul
fs
sbb
das
or
sbb
cmp
cmp
adc
add
add
add
add
fs
mov
pop
mov
mov
mov
mov
mov
mov
inc
mov
call
aam
call
aam
dec
ror
dec
enter
mov
mov
mov
ljmp
mov
popf
xchg
cwtl
xchg
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
outsl
xor
jl
jg
jle
jno
jno
bound
mov
cmp
inc
inc
mov
outsl
outsb
outsb
nop
popa
arpl
inc
inc
inc
xor
add
add
add
add
movsb
movsb
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
leave
lret
dec
lret
enter
ret
mov
mov
ljmp
mov
fwait
call
xchg
xchg
xchg
xchg
xchg
lcall
lahf
cmp
or
add
add
add
add
add
add
add
add
add
add
add
outsb
outsb
outsb
add
pop
or
pusha
xchg
mov
incb
jl
idivb
jnp
outsl
outsb
jo
addr16
push
jae
jg
jge
jns
jns
arpl
inc
inc
inc
cmp
sbb
sbb
adc
or
lods
lods
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
test
lcall
nop
incl
addb
xchg
xchg
xchg
sahf
lahf
sahf
sti
mov
cwtl
xchg
mov
jns
jp
cs
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
addl
in
mov
mov
addb
decb
xchg
jge
jge
jo
jb
jae
jne
jg
jle
addb
pushw
cmp
cmp
and
jge
cmp
movsl
mov
test
stos
stos
stos
sti
lods
lods
stos
stos
lods
lods
stos
test
movsl
std
fwait
cltd
fwait
xchg
xchg
xchg
decl
jle
js
js
jp
jp
mov
cwtl
movsl
movsl
movsb
mov
mov
mov
mov
mov
mov
mov
scas
scas
stos
xchg
sbb
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
xchg
incl
xchg
std
xchg
xchg
xchg
std
cwtl
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
addl
mov
push
pop
push
prefetchw
dec
insl
insb
imul
test
cltd
fwait
lcall
fwait
fwait
stc
std
mov
incl
mov
lcall
cmpsb
movsl
ljmp
mov
mov
mov
mov
std
mov
mov
movsb
movsb
mov
or
add
add
pop
pop
adc
test
mov
incl
xchg
decb
xchg
xchg
sahf
pushf
pushf
std
movsb
movsl
mov
out
xchg
xchg
xchg
in
xchg
nop
in
test
push
jne
femms
dec
add
inc
sub
sub
dec
dec
outsw
jb
test
xchg
xchg
rclb
xchg
std
nop
xchg
decb
xchg
xchg
lcall
movsl
cmpsb
ljmp
test
pushl
sahf
scas
mov
xchg
mov
mov
ljmp
mov
add
pop
adc
mov
jmp
sahf
cwtl
pushf
incl
mov
call
nop
xchg
xchg
xchg
popf
sahf
pushf
movsl
movsl
movsb
test
test
mov
cwtl
cwtl
fstpt
movsl
push
push
push
outsl
dec
dec
dec
popaw
bound
jo
je
jnp
jge
test
mov
xchg
xchg
in
xchg
xchg
testl
lea
jmp
mov
mov
pop
mov
xor
js
mov
movsl
mov
mov
lods
stos
mov
movsb
movsl
add
pop
pusha
adc
mov
ljmp
popf
decl
nop
call
xchg
xchg
call
xchg
lcall
lahf
mov
movsl
std
movsb
movsl
movsb
stc
cltd
lcall
mov
cwtl
aad
cltd
fwait
in
xchg
xchg
out
xchg
cmc
nop
mov
cld
xchg
adcb
fwait
push
cmp
dec
jg
lods
inc
jge
mov
jp
mov
je
mov
outsl
ljmp
packuswb
lods
or
stos
or
mov
jle
mov
mov
stos
pushf
mov
movsb
movsb
add
mov
add
pop
adc
mov
lcall
xchg
xchg
call
cltd
lcall
sahf
lcall
cltd
lcall
xchg
xchg
decb
xchg
xchg
xchg
cwtl
fwait
cld
cwtl
cltd
pushf
stc
mov
xchg
popf
cld
sahf
mov
xchg
insb
mov
xchg
pop
jle
xchg
dec
js
lcall
pushf
pop
addr16
lahf
pop
jmp
arpl
test
ljmpw
adc
scas
adc
mov
imul
adc
pushl
jg
rcrb
imull
mov
mov
add
pop
pop
adc
mov
jmp
xchg
xchg
lcall
lahf
sahf
jmp
movsl
jmp
xchg
cwtl
decl
mov
decl
js
lcall
xchg
push
jns
xchg
cmp
imul
pop
pusha
call
or
push
pop
call
add
mov
adc
lods
sbb
mov
outsl
pushl
outsl
mov
and
and
shll
inc
inc
test
les
cli
scas
scas
lods
mov
lahf
sahf
sahf
add
add
add
add
add
pop
pop
adc
lods
mov
shll
lcall
movsb
movsb
ljmp
cmpsb
test
stos
test
ljmp
pushf
pushf
call
pop
jbe
mov
decl
arpl
mov
decl
or
push
incl
add
mov
pop
call
add
cltd
add
sahf
add
test
pushl
es
mov
sub
shrb
les
jnp
sub
jg
leave
cs
inc
mov
mov
cld
scas
mov
lret
movsl
dec
mov
mov
add
add
add
stos
movsb
stos
add
adc
cmpsl
lods
ljmp
lahf
jmp
stos
test
ljmp
mov
ljmp
mov
mov
mov
incl
or
incl
add
push
incl
push
decl
add
xchg
add
xchg
add
cltd
add
mov
add
ljmp
sub
mov
aaa
cmp
cmp
dec
cmp
call
cmp
mov
rorb
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
mov
mov
sahf
cltd
popf
jmp
lods
scas
pushl
mov
pushl
mov
ljmp
ja
decl
push
decl
push
pop
incl
or
add
xchg
push
decl
add
xchg
add
popf
add
mov
add
lods
add
jb
les
xchg
lret
dec
inc
call
inc
call
dec
mov
fmuls
call
dec
xchg
fimull
fmull
ficoml
call
test
mov
mov
mov
mov
mov
add
add
add
inc
inc
adc
jl
mov
test
lcall
stos
stos
pushl
mov
pushl
mov
mov
mov
jmp
outsb
decl
sbb
xchg
pop
popa
decl
adc
mov
push
decl
add
xchg
add
pushf
add
mov
add
test
pusha
pushl
and
nop
call
push
cwtl
call
push
cltd
ficoml
fcoml
jmp
push
pushf
ficoms
jmp
pop
mov
jmp
pop
lahf
fadds
mov
cmpsl
jne
sahf
lahf
or
xchg
xchg
xchg
add
inc
adc
jns
mov
mov
lahf
ljmp
mov
pushl
mov
mov
pushl
movsb
call
arpl
xchg
and
call
and
xchg
sbb
nop
or
xchg
add
xchg
add
fwait
add
mov
add
lods
add
mov
gs
mov
xor
fcomps
ficompl
fbld
fbld
jmp
fs
jecxz
test
call
push
jmp
push
mov
int
ret
mov
test
lahf
sahf
sahf
adc
xchg
xchg
xchg
add
aas
adc
jae
cltd
xchg
cwtl
call
sahf
fwait
popf
ljmp
mov
pushl
mov
mov
mov
mov
jle
xchg
sub
fwait
xor
fwait
das
outsb
call
push
callw
add
lcall
ljmp
add
mov
pushl
adc
rolb
fldt
jmp
jo
jmp
jno
call
jb
in
je
jmp
mov
out
jbe
out
jne
in
jae
jmp
xchg
mov
cmpsl
cmpsl
lcall
sahf
add
jge
cmp
adc
insl
js
mov
lcall
mov
mov
mov
mov
mov
mov
mov
cmpsb
scas
lcall
jo
sahf
cmp
mov
xor
fwait
sbb
pop
call
add
add
add
mov
arpl
mov
data16
mov
sbb
fistl
jmp
js
ljmp
jmp
mov
out
cmpb
lock
push
cmpl
call
mov
inc
mov
stos
cmpsl
pushf
pushf
popf
daa
sahf
sahf
lahf
add
add
add
add
aaa
cmp
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
mov
ret
inc
mov
lcall
cmp
movsb
inc
jle
mov
cmp
fwait
sbb
add
sahf
add
add
test
popa
ljmp
add
mov
add
iret
es
mov
in
mov
icebp
mov
push
pop
push
xchg
xchg
clc
xchg
clc
ret
pop
fidivl
clc
stos
lods
test
xor
popf
popf
add
add
add
cmp
push
inc
dec
inc
jb
pop
dec
in
imul
xchg
pushl
mov
mov
inc
inc
ret
mov
jle
lcall
cmp
dec
cmp
xor
pop
lcall
add
cmpsb
add
stos
add
mov
mov
add
leave
add
call
xor
out
xchg
cltd
push
fwait
lcall
negl
sti
lahf
int3
sti
popf
int
cld
cltd
leave
push
xchg
ret
mov
dec
enter
mov
mov
nop
nop
add
add
add
cs
cmp
dec
jecxz
pop
pusha
decl
mov
mov
mov
sar
ret
mov
inc
mov
lahf
lcall
dec
xchg
lods
dec
xchg
movsl
sub
cltd
push
pop
lcall
pop
ljmp
add
mov
add
movl
jne
loopne
xchg
in
lea
push
movsb
int3
push
movsl
int3
stc
cmpsb
int
cli
test
into
cld
cmpsl
sar
std
test
sar
test
push
popf
mov
dec
lret
mov
mov
sahf
lahf
sahf
dec
xchg
xchg
xchg
add
lcall
xor
sub
inc
inc
inc
bound
push
xlat
je
jb
mov
mov
ret
rol
ret
ret
inc
leave
leave
leave
inc
rol
mov
cmpsb
jmp
mov
scas
dec
xchg
mov
add
jmp
add
mov
fs
mov
add
int3
add
xlat
add
ficoms
jge
out
pop
test
cmc
popf
lret
cli
lods
sar
sti
scas
sti
scas
sar
cld
mov
mov
cld
mov
mov
std
mov
std
mov
mov
push
movsb
jmp
mov
call
lret
mov
mov
lahf
lahf
sahf
pusha
xchg
xchg
xchg
or
add
add
push
add
dec
dec
outsl
jo
mov
mov
aam
jmp
fcom
not
rcl
std
lret
int3
int3
dec
lret
leave
dec
lret
lret
dec
lret
mov
scas
jmp
push
mov
lods
cmp
lcall
add
lods
add
mov
arpl
mov
add
roll
outsb
call
add
fiadds
jae
call
jb
cli
lods
aad
cld
mov
fcos
cld
mov
fcos
std
mov
fdivr
mov
xlat
mov
fcos
stc
mov
jmp
mov
call
leave
int3
mov
sahf
lahf
jo
xchg
xchg
or
add
add
xor
add
pop
or
movb
jecxz
out
out
jecxz
out
loop
loope
fsub
fcomi
xlat
fcmovnu
cli
aad
std
int3
ror
mov
push
ljmp
sub
mov
add
mov
arpl
mov
add
lret
call
add
faddl
ja
jecxz
ja
out
xor
cli
mov
loopne
inc
std
loopne
std
std
dec
loopne
dec
std
leave
inc
fdivrp
std
leave
loopne
cli
mov
lret
leave
sar
mov
mov
xchg
adc
add
add
incb
std
incl
std
add
div
or
in
jmp
jmp
out
sub
out
in
dec
jmp
ljmp
jecxz
out
fcmovu
fucomi
ret
stc
lods
jno
cmpsl
cmp
movsl
adc
jmp
add
mov
fs
mov
add
int
insl
fadds
je
loopne
js
jmp
inc
pushf
cli
mov
loop
cld
int3
jecxz
std
int3
out
dec
in
dec
jecxz
dec
jecxz
dec
loop
shl
shl
call
in
std
shl
cli
fcos
out
mov
xlat
inc
ret
cmpsl
test
mov
xchg
xchg
add
add
add
incb
std
incl
idiv
testl
repnz
repz
in
icebp
out
pop
out
repnz
cmp
in
in
pop
loopne
loopne
les
sti
mov
push
pop
jmp
add
mov
fs
mov
add
add
flds
jne
in
jns
in
adc
negl
cli
mov
shl
cld
iret
jecxz
call
out
shl
std
shl
call
out
call
jmp
fucomi
fucomi
cld
shl
push
ret
aam
in
fcos
lret
repz
xchg
xchg
and
cwtl
cwtl
add
std
cld
add
stc
add
cld
stc
add
cmc
cmc
or
aam
xor
jae
negb
add
add
scas
add
mov
add
leave
add
roll
jo
fildl
jbe
out
js
out
sbb
stc
jbe
cli
cld
fldl2t
fucomi
std
fucomi
std
fucomi
fucomi
fucomp
fucomi
std
fsubrp
fsubrp
fucomip
cld
aam
push
ret
aam
out
rcl
sar
lods
lods
lods
lods
xchg
xchg
xchg
outsb
outsb
jo
xchg
xchg
xchg
add
loopne
add
mov
xchg
lods
jnp
repnz
and
mov
add
mov
mov
add
into
add
aad
jae
filds
je
call
sub
shr
fsubrp
fucomp
fucomi
std
fsub
cld
aam
shl
cld
shl
cld
iret
loope
clc
int
stc
int3
cmc
ret
in
mov
call
xlat
fdivr
mov
mov
cltd
cltd
lcall
lcall
mov
mov
add
mov
mov
lcall
add
mov
arpl
mov
add
iret
add
add
loopne
jns
ljmp
cld
xchg
sti
leave
loopne
cld
lret
loope
sti
clc
rcl
idivb
push
mov
sar
out
mov
int3
jmp
ret
call
shl
call
in
mov
mov
xchg
add
add
add
int3
int3
add
shrl
loopne
xor
jmp
add
mov
addr16
mov
add
int3
pop
jo
rorl
jne
ficoml
ja
loope
cmp
inc
xchg
jmp
mov
call
scas
leave
std
loop
scas
cli
fdivl
lock
int3
in
leave
into
fsubp
rcl
shl
aad
out
loope
in
out
test
in
out
popf
call
leave
leave
push
lods
stos
lods
adc
cmpsl
cmpsb
cmpsb
add
ret
mov
sahf
stos
aam
dec
cmp
cmpsb
push
imul
es
mov
jns
mov
inc
xchg
les
lret
test
mov
out
mov
mov
leave
lret
lret
rcl
lret
mov
int
mov
rcl
jg
fcmovu
jb
gs
jecxz
call
in
in
xor
div
mulb
lock
fcmovnu
or
mov
into
add
add
add
rol
mov
scas
mov
test
pushf
cmc
mov
jbe
ljmp
mov
sarb
mov
les
ret
rol
int
int3
jp
int3
shlb
ror
push
iret
rcl
dec
fcom
inc
rcl
aad
aam
xlat
daa
xlat
sbb
adc
in
push
fucomip
jecxz
out
jmp
add
cld
testb
std
std
add
std
incl
std
incb
mov
mov
shrl
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
rol
inc
ret
leave
xor
into
leave
daa
int
into
and
aam
iret
aam
adc
aam
or
xlat
aad
rcr
xlat
add
add
add
in
add
in
ljmp
std
add
mov
add
rol
ret
sub
mov
mov
push
rol
or
enter
movl
lret
aad
add
xlat
aad
rcl
aad
add
xlat
add
fabs
add
flds
loopne
loop
fiadds
in
call
add
std
add
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
les
mov
mov
ja
test
dec
test
xchg
xchg
pop
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
jmp
aad
cmc
rcl
sar
into
into
sar
lret
lret
lret
stc
lret
lret
mov
mov
iret
lods
lods
lods
fwait
xchg
xchg
xchg
dec
ds
cmp
sbb
add
adc
add
push
add
add
cmpb
inc
inc
inc
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
sarb
ror
sar
xlat
aad
call
aad
call
ror
dec
iret
into
dec
lret
sarb
cld
stos
lods
lods
icebp
cwtl
cwtl
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
je
jae
je
data16
dec
dec
dec
cmp
sub
sub
xor
dec
sub
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
ret
dec
lret
rcl
sar
rcl
aam
int3
int3
int3
inc
mov
rol
pushl
test
sahf
xchg
cwtl
xchg
jmp
jo
xchg
adc
add
xor
add
add
add
add
cmpb
jnp
jl
test
jns
push
imul
push
insb
insb
push
pop
pop
cmp
aaa
cmp
jo
jno
scas
scas
scas
pop
mov
mov
mov
mov
mov
rol
mov
inc
mov
mov
ljmp
lcall
xchg
xchg
xchg
fwait
cltd
cltd
out
addb
movups
xor
add
and
add
adc
add
pop
lcall
pop
popf
xchg
cltd
fcoml
addl
jmp
jns
sarb
jp
jp
jns
jae
jb
push
push
push
cmp
je
popf
sahf
popf
mov
scas
scas
rep
scas
scas
sti
lods
scas
scas
std
test
test
call
test
call
mov
lods
jmp
scas
lods
leave
movsb
cmpsb
cmpsb
cltd
jae
jae
adc
adc
add
add
add
add
outsl
outsl
outsl
pop
nop
mov
loop
lcall
mov
mov
xchg
xchg
xchg
lock
nop
fimuls
mov
jp
and
inc
inc
inc
inc
dec
jo
jo
lea
cltd
lcall
lea
call
popf
ljmp
scas
std
mov
scas
mov
xlat
cmpsb
mov
jg
pusha
popa
pusha
or
scas
mov
cmpsl
sahf
mov
decl
mov
std
sahf
sahf
sahf
sti
lahf
mov
cltd
call
push
push
push
jo
push
pop
outsl
insb
outsl
outsl
xchg
subl
nop
xchg
lock
nop
lcall
mov
pushl
pop
mov
jl
mov
scas
stos
insl
stos
test
add
add
add
popa
pop
popa
or
mov
in
mov
xchg
call
xchg
cwtl
lcall
cwtl
lcall
sahf
pushf
cli
xchg
xchg
cwtl
jmp
xchg
lea
jecxz
orb
xchg
push
cld
xchg
pop
jg
pushf
dec
jnp
movsb
inc
jns
lods
aaa
ja
mov
je
mov
insl
ljmp
sbb
mov
mov
scas
scas
jle
movsl
movsb
push
pop
popa
pop
or
mov
in
movsb
test
lcall
mov
mov
decl
orb
xchg
jb
cld
xchg
popa
cmp
dec
jp
nop
cmp
xchg
daa
push
call
push
ljmp
sbb
mov
outsb
pushl
push
jae
mov
pop
mov
lods
scas
xchg
sahf
sahf
popf
adc
add
add
pop
popa
popa
or
stos
mov
stos
mov
lahf
ljmp
stos
stos
jmp
xchg
cltd
decl
cmp
mov
arpl
mov
pop
incl
or
mov
call
add
fwait
add
cmpsb
or
mov
jae
mov
sub
jg
das
cmp
lret
inc
test
divl
cmpsl
test
pusha
popa
pusha
or
movsb
test
test
test
ljmp
mov
pushl
xchg
mov
decl
adc
test
push
incl
add
popl
push
call
add
add
mov
insl
inc
ss
inc
mov
into
inc
mov
aam
call
inc
xchg
fadds
call
bound
stc
mov
mov
mov
incl
add
add
popa
popa
popa
or
mov
ljmp
mov
pushl
mov
ljmp
push
jnp
mov
popa
call
push
pop
decl
add
xchg
add
mov
add
scas
add
mov
dec
xchg
fstps
ficompl
fistps
loopne
mov
jmp
insl
test
int
mov
ret
movsl
xor
add
add
dec
pop
jl
jp
pushf
cwtl
cltd
jecxz
lahf
mov
pushl
mov
mov
lcall
sub
lcall
and
xchg
push
pop
call
add
cmpsb
add
scas
add
mov
xor
jmp
insl
stos
jmp
outsl
stos
ljmp
in
jae
call
test
std
mov
test
addl
dec
dec
pop
insl
outsl
push
mov
cwtl
ljmp
mov
mov
mov
jne
lcall
jne
sahf
sub
xchg
or
lcall
add
lods
add
mov
inc
or
xchg
jmp
jns
ljmp
push
test
xrelease
fisubrl
mov
push
fwait
cltd
fwait
add
sub
sub
push
push
dec
pop
gs
xchg
mov
mov
mov
sarb
sarb
jmp
inc
jg
mov
pop
pop
jmp
add
mov
arpl
mov
adc
mov
push
xchg
push
cltd
cwtl
enter
enter
lret
push
xchg
jmp
stos
inc
mov
stos
popa
lahf
lahf
mov
add
xor
pop
pop
pop
fisttpl
mov
mov
rol
mov
test
movsl
push
mov
lods
dec
cmp
and
add
popa
pushl
push
fsubs
cmp
jnp
push
mov
into
stc
test
sar
cld
lods
iret
cld
stos
sar
cli
cmpsl
int
out
inc
rol
test
sahf
popf
or
add
add
dec
dec
dec
aaa
jae
jae
test
into
int
lret
into
lret
cmc
lret
int3
lret
lret
lret
leave
enter
mov
stos
pusha
ljmp
adc
add
mov
arpl
roll
dec
add
flds
jmp
xchg
std
mov
std
mov
xlat
cld
mov
xlat
std
mov
sar
jmp
enter
repz
lods
lods
mov
add
add
add
add
pop
or
aam
dec
jecxz
loopne
fistps
fcmovnu
xlat
out
shlb
test
or
scas
add
mov
add
aad
jb
loop
jp
icebp
dec
mov
std
ret
loope
inc
loopne
inc
loope
inc
dec
std
lret
cld
lock
leave
divb
pushf
pushf
sbb
add
add
incl
std
std
add
ljmp
in
in
in
xor
loope
in
mov
mov
mov
add
pushl
push
faddl
jbe
ljmp
sti
ret
std
shl
std
shl
call
in
std
aam
xlat
out
std
xlat
jmp
push
fcos
fcmovne
sar
mov
mov
and
add
add
std
incl
std
incl
std
cld
std
pop
aam
push
mov
pop
xchg
sahf
or
pusha
pushl
add
roll
outsl
filds
jne
out
pop
mov
stc
mov
std
shl
fldpi
fldl2e
cld
xlat
jmp
cld
fsubr
cld
fsub
sti
aam
push
jmp
rcl
sti
mov
popf
sahf
das
add
add
int3
into
into
or
bound
ljmp
add
movl
jae
loop
jns
out
xor
cli
lret
loop
clc
lret
loopne
cmc
hlt
aad
icebp
ret
std
lock
aam
in
out
ljmp
ljmp
stos
das
incl
aad
push
mov
jb
or
mov
insl
inc
sbb
lret
and
cs
loopne
lcall
mov
out
in
leave
jmp
fdivrl
lret
sarb
jecxz
fcompl
out
out
jns
rcl
dec
mov
add
add
mov
inc
mov
movsb
les
pop
xchg
mov
xchg
fidivrl
andb
int3
mov
les
aam
lret
insl
aad
int
aam
iret
dec
xlat
fcomp
cmp
das
jecxz
fisubs
jecxz
repnz
jmp
or
incl
std
add
mov
outsb
mov
stos
jns
mov
mov
mov
mov
xor
enter
aam
aam
mov
rcl
or
loope
or
int
add
std
incb
std
std
add
add
add
int
pextrw
or
into
into
into
add
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
rol
enter
leave
leave
mov
ret
ret
mov
mov
insb
stos
stos
stos
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
lods
lods
stos
add
mov
jmp
aad
aad
rcl
sar
int
int
vshufps
mov
test
gs
pop
pop
add
add
add
add
add
add
add
add
jb
jb
addr16
inc
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
int
call
rcl
dec
int
inc
enter
mov
jmp
mov
push
add
add
add
add
jne
jae
xchg
adc
outsb
outsl
ret
popa
mov
push
insl
jb
popa
pusha
cmp
pusha
sbb
mov
in
mov
mov
mov
lods
stos
lcall
xchg
xchg
lcall
cltd
cltd
lds
jno
and
add
pop
add
add
jb
je
fwait
xchg
fwait
mov
test
xchg
xchg
test
addb
push
dec
push
inc
mov
fwait
into
mov
mov
xchg
decb
lcall
test
cld
mov
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
adcb
mov
cmpsl
cld
mov
mov
xchg
xchg
xchg
cld
pushf
sahf
sahf
cmc
lcall
mov
push
push
imul
jg
lea
notl
mov
mov
cltd
pushl
jb
mov
lods
lods
push
stos
stos
lods
add
add
add
scas
test
xchg
xchg
xchg
call
cltd
cltd
lcall
cltd
lcall
mov
loope
je
out
nop
fs
push
jp
pushf
inc
jbe
movsl
cmp
scas
sub
mov
outsl
pushl
aaa
jnp
mov
mov
imul
into
add
xchg
pop
lods
movsb
lods
test
popf
sahf
sahf
jmp
movsb
movsl
call
push
decl
jb
lea
imul
nop
adc
xchg
or
mov
push
outsb
pushl
and
inc
sub
lds
xchg
rcrl
subl
je
push
movsb
pushf
mov
cld
test
scas
mov
mov
mov
mov
sub
adc
xchg
push
incl
add
add
mov
adc
shll
call
inc
mov
aad
call
push
xchg
dec
cwtl
mov
mov
mov
movsl
mov
add
imul
test
mov
scas
pushl
mov
ljmp
aaa
outsl
call
pop
pop
call
add
mov
add
mov
push
xchg
fstpl
jmp
pop
mov
jmp
cmpsb
call
lcall
test
cmpsb
pop
add
add
bound
adc
sahf
pushf
pushf
cld
mov
mov
mov
mov
scas
lcall
xor
cltd
and
xchg
or
lahf
add
add
mov
xor
jmp
jo
call
jl
push
jge
push
jg
ficompl
mov
and
add
add
dec
adc
addr16
mov
mov
mov
mov
ret
sar
mov
jmp
jge
mov
add
add
mov
fs
pop
insl
fimull
in
mov
push
xchg
xchg
push
xchg
jmp
movsl
mov
movsb
movsb
sub
aas
inc
aas
adc
push
xchg
xchg
cld
rol
inc
inc
mov
cwtl
ljmp
sbb
movsb
add
mov
fs
add
adc
jmp
lods
clc
cmpsb
into
cli
lods
iret
cld
lods
sar
sti
scas
sar
std
lods
iret
in
scas
lret
mov
movsb
ds
std
incl
xor
xor
jno
jo
scas
mov
mov
aad
aam
rcl
out
lret
lret
mov
mov
jmp
add
ret
add
aad
jae
out
xchg
clc
nop
mov
fdivr
std
rcr
inc
cld
ret
lock
ret
in
test
dec
cmpb
add
add
stos
stos
stos
add
jmp
or
out
call
outsb
fldenv
mov
add
mov
add
fiadds
sti
mov
dec
out
std
shl
shl
aad
call
in
hlt
leave
fcos
aad
int
scas
scas
scas
popa
jg
addb
add
incb
std
std
push
lret
int
sub
sahf
sbb
stos
add
mov
add
loop
jp
repz
movsl
std
loop
cld
aad
aam
std
aam
sti
shl
cli
shl
push
enter
int
repnz
mov
xchg
xchg
xchg
pop
mov
mov
cld
lods
add
insb
dec
or
cmp
insl
lods
cld
lock
aam
call
mov
shl
in
aam
ljmp
scas
push
cltd
cltd
lcall
add
add
pushf
lods
xchg
and
shll
lret
ja
mov
xlat
mov
int3
adc
int
xlat
int3
rcrb
rcl
dec
in
loope
call
out
in
sbb
mov
mov
scas
arpl
stos
mov
les
lds
ret
ret
fisttpll
into
into
int3
or
push
std
std
add
incl
stos
std
add
incl
std
std
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
std
adc
xchg
sub
arpl
dec
mov
rcl
repz
rclb
icebp
mov
fidivs
push
cld
xchg
scas
mov
sbb
and
iret
push
pop
push
xchg
jae
cmc
movsb
mov
pop
in
jl
testl
lds
mov
jp
mov
add
inc
push
pop
mov
gs
xchg
mov
xor
call
or
cmp
adc
outsl
push
mov
lea
in
mov
push
add
jno
lret
xchg
icebp
mov
test
xsha256
cmpsb
push
std
push
popf
cmp
mov
mov
fsubrl
push
hlt
pusha
mull
inc
jle
js
movsl
cmp
cltd
pushf
xor
ret
pop
or
mov
js
inc
fsubrs
jge
xchg
scas
xchg
testb
out
stos
sbb
cmp
push
cmp
leave
push
pop
lock
mov
mov
bndstx
and
add
pop
test
ds
and
outsl
and
push
nop
inc
fcmove
jae
out
mov
sbb
dec
lods
jg
fists
mov
es
fldcw
mov
test
jmp
adc
aas
pushf
xor
push
lods
js
mov
lret
into
gs
xchg
out
push
out
mov
outsb
add
cmp
pop
mov
nop
pop
mov
push
mov
lahf
fnstsw
mov
int3
std
push
push
lds
stc
nop
shlb
dec
jecxz
adc
iret
inc
subb
fs
in
xchg
aad
pop
pop
mov
or
sub
sub
les
pop
mov
pop
dec
loope
mov
es
push
inc
xor
push
push
jmp
inc
movsb
cmp
jb
xchg
ret
notl
ja
dec
scas
insl
pusha
mov
ja
andl
push
clc
lahf
xchg
sub
sbb
mov
and
sti
xchg
mov
les
in
xor
mov
or
sub
jae
pop
sub
mov
dec
ffreep
or
mov
jecxz
std
adc
aaa
mov
add
mov
xor
xchg
sub
jbe
mov
mov
adc
in
inc
add
arpl
fsubr
orl
sub
lahf
pop
sti
jmp
sub
dec
or
add
stc
push
repz
fsubl
arpl
jbe
sahf
xor
leave
sbb
ss
cmp
stc
nop
hlt
nop
adc
stc
nop
adc
ss
scas
addr16
xor
or
ficoml
or
sub
mov
inc
in
es
into
gs
lods
inc
add
in
orl
mov
stos
ljmp
mov
std
push
inc
fldl
mov
inc
ret
stc
hlt
dec
mov
sbb
mov
ss
push
out
inc
cli
xchg
jae
fdivl
xchg
sbb
xchg
out
int
mov
scas
out
push
jmp
or
into
cmp
push
in
mov
nop
daa
shrd
fbstp
scas
inc
bound
xchg
sub
or
mov
mov
test
ljmp
sub
lahf
pop
cli
in
subl
mov
jle
inc
lahf
sub
push
icebp
inc
frstor
jae
sbb
lahf
ss
xchg
sbbb
sbb
aaa
sbb
jae
cmp
xchg
repnz
jae
adc
mov
loope
xchg
adc
into
xchg
xor
scas
push
mov
cmp
pop
inc
fimull
xchg
xor
sarl
mov
sub
rol
jns
pop
add
pop
xchg
insl
add
ret
hlt
mov
pop
jecxz
mov
push
jmp
xchg
shrl
ret
repz
repz
nop
sarl
xchg
das
js
pop
popl
lcall
jne
popf
cs
in
pop
mov
jbe
lds
int
push
pop
icebp
pop
mov
xchg
fbstp
and
push
call
scas
rcr
je
iret
in
std
sub
xor
int
push
jns
xor
iret
dec
in
ret
jecxz
cmc
sbb
push
inc
insb
push
lods
cltd
gs
xchg
mov
sbbb
adc
lret
rcrl
ja
cwtl
popa
fbstp
mov
std
xchg
in
ds
outsb
inc
mov
jne
cmc
mov
test
mov
and
stos
pop
push
daa
mov
add
je
dec
pop
push
in
mov
adc
lret
and
lods
inc
mov
jne
or
jo
dec
pop
shrl
cwtl
rcrl
mov
dec
dec
xor
test
sbb
or
jge
and
fisubl
es
dec
sub
jge
jns
rep
scas
inc
xchg
cs
dec
iret
data16
xchg
sub
lods
sub
scas
inc
push
mov
pop
scas
popa
cmp
push
rcrl
push
out
hlt
cmp
popf
xor
mov
cltd
xor
cmp
add
lds
clc
inc
mov
je
pop
mov
fwait
xor
dec
movsl
cmp
sbb
dec
stos
dec
in
fsubrl
push
inc
fiadds
and
adc
add
add
add
and
xchg
sub
sbb
sub
sti
test
sub
cmpsb
scas
rep
cmp
jns
mov
sub
out
cld
mov
fsubrl
jg
push
scas
or
mov
mov
leave
pusha
add
notb
mov
fs
outsb
jno
lahf
push
es
popl
cwtl
mov
outsb
dec
out
sbb
jl
fucomp
jg
push
out
xchg
xchg
sti
xchg
leave
jecxz
data16
jbe
add
xor
hlt
mov
pop
stc
nop
mov
push
cmp
iret
sbb
xchg
or
jne
sbb
mov
add
scas
push
call
xchg
icebp
pop
and
xor
into
in
jne
and
je
out
pop
sahf
sbb
adc
inc
and
mov
enter
push
ljmp
jp
xor
or
pushf
xor
push
aam
addb
push
xor
cld
sub
xor
xchg
mov
ss
dec
or
inc
fwait
aaa
into
shlb
add
icebp
push
in
es
xchg
sub
push
inc
xchg
scas
mov
fdiv
xchg
out
bound
mov
cltd
in
repnz
mov
loop
add
lahf
outsl
cmp
mov
loop
pop
fistpll
fsubrs
mov
push
jecxz
insl
and
mov
xor
in
popa
clc
and
popf
jnp
jecxz
cs
xchg
fdiv
shrl
inc
insl
jb
xor
sub
repz
icebp
jns
and
or
imul
jnp
aad
and
pop
cs
adc
es
sub
testl
dec
das
jl
fdivl
cmpsb
inc
xchg
sahf
xor
test
daa
mov
cmp
enter
lea
iret
adcl
out
pop
call
adcl
rcrb
scas
lea
cltd
jnp
add
gs
out
mov
and
sbb
jns
aaa
into
mov
fistpll
rorb
fsubrs
xor
dec
js
mov
fidivl
shrl
rolb
or
push
fidivs
ja
stos
movsb
jbe
rol
dec
mul
cmpsb
mov
dec
xor
lahf
gs
or
ret
xchg
lods
hlt
fnstenv
dec
dec
sub
xchg
xchg
cs
fisubrl
lds
bswap
gs
pop
testl
fcmovbe
les
std
inc
sub
jno
dec
stos
inc
addl
lock
or
adc
sub
mov
jge
ds
sahf
fsubr
iret
lret
sub
std
lock
and
fsubr
push
inc
push
and
mov
les
push
push
adc
testl
les
inc
ficoml
add
cmc
mov
data16
lea
scas
inc
loopne
inc
fmuls
push
xor
aaa
das
pop
negb
gs
sub
push
in
pop
out
aam
and
push
pop
push
xchg
stos
rorb
mov
cmpsl
sbb
dec
push
jns
nop
lods
iret
mov
je
push
push
lret
sti
leave
stc
nop
sti
sbb
jle
xor
lock
les
sbb
repnz
inc
lock
sub
cli
jl
insl
testl
xor
jle
or
mov
sti
push
sbb
mov
or
test
or
xchg
inc
mov
gs
movsl
jbe
mov
jbe
shrb
mov
stc
js
mov
dec
bound
add
repz
or
ds
and
jmp
xor
and
add
pop
xor
xchg
jne
leave
repz
mov
negb
mov
sbb
xchg
mov
gs
lahf
test
push
and
xchg
ret
int
cmpsl
mov
std
repnz
cltd
aam
js
xor
dec
cmp
fsubr
cmc
jbe
and
shll
lds
cld
push
mov
or
test
imul
scas
add
pushf
insb
dec
pop
mov
in
cmp
loop
xor
mov
jae
movsl
in
fstl
jg
dec
lahf
adc
push
mov
into
adcl
xchg
or
inc
je
sti
jle
lock
xor
jle
call
lahf
insl
adc
xor
imul
arpl
insl
inc
adc
loop
mov
mov
push
xchg
loope
ficoms
lea
in
sbb
rcl
push
mov
jbe
push
addr16
iret
sub
fisttpl
mov
mov
cmpsb
sbb
sub
int
cmp
popa
dec
sti
sar
jns
pop
movsl
int
push
jmp
push
inc
stos
and
stos
xor
xchg
dec
icebp
movsl
loope
mov
jbe
push
jne
loopne
lcall
sbb
or
nop
ds
sbb
mov
pop
push
test
pop
lods
cmpsl
push
mov
mov
or
cmp
stos
call
cmp
icebp
inc
sbb
jae
fnstcw
add
jb
push
popf
and
push
cmpsb
std
outsl
push
jne
lods
xchg
add
lcall
pop
jecxz
mov
adc
movsb
pop
popf
xor
push
arpl
xor
mov
xchg
rcrl
add
fidivrs
incl
mov
xchg
lcall
aas
cmp
scas
push
adc
jge
jmp
xor
repnz
adcl
cmp
in
data16
idiv
jb
pop
enter
and
xchg
fisubrl
cs
fwait
and
xor
push
dec
cmc
push
scas
loopne
mov
cmpsb
gs
or
xor
jno
ss
in
xlat
cli
data16
dec
jns
addb
mov
sbb
pop
xor
inc
fldcw
mov
sti
leave
int
add
adc
xor
adc
mov
rol
mov
call
jo
mov
push
out
or
xchg
add
push
mov
or
enter
inc
jmp
movsb
cmp
push
scas
or
mov
jo
sbbb
and
in
lods
inc
and
insl
add
dec
fidivs
ret
in
cld
xchg
ret
or
sbb
lods
cmp
iret
dec
xchg
push
in
xchg
rolb
jno
je
mov
and
sub
xor
and
push
call
out
mov
sbb
or
test
mov
mov
push
out
sar
lret
bound
sbb
inc
sub
adc
data16
push
std
pop
sahf
jnp,pt
sbb
fisubl
lret
mov
xor
popa
clc
stos
pop
shrl
ret
jg
cmp
pop
mov
outsb
lcall
mov
dec
loope
push
call
call
testl
imul
pop
lea
and
jp
pop
hlt
les
add
fdivrp
xchg
and
mov
sahf
dec
sbb
jae
test
roll
xchg
pop
mov
pop
out
pop
xlat
aad
mov
jbe
cwtl
loopne
mov
lahf
les
mov
aad
sub
jb
dec
dec
loop
jge
nop
xchg
ja
add
xchg
fiadds
ss
mull
jmp
arpl
or
nop
daa
aas
add
xchg
jns
mov
xor
sar
addl
or
gs
mov
lods
lea
int3
mov
stc
cmc
in
outsb
pop
pop
inc
fcomps
add
js
pop
divb
and
enter
std
loope
xor
push
dec
in
adc
add
fsubrs
fisttpll
lea
aad
stos
cld
xlat
outsb
in
push
xor
cmpsb
or
cltd
mov
int
mov
dec
outsl
push
mov
ret
cmp
dec
loope
fldcw
call
add
jle
dec
add
popf
inc
bound
mov
mov
leave
sub
in
inc
dec
loop
cmpsl
jnp
clc
xchg
imul
in
mov
inc
push
mov
cmp
cmp
pop
mov
int3
loop
pop
push
and
inc
pop
xor
lahf
outsb
push
mov
mov
cmp
in
jle
push
push
pop
repnz
das
pushf
xor
jb
adc
xchg
sarl
pop
test
shrl
inc
and
jne
add
pop
cmpsl
pop
mov
inc
push
jmp
jmp
aam
fiadds
repnz
push
mov
adc
idivl
das
xchg
int
jae
mov
ljmp
jge
lahf
sbb
mov
adc
jp
xor
mov
repz
fisttpll
and
jnp
fimull
add
cltd
xor
fidivl
ds
jbe
jl
js
pop
popf
addb
je
shlb
xchg
adc
hlt
xor
lds
pop
or
repnz
sub
jle
jns
pop
cwtl
dec
loopne
jbe
cs
out
push
mov
call
adc
jnp
push
movsb
cmp
add
add
stos
push
sub
ja
jge
leave
fsubrl
mov
stc
enter
and
adcb
dec
cmp
js
sahf
xor
or
jbe
pop
ror
popa
mov
shr
jg
mov
mov
fcoml
cmpsl
sbb
adc
push
inc
xlat
add
cmc
mov
push
sub
jl
cltd
inc
mov
xor
pop
cmpsb
cmp
daa
mov
pop
loope
pop
add
jecxz
fwait
sub
mov
mov
pop
mov
lret
pop
ds
cmp
jb
pop
repz
fdivrs
leave
outsb
js
ret
das
adc
testb
add
ja
movb
mov
xchg
mov
fs
add
sbb
add
cs
aas
xchg
nop
daa
gs
pop
out
mov
jbe
adc
arpl
xchg
mov
mov
ret
scas
sub
or
add
out
test
popa
clc
sub
mov
push
shrl
sbb
dec
fildll
lods
inc
xor
pop
lret
pop
test
outsb
mov
scas
jle
mov
and
aam
mov
stc
mov
repnz
fsubrs
out
and
cmpsl
aaa
pop
mov
mov
lods
inc
mov
fxch
bound
push
data16
nop
or
mov
mov
fsubs
fldcw
ret
dec
ss
push
insb
insb
add
jl
xchg
sbbl
mov
cmp
cmp
pop
daa
xchg
pop
repnz
inc
out
jns
das
outsl
repz
dec
mov
popf
sbb
mov
mov
aas
test
enter
dec
in
ss
inc
or
add
mov
int3
and
pop
xlat
inc
xlat
add
outsb
push
sub
popa
jg
mov
jl
sti
cmp
mov
adc
xor
cmp
push
lret
ret
ftst
xlat
outsb
add
imul
sub
mov
mov
dec
jnp
stos
bound
lds
dec
out
dec
out
adc
imul
lds
call
jno
sbb
add
icebp
sub
enter
stc
loope
loope
adc
incl
lds
xchg
mov
aam
cwtl
sti
fdivl
mov
xchg
in
sbb
aaa
add
jnp
adc
in
lods
xor
inc
push
cltd
xor
push
in
push
mov
dec
ds
add
data16
cwtl
adc
xorb
rcrb
es
dec
ds
fildl
push
out
xlat
push
stc
xchg
icebp
test
mov
mov
xor
inc
aas
mov
jbe
fcmovu
jno
in
test
daa
clc
jo
or
int3
lcall
sti
xor
repz
push
in
insl
sbb
cmp
jno
scas
cmp
es
scas
inc
xchg
int3
arpl
sahf
in
cmp
ljmp
sbb
dec
outsl
ss
popa
push
out
xchg
pmulhuw
push
stos
ret
jge
inc
push
loopne
xchg
test
arpl
fsubr
xor
pop
or
mov
daa
mov
cmp
inc
fcoml
popa
push
cli
inc
push
xchg
scas
cmp
mov
ret
pop
sbb
cmp
push
pop
lret
cmp
test
cmpsb
or
js
shl
lock
sub
dec
fildll
les
xchg
mov
test
jo
test
cltd
mov
cmp
fdivs
pop
sub
into
gs
fbstp
sahf
clc
pop
push
std
xchg
lcall
mov
lock
icebp
cmp
or
fs
andb
out
pop
stos
sbbb
jb
or
jnp
aaa
mov
fisubrl
dec
clc
fmul
arpl
adc
mov
movsb
adc
arpl
mov
ljmp
sbb
mov
test
mov
jae
inc
fsubl
iret
arpl
add
lret
bound
xchg
aam
lahf
ss
sbb
pop
jbe
mov
dec
arpl
or
es
fidivrl
sbbl
je
and
mov
mov
add
or
jo
sub
in
inc
nop
mov
fisubrl
adc
add
mov
fistl
test
fisubrs
pop
repz
sti
xchg
cs
addr16
xor
dec
adc
adc
mov
xchg
push
mov
test
cmp
cmp
jmp
push
in
fsubrl
xor
sbb
xchg
sub
ds
imulb
test
mov
mov
xor
add
jle
xor
testl
shrb
pop
pop
pop
and
mov
ds
or
mov
sti
cmp
lret
add
mov
dec
scas
sub
mov
push
iret
dec
jmp
jcxz
add
ds
cmp
pop
arpl
gs
lea
rcll
int3
xchg
mov
fistpl
mov
xchg
sbb
dec
les
dec
inc
test
cmp
sarb
sub
jnp
scas
movsb
or
xchg
popa
or
dec
aas
pop
and
or
aad
mov
pop
mov
inc
gs
addl
dec
mov
pusha
or
mov
sub
jbe
dec
imul
loopne
mov
jle
mov
inc
xor
aad
push
sub
adc
shlb
sbb
icebp
fisubs
aad
sti
testl
aaa
insb
mov
paddq
xchg
fcmovne
jmp
push
bound
xchg
mov
or
fs
pushf
je
arpl
push
mov
aad
sbb
test
mov
jl
dec
out
dec
push
mov
dec
inc
idivb
test
xorl
dec
stos
push
cs
inc
push
inc
xchg
sti
mov
sahf
aad
cmp
hlt
cmpsb
dec
xor
push
sub
loop
in
dec
test
and
fdivrl
out
outsl
push
mov
adc
lret
cmp
xchg
movsl
js
dec
jl
add
push
mov
mov
push
cmc
sahf
mov
stos
stc
fwait
xor
ficoml
mov
sub
test
sbb
addr16
jmp
bound
sub
stos
mov
repz
jl
out
or
nop
mov
push
xor
xor
ret
pusha
jecxz
out
not
int3
movb
rclb
xchg
pusha
mov
and
cmp
adc
add
cmp
lock
pushf
add
test
divb
push
sarb
shrl
inc
mov
ljmp
mov
repz
aaa
out
jg
mov
ret
pop
xchg
add
jnp
mov
stos
or
push
xor
mov
ja
mov
mov
shl
loop
lcall
xor
xchg
in
lods
mov
and
je
adc
test
insl
enter
pop
jle
negb
aam
dec
mov
and
xchg
mov
jp
mov
clc
xor
sbb
stos
mov
stc
ljmp
aad
ss
and
jns
jns
test
imull
clc
sub
xor
aaa
cli
pop
bound
popf
sbb
adc
bound
ljmp
outsb
test
sub
mov
pop
stc
jmp
cmp
idiv
adc
js
test
aaa
call
jmp
fld
out
mov
add
mov
cmc
sbb
aad
mov
xor
pop
jecxz
adc
mov
sarb
mov
mov
mov
pop
ss
in
jge
movsb
fdivrl
mov
adc
xor
into
cmpsl
aad
movsl
jns
cmp
shlb
push
mov
cwtl
push
stos
mov
push
inc
xchg
out
ljmp
sti
stc
cmp
loop
aam
cs
mov
in
out
mov
pop
xor
mov
jmp
sub
cmp
inc
add
ljmp
mull
xchg
jno
sbb
addr16
imul
cs
xchg
iret
imul
mov
or
out
fidivl
imul
ljmp
outsb
xchg
push
fs
les
fisubrl
stos
std
jl
push
dec
imul
xchg
pop
mov
dec
iret
or
fs
movsl
lret
sub
int3
scas
or
cmp
lea
data16
jbe
cmp
jnp
cmp
cwtl
fsts
mov
sub
sti
push
mov
out
pop
out
arpl
shll
dec
sub
mov
cmpsb
mov
leave
xor
sarb
aas
bound
aas
imul
cmpsb
data16
and
lds
push
mov
mov
push
mov
imul
cmpsb
or
ss
cmp
pop
jno
loopne
jns
dec
dec
push
push
and
mov
cmp
sub
adc
mov
shlb
sbb
xchg
std
inc
xor
dec
or
jecxz
and
jge
stos
test
mov
jmp
and
ret
or
sbb
mov
sub
xchg
or
ftst
xor
mov
lahf
cmp
xchg
les
push
ljmp
fmull
scas
dec
icebp
xchg
adc
mov
into
add
push
loop
jns
in
add
in
dec
aad
xor
loope
in
sarb
or
in
xchg
and
add
mov
jnp
push
lret
push
mov
xchg
push
sub
xor
push
or
divb
xchg
decl
jg
sub
gs
xor
lret
and
adc
je
push
aad
insb
lods
jo
mov
mov
test
mov
xchg
inc
mov
jl
cmp
and
cmp
mov
sub
cwtl
mov
sub
enter
mov
sub
pop
cld
bound
pop
sbb
fwait
adc
shll
inc
sbb
push
jnp
lds
out
je
ret
sbb
lcall
int3
andb
cmp
test
push
add
add
cmc
cs
dec
inc
fwait
sbb
mov
mov
sbb
xor
mov
sub
test
push
fs
and
pop
jno
insb
test
test
adc
aad
into
jns
adc
inc
jmp
test
and
inc
cmpsb
push
mov
pop
push
arpl
mov
mov
hlt
stos
pop
push
inc
add
shl
adc
jbe
mov
or
mov
add
mov
shrb
mov
xchg
jne
dec
jg
push
and
rorl
sub
data16
fsubs
mov
jne
outsb
mov
movaps
add
jbe
pop
or
mov
aaa
pop
cmpsb
sub
lods
jns
inc
xor
rol
mov
ret
sbb
mov
dec
pop
std
pop
jle
loope
push
imul
test
and
mov
pop
mov
cmp
dec
mov
jle
dec
and
dec
or
repz
andl
dec
sahf
aas
out
fstpt
inc
inc
movsl
jle
sub
jecxz
ret
fmuls
mov
jg
xor
inc
push
push
mov
push
ds
pop
cmp
inc
dec
mov
fbstp
sub
jnp
iret
add
sub
je
mov
andb
inc
push
lock
dec
fisubrs
pop
adc
repnz
daa
ret
dec
rsm
and
cmp
fidivl
lret
inc
call
out
mov
mov
shlb
pop
fwait
and
rcrl
sbb
es
push
mov
sub
bound
out
aaa
cmpsb
shr
jae
xchg
and
pop
sbb
mulb
add
out
jno
out
test
insl
call
adc
and
icebp
inc
pop
dec
push
rorb
in
cmp
push
jmp
sarb
sbb
mov
fisubl
fnsave
push
xor
mov
add
jg
adc
test
and
cmp
jne
les
fisubs
aam
xor
adc
jp
adc
call
fidivrs
insb
xchg
test
sbb
movsb
mov
sub
push
pop
rolb
mov
and
xorb
mov
mov
movsb
jae
into
stos
push
pop
push
sbb
sbb
jnp
pushl
mov
in
pop
into
fsubrs
pop
int
stos
push
rorl
pop
popa
cltd
stos
lahf
adc
out
xchg
dec
loop
and
jmp
mov
fcoms
enter
jp
dec
mov
fisttps
daa
add
out
cmp
hlt
push
mov
inc
dec
lahf
jbe
fbstp
push
pop
lock
or
pusha
xchg
insl
mov
push
or
test
sti
inc
sbb
out
test
jmp
pop
jae
rol
out
push
xor
cmp
sub
outsl
lret
inc
lock
xor
lret
mov
push
sahf
pop
lods
pop
jns
push
push
jb
dec
pop
insl
es
dec
inc
or
testl
les
cmp
loope
dec
cmp
mov
loop
mov
dec
stc
test
outsb
fwait
std
scas
sub
popf
rcl
jp,pn
lods
pop
push
xchg
jbe
mov
aaa
sub
sub
insb
jg
sahf
mov
in
cmpsl
jecxz,pt
jmp
push
aaa
das
fiadds
or
jne
add
adc
pop
sbb
sbb
push
jnp
push
ja
sub
test
mov
int3
test
cltd
in
nop
fdivp
or
mov
mov
add
pop
or
mov
lret
pusha
frstor
inc
lods
cmp
pop
imul
lcall
je
pop
dec
and
mov
adc
lods
xchg
sub
clc
cmp
sub
test
repz
sbb
lods
aam
add
or
sti
lods
aad
pop
fucom
sub
rcr
mov
mov
cmp
sbb
into
out
aad
rcrl
movsl
clc
cld
nop
mov
clc
outsb
and
mov
xchg
rcrb
mov
je
cs
cmpsb
mov
cld
stos
dec
in
add
mov
sbb
dec
es
aad
xchg
jmp
imul
lods
fstl
xchg
xchg
rcrb
lods
fwait
sub
stos
popf
jb
out
xor
inc
xchg
sbb
inc
adcb
rcrb
push
xchg
jns
pop
mov
push
sbb
mov
mov
cmp
mov
rorl
ja
cmp
mov
pop
adcb
mov
xchg
nop
cmp
pop
cmp
jns
ret
aam
push
mov
mov
xchg
add
add
sbb
clc
jae
or
jecxz
negb
inc
and
and
rcll
mov
ss
mov
lock
xchg
shlb
or
int
jb
dec
ss
mov
cmp
lods
aam
add
xor
pop
jns
inc
push
push
xchg
mov
ss
lods
in
lret
test
shr
xor
rol
mov
mov
lahf
mov
jl
xor
cmp
mov
mov
lcall
fstl
mov
arpl
pop
fwait
dec
xor
in
hlt
in
inc
gs
rcrl
lds
xchg
push
jl
xchg
fucompp
lcall
add
or
and
dec
and
fistl
loope
js
sbbl
cltd
rcrb
pop
xor
fadds
inc
pop
cmp
dec
imul
or
cwtl
push
mov
mov
sbb
subl
pop
fbstp
sbb
call
mov
xor
mov
mov
mov
sub
xlat
mov
loopne
push
flds
inc
xchg
dec
test
xchg
or
adc
push
icebp
inc
das
jnp
int3
pop
ljmp
popl
aad
lods
popf
push
fdivrp
inc
decb
inc
or
jae
sub
fs
xor
outsb
js
xor
push
lcall
or
scas
lock
mov
scas
push
push
das
pusha
push
andb
xchg
cmpl
ja
sub
das
sbb
sbbb
and
in
xchg
insb
cmpsb
mov
pop
add
xor
test
lahf
stos
inc
rcll
sub
push
xchg
int
mov
jne
cmp
ds
ljmp
push
lahf
push
out
icebp
inc
jbe
mov
pusha
ljmp
pop
movsb
adc
jbe
mov
movsb
pop
mov
push
fsubrl
ss
mov
dec
leave
movsl
int3
leave
shll
mov
jns
ret
daa
loop
cmp
imul
fcmovnu
clc
int3
jp
outsb
push
sub
stos
xor
lods
mov
xor
add
jg
cmpsb
push
mov
push
std
mov
mov
xchg
dec
faddl
in
pusha
aad
call
pop
shlb
shr
les
jmp
and
jnp
cmp
popf
lods
push
jle
add
stos
pop
jmp
cwtl
mov
sbb
adc
cmp
xchg
pop
popa
and
sbb
push
addr16
enter
ret
lcall
fstpt
inc
add
lds
mov
lock
cmpsb
adc
xchg
cmp
pop
aad
inc
in
xchg
jnp
call
inc
loope
cmp
aad
lahf
ret
insb
jnp
sahf
mov
ret
xor
push
jne
cmp
dec
or
or
adc
imul
jbe
pop
rcll
sub
outsl
dec
mov
mov
mov
outsl
and
mov
push
lahf
int
push
add
cmc
inc
jbe
stc
xchg
sub
cmpsl
mov
dec
int3
jg
jno
adc
jnp
lcall
mov
and
jl
sbb
jae
test
inc
sbb
mov
idivb
jo
fiaddl
add
push
xlat
orb
lods
in
in
mov
xchg
pop
adc
mov
sahf
fistl
test
xor
sbb
and
and
int
cmp
cmp
scas
sbbl
add
addr16
mov
mov
xor
mov
in
inc
not
lahf
and
outsl
push
xchg
inc
es
cmpsl
mov
imul
xor
int3
das
jns
sbb
lods
mov
arpl
or
sub
js
push
mov
or
out
pop
cli
inc
add
or
push
cwtl
mov
scas
push
pop
popl
push
jmp
mov
jl
rcll
vandpd
lds
mov
mov
adc
mov
and
sti
sbb
movsl
loopne
cmpsl
sbb
sub
jl
sahf
dec
adc
dec
icebp
roll
adc
sti
cmp
pushf
mov
push
test
and
inc
sub
vxorpd
jmp
imul
pop
insl
cwtl
repnz
mov
adc
ds
arpl
dec
nop
fldl
popa
popf
loope
xor
imul
cmp
aaa
fnstenv
call
addr16
jmp
or
cmp
jge
and
push
sub
pop
push
nop
inc
stos
pop
xor
dec
xchg
mov
adc
sub
mov
and
cmpsb
sahf
inc
movsb
xchg
jnp
mov
ret
mov
push
pop
cmp
test
xchg
xchg
or
mov
adc
lcall
or
out
jp
pop
and
sub
mov
mov
fdivl
sti
xlat
sub
data16
and
xor
movsb
sbb
out
iret
cwtl
adc
pop
mov
mov
mov
sub
xor
mov
test
adc
testl
add
addr16
xchg
sub
pop
mov
nop
shll
and
pop
sahf
pop
fadds
les
inc
je
fs
rclb
neg
call
int3
fwait
insl
or
xchg
push
imul
outsb
test
daa
pop
imull
jbe
inc
loopne
loop
mov
mov
xlat
paddq
xchg
test
xor
in
lahf
sub
jb
push
xchg
xchg
cmp
lcall
mov
fstpt
mov
cmp
inc
dec
pop
popa
xorl
aas
mov
das
jl
dec
push
push
mov
out
jp
jnp
push
inc
and
movsb
bound
sbb
sub
jae
nop
shrb
js
lret
sbb
in
ret
sbb
jne
lods
pop
xchg
loope
wbinvd
dec
mov
outsl
mov
frstor
mov
fstpt
inc
dec
movzwl
in
dec
adc
mov
or
mov
shlb
sub
mov
lods
mov
inc
movsl
into
dec
inc
jle
pop
sbb
push
sbb
jp
insl
mov
cmc
cwtl
test
mov
lret
out
fstpt
jmp
add
std
pop
outsl
and
jnp
mov
adc
xor
ret
add
push
add
mov
pop
mov
aam
stc
insb
adcl
fs
mov
cmp
cmp
sahf
jb
push
hlt
mov
xor
in
test
inc
cmp
shr
fstpl
dec
sbb
fistpl
sub
add
repnz
test
xchg
mov
orb
pop
fbld
add
mov
or
jnp
rep
lret
out
and
mov
pusha
call
repz
jbe
dec
mov
cmp
fnstsw
xor
add
and
pop
jo
cld
dec
cmp
push
push
push
mov
adc
sbb
loop
out
add
divl
es
xchg
rcrb
add
jge
and
adcl
fstpt
push
mov
or
push
or
enter
push
scas
cmp
cmp
movsl
inc
dec
sub
lcall
push
loop
add
ror
fldcw
in
testb
jecxz
dec
cmp
fisttps
repz
dec
xor
mov
movsb
adc
push
jno
cvttps2pi
xorl
sub
arpl
mov
jge
xor
aad
sub
mov
xchg
push
movsl
lcall
stc
je
orb
fs
xor
movsb
cmc
jnp
push
jae
movsl
mov
jo
or
mov
sub
mov
clc
movsl
jmp
mov
ret
xchg
pop
ss
icebp
pop
pushf
dec
movsl
test
adc
or
adcb
stc
push
and
mov
or
std
insl
les
or
dec
jne
ret
and
mov
push
shr
iret
hlt
xchg
add
hlt
test
je
sbbb
xchg
insb
mov
dec
imul
ret
aam
pushf
xchg
scas
adc
sahf
aaa
cmp
push
shll
or
lock
int3
adc
pop
lcall
sbb
push
mov
xlat
and
sub
stos
jecxz
scas
sbb
addr16
je
clc
mov
pop
lret
addl
jns
jno
jae
shll
jne
mov
cld
sahf
jecxz
subl
ja
add
fistps
fsubrs
mov
xchg
sbb
or
dec
stos
lock
sub
nop
sub
xor
sbb
xor
call
xchg
adc
in
dec
dec
jp
xchg
mov
mov
cltd
imul
adc
stos
dec
or
mov
sub
test
jle
es
mov
xor
fidivrl
cmp
push
imul
cltd
mov
scas
outsl
mov
cltd
sbb
stc
cmp
sub
add
mov
add
in
dec
insb
dec
and
outsb
insb
fldenv
pop
das
adc
dec
jo
pop
and
lret
mov
pop
fs
push
sbb
dec
cmp
jae
ljmp
jle
inc
push
push
aas
test
insb
rol
mov
aas
rep
inc
pop
adc
rolb
add
mov
scas
popf
push
or
int
or
gs
pop
cltd
mov
cmp
sub
xor
push
inc
pop
nop
clc
jnp
in
jne
jb
mov
mov
in
test
jmp
sar
and
fwait
jne
fwait
fwait
mov
js
jns
stos
fsubrs
ljmp
test
lods
notl
and
xor
push
pop
aaa
xchg
xchg
hlt
rolb
insl
add
call
daa
jecxz
inc
dec
and
jge
xor
fs
cmc
test
jmp
mov
sub
cmp
sub
sub
or
cmc
mov
pushf
negl
cmc
out
call
mov
cmp
test
out
daa
add
xor
lods
ret
mov
stos
add
iret
push
sbb
imul
pop
popa
lret
jns
cmpl
pop
adc
sub
loope
or
test
pusha
ljmp
push
cmpb
outsl
xchg
dec
and
xchg
pop
add
mov
leave
setbe
fsubs
cld
jecxz
out
outsl
inc
inc
test
xchg
scas
or
mov
repz
adc
jae
fldln2
mov
dec
addr16
jmp
push
mov
mov
fdivrl
push
loop
filds
mov
fs
pop
test
xor
lea
frstor
mov
inc
popa
cli
cld
icebp
or
lahf
push
div
sub
sarl
sub
repnz
pop
jnp
sbb
es
lret
push
add
mov
cs
xlat
lahf
xchg
xor
sub
cmp
mov
imul
icebp
test
and
jecxz
imulb
mov
xorl
arpl
xor
flds
enter
subb
daa
cmpsb
mov
es
ja
mov
test
inc
push
inc
cmp
xor
shll
cli
lock
dec
push
lock
adc
shrd
insl
aas
test
dec
pop
inc
push
cmpb
dec
add
mov
xchg
xorb
push
imul
stos
loop
push
and
rcrl
xlat
in
dec
jbe
ljmp
punpckhbw
xchg
adc
mov
loope
icebp
ds
lcall
and
pop
mov
cmp
and
push
adc
fbld
fwait
imul
ficoml
xor
fwait
jo
adcl
adc
xchg
insb
lods
adc
in
push
pop
jle
cmp
sti
cmc
in
push
arpl
cmp
ja
hlt
push
lock
adc
adc
xchg
xchg
cmp
subl
out
mov
and
dec
cmp
mov
fcoml
mov
pop
arpl
jle
mov
lods
ror
cmp
adc
and
or
jle
repz
fdivrl
adcb
jmp
in
int3
cs
into
adc
push
push
xor
cmpsb
stos
cmpsl
push
mov
and
dec
cli
fs
mov
jbe
cmpsb
jno
add
sarl
mov
push
div
subb
scas
mov
inc
cwtl
lea
inc
dec
je
xor
mov
mov
into
dec
icebp
lret
lock
mov
add
or
orb
pop
fisubrl
mov
push
fucomi
call
or
sbb
mov
ja
push
lods
or
popf
mov
jno
call
mov
cmp
shll
mov
inc
mov
fptan
fisubl
mov
dec
inc
js
sbb
cs
cmpsl
jnp
imul
sahf
repz
fnstenv
out
shll
test
and
inc
lcall
xchg
push
loope
shlb
sub
sarl
mov
mov
jle
nop
aam
cwtl
clc
leave
ss
mov
jle
cmp
inc
shl
inc
push
jmp
cltd
jmp
vpsllq
push
mov
test
bound
push
aam
sti
adc
icebp
pusha
insb
add
and
lods
mov
inc
cmp
push
push
lods
adc
scas
sub
iretw
pop
inc
lahf
xor
add
pop
pusha
clc
clc
fs
jge
lds
inc
and
mov
jp
or
add
pop
faddl
fadds
push
mov
sub
lea
stos
icebp
cltd
sbb
mov
or
cltd
loopne
mov
rcr
test
shlb
mov
insl
inc
dec
jle
inc
cmpsl
push
push
sub
and
mov
inc
es
rcr
sub
jne
sub
jmp
dec
xchg
fsubr
mov
hlt
lcall
cld
mov
punpckhdq
imul
lods
sub
adc
leave
fdivl
pop
ds
scas
roll
pop
push
bound
inc
insb
into
lret
jecxz
shrb
and
jbe
and
cwtl
jb
call
inc
into
scas
add
lcall
test
push
mov
xor
push
fistps
hlt
daa
movd
in
test
jp
mov
addr16
imul
xlat
out
movsl
arpl
xchg
or
sbb
icebp
dec
and
xchg
in
adc
sbb
xlat
dec
push
jecxz
fsubrl
mov
lret
cmpsb
out
cmpb
in
jno
sbb
lcall
ss
scas
nop
in
call
jecxz
loop
xor
mov
lcall
mov
or
movsl
inc
mov
inc
js
cmp
and
jno
add
call
fildl
div
jle
addb
xchg
xorl
and
syscall
add
imul
ss
dec
iret
sbb
divl
mov
xchg
insl
stos
hlt
sbb
pop
dec
andl
mov
popa
ljmp
jo
and
fdivrs
add
jb
sub
cmp
sti
popa
cltd
xchg
and
mov
cmpsb
lahf
int
add
jle
jmp
out
xchg
xchg
scas
mov
inc
adcb
lock
jl
mov
cmp
js
cwtl
fs
inc
jb
cli
xchg
push
outsl
aam
in
jp
shll
sbb
test
xor
decl
filds
cmp
cmp
test
mov
out
or
outsb
stc
out
sbb
inc
jg
add
push
out
sarl
loopne
clc
bound
inc
sub
out
sbb
iret
pop
push
adc
sub
mov
lods
cmp
cli
mov
std
movsb
insb
xchg
xchg
or
add
psubw
dec
mov
inc
add
or
test
lahf
bound
js
mov
xchg
push
jp
inc
js
push
push
and
jne
out
jmp
pop
mov
pusha
jb
and
cmp
mov
cmpl
jmp
xchg
mov
mov
pop
or
dec
lahf
push
cmp
xchg
jecxz
mov
adc
aad
or
xchg
out
push
fdivrl
mov
pop
sub
xor
pop
pushf
dec
push
or
insl
fcomps
cmp
leave
out
sbb
adc
pop
out
sub
xor
mov
push
out
mov
pop
dec
ds
add
stos
loopne
adc
pop
inc
xor
and
inc
pusha
lea
add
hlt
aam
mov
cmpsb
lea
add
data16
jno
stos
push
mov
imul
sub
pop
das
enter
stos
in
mov
adc
es
popf
pushf
dec
jl
aaa
mov
sar
aaa
sub
lods
mov
adc
lahf
dec
clc
cs
mov
push
dec
ret
js
enter
cmc
push
sbb
inc
and
push
cmpsb
pop
clc
xchg
dec
fsubr
jecxz
jmp
icebp
pop
push
out
push
jb
or
call
insl
push
xchg
pop
or
je
insb
daa
cmp
mov
and
adc
in
pop
mov
inc
lock
xor
inc
lds
sti
aas
movsl
jle
aad
lods
inc
imulb
popa
loope
lret
bound
jmp
or
pop
sahf
xchg
pop
sahf
and
es
sub
clc
jge
pop
notb
lahf
sbbl
push
mov
das
mov
fbstp
js
xor
insb
fs
add
mov
mov
ret
ret
pop
lock
dec
loopne
es
pusha
mov
jns
mov
frstor
dec
xchg
xor
pop
bound
jbe
pop
lock
xchg
or
mov
pop
lods
daa
mov
lods
incl
xor
push
out
call
sti
andb
or
test
aad
xchg
sub
mov
stc
dec
mov
bound
ja
insl
repnz
rorl
repnz
pop
scas
jb
xor
inc
xchg
sub
les
jecxz
in
jmp
mov
jb
imul
nop
daa
mov
addr16
int3
arpl
out
xchg
sub
mov
or
lahf
pop
stos
sub
fsubrl
es
jnp,pn
fldt
pusha
idiv
mov
js
push
hlt
mov
and
into
hlt
mov
cltd
cmpsb
cmp
inc
in
scas
sbb
ds
mov
test
mov
ss
aam
in
push
js
lea
loopne
pop
scas
cli
xchg
fdivrs
test
and
mov
incb
adc
adc
enter
xchg
jmp
dec
loop
xor
popa
outsb
psubb
mov
addl
jp
pop
add
cmp
xchg
add
es
fstps
es
mov
ficoml
add
cmp
pop
add
cmp
or
leave
cli
xchg
repz
pop
scas
loopne
pop
mov
add
push
cwtl
pop
or
jecxz
rclb
test
add
sarb
pop
mov
mov
test
cmp
fcomip
mov
test
push
enter
cli
xchg
xchg
cmpsb
cmp
xor
jnp
cmp
pop
inc
fiaddl
test
push
shl
enter
push
ljmp
mov
aas
fcomps
enter
jnp
pop
inc
in
jg
sbb
ficompl
add
and
pop
addb
jp
lea
fwait
loop
xchg
es
and
shlb
xchg
jnp
cmp
lret
pushf
jmp
in
dec
in
call
xor
jo
addr16
insb
xchg
imul
mov
lock
fldenv
mov
popa
and
add
rcrl
xchg
sub
push
adc
repz
jae
pop
lods
outsb
std
xchg
cwtl
into
movsb
cmp
mov
cmpsb
cmp
cmp
pop
xchg
sub
test
pop
repz
es
dec
sbb
fcomps
sub
and
jbe
push
inc
adc
jge
inc
fisubrs
or
xchg
mov
push
out
aad
lcall
mov
mov
fxam
jl
xor
jmp
pop
pop
and
test
pop
movsb
leave
inc
xlat
icebp
push
jmp
adc
dec
and
pop
insb
testl
loop
xchg
cs
xchg
and
adc
cmpsl
push
cmp
add
pop
mov
mov
jb
sti
lods
cmpsl
test
loopne
aaa
into
clc
add
cmp
lea
gs
sub
faddp
or
sub
sbb
dec
fbstp
mov
sahf
xchg
dec
loop
sarb
adc
ss
ljmp
mov
sub
jmp
xchg
adc
lahf
ss
xor
adc
xchg
pop
pop
mov
fldcw
mov
aaa
and
pop
push
mov
outsl
cmpsb
mov
hlt
in
scas
inc
add
cmp
aaa
and
lahf
pop
push
pushf
xor
mov
xor
decb
jo
dec
push
pop
icebp
lea
xchg
lods
popf
xor
mov
pop
in
clc
stos
inc
and
sbb
jnp
jg
sbbl
jecxz
xor
add
cmp
mov
imul
mov
inc
xlat
dec
loope
add
xor
pop
mov
test
scas
movsl
dec
iret
pop
hlt
idiv
pop
scas
sub
inc
fiaddl
call
xor
mov
dec
fists
ss
into
jo
stc
mov
popf
xor
jmp
ds
mov
xor
sub
mov
xor
fsubr
test
adc
aaa
xchg
jo
xchg
sub
mov
inc
ficoms
push
jmp
jno
popf
xor
xchg
pop
xchg
sti
xchg
fwait
and
jns
adc
test
xchg
and
mov
inc
fstl
aam
and
shrl
xchg
xchg
sub
je
dec
movsl
call
mov
dec
ja
cwtl
das
inc
cwtl
hlt
mov
shrb
repnz
in
adc
inc
xchg
sub
lret
popa
push
jmp
in
or
out
inc
fisubrl
insl
add
nop
inc
xlat
leave
bound
cltd
ljmp
lock
test
jbe
mov
inc
xchg
cmpsb
cmp
xchg
in
dec
adc
aam
push
mov
jg
push
sbb
or
and
and
stos
inc
jge
jns
fs
lcall
xchg
sub
cs
dec
enter
mov
cld
mov
enter
clc
xor
fwait
push
pop
mov
mov
ds
rcll
adc
xor
mov
cmpl
push
idivb
pushl
daa
push
andl
dec
movsl
inc
ja
mov
fistpl
loop
sub
add
mov
aaa
xor
insb
xchg
inc
in
andl
sbb
sbb
cmp
sub
mov
test
pushf
sub
and
push
je
dec
stos
jge
fwait
movsb
int
cli
lret
sbb
notb
das
mov
pushf
addr16
movsl
out
mov
fsubr
add
aam
add
outsl
popa
push
xchg
push
insb
stc
nop
mov
jle
jecxz
sahf
daa
xor
pop
scas
aaa
xchg
test
icebp
xchg
aad
iret
push
sub
and
and
fbld
dec
push
cmc
je
out
ja
pushf
andl
adc
cmp
test
pop
cmpsl
mov
fisubrl
aam
cli
or
pop
adc
sub
outsb
inc
imul
mov
leave
outsl
push
add
mov
cs
jecxz
xorl
mov
in
jmp
in
aas
pop
outsl
or
inc
push
mov
lret
mov
mov
sbb
jb
and
mov
push
je
test
mov
rcr
or
mov
add
aas
mov
jp
outsb
lods
inc
movsb
mov
loop
testl
adc
xchg
test
sub
add
loop
fisubrs
inc
movsl
push
lea
jns
shll
xchg
int3
sbb
movsl
dec
push
push
das
leave
jge
fstps
sbbl
mov
ret
add
jno
xor
sbb
arpl
lret
scas
add
pushl
cmp
fisubrs
mov
mov
jge
sub
jne
mov
decl
cmp
push
mov
dec
adc
push
mov
dec
cmc
test
adc
cli
inc
adc
push
mov
xchg
aam
lods
push
mov
fxch
jne
push
daa
leave
jb
call
or
lcall
shr
sub
mov
dec
icebp
push
mov
or
and
pop
gs
mov
and
adc
les
sub
push
fs
data16
pop
popf
scas
rolb
mov
xlat
or
dec
pop
cmp
xchg
ja
enter
sub
cmpsb
pop
sbb
jmp
test
testl
aaa
aam
pop
jecxz
push
sub
mov
push
aad
jnp
xor
std
addl
rcrb
xchg
sub
cmp
fisubrs
mov
cld
mov
mov
loopne
sbb
jno
andb
push
movsl
cmc
xchg
into
inc
fxch
pusha
or
ficomps
mov
sbb
adc
rcrl
mov
popa
ret
and
mov
out
addr16
cmpsb
pop
mov
cmp
and
pop
mov
les
lods
sbbl
insb
and
xor
mov
testb
push
fsubs
adc
popf
xor
dec
cli
xchg
jle
les
lahf
and
rcrb
mov
sub
and
js
jne
scas
inc
xor
push
dec
in
jmp
imul
cmp
insl
stc
mov
sub
cmpsl
ds
inc
pop
lods
lds
int3
arpl
jecxz
and
add
dec
xor
mov
dec
daa
mov
mov
inc
fld
rcrb
or
push
out
sbb
adcb
cmp
mov
les
mov
mov
adc
jecxz
jae
mov
sbb
adc
cld
lea
stos
inc
aas
out
pop
repz
jo
push
push
jb
call
cs
fld
pop
cld
lea
mov
sbb
sub
adc
ss
repz
lcall
cmpsl
mov
xchg
hlt
mov
and
inc
mov
xchg
xorb
add
lea
fstps
scas
inc
dec
cld
test
push
mov
rcr
test
or
xchg
iret
mov
adc
fbstp
cli
inc
ficomps
ja
adcb
sbb
sbb
hlt
sub
adc
xchg
sub
pop
mulb
mov
xchg
xorl
loopne
popf
xor
add
lea
xor
dec
add
adc
ss
or
das
lods
fmul
inc
out
jmp
pop
ret
das
add
arpl
loope
jnp
shll
fwait
xor
pushf
jmp
push
cmpb
out
jo
fdiv
push
adc
ret
hlt
cld
adc
cmc
mov
push
iret
cmp
cmp
xchg
lcall
clc
in
cmpsb
xor
mov
lahf
lret
out
js
jb
mov
in
mov
fiadds
sub
jp
inc
xlat
pop
fwait
jle
or
mov
in
test
dec
into
jmp
jge
jp
cmp
int3
pop
sbb
fisttps
cmp
fs
jmp
jge
xchg
in
add
add
and
lahf
adc
and
shrl
xchg
mov
fstps
xchg
int3
sub
das
pop
in
fbstp
jae
in
movsb
inc
fidivl
lds
scas
iret
sbb
andb
inc
xlat
fwait
inc
sub
je
mov
popa
leave
setp
inc
ljmp
xchg
cmp
pop
outsb
mov
cmp
mov
mov
insb
push
and
divb
mov
aad
push
cwtl
ficoml
enter
adc
dec
xchg
rol
xchg
push
lods
and
jp
sub
bts
ficompl
loopne
imul
aas
call
sub
loopne
cld
push
xorl
mov
pop
repz
mov
dec
cli
loope
adc
mov
inc
push
imul
add
stc
xlat
inc
mov
ret
push
aad
out
fdivrl
push
pop
fidivs
popf
je
dec
sbb
lret
int
fwait
push
xorb
push
icebp
rcll
aaa
orb
jns
enter
loope
mov
bound
shl
mov
sbb
mov
out
inc
loop
cltd
je
adc
push
xchg
cld
jle
add
mov
insb
pop
sbb
sarb
cmpl
arpl
scas
mov
jne
cmpsl
pop
xchg
test
xchg
out
lcall
dec
pop
popf
shll
mov
popf
xchg
mov
mov
xor
dec
sub
pop
cltd
loopne
cmp
mov
mul
adc
pop
test
clc
cmp
mov
pushf
dec
mov
psrad
adc
jns
mov
hlt
outsb
mov
test
pop
cld
shlb
jno
das
bound
divl
stos
inc
push
lahf
testl
sub
call
out
dec
clc
cmp
out
ret
sahf
mov
mov
pop
scas
push
inc
fildl
mov
mov
push
out
filds
paddb
out
daa
loopne
pop
out
lea
jb
push
movsl
in
dec
xlat
int
cmpsl
std
push
loope
mov
testb
mov
fsubrs
inc
xor
xor
pop
lock
inc
pop
lock
insb
mov
int3
pop
lock
dec
pushf
xor
pop
insl
dec
push
mov
inc
arpl
xchg
jae
jo
rcl
repz
or
lret
or
lods
xchg
dec
jno
cmp
inc
mov
xor
push
in
dec
xor
mov
aad
lret
lds
or
push
jb
inc
sbb
aad
mov
repnz
das
sub
lahf
add
or
pop
xor
nop
adc
inc
xchg
lock
mov
adc
add
fnsave
in
ss
icebp
mov
mov
push
arpl
xor
cmp
push
push
push
aad
sbbl
or
dec
cmp
cmp
adc
add
jae
mov
adc
cmp
xor
adc
fidivrl
xchg
insb
dec
push
inc
mov
pop
xchg
jmp
leave
bound
inc
fisubrl
fsubrl
iret
fdivs
pop
jae
jle
push
sub
hlt
xorb
mov
dec
loope
insb
movntq
mov
pop
push
test
mov
lods
movsb
int3
fbstp
into
mov
add
push
in
pop
xor
test
ret
cmc
pop
pop
repnz
sbb
inc
fdivr
gs
xchg
lcall
scas
out
shlb
out
insb
add
sbb
data16
arpl
dec
mov
mov
mov
mov
xchg
sub
mov
lret
cmp
adc
pop
pop
sahf
dec
push
jb
xchg
adc
xlat
out
or
dec
aas
in
or
xchg
jl
xchg
scas
repz
ror
arpl
or
push
jnp
xor
test
sub
aad
fidivs
mov
jb
sub
repnz
inc
adc
movl
and
pop
aaa
imul
aas
repnz
jecxz
sbb
xchg
sub
pop
lods
inc
push
out
leave
sbb
insb
fs
cmpsl
cmp
jecxz
scas
jmp
mov
dec
gs
jno
lea
mov
aad
mov
or
jae
xor
xor
xor
mov
rcl
insb
add
cwtl
das
pop
jb,pn
popa
fwait
int3
arpl
adc
es
mov
or
in
push
testb
in
aam
ffreep
xchg
sub
push
mov
xchg
pop
xor
dec
ret
fidivl
addr16
cwtl
test
push
sbb
repz
push
push
scas
inc
sub
inc
popf
loopne
adc
adc
or
in
cmpl
jnp
sub
pop
icebp
mov
lea
cmpl
lea
and
xchg
clc
repz
jl
lea
mov
stos
and
aaa
repz
pop
and
jae
test
popa
clc
mov
push
popf
jmp
add
jecxz
imul
test
loop
or
sbb
test
cwtl
and
or
pop
push
in
pop
daa
mov
cli
dec
stc
nop
lock
nop
jecxz
add
aaa
call
incl
cmp
xlat
outsb
in
js
jns
cli
imul
stc
adc
jmp
std
lods
inc
out
imul
ljmp
add
dec
and
cmp
inc
fdiv
pop
shrl
sbb
jp
jnp
sbb
test
xchg
outsl
adc
repnz
mov
pop
dec
push
pop
testb
stc
lcall
pushf
out
pushf
xor
adc
aad
inc
fistpl
mov
jp
lret
mov
rcrb
mov
and
and
pusha
notl
aam
jne
pop
add
mov
pop
repz
mov
outsl
insb
sti
inc
fldt
jo
ljmp
aad
gs
test
push
and
pop
inc
mov
arpl
inc
fcoml
pop
sub
stc
jne
rclb
add
sbb
in
cmp
and
add
iret
push
rcrl
test
sbb
adc
fs
sub
pop
mov
pop
shll
cli
sbb
test
fwait
push
andb
jmp
inc
fisttpl
and
stos
inc
nop
addb
mov
out
mov
pop
pop
sti
xchg
mov
mov
iret
into
lds
test
sub
pop
ret
daa
mov
mov
lret
std
sub
mov
inc
js
or
jns
xchg
outsl
add
mov
pusha
pop
lds
push
popf
push
cmpsb
cli
fadds
add
and
cmp
rorl
cmp
test
jns
jecxz
and
notb
sbb
pop
or
push
mov
out
les
cmp
cli
jp
xlat
outsb
sbb
pusha
sub
push
lock
sub
jle
imul
lret
out
cmp
dec
loop
cmp
pop
lods
ds
xorl
lods
pop
lcall
push
in
ret
adc
ds
bound
cmp
cmp
mov
push
mov
adc
inc
lods
inc
jb
dec
out
pushf
dec
loop
xlat
pop
enter
sbb
cmpsb
jle
mov
fs
fwait
insl
mov
shlb
arpl
lret
bound
xor
es
dec
adcb
jmp
jle
lods
xor
loop
scas
jnp
and
ja
xchg
in
mov
pop
fdivs
aaa
sub
or
jge
lret
rolb
add
xor
jno
fmuls
push
loop
lret
popf
xor
and
adcl
cld
das
orb
mov
movsl
pusha
notl
pop
mov
add
fimull
mov
jae
lods
inc
pop
adcl
je
sbb
iret
and
ficoml
lds
cwtl
das
mov
stc
xchg
leave
stc
mov
mov
mov
cli
mov
mov
jecxz
in
pop
icebp
inc
push
test
xchg
mov
out
mov
pop
loop
mov
fimuls
cli
ds
add
mov
xchg
xlat
mov
inc
fdivl
pusha
test
pop
jmp
cmp
mov
scas
dec
sbb
ja
mov
mov
rclb
rcrb
testb
inc
sub
pop
lock
pushf
mov
push
jmp
or
insl
pop
mov
xchg
lea
mov
fnsave
test
sub
or
mov
pop
scas
lods
sub
mov
add
xor
lods
inc
push
push
imul
test
leave
jmp
cmp
inc
les
outsl
sub
pushf
popf
fidivl
mov
clc
xchg
es
add
inc
push
mov
pop
mov
lea
mov
in
sbb
rcrl
or
loopne
adcl
xchg
jecxz
inc
adc
aaa
into
imul
cmpl
mov
and
sub
je
inc
fnsave
aam
sti
add
dec
sbbb
xor
cmp
xchg
ret
push
sbb
xchg
cs
pop
fsubrs
cmp
imul
adc
vmread
lret
testl
movsl
dec
push
ds
mov
scas
adc
mov
push
jno
std
mov
leave
add
adc
ds
in
add
mov
leave
xlat
outsb
sti
adc
faddl
lds
mov
pop
lcall
mul
sub
loopne,pt
pop
rcrl
mov
aam
test
pushf
sar
push
das
repnz
js
inc
fimuls
lret
dec
in
in
mov
push
mov
pop
mov
das
mov
mov
mov
dec
out
pop
lds
call
pop
adc
push
cmpsl
and
pop
xchg
iret
sbb
sbb
scas
inc
pop
pop
add
fildll
ret
cmc
add
adc
ret
push
add
pop
mov
push
jecxz
inc
faddl
or
idivb
pop
adc
enter
rorb
std
xchg
jl
push
ljmp
hlt
mov
js
loop
xchg
sub
loope
inc
shr
xor
pop
adc
lea
shll
mov
mov
pop
scas
loope
clc
or
or
pop
pop
scas
mov
sub
sub
mov
lods
fwait
adc
and
xchg
lahf
movups
jmp
add
xor
movsb
pop
pop
xor
mov
mov
movsb
aam
xlat
lcall
xor
mov
mov
or
dec
aam
es
xor
or
mov
sub
mov
xchg
sub
movl
inc
mov
into
mov
rcll
jl
loop
aaa
adc
pop
xchg
aaa
into
outsl
mov
shlb
pop
call
add
sub
ds
jns
cs
aas
sbb
hlt
fistpll
rcrb
enter
out
aad
pop
imulb
ret
clc
cmc
call
nop
daa
dec
jmp
mov
addr16
mov
loopne
rclb
aaa
into
test
pop
out
aas
mov
lahf
sub
xchg
movsb
mov
jle
fidivl
and
hlt
pop
mov
mov
jge
jns
push
out
mov
pop
cli
out
xor
adcb
nop
add
fdivs
jmp
repnz
and
cmp
leave
dec
inc
fidivrs
jmp
sbb
adc
adc
push
test
fwait
push
filds
adc
push
cmp
outsb
insb
push
jo
mov
rolb
sahf
add
xlat
popa
sub
rcll
aaa
into
test
aaa
into
add
xor
movsl
cmp
aad
lret
lds
fs
cmc
xor
in
pop
mov
adc
cmp
push
shrl
rol
fidivs
test
sbb
jge
clc
pop
xor
dec
adc
mov
fwait
sub
mov
leave
pop
icebp
cli
mov
inc
sti
pop
bnd
cltd
xor
int3
ds
lret
push
ljmp
and
les
push
jmp
xor
and
jge
push
jmp
cwtl
fs
mov
aam
imul
push
popa
clc
aas
daa
es
js
dec
jecxz
xchg
pop
hlt
mov
and
add
loope
sub
lock
push
mov
lret
loop
loop
or
dec
es
nop
ds
loope
mov
and
push
sub
ret
pop
movsl
inc
pop
hlt
jbe
arpl
jbe
cli
xchg
shlb
xchg
data16
popf
xor
ja
xor
cmp
ja
ds
lahf
fdivl
lcall
sub
outsl
push
inc
inc
sbb
js
or
xor
sbb
xor
fsubrs
nop
pushf
xor
int3
imul
jmp
rcrb
mov
fdivl
cs
mov
movsb
cmp
push
jmp
mov
push
pop
dec
xor
in
imul
sti
xchg
or
nop
daa
lods
and
int
cmp
scas
std
int
out
enter
and
xchg
adc
adc
or
mov
and
push
cmpsb
push
out
sbb
sub
adcb
mov
repnz
inc
fstp
sbb
ret
dec
out
enter
lret
bound
mov
push
popf
sub
or
dec
pop
mov
dec
arpl
sahf
or
pop
dec
pop
lods
and
pushf
xchg
sbbl
dec
stos
lods
inc
fnstsw
xchg
insb
cmc
dec
loop
lahf
mov
addl
mov
frstor
sub
daa
pop
call
andl
jle
xchg
testb
daa
cmpsl
inc
fcoml
push
lods
inc
andb
mov
stos
stos
inc
sbb
jbe,pn
mov
shrl
rol
sub
iret
add
ja
lret
bound
ja
pop
push
imul
mov
mov
lods
inc
or
xchg
dec
loop
cmpl
scas
imull
call
jmp
rcr
adc
inc
inc
psllw
mov
leave
in
test
sbb
mov
inc
fdivl
int
insl
sub
sahf
sbb
nop
mov
mov
int3
add
add
sbb
lea
mov
leave
mov
xchg
sub
jo
shll
adcl
subl
lahf
loope
int3
arpl
scas
imul
add
push
mov
inc
push
lods
inc
mov
push
xchg
mov
dec
in
cld
in
xchg
cs
mov
cmp
and
or
aam
dec
out
xchg
in
fisubl
cmp
imul
sbbl
sub
fsubrl
push
loope
dec
loope
in
in
jg
test
fimull
mov
push
mov
lret
das
pop
mov
rorl
cmpsb
ret
daa
inc
fcomps
clc
in
out
movsl
out
jne
int
sbb
sbb
mov
daa
mov
mov
sarb
mov
push
in
and
icebp
mov
daa
mov
sub
lret
scas
xor
loopne
clc
jge
xlat
cs
xor
repz
test
repz
ret
add
out
xchg
sub
ja
sbb
test
leave
out
mov
mov
mov
mov
mov
into
gs
xlat
outsb
cmp
imul
lahf
lcall
mov
movsl
mov
incb
stos
add
xor
xchg
cs
dec
xor
jle
adc
lret
ja
loope
inc
adc
movsb
cmp
sbbl
dec
fnsave
out
mov
push
movsl
fisttps
outsl
inc
cmp
push
and
mov
aad
clc
or
and
push
mov
add
mov
lds
imul
inc
fstl
pop
scas
ss
js
dec
fnstenv
movb
cmp
and
lods
outsb
lds
adc
loope
enter
add
fbld
mov
mov
mov
xchg
sbb
jg
adc
xchg
and
sub
outsw
mov
pop
cmpb
or
sub
shl
imul
aas
mov
out
stos
test
iret
inc
or
jg
mov
mov
mov
jg
std
xchg
mov
sbb
pop
sarl
das
filds
ds
inc
dec
ds
jno
pop
jmp
adc
ds
or
lock
adc
les
xor
adc
inc
push
mov
test
mov
mov
cli
xor
movl
add
add
out
test
push
pop
jns
clc
icebp
leave
imul
iret
xchg
divb
das
pop
sub
sbb
sub
testb
pop
fstpt
jo
clc
mov
xchg
mov
cwtl
scas
int3
mov
lahf
mov
popf
stc
jle
ljmp
ret
stc
repnz
sub
push
and
xor
inc
pop
fmuls
dec
inc
add
pop
pop
add
cld
push
outsb
jp
lea
loop
push
jae
jnp
dec
push
enter
cmp
pop
xor
push
or
xchg
ret
adc
dec
mov
push
lcall
in
mov
mov
mov
cwtl
sbb
int3
mov
push
mov
mov
inc
add
xor
flds
insl
xchg
or
test
jl
loop
icebp
jmp
cmc
aam
scas
jge
push
and
popa
insl
xchg
popf
les
pop
dec
pop
jp
push
xor
cmc
push
shrl
lds
ljmp
sbb
push
stos
mov
push
jmp
and
mov
dec
sbb
cmp
ss
sbb
push
pop
out
mov
mov
or
mov
xchg
sub
lods
fnsave
mov
addl
shlb
push
outsl
push
test
mov
and
dec
mov
inc
sub
leave
popa
in
cli
xchg
and
jmp
scas
je
pop
sahf
mov
and
jmp
incl
xor
jb
div
stos
inc
and
xchg
sub
leave
pusha
jne
mov
sahf
xchg
out
enter
icebp
jmp
out
xchg
and
or
cs
clc
lcall
adc
pop
jne
stos
je
xchg
adc
ficoml
xor
inc
sti
scas
inc
sub
dec
int
loop
lahf
mull
jns
es
adc
js
int3
lods
inc
call
int3
arpl
sbb
jae
test
adc
fistl
xor
inc
cld
scas
inc
arpl
xchg
dec
int3
movl
fidivs
adc
push
ljmp
jno
js
mov
stos
test
adc
sti
pushf
mov
and
sarl
test
out
rol
pop
clc
icebp
testb
inc
adc
je
add
mov
push
out
adc
inc
cmp
imul
or
jl
pop
ret
inc
icebp
adc
or
mov
adc
and
or
and
cld
test
shll
push
xor
ss
mov
test
shll
stc
fildl
jb
sub
push
push
pop
insb
add
mov
and
mov
inc
xor
push
pop
mov
loop
bound
add
cs
push
mov
push
and
pop
mov
pop
icebp
stos
hlt
pop
hlt
and
inc
jnp
js
xchg
cs
cltd
cltd
xor
jae
dec
movsl
in
mov
push
shrl
aas
aad
jno
repnz
mov
insl
adc
push
shrb
icebp
aaa
das
push
mov
mov
inc
stos
mov
mov
lods
outsl
lds
cmc
popf
fdivl
data16
mov
and
nop
sbb
outsl
int
addr16
cmpsl
ret
int
js
sbb
clc
sbb
or
fwait
mov
dec
stos
sub
inc
cmc
popf
jae
icebp
lret
adcb
mov
loope
inc
into
jnp,pn
movsb
xchg
cmp
and
inc
fldl
inc
mov
aad
jno
fst
and
jp
mov
sbb
call
aas
jge
cmp
scas
sub
add
in
cmc
inc
cld
mov
pop
mov
sbb
pop
sbb
dec
jge
cli
lods
insb
popa
negl
sarb
and
xor
push
mov
rcr
divl
popl
repnz
adc
cwtl
adc
ljmp
in
aas
add
xor
jae
scas
push
insl
add
mov
nop
sub
icebp
test
es
dec
mov
enter
aam
add
lea
or
test
sub
jo
xor
add
mov
pop
in
sub
dec
in
dec
fcomip
mov
or
cmpl
push
mov
dec
jae
jae
mov
rolb
movsb
shr
pop
mov
outsb
aaa
pushl
sbb
loop
fnsave
dec
add
lcall
out
mulb
cmp
roll
test
je
daa
aaa
push
loope
scas
dec
pop
fwait
stos
pop
lea
push
push
lea
test
rorl
negl
jecxz
and
sbbb
mov
fldt
lea
mov
add
jle
pop
inc
icebp
pop
insb
inc
aad
add
icebp
push
jbe
dec
sub
dec
cs
imul
xchg
loop
jmp
arpl
adc
lods
jae
inc
pop
clc
gs
xchg
mov
orb
scas
sbb
cs
jb
retw
sub
fists
jnp
cmpsb
roll
or
aaa
xchg
in
xor
sub
rclb
repz
das
xchg
mov
mov
imul
mov
dec
mov
data16
in
in
in
shl
in
rcrl
adc
adc
cmc
xor
jo
adc
lahf
das
cmpsl
jae
jp
in
and
mov
imul
mov
inc
fstps
outsl
jge
fidivrs
in
adc
inc
cld
mov
mov
jmp
jg
push
push
push
stc
decl
xor
cmp
mov
xor
adc
iret
and
mov
sub
addr16
loopne
or
adc
pop
iret
jbe
or
adc
arpl
pusha
inc
movsb
setge
stos
dec
nop
mov
xchg
rcrb
xchg
aaa
movsb
lods
sbb
inc
mov
scas
cwtl
mov
mov
cmp
pop
sahf
cs
cltd
test
lret
ret
aaa
sbb
adc
fwait
inc
dec
das
push
cld
je
cmpsl
sub
sbb
or
int3
outsb
pusha
mov
mov
out
cmp
cs
lret
jbe
negl
int
stc
mov
movsb
cmp
repnz
push
fldcw
cli
lods
or
push
add
fs
xor
jmp
mov
mov
sub
cmpsb
push
add
pop
pop
and
cwtl
pop
xchg
shl
add
cmp
hlt
fstps
rolb
out
mov
pop
jmp
repz
je
and
arpl
gs
ret
mov
ss
adc
rorb
cmpb
add
cmp
push
push
js
sbb
push
rcll
push
mov
add
mov
inc
addr16
mov
es
mov
test
push
add
push
jge
loop
adc
inc
sbb
xorb
inc
stc
mov
sbb
jo
popf
cmp
jmp
repz
inc
jnp
ja
test
in
stos
hlt
out
subb
xchg
fwait
mov
mov
dec
add
cmp
test
or
push
cs
ret
xlat
pushf
dec
jne
repz
call
sbb
and
nop
insb
dec
dec
or
ret
scas
sub
cmpsb
in
sub
push
jmp
pop
jle
cmpsb
lret
pop
xchg
cmp
cvtdq2ps
adc
xchg
sahf
test
inc
rcr
leave
mov
xor
jle
xor
mov
stos
push
adc
fimuls
sbb
enter
inc
pop
jecxz
lds
adcb
push
add
cmc
adcb
xchg
adc
ds
push
leave
fadds
jo
clc
pop
shlb
jge
push
cli
pop
jl
enter
xchg
aas
xor
pop
sbb
out
fisubl
mov
mov
cwtl
mov
lcall
or
int
sbb
jl
push
scas
rcrb
out
fisttpll
jecxz
add
push
mov
pop
mull
mov
xchg
adc
push
icebp
sbb
dec
push
adc
scas
das
fstl
jae
xchg
sub
mov
lea
das
or
or
call
sbb
jmp
out
jg
or
rep
cmpsl
mov
mov
scas
loopne
insl
jmp
out
cld
pop
aas
stc
mov
jmp
leave
cli
mov
push
fisttpl
jmp
fdivrl
cmp
sub
js
mov
ljmp
xor
or
mov
mov
mov
out
stos
adc
push
xor
xorb
das
xchg
cmp
ss
lds
cli
jmp
sbb
in
insb
stc
xor
sbb
aam
dec
in
test
insb
and
es
push
xchg
outsb
mov
stos
xor
adc
adc
adc
mov
inc
je
inc
push
xchg
sbbl
xlat
push
jg
cltd
div
xchg
in
and
pop
aad
dec
or
cmp
sbb
push
and
or
mov
sar
sbb
stos
jl
mov
adc
rcll
insb
fcoml
adc
mov
mov
jge
push
lahf
inc
test
shlb
cwtl
outsl
xchg
in
fidivs
push
sbbl
fwait
inc
mov
notl
add
jo
jl
xchg
inc
push
in
adc
mov
int3
icebp
fwait
mov
lret
dec
out
mov
jl
dec
pop
fdivs
popf
cmpsl
jae
outsl
fs
xor
adc
push
inc
out
lds
mov
or
jns
shl
cwtl
es
xor
adcb
out
push
in
pop
repnz
insl
jg
and
xchg
xlat
dec
popf
xchg
adc
subl
push
icebp
and
mov
or
jmp
mov
dec
push
in
cmp
inc
cmpsl
ds
sahf
jl
mov
cltd
cmp
stos
push
imul
and
popa
mov
mov
je
in
mov
es
sub
xchg
or
out
push
cmc
mov
add
repnz
out
dec
mov
adc
aad
test
mov
sub
and
call
jmp
sub
pop
cmp
lahf
imul
mov
push
fnsave
lret
xlat
outsb
bound
push
call
mov
outsl
push
mov
adc
pop
sub
enter
inc
pop
jnp
add
test
or
daa
mov
test
sbbb
std
mov
pop
aas
aad
icebp
ja
imul
mov
in
inc
popf
pop
dec
imul
or
dec
imul
jg
cmp
dec
jg
xchg
sub
fnsave
sbb
xchg
dec
stc
nop
xor
mov
push
pop
scas
cmpl
int3
aad
push
out
inc
notb
daa
fs
xchg
dec
jno
jp
xchg
sub
fwait
es
mov
cmp
lods
inc
and
addr16
inc
lret
bound
out
test
xchg
jmp
movsb
xor
push
sub
mov
and
loopne
mov
mov
fisubs
cmovle
push
bound
popf
xor
hlt
rcl
imul
in
in
pop
inc
push
xlat
aam
cmc
pop
dec
xor
xchg
add
stc
mov
adc
or
add
ret
mov
call
inc
push
test
lds
arpl
and
jae
adc
and
imul
add
pop
out
sub
mov
jmp
in
mov
aad
cwtl
and
dec
or
adc
rolb
out
stc
gs
lock
sbb
dec
mov
push
jmp
or
dec
repnz
mov
adc
imul
lock
mov
montmul
cmpsb
xchg
sub
fstps
loop
cli
dec
loop
mov
add
dec
imul
xor
push
cmpsb
cmp
and
les
inc
ret
pop
ja
loop
das
cltd
loope
lret
push
add
push
mov
sbb
fidivrl
mov
int
in
push
mov
icebp
mov
rorl
repnz
cmc
mov
push
call
cmp
fldt
lds
cmp
stos
lods
sub
lret
jns
mov
fisubrs
iret
inc
inc
lods
inc
loop
das
xor
jl
jne
leave
pusha
and
jg
repnz
pushf
xchg
pop
hlt
into
mov
mov
or
adc
xor
imul
and
cli
lahf
inc
xlat
rcrl
int3
mov
loope
lods
repnz
inc
dec
jecxz
inc
sub
inc
push
jecxz
fcomps
pushfw
xor
and
push
jge
mov
pop
sti
xchg
xchg
imul
and
pop
sahf
or
fidivl
popf
xor
push
push
out
inc
nop
pop
mov
fsubrs
outsb
xchg
sub
jp
mov
cmp
outsb
mov
decb
loope
pop
popa
clc
nop
sarl
test
scas
sbb
ss
fdivl
push
les
push
push
lods
pop
sub
pop
jge
movsl
outsb
jmp
sbb
pop
out
ljmp
int
mov
int3
es
or
xchg
inc
mov
adc
dec
adc
push
pop
out
xchg
sub
orb
loope
adc
sbb
test
adc
iret
aaa
xchg
test
lret
mov
fcompl
mov
loop
add
jbe
iret
out
sbbl
addl
sub
pushf
pop
scas
inc
cmpl
fcomps
lods
inc
cld
pop
repnz
push
ret
cli
jbe
subb
inc
int3
mov
popa
sti
insb
std
xchg
pusha
sbb
scas
inc
fcompl
sar
xchg
or
add
lods
mov
fcoms
inc
addb
addr16
pop
fs
cmpsb
jns
mov
test
inc
xlat
addr16
insl
nop
add
pop
inc
mov
xor
in
shlb
add
out
adc
jp
mov
sbbl
cwtl
jle
popa
jo
sub
pop
xchg
stos
inc
add
daa
mov
xchg
ret
std
mov
repz
pop
popf
xor
pop
or
cmp
loope
rcr
jno
cmpb
mov
jmp
xchg
jne
test
adc
push
in
test
ljmp
iret
scas
inc
rcl
mov
jecxz
lcall
test
mov
jns
dec
fists
push
movsl
or
testl
or
stos
inc
xor
jg
inc
jle
xchg
xchg
gs
push
cmp
pop
push
repnz
xor
xor
pusha
idiv
fidivrs
lock
fbld
pushf
call
shll
fidivl
push
into
gs
xor
pop
sahf
pop
or
shrl
mov
and
mov
push
fidivs
lahf
pop
hlt
lds
pop
scas
cmpsl
inc
cmp
xor
push
mov
mov
pop
in
stos
inc
sbb
insl
mov
jecxz
mov
cwtl
jge
lea
push
mov
jle
mov
adc
sub
aaa
ljmp
dec
mov
leave
pusha
pop
pop
inc
fcoml
cmp
adc
sbbl
lock
mov
int
ds
mov
mov
xchg
fnsave
rcrl
mov
sahf
pop
mov
dec
ss
popa
outsl
or
inc
cmpl
inc
xchg
or
sbb
pop
scas
popa
jo
popf
iret
xchg
sub
aaa
jp
arpl
jecxz
aam
cltd
xor
loop
out
mov
lea
int
jmp
xchg
xchg
shrl
and
outsb
cmp
insb
ret
mov
push
loope
xchg
and
jns
fcmove
mov
cmc
sti
ja
in
lcall
jg
cld
xchg
mov
push
testb
daa
adc
mov
ds
fldenv
mov
in
out
xchg
mov
add
add
mov
xchg
repz
es
fists
mov
xchg
cs
dec
or
sub
cmpsb
dec
outsl
cltd
xor
and
cmc
repz
data16
adc
lods
test
and
call
add
mov
or
int3
sahf
xor
or
or
loopne
or
sbb
add
and
cli
xchg
mov
pop
je
lea
loopne
pushf
and
lods
cmp
call
cmc
push
repnz
sbbb
arpl
jle
push
push
out
jbe
sahf
sub
mov
stc
add
dec
sbb
imulb
push
call
xor
rcrb
xor
popf
xor
push
xor
xor
daa
push
inc
mov
jae
push
lret
bound
mov
xchg
and
sub
xor
push
fs
dec
mov
ljmp
jl
and
rclb
fsubrs
push
out
xchg
add
pop
sub
cmp
cli
dec
adc
test
pop
popf
xor
jno
mulb
push
adc
adc
gs
lea
cmpsb
test
sub
fidivs
adc
mov
loop
rcrb
lret
in
lock
cmp
imul
or
sahf
mov
mov
xor
push
sbb
push
push
stc
nop
je
pop
scas
addr16
push
aas
cli
in
pop
std
sbb
cmpsb
mov
jbe
pop
dec
dec
loope
inc
dec
jecxz
cmp
inc
out
mov
and
sbbb
pop
jns
cmp
xchg
fisttps
cmp
push
rcrl
adc
and
cmp
lock
or
out
push
xor
dec
popf
test
int3
imul
jne
jl
outsl
outsb
dec
mov
ja
cmp
add
sub
ds
fs
into
aad
divb
adc
dec
cmp
das
dec
add
cmpl
rcrl
lret
xorb
icebp
mov
sbbl
mov
dec
inc
xchg
sub
dec
lret
sub
mov
fisubs
iret
sarb
repz
popf
xor
add
shlb
repz
daa
imul
cwtl
ljmp
sub
popf
xor
dec
inc
fdivrs
addr16
sahf
pop
push
call
pop
jno
mov
ret
pop
adc
jne
mov
dec
dec
out
stos
or
pusha
cmp
shrb
dec
repz
movsb
cmp
jne
cmp
out
lcall
in
add
cwtl
jo
nop
ficoml
adc
adc
or
cs
adc
lea
mov
arpl
dec
dec
loop
mov
fcoml
ret
mov
scas
pop
or
mov
mov
sbb
mov
ret
outsb
add
pop
stc
nop
jecxz
daa
mov
mov
ret
stc
mov
fists
test
jne
xchg
push
add
js
add
cld
xchg
or
cmc
mov
sub
xchg
fmul
cmc
mov
std
jbe
int
imul
out
jmp
out
test
cli
jbe
roll
push
xchg
repnz
int3
mov
xchg
out
add
mov
cmp
jp
adc
js
push
lea
ss
add
stos
inc
push
fistpl
or
fnsave
jb
pop
lret
cld
adcb
std
xchg
sub
nop
dec
jecxz
lea
mov
loopne
cmp
mov
mull
add
mov
push
mov
add
ja
out
push
filds
fisubs
das
add
repz
cs
shl
mov
mov
dec
add
xchg
xchg
and
pop
dec
mov
dec
or
xchg
cmp
scas
inc
pop
pop
sbb
push
mov
adc
je
xor
xchg
mov
and
pop
into
gs
and
imul
sub
xchg
pop
sbb
ds
in
mov
adcl
mov
lock
iret
push
cmp
lret
shlb
push
pop
int3
ret
jge
ljmpw
adc
ret
pop
cmp
xor
pop
ffreep
or
adc
sbb
outsl
mov
pop
cmp
mov
inc
cld
bound
cmp
pop
out
lds
cmp
clc
cmp
inc
mov
adc
mov
ja
dec
fdivrs
cmpsl
insl
outsb
dec
push
jno
outsl
inc
fists
xor
repz
dec
icebp
mov
test
repz
cmpsb
cmp
pop
adc
in
cmp
add
cltd
in
adc
clc
dec
xchg
loop
hlt
pop
movsl
mov
mov
add
pop
shll
insb
in
ds
sub
jg
add
aad
and
icebp
pop
data16
test
sahf
xchg
sbb
sbb
jecxz
hlt
out
jo
fistl
xchg
push
nop
mov
out
mov
cwtl
test
mov
jne
loop,pt
mov
addr16
xchg
or
pop
aam
cmc
xor
jl
data16
jg
xchg
jg
cpuid
cmp
shrl
nop
sahf
xor
loopne
mov
ss
and
fwait
mov
push
ljmp
push
lods
sbb
aad
xor
jno
sub
loope
push
mov
icebp
lds
adc
popf
in
pop
push
mov
cltd
xor
adc
pushf
loopne
add
pop
push
jmp
in
mov
fisubrl
rorb
add
int3
arpl
arpl
jno
xchg
out
add
inc
cmp
dec
sar
mov
dec
fisttps
stos
dec
jecxz
sub
sbb
dec
jge
pop
pop
outsb
in
dec
jle
test
rcrl
outsl
push
ss
cwtl
das
fs
out
xor
push
xchg
sub
xchg
push
test
xchg
sub
cld
xchg
call
or
mov
lahf
testl
cmpsb
push
lahf
mov
stc
lock
xor
int
fs
lcall
lock
push
movsl
fsubl
dec
inc
std
pop
sahf
cs
cmp
or
mov
ss
jmp
mov
in
cmpl
jb
jns
mov
mov
jo
mov
in
add
push
fdivr
xchg
lret
pop
xor
dec
xchg
rclb
inc
inc
into
and
cmp
push
pop
aas
int3
xor
stos
sti
inc
fucomp
sub
int3
arpl
pop
movsb
cmp
int
mov
ret
sbb
xor
stos
pushf
xor
pushf
mov
push
out
xchg
sub
cmp
aaa
lret
pop
stos
cltd
clc
dec
xchg
or
xchg
lahf
lock
dec
pop
out
inc
jae
call
loope
int
push
inc
faddl
adc
fidivs
into
dec
aad
jp
mov
loopne
jle
lds
ds
adc
arpl
arpl
push
into
push
in
rol
shll
mov
pop
add
fbstp
adc
lea
mov
ljmp
push
loope
outsl
dec
and
cmp
cmpsl
test
out
scas
pop
sbb
push
out
push
dec
out
int
cmpb
lds
stos
stos
mov
fidivs
repz
in
repz
push
lret
dec
dec
in
jecxz
pop
aam
leave
pusha
hlt
sbb
inc
sbb
leave
pusha
sub
push
imul
xchg
lods
add
int3
enter
pop
sub
fsts
sub
push
aaa
into
inc
pop
cmp
js
push
rcrb
dec
mov
inc
ffree
ja
push
movsl
ds
inc
cmc
mov
jl
inc
outsl
mov
imul
mov
cmp
mov
xlat
lods
icebp
dec
add
shrl
pop
push
popf
dec
sbb
sti
lahf
jmp
mov
sub
fwait
mov
add
iret
push
out
scas
add
xchg
mov
adc
jg
fwait
xchg
mov
push
rolb
clc
xor
sub
mov
lea
mov
adc
inc
sbb
ds
jle
jo
arpl
stc
nop
mov
loopne
nop
fdivrs
in
mov
aaa
or
add
fwait
sub
ja
mov
cwtl
das
dec
daa
fs
jg
lret
mov
call
fidivs
shlb
aad
fnsave
push
jmp
adc
push
movsl
mov
fstl
in
test
cmpsb
stos
inc
std
xchg
jbe
sub
movhps
xor
xchg
imul
test
add
test
xor
pop
mov
scas
inc
fists
or
mov
mov
adc
test
lea
fidivl
dec
outsb
add
inc
jbe
mov
lret
push
sbb
mov
push
icebp
mov
lret
bound
jp
incb
xchg
sub
push
pop
jne
push
mov
jbe
push
ss
and
jbe
xchg
mov
fisubrl
ret
sbbl
pushf
ja
jle
mov
xchg
sub
and
fs
lret
cwtl
cwtl
das
das
repz
insl
enter
sub
mov
aam
add
jnp
lock
pushf
mov
movsl
mov
ficomps
and
mov
scas
jae
mov
mull
daa
icebp
mov
dec
in
push
sbb
stc
add
pop
icebp
stos
and
mov
lret
or
repz
lods
lahf
adc
lods
inc
shlb
push
call
int
adc
pop
rcrl
jp
jae
loope
pop
xchg
xchg
sub
jl
jle
out
dec
ror
push
out
loope
dec
les
pop
test
stos
inc
test
es
cli
mov
lret
int3
iret
data16
scas
inc
loope
int
mov
mov
xor
leave
ret
pop
fiaddl
mov
lret
push
ret
xchg
xlat
ja
in
cmpsl
ds
push
add
push
mov
mov
repz
fucom
insl
cmp
pusha
scas
lds
jmp
add
rcrl
mov
insb
xor
pop
divb
xor
lahf
add
push
outsb
xor
pop
mov
bound
call
fnstenv
bound
push
push
adc
jae
pop
jl
sub
leave
xchg
sub
mov
push
sbb
mov
and
mov
jl
pop
iret
mov
fwait
xor
loope
sub
aas
loope
jno
lret
bound
xchg
cs
jl
and
orb
andl
dec
fisubrl
out
test
push
pop
hlt
orl
jp
jge
lret
mov
jmp
inc
or
cs
pusha
pusha
push
mov
mov
inc
fsubrl
xor
inc
test
and
movsb
cmpsl
stc
nop
pop
and
lods
xchg
rorl
cmpsl
xchg
out
dec
inc
push
in
xor
pop
cmc
mov
xchg
mov
fbstp
pop
and
aaa
mov
in
sbb
ret
pop
mov
cmp
mov
cs
inc
mov
jbe
and
inc
enter
cmp
sub
mov
dec
and
loope
sbb
hlt
add
and
push
or
pop
jp
xor
push
pushf
xchg
sub
sub
mov
inc
in
pop
scas
pop
icebp
icebp
jnp
sub
adc
rclb
xor
add
rclb
or
call
pop
enter
jge
jno
mov
cmp
inc
xlat
ret
or
js
jge
mov
ja
mov
stos
daa
sarb
dec
aam
iret
data16
jae
inc
jbe
xchg
push
scas
cmc
mov
sub
test
and
rclb
xchg
jae
or
sbbb
jno
sti
popa
insb
fsubrs
addb
aad
loope
outsb
mov
aas
adc
jl
dec
outsl
pop
mov
mov
jecxz
sbb
aaa
mov
push
stos
stos
mov
cmp
fwait
cld
xchg
int
sub
and
fdivl
loope
adc
push
stos
jg
ret
hlt
lods
mov
push
add
insb
mov
sahf
dec
arpl
push
cld
clc
cs
cwtl
xchg
add
sub
mov
or
or
test
test
mov
cwtl
mov
sbb
push
les
mov
pop
shll
sub
pop
ficoml
fidivrl
or
mov
add
outsb
add
daa
arpl
jae
dec
arpl
push
dec
filds
adc
pop
lods
ljmp
pop
fadds
push
test
movsl
negl
int
fucomp
xor
aad
mov
or
lea
fidivrl
jle
adc
fsubrp
push
push
mov
repz
push
mov
mov
jmp
jle
adc
je
sbb
jns
sbb
fstl
push
cmp
movsl
add
xor
sbb
sarb
fistpll
sbb
xor
jae
cmovs
add
pusha
test
sbb
adc
inc
stos
xchg
or
in
pop
mov
out
and
mov
jo
bound
jb
dec
lea
inc
mov
pop
push
and
inc
inc
push
cltd
addr16
inc
mov
pop
dec
shlb
js
push
sbbl
push
cltd
sbb
pop
jae
lahf
clc
xor
mov
dec
lods
pop
jmp
rorb
push
xlat
mov
sub
int
jnp
stos
inc
dec
pushf
mov
sub
hlt
jmp
movsl
in
test
hlt
into
adc
andl
or
xchg
hlt
jae
add
add
jae
pop
or
repz
push
mov
sub
popf
xchg
aad
sub
xor
xor
fs
js
in
xor
push
or
cmp
mov
outsl
out
xchg
dec
arpl
push
push
jl
insl
jne
mov
rcrl
adcb
inc
dec
fnstcw
mov
inc
aas
inc
std
jge
nop
lea
cltd
ja
adc
lods
ja
dec
add
and
ljmp
sub
add
or
or
inc
fs
push
shlb
stos
gs
sub
pop
in
cs
shrl
dec
jae
pop
mov
mov
ds
pop
add
movsb
cmp
enter
pop
out
pusha
shlb
je
test
xlat
jb
ljmp
add
cmp
jmp
inc
mov
es
clc
mov
in
mov
or
mov
loope
out
and
lret
aad
dec
mov
ret
call
or
sub
mov
and
xchg
fucom
or
push
adc
mov
fidivrs
out
and
push
adc
jo
mov
add
sbbb
push
inc
fldcw
std
xchg
sub
jle
adc
push
xorb
jb
loope
mov
aam
mov
hlt
icebp
mov
fdivrl
push
mov
les
mov
xchg
lret
bound
mov
sbbl
pop
pop
bnd
std
xchg
sti
mov
push
sub
bound
adc
imul
pop
rorb
gs
jo
mov
pop
or
xor
sbb
lcall
stos
inc
div
xchg
in
inc
cmp
rolb
sub
repnz
sti
icebp
in
insb
dec
xchg
sbb
sbb
sub
outsl
xchg
push
dec
push
lods
shl
xchg
mov
pop
sbb
insb
iret
mov
div
xchg
add
fsub
jb
popa
movsb
pop
pusha
sub
js
jo
testl
les
rorb
inc
ja
pop
mov
sar
dec
adc
loop
or
mov
or
call
cmpl
push
xchg
jle
mov
jnp,pn
sbb
or
push
and
cs
mov
sub
xchg
add
cmp
fisubrs
sub
repz
dec
push
mov
fdivl
mov
jbe
int
cmp
fldcw
arpl
adc
fsubl
jg
hlt
push
test
in
push
lret
xor
ds
fldt
jmp
inc
mov
mov
imul
stc
nop
cltd
mov
adcb
sbb
push
addr16
jb
sub
mov
ret
mov
pusha
push
adc
imul
pop
jp
testl
xor
lcall
ret
xor
and
mov
adcl
stos
leave
lcall
enter
and
adc
jmp
inc
sub
xor
fidivrl
test
mov
add
or
bound
and
jno
mov
test
fwait
xor
jae
inc
or
pop
jns
mov
push
mov
cmp
xchg
sub
stos
shlb
pop
int
sbb
fsubl
inc
aas
push
mov
aam
iret
sub
mov
xor
out
mov
pop
repnz
cmp
mov
jne
dec
mov
imul
imul
inc
jns
lods
mov
out
jo
stos
or
push
push
andl
test
in
test
aad
inc
setg
rclb
xlat
adc
cmp
sub
push
pop
inc
iret
fdivr
jl
je
in
lock
adc
xchg
inc
inc
and
dec
sub
adc
daa
mov
fistpl
sbbb
repnz
fs
sbb
push
cmpsl
mov
pop
sub
pop
inc
dec
push
mov
cltd
int
sar
rcll
test
lret
cld
shl
jecxz
sub
adc
int3
jecxz
insl
lods
jge
mov
insl
xor
es
aad
cs
xchg
divl
loop
mov
loope
loopne
xor
add
mov
push
arpl
jb
mov
pop
fdivrs
mov
mov
mov
add
xor
imul
cmp
mov
sti
mov
lods
testb
fwait
xor
cmp
inc
dec
add
lret
jns
js
sbb
out
into
and
outsl
pusha
push
shufps
xchg
stos
clc
cmp
jbe
fisttpl
std
or
jle
and
arpl
jae
sbb
xor
outsl
pop
jge
cltd
scas
outsl
aad
mov
mov
xor
rclb
iret
lods
repnz
iret
ja
stos
lods
push
inc
and
mov
cmp
imul
cmpsl
cmp
fmul
dec
mov
mov
and
ss
loopne
jno
mov
cwtl
mov
mov
ret
mov
out
popa
mov
arpl
shrb
gs
pop
pop
cltd
cmp
sbb
mov
and
jo
jne
stc
jb
stc
mov
cmc
das
fstpt
cld
and
lret
mov
les
aas
add
dec
xor
pusha
out
ja
shlb
dec
mov
test
int3
or
pop
or
addr16
outsb
or
je
mov
add
pop
jbe
cld
imul
dec
dec
xchg
sbb
mulb
add
or
jmp
test
test
mov
pop
jb
int
gs
push
sbb
mov
pushf
call
mov
mov
lea
pop
test
mov
outsl
movsb
push
and
push
dec
pop
add
insb
mov
dec
dec
ja
subl
stos
cmp
and
inc
enter
outsb
je
push
aaa
iret
or
das
push
dec
loop
aad
xchg
pop
std
out
sbb
or
enter
mov
push
jo
fcoms
sbb
jno
dec
push
inc
daa
pop
mov
sub
xor
adc
xchg
jne
adc
insb
test
mov
in
data16
or
imul
mov
and
cmp
xor
sub
push
jns
sbb
xor
mov
test
mov
jno
jne
add
jo
lds
inc
imulb
in
adc
push
jno
fcoms
xor
int3
jmp
enter
faddp
pop
adc
dec
aas
mov
pop
fdivl
mov
std
mov
cmp
inc
add
insb
sbbb
mov
push
ljmp
cld
pop
addr16
outsb
cmp
xchg
aad
enter
imul
push
jo
ljmp
adc
dec
in
sub
scas
pop
jo
push
fdivs
pop
insl
jmp
fwait
mov
je
movsb
cmp
xchg
inc
xor
jo
pop
push
mov
push
jecxz
pusha
clc
sub
mov
dec
dec
test
mov
cmp
push
dec
testb
or
cld
xchg
jge
fidivs
lods
lods
and
aas
hlt
mov
and
outsl
inc
call
jecxz
sub
add
incl
xchg
xchg
divl
pop
mov
fwait
bound
push
cmp
cwtl
cs
or
mov
out
or
jno
or
or
mov
in
int3
js
loopne
ret
or
pop
rclb
outsb
fistpl
pusha
mov
sbb
jne
xor
nop
pop
fnsave
cmp
test
mov
fimuls
lahf
clc
fmuls
lahf
ss
inc
std
pop
cmp
dec
mov
lods
js
out
fiaddl
ss
call
aaa
std
jb
das
pop
nop
daa
test
addr16
jnp
scas
rcl
mov
ja
and
les
loopne
data16
fisubl
movsb
inc
rcll
adc
jns
jbe
lahf
lods
mov
sbb
sub
and
push
and
jge
push
and
xchg
lret
jecxz
adc
dec
mov
movsl
lock
push
pop
int3
xor
in
test
pusha
imull
test
adc
ss
std
cmp
cmp
in
adc
sti
sub
dec
inc
cld
xor
sub
xchg
and
adc
nop
sbb
sub
or
in
pop
inc
roll
add
inc
push
loop
dec
xor
pushf
pusha
fdivs
imul
cli
dec
inc
mov
loopne
daa
movsl
fs
stos
push
ror
fdivrs
ljmp
dec
mov
pop
mov
adc
xchg
inc
gs
lret
fildll
int3
lea
xchg
insb
pop
xor
jb
ret
data16
aaa
rolb
loope
sbb
daa
push
cwtl
iret
sub
xchg
push
pop
add
into
dec
pusha
jge
sub
jns
lahf
pop
iret
cli
push
jno
sub
mov
fisttps
std
sbb
enter
push
add
adc
shll
jae
sub
push
hlt
aas
stos
jge
sete
jbe
stc
test
addr16
scas
call
rol
sti
and
mov
jle
adc
cmp
sbb
je
inc
in
adc
cmp
lret
dec
jecxz
jb
jmp
int3
inc
cmp
push
mov
nop
dec
jns
pop
add
jno
gs
lea
arpl
pop
mov
stc
push
mov
fimuls
push
sbb
lcall
adc
lahf
and
rorb
ljmp
gs
adcl
lods
inc
cwtl
je
push
scas
mov
callw
sbbb
scas
pop
stos
mov
mov
ljmp
mov
ret
cmpsb
cmp
sbbl
aaa
mov
dec
cmpsb
jg
fsubrs
pop
in
andl
jne
decl
push
xor
movsb
sub
test
or
mov
mov
add
aam
stos
lcall
cmp
push
subl
and
mov
xchg
push
std
sbb
xchg
pop
testb
sbb
jg
jge
pushf
addl
lods
pop
or
push
shrl
pop
and
popf
adc
dec
cmp
and
data16
push
iret
ret
or
pop
test
nop
pop
or
jo
insl
mov
test
addr16
sub
mov
mov
mov
stos
stos
in
cmp
or
push
jle
sub
xor
dec
pop
cmpb
cmpsl
nop
cwtl
ja
repnz
lods
jb
push
lds
ja
in
addr16
pop
xchg
inc
clc
xor
in
cwtl
pop
pop
cmp
adc
outsl
xor
xchg
adc
push
mov
pop
push
pop
cltd
mov
lea
in
xacquire
and
call
xchg
and
leave
push
lcall
or
cwtl
lcall
mov
push
int
push
aas
aaa
inc
out
pop
imul
fidivl
lods
mov
test
rorb
and
jl
dec
dec
lret
loop
mov
popa
lret
jmp
movsb
sub
or
xchg
imul
lret
sub
addl
sbb
mov
or
push
test
rcrb
lea
sub
xchg
mov
test
sub
lock
insl
dec
ljmp
sbb
scas
and
and
or
cmp
scas
inc
or
mov
xchg
movsb
jge
imul
lods
data16
push
adc
enter
add
cwtl
or
jo
pmaxsw
mov
ficompl
loop
adc
fstpl
fbstp
stc
sbb
out
cmp
cwtl
push
test
sbb
ljmp
mov
rol
inc
stos
fnstcw
jb
fdivrp
pushl
popf
int3
jge
shr
loope
rcrl
pop
pop
pop
push
dec
loope
push
add
cmp
mov
xor
stos
fs
xlat
xchg
int3
dec
sub
lcall
je
cmpsb
mov
adc
or
mov
jb
in
test
mov
inc
xchg
enter
fiaddl
hlt
dec
popa
xor
xchg
imul
mov
adc
stc
push
lods
insl
int3
mov
pop
es
out
cmp
popa
cmp
loope
pop
in
cmp
fstpl
sub
stc
push
mov
aam
nop
sbb
push
mov
popf
sbb
cmc
inc
jno
push
lods
push
cwtl
das
jg
subb
mov
or
scas
push
cli
sub
imul
xor
arpl
xchg
xchg
and
or
adc
xlat
sub
test
inc
out
dec
dec
daa
jge
pop
outsl
int3
xor
sub
push
bound
ds
xchg
gs
adc
lret
jmp
cwtl
lock
jo
jl
inc
dec
sbb
pop
aas
pop
aam
bound
pop
cmp
sbb
sub
inc
inc
outsl
mov
xchg
js
test
imul
jae
mov
dec
add
bound
jne
push
lds
xchg
mov
xchg
lods
lret
bound
fwait
insb
nop
xor
std
roll
inc
jecxz
icebp
xor
loope
fwait
mov
test
or
rcrb
xchg
cwtl
ret
push
sbb
mov
pusha
shl
pop
aad
fsubl
insb
lods
mov
cmpsl
pusha
ljmp
or
mov
dec
imul
test
cmp
push
sbb
push
or
imul
push
jne
popa
push
inc
sbb
imul
or
outsl
imul
popf
jmp
pusha
cli
mov
call
fincstp
xchg
add
icebp
testl
in
rorl
in
daa
xlat
rolb
sub
sti
mov
cmc
xor
sbb
or
xor
faddp
sahf
andl
cwtl
shr
addl
add
out
or
pop
pop
aad
mov
ja
inc
dec
inc
out
mov
arpl
cmpb
inc
negl
orb
xchg
pop
icebp
cld
shlb
enter
mov
je
idivb
xchg
inc
dec
and
add
out
stos
sub
outsl
push
sub
mov
add
fcom
xchg
cmp
loope
xlat
cltd
lcall
fs
push
sub
lahf
icebp
stc
jg
fnstsw
xchg
push
pop
shr
imul
jbe
cmp
push
cmp
jg
outsl
push
add
sub
or
dec
jmp
push
jp
into
jo
repnz
cmpl
add
clc
bound
imul
fcomps
push
cltd
pop
lock
lret
xor
aam
pop
lgs
outsb
pop
lods
xchg
sub
jp
cmc
mov
stc
fdivrl
pop
pop
mov
pushf
push
ja
sbb
inc
xor
out
xchg
cmp
add
call
sbb
sub
xchg
je
inc
cmpsb
mov
cmp
xchg
push
dec
lea
pusha
inc
jp
cmpsb
mov
cmpsl
add
popa
test
cmp
dec
add
je
nop
cmovs
sub
dec
je
jge
push
scas
pop
dec
aam
ljmp
jno
fsubrs
xchg
xor
push
fisubl
jle
adc
scas
pop
mov
mov
pop
mov
rcl
dec
aam
pop
stc
xchg
leave
ret
pop
ljmp
jge
out
popa
push
mov
cld
scas
dec
xor
xchg
fsubp
jnp
pushf
dec
sbb
nop
insb
push
rclb
jo
adc
mov
fcomi
lods
jl
adc
das
mov
lods
dec
add
test
mov
shlb
sub
mov
pop
sbb
stc
std
lods
push
pusha
test
fidivs
push
gs
inc
pop
in
stos
insl
add
test
xor
outsl
push
adc
jbe
sbb
insl
add
pop
out
test
xchg
jp
and
push
aad
outsb
outsb
mov
fsubrl
mov
mov
fwait
and
ret
cwtl
mov
hlt
les
setb
and
mov
testl
or
xchg
fdivl
jno
or
xor
mov
repnz
scas
stc
scas
scas
or
cwtl
adc
call
fnsave
jnp
inc
xor
mov
test
and
xchg
xchg
mov
std
or
sbb
jp
pop
xrelease
cmp
mov
fiadds
enter
mov
jp
decl
sbb
ja
fimuls
and
loopne
mov
adc
sbb
adc
and
cld
xchg
inc
jmp
cmp
shrb
xchg
lea
cwtl
jb
fs
fists
sbbl
in
aam
push
mov
repnz
mov
mov
fstl
xchg
xorb
dec
bound
shrl
repz
into
call
or
cmp
aam
inc
ficoml
lods
dec
fs
push
and
sti
orb
insl
mov
mov
adcl
iret
inc
movsb
push
aam
mov
mov
push
out
cmp
jl
pop
sbb
inc
ds
jne
in
decl
push
test
dec
data16
jle
sbb
jb,pt
es
add
dec
lret
pushf
push
loope
jne
pushf
adc
mov
loop
ror
stos
mov
testl
dec
dec
sbb
or
outsb
lods
sbb
mov
cmpsl
aas
pop
dec
push
mov
scas
cmpsb
icebp
sbb
push
addb
sub
std
cltd
outsl
in
fsts
mov
and
sbb
mov
lock
adc
xor
inc
ds
cmp
jno
mov
cli
or
push
adc
lods
enter
pop
fildl
add
mov
mov
insb
mov
or
dec
data16
push
push
jno
inc
iret
movsb
idiv
add
gs
pop
hlt
jno
sbbb
pop
push
out
or
loop
cs
stos
jnp
adc
cmc
mov
cltd
imul
cmp
shl
mov
daa
dec
movsb
ljmp
std
popf
xor
xchg
imul
inc
adc
rolb
push
lock
test
and
mov
fcomi
mov
in
lds
cmpsl
dec
fistl
les
or
or
ss
ljmp
pushf
daa
popa
add
dec
lods
jnp
add
roll
filds
call
cmpsb
cltd
mov
mov
fucompp
scas
subb
mov
xor
cmpsb
add
dec
cli
cmp
sub
mov
in
mov
iret
lcall
adc
or
mov
in
push
cmp
ss
imul
push
dec
insl
and
jo
je
push
sbb
pop
dec
jb
test
xor
jmp
aad
pop
or
push
lods
fcoml
ret
data16
dec
loop
stc
je
enter
mov
add
lcall
cwtl
pop
fs
xchg
xchg
test
mov
into
loop
outsl
enter
stos
jns
xchg
cli
insb
push
ss
aaa
or
add
lcall
inc
sti
sbb
frstor
pushf
cmp
sub
and
dec
add
sbb
xorb
xor
push
test
jbe
test
addr16
outsl
dec
pop
rorb
pop
cs
sub
lea
mov
lods
xor
inc
xchg
xchg
sub
gs
jne
mov
mov
ret
popf
mov
shrl
add
mov
mov
jb
push
xor
pop
rcrb
or
clc
push
pop
xchg
aaa
stos
stc
cwtl
insl
mov
addl
outsb
mov
mov
dec
stos
mov
add
xchg
dec
dec
pop
lcall
dec
ror
insb
pop
push
mov
or
pop
fisubl
stos
int
lret
cmp
out
inc
fstps
dec
dec
and
inc
in
in
test
inc
aaa
inc
int
call
bound
jmp
sub
int3
inc
push
jnp
push
mov
pushf
mov
pop
push
fbstp
bswap
jae
jae
popf
das
adc
mov
imul
sbb
mov
imul
lds
pusha
add
sti
mov
xor
fsubl
inc
xchg
and
shrb
cmc
testl
dec
push
loope
mov
aam
sbbl
inc
fists
shrb
repz
pop
jp
inc
mov
jl
int
popf
iret
dec
ja
sbb
cwtl
aam
inc
mov
mov
imul
sub
pop
push
inc
xor
mov
cmp
outsb
add
push
dec
loope
jno
or
dec
xlat
jle
jne
jmp
test
bnd
jmp
add
inc
push
stos
xchg
xor
mov
test
cmpsb
jne
icebp
insb
sub
out
popa
mov
fldt
test
add
dec
mov
outsb
out
adc
push
sahf
mov
test
lods
bound
pop
repz
decl
xor
incb
cmpsl
stc
cmp
mov
loopne
iret
cmp
mov
push
jb
shrl
sbb
jl
out
xchg
out
inc
xchg
cli
xchg
divb
pusha
lods
sti
cmp
lock
pop
pop
xor
inc
dec
push
sub
les
lea
fidivl
fucomi
frstor
xchg
shrw
insb
pop
shl
xchg
in
call
dec
fcompl
lea
sub
decb
lods
sbb
and
xchg
dec
push
imul
add
cmp
jbe
lret
jno
rorb
push
ds
shrl
in
insl
in
ret
lret
jmp
fbstp
js
popf
cmpsl
cmpsb
inc
popf
mov
push
jge
or
mov
insb
jb
jl
mov
mov
jg
fnstsw
mov
mov
pop
cmpsb
out
pop
push
hlt
loope
clc
cmp
call
repnz
cmp
inc
std
paddw
inc
test
sti
cmovo
sbb
dec
sbb
negl
jne
adc
les
clc
adc
pop
jmp
addl
int
inc
cmpsl
mov
and
cmp
dec
cs
je
push
std
xchg
or
cld
shrl
shrb
lds
push
movsl
ss
pop
loop
sub
test
pop
outsl
mov
fsubrp
iret
pop
cmp
clc
pop
out
jmp
lea
cmp
fucomp
mov
fstl
push
clc
xor
or
cld
cmp
data16
jmp
outsb
add
jbe
pop
fcoml
ljmp
sbb
test
dec
pop
jg
popf
insb
int
pop
out
repz
jbe
cmp
xchg
mov
mov
lods
push
or
cmp
xor
mov
or
dec
mov
pop
push
mov
jae
inc
scas
jae
scas
dec
cmp
hlt
addr16
sahf
pop
push
push
push
push
sbb
dec
daa
outsl
push
pop
data16
cmpsl
add
dec
xor
mov
sub
lret
pop
mov
dec
adc
call
cmc
jns
int
xchg
push
xor
push
jmp
jb
nop
mov
mov
and
sub
mov
jb
and
push
call
inc
or
inc
fnsave
mov
xor
test
lock
xchg
cltd
xor
inc
jnp
xor
mov
loopne
jl
xchg
test
cmc
adcb
sub
pop
mov
lahf
push
push
pop
lods
adc
lods
mov
orb
push
and
adc
inc
int3
fwait
and
pop
add
daa
std
mov
fisubs
adcl
xchg
loop
jg
mov
pop
xchg
mov
test
push
fisubrl
cmp
inc
xlat
push
jne
adc
inc
icebp
xchg
shlb
cltd
adc
push
xor
xchg
fs
nop
cltd
popl
lret
mov
lods
aam
cltd
push
inc
jg
scas
cmp
int
lock
inc
cld
les
je
jnp
hlt
gs
fs
cmpsb
and
stc
lahf
adc
adc
stos
pop
mov
fneni(8087
jae
cmp
add
insb
xchg
pop
mov
insb
sbbl
rcrb
movsl
add
inc
inc
call
imul
les
cmp
pop
xor
ror
cmpl
ret
repz
rcl
push
cmpsl
mov
xlat
dec
add
and
and
daa
xorl
jp
inc
jle
push
sub
mov
push
dec
inc
stc
jb
aas
shrb
or
sbb
and
sbb
sti
jbe
mov
repnz
mov
mov
jae
mov
add
aas
or
push
xchg
jecxz
repnz
pushl
sub
movsb
add
int3
arpl
cmp
rcll
dec
enter
xchg
mov
out
stc
and
fistpl
mov
mov
xchg
mov
gs
mov
mov
call
aaa
in
mov
cli
sar
cmpsb
cs
pop
mov
or
in
lds
sbb
std
pop
mov
hlt
divl
call
add
popf
ss
std
lods
call
cmp
movsl
sbb
mov
mov
fdivrs
into
sub
shl
push
mov
cmp
mov
xsha256
cmpsb
adc
fdivs
lods
and
push
xor
mov
movsb
add
test
cld
scas
add
aaa
jbe
jg
mov
mov
mov
in
out
test
sub
mov
lods
imul
jbe
les
cwtl
call
ljmp
and
sbb
jnp
std
push
jbe
xchg
test
xchg
fiaddl
ja
sahf
fs
and
inc
in
insb
mov
mov
push
xchg
pushf
mov
add
xor
sahf
mov
dec
sahf
jecxz
sti
mov
mov
xchg
fbstp
cmp
dec
inc
mov
fldcw
or
mov
call
push
mov
or
pop
jmp
cmp
pop
lcall
add
xorl
mov
inc
inc
sbb
mov
lret
bound
popl
mov
mov
loopne
popa
fisttpll
mov
insb
lahf
cmp
repnz
sbb
stos
mov
cwtl
int3
addr16
data16
pop
mov
aas
dec
shlb
in
andl
jp
into
or
add
xchg
lods
or
fs
and
test
xchg
lret
mov
pop
cmp
mov
sub
test
xlat
pop
xor
pop
idivl
push
mov
fsubp
je
jmp
ficomps
sbb
insb
pop
les
mov
out
add
xchg
inc
sar
lds
jg
cmp
or
insb
iret
xorl
pop
sub
jle
and
das
mov
dec
insb
aam
icebp
mov
push
jbe
popa
add
jle
push
das
inc
lahf
adc
dec
xor
or
adcb
andb
pop
sahf
sub
dec
dec
dec
mov
pop
sbb
std
xchg
inc
mov
sbb
mov
out
push
xor
dec
jnp
cli
inc
fimull
mull
clc
adc
adcl
mov
repnz
push
adc
scas
jb
call
pop
out
pop
xchg
jg
mull
inc
divb
xor
mov
mov
lcall
sahf
jbe
mov
fcoml
jmp
pushf
out
xchg
mov
add
sub
outsb
jmp
clc
pop
or
adc
lock
xchg
jle
int3
cwtl
call
stc
negl
imul
aad
pop
mov
push
lahf
and
pop
scas
fdivrp
std
cltd
cmpsl
add
xchg
in
int
sbb
pcmpgtb
jl
insl
aad
sahf
dec
lock
mov
aaa
call
dec
sub
mov
pop
sbb
rdpmc
mov
jae
aas
aad
pop
mov
sub
xor
cmp
test
aas
mov
mov
push
test
push
aaa
cli
pop
xor
sub
sub
add
cwtl
cmpsl
add
mov
rep
cmp
ficoms
or
or
sti
scas
mov
int3
addr16
or
push
jmp
sbb
aas
sbb
rol
mov
xchg
test
dec
mov
dec
jle
xchg
inc
jno
aas
push
inc
xchg
int3
jbe
je
jne
jmp
scas
ret
sub
stos
pop
sub
xor
mov
bound
adc
cmpsb
xor
adcl
cmp
je
add
mov
lods
mov
movsb
aaa
push
ljmp
adc
js
mov
neg
jmp
mov
inc
stc
mov
fisubrl
push
fwait
cltd
pop
mov
mov
dec
into
push
mov
pop
decb
ds
popa
pop
xchg
fstpl
cmp
in
add
aam
mov
pop
je
lea
mul
cmp
sahf
fwait
xor
jo
scas
leave
and
push
in
inc
scas
sub
js
mov
mov
mov
mov
add
push
lea
lods
adc
jbe
cmp
scas
ljmp
sbb
notl
xor
outsl
lcall
push
icebp
daa
xchg
adc
xor
mov
add
dec
cwtl
je
test
cwtl
push
push
imul
je
shll
dec
sbb
mov
inc
push
and
sti
xor
rolb
pop
jne
fstpl
ficoml
cmp
fldl
cmc
jl
add
js
xor
fimull
xchg
testb
jmp
fists
mov
sbb
jg
jecxz
mov
pop
cs
out
or
sbb
stos
sahf
cmp
xor
add
stos
test
jae
sti
in
rcrb
outsl
jb
add
mov
xor
ret
popa
or
les
stos
sbb
xor
mov
add
push
movsl
fsubrs
jnp
divb
jno
dec
imul
shrb
out
sti
inc
mov
mov
mov
aaa
out
xchg
aad
or
and
pop
bound
pusha
mov
insl
push
mov
neg
inc
xchg
loopne
icebp
popa
rorb
out
rcrl
iret
je
inc
fdivr
js
sti
adc
mov
sbb
sti
cmc
mov
and
out
inc
inc
pop
testb
insb
js
push
sbb
imul
jnp
sbb
shl
mov
in
jecxz
lods
ja
add
testb
add
pushf
addl
in
xchg
test
dec
or
repnz
adc
dec
mov
push
shlb
jbe
jne
nop
call
push
call
push
outsl
jge
loope
sbb
aas
mov
xlat
add
dec
vrcpps
push
inc
in
or
jecxz
clc
sub
inc
negl
mov
int
dec
lcall
lahf
mull
je
movsl
cwtl
dec
imul
mov
dec
loop
jbe
and
lock
in
cmc
aad
notb
sub
enter
xchg
aam
jecxz
leave
sub
enter
sub
into
movsl
std
mov
hlt
notb
lret
pop
jbe
add
mov
jg
shll
data16
pusha
insb
adc
lret
xlat
push
mov
lahf
pusha
pop
rcr
fs
outsb
es
sub
mov
add
or
lret
js
pop
fiadds
inc
pop
sti
aad
inc
jo
mov
or
push
ret
cmp
cmp
scas
mov
ds
sub
pop
dec
sbb
mov
cmpsb
arpl
cwtl
mov
mov
or
or
sbb
dec
or
dec
xchg
cli
xchg
stc
inc
mov
aad
fs
pushf
add
jge
cmp
mov
popf
pop
ds
cmp
js
cmp
pop
add
jp
cld
adc
jns
sub
add
dec
loop
xchg
out
stos
jp
xchg
mov
pop
mov
leave
in
or
imul
or
test
mov
sub
dec
ficomps
xchg
dec
or
je
dec
xchg
ja
and
shr
mov
jmp
scas
inc
xlat
bnd
ds
push
in
mov
in
imul
pop
loope
push
inc
pop
adc
mov
push
add
lahf
sbb
ds
xor
sub
std
xchg
dec
ficomps
cltd
cmp
or
jmp
mov
and
push
jno
inc
inc
xlat
outsb
mov
push
adc
push
pop
mov
fistpl
push
mov
ret
xchg
test
jge
mov
adc
fcomps
into
shl
jle
ljmp
xchg
add
aam
lret
mov
daa
push
es
or
jmp
dec
in
aas
cmp
pop
insb
mov
hlt
nop
and
cmpsb
mov
mov
jns
repnz
enter
xor
inc
pop
rorb
movsl
sbb
addl
cmp
cmc
enter
and
mov
stc
std
aas
xchg
mov
jl
inc
pop
and
movsl
loope
arpl
xchg
stos
or
mov
loopne
dec
arpl
jp
loop
cwtl
dec
dec
fadd
inc
addr16
xchg
dec
js
jno
sbb
xor
push
inc
push
xchg
mov
pop
scas
nop
out
mov
add
xchg
mov
int
dec
dec
push
inc
mov
sub
pop
adc
pushf
inc
sub
js
insl
out
mov
test
daa
and
mov
mov
lret
scas
out
rclb
hlt
sbb
xchg
fadds
loopne
adc
xor
mov
loopne
mov
movsl
cld
jb
cs
dec
in
xlat
pop
loop
popf
insb
out
into
cmpsb
push
fstp
lret
int
fisttpll
mov
adc
std
adc
and
cmp
rolb
jnp
jecxz
out
lods
leave
fcomps
ficompl
nop
fisubrl
lea
iret
adc
jge
pop
jbe
sahf
cmp
sub
popf
adc
lods
inc
stc
xor
mov
inc
dec
jne
test
xchg
fsubrs
mov
or
scas
inc
or
mov
jbe
in
sahf
xchg
dec
push
aas
outsl
lock
push
sub
push
push
insl
mov
rcrb
ror
jae
movsb
out
in
orl
fsubs
imul
pop
in
popf
cld
cwtl
inc
adc
add
add
mov
mov
ret
or
lods
adc
lea
mov
lods
inc
dec
or
pusha
out
fwait
sbb
popf
arpl
stc
adc
aaa
dec
outsl
test
rcrl
nop
or
adc
cmp
lcall
lock
jl
sub
push
adc
imul
sbb
repnz
fdivl
adc
aas
inc
or
sub
mov
test
pop
addr16
mov
fistpl
push
mov
ss
xchg
mov
imul
push
jnp
pop
hlt
cmp
jnp
adc
daa
jl
sti
xchg
jae
cmc
jmp
sub
or
jge
sarl
lods
mov
fnstsw
fbld
sahf
cmp
pop
inc
jmp
sti
rolb
dec
inc
push
rolb
pop
cmp
imul
iret
jge
dec
movsl
mov
push
sub
sarb
cmpsb
cmp
sarl
pop
inc
jle
sbb
iret
cmp
popf
stos
mov
js
dec
aad
lahf
ja
xchg
std
js
or
cmp
push
sbb
sbb
push
mov
cld
xor
push
inc
xchg
outsb
and
sbb
pop
or
push
jecxz
arpl
in
inc
mov
push
or
rcrl
outsl
iret
jg
cmp
xchg
test
pop
sub
xor
lods
movl
push
sbb
rcrb
dec
push
addr16
fidivs
mov
call
pop
fbstp
push
std
dec
inc
out
push
pop
jmp
lea
sbb
sarb
or
and
outsl
sti
test
inc
mov
xor
and
sbb
pop
jns
cltd
lcall
into
negl
xchg
xor
repz
push
scas
add
in
into
fidivrl
pushf
cmp
mov
punpckldq
jp
adc
cmpsl
push
sub
sub
inc
pop
jle
or
cmpsl
leave
xor
adc
pop
out
imul
mov
xchg
stos
add
fcoms
fmull
repz
inc
mov
inc
inc
stos
inc
push
adcb
test
lods
sbb
gs
into
sbb
ljmp
xchg
dec
gs
ss
arpl
sbb
stos
cltd
push
xor
mov
inc
into
test
mov
loop
fsubs
cmpsb
subl
push
add
fwait
jo
mov
lea
sub
nop
adc
sahf
movsl
add
mov
fcoms
pop
fidivrs
fbstp
out
imul
pop
adc
dec
cld
xor
iret
jbe
in
and
xor
mov
push
mull
inc
xchg
add
push
sbb
xor
xchg
into
xor
daa
inc
mov
cmpsb
aas
cli
mov
sarl
add
nop
xchg
mov
mov
imul
cmpsb
mov
cmpsb
imul
in
dec
mov
cmp
sar
and
jg
lret
xchg
lds
out
lods
mov
inc
mov
mov
or
pop
cld
sub
addr16
sub
ljmp
push
xchg
xchg
dec
add
cmp
add
shr
cmpsb
or
aam
mov
sti
cmc
scas
pop
jmp
inc
incb
std
dec
scas
cs
adc
lds
jmp
push
cmp
push
mov
aas
lret
dec
popa
shll
push
xchg
push
or
in
add
lods
clc
mov
repz
adc
les
pop
sbb
aas
jp
mov
push
sbb
or
cmp
cltd
inc
fstpl
mov
dec
and
xchg
scas
jns
mov
mull
jge
push
movsb
xlat
imul
mov
sub
cmp
lock
mov
in
sub
xor
or
push
sbb
movzwl
lcall
jmp
mov
bound
xchg
imull
adc
cli
or
pop
adcl
or
dec
std
inc
dec
or
cmc
inc
scas
inc
dec
sub
dec
int
sub
push
mov
fbstp
jbe
mov
fdivrl
sub
mov
push
in
mov
jbe
mov
arpl
inc
push
add
imul
icebp
dec
pop
cmp
push
adc
arpl
insl
mov
adc
jge
mov
insb
jl
mov
lret
cmpsl
cmp
mov
rorl
xchg
push
or
in
jle
cmp
push
rcrl
loop
mov
mov
cmc
iret
sub
mov
push
pop
imul
xor
ja
push
daa
or
testl
cmp
sub
pushf
jge
sbb
je
xor
mov
inc
add
dec
in
xor
int
mov
and
pusha
xor
movsl
std
add
arpl
js
int
push
lcall
inc
arpl
xlat
scas
std
jo
mov
xlat
xchg
jbe
pop
mov
aam
iret
mov
lcall
mov
xor
icebp
push
mov
lods
push
pushf
xchg
mov
dec
call
in
mov
and
mov
enter
push
lret
inc
push
adc
xor
out
mov
mov
and
ds
fstps
lock
mov
jns
fdivs
dec
cmpsb
leave
pop
outsb
cmc
dec
popa
adc
lret
mov
jg
inc
insb
mov
lret
addr16
sub
mov
negl
loope
push
adc
dec
out
push
and
cmpsb
pop
leave
sub
inc
sub
xor
push
or
mov
cld
mov
add
adc
int
pop
test
add
xchg
mov
pop
cmpsb
in
js
dec
stos
movsl
into
mov
sbb
faddl
mov
idivb
push
fwait
sbb
add
shll
fsub
mov
and
ret
hlt
push
fstpl
enter
push
and
mov
movsl
lods
outsl
add
xchg
mov
lahf
xchg
dec
loopne
scas
pop
dec
aad
repnz
xchg
mov
outsb
add
jo
jp
cli
test
cmp
fisubs
sbb
jge
and
sub
cld
or
addr16
imul
loop
scas
lock
nop
adc
es
push
dec
pusha
mov
mov
lea
ja
lahf
sub
icebp
or
and
add
sbb
test
mov
inc
sti
mov
in
sbb
loope
pop
fwait
and
scas
test
mov
std
cmp
into
push
jecxz
dec
pop
mov
add
rclb
popf
and
icebp
loopne
push
pop
xor
aad
sub
mov
icebp
ds
cmp
inc
cmp
cs
sbb
jge
and
cmp
push
test
test
or
push
movsb
pop
aaa
frndint
xlat
mov
inc
dec
in
pushf
fists
mov
sbb
mov
jl
les
or
pop
repnz
nop
mov
mov
in
in
sbb
cld
pop
mov
sbb
ror
pop
in
clc
mov
push
sahf
or
inc
stos
push
sub
cwtl
cmp
xchg
xchg
dec
xchg
lea
loop
vcmpps
cmp
popf
add
ret
in
adc
add
pxor
lods
out
xchg
pop
xchg
lcall
mov
out
xchg
imul
xchg
mov
xchg
jg
xchg
push
pop
push
jmp
pop
cmpsl
jge
sbb
inc
add
pushf
jmp
sbbl
add
lahf
push
pop
xchg
lahf
xor
pop
mov
cwtl
mov
fbld
adc
pop
hlt
lods
daa
xchg
sub
add
cmpsb
inc
inc
adc
xor
pop
orl
data16
adc
push
cmp
push
jns
push
push
ljmp
iret
push
cmpsb
repz
mov
cs
adc
sbb
pop
addl
rcll
add
daa
loop
daa
jnp
inc
pushf
outsl
mov
lcall
cmp
aam
push
scas
inc
insb
es
inc
pop
lret
rorl
adc
or
inc
or
mov
shrb
rcr
aas
out
mov
pop
pop
cmpsb
loope
aam
push
push
out
cwtl
inc
jb
jmp
outsl
and
mov
notb
jmp
dec
shrb
inc
cmp
xchg
pop
pop
lds
fdiv
push
xchg
dec
dec
add
out
outsl
push
in
test
std
jbe
lods
mov
stos
flds
nop
pop
mov
idivb
pop
adc
push
inc
jns
out
lahf
push
sbb
ja
ret
adc
and
lcall
jne
test
cld
cld
xchg
repz
sub
xchg
sub
cmp
xchg
dec
ret
mov
pop
pop
scas
dec
icebp
in
aas
sbb
sub
stc
lods
js
sub
jns
mov
test
addr16
jg
sbb
cmpsb
dec
ds
out
pop
movsl
mov
xlat
sub
pop
xchg
xchg
mov
cli
gs
add
jbe
cmp
sarl
jno
pop
in
push
pop
nop
push
jno
xor
int
sbbl
dec
inc
inc
in
in
fdivl
hlt
aad
push
mov
in
ds
in
addb
mov
fwait
notb
mov
movsb
pop
lock
mov
xchg
adc
sti
push
sub
push
lock
and
jae
repnz
xchg
dec
dec
fwait
scas
push
lcall
popa
jg
pop
loop
mov
hlt
mov
jbe
xchg
or
sub
mov
sub
js
into
mov
sbb
scas
xor
or
outsl
mov
popa
push
jae
fidivrl
and
xor
fstpt
push
push
ficompl
pop
test
dec
loope
xchg
shufps
movsb
or
mov
jbe
pop
call
or
or
iret
jbe
repnz
push
xchg
stos
test
mov
mov
fcomi
mov
hlt
lret
xor
or
rclb
or
lea
dec
out
insl
push
push
ljmp
push
dec
cmp
adc
inc
loope
and
jno
push
sub
in
adcl
jne
mov
mov
sub
mov
mov
mov
bound
mov
into
jecxz
or
pop
leave
cmpsb
stos
jle
insl
jg
lahf
xor
in
repz
and
das
push
push
mov
fs
pop
sahf
test
call
sbbb
jne
cmp
push
add
jle
lea
mov
cmp
jns
aam
and
xchg
enter
fmul
subl
movsl
cmp
sub
pop
jae
dec
xchg
jecxz
and
lea
sub
andl
icebp
mov
dec
dec
cmp
jo
loop
sahf
popa
or
and
shl
das
xor
test
rclb
lods
push
fucomp
inc
push
inc
inc
or
in
inc
stos
inc
fdivrl
testl
xor
jg
lods
or
lret
pop
mov
ret
inc
sahf
jg
and
test
cmp
jae
ds
shlb
cmp
fstpl
or
xlat
aam
add
ret
nop
test
dec
add
add
mov
sub
mov
call
jb
dec
xlat
inc
in
lahf
xchg
mov
push
fdivs
push
cmpsl
in
cmp
in
dec
push
xchg
sub
or
jl
adc
add
orb
push
mov
pop
pop
mov
cmp
xchg
add
ret
fwait
mov
mov
fisttps
and
push
inc
inc
push
nop
xchg
fimull
sbb
adc
or
insb
inc
xor
outsb
addl
or
dec
dec
in
jbe
cmp
adc
or
push
dec
dec
test
adc
jmp
mov
cli
stos
addr16
or
cmp
push
mov
jo
cmp
adc
add
aas
or
adc
jg
loopne
push
pop
loopne
cmpsb
inc
jg
daa
mov
loope
inc
pop
fldl
and
cmp
lock
aad
aaa
add
and
ljmp
dec
mov
adc
imul
cmp
scas
imul
nop
push
insb
pop
ss
or
jne
pop
adc
nop
or
dec
sbb
in
or
xchg
pop
xchg
cltd
loop
repnz
ds
push
inc
pop
aam
clc
pop
movl
inc
adc
mov
pop
cmpsl
enter
cmpsl
mul
jbe
inc
mov
push
xchg
adc
ds
xor
and
xor
shl
dec
popa
sub
fadds
pop
jns
lods
ljmp
pop
lods
ja
xchg
sub
jbe
adc
cwtl
outsl
ret
out
in
jecxz
pusha
pop
jl
inc
das
jle
xchg
push
pop
hlt
cmp
jnp
pop
xor
scas
gs
jns
shrl
mov
iret
shrl
cmpsb
outsl
sub
lea
jbe
pushf
pop
cmpsl
leave
sub
and
stc
or
dec
jb
sbb
sbb
bswap
xor
andl
add
cmp
mov
fldl
mov
mov
xlat
in
push
mov
mov
adc
dec
mov
adc
rclb
cmp
out
xor
and
push
scas
mov
pop
xor
ss
int
lret
push
insl
mov
arpl
mov
cld
lcall
push
mov
movsb
sbb
sub
rcrl
aaa
jb
imul
mov
add
outsl
inc
les
jmp
push
shrl
mov
xlat
addr16
jg
xchg
adc
in
add
pop
ss
mov
sub
push
sub
pop
jne
xchg
cld
push
movsl
sub
in
aaa
push
mov
mov
pusha
fdivs
mov
or
lret
mov
loope
test
cmpb
pop
mov
shrb
ds
xchg
ret
shrb
les
adc
dec
dec
xchg
int
int
mov
cli
stos
insl
jbe
mov
cmpb
jl
in
insl
xchg
dec
mov
pop
sub
mov
push
cs
xor
push
fmuls
lea
jo
inc
mov
sub
or
dec
loop
mov
imul
xchg
sahf
jg
shll
mov
push
insl
mov
call
stos
das
cwtl
jae
xor
lcall
mov
lahf
jb
pop
xor
ss
stc
arpl
push
jae
inc
hlt
adc
outsb
mov
mov
add
or
adc
sbbl
jno
add
icebp
sub
loopne
xchg
fildll
sarl
ljmp
pusha
or
sub
add
stc
popf
dec
rorb
jp
ds
jmp
aad
jns
sbb
out
sub
or
icebp
xor
adc
shld
sub
add
and
lock
fidivl
fidivrl
mov
popa
divl
movsb
or
sub
xor
mov
xchg
out
xor
xchg
mov
mov
push
pop
xchg
mov
pop
bound
sub
je
cmp
jne
out
sub
sbb
loope
movsl
push
out
pushf
cli
and
jmp
or
repz
inc
lret
std
popf
repz
cwtl
rcrl
ret
mov
jecxz
sbb
inc
push
and
xor
add
out
pop
push
sub
xor
out
enter
adc
cmp
data16
dec
xchg
cmp
lods
cwtl
test
les
movsb
loop
pushf
scas
rcrb
add
xlat
pop
fdivrl
lcall
fucomp
add
pop
sub
inc
mov
push
sbb
jbe
mov
inc
mov
pop
sub
fildll
fwait
or
dec
mov
mov
pusha
test
mov
rorb
mov
mov
pop
inc
lock
stos
mov
cmpsl
cmpsb
dec
dec
mov
cmp
outsl
stos
call
cmp
xlat
pop
adc
add
scas
jg
cld
mov
lahf
daa
adc
sub
mov
cmp
xorl
mov
fnsave
iret
shrb
and
sti
and
sub
sbb
push
fcoms
mov
adc
jecxz
pop
jb
or
dec
xchg
out
fildll
and
add
xor
mov
mov
add
pop
cmpsb
sbb
dec
cmp
mov
pusha
in
push
loope
or
rcrl
xor
jno
decb
repnz
scas
dec
sub
loop
cld
mov
sti
cmp
scas
inc
or
push
add
sbb
jecxz
inc
cs
ds
scas
pop
das
ficoms
sbb
gs
sub
add
cmp
add
out
mov
jp
push
data16
ja
outsb
mov
cwtl
inc
sbb
fs
mov
ror
iret
mov
push
add
jmp
fbstp
mov
add
sahf
subb
fldenv
mov
and
das
pop
dec
fsubr
xor
repz
idivl
addr16
add
es
aaa
push
jge
gs
xchg
sbb
jae
push
int3
in
loope
push
out
fucomp
adc
and
lea
stc
push
jp
sahf
and
fs
cli
pop
clc
jae
cltd
sbbb
and
mov
or
fildl
fidivs
gs
mov
fstpl
xchg
dec
xchg
cs
imul
xchg
and
push
sbb
scas
add
out
lods
sub
mov
test
cmp
jmp
mov
pop
mov
or
ja
aaa
into
pop
jmp
shll
jb
lea
sub
test
xchg
ja
mov
cli
mov
xor
xchg
dec
push
push
sub
repnz
lock
dec
pop
push
jbe
jno
xchg
movsl
idivl
pusha
imul
fwait
mov
arpl
hlt
add
sub
pop
inc
data16
inc
add
popa
adc
push
mov
rorb
out
out
popa
in
orl
ffree
xchg
out
clc
sahf
add
or
or
imul
cmpl
pop
xor
inc
sub
fisubrl
push
test
insb
mov
mov
cwtl
xchg
xor
nop
or
inc
rol
or
dec
dec
imul
jle
cmpl
mov
mov
push
mov
jbe
imull
pusha
pop
push
sbb
call
mov
out
mov
fcoms
mov
mov
lahf
jo
mov
push
dec
dec
rcr
sbb
xor
mov
int3
mov
xor
scas
int3
dec
test
cmp
xor
xchg
jbe
push
adc
dec
lods
out
pusha
push
rcll
rol
fcomi
xchg
dec
dec
ret
dec
cli
ss
push
jae
and
adc
mov
aaa
jbe
ret
call
aas
dec
sbb
fimuls
movsb
fs
jg
cmp
and
cmp
insl
mov
inc
fmull
and
cli
adc
cmc
inc
and
fwait
mov
fadd
push
test
xchg
pop
ss
jne
and
fnsave
push
pop
mov
cmpsb
sub
bound
xchg
dec
cmp
out
cmp
mov
xchg
mov
xchg
jmp
enter
sbb
xor
sub
sbb
fldenv
ds
mov
adc
orb
mov
pushl
cmp
ror
xchg
dec
fcompl
jb
popa
pop
mov
dec
in
nopl
enter
cmp
rorb
cld
lcall
mov
pop
pushf
scas
out
jb
hlt
leave
loop
enter
dec
mov
inc
sti
jb
nop
mov
sbb
cmp
arpl
dec
push
add
xchg
mov
mov
xchg
push
mov
lret
add
cltd
jg
mov
xchg
bound
test
int
mov
mov
push
imul
pushf
xor
cwtl
or
push
pop
mov
stc
mov
jae
nop
les
pop
cmp
or
mov
pop
fmul
sbb
test
sbb
sahf
cmp
jmp
iret
nop
loop
hlt
pop
dec
addr16
je
mov
xor
dec
insl
in
ret
ds
or
popf
stc
into
pop
adc
lods
stos
in
addr16
sub
jbe
movsl
mov
mov
push
movsl
mov
iret
xor
aad
add
int
test
sti
sub
adc
ret
ret
fnsave
call
add
push
xor
jp
hlt
andb
dec
andl
es
shll
lods
inc
test
out
enter
xchg
push
xchg
push
adc
push
xor
jns
inc
popf
sub
std
jns
stos
ret
jnp
lock
push
adc
mov
mov
cltd
aam
pop
mov
push
mov
icebp
jo
pop
jecxz
fs
sahf
cmp
mov
jbe
mov
adc
cmpsb
pop
int
push
adc
xchg
adc
mov
jmp
inc
sti
rol
ficomps
adc
cmpb
mov
dec
jge
sahf
mov
popa
add
mov
adc
in
stos
xor
jecxz
xchg
into
daa
les
ljmp
and
test
insb
mov
stos
dec
sub
add
mov
clc
adc
lcall
cmp
repz
pop
cmp
orb
and
pop
aas
dec
ret
sahf
movsb
cmp
adc
and
rcl
xor
fimuls
mov
scas
jmp
or
fsincos
gs
mov
jmp
jae
out
pushf
das
fiaddl
in
push
imul
lret
daa
clc
fs
jne
xlat
mov
push
scas
test
mov
das
push
out
js
pop
sbb
andb
mov
testb
lods
cmp
push
int3
fiadds
ret
adc
jns
mov
lock
ret
test
mov
adc
clc
xchg
sub
jg
orb
inc
fisttpl
loopne
push
push
adcl
jae
test
out
ja
ljmp
jns
sbb
mov
outsl
mov
pop
adc
push
mov
fidivs
push
xor
push
scas
xchg
ss
bnd
inc
repnz
popf
lds
xchg
dec
add
sbb
xchg
andb
and
loopne
xchg
mov
inc
lods
mov
clc
pop
out
jmp
aad
push
mov
mov
je
hlt
or
xor
xchg
xor
jno
arpl
nop
dec
test
push
dec
bound
sbb
push
push
push
mov
rcl
aas
push
std
adc
stos
in
ss
sti
pop
les
jmp
lahf
ss
dec
push
dec
cmpsb
jmp
xor
inc
jne
rol
xor
sub
arpl
in
dec
push
rcrl
inc
ret
rol
mov
iret
inc
sbb
out
add
xchg
xor
jno
sub
inc
adc
sbb
jbe
xor
sti
lahf
insl
sahf
rcr
fimuls
sub
cltd
aas
inc
hlt
js
dec
in
cmp
mov
xchg
insb
mull
mov
test
mov
mov
in
das
int3
movsl
movsl
dec
inc
lods
dec
or
ret
shrl
jo
rorb
push
push
mov
sbb
repnz
rolb
int3
adc
mov
aaa
lock
pop
sub
mov
hlt
sub
jae
add
push
xchg
inc
cmpsl
cmc
jb
and
push
push
inc
sbb
xorb
das
inc
test
ror
xchg
push
mov
or
aad
stc
scas
cmc
mov
jle
mov
call
in
mov
fldcw
lds
add
mov
push
jp
call
and
mov
jmp
xlat
dec
cmpsb
inc
icebp
imul
arpl
shlb
rclb
inc
sub
gs
mov
dec
mov
scas
cmp
pop
in
jmp
sarl
movsl
mov
xlat
push
lcall
je
mov
push
sub
cmp
daa
ljmp
jge
repnz
sbb
insb
mov
repnz
add
jae
pop
fidivrl
aad
sub
in
xchg
das
imul
fldenv
jg
cmp
inc
dec
sub
lds
mov
shl
pop
jno
decb
lods
cmp
or
pushf
or
or
jecxz
jl
xor
cld
ja
ja
sbb
int
rcrb
mov
lret
xorl
xchg
sub
jns
mov
dec
mov
cmp
sbb
pop
push
or
into
movsl
cmp
cmp
aad
into
mov
cmp
gs
xchg
ljmp
jno
nop
xchg
xlat
inc
insb
sbb
aam
adcl
das
adc
add
jo
scas
add
sub
push
insb
jle
mov
push
mov
mov
fcomps
jp
or
aam
iret
pop
mov
aas
loope
cmc
adc
loope
orb
pop
into
cmp
fs
fsubr
jnp
xor
rol
je
mov
xchg
jo
fdivs
popa
cli
xchg
xchg
loop
or
push
mov
movsl
cmp
cltd
jl
and
iret
sub
and
frstor
mov
imul
psrld
aad
inc
mov
mov
test
stc
inc
adc
xchg
pop
lods
pusha
negl
cmp
sbb
imul
and
stos
ds
push
fldt
or
movsl
dec
jle
data16
xchg
sub
sbb
in
push
inc
arpl
out
call
xor
xor
push
mov
aas
mov
lret
pushf
ret
dec
mov
xor
sti
cmp
loopne
sbb
fwait
test
aas
inc
cmc
subb
and
xchg
jmp
fdivl
adc
mov
gs
inc
aam
push
mov
or
sbb
shr
test
sbb
test
js
mov
jb
mov
insl
inc
fstps
jg
adc
sbb
or
fldenv
ficoms
adc
pop
lcall
add
mov
imul
loopne
jl
sub
xchg
or
adc
call
inc
decb
jne
xchg
or
mov
test
mov
dec
xchg
mov
je
xchg
or
and
adc
fdiv
push
ljmp
jb
cmp
mov
mov
mov
jb
xchg
sbb
or
sub
cmpsl
jmp
add
cmp
clc
pop
outsl
xor
jno,pt
pushf
sub
xchg
addr16
fstpl
mov
gs
push
cld
xchg
push
adc
sub
jns
cmp
sbb
pop
sahf
or
sub
mov
mov
cmc
pop
xor
inc
sub
mov
mov
inc
out
dec
lock
sahf
rolb
mov
cmp
dec
mov
loope
popf
daa
mov
nop
inc
or
add
test
jbe
xchg
pop
fsubrl
mov
repnz
mov
add
jns
sbb
shr
dec
mov
sahf
push
imul
stos
mov
ja
dec
pop
push
push
ljmp
jo
aaa
xchg
insb
hlt
inc
sahf
clc
lods
xchg
fnstsw
adc
jnp
pop
xor
sbb
mov
inc
pop
push
jo
out
mov
push
inc
test
cmp
mov
adc
inc
ficompl
je
lcall
nop
fmull
sbb
push
lds
fwait
mov
loopne
xor
and
cltd
jns
cmp
enter
outsb
insb
xor
test
ljmp
addr16
arpl
dec
and
cli
and
fldt
gs
xchg
xchg
fidivs
jmp
add
pop
xor
dec
aas
hlt
cmp
rcrb
xor
sarb
sbb
nop
out
mov
pop
mov
repz
out
mov
shrl
adc
outsl
shll
jne
or
cmp
outsb
add
adc
or
mov
clc
push
and
loopne
xchg
dec
pop
add
shr
in
push
sbb
push
sahf
ds
das
adc
out
cs
cmc
pop
cmp
add
dec
movsl
cmp
pop
outsl
or
mov
pop
mov
lret
push
imul
xor
test
dec
xor
imul
mov
aas
push
mov
mov
xchg
in
test
in
lds
xor
out
adc
leave
addr16
inc
aas
popf
repz
imul
inc
aaa
fwait
push
fwait
lcallw
fistpll
pusha
inc
ja
int3
cltd
pop
test
in
jae
cmpl
push
jmp
jo
insl
mov
xlat
imulb
jnp
nop
jno
out
mov
jns
inc
xlat
jbe
jno
outsl
inc
lcall
dec
in
outsb
lcall
hlt
sub
pop
repnz
pmulhuw
xchg
pop
jp
or
cmovne
js
mov
jecxz
fnstcw
or
fnsave
jle
pop
push
daa
adc
mov
dec
iret
cwtl
cmc
loop
xchg
je
negl
mov
pop
ja
push
movsl
ds
pop
dec
loop
pop
clc
push
pop
out
outsl
jecxz
es
add
xchg
and
or
stos
inc
fcompl
sub
inc
sbb
mov
xor
gs
mov
outsl
sti
inc
cld
push
std
out
or
pop
cltd
jmp
mov
lock
in
push
cmpsl
mov
scas
sbb
xchg
adc
sbb
jns
cmpsb
bound
mov
pop
xor
dec
dec
fisubrl
leave
push
int
jae
xor
popa
nop
mov
cwtl
xor
mov
and
popf
loope
test
adc
adc
in
xchg
jp
std
jg
nop
dec
add
pop
enter
je
in
loope
sub
pop
push
aaa
ret
jno
jge
out
jecxz
xor
xchg
sub
xchg
ffree
lods
mov
dec
sti
push
test
shll
adc
sahf
inc
or
aas
push
sbb
or
js
insb
stos
jo
adc
mov
imul
repnz
cwtl
mov
les
cmpsl
mov
in
add
jno
pop
cmc
jmp
arpl
push
jmp
mov
jbe
xchg
pop
pop
jnp
xchg
repz
jg
inc
push
jne
push
pop
xor
loop
xchg
mov
out
cwtl
mov
cmc
mov
lea
pop
lods
mov
and
dec
lahf
pop
jmp
cmp
mov
decl
dec
shlb
iret
stc
add
mov
cs
std
pop
push
adc
cmp
mov
sbbl
scas
les
mov
pop
lcall
nop
sbb
xchg
stc
ss
sti
push
sahf
mov
aam
test
aam
loop
mov
or
cwtl
cli
xchg
lods
rorb
jne
add
mov
repz
flds
iret
pop
dec
lds
ss
orb
sub
cs
pushaw
jp
jno
aad
sub
sbb
pop
lock
xchg
push
pop
add
nop
sub
sbb
pop
stos
dec
xchg
jns
je
mov
inc
stos
sti
sti
push
es
xchg
and
push
stc
nop
xchg
push
ljmp
jb
int
sbb
xorb
mov
jge
sarb
sbb
mov
dec
mov
mov
or
xchg
jns
cli
sub
sub
aad
rol
pusha
pushf
xchg
pop
es
mov
nop
sub
lea
cmp
ja
dec
xor
or
daa
sub
gs
inc
fldcw
mov
sbb
sbbl
push
ret
cmp
fldenv
rep
push
xchg
dec
in
mov
mov
xchg
testb
shlb
mov
fstp
clc
pop
add
jbe
push
test
mov
pop
add
add
cmpsb
lahf
jb
push
mov
push
test
jns
or
rcrb
or
inc
js
std
lods
out
adc
sub
shll
cmc
or
sbb
std
cwtl
sub
shlb
test
jmp
dec
mov
mov
sbb
dec
mov
leave
sbb
xchg
pop
xor
push
in
pop
test
cmpsl
sub
pop
fistpll
xchg
xor
pushf
call
or
jbe
mov
mov
dec
aad
push
movsb
pop
pop
les
jns
mov
jns
dec
fiaddl
icebp
ucomiss
xor
sahf
or
sbb
dec
movsb
adc
insl
ss
cmc
ret
sub
cld
push
cs
fisubrs
dec
xor
jl
aam
jbe
sti
xchg
push
add
dec
fbstp
mov
mov
cli
xchg
sub
mov
stos
sbb
pushf
fisttpll
out
or
fisttpll
sbb
outsb
pusha
cmpsl
sbb
push
xchg
std
push
ret
inc
rsm
xchg
sub
stos
add
pop
mov
mov
je
xor
popf
pop
scas
fmull
or
add
or
and
inc
cmpsl
jge
push
xchg
push
jae
or
mov
or
rol
cld
push
jmp
sahf
add
jbe
jne
or
xchg
push
xor
sahf
xor
ret
shrb
lcall
xchg
test
pop
pop
jmp
mov
adc
inc
hlt
xlat
mov
mov
mov
push
jbe
int3
call
lret
mov
mov
adc
push
sub
adc
or
cli
cmp
sub
jmp
test
and
cmpsl
mov
insb
fucomip
cwtl
adc
dec
add
adc
dec
dec
stc
sahf
pop
adc
scas
xchg
push
je
mov
add
popf
and
popf
in
mov
mov
adc
out
les
adc
test
mov
subl
stc
xor
lds
orl
push
xor
ja
mov
insb
jp
out
scas
cmp
push
cmp
movsb
mov
push
cmp
pop
ret
jb
out
fimull
mov
cmpsb
cmp
fmul
les
jnp
xor
loop
jbe
jl
das
les
mov
push
push
idivl
sti
imul
out
xchg
mov
test
and
push
or
lds
jae
jmp
ret
add
push
lahf
sbb
inc
adc
stos
scas
inc
sbb
dec
xlat
fistpll
pop
xor
xchg
sahf
fdivrs
std
lods
inc
ret
inc
fcomi
hlt
mov
fstl
or
mov
aaa
xlat
mul
movsb
shlb
out
gs
movsl
testl
push
faddl
or
sbb
mov
or
dec
dec
movl
out
lahf
aaa
into
iret
xchg
xchg
dec
repz
mov
fucomip
and
push
add
daa
lea
in
ss
pusha
mov
mov
in
pop
scas
arpl
dec
decb
push
mov
shlb
and
cli
add
lahf
sbbl
jne
push
push
repz
lods
mov
cmp
outsb
div
cmpsb
sub
ss
xor
xchg
ds
xchg
sub
dec
es
sub
jae
arpl
lods
jecxz
xchg
rcpps
cmp
add
dec
add
inc
xchg
ds
mov
lret
ret
pop
sub
push
jno
sahf
and
cmp
adc
mov
insl
inc
pop
cmp
mov
push
fbstp
mov
pop
mov
lret
cltd
jmp
lret
jne
ja
sub
or
push
mov
add
cmp
outsb
xorb
add
mov
fstps
int
push
popa
and
dec
lds
mov
mov
int
and
adc
jmp
jmp
jmp
or
adc
jno
into
inc
dec
add
mov
mov
mov
in
addr16
mov
mov
ret
mov
xor
daa
insb
jle
add
and
sub
ret
ljmp
test
push
xor
xor
xchg
sbb
nop
cmpsl
ds
pop
jns
test
dec
sti
and
or
ljmp
xorl
movsl
xorb
pop
mov
lods
mov
test
test
lahf
mov
aaa
dec
cmpsb
aad
xor
adc
ret
adc
push
fbstp
fs
mov
pop
cmp
dec
jnp
xchg
pop
xchg
arpl
mov
bswap
inc
pop
fcompl
inc
push
jmp
xchg
cmp
orl
sub
sub
push
lea
test
mov
outsl
mov
imul
lahf
push
int3
in
scas
inc
pop
mov
push
sub
mov
push
xchg
push
stc
lods
add
push
xchg
mov
pushf
sub
adc
ss
sahf
outsl
andl
sub
clc
cmp
cs
inc
pop
jp
pop
inc
xchg
mov
loop
mov
xor
sub
sub
push
mov
inc
or
test
add
insb
test
enter
fstl
xchg
dec
cmp
xchg
xchg
scas
es
xchg
mov
push
push
mov
pop
clc
das
mov
pop
addr16
add
jne
cmpl
pop
test
xchg
ret
mov
cltd
int3
inc
gs
jbe
and
cmc
sar
cwtl
shlb
xlat
subb
mov
push
rclb
call
sub
jmp
sbb
pop
ljmp
push
in
sarl
call
mov
ljmp
int3
mov
or
stos
mov
sub
enter
sub
jle
mov
mov
mov
fstl
xchg
divb
add
xor
jp
mov
mov
cs
lcall
and
dec
test
push
repz
or
lcall
dec
mov
push
ficomps
dec
inc
sbb
push
andl
aam
adc
cmp
dec
iret
insl
ficoml
or
lcall
ret
insb
movsb
lahf
cmp
aam
mov
jmp
mov
mov
mov
push
xchg
xchg
mov
adc
std
xor
adc
in
into
mov
xlat
or
jle
jle
les
fidivrs
sub
xchg
dec
in
stos
jp
fdivr
out
shlb
jo
jmp
shrd
inc
stc
inc
fs
out
dec
xchg
out
cmp
sahf
cmp
mov
rcll
pop
in
idivb
push
int
clc
out
fdivl
mov
arpl
xchg
cmpl
dec
in
int3
jg
jae
mov
movsb
add
sub
pushf
int
notl
pop
add
repz
sbb
ret
sub
addr16
daa
dec
mov
mov
leave
addr16
push
mov
and
xchg
cmpsb
loope
or
jno
lods
dec
in
ljmp
loopne
fcomip
dec
inc
jno
imul
aas
mov
xchg
shrl
xchg
outsl
daa
mov
mov
cwtl
cmpsl
jae
dec
dec
shr
cld
mov
add
shll
xchg
mov
push
rcrb
jns
mov
xchg
imul
lock
sti
xchg
pop
xor
dec
mov
mov
adc
mov
in
and
scas
nop
iret
jp
adc
fxch
inc
xchg
shrl
jnp
jg
mov
cmp
fidivs
mov
and
or
sbb
fldcw
cmp
popa
iret
fistl
imul
test
xchg
adc
add
add
or
dec
pop
dec
fsubs
mov
mov
mov
lret
jnp
xchg
push
mov
mov
mov
jne
or
mov
jo
icebp
cmpsl
aas
dec
mov
or
rol
mov
dec
xchg
scas
lods
jmp
jno
test
fistpll
je
add
frstor
stos
fcoms
clc
aaa
scas
pop
push
lods
add
arpl
adc
inc
push
jmp
or
int
dec
pop
fnstcw
xchg
push
adc
mov
icebp
xor
pushf
push
xchg
popf
cmpsl
repz
mov
and
adc
inc
popf
xor
cmp
lret
leave
cmc
adc
pop
mov
cmp
push
out
dec
and
mov
xlat
pusha
bnd
clc
adc
sbb
jno
or
rolb
out
pop
jno
daa
add
movsb
jb
add
ds
jg,pt
xchg
mov
push
lods
sbb
push
adc
ret
in
jge
data16
das
das
cmp
pop
and
test
ljmp
cmpsl
jg
aam
mov
mov
js
xchg
and
vpxor
cmp
pop
pop
mov
insb
push
mov
arpl
pop
pushf
sub
dec
call
cmp
sub
pop
or
mov
scas
repnz
out
scas
push
xchg
in
push
movl
shr
cwtl
and
dec
mov
les
push
scas
adc
ss
jnp
jecxz
movsl
xchg
pushf
jg
jnp
push
adc
mov
js
sub
and
inc
and
add
ret
lods
sbb
dec
jp
dec
pop
outsb
adc
mov
mov
sbb
popf
nop
cmpsb
sub
add
mov
jne
addb
mov
pop
rolb
push
addr16
push
sahf
push
jmp
sbb
sub
jno
jo
sub
mov
xchg
pop
push
xor
cmpsl
dec
inc
int3
xchg
call
fcomps
add
ret
dec
and
mov
mov
jb
cli
dec
loop
jmp
ljmp
jbe
xor
mov
icebp
sbb
mov
mov
arpl
shll
ss
in
or
sub
cli
or
popf
lods
push
add
sbb
iret
fld
imul
jns
and
adcb
sbb
inc
insb
jg
pop
in
mov
xchg
cmp
in
daa
mov
inc
filds
add
jg
mov
fbstp
push
test
in
lds
gs
or
pop
stc
mov
sub
adc
mov
lret
xlat
std
mov
nop
js
mov
lcall
fidivrl
sahf
mov
imul
pop
mov
sbb
jl
aaa
mov
xor
mov
std
imul
fbld
jp
xor
loop
push
cwtl
fisttpll
jb
pop
in
push
push
mov
xchg
sub
test
sub
outsb
mov
cmpsb
mov
hlt
cli
jo
sbb
xchg
add
cmc
jle
sub
or
sbb
jp
sub
call
bound
sub
mov
cmp
inc
xor
pop
outsb
mov
movsb
mov
inc
dec
jae
mov
pop
scas
enter
hlt
push
lods
addr16
push
je
cs
xor
xchg
sub
dec
mov
mov
js
mov
push
test
call
lds
mov
jl
lahf
lock
imul
dec
mov
mov
mov
rclb
fucom
loopne
mov
out
or
sub
stos
testl
enter
dec
cmp
rcl
jbe
hlt
outsb
nop
dec
push
popl
stos
jbe
int3
fld
loopne
clc
xchg
pop
inc
rcl
xchg
add
jge
mov
mov
frstor
cmp
mov
xor
arpl
dec
dec
cmc
mov
xor
xchg
gs
jo
cwtl
mov
push
outsb
in
loopne
mov
lret
add
push
testb
push
clc
in
jle
sbb
test
lcall
std
jle
je
push
sub
cmpsl
test
or
popf
loopne
cli
inc
in
stos
aam
jne
lock
mov
cmp
xchg
xor
orl
repz
mov
movb
adc
and
mov
sub
sbb
in
out
sbb
insb
mov
mov
subb
mov
jo
fimuls
sbb
test
insl
xchg
rcr
push
ficompl
notl
test
mov
xor
in
adc
fmuls
cmp
test
sbb
test
inc
pop
push
jmp
test
mov
incb
movsb
inc
arpl
fcmovnu
pop
sbb
cld
roll
popa
jns
mov
sbb
xor
ja
and
push
fucom
and
inc
inc
andb
leave
push
ret
ret
jb
mov
pusha
push
std
adc
mov
scas
dec
add
mov
ret
mov
mov
push
inc
fiaddl
in
fidivs
jg
inc
xchg
jg
xchg
mov
movl
push
test
pop
adc
shlb
add
jle
data16
out
loop
inc
cli
fwait
inc
ja
add
sti
dec
push
mov
inc
fcompl
test
push
sub
fsubrl
jbe
sub
movsb
lea
mov
mov
sbb
jb
inc
sbb
mov
inc
cmp
fwait
xlat
insb
loope
call
inc
jle
pop
xchg
sub
movsb
cmp
push
out
xchg
adc
xlat
and
or
mov
insl
mov
aad
sbb
sub
roll
fildl
cmp
not
sub
pop
cmpb
fsubr
setl
add
stos
mov
ds
lahf
jns
adc
mov
sbb
je
pop
jnp
mov
add
add
mov
xor
sti
xchg
hlt
inc
xchg
push
test
outsl
je
test
and
cmpsl
mov
push
in
inc
push
fs
loope
test
mov
mov
les
pop
dec
xchg
jo
push
sub
cmp
or
xchg
int
mov
out
adc
pop
les
mov
std
aam
dec
xchg
inc
pop
mov
fmull
sub
mov
cltd
lock
pop
adc
adc
cmc
cld
cvttps2pi
addr16
movsb
inc
iret
add
mov
rcr
lahf
test
push
fwait
jmp
test
pop
or
jnp
inc
aas
mov
sarb
jecxz
cmp
scas
add
js
ret
jo
cmpl
push
test
pop
frstor
sbb
loopne
xchg
adc
inc
and
xlat
fidivrs
scas
out
xlat
and
adc
mov
in
push
push
mov
dec
out
xlat
adc
divl
mov
rcll
adc
mov
lock
fstpl
mov
sub
jbe
mov
int3
sbb
mov
sub
push
dec
fcmovne
jge
adcb
xchg
dec
loopne
jne
pop
xor
addr16
adc
adcl
jns
hlt
pop
int3
int3
arpl
cli
and
sub
out
cld
jecxz
push
lret
mov
or
push
rorb
lcall
mov
jbe
in
shl
jbe
inc
test
sub
cmpb
add
stos
jbe
xchg
cmp
mov
and
sbb
xor
mov
mov
cmp
push
mov
lock
lock
sub
pop
lods
xchg
subl
push
inc
gs
xchg
and
xor
inc
pop
push
stos
add
cmp
mov
pop
or
xchg
sub
mov
in
mov
sub
cmp
push
lods
sub
mov
jmp
inc
fdivs
clc
fwait
sub
mov
rcrb
out
aas
int
aaa
js
aas
mov
mov
xchg
cld
outsl
sbb
sub
aam
in
rorl
jno
jmp
mov
push
jmp
fsubl
push
inc
jno
dec
dec
mov
jge
adc
push
sub
xor
and
xor
fsubp
pop
imul
push
in
adc
dec
jl
popaw
cmp
jg
or
sbb
mov
jne
push
cli
lock
movsb
fstpl
xor
xchg
dec
bnd
out
imul
fmulp
mov
pop
dec
push
push
sarb
mov
pushf
or
and
lods
push
sbb
cmpsl
movsl
arpl
enter
mov
add
inc
sub
hlt
sub
cmp
jb
inc
pop
mov
ds
aam
sahf
cmp
test
mov
dec
lods
lods
mov
stos
push
imul
inc
sub
adc
cmc
mov
pop
in
imul
xor
jnp
aad
and
sub
xor
mov
xlat
cmpsl
add
inc
adc
enter
sbb
mov
es
cs
cmpsb
sar
xor
stos
push
cs
iret
push
pop
jge
sbb
int
pop
push
scas
add
dec
pop
std
out
mov
push
std
mov
jl
xor
insb
or
fwait
adc
push
sbb
es
lahf
shr
add
jno
fcoml
or
and
pop
cmc
push
mov
cmpsl
cmpsb
push
aaa
dec
lret
pop
cmp
pop
mov
or
push
pop
adc
test
insl
jecxz
jp
in
rol
dec
dec
test
sub
xchg
push
cmp
lret
sub
sti
cmp
sbb
ljmp
lcall
or
ror
mov
ss
filds
jae
and
negl
inc
mov
add
jl
jecxz
sub
push
push
jns
mov
inc
bndldx
dec
pop
jle
int
add
notl
cltd
ret
lcall
jne
test
jl
movl
or
mov
cltd
pop
ss
cmpsl
insb
or
test
fistpll
int
cmp
in
cmp
dec
push
inc
popa
xor
xor
sub
pushf
loopne
push
popf
ljmp
repnz
add
lock
sahf
cmp
out
cmp
push
iret
sbb
mov
and
gs
call
aas
inc
movups
xchg
shr
sub
pop
hlt
rorb
dec
loope
mov
aas
rcrl
jnp
data16
addr16
or
dec
jecxz
fdivs
adc
scas
sbb
pop
pop
mov
loop
repnz
bnd
subl
inc
loop
xlat
dec
fsubl
sbb
pusha
fcmovb
jle
jbe
jl
cmp
mov
jg
pop
jbe
or
adc
loopne
cltd
lock
sub
cmpsb
xchg
loope
xchg
lds
aam
es
mov
sbb
lahf
add
push
or
lock
pop
inc
lret
lods
cmp
icebp
push
pusha
jl
fwait
xchg
inc
push
aam
cmp
jae
mov
xlat
divb
push
outsl
pop
out
adc
fcomip
push
adc
inc
xor
mov
outsb
push
sub
jns
test
inc
inc
lcall
jmp
rorl
popf
aas
push
inc
sahf
sub
push
mov
faddl
cmpsl
ror
xchg
ljmp
icebp
mov
mov
in
aam
sub
or
adc
in
out
xor
pop
mov
stos
sub
pushf
std
cmp
cmp
ret
ds
cmp
mov
pusha
stos
xchg
push
sahf
cmc
enter
and
dec
jp
sbb
mov
dec
push
hlt
jle
push
fdivs
rcrl
xor
pusha
add
jecxz
sub
sbb
lahf
jno
or
mov
and
or
sub
leave
sbbb
inc
leave
jae
idiv
xchg
call
xor
in
add
shrl
lds
or
jmp
xor
out
outsl
std
and
and
mov
sbb
adc
pop
in
adc
out
mov
nop
xchg
test
repz
mov
cmpsl
aam
adc
push
sub
mov
mov
fbstp
ds
shl
loop
aaa
bswap
mov
jle
mov
xchg
jmp
cli
add
rorl
das
stos
pop
jae
lahf
jmp
int
sti
xchg
mov
inc
push
lods
cmpsb
push
aas
jae
enter
cwtl
cmp
pop
xchg
jae
push
mov
mov
int3
loop
xor
cmove
fabs
arpl
add
and
in
lret
sbb
jb
stc
xor
out
es
addr16
aad
mov
js
add
dec
data16
xchg
add
hlt
pop
xchg
mov
cmc
xor
jl
xor
iret
fbstp
add
sbb
dec
push
fwait
dec
xor
add
inc
push
mov
mov
icebp
mov
jb
adc
notl
sbb
ljmp
jno
icebp
adc
fadd
in
inc
and
movsb
popf
xchg
repz
lods
mov
leave
dec
cmp
out
push
in
cvtps2pd
mov
fs
jmp
cld
das
mov
jge
xlat
inc
dec
or
pop
mov
inc
pop
lahf
js
xchg
flds
jecxz
jmp
es
shl
sbb
clc
dec
cmpsb
lahf
sub
out
ret
call
and
mov
adc
fildl
addr16
fstps
gs
lcall
out
in
sti
push
pop
jge
ljmp
fbstp
bound
shll
cmp
in
int
xlat
lcall
loope
pop
mov
stc
ds
and
or
jg
inc
sub
dec
mov
cmp
or
jne
imul
fwait
pop
sub
inc
xchg
js
arpl
aam
stc
cwtl
mov
stos
mov
pop
cmpsl
rcl
jg
push
sahf
mov
add
ds
ss
popf
pop
xchg
push
fmul
mov
jno
cli
mov
sbb
push
aas
pop
mov
sarb
dec
hlt
ss
dec
sbb
cld
mov
inc
dec
lods
or
push
xchg
push
sbb
lods
outsb
sbb
cmp
mov
and
dec
out
in
xchg
pop
out
subl
movsl
sbb
mov
cmp
movl
jl
outsl
fists
xor
sbb
pushw
jl
push
xchg
test
std
and
stos
es
pop
pusha
addb
pop
stc
and
xlat
pop
cli
mov
inc
in
fbstp
add
adc
jne
sbb
js
in
test
mov
mov
adcl
ret
pop
pop
push
mov
xor
fldenv
or
cmpsl
add
loop
sub
mov
enter
jnp
ret
pop
and
mov
repnz
xchg
mov
ret
inc
adc
cltd
mov
mov
jns
adc
add
imul
int3
adc
xor
hlt
mov
pop
es
jnp
fwait
les
scas
push
mov
lock
int
and
shlb
icebp
and
push
addr16
pop
fidivs
aaa
lret
stc
cld
cmp
cmpsb
jmp
pusha
ret
push
xor
mov
adc
sysret
and
or
xchg
dec
test
jns
scas
and
leave
int
sbb
in
dec
out
mov
push
jmp
test
lock
pop
in
xor
mov
movl
jp
fiadds
sarb
movsb
jmp
movsb
cmp
shll
and
add
push
lods
iret
lret
int
pop
jns
pop
fwait
cld
movsb
cmp
iret
ret
or
imul
sub
cmp
push
leavew
les
adc
je
cmp
leave
xlat
cltd
sbb
adc
push
repz
adc
lds
mov
mov
int
push
jb
inc
sahf
xor
jge
adc
mov
stos
xchg
stos
jp
ds
jno
sbbl
rcrl
mov
mov
jg
pop
scas
xchg
mov
sub
shl
jl
mov
push
add
sbb
orb
fsubrs
sub
jae
cmp
jg
pop
adc
or
cs
push
and
lret
lret
fwait
mov
mov
pop
ja
jnp
call
arpl
hlt
cmp
ja
adc
jns
xor
idivb
loopne
sub
push
stos
lea
sahf
es
add
cmc
xchg
shrb
into
out
mov
mov
mov
jmp
imul
out
mov
into
push
pop
mov
fcompl
xor
cld
int
inc
xchg
shll
push
xchg
hlt
sbb
push
or
dec
mov
fsubl
dec
pop
lock
lahf
xchg
stos
ja
pop
mov
or
inc
or
sbb
cmp
jns
push
mov
pop
mov
xchg
inc
mov
xchg
xor
and
jb
push
mov
pushf
jno
cmpsb
enter
jp
or
lcall
test
xor
test
mov
xor
aad
mov
cmp
int
bound
aam
fnsave
xor
dec
pop
dec
mov
xchg
mov
mov
mov
inc
test
jl
and
mov
cs
insb
shrl
jl
gs
sub
into
pop
adc
popa
cmp
imul
cmpb
pop
or
mov
dec
push
cmp
in
push
xor
popf
xor
clc
adc
imul
rorb
sbb
or
movsl
pop
mov
and
pop
imul
fwait
jecxz
add
mov
iret
lods
inc
mov
rol
push
xchg
aas
mov
cmp
stc
adcb
add
jbe
jbe
das
rolb
loop
jge
add
loop
jmpw
push
sbb
ds
sub
outsl
push
pusha
xor
adc
mov
mov
adc
int3
popf
bound
stos
xchg
orl
jge
push
push
cmc
xlat
pushf
xor
and
jp
xchg
sub
or
lcall
mov
loopne
loop
mov
insb
and
rcl
sbb
insl
dec
sarb
mov
loopne
lods
cs
xchg
push
or
divb
xchg
xor
clc
push
stc
lret
mov
icebp
orl
insb
add
iret
fcoms
mov
fistpl
mov
lea
daa
and
pop
cmpsb
xchg
mov
add
jnp
es
mov
mov
sbb
mov
mov
shl
or
mov
fucomip
cwtl
push
lcall
adc
stc
push
pusha
and
aam
das
add
cmp
pusha
push
outsl
mov
enter
push
mov
lahf
sub
cltd
out
aaa
arpl
jg
fmuls
ficoms
fwait
sbb
fidivl
subb
mov
out
xchg
pop
cmp
cmpsb
ret
loop
jb
sbb
jg
jecxz
mov
push
mov
cld
rcrl
mov
sbb
push
jmp
fwait
xchg
push
addr16
test
out
or
movb
aam
shlb
gs
jae
andl
scas
jo
aad
jle
fdiv
xchg
jmp
sbb
aas
push
mov
ret
push
push
cmc
lret
xchg
sub
call
lret
cmp
inc
pop
bound
fs
cmp
and
sub
jns
dec
daa
mov
cmp
and
popf
add
push
jne
xchg
daa
pop
jmp
mov
dec
push
adc
pop
and
jnp
push
out
pushf
test
cmp
jge
xlat
sub
sub
int
lock
mov
pop
pop
add
loop
negb
fildl
rcrb
cs
cltd
sub
sub
mov
cmp
ret
sti
arpl
and
sbb
pop
inc
pop
outsl
repz
repz
scas
fistpll
push
ss
ljmp
test
jo
fstpl
dec
shrl
hlt
mov
sbb
mov
xchg
sbb
es
dec
jae
addl
fistps
outsb
aaa
mov
insb
outsl
pop
out
cmpsb
in
cmp
and
aad
dec
push
mov
js
dec
dec
add
iret
subb
sub
adc
xchg
leave
in
pop
mul
mov
mov
out
outsb
pop
imul
pop
inc
stos
nop
jge
shlb
int
push
jp
movsl
icebp
mov
in
adc
sub
xchg
bound
cld
jo
fsubrl
loopne
or
jno
or
in
push
mov
rcrl
push
scas
out
mov
dec
jmp
sbbb
lahf
lds
out
shl
jno
imul
mov
das
mov
push
es
dec
xchg
addb
stc
ror
jg
daa
lock
or
jne
andb
in
dec
or
rcll
lods
pushf
pop
pop
aam
aas
out
aad
push
inc
add
mov
cmpb
in
les
xchg
cmp
mov
adc
fcomi
pop
hlt
lods
or
add
xor
out
movsl
test
pop
in
or
sbb
test
adc
lret
push
or
xchg
push
ss
fistpll
add
xorl
arpl
mov
mov
jg
add
mov
and
sbb
mov
sbb
mov
xor
and
mov
fstpt
les
dec
dec
jo
jnp
or
push
out
lods
adc
fstl
js
adc
out
xor
scas
or
jp
inc
and
xchg
stos
jo
fnstsw
adc
mov
xor
xchg
rcrl
or
pop
jle
mov
lods
mov
in
dec
adcb
imul
pop
mov
xor
pop
mov
mov
rclb
sbb
sub
lds
test
mov
lcall
add
int3
xchg
and
mov
mov
out
jae
inc
inc
pusha
test
dec
daa
mov
hlt
sub
test
pusha
fistpl
push
jmp
pushf
push
jmp
cmp
and
mov
dec
push
call
mov
add
es
fistpll
mov
sahf
popf
push
add
xor
xor
push
jmp
adcl
mov
pop
xor
fnstenv
pop
ds
jmp
popf
icebp
jno
cmp
sbb
adcl
pusha
sub
jne
idivl
clc
push
pop
mov
shrl
lds
fnstsw
adcb
xchg
dec
dec
adc
insb
sbb
addr16
adc
movsb
sub
push
or
aas
stos
xor
popa
inc
sbb
sahf
hlt
mov
xor
aaa
fs
lret
mov
cmp
mov
hlt
mov
adc
int
test
leave
mov
sub
mov
ret
dec
push
and
cmp
scas
xchg
xchg
scas
dec
fisubs
movsl
loop
aam
rcrl
dec
adc
les
cli
rcll
gs
adcb
lret
jge
pop
scas
das
sbb
dec
loop
rorl
test
vrsqrtss
lods
add
icebp
pushf
xor
or
int3
popf
sub
into
out
idivl
stos
shrb
sbb
lock
test
inc
or
mov
sub
scas
jb
add
xchg
clc
adc
inc
mov
loopne
arpl
pop
push
jno
addr16
lret
js
push
out
pop
adc
jne
push
mov
lret
xlat
pop
leave
dec
scas
or
mov
adc
sbb
add
imul
sbb
pushf
or
mov
sti
repz
push
jmp
ljmp
xor
lret
movsb
jp
into
and
mov
je
int
hlt
push
push
or
lods
into
insl
cwtl
push
pop
adcl
sub
gs
mov
inc
in
fwait
inc
mov
arpl
cmp
es
in
test
cs
mov
dec
mov
adcb
addr16
push
stos
mov
lods
movsl
jno
xlat
into
mov
fidivrl
pop
push
bound
paddd
lds
imul
pop
scas
ret
add
mov
ljmp
int3
in
cld
mov
pop
or
and
dec
mov
shl
xor
adc
and
sbb
jno
mov
shrl
add
fmull
xchg
imulb
mov
and
push
mov
mov
jl
adc
jg
cmp
imul
push
mov
fnstenv
pushf
push
push
movsl
and
enter
jecxz
loop
jle
hlt
es
ja
push
push
jae
sbb
push
jmp
mov
pop
push
xchg
or
fbstp
insb
jle
inc
fsubr
xchg
inc
mov
fdivs
insb
in
hlt
jge
ficomps
mov
push
dec
cmp
movsl
addr16
mov
and
testl
xchg
es
outsb
mov
imul
sti
outsl
imul
mov
popa
jo
arpl
data16
dec
push
ljmp
daa
dec
fcompl
cmp
clc
adc
adc
pop
fsubs
mov
pop
or
fwait
jge
push
dec
in
sbb
aad
mov
fnstenv
pushf
arpl
jbe
clc
cmp
sub
add
lods
adcb
dec
jl
repz
jno
push
cmp
test
popl
sub
icebp
mov
fsubrl
pop
dec
xchg
shlb
movsl
pop
scas
out
sti
loopne
sub
add
movsb
cmpsb
cmpsl
xchg
fsubr
ret
mov
mov
mov
push
mov
in
jp
sub
outsb
pop
stos
test
sub
fsts
sub
into
scas
or
pop
hlt
jbe
push
loope
and
test
out
sub
pop
in
jl
jmp
test
xchg
jp
add
fcomps
cmp
test
into
xor
shrb
test
inc
daa
and
pop
xchg
push
dec
pusha
mov
stc
mov
jp
pop
in
pop
repz
push
jle
xor
cli
push
xor
aad
mov
mov
inc
xlat
mov
int
out
lea
push
mov
adc
ss
js
and
jne
ds
sbb
stos
cmp
push
scas
mov
fidivrs
mov
xchg
mov
dec
mov
pop
fstl
xchg
iret
adc
and
stos
fnsave
mov
int
jmp
and
cmpsb
push
or
loopne
mov
xchg
addr16
adc
mov
xchg
add
sahf
mov
insb
shll
adc
hlt
popa
xchg
call
ljmp
lret
jmp
cmp
cwtl
push
mov
xchg
cmp
add
mov
aad
sub
push
mov
jmp
pop
insl
add
sub
popa
inc
cwtl
outsl
mov
fstpt
out
stos
jmp
mov
les
adc
daa
cli
ret
popf
jmp
cmp
movl
cmp
js
sub
rcrl
shrb
or
outsb
mov
ficomps
and
imul
and
cmpsb
aaa
push
and
imul
push
cmp
cmp
and
jl
cmp
hlt
mov
fcoml
jns
movsl
sub
pop
xor
and
jns
xor
mov
dec
rorl
insb
push
sbb
int
add
mov
or
int
jb
xor
mov
enter
enter
call
loope
mov
dec
lods
mov
pop
xor
ret
pop
mov
les
mov
and
dec
fisttpll
lock
pop
insb
aad
fucomp
ds
sub
lea
pop
xchg
lds
mov
lahf
imul
inc
push
aam
add
mov
or
push
pushf
lods
fildl
jo
xor
mov
push
jne
mov
xchg
xlat
sbb
xor
cltd
add
or
pop
cwtl
jnp
lods
sub
lds
mov
jbe
icebp
or
lret
out
in
and
push
or
popf
push
shll
mov
inc
pop
add
insl
add
scas
les
push
movsb
aad
mov
xchg
je
inc
popf
sbb
fnstenv
ss
or
aaa
idivl
dec
data16
xor
cwtl
bnd
negb
jl
cmp
je
shl
aam
xchg
or
mov
outsb
jae
dec
loop
adc
jne
imul
ss
mov
jl
push
popf
ja
in
and
push
pop
adc
aaa
add
repz
bound
lods
lahf
insb
sub
push
clc
mov
sbb
inc
mov
inc
clc
vmovsd
rclb
jl
inc
dec
mov
push
shrl
pushf
xor
fdivrp
pop
mov
mov
lds
int
fbld
push
shlb
xchg
mov
aam
movsl
shrb
add
sub
imul
lcall
push
inc
push
push
add
xchg
mov
fildll
rolb
mov
sub
inc
sub
and
mov
and
cmp
popf
in
dec
pop
dec
pop
sahf
mov
push
das
ljmp
or
pop
mov
fimuls
and
xchg
fstp
into
imul
outsl
or
pop
lcall
sub
jecxz
adcb
or
fisubrs
xor
inc
loope
jne
adc
add
dec
test
mov
sub
insb
push
lods
std
inc
call
mov
das
push
mov
lahf
pop
inc
test
ds
rolb
pop
scas
push
inc
mov
in
or
fistpl
adcb
andb
inc
das
jbe
jmp
mov
sbb
and
arpl
push
into
pop
mov
lret
test
cmpsl
shll
mov
stos
xor
aam
stos
adc
lret
push
ljmp
jno
mov
inc
xor
ret
flds
pop
outsl
push
pop
mov
fildl
pushf
cmpsl
frstor
sub
fldt
hlt
mov
and
pop
ljmp
inc
clc
or
xchg
pop
cmp
psrlq
pop
in
add
xchg
lret
aaa
sbb
xchg
fldenv
cmp
sbb
xchg
shrl
out
sub
cs
sbb
stos
or
xor
adc
icebp
ret
sub
push
mov
mov
flds
or
out
cmp
fs
mov
addr16
mov
or
neg
push
and
mov
pop
mov
push
dec
cmpsb
into
cmc
cmp
test
mov
fstl
pop
push
jb
data16
addb
inc
aam
mov
cmc
enter
enter
sahf
push
and
lea
xchg
mov
popa
cmp
and
mov
or
les
push
mov
int
mov
int3
out
xchg
clc
in
std
pop
out
sub
pop
dec
pusha
testl
cld
arpl
fistps
icebp
insb
jl
push
xor
mov
adc
jns
inc
test
xchg
loopne
call
cmp
int
mov
cmpsl
loopne
int
ljmp
enter
mov
sub
dec
aas
mov
rcll
insb
sbb
cld
sbb
sub
dec
push
mov
fnstcw
icebp
mov
movsl
cmp
ret
out
inc
sarl
je
adc
sbb
pop
fstpt
lahf
addl
adc
gs
push
cltd
jae
sti
subb
jmp
pop
dec
fistl
outsb
sub
lahf
sub
test
lret
iret
fisttpl
push
pusha
or
add
in
mov
fdivl
and
loope
push
or
lea
shll
scas
sub
push
stos
test
sub
mov
add
fldcw
xchg
add
and
stc
mov
dec
inc
lock
sbb
add
ds
out
sub
or
sub
xchg
cmpsl
rorb
daa
out
or
movsl
or
jmp
inc
add
fwait
cmpsl
in
xchg
pop
call
add
ja
popa
add
adc
sbb
cmp
ljmp
jns
dec
fdivr
or
cmp
insl
push
inc
aam
ljmp
scas
push
dec
mov
fcmovnu
in
stos
mov
loop
mov
imul
sti
lea
mov
push
cmpsb
cmp
xchg
pop
les
inc
mov
hlt
mov
fnstsw
inc
cmovbe
stos
ds
mov
pop
repz
bound
and
std
mov
nop
mov
mov
cmp
int
dec
or
pop
lock
cmp
scas
xchg
xchg
sub
pop
lahf
pop
and
movsb
ret
push
insb
incb
sti
fwait
mov
pop
sub
jmp
leave
dec
out
addl
iret
aaa
loop
inc
sbb
es
sub
stc
push
aam
mov
jb
ss
pop
fdiv
shrb
loope
lock
and
push
out
dec
cmpsl
jle
and
fwait
or
push
sbb
movsl
cmp
arpl
sahf
aas
push
sub
out
iret
movl
push
or
mov
addr16
jle
fcompl
mov
iret
jmp
cs
sbbl
inc
sub
movsl
jb
cmpsl
mov
mov
enter
fimuls
aaa
push
xchg
sub
dec
popa
dec
es
outsb
pop
jg
pop
fnstcw
jp
enter
mov
inc
mov
sub
popa
sub
sbbb
jl
xor
jb
shrb
jb
test
dec
shll
loopne
icebp
mov
add
fdivrl
mov
mov
ljmp
push
movsl
sbbb
dec
ds
push
push
movsl
jecxz
js
pop
jl
mov
jecxz
jg
cwtl
dec
sbb
xchg
shll
xor
inc
mov
int3
jmp
test
jns
sub
jns
add
or
sbb
jge
aaa
sub
cmp
push
ror
sbb
jmp
pop
and
ja
nop
jmp
cli
xchg
jnp
shlb
rorb
repnz
mov
xor
mov
dec
imul
jl
sub
sub
data16
cmp
adc
add
xor
xchg
js
ljmp
sbb
pop
cmpsl
jge
or
loope
xchg
push
and
xchg
jmp
stc
ja
sbb
ret
pop
ss
fdivl
pop
mov
iret
pop
out
or
mov
add
ror
pop
inc
leave
pop
jbe
mov
pop
popf
pop
aam
jl
mov
notl
inc
in
xor
out
into
movsl
pushf
movsb
pop
lahf
and
pop
icebp
mov
add
inc
fnstenv
fistpl
dec
push
inc
pop
adcl
out
pop
pop
adc
imul
cltd
xlat
dec
lret
push
shlb
shl
xchg
cmc
jne
sub
xchg
clc
jno,pn
push
sbb
cmp
xlat
pop
cmp
scas
jne
mov
in
incb
jmp
or
inc
pusha
into
dec
sub
jl
xchg
adcb
push
dec
mov
sbb
inc
jb
dec
pop
add
aam
adc
les
jge
jl
cmp
pop
sti
dec
scas
pop
lock
push
jl
xor
mov
test
js
loop
xor
mov
mov
jae
and
aam
jae
pop
movsl
jo
xor
cmpl
sub
fwait
repz
hlt
in
adc
mov
fidivl
or
adc
sub
add
or
inc
xchg
fldl
sarb
xchg
mov
jnp
jnp
das
js
adc
repnz
repnz
jno
lock
jbe
jno
mov
add
mov
out
inc
cmpsl
les
mov
inc
cmpsb
lahf
mov
ret
and
mov
sahf
xor
fidivs
jle
fucom
sahf
aas
xadd
push
testb
xor
pop
push
mov
cli
sar
aas
sbb
sub
xchg
lods
mov
rcl
insl
sbb
ret
mov
fstpt
lcall
mov
xor
mov
mov
jns
mov
std
loop
leave
jge
jno
scas
add
lahf
push
ljmp
insb
xchg
movl
mov
loop
loopne
dec
xchg
loopne
jmp
xor
es
jecxz
ds
cltd
mov
and
inc
cwtl
mov
imul
cld
cmpsl
scas
decb
jp
inc
imul
out
cmpsl
xchg
jnp
and
shl
inc
pop
ss
adc
add
mov
mov
rcr
out
mov
dec
sbb
push
fcoml
and
mov
stos
adc
push
dec
mov
inc
mov
inc
mov
adc
clc
push
test
andb
mov
lea
in
cwtl
push
cld
js
cmpsl
aas
jae
out
jbe
sbbl
sub
mov
mov
jmp
adcb
sub
sbb
lods
andb
push
imul
std
gs
mov
jne
sub
push
rclb
xchg
sub
adc
xchg
into
adc
push
insb
add
bound
dec
test
mov
pushf
sbb
ret
dec
push
pop
rorl
loop
and
insl
add
fidivrs
inc
xchg
mov
sarl
adc
mov
out
jno
fistl
notb
lods
nop
cmpsb
imul
xchg
or
cwtl
dec
ret
jnp
push
test
and
xchg
inc
cwtl
in
xor
cmp
out
mov
xchg
jle
rcrl
mov
sbb
loopne
scas
push
ret
aas
or
bound
sbb
xchg
leave
sahf
add
or
or
mov
cmp
dec
fistpll
pop
out
push
mov
mov
ret
cmpsl
ss
fsubr
add
imul
stos
mov
adc
jl
fidivs
scas
lods
cmp
pop
test
xor
jecxz
loope
xchg
incl
int3
and
jno
in
out
pop
sbb
pop
cmc
cmp
loop
outsl
sahf
decl
push
sbb
ror
jbe
sbb
fadd
sbb
add
sub
repnz
jb
aam
pop
adc
adcb
lahf
bound
add
jge
pop
int
inc
push
add
ss
pop
out
mov
fwait
pushl
scas
inc
adc
mov
out
or
mov
xor
and
add
lods
adc
push
test
ret
mov
lea
add
sahf
mov
pop
ljmp
call
fdivr
push
jne
or
pop
dec
jle
inc
mov
xchg
int3
pop
loop
lods
xor
and
jl
xchg
dec
xchg
xor
push
aas
stc
andb
xor
bound
sub
pop
loopne
mov
pop
sub
push
lods
sar
mov
sbb
sbb
jbe
xlat
xchg
stos
testb
or
mov
push
inc
xor
and
lods
fildl
cld
nop
and
scas
cwtl
or
add
mov
jg
cmp
jnp
xchg
xor
sub
cmp
push
lds
jae
out
inc
movsl
sbb
add
adc
or
imul
lcall
movsb
sbb
dec
aad
arpl
jmp
xchg
xchg
stos
xor
and
add
stos
cld
cmpsl
lcall
pop
cmc
mov
mov
in
out
nop
pop
cmpsl
shlb
add
and
push
xor
dec
mov
sti
mov
mov
clc
jg
cs
sub
test
popf
xor
sub
cmpsb
push
sahf
or
jnp
or
mov
inc
or
adcl
out
test
lret
pop
jno
out
lret
aaa
out
and
add
mov
xchg
and
pop
adc
jecxz
mov
mov
rclb
fcmove
pop
test
add
es
sbb
xor
jnp
mov
mov
cltd
repnz
xchg
jb
and
mov
movsl
in
loop
sbb
adc
mov
sbb
pop
lods
mov
mov
lea
hlt
mov
and
mov
sub
mov
mov
jl
pop
push
sub
xchg
mov
dec
filds
imul
outsb
aam
cmp
cmp
jg
mov
inc
mov
jge
cmp
adc
adc
lahf
test
xor
ret
enter
xchg
lods
lret
inc
insb
mov
jb
cpuid
lea
xor
pop
mov
add
mov
jo
mov
in
inc
jnp
ja
lcall
sub
out
shl
mov
vpshab
push
jnp
nop
jae
lea
or
sti
mov
sti
iret
xchg
xchg
aam
frstor
cmp
sahf
mov
hlt
mov
dec
mov
in
or
mov
pop
or
arpl
nop
push
ds
outsb
sub
xchg
jnp
pop
out
sbb
repnz
xor
push
jo
cmpb
xlat
inc
mov
pop
lret
add
pusha
cli
xchg
pusha
mov
fs
lea
adc
stc
stos
jl
lret
sbb
pop
mov
or
push
loope
sub
xchg
aad
subb
ja
or
mov
or
or
push
xor
jns
sub
imul
in
ds
outsl
shrl
cmp
xor
lcall
pop
sub
mov
sub
testl
dec
cmc
xchg
dec
jge
aas
test
xlat
in
push
test
mov
xchg
aas
push
mov
jns
loope
xor
outsl
push
out
xchg
sbb
pop
lods
mov
inc
mov
mov
popf
in
push
cmp
popf
push
xchg
cmp
mov
cmp
inc
or
lcall
or
fsubrs
mov
jae
sbb
adc
scas
mov
roll
sub
mov
js
fildll
arpl
popa
add
pop
xchg
and
sub
or
xchg
xchg
movsb
sbb
mov
cmp
pop
xor
stc
sub
out
pop
inc
sub
repz
xor
ficoml
fcoms
dec
fidivs
mov
jle
subb
lock
ss
ja
pop
lods
jmp
in
and
and
xor
cmp
cltd
mov
shll
mov
add
adc
adc
in
xorl
aad
pushf
aaa
push
jg
les
sbb
jnp
dec
mov
leave
pop
lods
xor
lods
inc
adc
repz
pushf
cmpsl
pop
ds
iret
mov
shrl
mov
movsl
dec
push
test
test
jb
test
mov
jge
loop
int
cmpsl
jmp
dec
sbb
sub
es
jb
sbb
pusha
inc
gs
inc
popf
sbb
jp
add
dec
jae
dec
pop
bound
loop
dec
ret
xchg
xor
loop
xchg
js
inc
enter
jne
cmp
stc
mov
orl
out
in
out
fisubrl
insb
js
dec
popa
shlb
pop
jg
cld
out
mov
mov
push
push
nop
lds
ret
push
cltd
push
stos
adc
mov
or
mov
imul
cmp
shlb
inc
and
and
pop
loop
outsb
push
js
and
stc
cmpsl
add
sbb
in
rcl
sbb
lret
imul
cmp
arpl
or
repnz
mov
std
push
das
cmp
cli
imul
pushl
push
cmpsb
xchg
mov
lahf
adc
icebp
lea
and
inc
push
mov
pushf
fsubl
ret
jae
ljmp
and
xor
rorl
inc
daa
lahf
frstor
add
jmp
scas
add
es
pop
cmp
mov
jg
daa
jo
xor
mov
sub
out
adc
scas
jle
inc
movsb
push
pop
cmc
mov
shlb
push
or
aaa
xchg
add
scas
test
insl
mov
push
rcl
adc
or
aaa
sub
repz
mov
push
push
sub
pop
add
sub
xchg
insl
mov
adc
inc
jg
jns
pop
fisubs
pop
cltd
mov
or
jne
mov
pop
jns
dec
lret
or
dec
cmp
push
aas
iret
mov
outsb
leave
inc
in
mov
fdivl
adc
into
sahf
shll
into
test
xlat
sbb
popa
stos
jp
jp
shr
inc
adc
push
xor
loop
pop
sub
scas
push
popf
popa
mov
ret
in
jno
sub
mov
pop
mul
jp
sbb
in
addl
inc
subb
mov
mov
xchg
jo
or
rcr
inc
xor
push
popf
push
mov
bound
dec
icebp
pop
cmp
hlt
pusha
fisubl
mov
ret
lret
mov
sub
xchg
xor
shll
outsl
cmpl
mov
pop
ror
xlat
cmc
dec
in
in
dec
pusha
sbb
jge
push
add
in
insb
inc
out
fisubl
orb
mov
scas
pop
loopne
mov
repnz
cmp
push
cmp
add
leave
cmp
imul
cltd
mov
dec
dec
fwait
lods
push
scas
orb
bound
jnp
in
push
lock
aam
push
into
push
jmp
pop
xor
ss
push
mov
cmpsl
inc
push
stos
sti
insb
shrl
inc
adc
adc
rcll
cmp
push
arpl
inc
and
xchg
insl
cmp
cmc
ljmp
in
loopne
xor
jo
mov
jg
movsl
fldenv
aas
addr16
ljmp
sub
mov
adcl
pop
mov
adc
mov
mov
insb
das
or
hlt
mov
repnz
inc
adc
sub
test
pop
and
push
lcall
dec
cmp
push
mov
imul
pop
subb
aad
xor
data16
adc
sbb
cmp
push
dec
loope
imul
fcompl
and
popa
add
js
hlt
mul
roll
sub
sbb
sbb
adc
cld
sti
shlb
mov
mov
jne
add
mov
xacquire
mov
mov
mov
pop
aaa
or
push
out
jmp
outsb
shr
and
scas
xor
fs
leave
mov
fisttpll
adc
sub
jo
adc
in
mull
ret
loope
jmp
jg
sub
dec
test
sub
or
mov
rcl
imul
test
jp
icebp
mov
lds
fsubrp
sbb
aam
into
fnsave
orb
cld
mov
jae
inc
jbe
aam
jl
add
fcomps
dec
cmp
subl
pop
and
inc
adc
mov
and
jo
cmp
or
dec
mov
inc
ja
mov
xor
inc
add
pop
ja
fidivl
push
mov
inc
adc
je
leave
sarb
xchg
movsl
push
mov
sbb
sub
rcrl
andb
out
xchg
mov
inc
fidivs
lret
jl
insl
pop
in
sarb
add
aaa
xchg
imul
sub
mov
rcrb
mov
adc
int3
bound
mov
ret
fdivp
das
nop
out
ret
arpl
pop
and
fwait
test
iret
testl
jne
cmpsb
push
arpl
jle
inc
arpl
dec
addl
ss
jne
jle
inc
xlat
leave
lahf
test
lret
xor
sahf
popa
mov
stos
inc
jecxz
add
jbe
pop
jl
mov
sbb
push
scas
or
aas
xlat
dec
mov
pusha
jae
adc
mov
and
xchg
mov
xchg
hlt
mov
adc
and
psllw
mov
iret
cmp
add
inc
not
arpl
jge
dec
ret
jbe
popa
jno
pop
movsl
fsubrs
mov
insl
push
pushf
andl
xchg
sub
sub
cld
pop
cmp
sub
dec
xchg
sub
andl
aaa
adc
das
push
jmp
movsb
test
mov
jg
mov
jle
and
in
add
and
xchg
mov
or
mov
mov
xor
ror
das
ret
and
push
nop
dec
pop
mov
ja
sti
sub
out
stos
popf
cmp
stos
mov
jge
adc
mov
nop
add
fcmovnbe
leave
andl
mov
pop
aas
icebp
pop
push
out
cmp
aas
jmp
ficoml
aas
scas
pop
jbe
sub
sub
mov
dec
sub
xchg
dec
testl
sbbb
pop
repz
mov
mov
rolb
dec
cwtl
mov
test
sbb
mov
loopne
mov
lcall
lret
mov
push
mov
ret
sahf
sub
mov
outsb
sti
cmp
test
push
sahf
pop
aas
or
adc
dec
int3
inc
and
mov
xchg
add
sbb
fisubs
add
mov
test
xor
gs
fsubp
mov
adc
jne
out
ljmp
mov
out
adc
mov
scas
push
mov
mov
xchg
mov
movsb
je
fdivp
cmp
jns
mov
lahf
mov
sbb
testb
cmp
shr
adc
xorl
pop
loopne
fsubs
fincstp
sbb
pop
jmp
arpl
inc
mov
inc
inc
push
data16
inc
cltd
push
jle
loop
xor
or
jbe
aad
ret
filds
fsubrl
cmpsb
pop
dec
xlat
jne
dec
cmpsb
aad
xor
adc
jb
sub
sbb
jp
dec
test
adc
push
dec
movsb
out
iret
cltd
push
sub
dec
aad
dec
mov
inc
jae
pop
test
push
ds
add
mov
push
mov
pop
xor
and
mov
rcl
pop
adc
jns
sahf
data16
sub
cmp
mov
xor
sbb
lods
test
outsl
jge
dec
out
test
loopne
out
adc
inc
dec
jp
fstpt
movsl
cmp
mov
repz
xchg
push
push
sbb
jecxz
or
je
popf
dec
adc
xchg
push
mov
or
cmp
out
add
sbb
jne
rcrl
out
and
cmp
inc
and
pop
cwtl
push
sbb
jge
fmull
cmp
sbb
imul
repnz
sahf
sti
out
jns
scas
pop
out
sbb
inc
pusha
add
xchg
cs
or
jg
cmc
scas
imull
addl
outsb
jns
repnz
movsl
ficoms
fdivrl
sbbl
cmp
mov
push
sub
incl
aad
xor
scas
popa
cwtl
push
inc
add
fwait
out
xor
filds
or
sub
push
push
push
xor
pop
or
mov
xchg
mov
gs
loope
xchg
pop
or
ljmp
mov
nop
fsubrs
push
push
jge
je
into
lock
stos
sti
sbb
push
clc
stos
aas
or
scas
loope
cwtl
xor
pop
mov
sub
out
and
or
add
bound
int3
inc
shlb
jne
and
dec
clc
cmp
int3
lods
mov
inc
xor
or
xor
or
sbb
inc
into
jne
inc
and
into
gs
int
add
in
ljmp
sub
dec
pop
out
mov
hlt
mov
not
ds
pop
out
sub
inc
adc
or
ds
or
xchg
mov
sub
leave
int
mov
mov
adc
push
dec
es
pop
aad
loopne
pop
lret
cmp
das
outsl
cli
repnz
imul
cmp
ds
xor
in
jmp
sub
fcoml
movsb
push
test
outsb
sub
ljmp
dec
jb
scas
cmp
mov
stos
jae
aam
lds
xor
mov
aam
pushf
stc
nop
pop
pop
xchg
shr
cltd
mov
add
xchg
movsl
das
inc
inc
test
jnp
add
pop
mov
jp
and
cmpsb
inc
in
pushf
outsl
push
xorb
fucompp
pop
sbb
imul
andb
fnstenv
shrb
or
dec
addr16
adcl
leave
dec
jg
mov
jecxz
repz
std
packsswb
add
hlt
cmpsb
xor
in
loopne
lods
lret
push
into
adc
jbe
lahf
and
pop
jb
inc
es
cli
nop
and
cli
sbb
lds
lret
cmp
xchg
mov
sub
sbb
sub
rorb
dec
sbb
jp
sub
ret
sbb
jg
dec
fmull
push
adc
fsubrs
sbb
push
adc
hlt
cmp
dec
jnp
adc
enter
js
pop
mov
loop
sti
xchg
or
sbb
xchg
sub
xor
and
cltd
dec
pop
mov
movsl
sti
dec
inc
sarb
push
pop
dec
lods
or
add
cmp
jp
sbb
addb
cwtl
arpl
pop
push
push
xor
inc
cli
and
add
cld
xchg
sbb
pop
jmp
out
lcall
add
dec
loope
mov
test
pushl
xchg
dec
cmp
shll
mov
cmp
jmp
bound
push
testb
push
scas
bound
imul
lahf
aam
xchg
or
movsb
lahf
daa
lea
sub
test
lock
lods
add
repnz
mov
mov
mov
dec
mov
cmpsl
ds
enter
push
xchg
mov
jno
add
loopne
pop
into
lahf
mov
ret
or
cmpsb
repnz
shll
add
or
in
mov
pushf
adc
pop
adc
aad
and
repz
and
sbb
in
dec
mov
imul
repnz
fisubl
das
xchg
ja
add
push
mov
jne
clc
data16
or
sbb
add
movsl
shlb
jle
inc
fcmove
popf
js
loopne
xor
mov
push
dec
fcmovnbe
addr16
enter
lret
js
xlat
stos
rorb
lods
test
sbb
imul
mov
hlt
mov
push
pop
push
sub
dec
das
bound
movsb
pop
shrl
ds
test
lret
lock
or
out
push
test
leave
test
add
dec
dec
sub
test
mov
add
lret
mov
lods
les
xchg
lds
imul
loop
cwtl
loop
xor
add
cltd
xor
cmp
inc
sub
repz
testl
loope
dec
lcall
jp
dec
insl
mov
sbb
and
sub
mov
sarl
xor
sub
les
ljmp
mov
sbb
gs
mov
or
lods
aaa
into
fucomp
scas
inc
sbb
push
push
mov
sti
sbb
addl
inc
pushf
addr16
xchg
dec
xor
lret
push
jmp
andb
xor
idiv
jne
and
inc
sbb
dec
leave
cmp
roll
adc
scas
xor
jecxz
filds
jnp
mov
push
arpl
push
mov
icebp
sub
rcl
sbb
or
out
ficompl
mov
cmpsb
movsb
xchg
jns
mov
and
out
jo
stos
aad
add
ret
dec
call
popl
shrb
popf
sbb
call
jns
pop
xchg
jecxz
loop
rolb
adc
mov
hlt
dec
cmp
rorb
and
aaa
mov
mov
ficoml
jg
leave
sbb
jne
pushf
test
jb
lahf
cmpl
insb
iret
mov
xor
icebp
out
hlt
jb
pop
lea
jmp
int
cwtl
cmp
mov
insb
rsqrtps
mov
fisubs
mov
and
jno
ds
xchg
test
clc
mov
inc
outsb
add
cli
inc
imul
mov
push
sarl
add
lret
data16
adc
cs
mov
bndstx
mov
xchg
js
mov
xor
and
mov
mov
jae
xchg
bound
xor
mov
push
dec
xor
push
or
push
mov
iret
adc
mov
std
daa
mov
inc
mov
hlt
outsb
gs
jae
lret
inc
dec
in
mov
ss
imul
push
out
fmull
inc
sbb
dec
rorl
rclb
jno
mov
lods
jmp
sbb
popa
cld
test
xor
data16
push
iret
mov
dec
add
add
add
inc
adc
xor
fbstp
dec
adc
adc
and
aas
outsb
lret
add
stos
jbe
stc
clc
jae
push
add
sbb
push
sbb
sbb
xor
xchg
mov
and
cwtl
js
lret
or
inc
lret
fwait
stc
add
cmp
ret
jp
ljmp
push
and
cmc
mov
push
mov
loopne
jl
sbb
inc
cmp
add
cmc
pop
xor
mov
cmp
rcl
aas
das
nop
inc
int
push
xor
adc
xchg
mov
repz
out
in
dec
push
mov
fnstenv
inc
mov
hlt
insl
cmpsb
pop
pause
or
pop
out
adc
rcrl
mov
ja
mov
pop
cmp
movsb
xchg
cmp
dec
cmpsb
push
inc
mov
sahf
mov
cwtl
inc
jne
add
jl
pushf
cld
sub
jmp
dec
sarb
jg
je
js
mov
mov
xlat
and
in
enter
jb
jae
fwait
xchg
rclb
jmp
js
pop
movsl
js
dec
je
je
dec
pushf
xchg
sbb
mov
inc
out
jp
sti
lea
lret
dec
dec
scas
sahf
sbb
jno
xchg
and
fdivs
sbb
notl
stos
inc
mov
sar
leave
and
in
or
mov
std
out
addb
sbb
push
js
lea
add
or
add
loopne
fsubrl
cmp
mov
test
jbe
andb
fwait
call
imul
pop
imul
adc
insb
xchg
pop
outsl
inc
mov
nop
les
sbb
fs
gs
jecxz
subb
fbld
shl
inc
push
jae
insl
jge
mov
mov
popf
pop
lret
addr16
andb
shll
call
push
aaa
js
test
lret
addr16
push
xlat
in
push
fs
inc
pop
pop
pushf
jno
notl
and
out
loop
push
mov
lods
mov
jno
lea
movsb
push
and
mov
pop
loope
aam
push
xchg
movsb
outsb
popa
mov
mov
shlb
inc
bound
aad
jp
dec
mov
aam
clc
stos
repz
lods
xorl
xchg
mov
lods
lret
push
xchg
hlt
jg
pop
xchg
push
push
mov
cli
test
or
push
and
sbb
cmpsb
jns
lock
pop
in
into
adc
imul
and
gs
sub
popf
les
loope
mov
jne
add
dec
or
dec
movsl
mov
pop
ds
iret
fildl
sub
insl
jmp
imul
adc
stos
ljmp
scas
orb
movl
xor
xor
scas
mov
add
push
outsb
hlt
push
mov
movsl
loope
mov
pop
es
mov
xor
lret
mov
sbb
or
push
push
xchg
dec
push
cmp
clc
mov
push
sub
dec
lock
rcrl
cld
push
add
mov
lods
push
jb
mov
pop
xlat
sbb
shl
nop
sete
pop
cltd
adc
mov
in
xchg
out
adc
aaa
pop
sti
rorl
scas
push
cmp
push
jb
arpl
lods
int
xor
pop
cmp
lods
jnp
cmc
bound
ret
arpl
add
gs
jne
outsl
push
xchg
push
js
mov
loop
jl
hlt
cmp
pop
inc
cmp
cmp
mov
inc
pop
iret
outsl
xchg
inc
xchg
int
xchg
dec
nop
add
fstps
gs
xor
aam
push
sbb
cmpsb
fiadds
stos
push
out
mov
mov
incb
lods
or
mov
fsubrp
xchg
lcall
dec
loopne
imul
xchg
sbb
and
mov
mov
cltd
pop
dec
xchg
sbb
push
mov
dec
pop
adc
insl
add
mov
gs
xchg
movsl
data16
daa
mov
and
stc
es
xor
fsubs
xchg
test
jae
gs
push
jns
mov
sbb
sbb
mov
sahf
scas
xchg
nop
fisubrl
or
jg
or
lods
jp
xchg
insb
fisubrs
push
fisubrs
xor
or
rolb
pop
pop
outsb
sub
out
shrb
xor
hlt
push
sub
push
shlb
xchg
dec
das
mov
mov
jg
loope
ss
fs
add
in
daa
out
cmpsb
arpl
sbb
fs
cmp
jnp
push
mov
addr16
ja
loopne
pushf
push
cli
jg
stos
aas
clc
es
jecxz
xchg
ret
sub
lret
and
dec
cmp
dec
imull
fsubrs
sbb
out
mov
fstl
mov
fidivl
add
cli
gs
es
push
sub
inc
lret
jg
in
sbb
in
lods
testb
xor
pop
hlt
and
add
aad
cpuid
or
pop
fdivrs
cmp
fisttps
pusha
sbb
mov
rcrb
fdivrl
mov
and
add
loope
cwtl
sub
add
out
enter
push
mov
mov
push
mov
sti
sbb
push
jp
push
jle
cmp
aam
dec
inc
fdivrl
xchg
push
je
ja
jo
mov
push
mov
push
cld
fwait
cltd
pop
out
test
cld
mov
jl
xor
mov
adcb
test
sbb
imul
adc
jg
cmp
faddl
adc
lret
or
mov
mov
jge
movsl
cmp
mov
mov
lods
aam
pop
lret
cmp
inc
cmpsb
pushf
les
scas
mov
lock
psadbw
inc
add
dec
and
movsl
fsubs
add
push
mov
sub
xor
push
pop
clc
push
mov
mov
ret
or
mov
and
inc
push
jno
stos
test
imul
rclb
in
push
sbb
dec
loopne
nop
iret
mov
imul
xchg
sub
mov
jo
push
sti
mov
push
adc
hlt
mov
enter
sub
icebp
mov
adc
pop
sbb
pop
es
mov
jne
sub
pop
mov
mov
sub
sub
les
enter
adc
cmp
cmp
test
repz
rorb
adc
mov
lea
sahf
dec
push
fnstcw
mov
xchg
cmpsl
pop
xor
aaa
gs
call
jmp
sahf
add
sbb
xchg
sbb
jns
adc
in
sbb
add
cmp
or
xchg
jne
and
jb
jbe
lret
pop
jns
out
push
mov
rcrl
lahf
sbbl
pop
push
int3
xchg
mov
ret
and
cltd
int
dec
aas
adc
pop
push
inc
fsubl
lods
aas
push
or
xor
xlat
jl
or
call
mov
sbb
xchg
stc
in
inc
jb
jl
arpl
out
out
mov
inc
fldenv
movnti
mov
or
pop
dec
push
and
cmpsl
push
xor
inc
xchg
jae
jo
push
inc
push
pop
stos
ret
push
je
stos
mov
shrb
mov
mov
jmp
out
xchg
and
mov
mov
mov
gs
pop
lock
inc
imul
xor
push
add
add
mov
jno
cmp
mov
jle
imul
add
std
push
hlt
cs
lea
xchg
mov
jle
add
xchg
cmp
cmp
cmpsl
divb
push
push
je
push
popf
mov
outsb
insl
xchg
roll
test
insl
arpl
fucomip
push
xchg
mov
sti
sbb
sub
sbb
popa
push
imul
add
dec
imul
fmull
dec
in
ret
aad
ss
pop
xor
cmp
int3
sbb
fiaddl
aad
js
shrb
pop
cmpsl
mov
xchg
push
mov
out
ja
pop
jp
sbb
sbb
inc
test
loope
test
pop
sub
into
bound
pop
pop
loop
les
xchg
add
mov
cmp
xor
mov
mov
adc
pop
fwait
push
inc
pop
xchg
jecxz
mov
aaa
pop
cld
mov
aam
inc
push
ja
in
test
ss
mov
and
movsl
adc
ljmp
stos
mov
xchg
scas
fsubrs
int3
data16
cmp
out
test
or
sarb
mov
pop
lret
rcr
mov
scas
popa
push
sbb
xchg
mov
and
out
jg
cmp
add
mov
hlt
movsb
adc
pop
lahf
mull
mov
push
fidivrs
andl
roll
and
and
ret
sbb
lock
popa
lock
push
jp
mov
jle
mov
cld
mov
ret
mov
cs
leave
outsb
sbb
push
out
pop
lds
sbb
in
sbb
nop
mov
in
xchg
lret
sub
mov
xchg
addr16
xchg
jbe
les
les
dec
ret
out
pop
repnz
int3
scas
out
mov
mov
adc
dec
fistpll
push
sub
add
daa
inc
cld
arpl
adc
mov
scas
xchg
push
jae
jno
scas
sub
pop
adc
mov
stos
aam
inc
addr16
xchg
cltd
leave
push
sbb
pusha
outsl
xor
inc
addl
dec
mov
dec
xchg
lods
inc
sbb
mov
adc
cmp
imul
sbb
jmp
test
inc
jae
inc
mov
dec
dec
lret
sbb
or
add
shrl
pop
mov
push
aaa
push
and
rclb
rorb
xor
add
test
cmp
hlt
inc
add
jae
jp
mov
push
mov
sbb
cmp
div
scas
adc
push
or
gs
in
in
jmp
add
insl
ret
mov
add
push
and
jge
fs
pop
lock
xchg
push
sub
movsl
aaa
mov
jl
test
cvtsi2ssl
mov
jg
add
dec
call
sbb
mov
popa
outsb
dec
lods
ljmp
xchg
stos
add
movsb
xchg
lods
pop
adc
inc
scas
enter
je
inc
les
int
insl
sbb
mov
test
std
mov
mov
jbe
sub
leave
adc
lea
fxch
and
pop
sbb
scas
xchg
jno
sub
rolb
pop
fmulp
jno
push
or
mov
movsl
xor
xchg
aam
leave
mov
in
mov
ja
dec
push
aam
sbb
out
jge
jnp
mov
or
jmp
sub
inc
pop
pop
mov
push
sub
xlat
in
out
dec
nop
daa
jge
mov
dec
scas
mov
add
lods
jae
add
mov
movsb
cmp
sub
cmp
je
push
gs
popa
jecxz
xchg
cld
mov
js
sbb
ret
shlb
cmp
dec
push
rcll
loope
testb
cwtl
jae
xchg
iret
and
mov
cld
inc
push
pop
pop
loope
bound
sbb
sub
cltd
divb
inc
out
shrl
int
add
repz
mov
adc
xchg
adc
mov
mov
pop
cli
xchg
je
js
pushf
xchg
sbb
ret
int
mov
cs
shlb
loopne
aaa
mov
fidivrl
adc
icebp
or
xor
bound
scas
inc
mov
sub
out
xchg
mov
and
and
mov
leave
rcr
sbb
or
jg
push
outsl
lds
movsb
fldcw
cs
clc
fs
fwait
int3
sub
insl
or
cli
or
and
mov
loop
sbb
pop
test
les
adc
nop
sub
and
stos
cmc
mov
inc
stos
jmp
fcoms
test
and
pop
outsb
xchg
push
mov
out
xor
xchg
gs
les
xorl
sahf
iret
scas
sti
sub
fdivl
xchg
sbb
mov
push
subl
iret
test
nop
xlat
mov
cmp
sbb
push
mov
jae
notl
out
dec
xorb
scas
or
sub
sub
pop
push
insl
push
cli
fdivs
xchg
cmpsl
cmp
jecxz
mov
adc
inc
fidivrs
mov
gs
xchg
subb
mov
jne
mov
mov
nop
cld
inc
cs
push
scas
lods
mov
mov
adc
inc
fnstenv
dec
xor
pushf
mov
stos
and
into
jb
mov
test
sbb
lret
pop
adc
cmc
and
ficomps
sub
sbb
lcall
mov
pop
inc
lcall
cld
inc
push
and
push
pop
cmp
push
adc
dec
xor
movsl
pop
xor
pop
in
jne
add
xor
xchg
jo
lahf
mov
jp
push
inc
xchg
mov
stos
xchg
jno
sub
dec
push
dec
adc
jae
rcl
js
shlb
adcb
xchg
jp
orl
mov
stc
dec
dec
loope
jl
push
push
scas
pop
xor
orl
cmp
dec
pop
test
negl
xor
outsl
pushf
mov
lods
test
mov
dec
jge
xchg
add
nop
jle
scas
pop
add
or
das
add
dec
adc
xchg
mov
int
sbb
push
adc
into
add
test
xchg
stos
add
fwait
or
jbe
jno
stos
jecxz
test
jg
sti
xor
inc
add
push
xchg
movsb
mov
cmp
fdivrs
cltd
cld
cld
divb
stos
xor
fnstenv
pusha
int
mov
xchg
mov
repz
sub
test
iret
add
cmpsb
pop
push
mov
inc
pop
jb
movsl
test
pop
jns
pop
jno
lea
jecxz
cmp
jecxz
lcall
and
aaa
mov
popf
jp
push
sub
dec
inc
movsb
inc
fisubl
push
add
out
cmpsl
rclb
decb
ret
xor
push
out
push
push
lcall
sub
xlat
outsb
notl
pusha
adc
ret
pusha
sbb
sbb
add
pop
pop
test
fsubrl
inc
push
jmp
mov
xchg
adc
pop
jmp
leave
lods
pop
shll
lret
bound
lods
hlt
cmpl
nop
and
adc
push
fdivl
mov
push
addr16
cli
nop
mov
fcmove
cwtl
xchg
cld
pushf
dec
mov
sub
ss
mov
push
adc
or
cmp
xlat
cmp
fidivrl
push
mov
mov
test
scas
mov
lcall
cwtl
testl
push
or
cmp
out
ljmp
xchg
jne
sub
add
outsl
or
jge
outsb
add
adc
mov
rorl
lret
pop
sahf
test
push
popf
std
into
and
rcrl
sub
icebp
lret
cmp
pushf
cmc
push
jne
adc
dec
and
insb
popf
xor
ficompl
movsb
xchg
cwtl
mov
je
dec
test
sbb
mov
popa
mov
dec
sub
inc
and
in
pop
int3
pop
cmp
cmp
cmp
outsb
add
mov
sub
in
popa
aaa
xor
shr
lock
mov
jge
insb
mov
test
shrb
jle
push
andb
sub
sbb
adc
les
pop
lods
pop
mov
das
jae
jo
lds
cltd
mov
hlt
addr16
pop
adc
dec
add
aad
xchg
jno
adc
out
mov
cmpb
pushl
fs
pop
mov
loopne
jmp
mov
mov
mov
adc
dec
mov
pop
xchg
aad
imul
jbe
pop
test
push
lcall
xor
jl
cmpsl
ds
loopne
and
adc
std
add
cmp
mov
out
sbb
sbb
outsb
inc
stos
inc
fsts
rcll
subb
push
push
loop
add
push
xor
filds
fwait
aaa
push
ret
in
xor
sub
dec
movsl
pop
dec
loope
jnp
lret
mov
je
mov
inc
sbb
bound
cmp
or
bound
dec
out
push
negb
or
pop
scas
int3
pop
imul
mov
dec
xchg
mov
push
adc
iret
cmp
pusha
push
xchg
sub
cmp
sbb
ja
in
into
in
dec
repnz
out
je
push
pop
pop
mov
mov
cmp
dec
jmp
stos
test
dec
popf
pop
dec
add
les
dec
sbb
insl
push
or
popf
cmp
xchg
pop
inc
or
xchg
mov
mov
pop
fisubrl
iret
push
jbe
lock
pushf
int3
cmp
insb
movsl
iret
outsl
in
fcmovb
outsb
scas
and
sub
std
adcl
stc
sahf
mov
inc
sbb
inc
negl
adc
mov
xchg
sbb
and
scas
inc
adc
pop
in
pop
adc
ret
xchg
arpl
sbb
vpaddd
jg
insb
sub
mov
pop
pop
dec
adc
loop
popa
inc
aad
mov
in
pusha
push
pop
out
addb
jp
sub
loop
dec
adc
jge
xorb
lret
bound
mov
ja
decb
inc
adc
cmp
push
icebp
imul
jnp
xor
mov
cmp
dec
xchg
dec
inc
aad
mov
cmp
pop
xor
cmp
notb
sbb
into
mov
imul
pop
clc
xchg
jl
movsb
inc
sbb
pop
repz
lret
sbb
sbb
ja
pop
loop
inc
xchg
mov
rorl
pop
addr16
fadds
andb
jnp
lret
adc
sub
in
adc
sub
add
lds
push
outsl
addl
scas
icebp
sahf
leave
xor
iret
lahf
les
jle
pop
inc
outsb
shrl
inc
pusha
mov
data16
or
add
nop
mov
shrl
add
inc
inc
scas
ret
ja
sbbb
mov
lock
loop
add
jbe
and
xchg
pushf
push
pop
add
dec
lret
jecxz
lcall
test
les
cs
inc
sbb
xchg
mov
rclb
sahf
pop
pop
dec
mov
cmpb
adc
insb
fcomip
out
inc
jecxz
pop
ljmp
call
and
fadd
es
std
cltd
cmp
lods
aas
rcrb
insl
pop
lahf
xor
stos
lea
or
xchg
xchg
pushf
out
shl
fistps
jb
jle
aad
fwait
mov
inc
mov
loopne
dec
dec
lea
sarl
pop
test
and
sbb
xor
jg
and
cmp
add
cltd
sbb
sub
sub
clc
sti
jbe
int
imul
int
jmp
imul
fst
sbb
jno
jns
fs
mov
test
out
imulb
inc
jg
icebp
lods
in
sbb
cli
sahf
inc
adc
cmp
aas
repz
lcall
cmp
xchg
pop
sarl
adc
sbb
out
mov
rolb
lahf
mov
dec
adc
pop
dec
lods
push
aas
xchg
add
ffreep
js
mov
out
sahf
flds
mov
imul
cs
fisubl
in
jecxz
aas
sub
mov
imul
aaa
dec
jne
insb
fnstsw
pop
mov
sbb
and
push
jo
cmpl
jns
imul
js
outsl
or
fdivp
fsts
std
add
mov
xlat
dec
adc
mov
outsl
sbb
mov
outsb
ja
pop
cmp
leave
sbb
and
push
dec
pop
repnz
sub
test
sub
dec
mulb
cmp
movsl
xor
and
loopne
inc
clc
adc
xor
push
aad
mov
mov
xor
mov
inc
push
idivb
in
sub
ss
sbb
mov
adc
jl
mov
iret
pop
jo
dec
sti
mov
sub
repnz
testl
dec
adc
rdpmc
ret
xor
mov
call
lea
jne
lret
call
fsubs
xchg
fdivl
sbb
leave
mov
loopne
hlt
push
xor
mov
sbb
xor
mov
pusha
cmp
push
inc
add
cmp
imull
rorb
testl
jp
sbb
jb
daa
add
test
sbb
mov
or
enter
pop
cwtl
stos
jg
adc
push
loop
jno
pushf
fsubr
test
in
dec
out
das
ret
dec
pop
jae
push
mov
lcall
js
xchg
sbb
ficomps
lret
push
fdivrs
dec
gs
mov
inc
ret
add
pop
cwtl
cmp
or
xchg
and
out
movsb
push
add
push
idiv
sub
fcmovb
sub
daa
inc
pop
clc
jb
iret
fneni(8087
sbb
or
arpl
mov
push
clc
adc
adc
movl
xchg
js
popa
ds
out
movsb
add
sub
and
push
ret
mov
sub
jns
adc
xor
fwait
mov
repnz
inc
jge
enter
ret
xchg
adc
push
nop
std
out
mov
cmp
adc
hlt
imul
and
push
mov
addl
push
fnstcw
bound
jnp
pop
add
mov
arpl
lods
xchg
mov
jl
in
out
jnp
sti
out
mov
jle
rcpps
jnp
sub
jo
or
out
sbb
xchg
sub
loopne
out
mov
cmp
cmc
pushf
dec
pop
add
add
push
inc
xchg
js,pn
jg
lods
pop
sub
je
leave
movsl
pop
fidivl
js
cwtl
pop
mov
sbb
xor
sub
xor
sbbb
hlt
push
jo
outsb
js
mov
les
test
rcrw
ret
jg
in
mov
cmp
cmp
int
fidivs
fwait
cwtl
inc
fcmovne
mov
cmp
adc
test
and
dec
cmp
push
and
push
fstps
stc
push
lods
sub
sahf
incb
cs
jnp
mov
adc
hlt
sub
movsb
enter
hlt
lods
push
pushf
fiadds
out
andb
fs
jne
jno
outsb
and
sub
icebp
sbb
into
std
xor
lock
jmp
jo
jo
outsl
xchg
add
dec
and
cmp
rcrb
cli
pushf
out
shrb
xchg
pusha
ret
jb
pop
fisttpll
in
movsb
mov
mov
addr16
rcrl
inc
rolb
push
call
push
test
mov
test
cmpsb
out
cmp
shll
cmc
pop
mov
or
add
or
ja
jno
sub
xchg
sahf
psubsw
dec
sbb
aam
cmpsb
mov
sahf
jmp
setnp
or
inc
mov
fiaddl
jns
mov
lret
sbb
les
rclb
jbe
add
jno
pop
cmp
jle
mov
pop
fisubrs
sbb
mov
loope
adc
jno,pn
push
in
cmp
lret
pop
std
xchg
sbbb
mov
dec
loopne
imul
mov
mov
rcll
inc
push
dec
cli
and
dec
clc
ret
push
inc
adc
fidivs
xchg
push
mov
shll
int3
js
arpl
cltd
scas
and
fnstsw
and
mov
stos
jmp
ljmp
xchg
int
adc
mov
lret
push
cmp
xchg
test
xchg
or
and
es
loope
push
dec
push
sub
push
cld
xchg
dec
and
lahf
xor
xchg
add
in
cwtl
cs
pushf
das
push
jmp
popa
out
and
pop
mov
je
sbb
push
hlt
nop
push
cmp
adc
cmp
jl
in
push
daa
adc
popa
lods
jle
loop
fnstenv
shr
mov
inc
lret
xlat
sub
mov
add
movsb
rcrb
sbb
sahf
or
cli
sub
sub
sbb
add
lea
jae
push
and
insl
xlat
das
inc
fldl
pop
push
das
jl
mov
mov
push
mov
dec
in
test
inc
lret
and
pop
adc
inc
or
lret
sbb
stc
adc
orb
dec
testb
scas
addr16
xchg
xchg
jge
dec
push
pop
mov
divl
aaa
mov
test
xchg
daa
data16
push
scas
inc
inc
rcll
and
push
fnstsw
lret
test
cmp
pop
repz
and
jle
push
and
loopne
out
in
pop
iret
jnp
repz
mov
inc
hlt
fcoms
xchg
stc
xchg
out
in
mov
add
enter
adc
nop
aad
push
sti
out
dec
mov
aad
sbb
add
mov
iret
and
mov
mov
push
mov
mov
xor
out
xchg
mov
ljmp
incl
insl
sti
xchg
scas
inc
lds
aad
les
xchg
sub
sub
mov
pop
in
push
jl
push
imul
cmp
imul
sub
mov
pop
cmp
lret
insl
lahf
ret
push
inc
clc
or
es
cmp
cmp
inc
sbb
lods
xchg
in
push
or
cmp
pop
pop
ds
aas
lcall
dec
je
js
xchg
pop
push
cltd
cli
dec
fstps
push
sub
mov
add
xchg
pop
cmp
ja
dec
mov
push
cmp
mov
out
fwait
sbb
loopne
repz
sub
add
test
jae
xchg
inc
test
and
xchg
cmp
or
pop
add
jp
loope
stc
testl
lcall
fnstenv
dec
sbb
out
jp
pop
mov
cmp
mov
sbb
inc
adc
stc
or
and
daa
add
lcall
negl
sahf
xor
mov
cwtl
das
stc
push
aam
inc
pop
push
popf
nop
fs
loop
cmpsb
jmp
cmp
dec
pop
cmp
mov
in
adc
inc
xor
add
je
xlat
pop
mov
pop
push
das
or
pop
popf
clc
ret
and
xchg
jo
iret
mov
in
cmp
imul
xchg
movsl
icebp
hlt
jmp
sbb
imul
cli
inc
test
lods
inc
loopne
dec
mov
dec
or
sbb
subb
lcall
and
fs
pop
mov
lret
dec
sub
dec
repz
dec
sub
jno
push
or
sbb
push
pop
gs
mov
inc
mov
or
lahf
pop
cmpsl
nop
jae
insl
mov
sub
hlt
divb
or
push
adc
mov
or
mov
cmp
xor
push
cmp
scas
cli
and
or
repnz
inc
and
push
movsl
fwait
add
dec
sub
jnp
mov
and
fdivl
loop
adc
mov
test
mov
cld
cltd
dec
hlt
inc
mov
xchg
icebp
shl
movl
cmp
mov
mov
or
imul
xchg
pop
ret
hlt
adc
aam
xchg
cmp
fnstsw
fildl
loope
add
push
inc
pop
sub
dec
cmp
mov
xchg
pusha
ss
or
fisttps
stos
ds
data16
ds
push
add
popf
jb
mov
pop
dec
dec
mov
xor
fsubrl
sti
pop
sbb
test
nop
xor
xor
jb
call
leave
daa
mov
mov
adc
add
push
leave
xchg
sbb
pop
imulb
mov
lds
and
stos
cmp
push
add
popa
js
xchg
or
adc
xor
lock
push
outsl
fwait
mov
add
imul
dec
hlt
xor
cmp
inc
lock
lods
and
into
daa
mov
insb
mov
scas
fbstp
push
xchg
sbb
jae
jge
cmpsb
jns,pn
pop
mov
dec
xchg
mov
add
dec
testb
nop
fnstcw
push
dec
jecxz
jo
hlt
jecxz
inc
fisttps
subb
add
stc
or
jns
pop
adc
or
xor
adc
adc
cmpsb
and
loopne
ljmp
cmc
jge
mov
add
mov
sub
mov
fld
data16
xchg
cmpsb
inc
fwait
movsb
jb
leave
jl
imul
imul
push
push
test
aaa
clc
xchg
rsqrtps
or
repz
adc
aas
cwtl
test
xchg
cmp
jne
sub
xchg
popf
scas
inc
iret
mov
mov
fimuls
push
xor
xor
xor
test
call
loop
dec
dec
inc
mov
int3
mov
ds
mov
sub
fs
test
rorb
sbb
mov
lds
push
outsb
jae
jge
push
sbb
in
lods
fcomps
xchg
loopne
idivb
mov
sub
mov
pop
ja
test
mov
movsbl
mov
fimuls
cmp
inc
adc
mov
mov
push
in
fpatan
dec
add
push
add
xchg
minps
or
popa
mov
xchg
scas
jecxz
aam
dec
fistl
fnsave
sub
mov
adc
inc
mov
or
xchg
add
dec
std
cltd
jb
fisttpll
loopne
and
aam
push
scas
mov
notl
pop
addb
lcall
xor
in
and
int
out
repnz
pop
sub
inc
ss
adc
mov
mov
leave
sbb
subl
insb
loope
faddp
lods
je
dec
push
lret
gs
fldenv
push
xor
into
mov
pushf
icebp
pop
sub
insb
push
xor
mov
xchg
fs
and
mov
pop
push
mov
cld
xchg
add
push
mov
inc
push
js
fistpl
test
mov
mov
xchg
mov
imul
lods
imul
fiaddl
int3
dec
xor
pop
into
pop
xor
push
sub
sti
arpl
cmp
mov
adc
cmp
and
shl
lods
out
mov
js
stc
or
into
xor
test
xlat
mov
cmc
sbb
push
fisttpll
out
loope
mov
pop
aam
or
push
ja
aaa
gs
fmuls
xor
jne
ljmp
push
hlt
push
push
push
pushf
or
sahf
xor
loope
leave
push
addb
cmp
push
mov
push
leave
int
int
mov
dec
xchg
inc
fcmovb
test
and
popf
cmpsl
xorl
aam
imul
adc
out
dec
jno
fnstenv
stc
inc
push
or
jmp
inc
fbstp
jg
out
pop
subb
sbb
icebp
ss
fisubs
xchg
adc
enter
out
xor
das
call
fdivs
xchg
inc
jp
add
push
fmull
icebp
mov
fcomi
sbb
ds
insl
dec
cmp
or
aam
dec
loop
lea
add
in
cmpl
or
jbe
movsb
scas
adc
outsl
xchg
jb
in
in
cmp
test
mov
jecxz
adc
mov
cmpsb
jg
mov
and
jl
xor
jne
in
and
sub
ljmp
push
mov
xor
repz
adc
mov
cmc
sbb
rol
loope
sti
jl
sub
fcomip
jmp
mov
or
xchg
out
popa
fildl
mov
repnz
and
or
mov
cmp
stc
adc
aaa
jbe
shlb
sub
jnp
pop
adc
add
enter
sub
adc
mov
add
fistps
sub
xor
das
mov
xor
push
mov
shr
dec
mul
movsl
jo
je
jle
or
dec
ja
sahf
cmpl
sub
fwait
jno
in
xchg
mov
cmp
or
into
lods
or
mov
fidivrs
out
mov
fld
divl
js
dec
mov
stc
faddl
cwtl
pop
lahf
insb
movl
push
iret
sti
push
push
cmpsb
inc
das
fdivl
lds
mov
std
loop
jge
popf
mov
cmpsb
mov
popf
test
dec
mov
enter
psubb
mov
imul
test
xchg
jp
movsb
bnd
jae
fmuls
leave
std
rolb
fisttpll
or
and
jb
mov
test
sbb
mov
pop
faddp
mov
mov
pop
cmpb
xchg
movsb
repnz
adc
dec
iret
jb
sub
sub
pop
jno
lret
pusha
adc
into
pop
xor
push
xor
ret
mov
sbb
outsl
dec
xchg
lea
pusha
add
xchg
cmp
dec
testl
inc
in
imul
jmp
xchg
adc
and
mov
ljmp
inc
mov
rcl
rclb
stos
cltd
cmp
mov
fstl
in
sbb
idivl
mov
xlat
xchg
inc
sub
std
sub
cmp
inc
sbb
sbb
sbb
push
mov
cltd
jae
je
nop
loopne
dec
pop
xchg
cltd
movsl
or
add
cwtl
gs
xchg
xchg
xchg
mov
sbb
inc
sahf
sbb
and
int3
xor
pop
mov
loope
add
push
nop
pop
cmp
dec
push
call
aaa
adc
test
dec
test
sbb
int
sbb
and
imul
outsb
rorb
mov
outsl
sbbb
jb
mov
or
iret
ds
out
and
cmp
adc
mov
cmpsb
lock
cmp
add
and
fstl
into
mov
add
xor
rcl
outsb
mov
aaa
imul
repz
xor
mov
cld
sub
and
mov
fdivr
or
dec
and
sub
pusha
xor
pop
lcall
and
fnsave
add
lods
sub
test
dec
xor
stos
hlt
xchg
sbb
filds
aam
repz
and
lahf
xchg
add
jecxz
in
adc
sbb
icebp
jnp
push
or
pop
jo
ljmp
pushf
scas
cwtl
imul
ja
mull
sar
jle
mov
scas
mov
dec
cmp
mov
push
jge
sub
or
dec
popa
xchg
jecxz
js
sub
inc
dec
add
cmp
into
add
movsl
adc
cmpb
adc
fadds
push
or
sbbb
lock
xchg
dec
sbb
or
ja
xchg
ja
push
rolb
mov
add
jae
or
ret
push
pop
xor
shrb
mov
sub
sbb
insl
add
sbbl
mov
sbb
xchg
add
jno
push
xchg
pop
sbb
mov
or
rcrl
fidivs
imul
rclb
stos
mov
pop
jle
jmp
mov
pusha
sar
shll
and
dec
rcl
mov
sub
js
rcrb
xor
out
adc
nop
add
mov
mov
cmp
xlat
sub
rol
jno
fcomps
call
aaa
inc
and
sti
push
jmp
xchg
push
cld
add
xchg
dec
mov
jo
dec
and
fmulp
leave
xlat
fidivrl
sbb
ret
bound
or
fdivl
scas
inc
adcl
push
loopne
xor
into
shl
or
in
testl
mov
xor
lret
sbb
or
adc
or
add
sarl
mov
inc
fimuls
xchg
adc
divl
sub
fdivp
xor
ret
jns
repnz
jp
out
pop
push
mov
push
clc
push
int3
mov
jnp
xchg
adc
dec
mov
push
xchg
movsl
sub
fimuls
clc
addl
daa
dec
mov
negl
inc
xchg
mov
jnp
sub
mov
or
fs
bound
mov
into
das
xor
xchg
mov
and
lock
in
add
pushf
push
sbb
arpl
jns
fsubr
test
push
add
jb
mov
xor
jg
ss
pop
inc
xlat
pop
aas
stos
jmp
jne
popf
xchg
flds
mov
pusha
ljmp
sub
incb
xlat
test
mov
cmc
adc
daa
adc
ret
cmpb
dec
stos
or
std
test
adc
cmp
dec
out
jne
sbb
negl
adc
xchg
movsb
xchg
nop
inc
and
addr16
sub
and
test
les
pop
addb
or
popf
and
loop
pop
shrb
jnp
dec
jb
cmp
xchg
gs
cmp
subl
xchg
sbb
xlat
mov
xor
cmp
mov
sbb
jo
icebp
xchg
push
pop
xor
cmp
or
mov
shlb
jg
mov
ljmp
call
insl
in
lods
xchg
fbstp
stc
mov
imul
or
sti
mov
inc
fldenv
push
jb
cmp
push
pop
lret
sbb
ljmp
or
add
fistpl
mov
push
mov
jge
sarl
mov
stos
mov
push
add
repz
push
pop
jae
adc
cwtl
mov
pusha
jbe
dec
adc
cmc
mov
sub
aas
stos
jae
dec
dec
jp
int3
cmc
or
fisttpl
or
jo
nop
loop
jp
and
sbb
loopne
loop
sbb
lods
ss
add
test
mov
into
dec
and
stos
out
and
push
icebp
or
fidivs
lcall
jns
mov
cmpsl
xor
cmp
in
loope
jle
nop
cmpsb
js
jno
clc
push
mov
xor
xchg
pop
leave
std
jecxz
loopne
loopne
iret
lods
dec
dec
pop
mov
call
mov
add
mov
and
out
pushf
cmc
mov
rcr
shrb
adc
mov
jge
mov
pop
into
mov
lods
out
in
ret
filds
scas
xchg
jl
dec
jge
addl
push
ljmp
jno
pop
pop
mov
sub
lods
add
loope
fcoml
jl
aas
fxam
jns
adc
jecxz
pushf
fs
sub
cmpsb
inc
jno
adc
cmp
jge
js
inc
sbb
xor
sbb
jnp
push
xchg
jge
jnp
js
outsb
test
lock
inc
hlt
scas
dec
out
cwtl
int
sbb
mov
push
out
out
cmp
daa
shll
mov
in
xchg
cs
test
push
push
pop
fdivrp
jp
pushf
test
mov
and
and
mov
lcall
adc
mov
fdivrp
mov
adc
dec
mov
pop
sub
aad
loop
adc
test
out
popl
nop
sbb
dec
adc
insb
cwtl
sub
cmc
mov
rorb
movsb
add
adc
and
test
add
enter
sub
or
rclb
sbb
mov
or
and
scas
add
or
pop
call
fld
sbb
cs
add
push
aaa
xor
scas
xor
adc
lcall
lods
outsl
ds
aam
cltd
into
xchg
inc
lcall
in
inc
out
adc
xchg
insb
shl
jecxz
das
lds
cmp
sub
adc
lea
jmp
out
mov
mov
mov
or
pop
fcompl
repnz
cmp
ljmp
jns
ret
add
incl
xor
dec
testb
dec
sub
jne
pop
dec
fisubrs
popf
add
add
jg
test
test
push
mov
popa
data16
lcall
fdivrs
push
jmp
push
lods
icebp
xor
enter
dec
ljmp
daa
pop
adc
mov
xchg
mov
int3
test
clc
push
scas
leave
push
ljmp
jno
in
in
test
xchg
pushw
mov
pushf
cltd
xchg
int
clc
adcl
std
je
mov
outsl
aas
xchg
rcr
mov
mov
cmp
inc
subb
xchg
roll
mov
ljmp
jecxz
cmp
std
pop
ja
in
and
dec
mov
sub
xchg
push
das
fs
ret
pop
sub
divl
std
sub
into
popf
xor
fidivl
iret
push
cmp
negl
shr
or
xor
test
xor
sub
iret
mov
enter
pop
cmpsl
es
sub
mov
xor
repnz
es
movsl
pop
test
call
in
sbb
test
pop
jg
test
ret
cmp
fdivrs
jbe
push
jmp
lods
xor
ds
dec
in
fsubr
icebp
mov
pop
and
add
aad
sub
sbb
mov
subl
lock
sbb
decb
inc
xor
jl
mov
mov
pusha
pop
push
lret
sub
mov
xor
fs
dec
xchg
pushf
ja
js
inc
das
jl
jno
int3
aad
fcomps
stc
cli
dec
je
loop
sub
imul
insb
aam
and
mov
jnp
or
icebp
dec
and
jnp
fisubrl
adc
jne
inc
pop
sarl
mov
pop
outsl
into
dec
mov
sub
sub
shl
rcrl
pop
addr16
sbb
mov
jbe
sub
int
sub
xchg
dec
push
das
cltd
jl
sub
dec
arpl
and
or
xchg
mov
add
fiadds
xchg
inc
adc
mov
inc
push
sub
dec
aam
mov
in
cmpsl
push
cli
mov
in
inc
inc
xor
cmp
cmp
inc
xor
in
and
mov
or
jae
mov
dec
std
jmp
andb
mov
sbb
je
or
into
jb
dec
mov
cmp
jns
mov
dec
sti
pop
cmpsl
inc
jmp
jae
and
outsl
arpl
dec
inc
xchg
addr16
adc
xlat
scas
imul
mov
xchg
fiadds
test
divb
pop
adc
pop
sahf
inc
dec
loope
pop
inc
cli
xor
jge
aas
jle
push
das
pop
leave
ss
in
jecxz
in
mov
imul
fdivl
aam
jmp
sbb
dec
sti
nop
cmp
xchg
out
scas
jl
add
les
fsubs
repnz
ss
std
test
int3
mov
cmp
lahf
xchg
mov
jbe
nop
pushf
jp
jo
test
inc
repnz
xor
add
out
push
inc
xor
mov
les
sbb
dec
xorl
adc
jle
push
cmp
jecxz
stc
adc
sub
fnstsw
imul
cmp
add
rcrl
js
inc
mov
stos
aad
jne
andb
xchg
ret
sub
adc
dec
movsb
shl
aas
pop
push
mov
push
mov
jecxz
pop
fdivrl
shrl
jg
fidivrs
rcrl
in
test
dec
mov
int3
test
ret
filds
adc
push
pop
cmpsl
mov
or
or
pushf
sub
pop
lcall
dec
add
movsl
das
mov
add
into
movsb
movsl
mov
jge
iret
xchg
addr16
pop
movsb
les
push
inc
pop
jns
push
popf
in
gs
xchg
sub
xchg
pop
cmp
outsb
xchg
aad
jl
sti
push
jo
sbb
rcrb
xchg
push
js
add
adc
inc
inc
xchg
push
loop
mov
and
mov
sub
inc
in
mulb
push
divb
cmp
dec
cmp
inc
scas
addb
xchg
das
icebp
mov
ja
xchg
test
stos
inc
add
test
data16
push
stc
inc
ret
add
mov
pop
push
cltd
sub
pop
lcall
idivl
shlb
movsb
inc
pop
inc
inc
arpl
sti
mov
pop
orl
push
pop
xor
xchg
jns
sarb
dec
mov
inc
iret
fildl
or
push
xor
pop
and
je
pop
incl
sbb
mov
icebp
inc
je
lods
dec
pop
imul
daa
enter
mov
push
push
inc
mov
push
sub
sub
aad
jmp
jecxz
ja
jnp
mov
xchg
insl
and
add
addb
sbb
cmp
popf
jmp
rclb
jecxz
and
nop
test
inc
add
mov
jmp
rcrb
sahf
adc
insl
out
xor
cmp
sub
iret
push
or
dec
in
sub
sbb
inc
int3
lahf
pop
xrelease
jns
les
sarb
shr
cmp
cmp
pushf
cmc
aas
aaa
mov
cmp
test
mov
addb
imul
lock
mov
mov
and
repnz
mov
cmp
mov
mov
js
jp
adc
pop
mov
andl
nop
ss
xor
cwtl
add
cmp
push
int
mov
cltd
adc
sbb
or
out
dec
jae
loope
ja
in
mov
sbb
cmp
mov
pop
lcall
in
clc
lea
shll
lea
dec
inc
das
or
cmp
pop
xor
sub
and
aas
or
sub
dec
xor
stos
push
sub
mov
jae
pop
lahf
inc
nop
aad
mov
fistpl
jo
ret
out
int
sub
pop
insl
push
pushf
stos
mov
xchg
mov
jmp
jns
outsl
enter
dec
clc
sahf
in
fcoms
nop
shrb
jbe
cmp
les
mov
push
jl
sbb
jmp
xor
sbbl
or
or
and
ffreep
cmp
cmpsl
nop
int
shrb
add
pop
nop
ja
push
inc
popf
popa
cmp
lea
dec
in
push
inc
cmpb
inc
fistl
mov
stos
push
out
imul
pop
sbb
pop
dec
lds
es
pop
lds
jae
enter
mull
push
stc
pushw
mov
pushf
mov
cmpsl
xor
jp
movsb
stos
aad
cmp
lods
shrl
movsl
mov
xchg
jp
test
orb
ficoml
or
xchg
call
out
inc
and
inc
out
lods
xchg
and
andb
mov
push
cmp
fstps
xchg
out
mov
mov
push
sub
or
cmp
lcall
inc
or
sbb
push
les
mov
lea
daa
xchg
or
and
pushf
xor
repnz
jne
cmp
or
lods
jle
fimuls
dec
pop
cmp
das
sub
xchg
sub
or
sub
adc
shrl
mov
mov
data16
sahf
lret
inc
sahf
sub
jmp
or
add
sbb
popa
fistps
or
enter
mov
add
mov
sub
lds
ja
jb
inc
push
lock
dec
push
imul
adcb
add
pop
popf
xchg
test
aas
loopne
outsb
data16
jle
into
xor
shlb
pop
mov
add
sub
xchg
out
add
idivb
sub
pop
add
dec
fdivp
xchg
push
ds
xchg
add
mov
xchg
test
jmp
out
mov
cli
jnp
mov
daa
or
inc
or
xor
push
cs
pusha
mov
lea
hlt
xchg
xor
xor
or
cmp
pop
cmp
or
hlt
pop
cmp
mov
leave
jl
mov
pop
and
pop
fadd
add
push
mov
ret
clc
push
xchg
roll
adc
aad
sub
sub
shrb
mov
cltd
pop
ljmp
pop
out
sub
popa
jmp
mov
loopne
sti
push
hlt
popa
subl
testb
inc
adc
jne
aad
lods
mov
lock
loope
mov
in
outsb
fistpl
rolb
stos
dec
fldt
add
xchg
push
sahf
loope
shll
xorb
stos
pop
sbb
ds
arpl
mov
sbb
iret
mov
or
jne
pop
outsb
stos
dec
cmpb
pop
lahf
pop
lcall
add
ret
jo
mov
fwait
in
xor
stc
add
inc
adcl
fidivl
jns
sub
mov
inc
add
xor
mov
push
cmpsb
cmp
mov
sarb
sub
cmp
sahf
lods
mov
adc
gs
in
push
mov
jmp
pop
into
gs
cmp
dec
in
or
outsb
mov
dec
jecxz
int
mov
mov
mov
adc
pop
int
gs
out
test
sub
jle
nop
fisubrs
jmp
scas
icebp
adc
or
popf
sub
cmpsl
jns
imul
push
pushl
daa
cmp
scas
aas
testb
push
jge
loope
cmp
cmp
scas
add
push
cmp
jmp
add
lret
leave
int
jo
push
scas
sub
leave
adc
mov
ds
lcall
adc
insl
jge
ret
data16
cmpl
add
test
push
outsb
cli
adc
xor
mov
enter
and
xor
mov
lock
push
test
xchg
jle
adcb
insl
nop
clc
xchg
mov
outsb
test
sbb
lcall
imul
out
xor
xor
mov
add
test
xor
mov
ljmp
jecxz
jns
dec
jl
jg
push
das
pushf
sbb
repnz
std
cltd
push
inc
aas
xchg
push
cmp
in
inc
test
dec
xchg
push
inc
jle
dec
push
insl
push
inc
jb
dec
jno
dec
xchg
jle
aam
cmp
jns
cs
out
cwtl
ja
test
jae
push
cmpsb
mov
jbe
xlat
adc
mov
mov
dec
pop
adc
add
rep
movsl
lods
jo
push
push
ljmp
inc
and
bound
out
cwtl
ret
les
cmp
mov
je
sti
aad
sahf
call
sbb
pop
xor
popf
pop
pushf
insb
push
cmp
or
xchg
jmp
add
cmp
mov
lret
popf
pop
lods
repnz
pop
push
and
inc
hlt
jmp
jae
aaa
push
xchg
fs
shrl
inc
xor
mov
cwtl
lahf
rorl
mov
fcompl
imul
out
inc
enter
aas
jmp
jmp
xchg
jmp
scas
dec
sbb
loop
mov
loope
adcl
cmp
jge
pop
mov
fst
jno
les
cli
sub
sahf
xchg
mov
xchg
adc
cmp
loopne
mov
xorb
pusha
imul
cld
mov
jae
ret
lock
sub
ljmp
xor
lods
fildl
aas
add
daa
enter
add
enter
icebp
and
or
mov
push
mov
outsb
shll
insb
adc
mov
jo
sahf
or
mov
dec
testb
jno
icebp
mov
cmp
movsb
mov
xor
es
xchg
insl
add
mov
mov
shr
inc
out
clc
sbb
or
mov
mov
sub
sbb
xchg
or
call
fldt
sbb
repz
fstpt
xor
std
cltd
je
inc
push
sahf
adc
mov
hlt
xor
test
adc
out
xchg
mov
in
repnz
sahf
mov
cmp
and
dec
mov
inc
shlb
test
adc
or
outsb
mov
loopne
movsb
and
push
push
jo
hlt
mov
out
divb
and
imul
pop
scas
xor
cmpsb
sti
clc
cmp
push
ret
aam
js
pop
pop
cmp
mov
subl
divb
pushl
or
and
sub
inc
imul
jns
mov
imul
les
cld
into
cmp
js
mov
jle
in
ss
inc
mov
jne
imul
jp
mov
mov
arpl
aad
adc
add
xor
arpl
jb
xchg
pop
scas
jno
xor
push
scas
bound
mov
mov
sub
pop
out
test
mov
and
mov
ss
jmp
aaa
jmp
inc
loopne
imul
inc
sti
jmp
adc
inc
call
hlt
mov
mov
insl
pop
or
or
mov
insb
mov
dec
sbb
mov
clc
xchg
sub
xor
out
adc
mov
jge
mov
mov
shll
pop
xor
xchg
adc
arpl
fcoms
dec
int
and
imul
popa
fadd
adc
add
and
ss
pminub
jns
imul
xchg
fcmovbe
aas
mov
jb
mov
nop
sbb
dec
fcomps
shl
sbb
mov
mov
bndstx
daa
jo
orps
mov
adc
stos
insb
mov
sbb
pop
mov
jbe
shrl
fnstcw
mov
mov
inc
pop
mov
or
outsb
in
aas
pop
sub
insl
loope
fisubrs
adc
out
mov
jnp
push
push
scas
inc
xchg
xchg
dec
xor
xor
sbb
fcmove
repnz
or
pop
movsb
adc
xchg
xor
mov
push
jmp
out
xchg
mov
in
imul
stos
mov
arpl
xchg
es
stos
jae
pop
movsb
fstpt
sub
cmp
push
dec
es
add
test
xor
sub
push
aas
sbb
rcrl
pop
test
fs
imul
xor
test
std
lret
in
mov
stos
jne
push
aad
into
stos
stc
nop
fstpl
mov
jmp
cltd
sahf
jno
pop
mov
xor
ds
fcmovb
pusha
lret
xorb
shll
mov
scas
test
jbe
pop
hlt
pop
stos
scas
jle
repz
loope
cld
out
gs
jp
push
addl
jae
scas
mov
jg
das
inc
or
mov
xchg
idivb
or
scas
mov
mov
sbb
jb
pop
xchg
sti
fildl
add
sub
ds
xchg
rorl
rorl
pop
out
push
andb
jb
push
push
add
push
jb
je
lods
scas
shl
fisttps
pushf
sub
inc
movsl
test
arpl
mov
add
js
or
ficompl
xchg
sub
test
dec
call
jbe
jo
xor
or
popl
add
sbb
push
xchg
sbb
mov
sbb
mov
repnz
xor
je
adc
add
pop
xchg
scas
scas
call
in
sahf
push
sub
in
cwtl
cwtl
mov
out
scas
fdivl
fcmove
jne
cs
xchg
mov
aad
jecxz
or
pusha
stos
mov
ss
xchg
shll
and
add
insl
push
jo
cmp
mov
pushf
add
ss
movsb
test
jp
dec
insb
sbb
sbb
aad
pop
sti
pop
aam
mov
and
leave
jmp
mov
je
add
pop
jl
xorb
cmp
cmc
daa
imul
testl
cli
shl
sub
mov
loopne
add
fs
xlat
popf
xor
mov
xor
sub
sub
out
testl
inc
aam
sti
in
push
aad
jns
cmpsb
pop
jl
push
mov
mov
xchg
pop
testb
ljmp
mov
fs
cmpsb
xchg
sti
mov
xor
bound
mov
or
ret
inc
sub
push
icebp
inc
sbb
scas
jg
fadd
notl
leave
add
scas
xchg
or
xlat
add
dec
cmpl
push
gs
add
and
fildl
addb
lahf
sahf
jmp
sarb
pop
repnz
and
std
loope
in
push
sahf
xchg
ret
jns
inc
fcomps
rcrb
repnz
int
pusha
insl
sahf
mov
push
cmp
insl
ja
pop
pop
imul
xchg
and
sub
sbb
xchg
or
mov
fadds
leave
out
cli
shl
add
cmp
push
sahf
jo
and
adc
int
mov
jnp
mov
jbe
inc
pop
lahf
sub
mov
cld
xchg
push
popa
cli
pop
inc
sub
xor
and
sbb
insl
push
adc
iret
les
ret
mov
adc
jo
pusha
lret
jno
push
data16
out
mov
jae
cmc
ss
xor
and
mov
hlt
test
je
xchg
push
cmpsb
fiadds
iret
jo
je
inc
out
push
xchg
lret
push
or
movsb
add
lds
fbstp
push
test
add
sti
pop
ret
push
sbb
repz
xchg
repnz
sub
decl
jae
pusha
pop
xor
mov
jbe
cmp
pop
xor
mov
push
lock
sti
cli
pop
aas
jecxz
push
mov
rclb
push
xchg
and
mov
nop
lret
xchg
push
inc
lcall
sbb
daa
arpl
inc
inc
inc
mov
or
aam
call
pop
sahf
cltd
out
mov
sbb
mov
push
in
fucomip
lods
test
jp
push
mov
test
push
jb
fmuls
sbb
pusha
in
add
fwait
ss
and
inc
fstps
adc
mov
add
lds
jl
out
xchg
inc
push
jns
sbbb
jle
fcmovnbe
pop
in
jmp
or
lds
std
jp
mov
adc
sub
clc
adc
sub
add
dec
gs
in
inc
frstor
cmpsl
cltd
roll
pusha
xor
aad
inc
cmpsl
lds
rol
xor
std
mov
ret
outsb
pop
ljmp
aas
xchg
stos
mov
pop
icebp
pop
aad
dec
xchg
xchg
subl
in
push
pop
fidivrl
out
jae
lods
add
sbb
dec
xchg
stos
gs
inc
ss
shrl
inc
pushf
repnz
jne
cwtl
pop
mov
data16
rol
inc
add
stos
mov
add
push
mov
pushf
fldl2t
aam
ds
out
in
cli
sub
cmp
and
xlat
add
cmp
das
mov
scas
mov
sahf
pop
ja
inc
fmull
pop
mov
imul
out
int3
out
popl
mov
sub
adc
or
adc
bound
jmp
mov
mull
imul
sahf
push
out
push
jg
jns
cld
outsb
mov
frstor
nop
jp
addr16
mov
fprem1
mov
movsl
adc
jp
movsl
push
ret
cli
sub
outsl
push
out
inc
fstl
insb
or
imul
loop
or
outsl
fucomi
cltd
mov
dec
adc
stc
cmp
xchg
mov
iret
pop
inc
sbb
sub
enter
shrb
mov
jg
dec
and
inc
inc
int
mulb
ljmp
mov
jl
mov
push
adc
sub
stc
jne
std
xchg
mov
sbb
pop
orb
jle
rcll
pop
lods
cld
pop
mov
loopne
push
xchg
add
sbb
pop
movsb
mov
lret
push
cmpsl
mov
sub
data16
adc
clc
push
pop
mov
test
xor
pop
int
mov
out
add
and
ss
inc
aam
sarb
cmc
int
out
mov
clc
pop
xchg
ret
fidivl
fs
dec
in
in
sarl
jno
ja
call
inc
mov
push
jmp
popf
cld
jmp
pop
rclb
xchg
js
dec
rep
aas
xchg
repz
add
and
cltd
je
rcl
adc
sbb
jmp
mov
xlat
cmpsb
mov
push
dec
jbe
call
in
mov
cmpsb
fwait
cmpsl
mov
jns
dec
xor
pop
jle
fs
int3
lahf
add
and
xchg
leave
push
sbb
ret
negl
loopne
add
imulb
cmpsl
rcl
ffreep
out
ds
outsl
leave
adc
pop
cmp
mov
test
xlat
jb
dec
mov
stc
in
sarb
ss
fisttpl
das
addr16
js
dec
lahf
fs
sub
iret
sub
daa
mov
xor
hlt
movsl
es
fwait
int3
inc
push
xor
push
out
xchg
cmpxchg
jmp
dec
push
pop
adc
in
lret
lea
stc
sbb
sub
sub
gs
cmpsb
add
mov
inc
and
pop
inc
adc
mov
push
rcrb
pop
cmp
adc
inc
sbb
xor
lret
movsl
icebp
aaa
ja
out
xchg
xchg
addb
lock
push
xchg
ss
jb
jge
popf
loopne
iret
sbb
xchg
mov
push
or
jp
add
inc
push
jbe
mov
in
rol
enter
inc
in
stos
inc
mov
leave
int
push
jno
dec
fwait
inc
mov
shl
jnp
aaa
pop
mov
fs
mov
or
int
mov
sbb
adc
jecxz
jo
aam
add
dec
jl
test
lods
pop
in
push
push
mov
xchg
js
decl
gs
push
xchg
cmp
push
bound
pop
lret
or
cmpsl
dec
ljmp
into
bound
aad
sub
pop
out
adc
rorl
dec
loop
xchg
sbb
cmp
sbb
test
jp
pop
xchg
and
push
xor
dec
shll
fisttpl
arpl
pop
and
daa
jmp
or
pushf
jbe
add
out
xchg
inc
dec
fistps
scas
mov
mov
aad
data16
pop
insb
call
or
xchg
jne
aaa
add
outsl
adc
imul
mov
xchg
add
movsl
inc
sti
jecxz
cmp
cld
add
sahf
push
cmp
dec
pusha
daa
lcall
in
gs
inc
jne
add
outsb
test
loop
sbb
test
push
xchg
adc
xor
add
out
inc
jge
loop
mov
bound
add
jb
sahf
add
inc
inc
or
or
adc
insb
push
pushf
mov
jmp
enter
int3
dec
loopne
lahf
sbb
and
push
adc
mov
jg
cs
fcmovu
sbb
cmp
mov
les
inc
jnp
jns
and
fwait
arpl
mov
shrb
addl
inc
ds
xor
loopne
mov
js
inc
xlat
pushf
cmp
inc
pop
ret
pushf
sub
int3
dec
and
fisubl
pop
xchg
sti
cmp
and
notb
jge
pop
cmp
movsb
dec
dec
ss
rcrb
dec
shl
sub
out
cmpb
inc
lods
mov
fbld
js
leave
or
or
scas
data16
mov
sahf
outsb
push
xor
jge
or
and
call
movsb
dec
sbb
jl
je
ja
clc
stos
dec
mov
into
into
pop
fisttpl
out
test
jl
adc
cmpsb
add
aad
ss
xchg
push
sahf
cmc
enter
or
or
test
divb
jp
dec
lods
or
xchg
jp
das
add
mov
mov
jecxz
das
gs
rolb
dec
pusha
insl
aam
sbb
idivl
pop
popa
dec
iret
sti
push
sub
test
jno
and
divl
jp
aaa
and
test
dec
js
mov
sbb
add
cld
jmp
cmpsb
int
xlat
lret
andb
pop
pop
mov
bound
pusha
push
sub
xor
ret
pop
sbb
je
jnp
jne
call
ja
or
inc
ret
insb
and
inc
test
xor
inc
xchg
insb
pushf
clc
and
cs
xor
add
or
adc
add
mov
es
hlt
lret
fidivrs
pop
pop
scas
bound
cwtl
sti
in
adc
mov
jae
and
mov
and
xlat
pop
loopne
add
mov
fstpl
sub
scas
insl
jae
mov
in
xchg
inc
inc
mov
sub
xchg
cmp
inc
inc
repnz
arpl
int3
arpl
xor
mov
sub
inc
dec
push
and
and
test
xor
mov
lahf
cltd
fwait
dec
push
push
lret
es
inc
pop
outsb
mov
shrl
add
xchg
jl
ficomps
jl
jae
pop
or
out
push
or
and
popf
sub
lods
mov
fs
call
fisttps
mov
leave
mov
push
push
fs
jge
stc
mov
lcall
xor
ret
pop
push
cmpsb
dec
jle
dec
popf
sbbl
mov
repnz
stc
js
jae
inc
fldt
pop
mov
pop
push
xchg
loop
add
push
mov
inc
mov
outsb
dec
push
or
test
lods
jo
mov
je
mov
aaa
push
sbb
insb
pushf
push
lds
notb
add
push
pop
xchg
scas
dec
inc
dec
shr
and
imul
pushf
popa
mov
add
cmpsb
out
loopne
int
xor
mov
adc
out
push
mov
inc
inc
inc
clc
bnd
and
jns
jo
adc
gs
fwait
lods
jns
adc
xor
pop
insb
inc
mov
mov
rorl
cmp
aad
rcr
pop
test
mov
sub
xlat
xlat
sub
jmp
sti
jbe
or
mov
loope
test
mov
lods
test
and
mov
jle
xchg
mov
jb
mov
out
aad
das
add
out
divb
lods
sbb
and
mov
push
mov
mov
cmpsb
cmp
fnstenv
jg
and
push
test
ja
and
sub
sbbl
cmpb
gs
xchg
ss
daa
mov
xlat
pop
sbb
nop
mov
dec
mov
jl
imul
adc
mov
xchg
je
adc
fisttpl
rclb
push
pusha
push
mov
daa
xlat
xor
test
jmp
cmp
lea
mov
iret
jns
cs
mov
fs
cli
add
filds
lret
mov
jb
xor
mov
xchg
iret
mov
test
jg
ret
clc
or
fisttpll
stc
adc
push
lock
cld
xchg
push
aaa
shl
lds
or
pop
mov
loop
xchg
movsl
push
iret
ret
jle
addr16
mov
into
sbb
es
cwtl
rcr
jbe
das
stos
and
ret
adc
insl
js
iret
push
dec
sbb
int
or
mov
xchg
pop
cmp
mov
movsb
mov
xor
mov
mov
pop
sbb
cs
stos
cli
shr
cmp
pop
test
xor
stos
cmp
rorl
push
sub
mov
jp
outsl
adc
mov
es
and
pop
pop
xchg
imul
mul
add
clc
push
int
lret
sub
enter
lcall
test
mov
inc
xor
pop
repz
push
mov
hlt
add
test
or
stos
mov
pop
js
scas
mov
popf
mov
iret
mov
shl
leave
repnz
out
and
idivl
sbb
sub
ljmp
mov
test
jnp
lret
push
fcomps
shl
xchg
push
add
ss
fscale
or
cmp
insl
inc
adc
add
xor
icebp
mov
in
ss
fstps
lock
enter
int3
sbb
mov
cmp
mov
arpl
test
arpl
and
fnstsw
cld
mov
pop
cli
out
ret
pop
and
out
je
jle
test
cmp
imul
ret
dec
in
or
xchg
sub
mov
les
sbb
clc
clc
add
jbe
jg
enter
mov
dec
loop
incl
push
lret
adc
cli
fimuls
mov
imul
insl
or
and
dec
jns
dec
pushf
enter
inc
and
cld
jns
jbe
or
mov
mov
loopne
jle
inc
mov
fwait
rclb
hlt
test
ror
pop
hlt
mov
sub
xchg
lahf
in
or
sub
mov
sbb
adc
xor
mov
bound
xchg
and
out
xchg
xor
sbb
enter
mov
mov
adc
add
xor
lahf
ss
jecxz
loope
popf
cmp
pop
xchg
pop
rcll
movsb
jne
mov
mov
iret
sbb
ss
arpl
adc
pop
push
push
sbb
or
xchg
insb
xor
mov
leave
sub
cld
pop
ljmp
mov
and
and
stos
gs
fcmovnu
notl
cli
mov
xchg
ficoms
cli
adc
push
adc
ds
repz
imul
push
es
jns
fbstp
cmpsl
jbe
add
std
jo
scas
test
push
pop
jl
dec
cli
mov
inc
sbb
insl
jg
xor
dec
loop
adc
add
push
pop
shl
jle
jnp
aam
jnp
push
lds
pop
addr16
je
cmpsl
cmp
xchg
adc
xlat
fidivl
addr16
cwtl
je
addl
xchg
pop
mov
shll
loope
rcrb
xchg
imul
adc
and
ret
xchg
imul
xchg
pop
cmpsb
mov
pop
addl
int3
pop
pop
mov
call
testl
wrmsr
pop
mov
inc
into
push
icebp
in
sbb
test
jb
add
cmp
outsl
icebp
movsl
cld
cmpsb
nop
jge
mov
dec
push
xlat
jb
call
inc
dec
push
adc
int3
mov
scas
cmp
mov
pop
aam
fidivs
lea
js
pop
out
adc
pop
je
jmp
mov
mov
cltd
out
mov
je
orl
fbld
dec
sbb
mov
mov
adc
int
popa
or
sbb
push
jmp
mov
jb
out
dec
mov
inc
rcr
mov
jg
dec
test
jns
outsb
add
test
adc
pusha
dec
cmc
sbb
xchg
inc
push
je
fidivs
imul
imul
inc
cmp
mov
in
das
int
push
call
lea
cmp
movsw
mov
scas
mov
rorl
jmp
mov
jp
and
bound
mov
mov
and
fdiv
mov
push
adc
iret
pushf
jle
ret
jl
sub
in
jae
jecxz
jno
inc
push
and
xchg
dec
sti
rolb
lods
cld
sub
les
in
popa
mov
add
push
mov
mov
cmp
sub
repnz
sbb
add
repz
std
jp
sbb
sbb
inc
stos
jg
lea
cwtl
das
shl
insb
out
cmp
lds
ljmp
pop
or
mov
sub
sbb
shlb
fdivrs
inc
mov
js
aad
ficoms
add
cwtl
mov
lods
push
int3
leave
jae
jnp
jmp
les
sti
test
sahf
xchg
movsb
jg
jmp
and
mov
adc
jne
stc
ret
sbb
add
mov
pop
mov
aas
in
sti
mov
add
adc
lea
test
mov
fdivrs
jno
sbb
xchg
jl
test
lods
orb
lcall
ljmp
pop
cmp
les
cli
lcall
dec
mov
mov
popa
clc
and
xchg
jge
lds
mov
lods
cmp
jle
dec
mov
stc
popa
stos
out
mov
mov
lea
add
inc
sub
js
pusha
ljmp
out
cwtl
das
loopne
push
movsb
int3
cwtl
or
lods
mov
xchg
sti
nop
adc
in
add
pop
lock
add
dec
repnz
notl
ljmp
shll
jno
mov
test
mov
dec
imul
push
pop
call
jmp
out
hlt
pop
push
mov
jne
inc
arpl
ja
subl
clc
inc
add
scas
fwait
or
and
push
mov
lods
or
ja
call
sahf
jbe
lret
stos
sbb
sahf
adc
adc
daa
mov
pop
pop
jo
adc
int
testl
mov
js
inc
and
pop
stos
ret
and
add
leave
insb
mov
push
aam
dec
mov
addr16
mov
shrb
imul
in
add
stos
jns
and
loop
or
into
inc
iret
jnp
add
pushf
xchg
out
cmpsl
sbb
insl
mov
mov
cmp
loop
mov
jbe
sbb
dec
hlt
jge
loope
push
in
fiaddl
addb
out
cld
cmp
shrb
rol
sahf
inc
faddp
mov
mov
pop
and
cltd
and
leave
and
pushf
pop
dec
out
nop
jl
mov
icebp
icebp
adc
pop
lcall
or
mov
mov
cmpsl
add
mov
stos
and
mov
enter
test
test
jo
inc
mov
sub
ret
mov
push
into
cmp
jecxz
jmp
dec
add
push
fwait
push
xchg
int3
lret
jmp
in
data16
roll
xor
sbb
insl
dec
faddp
or
stos
xor
pop
cmp
fwait
cs
out
mov
push
jne
mov
mov
leave
or
addl
je
outsl
mov
sbb
jl
jbe
dec
jne
dec
out
push
aaa
lret
jo
lock
mov
or
fdivrs
cmp
mov
ret
fsubr
out
divb
fadds
ficompl
jle
sti
es
and
xchg
mov
mov
stc
out
push
mov
sahf
cmpsb
ret
inc
pop
stc
cmp
sub
fdivl
orb
lahf
leave
pop
daa
repz
xor
pop
mov
mov
fimuls
lds
out
xor
mov
push
or
add
sbb
pop
push
insb
daa
data16
mov
mov
popf
or
jno
scas
sbbl
ret
repnz
sbb
adc
pop
push
add
xchg
or
out
mov
mov
scas
jnp
adc
fisubl
lea
and
jmp
ret
icebp
lret
cmp
mov
loope
pusha
jmp
xchg
sahf
fmuls
jno
push
sub
aad
sbb
mov
daa
int
cli
inc
fs
cmpl
adc
mov
jmp
and
cmp
xor
fsubrp
and
addb
jns
sub
mov
sti
inc
movsb
mov
mov
pushf
rcll
pop
cwtl
pop
and
sub
pop
mov
inc
or
mov
push
pop
lret
mov
fidivs
es
xlat
ds
les
in
xlat
pop
ljmp
push
pop
int3
mov
ret
jnp
dec
xchg
cmp
aam
inc
pushf
in
inc
popa
movsl
imul
mov
in
push
mov
test
mov
or
mov
mov
adc
push
push
int
pop
subb
dec
loope
outsl
jns
add
sbb
sbb
imul
pusha
pushf
jo
jl
mov
popa
jg
add
sub
push
popf
in
aad
xor
test
mov
xor
inc
fldcw
scas
push
insb
pusha
pusha
notl
dec
dec
dec
ret
adc
or
imul
push
aad
xor
jecxz
mulps
js
scas
cld
dec
ja
push
sarl
popa
loopne
mov
js
insb
sarl
add
and
movsl
fidivrs
scas
sub
pop
sbb
mov
fbld
lock
jp
movsl
outsb
lods
mov
jle
mov
xor
add
out
shl
and
adc
das
push
sbb
insl
adc
rolb
cltd
outsl
dec
jmp
lahf
inc
pop
lods
les
inc
dec
fbstp
xchg
sahf
add
es
insl
mov
stc
mov
add
out
sbb
push
movq
aas
push
clc
xchg
add
es
pop
fildll
add
xchg
push
mov
out
xchg
cltd
flds
lret
orl
push
outsb
test
mov
cld
or
imul
xor
or
into
fnsave
aad
mov
mov
rolb
enter
icebp
mov
aam
xchg
and
jae
inc
sbb
push
push
incb
ret
gs
mov
das
and
add
in
push
leave
add
outsb
aaa
xchg
scas
pop
scas
cmp
loopne
mov
in
push
pop
xor
imul
lods
icebp
mov
cmp
call
jo
mov
mov
xor
bound
mov
dec
lock
jmp
inc
lds
sbbl
in
and
inc
and
rclb
mov
mov
lock
mov
jge
loope
sub
dec
test
movsl
jecxz
enter
sub
jge
in
ds
mov
sahf
sub
and
rcrl
pop
fxch
rorb
dec
fcomps
inc
dec
xor
ja
enter
mov
imul
adc
adc
add
idivb
pop
inc
lret
cld
pop
cmpsl
cmp
xor
lds
int
aam
dec
push
insl
enter
inc
fnstsw
in
jp
inc
pop
push
pop
xchg
iret
sbb
jae
stc
loopne
je
add
mov
out
cmc
dec
add
mov
shl
int3
sbb
cmp
dec
mov
pushf
mov
repnz
jo
or
mov
lds
add
cmp
adc
gs
lock
pop
outsw
mov
stos
and
fwait
xor
xchg
inc
scas
cmc
xchg
mov
mov
adc
inc
imul
pop
jp
sub
xchg
repnz
inc
aam
mov
bound
mov
pop
ret
pop
cmc
outsl
fbld
shl
mov
rcl
shlb
mov
sbb
jno,pt
mov
xlat
cmpsl
sahf
imul
push
int
fnstcw
adcb
imul
and
andl
push
aam
jnp
adc
insl
loopne
add
insl
push
mov
mov
add
lcall
and
popa
idivl
push
sbb
dec
sub
pop
daa
stos
jp
mov
push
lahf
stos
lcall
mov
adc
mov
test
dec
andb
xchg
xlat
xchg
mov
lret
xchg
push
cmpsl
xchg
sbb
mov
aad
divl
pop
imul
in
inc
sahf
nop
cmpsl
lret
rolb
test
mov
add
iret
push
sbb
and
ds
dec
rcrl
int3
or
fucomp
inc
xchg
rorl
mov
aam
push
int
test
push
les
pop
mov
call
adc
sahf
andl
sub
popf
out
fnstenv
sarl
repnz
les
fcomip
fsubl
mov
xchg
sbb
testb
mov
popa
movsb
cmp
aaa
inc
lret
stc
pop
push
rcll
negl
xor
pop
mov
imul
add
movsb
xchg
mov
je
cltd
xor
loop
outsl
daa
cli
adc
and
pop
ljmp
mov
mov
adc
pop
cwtl
pop
push
push
dec
ss
xorl
call
inc
sbb
inc
into
push
int3
cld
push
clc
xchg
or
cmpsl
push
xlat
xchg
sbb
loope
loope
jle
aam
mov
imul
fwait
mov
push
out
adc
enter
test
adc
ret
mov
mov
popl
roll
pop
imul
pop
call
fs
je
aam
popa
xor
dec
inc
cmpsl
dec
mov
dec
fbld
jmp
popf
pop
out
aaa
mov
sub
fs
xchg
dec
jnp
jns
stos
xchg
imul
pop
xor
testl
test
nop
insl
shl
jnp
mov
loopne
lock
inc
adc
les
push
daa
mov
mov
and
shrb
ror
insl
es
push
arpl
insl
jmp
dec
popf
scas
xor
push
or
fsubrl
pop
cs
mov
int
mov
mov
mov
mov
mov
std
mov
or
movsb
mov
out
mov
loop
call
int3
sub
and
jp
cwtl
insb
push
inc
xchg
inc
mov
jmp
je
mov
popa
lea
cmc
and
mov
jl
mov
push
mov
mov
popf
xchg
sub
pop
mov
inc
popf
hlt
das
or
int
gs
dec
mov
ud1
and
outsb
jl
jg
data16
inc
fcmovbe
lods
out
loopne
loopne
mov
jno
lea
pop
sbb
sbb
sub
fldenv
mov
and
mov
sub
pop
adc
inc
push
xor
stos
into
gs
testl
lea
popf
or
and
fwait
lahf
imul
outsb
fsubl
int
mov
mov
pop
pop
sub
mov
in
je
add
jmp
fwait
mov
or
cmc
int3
stos
sub
jnp
ret
aas
or
mov
add
pop
outsb
mov
arpl
les
adc
xchg
sub
mov
aam
pop
xchg
xor
jno
data16
stos
mov
ja
dec
aad
ja
aad
dec
cmp
imul
clc
cld
sub
xor
shrb
cmp
dec
nop
fsubrs
dec
jl
sub
and
shlb
call
mov
bnd
loope
fdivrs
push
pop
sub
xchg
or
push
mov
out
push
push
lahf
loop
incl
call
cltd
adc
subb
xchg
xor
and
rcll
lds
sbb
xor
xchg
push
pop
mov
lahf
xchg
sbb
push
outsb
mov
push
inc
nop
out
xor
loopne
dec
push
lret
mov
inc
and
xchg
lea
cld
pop
xchg
inc
xchg
mov
mov
push
inc
stos
mov
shll
xchg
pop
push
xchg
rol
popf
jbe
push
mov
ret
xchg
out
mov
ret
fcompl
lret
mov
push
fidivrs
loop
mov
arpl
sub
repz
gs
in
xchg
sub
cmp
cmp
pop
out
dec
sahf
jnp
movsb
mov
sub
pop
or
cmp
cmp
push
fdivrs
icebp
xor
insl
add
add
shll
mov
push
mov
adc
int
aam
out
cli
int
adc
ret
push
sbb
jae
mov
popa
cmp
xchg
mov
les
cmc
das
dec
add
test
ja
out
mov
mov
mov
dec
push
pop
ljmp
push
in
push
cmp
scas
icebp
jae
mov
and
push
push
loop
out
and
xchg
fildl
mov
in
aaa
push
push
jmp
add
sti
jbe
popf
jle
std
scas
fnstenv
jns
shl
fldenv
xchg
sub
and
ljmp
enter
les
mov
loop
pop
iret
fwait
push
mov
cli
cmp
mov
sub
add
imulb
iret
das
icebp
jne
fwait
sbb
and
sahf
sti
mov
shrl
pop
out
dec
add
and
ja
scas
test
jnp
les
in
pop
adc
inc
enter
test
pop
push
loopne
jne
cmp
loopne
and
push
mov
jge
push
sarl
insb
aam
movsb
or
rolb
push
mov
inc
lods
cwtl
das
ljmp
inc
dec
fsubs
in
sub
incb
mov
inc
arpl
lahf
mov
mov
ret
pop
fiadds
jb
xor
xor
inc
push
xor
pop
jb
daa
push
scas
fnsave
aam
adc
sbb
pop
cli
lcall
dec
outsl
pusha
nop
jl
ret
jl
pop
in
mov
jp
fstps
and
lods
popl
arpl
std
lret
pop
lahf
insl
xor
mov
movsl
jp
xor
jg
push
pandn
dec
fistpll
movsb
xchg
loop
repnz
and
push
push
lock
fldl
lret
out
shrl
cwtl
in
lret
mov
pop
aam
sbb
fstpt
sub
push
xchg
jmp
scas
stc
sub
rcrl
rep
jnp
and
outsl
fadds
mov
into
push
pushf
inc
movsb
sub
jg
xor
cmp
cmp
cli
popa
cmpsb
pop
adc
or
jnp
dec
cmpsl
inc
mov
sub
das
xchg
xchg
jl
inc
mov
sbb
push
lds
in
int
jle
jmp
popf
mov
push
out
xchg
cld
rcll
outsb
loope
cld
or
push
or
push
xchg
xchg
push
or
push
xchg
jle
je
test
std
loope
xor
ja
pop
stos
in
cmp
dec
and
inc
and
xchg
xchg
sub
push
sub
jb
out
push
jae
mov
dec
mov
ljmp
cmp
stos
mov
adc
test
movsl
cmp
hlt
addr16
ret
mov
in
pushf
xlat
aas
xor
repnz
es
out
and
fidivl
addr16
int3
mov
mov
icebp
pop
xchg
jmp
jle
jle
jg
outsl
rolb
inc
pop
test
in
lret
out
jl
mov
lods
out
out
int
mov
pop
adc
jb
xchg
add
movsl
cmp
push
sbb
xchg
jmp
ficoms
aaa
mov
or
mov
jnp
cmp
int3
or
fidivrs
cmp
push
lods
leave
dec
sub
sbb
call
aad
or
cld
sub
loopne
push
pushf
divl
jle
in
cmp
jp
mov
and
add
addr16
adcb
jne
mov
push
pusha
and
stc
cmp
flds
add
xlat
aad
pop
xchg
jg
add
or
xchg
jo
dec
cmp
xchg
scas
outsl
pop
out
sbb
mov
test
popa
repz
xchg
arpl
inc
jb
scas
adc
inc
fwait
pop
loopne
es
add
dec
xlat
outsl
push
or
pop
mov
pop
sbb
mov
aaa
mov
into
sbb
jb
mov
add
sub
lret
dec
add
mov
mov
and
rorb
repz
or
sbb
icebp
xchg
outsb
aam
mov
loopne
dec
push
lea
imul
sbb
cwtl
shrl
pop
inc
mov
out
iret
les
loope
jbe
stc
dec
fisubrl
dec
fnstenv
iret
and
inc
faddp
pop
and
and
sbbl
dec
sub
arpl
jle
test
testb
mov
sahf
add
lcall
sub
pop
test
enter
xlat
sub
jl
dec
cmp
call
mov
jecxz
pop
mov
inc
sub
std
xlat
int
jg
jl
int
jnp
xor
push
inc
in
cmp
les
mov
or
push
mov
sub
mov
pop
test
jne
and
test
mov
jl
mov
and
sbb
test
cld
loopne
add
xor
sub
lds
jle
adc
scas
popf
fldcw
rol
pop
add
in
imul
leave
jno
cmpsb
les
cmp
jmp
outsl
sbb
cmp
dec
add
inc
cmc
jo
lock
repnz
ja,pt
mov
mov
loope
mov
iret
mov
push
sbb
sahf
add
test
xor
movsl
or
push
xchg
add
add
nop
xor
push
sub
les
sbb
fisttpll
xor
daa
xor
sub
ljmp
push
mov
mov
lds
sbb
jnp
test
dec
adc
xor
gs
and
xor
or
and
sahf
lods
iret
cs
cmc
and
repz
rol
enter
and
and
sub
push
decb
add
push
hlt
mov
loopne
sbb
cmpsb
std
addr16
jmp
lds
jns
pop
sub
test
dec
hlt
sub
jo
or
xor
insl
add
or
std
xor
push
add
adc
fs
mov
insb
shll
mov
out
test
mov
sbb
xor
dec
push
call
sub
nop
repnz
mov
idivl
inc
test
lock
xchg
push
mulb
cmc
ss
dec
mov
push
sub
xchg
sub
in
or
gs
or
mov
mov
dec
rclb
test
dec
jmp
clc
arpl
jnp
enter
mov
fs
sub
dec
sbb
sub
mov
cwtl
cmc
fstl
sub
aaa
push
xor
push
arpl
inc
fsubl
rcrb
stos
or
or
pop
je
mov
jecxz
inc
sar
je
add
push
and
xor
jae
subb
popf
test
ss
arpl
into
mov
data16
outsb
push
outsl
push
mov
pop
mov
in
jno
hlt
mov
loopne
into
or
add
jnp
mov
rorb
cmp
and
cltd
dec
sbb
dec
out
aas
jge
pop
cmc
push
rcr
iret
fistl
fsubs
ljmp
jmp
jge
add
cmp
sub
adc
add
pop
mov
call
xor
fnsave
pop
xor
data16
mov
xor
out
push
repz
mov
and
dec
cmp
jno
shll
enter
mov
push
sbb
cltd
xor
cmp
out
mov
mov
jbe
mov
xchg
sub
imul
sahf
jo
mov
je
scas
mov
popa
outsb
push
mov
xor
loope
pusha
lret
push
jmp
pop
sahf
repz
cli
fildll
int
mov
push
lea
arpl
dec
mov
xchg
dec
arpl
test
call
mov
inc
fdivs
push
fxch
dec
jmp
xor
lea
outsb
jno
or
dec
xorl
push
mov
push
jno
push
jbe
test
add
and
jae
lahf
sub
jge
xor
test
xor
faddp
movsl
mov
stc
cmpb
mov
push
push
xchg
add
push
cld
aad
inc
movsb
and
push
xchg
inc
cmp
ffree
adc
into
mov
pop
cmp
mov
shr
xor
sbb
mov
leave
dec
and
je
in
aam
lods
mov
or
inc
mov
js
mov
xor
push
mov
xlat
outsb
popa
add
movsl
or
or
je
andl
mov
out
pusha
leave
les
adc
mov
les
bound
out
jno
mov
cmp
pop
cmp
jo
fmul
xor
and
shl
adc
add
adc
das
es
push
insl
fisttpll
aas
cmp
jno
sahf
flds
stos
clc
lret
fildll
sahf
or
out
adc
pop
and
cmp
xorb
scas
loop
shrl
mov
xor
jno
fdivl
xchg
jge
inc
add
push
push
and
adc
and
je
sbb
or
dec
cmp
adc
lods
adc
icebp
bound
call
aaa
dec
and
inc
mov
divb
jns
sbb
loop
mov
insl
cwtl
pop
sub
mov
add
enter
jmp
pop
repz
push
and
pop
xor
sub
or
sbb
scas
dec
dec
lds
xchg
dec
fistps
outsb
sarb
push
es
movsl
popa
mov
idivl
gs
inc
pop
jns
jae
jg
popf
inc
fnsave
or
outsb
jo
jne
mov
inc
push
sbb
es
jae
dec
movsl
movsl
inc
sbb
dec
movl
ret
ds
or
adc
cld
sbb
rorb
js
jle
inc
cwtl
mov
xchg
mov
pop
pop
orb
dec
mov
mov
ja
fnstenv
sbb
addl
push
das
and
push
int
and
adc
or
in
sub
inc
lods
fcomi
jp
xchg
mov
push
ret
add
sub
aad
push
xchg
bound
mov
or
hlt
mov
pop
or
mov
dec
inc
fidivrs
cld
push
mov
inc
out
and
sub
out
push
adc
mov
and
push
and
test
xor
pop
leave
stc
mov
test
pop
in
cmp
mov
jb
scas
xorb
or
mov
mov
xchg
scas
add
push
movsb
mov
orb
xchg
ja
mov
xor
subl
cltd
lds
adc
out
popa
mov
in
sub
div
daa
push
leave
push
pop
mov
fnstcw
fcmovu
cmpl
and
sbb
arpl
js
out
ja
push
sbb
pop
in
mov
sbb
mov
pusha
cmp
push
cmpsb
pop
mov
xchg
loop
andb
es
pop
sub
out
xlat
fwait
pop
inc
fisubl
cmp
gs
jmp
rorl
mov
rep
imul
jle
adc
out
add
xchg
popf
mov
mov
sub
negl
sbb
daa
cmp
cmp
rclb
ljmp
jno
xor
inc
daa
jge
or
stc
push
stc
mov
rcl
sarb
sub
xor
sub
lods
mov
rcrw
push
mov
adc
pop
ss
imul
in
pop
mov
loop
xor
frstor
enter
jle
lds
stc
inc
inc
jo
mov
je
fimull
jns
push
and
jne
xlat
cli
xchg
jns
jg
into
lcall
cmp
add
sub
push
inc
pop
scas
or
push
jl
ficompl
cwtl
insb
add
push
or
adc
sub
andl
sbb
enter
arpl
push
sub
test
adcl
lret
jnp
movsl
cmp
orl
int3
in
repz
or
fidivrl
shlb
add
pop
xchg
dec
dec
rcll
push
push
sub
mov
mov
in
mov
enter
subb
jle
icebp
pop
clc
dec
rcr
das
inc
adc
mov
gs
aaa
mov
cmp
mov
loopne
sbb
push
pop
cmpsl
or
inc
dec
jl
mov
ds
icebp
and
xchg
gs
xchg
push
or
jne
xchg
into
pop
les
mov
jne
adc
imul
out
cwtd
test
daa
sarl
push
mov
fbstp
leave
cmpsb
add
std
jb
cs
or
jecxz
aad
mov
xchg
ja
fucomi
sub
mov
fsubs
and
lret
scas
adc
xchg
xor
push
add
mov
adc
std
mov
shrl
sub
xchg
stos
clc
dec
pusha
inc
lret
sbb
data16
adc
inc
mov
push
insl
mov
sbb
in
lods
adc
leave
negb
xchg
jno
push
out
xchg
sbb
inc
hlt
sub
push
arpl
sti
das
nop
mov
dec
movsb
jecxz
fdivrs
sbb
pop
fistl
sbb
adc
outsl
cmp
cltd
das
jb
ljmp
jb
pop
mov
aad
cmp
das
ret
inc
rcrl
andb
jbe
push
rcl
sbb
jecxz
movsl
js
daa
adc
pop
data16
inc
arpl
sahf
dec
push
hlt
mov
scas
jp
loop
dec
dec
add
pop
add
adc
mull
rolb
or
inc
aam
or
fs
std
sub
pop
push
adcl
stc
mov
jle
mov
jle
enter
sub
lods
lahf
scas
decb
loope
adc
jmp
out
ljmp
aad
xchg
mov
fwait
out
add
push
cs
es
sbb
scas
adc
xchg
xor
int
out
sbb
loopne
cmp
lret
mov
sahf
xchg
pop
cmc
in
outsb
inc
sbb
dec
aam
mov
pop
inc
bound
mov
jl
xlat
jne
fstpt
jno
popf
test
test
jle
adc
push
mov
scas
stc
adc
movsl
js
push
ret
mov
fidivl
pop
mov
push
inc
sub
inc
aas
mov
add
sub
or
and
mov
cmpb
cmp
dec
aas
aad
sub
aam
out
loop
inc
and
shll
insb
sub
xchg
loopne
jae
pop
inc
lock
test
cmp
dec
scas
lods
sbb
fwait
subl
mov
mov
push
ret
pop
pop
int
mov
test
sub
dec
sub
iret
inc
lods
int
sub
scas
stc
fidivl
int3
inc
inc
mov
dec
dec
insb
xlat
fcomip
pop
or
dec
lea
xchg
iret
inc
lcall
and
pop
xchg
mov
stc
scas
pusha
jge
sbb
sbb
push
jle
add
jnp
pop
lods
shlb
outsl
sub
adc
dec
pushf
jmp
ret
test
dec
ror
add
roll
testl
or
repz
subb
add
jbe
adc
andb
clc
push
sub
mov
mov
addb
add
enter
enter
decb
push
pop
insl
sti
scas
pop
xor
xchg
daa
mov
lock
push
ja
lea
int
and
iret
mov
sub
aaa
insl
inc
ds
cmc
cmp
lcall
jne
lret
rclb
xor
inc
xor
imul
mov
test
aam
pop
pop
ja
ja
imul
not
imul
xor
movsb
pop
lret
jge
inc
xchg
mov
jae
jae
sbb
cmp
je
jmp
jae
pop
push
in
mov
cwtl
es
adc
jb
and
fisttpll
adc
or
push
mov
testl
in
mov
lahf
mov
jmp
xorb
mov
dec
dec
jecxz
lret
adc
cmp
lods
mov
push
loopne
or
bound
imul
pop
sub
sbb
mov
aad
sbb
mov
xchg
push
add
loope
adc
push
cltd
ljmp
pop
sbb
mov
ljmp
push
push
pop
es
cmp
lods
mov
inc
call
stos
jge
mov
xchg
mov
loopne
push
movsb
jecxz
outsl
iret
mov
and
cmpsl
rcrl
adc
repz
mov
scas
shlb
inc
rorb
dec
negb
aaa
push
hlt
out
sti
xlat
and
lret
mov
es
cmpb
popa
lods
in
jg
mov
stos
mov
mov
mov
mov
add
enter
sbbl
jo
std
lods
jmp
or
push
in
mov
push
inc
xor
sbb
xchg
movsl
pop
inc
stos
add
push
lods
cmp
repz
dec
jge
push
mov
push
aas
rolb
mov
repz
and
mov
or
pop
cmp
lret
fwait
xor
sbb
sub
mov
adc
sub
outsb
cs
jnp
sub
stc
mov
jb
in
mov
rol
adcl
rorl
cld
xor
mov
add
add
push
repnz
mov
pop
cwtl
repnz
pop
movsl
xchg
ja
or
std
psubw
ja
scas
loop
stc
lcall
add
fdivl
das
mov
mov
push
loope
cs
aas
cmpsl
iret
xor
or
or
dec
popa
or
cs
sahf
xor
fdivs
pop
jnp
jbe
sub
dec
je
cmpsb
mov
mov
mov
in
and
pop
fstpl
fs
inc
mull
aas
cmp
in
mov
subl
push
fwait
scas
xchg
lret
xchg
jb
dec
pop
rclb
ja
mov
fstl
fldl
outsl
stc
repz
leave
sbb
lret
in
aaa
and
notb
in
jp
mov
dec
pop
sub
shrb
mov
stos
mov
test
iret
fnsave
adc
out
xor
xor
test
lds
inc
xchg
call
mov
inc
shrb
push
jecxz
mov
test
and
jle
push
fidivs
js
inc
es
push
and
lret
outsb
mov
mov
imul
clc
sti
cmp
idivb
movsl
iret
sbb
fdivl
jno
and
mov
add
and
or
mov
cwtl
ds
test
shll
inc
rcll
pop
jne
mov
jne
sub
jo
cwtl
push
popf
ret
xor
mov
imul
stos
mov
in
dec
divb
fdivs
xchg
jge
push
shrb
popa
xor
xchg
mov
mov
jno
xchg
xchg
or
push
aad
pop
mov
and
in
pop
inc
pop
adc
push
push
js
ret
sbb
iret
iret
adc
jns
inc
fstps
mov
aad
outsl
sbb
imul
aaa
data16
insl
sub
jns
shr
stos
pop
jne
fcoms
add
xchg
hlt
adc
sarl
push
in
fisttps
jne
xor
in
decb
mov
mov
dec
mov
negb
mov
cmpsb
les
mov
rcl
aaa
into
fisubl
sub
test
shll
xlat
arpl
xor
sub
inc
push
jne
in
fcomip
mov
fnstcw
mov
into
xor
or
jmp
stos
pop
sub
fcoml
addb
movsb
mov
push
sub
aam
mov
incb
movsb
cli
push
lock
ror
gs
psrlq
xor
fnstcw
stos
ret
cli
data16
pop
jecxz
rorb
dec
dec
pop
imul
movsb
call
xchg
lods
mov
stc
loop
lds
mov
lret
cltd
cld
scas
inc
dec
in
lret
adc
sub
push
mov
ret
or
mov
imul
scas
inc
pop
imul
sbb
push
inc
xchg
add
addr16
int
jno
pop
sbb
mov
add
leave
jb
inc
popf
push
in
int
sbb
js
and
lcall
jne
jne
pop
xlat
push
lcall
push
inc
inc
jge
jo
sti
orl
imul
cld
test
mov
xchg
imul
stos
sub
sub
jo
sbb
push
insb
pop
sahf
sahf
lcall
jb
dec
pop
iret
inc
cmpsl
mov
pop
sbb
enter
add
cmp
jecxz
jmp
cmp
scas
add
push
xchg
clc
or
xchg
popf
neg
movsb
cmc
mov
movsb
call
aad
lahf
repz
lahf
das
adc
popf
mov
out
inc
mov
pop
mov
imul
pop
xor
or
xor
jmp
add
xchg
mov
jne
and
jl
das
push
data16
inc
loope
jo
icebp
mov
xchg
bound
dec
dec
jno
hlt
cltd
sahf
mov
je
rcll
xlat
mov
mov
or
sti
add
jns
fiaddl
stos
add
pop
fsubl
inc
leave
mov
je
divl
ficomps
enter
mov
dec
sub
pop
pop
fistpll
inc
sbb
fs
stos
mov
arpl
movsl
in
push
lea
mov
scas
or
dec
dec
pop
inc
leave
test
ret
aaa
mov
jle
push
adc
dec
pop
add
lret
or
and
inc
test
pop
je
orb
push
outsb
nop
js
aaa
test
test
lret
jle
cmp
jecxz
push
cmp
or
and
sti
rcrl
add
sahf
mov
es
ss
inc
dec
movsl
call
xor
test
shll
movsl
cli
xchg
enter
cld
insb
scas
sub
sbb
mov
ja
jno
das
movsb
aas
mov
clc
xchg
test
mov
shll
frstor
adc
and
gs
mov
cmp
shl
imul
cmc
xor
mov
mov
dec
inc
rcll
xor
sbbb
mov
stc
enter
aaa
cld
in
pop
cmp
test
add
jmp
sahf
xor
adc
jb
call
cmp
cmp
jno
mov
psubsb
call
cmp
sub
dec
dec
test
mov
movsb
xchg
xchg
cli
or
aad
pop
nop
push
aad
xchg
pop
mov
inc
mov
repz
dec
stos
xchg
dec
loope
out
dec
or
sub
pushf
pop
and
in
inc
xlat
aam
lods
aas
psubw
cmp
xor
lds
mov
and
shl
jge
dec
je
scas
push
jecxz
shl
fnsave
repz
js
imull
imul
xchg
pop
jmp
xor
addr16
pop
imul
clflush
push
mov
std
in
js
mov
lret
cmp
fisubrs
sbb
lea
cmp
jns
and
push
xor
xchg
sub
jbe
push
test
pop
xchg
and
dec
stos
or
jg
enter
jnp
push
insb
imulb
fwait
sti
or
xor
in
cmc
out
adc
dec
sbb
push
arpl
outsl
in
jo
leave
mov
testb
jle
push
mov
mov
hlt
in
into
sbb
ret
push
inc
ljmp
jne
sub
jnp
shrl
pop
sub
xlat
pop
lods
mov
push
ja
xchg
sub
lea
mov
jp
call
inc
cld
mov
inc
iret
inc
add
fs
in
mov
dec
je
rcl
pusha
or
hlt
inc
pop
jbe
jge
jo
clc
stos
call
inc
ljmp
or
push
testb
xchg
dec
testl
xor
insb
mov
pop
push
repz
pop
leave
test
push
sbb
sbb
repz
and
push
mov
aad
jp
ss
jp
jb
fsubrp
sbb
dec
push
test
xchg
sub
loopne
aad
pop
sahf
dec
or
jge
and
jno
mov
adc
xchg
test
fs
in
clc
test
inc
cmp
lret
fs
int
cld
data16
or
and
sub
mov
jnp
and
fimull
enter
push
pop
xchg
mov
fdivrl
mov
test
mov
out
pop
cmp
xchg
insb
dec
pop
sahf
mov
mov
sub
cmp
push
lds
shrb
jnp
or
cmp
sahf
in
jg
or
loop
stos
pop
das
xlat
pop
or
sub
cmpb
movsb
lcall
enter
add
out
js
push
ret
mov
jae
pop
imul
cmp
loop
add
imul
cli
imul
inc
jmp
or
mov
pop
jmp
pop
stos
add
adc
and
mov
mov
jnp
test
js
addr16
adc
outsb
scas
xor
imul
mov
dec
aam
push
jmp
adc
in
mov
scas
push
cwtl
test
sahf
dec
sbb
adc
lods
xchg
sbb
xor
xchg
dec
test
xchg
xor
clc
lods
movsb
lcall
lods
lds
pop
push
fstp
xchg
ret
cld
push
sbb
add
lcall
push
adc
fs
sbb
rclb
xchg
pop
sub
mov
and
mov
push
call
subb
dec
inc
push
in
jb
sahf
lods
andb
mov
xor
shlb
movsb
rcl
dec
xchg
mov
inc
cwtl
xor
add
pop
mov
in
mov
lea
cmpsb
adc
fcompl
mov
mov
sbb
xlat
sub
insb
xor
xor
xchg
pusha
jl
daa
adc
mov
inc
stos
rcll
ror
inc
jle
push
or
in
cs
or
dec
dec
cwtl
das
mov
loopne
push
out
xor
jno
movsb
xchg
lret
bound
dec
aam
cmp
mov
test
jge
xor
fbld
inc
pop
or
inc
xor
mov
push
cmp
icebp
mov
mov
mov
sub
sbb
mov
std
xchg
sub
or
cmpsl
push
push
add
mov
cmp
or
adc
xchg
xchg
add
rolb
push
leave
push
into
in
mov
or
jl
jg
stc
sahf
mov
or
in
mov
sar
call
lods
or
mov
ficoml
inc
out
adc
and
and
cmpsl
ret
jge
jl
pop
mov
pop
insb
cmp
xor
jl
repnz
fsts
push
test
mov
movq
push
sahf
ret
push
fldcw
insl
jg
adc
cmp
jmp
add
iret
inc
add
jae
mov
adc
imul
pop
cmp
xor
fbstp
inc
fisttpll
push
stos
pop
jp
mov
jge
filds
sbb
cmc
sbb
inc
testl
shlb
mov
jp
lods
jmp
inc
arpl
sahf
scas
jb
scas
adc
adc
fcoml
pop
into
jb,pt
mov
cmpsl
lds
lods
adc
pop
pop
add
jbe
or
loope
or
fisubrs
sub
bound
sub
pusha
mov
mov
test
sti
fs
mov
repz
ds
addl
xchg
or
xchg
and
inc
add
shl
jne
sub
mov
ret
scas
mov
mov
xchg
scas
adc
and
inc
push
push
shrb
addr16
test
xchg
add
add
lods
inc
sbb
stos
push
cmp
std
pusha
testl
xchg
add
das
lcall
je
fadd
fisubs
fnsave
insl
cli
ficoms
les
out
xchg
cltd
sbb
pop
movsl
insb
out
mov
mov
ds
push
jno
add
push
insb
xchg
jmp
cmp
mov
jecxz
jae
lret
les
movsl
call
ss
jge
imul
stc
dec
xor
xchg
pop
testl
shrl
xor
sub
imul
sbb
xchg
divl
or
aad
jmp
out
data16
xor
imul
cmp
jge
ljmp
ret
add
mov
pop
jns
add
aas
insb
sbb
test
in
ficomps
jo
enter
cmp
pop
int
ret
pop
test
hlt
mov
divl
xchg
das
push
jle
inc
pop
jo
iret
jle
add
fists
mov
add
dec
rcl
mov
adcb
imul
add
sub
pop
mov
out
sub
pop
int
sbb
dec
push
fdivl
dec
iret
cmp
pop
xchg
or
jbe
insl
sar
shr
sub
mov
and
out
pop
call
dec
pop
arpl
or
popa
mov
and
inc
aaa
mov
fdivrp
pop
adc
out
test
sbb
insb
xor
adc
mov
mov
jp
js
adc
xor
js
pushf
mov
pop
icebp
mov
cmp
and
inc
xlat
push
xchg
sti
add
call
in
ret
jnp
jno
push
ds
lods
add
mov
add
xor
jbe
xchg
add
lret
testb
add
xor
mov
cwtl
int
inc
push
push
in
in
inc
bound
notb
mov
lret
pop
andb
imul
cwtl
stos
adc
jbe
loope
sub
fistpll
mov
sbb
sar
adc
sbb
dec
ds
nop
insl
xor
je
xchg
fs
pop
fwait
sbb
loope
mov
sbb
shrb
pop
mov
lds
xor
fmull
push
jae
dec
pop
int
gs
jo
lds
sbb
xor
popf
out
fsubrp
mov
sub
adc
shrl
dec
xor
xchg
clc
fdivl
push
or
add
mov
jno
mov
add
aas
adc
std
mov
mull
jne
fidivs
mov
jg
gs
inc
jnp
lods
das
bound
sbb
inc
jge
pusha
and
shrl
or
fidivs
mov
cmp
cltd
mov
pop
cmc
fdivp
cwtl
mov
jbe
bound
aad
and
pop
cld
xchg
pop
mov
aad
dec
aad
cltd
pop
mov
lods
inc
sub
subl
iret
callw
pusha
add
jb
je
mov
jae
les
jns
adc
nop
sbb
xchg
sub
add
popa
jle
mov
arpl
or
clc
add
dec
cmp
je
repz
bound
push
lods
test
cmpb
roll
push
insl
int
mov
mov
cmp
decb
inc
pop
test
or
add
xchg
addr16
mov
shll
pop
or
dec
push
daa
lcall
adc
mov
shll
das
rolb
iret
mov
mov
mov
dec
inc
pop
aam
insb
cmpb
adc
push
mov
lock
dec
aad
mov
in
rol
mov
sbb
shl
pushf
es
repz
jne
sub
add
inc
stc
xlat
scas
and
xchg
iret
push
sub
mov
dec
fdivrl
sub
outsb
lret
push
fisubl
inc
mov
pop
leave
inc
rcrl
test
mov
pop
mov
insl
mov
push
in
fstpl
roll
test
int
sbb
daa
adc
leave
or
lret
inc
fstpt
data16
test
push
sub
lret
lret
cld
in
pushf
or
aaa
pop
and
cmp
xchg
or
cmp
cmp
sub
stos
mov
xchg
xchg
mov
mov
or
scas
pop
jle
cmp
out
inc
mov
dec
dec
jg,pt
int
ret
mov
shrl
jnp
or
dec
aaa
ljmp
sbb
push
dec
push
jle
jge
shrl
jp
pop
pop
pop
out
xchg
lods
outsl
sub
adc
inc
push
jmp
adc
or
or
shlb
lcall
pop
jbe
jl
sub
push
inc
push
shll
idiv
ja
push
stos
push
test
push
ficomps
xchg
xchg
push
adc
mov
push
lahf
mov
bound
xchg
je
notl
xor
inc
or
mov
push
mov
scas
sub
scas
xor
iret
incl
fstpt
aam
mov
lods
jo
pop
imul
and
daa
stos
push
ss
push
cli
xchg
test
out
ja
sbb
cmp
or
xchg
daa
inc
pop
cmpsb
mov
iret
cltd
rorb
cmpsl
sbb
dec
push
mov
out
sub
cld
mov
sti
test
in
sarb
cmp
and
orl
pop
mov
pop
movsb
lret
mov
dec
mov
adc
xor
jnp
lret
xor
lock
mov
cli
pusha
adc
inc
push
dec
aam
out
push
and
jge
and
xor
sbb
mov
movsl
jge
sbb
scas
fsubrl
loope
repz
jb
dec
sbb
lds
cmp
sub
repnz
mov
aam
mov
add
stos
orl
cmp
call
out
mov
enter
andl
mov
ds
or
and
fs
cmp
scas
dec
jne
adc
xor
cmp
aas
testb
push
daa
push
ret
hlt
ss
cwtl
lds
pop
ja
adc
fsubrl
push
and
data16
arpl
sub
mov
outsl
inc
inc
inc
cld
push
jae
push
in
push
add
leave
jno
jae
mov
push
sub
je
aaa
push
rclb
clc
sahf
adc
daa
mov
push
dec
test
loopne
adc
adc
adc
aad
int3
mov
push
js
inc
sahf
sarb
in
adc
pushf
decb
clc
jne
mov
das
push
pop
or
mov
sbbb
fistpl
cmp
inc
jmp
push
xchg
scas
mov
lret
mov
mov
rcrl
mov
dec
repnz
sub
mov
push
xor
xor
push
gs
int3
mov
leave
movsb
push
js
rorb
and
fimull
and
dec
dec
imul
loopne
mov
dec
ret
enter
loopne
fstl
cmpb
dec
pop
push
mov
xchg
imul
lods
and
xor
pop
and
sarb
mov
ret
jb
xor
dec
inc
mov
cli
cmp
push
lcall
rcrb
or
imul
fstps
hlt
push
push
push
out
js
shl
or
hlt
mov
dec
and
lahf
or
inc
xchg
in
mov
ret
xor
int3
pop
fdivl
xchg
jae
ret
jge
mov
lods
stos
sub
push
into
scas
inc
shrb
rcrb
int
pop
and
add
xor
gs
dec
xlat
fidivl
adc
pop
push
int3
fidivs
sub
mov
test
lds
ss
xchg
movsb
pop
mov
or
loope
testb
dec
ret
outsl
shr
xor
fstpt
loopne
adc
bound
or
scas
mov
dec
sbb
jne
add
gs
out
mov
insl
sub
gs
dec
xlat
and
pop
pop
xlat
sub
cmp
sub
push
pusha
andps
outsb
adcb
das
das
inc
add
repnz
push
je
adc
mov
pop
in
notl
aad
roll
pop
cmp
mov
decl
into
aam
in
shll
mov
xorb
sbb
jo
test
sarl
cld
fcomi
inc
mov
mov
inc
outsl
loop
push
push
cmpsb
bound
xchg
dec
mov
mov
imul
mov
mov
ja
pop
stos
je
inc
dec
and
int3
ja
mov
mov
xor
mov
int
iret
lods
inc
add
into
in
stos
jp
adc
out
fdivrl
addr16
addr16
mov
addl
in
ficompl
subb
je
std
arpl
sbb
adc
inc
push
push
insl
pop
fcmovu
jno
movsb
jmp
push
pop
leave
or
or
xor
mov
xchg
int
pop
in
loop
les
inc
jb
inc
fldl
mov
xchg
mov
sub
xchg
ret
mov
sbb
jmp
push
repnz
pop
sahf
movsl
mov
add
sbb
jo
scas
cmpsl
out
jg
or
xchg
adc
mov
dec
ljmp
cmp
insl
mov
rol
push
push
jg
mov
or
ds
add
adc
mov
rorl
js
decb
test
and
hlt
dec
cmp
popf
adc
ljmp
cmp
mov
cmp
lcall
pusha
fstpl
sbb
xor
xchg
lcall
clc
pop
xchg
jp
xchg
inc
and
push
pusha
sbb
adc
sub
and
jg
in
test
push
int3
jecxz
xlat
add
jl
cs
jg
jp
movsb
sub
lea
idivl
xchg
push
ret
out
js
push
mov
sbb
inc
jp
adc
add
dec
dec
lds
subb
xor
or
sahf
mov
mov
mov
jge
call
inc
and
xchg
adc
sti
pop
in
jno
inc
adc
in
call
cmp
push
push
mov
xchg
pusha
stos
xchg
shrb
inc
repz
imul
cmpsl
jno
insl
jge
xchg
sub
enter
or
sbb
lea
cld
inc
dec
out
sub
and
inc
push
sbb
xor
loop
cld
test
sbb
enter
pop
sarb
icebp
std
test
sbb
jp
sbb
cwtl
outsb
rclb
addr16
fdivr
sahf
pop
lea
pop
daa
jae
ror
negl
cwtl
pop
push
add
xchg
cld
xchg
sub
jl
ret
adc
out
pop
mov
aas
pushf
adc
pop
outsb
xor
lods
lds
loopne
pop
insb
js
jmp
in
jbe
inc
pusha
sbb
rcl
orl
push
jp
add
imul
int
add
sbb
sub
movsb
push
push
shrl
cmp
xchg
out
pushw
arpl
outsb
sub
test
xchg
mov
aam
repnz
test
pop
push
loopne
hlt
mov
shl
adc
bound
pop
sbb
loopne
pop
fadds
fldl
or
stos
imul
xor
dec
adc
push
adc
xchg
push
jae
mov
fbstp
arpl
mov
pop
aad
incb
lods
jecxz
pop
cmp
imul
cmp
arpl
rol
hlt
movsl
mov
int3
loope
mov
xor
xchg
push
jp
pusha
pop
dec
mov
mov
sub
xchg
pop
inc
xchg
inc
adc
inc
inc
int3
lahf
repnz
push
push
and
shl
aaa
lods
in
jecxz
leave
mov
pop
lret
mov
push
add
push
dec
out
cli
pop
dec
in
sbb
sahf
mov
ret
jge
call
pop
jnp
into
dec
ret
sbb
fsubrl
and
das
push
std
xchg
inc
int3
sub
fisttpl
or
pop
sbb
stos
frstor
cmp
rcll
push
mov
aad
pusha
out
pop
xor
popa
jnp
jp
dec
dec
pop
cmc
out
mov
sub
ljmp
std
xchg
loop
and
jo
inc
push
test
call
or
mov
mov
aam
sti
or
addr16
aam
sub
xor
push
gs
test
imul
mov
imul
rcl
shrl
dec
xor
and
lahf
arpl
push
mov
std
xor
jnp
mov
xchg
mov
lcall
mov
fdivrs
ret
inc
jbe
test
cmp
push
cmp
xor
push
mov
jbe
adc
lea
aas
sbb
negb
loop
mov
icebp
rcrb
push
cwtl
cwtl
sti
es
mov
leave
cs
ficompl
insb
test
adc
mov
xor
outsb
sub
notl
jl
inc
sbb
out
rcl
push
ss
paddsw
pop
jb
out
or
arpl
adc
xchg
add
push
cmp
fisttps
sar
cmp
movsb
sbb
dec
popf
mov
mov
in
xchg
mov
mov
cli
add
adc
and
pop
add
add
or
pop
push
dec
add
stc
adc
or
out
repnz
out
mov
jnp
stos
hlt
out
and
test
mov
sub
movsb
std
aaa
jae
or
adc
imulb
sub
jnp
push
sub
pop
ret
pop
rolb
and
mov
cli
mov
xchg
xchg
daa
and
jno
out
shrb
outsb
out
je
push
flds
bound
or
cmpsl
add
shrl
stos
jb
popf
lock
stos
xor
pop
add
xor
fisubl
clc
jnp
push
fmulp
dec
xchg
stos
out
lds
addr16
mov
and
fwait
movsb
mov
pop
jge
dec
in
std
pop
in
insl
pop
mov
jmp
adc
inc
int
xchg
push
and
cmpsb
clc
test
mov
fcmovnbe
pop
xor
cmp
mov
adc
xchg
fiaddl
push
and
lcall
imul
lds
das
inc
xlat
arpl
xor
inc
lea
divl
pop
ss
je
xchg
pop
sub
push
pop
lea
mov
stos
insb
jae
mov
xchg
js
add
inc
cmpsb
and
jnp
jnp
cltd
and
xchg
lock
aaa
xchg
mov
mov
jecxz
pop
or
sbb
test
mov
std
xchg
lods
mov
mov
xor
cmp
pushf
xchg
ljmp
out
aad
add
in
and
bound
cmp
lea
ss
mov
pop
xchg
mov
xchg
jns
rcrb
ja
mov
push
imul
imul
jmp
ja
adc
adc
sub
mov
jnp
jnp
iret
outsb
mov
insb
mov
xchg
jne
cmp
inc
and
xchg
bound
xchg
jmp
scas
int
dec
loopne
xchg
inc
hlt
orl
sbb
cli
and
sub
rcrb
dec
xorb
add
clc
inc
mov
sbb
jb
out
nop
loop
stc
pop
push
pop
mov
ret
data16
mov
in
mov
fimull
loope
es
mov
js
sub
push
out
xchg
sub
push
jecxz
xchg
xchg
dec
add
sbb
jl
sbb
jp
mov
inc
xchg
fwait
aaa
int
xlat
orb
pop
aaa
into
dec
cli
mov
adc
xchg
lds
inc
std
sbb
mov
rclb
add
jl
andl
cmp
inc
xor
andl
or
imulb
sub
pop
pop
jmp
lea
and
mov
mov
aas
push
insl
mov
cmpsl
aam
cmp
push
pop
repnz
mov
cmp
out
jns
xchg
sub
jns
cs
pop
jo
les
jge
fistps
mov
dec
or
jmp
testl
pop
adc
leave
xchg
push
pop
jl
outsb
scas
inc
fxch
lea
jp
adc
std
int3
dec
int
mov
add
xchg
xor
xor
pop
movsl
pop
xor
scas
inc
in
addr16
jg
cli
lea
repnz
test
dec
call
fisubs
pop
lret
sub
in
sub
jnp
in
and
in
stos
stos
popf
push
sbb
sub
mov
pop
cmpsl
push
sbb
mov
pop
mov
int
in
shrb
movsl
sub
add
cwtl
in
inc
mov
loope
push
add
mov
out
js
test
pop
gs
xlat
sbb
cwtl
cs
mov
mov
rorb
dec
outsb
sub
mov
push
or
ljmp
scas
sbb
fcoms
dec
loopne
test
enter
xchg
mull
lock
cmpl
lds
leave
or
cli
and
movsl
adc
jge
add
fstpl
shll
sbb
jae
dec
mov
or
sbb
in
cld
pop
inc
clc
cmp
je
inc
sbb
xor
inc
cld
js
adc
lds
push
push
mov
adc
lahf
mull
mov
mov
adc
ja
inc
cs
stos
insb
int3
adc
es
dec
jle
data16
push
mov
int
mov
adc
sub
flds
mov
add
sbb
out
cld
jne
pop
stos
aaa
rolb
sbb
gs
inc
cmp
add
push
xlat
ds
pop
mov
mov
mov
cmp
inc
mov
jmp
mov
push
mov
insb
negl
xchg
adc
sbbb
mov
jo
dec
pop
aas
shr
inc
mov
ret
hlt
dec
jae
repz
lea
pushf
and
pop
adc
add
out
pop
mov
mov
jmp
and
or
ret
and
push
das
add
adc
aas
outsb
mov
mov
push
dec
fs
in
lea
imul
sbb
dec
cmpsb
push
xlat
xchg
je
imul
movsl
jecxz
in
iret
mov
push
dec
std
adc
insl
and
xor
and
es
test
and
int3
aad
negb
mov
je
adcl
dec
mov
adc
sub
mov
inc
inc
stos
sbb
test
arpl
jmp
push
and
xchg
lea
dec
adc
dec
int3
les
data16
mov
lods
inc
inc
fildll
adc
jns
sbbb
ds
out
call
ret
shll
gs
xchg
mov
push
clc
jnp
sbb
xchg
sub
lea
add
jg
in
pop
cmpsb
sahf
pop
pop
movsb
or
mov
push
and
testl
mov
in
insb
or
loope
js
pop
pop
dec
hlt
push
xchg
lahf
push
mov
sub
adc
insb
rcll
sbbl
jge
dec
cmpsl
in
scas
adc
jg
in
imul
add
fisttps
jo
out
rcrb
mov
mov
out
int
mov
insb
add
mov
add
daa
popa
dec
sub
sbb
push
sbb
shrb
push
mov
mov
mov
adc
sub
push
sbb
or
in
movsl
mov
sub
sbb
and
push
sti
or
lock
movsl
push
mov
ret
mov
push
hlt
call
fildll
ss
ja
aad
push
sbbl
jae
shrb
icebp
inc
in
popf
jae
dec
arpl
mov
lods
adc
aad
testb
jmp
xchg
out
movsl
xor
cwtl
pop
inc
cmpsb
jecxz
push
popf
imul
or
test
xchg
test
adc
adc
insl
lods
lcall
movsl
mov
adcl
inc
icebp
mov
into
jns
push
mov
pop
mov
mov
shlb
sub
imul
test
mov
mov
into
stos
repnz
sahf
xor
ret
sbb
out
out
fwait
cs
push
add
mov
xchg
mov
dec
int3
arpl
mov
aaa
xchg
cmp
pop
jo
jle
push
je
pop
inc
loope
sub
stos
pop
test
pop
add
xor
test
ljmp
testl
cmp
jmp
test
inc
outsl
inc
push
mov
push
and
jp
cmp
addr16
pop
xchg
add
xchg
mov
mov
adc
pop
mov
mov
lods
mov
ficoms
in
andl
lret
icebp
sbbb
movsb
dec
pop
out
repz
dec
lock
mov
mov
cmp
push
push
cmp
push
push
inc
pop
xchg
call
test
aaa
jae
add
scas
jecxz
lods
pop
inc
jo
jns
pop
fstpt
push
mov
invd
dec
dec
xchg
cmp
and
xchg
loopne
or
lods
ljmp
xchg
push
inc
fdivrl
mov
int3
jo
pop
or
fldcw
daa
test
cltd
icebp
jle
add
call
add
sbb
cwtl
mov
dec
mov
imul
clc
sbb
sbb
rol
mov
rcrb
xchg
mov
cmp
xor
sub
shl
cmp
rcrb
test
or
insb
or
sahf
jo
ljmp
push
insb
loope
push
enter
fwait
repz
mov
push
push
movsl
lcall
dec
test
push
sub
xor
lock
fdivl
inc
daa
aad
pop
and
lods
push
push
pop
aas
sbb
pop
stos
cmp
mov
jb
subl
xor
cld
xchg
lods
xchg
jecxz
test
sarb
mov
adcb
loope
fiaddl
out
xlat
sbb
int
push
sbb
imul
mov
sub
fistl
xchg
mov
mov
jmp
std
jns
inc
loopne
fistl
push
mov
ucomiss
xor
xchg
nop
inc
stos
cltd
icebp
mov
std
lods
jmp
les
and
iret
jns
add
sbb
sub
mov
imul
jg
lcall
pop
mov
fadds
push
popf
iret
cmp
loop
jmp
jo
and
inc
sbb
idivl
icebp
lahf
stos
fsubrs
add
mov
stos
pop
push
push
fidivrs
mov
fadds
jp
ds
cmpsb
pop
pop
ds
and
ret
cmc
inc
mov
gs
jae
movsb
xor
push
sahf
xchg
jo
sbb
adc
js
das
mov
dec
fsubrs
pop
mov
push
rorb
dec
stc
iret
mov
xchg
cmp
dec
out
mov
xchg
js
andl
cmpb
rorb
push
es
ss
cld
fs
pushf
cmp
pop
in
cmp
lea
loopne
ret
dec
loope
es
pop
sub
mov
mov
mov
push
test
xchg
bound
test
int
cmc
leave
mov
repz
xchg
push
push
stc
movsl
add
and
jnp
jo
enter
jae
or
mov
jae
popf
fstps
cmc
sub
pusha
pop
push
stc
add
int3
arpl
mov
sub
and
jge
xchg
and
stos
test
push
ljmp
mov
mov
shll
sub
xchg
pop
add
xor
test
std
xor
dec
cmp
movsb
loop
sbb
arpl
ret
bound
iret
addr16
stos
in
rcrl
rorb
and
lahf
dec
xchg
dec
mov
xchg
int3
and
add
fs
pop
pushf
sbb
imul
lahf
jg
sub
bound
push
mov
leave
jns
push
pushl
sti
fnsave
fwait
sub
gs
xchg
sub
xlat
test
test
or
cmpsb
sub
fmuls
sar
shrb
cltd
push
test
movsl
mov
xor
mov
cmp
in
push
mov
jg
mov
movsb
fsubr
add
mov
cmpsl
push
pop
push
outsb
push
insl
cmp
mov
push
jle
sub
push
push
jge
mov
mov
stc
psadbw
pop
sbb
lods
jg
daa
cli
inc
scas
and
xchg
scas
and
fcomps
jb
mov
sbbb
fsubr
pop
push
call
jne
inc
or
orb
jge
lods
popf
inc
mov
mov
sbb
inc
and
stos
mov
sub
jb
ss
and
push
inc
dec
add
lods
xchg
imul
movsb
movsb
mov
mov
lock
lods
and
mov
shrl
in
jmp
xchg
sub
xor
mov
mov
mov
cmp
in
ret
pop
add
loope
bound
fwait
es
xchg
scas
or
and
mov
pop
xlat
cmp
divl
jecxz
xorl
sub
mov
mov
and
cmpsb
push
dec
stos
pop
mov
out
jge
imul
or
lahf
jnp
xor
mov
pushf
mov
adc
es
cmpsl
scas
xor
push
sbb
push
mov
jo
and
fstpt
bound
push
or
mov
add
lret
scas
inc
pushf
mov
mov
fildl
mov
pop
enter
lcall
cmp
or
push
es
xor
out
adc
fpatan
popa
loopne
mov
jne
lret
xchg
xor
rcrl
fcompl
nop
cmp
ret
dec
sub
fadd
std
popa
enter
orb
pop
and
fadds
lret
mov
fcmovnbe
call
xor
outsb
mov
ds
test
cmp
xor
jp
xchg
jne
dec
adc
xor
or
cmp
mov
addr16
loope
push
idiv
ficoml
or
cmp
pop
dec
out
iret
loop
inc
xor
xor
scas
or
adc
inc
aaa
mov
inc
enter
out
js
je
outsl
sub
mov
sbb
and
lods
imul
pop
ds
insb
jo
pop
jae
sbb
sarb
push
movsb
dec
and
mov
cli
jne
pop
mov
std
push
lods
repnz
rclb
mov
adc
mov
pop
mov
xchg
dec
cmp
add
enter
mov
shlb
push
push
fwait
lods
outsl
lahf
cmc
sub
xchg
cmp
dec
fistpl
sti
es
cmc
ret
mov
mov
shlb
xchg
sub
scas
popf
lahf
mov
cmpsb
jnp
jmp
sahf
pop
inc
cmpsl
xchg
jmp
in
es
lcall
movsb
out
test
jbe,pn
mov
or
and
sub
imul
mov
fwait
xor
jo
fistpl
rorl
bound
mov
adc
daa
mov
insb
and
std
popa
dec
push
ljmp
jb
inc
push
fstpl
xor
xchg
and
out
dec
in
in
outsb
mov
cmpsl
or
clc
dec
mov
mov
adc
frstor
xchg
aaa
xchg
and
mov
sub
imul
pop
inc
call
xchg
cmp
xor
mov
fisubrl
mov
sahf
xchg
adc
pop
loop
cmp
jae
icebp
xchg
push
out
pop
or
das
or
mov
sbb
push
outsb
fsubr
scas
xchg
mov
jb
or
fcoms
popa
test
pop
mov
call
rcr
lds
imul
insb
mov
dec
lock
xor
add
cli
jne
cmpsl
cmpb
push
mov
mov
and
jl
in
stc
popf
add
inc
lret
xchg
sub
popa
movsl
lea
mov
lods
popa
hlt
lock
aaa
fisubrl
inc
adc
sub
sub
xchg
pop
nop
dec
and
stos
ret
inc
push
and
xor
adc
xor
lock
out
cmp
or
mov
dec
dec
pop
xor
rcrl
dec
fucomip
adc
mov
mov
subb
pop
jge
xor
xchg
arpl
add
std
fidivs
push
int3
mov
jns
jp
push
das
test
add
add
adc
mov
cmpsb
jo
push
mov
js
int
push
sbb
push
ret
sub
dec
loope
out
daa
lahf
loope
jecxz
cmp
pop
inc
xor
rclb
inc
and
fisubrs
add
xor
hlt
dec
stc
out
sub
dec
add
imul
cwtl
jno
or
fbld
adcl
out
mov
pop
cmpsl
cmc
mov
and
shl
scas
adc
imul
pushf
xchg
push
jne
pop
addl
out
out
dec
pop
xchg
enter
pop
mov
fsubp
pop
fdivrl
xchg
les
xor
pop
aaa
jns
xchg
adc
mov
push
out
push
or
jbe
call
fildll
xor
popf
hlt
popf
gs
cmpsb
sbb
jae
jnp
shrl
outsb
jbe
cmpsl
jns
dec
aad
sub
aas
add
fidivs
pop
mov
xchg
movsl
lahf
leave
bound
push
jmp
dec
fstps
dec
pop
dec
gs
fnstcw
pop
jmp
pop
out
cmp
push
imul
or
cmpsl
xor
in
mov
mov
popa
fidivl
dec
ss
cmpsl
rol
outsl
add
pop
jb
cwtl
pushf
and
fisubs
push
pop
or
lods
sub
aam
or
sbb
mov
mov
inc
sub
cmc
push
arpl
lods
or
dec
fldenv
imul
out
test
in
sti
cmp
jne
add
inc
inc
sbb
aad
stos
rcl
sbb
cltd
insl
cmc
mov
and
mov
mov
aam
xor
pop
adc
push
stc
out
outsl
test
jecxz
mov
and
ret
push
movsl
cld
pop
les
xchg
sub
aaa
jmp
push
lods
mov
jmp
cmpb
icebp
leave
push
icebp
adc
js
sbb
pop
hlt
and
jecxz
repz
jnp
xchg
pop
cmp
mov
mov
or
cltd
cmpsl
clc
fdivp
aam
daa
clc
inc
icebp
or
imul
jne
setge
push
test
inc
xchg
pop
or
and
popf
inc
popa
xor
loop
push
lret
sub
clc
in
mov
es
data16
push
sbb
xchg
dec
pushf
outsb
daa
lahf
repz
inc
pop
fiaddl
in
sub
shlb
test
mov
mov
into
scas
jae
sbb
ja
loopne
add
addr16
iret
and
lret
popf
lea
pop
shl
jns
data16
adc
pushl
mov
mov
mov
push
repz
pop
cs
add
xor
in
mov
and
or
push
stos
xchg
sub
je
adc
clc
arpl
xchg
inc
je
cmc
mov
pop
jbe
nop
daa
cwtl
or
add
adc
pop
hlt
mov
lcall
bound
testl
jge
xlat
popa
sbbl
scas
mov
fadd
cmp
adc
addl
mov
push
jno
and
clc
push
xchg
in
lea
loop
xor
cmp
inc
sti
jbe
pop
mov
cmp
jmp
scas
aad
lret
mov
je
pop
xor
pop
mov
cmp
mov
mov
cmp
in
dec
cli
push
cmc
jmp
jmp
mov
popf
sbbl
and
test
cmp
call
test
inc
mov
bound
xchg
imul
or
shlb
jmp
scas
inc
decl
dec
push
bound
int3
mov
je
push
arpl
push
and
push
cmp
jno
jb
test
mov
push
cmc
fs
and
dec
cmpb
push
sbb
cmp
lret
ljmp
inc
inc
ja
push
adcb
xchg
in
and
and
add
xor
xchg
shrb
push
or
idiv
lock
inc
or
lds
sub
mov
in
mov
or
ss
fistps
les
fsubrs
dec
push
clc
mov
das
pop
fistpll
fcoms
pop
cmp
cmp
iret
mov
cvtdq2ps
les
pop
daa
testl
mov
subl
scas
mov
popa
xor
lock
cmp
movsb
adc
fnstenv
filds
sbb
enter
xor
js
stos
shll
xchg
loope
cmpsb
fistpll
in
test
xchg
test
sbb
xchg
mov
jae
rclb
nop
dec
pushf
clc
fsubrp
data16
mov
xchg
inc
push
mov
sbb
notl
dec
ds
dec
ret
sbb
fstpt
mov
aas
cmp
xchg
add
jecxz
and
scas
fcoml
lods
sar
adc
jae
xchg
and
iret
stos
xchg
add
cltd
mov
or
rorb
lahf
and
dec
les
pushf
mov
mov
push
test
jecxz
pop
push
jnp
mov
sbb
out
mulb
fistpll
inc
hlt
into
mov
out
add
xor
sbb
fbld
mov
mov
repnz
out
xor
mov
add
jns
xchg
sub
mov
or
pop
mov
repnz
sarb
fs
cmpsb
ret
dec
cmp
ljmp
cmp
sbb
xor
fstps
push
dec
jo
xor
push
push
pop
add
je
and
push
idiv
or
cs
jl
pop
sub
aaa
insl
lcall
inc
pop
cwtl
pop
popf
xchg
shrl
shrl
std
outsl
jnp
cmp
mov
push
pop
scas
test
xor
inc
iret
or
insb
pusha
lods
push
or
push
aas
jne
shll
inc
loop
jecxz
test
inc
repnz
mov
mov
adc
adc
and
xor
mulb
cs
daa
clc
inc
push
push
out
sub
pop
adc
gs
pop
in
jno
or
mov
lea
push
outsb
scas
int
es
mov
insb
scas
aas
sbb
jno
js
mov
pop
ficompl
dec
push
mov
arpl
std
mov
test
out
test
jecxz
mov
adc
sbb
xchg
fmul
das
add
cmp
mov
inc
inc
xor
inc
sahf
out
jmp
jmp
movb
jo
xchg
cmpsl
sbb
pop
lods
sbb
mov
sbb
cmp
cmc
sub
stos
fists
data16
sub
mov
jo
push
pop
hlt
sub
add
testb
adc
in
out
jge
sahf
test
add
xor
loopne
lods
nop
xchg
sub
fisubl
ret
inc
pop
adcb
ja
dec
inc
push
add
icebp
mov
dec
jg
adc
int
ja
js
lret
cltd
xchg
in
dec
scas
and
cwtl
xchg
inc
int3
dec
mov
outsl
push
mul
and
adc
shlb
jecxz
pop
decl
jle
pop
lods
pop
sub
into
enter
add
mov
mov
repz
out
test
aad
leave
test
pop
loopne
adc
bound
addr16
int
sbb
sbb
jl
out
and
insb
data16
and
push
and
ret
xchg
aad
dec
pop
and
subb
cmp
repnz
fstpt
wrmsr
ret
xchg
and
pushf
mov
fcoms
jl
mov
movsb
aas
in
lods
inc
mov
leave
cmp
ror
pusha
or
out
fsts
cmp
xor
repz
jmp
call
jb
js
mov
into
dec
mov
mov
push
in
sbb
lret
mov
stos
xchg
scas
and
lahf
ss
mov
adc
mov
in
add
adc
add
fs
jno
fsubrl
mov
sahf
sbb
pop
inc
lods
cmp
std
inc
jae
std
push
or
fwait
sub
lds
sbb
mov
pop
into
in
push
mov
or
pop
loop
xor
dec
cmpsb
addr16
cmp
iret
ret
fxch
push
popa
test
jae
mov
jmp
mov
fbstp
inc
popl
or
mov
jl
ljmp
lahf
ljmp
mov
in
rclb
adc
dec
das
jge
push
or
jbe
xchg
xor
fisubs
push
and
cmp
clc
pop
shrl
sbb
add
fnsave
pop
icebp
ret
outsb
push
icebp
mov
mov
pop
repz
stos
add
adc
dec
push
and
xchg
inc
movl
xor
test
sub
out
test
outsb
xchg
jb
inc
jecxz
sbb
xchg
cmp
sbb
sbb
push
daa
ljmp
mov
xchg
jmp
mov
mov
mov
jne
rcrl
movsl
jns
mov
in
in
pop
scas
sbb
mov
add
mov
insl
push
mov
dec
shrb
jp
mov
das
dec
fidivl
push
cltd
and
mov
xchg
fimull
add
mov
mov
pop
sar
dec
pop
xor
push
and
lahf
aad
sbb
sub
cmp
inc
jg
enter
pop
mov
fstpl
mov
xchg
jb
mov
rolb
sub
std
lods
loopne
fbstp
movsb
cmpb
xor
push
mov
cmc
push
push
outsb
jb
mov
inc
cmp
icebp
jle
pop
push
add
stos
fiaddl
inc
in
sbbl
or
test
ficompl
aaa
ljmp
xor
lods
imul
lods
and
jne
aad
fnsave
pop
xchg
repz
jae
repz
sbb
imul
inc
jmp
bnd
mov
add
ljmp
inc
dec
cmpsb
xchg
sub
push
or
pop
mov
adc
mov
or
mov
sahf
std
push
and
bound
adc
data16
jbe
adc
divb
repnz
mov
mov
cmpsb
inc
add
and
out
gs
mov
xchg
ss
scas
mov
insb
mov
push
movsb
or
cmp
in
and
sub
adc
push
mov
call
mov
jmp
or
mov
outsl
dec
fisubl
xor
gs
sbbl
aad
adcb
push
mov
sub
xchg
ret
in
inc
cmpb
scas
arpl
lods
or
dec
ds
scas
xchg
xchg
or
jb
scas
add
push
jo
adc
dec
sbb
popa
and
jbe
or
cmp
dec
and
cltd
mov
inc
push
jo
repnz
mov
ds
sub
cmp
or
fbld
xlat
les
pusha
das
cmpsb
cmp
fldenv
add
cmc
shr
loopne
mov
clc
jp
dec
loop
xchg
pop
add
jnp
jbe
or
mov
rcl
jmp
mov
mov
pop
enter
lcall
dec
icebp
push
mov
sbb
scas
int
jnp
loopne
inc
lods
mov
sbb
out
pop
fisttpl
pop
pop
xor
sbb
jg
sub
xor
cmp
sar
push
dec
dec
addr16
and
cmp
lret
push
pop
mov
in
movsl
jnp
mov
add
fstl
inc
mov
jl
scas
mov
sbb
fsubrl
mov
mov
or
orb
outsl
cvtpi2ps
jno
sti
subb
mov
in
in
sub
das
outsl
aad
cli
and
jnp
shr
movsb
jmp
mov
pop
push
sbb
xchg
pop
push
arpl
mov
in
mov
into
xor
mov
dec
mov
iret
adc
rclb
sub
jg
std
dec
xlat
mov
out
out
xchg
pop
cld
push
mov
jae
pop
pushf
scas
xchg
fildll
cltd
out
dec
jnp
daa
sub
xlat
xchg
pop
addr16
jae
jecxz
push
xor
in
add
fcoms
or
cmp
movsl
xor
in
ficompl
fildll
lret
push
incb
xor
filds
insb
push
jo
lods
pop
cmp
mov
pusha
ja
leave
pusha
test
std
out
jecxz
lea
cs
fs
pop
mov
xchg
mov
push
cltd
xchg
add
xchg
sub
in
dec
add
sahf
xor
fwait
ret
push
mov
dec
xchg
loop
in
rolb
mov
push
ss
aad
cltd
pop
push
pushf
dec
std
xchg
ja
pusha
outsl
in
ret
add
jle
inc
sub
mov
and
add
addr16
sub
sub
es
xchg
jo
mov
pop
rcrl
fsubp
subl
mov
rdtsc
or
mov
roll
test
lahf
sbb
cltd
push
imul
call
xchg
cmp
aam
xor
repnz
add
lcall
ret
in
xor
ja
outsb
sub
jbe
inc
sub
mov
push
sti
inc
bound
mov
dec
jno
jg
push
mov
mov
ret
lock
and
jo
sbb
push
in
xchg
pop
nop
pop
scas
divb
pop
dec
inc
sub
mov
shll
xor
inc
fldt
sbb
cmp
mov
mov
mov
fnstenv
iret
aas
mov
cmp
xor
or
adc
scas
inc
adc
jb
divb
int
push
cltd
cwtl
lret
das
pop
imul
das
sub
inc
dec
negl
icebp
push
out
or
stos
pop
mov
stos
dec
inc
movsb
pop
cmp
cs
pop
xchg
dec
in
xchg
js
imul
fadds
addr16
in
xor
xchg
jg
push
scas
cmp
pop
dec
push
sub
mov
inc
xchg
xlat
dec
cmp
in
insl
push
loopne
push
adc
lock
sbb
mov
in
test
push
dec
js
jp
das
fdivrl
push
fadds
or
insl
aaa
adcl
dec
dec
js
out
inc
cld
mov
int3
arpl
mov
and
loop
stos
loopne
pop
js
aam
jge
pusha
cmpb
mov
jmp
scas
and
mov
jecxz
rcll
inc
test
xor
xchg
aaa
or
imul
and
cld
mov
sti
and
lret
lret
xlat
push
pop
mov
cli
xor
mov
fdivrs
gs
or
jne
fstpt
loopne
push
fsubrs
mov
mov
in
jb
cwtl
adc
dec
je
js
xorl
lret
test
add
lock
and
mov
loopne
cmp
scas
and
lahf
push
fildl
pop
es
or
cld
imul
mov
add
sbb
rorb
aaa
inc
add
push
imul
rcrb
fwait
in
inc
xchg
arpl
enter
sbb
push
mov
outsb
and
jo
push
mov
jbe
sub
cmc
push
iret
iret
add
es
fdivl
sub
push
hlt
inc
std
loope
xchg
pop
cmp
daa
jl
movsb
lods
dec
dec
test
mov
fnsave
jnp
fisubrs
fdivrs
pop
pop
insb
sbb
xor
or
outsb
mov
outsb
dec
out
pop
inc
sbb
arpl
add
push
xor
lahf
cli
rorl
pusha
dec
aaa
xchg
cmpsl
or
push
stos
inc
sarb
pop
jecxz
push
cmp
jnp
iret
lea
fs
and
leave
xchg
in
push
adc
and
aam
jl
nop
mov
and
push
adc
mov
movsb
and
pop
outsl
rolb
fmulp
adc
xor
into
xlat
or
mov
lret
or
ss
mov
xchg
mov
iret
ret
pop
inc
mov
add
add
jbe
insl
xchg
mov
add
xor
out
rclb
mov
icebp
es
push
test
popa
js
cmp
adc
pop
push
mov
mov
inc
in
xor
scas
gs
sub
jae
or
and
iret
fbld
int3
addr16
push
push
or
cmpsb
and
mov
sub
inc
push
test
mov
dec
add
out
test
or
nop
sub
ljmp
inc
sbb
popf
sbb
cmpl
push
lea
repnz
loop
adc
inc
aad
test
daa
jge
push
scas
inc
and
dec
xor
jp
lock
jns
sub
add
push
mov
cli
test
add
push
gs
dec
test
cmpsb
fwait
and
or
xor
sbbb
xor
inc
jmp
mov
adcl
or
push
daa
mov
popa
xchg
and
andb
fcomp
lds
mov
add
inc
pop
shrb
jg
sahf
and
jle
xor
sub
cmpsl
add
cltd
test
jb
mov
inc
ror
and
mov
push
sahf
insb
aad
or
push
movsb
aam
lret
cmp
movsl
stc
loope
or
inc
sbb
stos
in
dec
pushf
lock
stos
out
xchg
in
repnz
xor
out
nop
int
int3
lret
mov
clc
inc
mov
xchg
sbb
cmp
and
pop
addr16
xor
mov
out
sbb
ja
cltd
test
test
ret
mov
jecxz
cmpsb
or
mov
es
icebp
push
mov
scas
and
dec
add
xor
xor
stc
fcoms
enter
or
imul
ss
rol
jbe
loop
addr16
lcall
mov
adc
or
ds
adc
mov
subb
and
sbb
pop
aam
lock
inc
push
sbb
dec
daa
lret
lcall
add
and
cwtl
movsb
dec
add
xor
inc
jne
xchg
xor
cltd
and
xchg
push
fwait
outsl
out
cmp
dec
xor
aam
ret
mov
push
in
movsl
jl
mov
icebp
xor
rsm
mov
jp
orl
inc
fistl
pop
imul
inc
and
pop
xchg
in
jmp
lret
jbe
adc
ret
push
fprem
dec
mov
das
pop
outsl
loop
les
subb
sbb
insb
mov
lock
imul
xlat
ljmp
push
out
insl
arpl
xor
ds
fsubl
cwtl
mov
scas
mov
sahf
iret
repz
cmp
ret
mov
and
jbe
jo
andb
pop
mov
lcall
mov
sbb
add
add
sub
pop
pop
xor
xchg
out
and
test
cli
adc
pop
test
xor
adc
mov
clc
xlat
adc
mov
mov
aas
push
stos
fcoms
push
mov
adc
jg
push
icebp
popa
mov
stc
dec
subl
push
or
lds
call
leave
mov
pop
scas
stos
loop
pop
dec
and
popf
jl
xchg
movsl
jns
or
fsubr
xor
lods
or
xor
mov
fdivrl
push
ficoms
dec
mov
adc
push
sub
mov
cmpb
rorl
jg
jg
and
add
je
ljmp
jl
pop
call
ss
shlb
ss
pop
insb
sub
inc
imul
movsb
jbe
jle
jae
ljmp
push
pushf
xchg
cs
and
adc
dec
mov
out
mov
fists
rcrl
out
and
mov
jg
xor
push
inc
cld
ret
fwait
xchg
sub
loop
or
mov
lods
call
je
mov
push
jmp
and
inc
adc
lea
enter
and
fwait
xchg
cld
fldl
in
mov
push
push
add
cmpsb
insl
mov
pop
pop
in
fadd
aad
adc
push
negl
dec
xchg
and
xor
push
mov
mov
sbb
push
test
sbb
xchg
lock
fs
push
inc
and
dec
movsl
das
pop
fldt
int
adc
ljmp
adc
pop
cmp
outsb
lds
ds
jecxz
shlb
push
fstp
fiadds
or
mul
jge
adc
push
sarl
in
int3
insb
subb
hlt
xchg
imul
adc
mov
test
mov
sub
stos
cmp
fldl
dec
xchg
jp
xlat
stos
mov
or
mov
cmp
sub
cmp
test
fmuls
bound
rcl
xor
mov
mov
mov
stc
mov
cwtl
push
aam
cmp
cmpsb
pop
repnz
enter
jmp
jns
sbb
xor
mov
push
and
mov
mov
adc
mov
push
jecxz
mov
pop
dec
imul
rol
out
repnz
hlt
adc
or
jg
mov
xor
mov
lods
pcmpeqw
sub
mov
inc
aaa
and
sub
out
mov
pop
cwtl
in
pop
xor
clc
sbb
xor
push
and
cmp
mov
pushl
fsubrl
pushf
xchg
pop
ljmp
aas
rcrl
xor
lret
add
in
and
inc
mov
enter
mov
push
out
fwait
pop
aaa
iret
icebp
pop
sbb
pop
leave
ja
aaa
cmpl
cmp
popf
push
sbb
mov
xor
outsl
mov
inc
aas
push
out
addr16
in
rdpmc
mov
or
es
and
daa
mov
push
xor
test
rcrl
and
jnp
or
sbb
arpl
adc
loopne
add
loope
arpl
dec
jecxz
push
pop
in
jge
dec
rolb
inc
lods
movsb
cmp
test
pop
inc
cld
sub
iret
pusha
xor
daa
push
pop
xchg
mov
mov
repz
rcrb
push
les
xchg
pop
into
xchg
lods
cmp
and
push
jns
jno
imul
mov
push
add
add
jg
push
mov
test
repz
gs
or
icebp
inc
addr16
pop
sbb
and
cmp
mov
cmp
pop
call
pop
ficompl
aad
mov
jl
jo
cmpsb
popf
popf
stos
sti
adc
aas
add
xor
pop
out
pop
sbb
outsb
psllw
sub
pop
outsb
xor
out
sti
cmp
xchg
pop
lock
push
cmp
leave
jl
lret
mov
sub
and
pop
fucomi
fs
cmp
into
out
fistl
stos
or
cmpb
popa
popf
lods
stos
and
stos
adc
js
and
pusha
movhps
pop
iret
add
mov
icebp
add
inc
adc
mov
mov
or
fstp
push
inc
adc
enter
sub
mov
mov
stos
pop
dec
lcall
test
dec
pop
inc
lods
gs
xchg
cmpsb
ja
mov
movsb
push
jge
pop
lds
sub
xor
adc
cli
popa
movsb
rcl
pop
test
and
xchg
dec
mov
mov
push
ret
pusha
lahf
and
pop
adc
xchg
xchg
hlt
push
cmp
sbbl
adc
pop
and
sahf
out
xor
lods
incl
popf
jnp
xchg
jae
adc
jo
pop
mov
lcall
sub
mov
cwtl
outsl
testl
gs
sub
iret
jg,pn
pop
lock
popa
repz
cmp
clc
xchg
pop
push
in
sub
subl
scas
pop
xor
xlat
fldcw
inc
mov
cld
add
call
push
popa
out
bound
stc
popf
ss
leave
and
push
outsl
sbb
sahf
xchg
add
fs
jb
adc
pop
in
xlat
push
jbe
fmuls
push
push
outsl
inc
or
fstpt
mov
jmp
xchg
mov
shrl
jne
aad
pop
xchg
aam
mov
cmp
cltd
inc
sub
cmc
icebp
dec
push
xor
test
dec
gs
into
pop
aad
lret
cmp
mov
pusha
sbb
mov
je
push
mov
mov
and
wrmsr
stos
jl
and
pushf
xchg
cmp
aam
or
in
xchg
add
adc
bound
fiadds
out
popf
sbb
shll
sbb
shl
mov
stos
inc
fyl2x
jns
std
xchg
inc
cmpsl
nop
pop
mov
fiadds
loop
fbstp
or
add
ret
mov
and
xchg
add
ret
fstpl
scas
cli
push
pop
xor
sub
js
divb
lret
cmpsl
aaa
sub
inc
data16
daa
bound
jmp
clc
in
test
ret
xor
test
dec
scas
call
aad
adc
repnz
lret
test
int3
ss
inc
xchg
test
xlat
jb
xor
or
stos
cmp
jmp
push
cmp
inc
in
cmpsl
sub
pop
outsl
mov
pop
cmc
inc
pop
out
cmp
xor
dec
mov
and
sarb
int3
jns
icebp
in
shr
mov
sti
jo
jle
xor
sub
outsl
adc
out
xchg
mov
dec
cmpsb
adc
pop
cmp
ds
cmpsb
cmp
insl
dec
inc
gs
movsl
xchg
scas
inc
sub
xchg
sbb
pop
inc
inc
fisubs
xor
mov
add
and
dec
push
cs
sahf
popa
xchg
add
push
test
lahf
fstps
nop
cmp
jno
insb
ror
pop
add
mov
sub
and
sub
mov
mov
loopne
data16
xor
loope
push
push
ljmp
jb
jno
sub
sbb
imul
push
pop
pusha
sbb
cmp
add
pop
out
pushf
pop
mov
pop
add
inc
fdivl
fdiv
loop
and
xchg
push
mov
adc
sbb
mov
jno
jne
cltd
lock
stos
or
into
cmp
aam
pop
xchg
cmovge
insl
mov
jmp
das
addr16
pop
out
lret
or
lods
movsl
in
stos
mov
mov
mov
cmp
xor
cwtl
mov
dec
inc
ja
jbe
jg
sahf
push
jmp
xchg
and
push
mov
scas
mov
adc
cmp
data16
mov
bound
cmp
adc
lret
rolb
mov
push
nop
pushf
xor
fmuls
fs
test
loope
fucomp
jge
ret
or
adc
pop
xchg
push
mov
push
mov
sbb
jge
es
push
xchg
out
sbb
inc
scas
jg
mov
ret
insb
in
mov
idivl
xor
inc
jb
shll
pusha
imul
mov
js
or
dec
pop
outsl
mov
dec
ljmp
push
pop
in
sti
or
adcb
popa
cld
scas
pop
xlat
test
jnp
adc
inc
push
mov
test
cmp
xor
jmp
or
push
icebp
xor
lods
xchg
and
cli
push
bound
xlat
clc
mov
mov
test
adc
test
jnp
push
repnz
and
mov
and
fisttps
mov
mov
sbb
fnstenv
xor
mov
out
insl
xchg
add
adcl
sahf
and
inc
mov
bound
mov
repz
popl
test
sbb
push
dec
jno
stc
push
in
lret
cmp
andl
int
rcll
lods
mov
sub
xchg
mov
mov
outsl
mov
mov
aam
in
inc
jmp
aaa
xchg
push
cli
mov
mov
fcmovnb
mov
gs
add
std
popa
push
cltd
pusha
xchg
rcrl
dec
sarb
lds
jb
cli
test
gs
sub
shrb
push
outsl
test
data16
out
popf
dec
sbb
mov
xchg
xchg
adc
pop
cwtl
daa
pop
movsb
iret
incl
popa
push
out
sub
shll
lret
bound
sub
stc
stos
sbb
sbb
pop
inc
imul
mov
xor
cmp
ss
imul
pop
stos
add
mov
pop
pop
testb
pop
outsl
in
or
or
xchg
pop
andb
mov
fldl
add
loope
pushf
sub
cli
adc
xor
ret
sarl
cmp
movsb
or
movsl
shlb
sbb
xor
mov
mov
into
mov
cmp
push
faddp
push
in
out
enter
push
xor
jle
dec
mov
jge
mov
sbb
ljmp
jmp
push
addr16
scas
mov
xchg
fisubrs
mov
fcomp
movsb
fadd
or
sub
pop
pop
adc
popf
push
cmp
sub
es
cwtl
or
jmp
subb
mov
notl
ss
push
adc
xor
dec
loope
scas
xchg
lods
nop
push
jl
cmp
shrl
dec
sti
je
insl
insl
fwait
inc
mov
dec
adc
mov
pop
gs
nop
andb
stc
push
std
and
mov
cmp
push
insl
call
mov
punpcklbw
xchg
sub
pop
xchg
cmp
insl
mul
pop
cmp
das
stos
es
aaa
cmc
inc
jbe
mov
dec
adc
fcoms
rcrb
and
and
push
insl
add
adc
out
dec
and
jle
add
pop
pushf
data16
test
adc
aas
push
inc
cmpl
movl
mov
in
outsl
fwait
imul
nop
mov
ja
test
jg
cmp
mov
adc
pop
pop
ret
pop
jmp
ja
mov
popa
jno
push
insl
daa
daa
mov
mov
mov
add
pushf
rcrb
shrb
pop
pop
jmp
xchg
push
jl
pop
lods
outsl
and
js
imul
jmp
pushf
lock
scas
outsb
and
dec
scas
mov
push
pop
fstl
call
fistps
cmp
and
mov
rcrb
jbe
aam
repz
lret
push
push
xchg
xchg
sub
mov
pop
pop
jecxz
or
or
mov
cmovp
mov
adc
add
jno
mov
pop
jb
test
fldt
add
cli
adc
push
rorl
lahf
xor
push
jno
shll
push
cmp
inc
daa
popf
push
sbb
rorb
adc
cmpsl
and
pop
add
and
pop
pop
add
mov
xchg
scas
xor
pusha
enter
ds
xchg
and
gs
cmp
mov
push
mull
ret
lcall
icebp
insb
test
mov
sbb
aad
fucom
cli
in
cmc
mov
xchg
dec
pop
mov
adc
xchg
or
subb
add
into
enter
push
push
add
mov
or
or
call
xlat
add
xor
jnp
movsb
mov
fisttpl
enter
loopne
std
hlt
test
or
sti
cmp
push
pusha
test
imul
out
xchg
lock
xor
xor
outsb
pop
pop
pop
hlt
dec
jge
mov
lret
mov
sub
lea
and
sti
ret
push
rorb
cltd
adc
mov
rcrl
and
mov
jbe
hlt
inc
inc
dec
xor
bound
mov
test
sbb
cld
pop
ret
and
in
dec
es
in
popf
mov
loopne
xchg
lods
adc
int
enter
push
xor
aad
insb
and
xlat
xchg
iret
ret
shlb
jp
ds
adc
ss
out
push
sbb
push
push
mov
je
sahf
aaa
jmp
call
stos
add
xor
mov
mov
aam
js
insb
add
pop
push
push
lods
sub
sbb
hlt
dec
xor
jo
test
add
cld
aaa
stos
or
test
xchg
test
xchg
or
and
mov
imul
push
les
jge
cmp
enter
push
das
nop
push
popa
jno
ficoml
mov
sbb
subl
iret
xchg
shlb
lcall
jmp
mov
dec
outsl
jo
ret
push
push
add
sub
xchg
add
mov
add
sbb
sahf
jno
push
xorl
adc
shrb
pusha
divl
xchg
sti
inc
mov
or
lods
lock
enter
ja
repnz
loop
lret
mov
mov
push
arpl
pop
inc
pop
mov
dec
loop
add
xchg
sti
pop
js
mov
decl
pop
xor
ss
scas
sbb
sub
pop
mov
int
jmp
sub
dec
loope
or
cmp
shlb
adc
shrb
fwait
repnz
dec
adc
lret
insb
and
test
lahf
jmp
xchg
int3
sub
sub
pop
pop
inc
test
and
mov
jmp
adc
in
insl
dec
shll
mov
fwait
jg
and
mov
imul
repnz
mov
aas
cmp
xor
and
add
jno
push
mov
popa
and
sti
xchg
arpl
lret
lahf
pop
rcrb
mov
loop
lea
or
add
cwtl
sub
xor
dec
mov
lock
inc
stos
mov
shrb
call
mov
lea
mov
push
repz
insl
jg
sahf
jg
and
ja
insb
mov
mov
jg
sti
push
mov
mov
inc
xor
or
inc
mov
loope
test
icebp
lods
enter
icebp
jp
sbbl
stos
add
fnsave
xlat
fs
cwtl
xor
dec
and
jmp
fistps
inc
push
ljmp
and
pop
mov
sbb
xchg
add
outsb
lds
mov
bound
ret
sbb
xor
push
dec
adcl
aam
icebp
stc
sbb
sbb
pop
and
mov
sbb
lea
cli
gs
ja
pusha
and
stos
and
cmpl
scas
xor
and
int3
and
dec
pop
out
jg
or
push
mov
cmpsb
push
add
xchg
adc
xchg
ljmp
jns
sahf
daa
dec
lcall
cmp
push
iret
imul
andb
pusha
lcall
stc
or
jbe
insl
mov
cmp
mov
pop
scas
push
cmp
push
ljmp
mov
sbbl
rolb
xchg
ror
into
pop
cmp
les
push
iret
inc
sbb
add
add
xchg
mov
jmp
xchg
pop
mov
add
mov
and
sbbl
movsb
insb
fnstenv
imul
scas
in
stos
sbb
lret
dec
add
pop
mov
and
jo
pusha
push
lock
pop
or
lahf
call
sub
push
scas
pop
pushf
ss
out
push
popa
aam
mov
addb
jge
jae
push
mov
into
adc
and
popw
loope
sbb
repz
popa
jns
mov
mov
xor
test
mov
outsl
hlt
dec
mov
pushf
fldcw
cmp
rcl
lea
fdiv
or
test
leave
jne
lret
pop
mov
mov
pop
js
dec
cmp
add
xor
frndint
inc
dec
mov
fisttps
cwtl
out
xor
into
inc
pusha
and
jne
lret
inc
push
sbb
mov
sbb
sbb
insl
add
inc
ficompl
dec
out
or
loope
adc
ss
inc
jb
sub
scas
test
rcr
fnstsw
mov
push
pushl
mov
lods
mov
push
fldenv
dec
cmpl
aam
push
daa
je
std
push
scas
test
xchg
sub
adc
lret
jmp
and
xchg
mov
jb
pusha
sub
lret
movsl
call
or
cmp
fcomps
or
sbb
hlt
push
pushf
arpl
and
arpl
pop
es
icebp
sahf
lods
adc
xor
movsb
push
scas
aas
xchg
es
ds
bound
mov
dec
xchg
jg
and
mov
push
push
mov
movsb
xor
pop
test
aas
fmull
dec
dec
inc
in
sbb
dec
loop
inc
xchg
lods
outsl
lret
ret
in
shrb
jb
popf
sub
adc
sbb
push
add
shlb
xchg
lods
or
cld
and
stc
sbb
mov
inc
and
pop
mov
dec
push
inc
out
out
push
les
jle
mov
sarb
push
pushf
inc
test
into
push
and
mov
arpl
jo
in
in
mov
aas
es
int
cmp
loopne
and
cmpsb
shrb
ljmp
inc
movsl
ds
daa
stos
dec
lods
jmp
mov
popf
jl
dec
je
sub
pop
fwait
inc
inc
punpckhbw
ss
ret
popf
dec
jmp
lds
cli
or
inc
add
lds
pop
popa
in
add
push
jmp
dec
bound
neg
mov
cmp
jnp
lock
sub
fadd
out
add
daa
adc
sub
pop
adc
mov
lds
jne
push
cmp
jg
test
pop
loopne
pop
pop
ds
mov
cmpsl
insb
rcr
out
add
sbb
mov
ret
jne
mov
movsb
adc
std
adc
push
arpl
test
dec
pop
push
std
jo
repz
and
sti
mov
sub
sub
jle
sbb
xor
cmp
mov
pop
pop
inc
fmull
mov
aam
xchg
pop
jb
loop
push
and
mov
scas
std
sti
or
mov
lods
pop
cs
or
test
fisubrl
xor
cmp
push
pop
mov
in
aas
cwtl
fnstcw
out
pop
xor
andb
xchg
gs
inc
and
mov
testl
popa
xor
imul
xor
mov
popf
mov
sub
stos
adc
lods
add
repz
or
shll
pusha
cltd
repnz
xlat
leave
mov
inc
xchg
xchg
and
int
int3
cmp
pop
ret
cwtl
xchg
sahf
inc
daa
push
xchg
cmp
cmp
enter
rcrl
outsl
fnstsw
lahf
idivl
pop
insb
xlat
stos
xchg
add
arpl
or
push
add
push
mull
mov
shlb
mov
mov
cmpsb
scas
xor
fidivrs
pop
dec
lock
sub
outsb
adc
jne
loop
sbb
out
ljmp
lods
push
and
pop
scas
leave
leavew
adc
push
inc
leave
fnstcw
out
jo
and
test
leave
sub
in
mov
enter
imul
inc
add
fincstp
mov
lods
fsubrs
lock
add
jae
pop
in
cmpl
cmc
dec
cmp
jl
std
mov
lret
xchg
std
scas
dec
cmpsl
std
or
jp
push
inc
adc
paddb
push
xchg
dec
dec
fadds
rol
sub
jno
xchg
js
add
pop
in
mov
push
or
push
and
dec
cmp
shrl
cmp
pop
out
and
cwtl
push
adc
push
sahf
std
fisttps
int
rorl
popw
xor
int3
bound
cld
rolb
pop
lret
or
sub
xor
cmp
stos
insb
xor
or
lea
inc
mov
pop
out
push
les
sub
popa
cmp
in
cli
inc
inc
xchg
sub
pop
mov
push
repnz
xchg
vfrczpd
adc
xchg
or
or
cmp
leave
jecxz
je
sbb
sub
stos
stc
jne
in
sub
pop
adc
pop
pop
ret
xchg
cmc
or
xchg
subl
ret
sti
or
sub
pop
int3
add
sbb
popl
mov
xchg
out
adc
test
lcall
data16
pop
shll
inc
mov
sbb
loopne
pop
or
cltd
outsl
pop
cltd
sbb
pop
xchg
pop
dec
inc
arpl
movsb
mov
xchg
cmp
mov
arpl
xor
js
jbe
jle
jne
fwait
adc
sub
out
dec
int
dec
mov
push
cmc
pop
nop
push
pop
cmp
jb
fmul
cmp
sbb
pushf
or
lret
sti
ret
dec
push
js
in
popf
fsubrs
sub
out
aas
adc
xor
fldenv
pop
into
cmp
mov
or
sti
repnz
jmp
and
mov
pop
std
push
insb
ljmp
xchg
mov
xchg
add
shll
iret
sub
or
or
cli
adcb
mov
inc
push
xor
into
movsl
out
shlb
pop
mov
gs
out
mov
sub
sbb
and
mov
inc
rcrl
push
xchg
testl
aas
inc
mov
cmpsl
inc
push
mov
inc
pop
inc
testl
data16
gs
lds
pop
cmp
lahf
negb
xchg
ss
inc
sbb
hlt
movsl
cmp
dec
and
dec
ret
ret
push
ds
out
loopne
fcmovbe
push
push
sub
ljmp
mov
mov
adc
in
addr16
push
cld
outsl
imul
stos
cmp
test
sub
mov
jno
push
aaa
mov
xchg
in
inc
pushf
sub
movsb
push
mov
pop
popa
adc
mov
shr
mov
push
jmp
push
cmp
andl
fcompl
jl
push
int3
outsl
mov
in
loop
xor
les
pop
mov
fidivs
pop
sti
and
rcrl
sub
xchg
insl
loop
jecxz
pop
inc
enter
mov
dec
jae
call
mov
bound
aam
sub
pop
push
jb
fisubs
sti
mov
enter
and
jne
xor
in
inc
dec
ljmp
adc
adc
push
dec
pusha
repz
jl
dec
mov
rcrl
cmp
cs
add
call
sbbb
aam
xchg
push
jle
adc
je
jb
aas
mov
popf
or
js
imull
or
int3
int
sbb
jecxz
scas
repnz
pop
cmpsl
xchg
dec
gs
loop
daa
xchg
mov
mov
ficoms
sub
incl
es
fwait
test
cltd
pop
hlt
mov
inc
mov
ss
cld
pop
sbbb
mov
mov
call
mov
cmp
mov
mov
lahf
sub
shlb
xor
inc
lock
add
and
pusha
mov
aad
mov
repz
loope
bswap
and
mov
mov
mov
scas
sbb
and
cltd
les
adc
popf
mov
cwtl
mov
int3
pop
mov
mov
adc
cmp
mov
push
mov
push
imull
cld
lretw
and
jno
in
jo
insl
push
cmp
mov
xlat
pop
lcall
push
jbe
ljmp
mov
bound
cmp
xchg
aaa
adc
or
or
addb
cmpsl
aad
adc
push
pop
enter
add
outsl
push
pop
int
nop
ljmp
std
xor
sub
test
push
icebp
sbb
inc
push
cmp
cltd
std
dec
faddl
xchg
mov
data16
or
mov
shr
out
addr16
sbb
outsb
sub
mov
adc
or
daa
or
cmp
push
add
mov
cmp
inc
fistps
movl
push
mov
ret
fwait
ja
mov
xchg
movsb
popa
clc
jbe
xchg
xor
add
out
mov
gs
in
cli
and
sub
dec
insl
dec
cmp
sti
inc
pop
push
shll
and
inc
add
mov
jnp
lock
cmp
lods
lods
jbe
scas
addl
lret
cmp
xor
pop
xchg
cld
mov
xchg
repnz
sbb
add
lods
mov
mov
scas
sbb
pop
andb
lahf
fisubl
in
adc
rcll
cwtl
xchg
push
lcall
sahf
mov
cwtl
pop
dec
mov
cld
push
or
aam
call
jb
inc
fisttpll
iret
sbb
icebp
insl
fsubl
hlt
inc
pop
test
xchg
test
pop
adc
inc
lock
sub
mov
hlt
inc
mov
cmp
rcrb
lahf
mov
inc
in
test
cmp
sub
aam
fisttpl
cld
xchg
gs
adc
leave
test
xchg
push
daa
xor
cmp
mov
popa
push
xchg
add
mov
mov
sarl
push
add
xor
nop
mov
pop
lock
cmc
sbb
movsb
jnp
cmp
add
sti
subb
add
push
mov
das
xchg
mov
mov
bound
daa
xchg
cmp
leave
cmc
mov
cmp
push
sub
jns
fwait
and
or
mov
push
pusha
mov
sbb
lea
xorb
xor
jbe
testl
and
pop
repnz
lods
add
push
add
lds
sahf
inc
cld
lcall
ss
in
push
pop
scas
mov
je
out
cmp
cmp
lock
mov
xchg
adc
cmp
outsl
mov
outsb
shrb
enter
insl
sbb
xor
sub
mov
in
or
call
mov
xchg
cli
inc
push
sub
mov
lods
inc
mov
int
jne
adcb
xchg
clc
mov
in
xchg
imul
ljmp
pop
and
daa
rol
es
or
xchg
mov
lods
inc
mov
or
out
scas
add
xchg
add
test
loope
sti
mov
icebp
out
or
dec
and
jle
testl
ret
mov
pop
out
dec
out
imul
iret
xchg
jne
xor
test
jle
cmc
icebp
mov
mov
ffree
into
cmovs
mov
movsb
cmp
scas
ret
jmp
dec
in
mov
jmp
add
xor
adcb
lock
xchg
and
test
sub
sbb
cld
mov
cli
and
jp
hlt
jg
pop
or
outsb
adc
lods
mov
sbb
mov
cli
pop
pop
push
icebp
mov
jb
jmp
push
test
ret
fnstenv
jo
xchg
mov
fnstcw
push
xchg
or
xchg
sub
sbb
in
loope
inc
jg
cmp
pop
xchg
cs
adc
jecxz
add
jnp
xor
je
bound
cltd
push
sbb
ljmp
std
shlb
mov
sti
ret
lcall
ja
xor
mov
mov
loop
dec
jecxz
pop
test
lcall
add
cltd
pop
aaa
or
mov
scas
mov
lahf
xor
inc
mov
sub
mov
mov
int3
daa
cmp
adc
inc
test
and
fsubrl
jae
jns
add
out
push
cmpsl
fcoms
mov
xchg
mov
or
dec
sarl
popf
adc
popa
aaa
insl
push
inc
mov
xor
dec
push
jmp
rcrb
outsl
mov
xchg
dec
or
std
test
cmp
push
and
sub
repz
rclb
jmp
iret
sub
or
mov
rorl
outsl
push
or
aaa
dec
test
fdivrp
lcall
enter
xchg
mov
cmpsb
mov
mov
jg
add
xchg
call
dec
pushf
and
cmp
rsqrtps
and
imul
push
pop
xor
test
sub
aad
dec
test
mov
pop
nop
jmp
xor
or
jo
dec
lahf
add
shrb
aad
pop
mov
and
inc
pop
outsl
sti
inc
clc
dec
das
addr16
xor
sub
ja
dec
push
in
jle
dec
and
cmp
push
mov
sub
push
jb
out
xchg
mov
shll
shrb
mov
dec
cmp
xchg
mov
lcall
mov
outsb
fnstcw
push
dec
jle
mov
sub
addr16
jne
es
enter
inc
insl
xchg
add
shlb
js
testb
mov
mov
or
xchg
jl
xchg
push
jle
shlb
xchg
dec
sub
jg
mov
xlat
or
xchg
es
sub
jo
cwtl
sub
mov
add
mov
jle
push
mov
xor
inc
jo
jmp
and
pop
gs
and
stos
inc
pusha
xchg
jge
fldt
jnp
push
faddl
inc
cmp
inc
out
or
or
sub
sbb
bound
adc
mov
xchg
mov
pop
inc
dec
pop
jbe
inc
sbb
xor
jae
test
mov
mov
adc
fsub
pop
jcxz
xchg
aam
push
pop
loop
rcl
jo
gs
xor
mov
pop
sub
dec
mov
pusha
hlt
fistpll
push
adc
fstps
cltd
pushf
pop
lret
add
inc
mov
add
mov
push
cwtl
das
mov
sbb
das
sbb
dec
inc
pop
mov
lods
icebp
cmpl
mov
lods
ja
or
push
into
daa
decl
mov
add
js
filds
sbb
sbb
imul
icebp
mov
cltd
inc
loopne
nop
test
test
lret
in
test
rclb
and
jbe
mov
jge
shlb
inc
mov
add
inc
fwait
or
push
out
in
sbb
adc
cmp
pop
sahf
ret
ss
inc
ss
das
rclb
outsl
sarl
jnp
adc
jle
cli
pop
in
sbb
stos
add
sub
xor
into
cmc
imul
pop
nop
mov
dec
stos
verr
outsb
cmp
cwtl
sbb
call
call
pop
out
jae
and
icebp
cmc
in
and
jb
adc
xchg
test
dec
rep
mov
jo
cmpsb
jno
arpl
mov
cmp
add
xchg
jae
inc
fcmovne
fldl
les
cli
lods
and
mov
call
push
xchg
push
pop
inc
adc
sbb
pushl
scas
in
fimull
mov
sbb
scas
mov
sub
or
test
pop
cltd
and
xor
cld
dec
rol
jne
mov
je
cmp
loopne
inc
in
sbb
push
fs
or
mov
fcomps
aam
ss
pop
scas
mov
cltd
cmp
aaa
into
outsb
es
addr16
sub
and
repz
stos
popf
pop
es
imul
divl
mov
push
add
inc
cmp
iret
fisttpl
lret
lock
call
test
mov
adc
fisttpl
andl
inc
into
loope
dec
aam
jge
dec
repz
repz
fs
sub
sbbl
mov
dec
adc
loop
adc
cmpsl
cmp
les
adc
bound
xor
movsb
sarb
adc
xchg
nop
imul
sub
mov
pop
xor
push
jb
imul
pop
push
imull
push
mov
jg
or
jecxz
pop
or
imul
mov
sti
stos
in
sbbl
lods
xor
push
push
es
jp
fsts
test
dec
lds
movsb
jmp
and
xchg
pop
dec
lahf
xor
les
mov
int3
out
xchg
cmp
sarl
leave
pop
inc
mov
pop
outsb
fwait
popf
sti
jns
xchg
sub
push
out
jle
fnstenv
arpl
fisttpll
aam
cld
ss
out
sbb
cltd
aad
inc
nop
out
pusha
stos
inc
ss
push
sub
sbb
into
inc
xor
pop
sbb
xchg
lret
ret
fbld
add
or
and
inc
sarb
cltd
and
pop
pop
push
cmp
aas
xor
mov
inc
stos
or
leave
je
or
scas
lods
js
ja
test
push
call
rcrb
aaa
push
loope
lret
stos
mov
jns
push
inc
ds
data16
push
push
cmp
pop
lods
mov
xchg
out
les
lods
dec
out
sbb
icebp
sbb
mov
xor
dec
sub
cmp
out
loop
add
pop
push
inc
mov
lds
cmp
in
popf
and
enter
mov
nop
xchg
cmp
mov
jp
notb
icebp
push
inc
repnz
cs
ljmp
loope
in
movsb
cmp
arpl
dec
enter
stos
lds
fidivl
mov
fidivs
cmp
in
scas
fdivl
mov
fbstp
cmc
dec
sub
les
lds
inc
stc
cmp
out
cli
cmp
aad
mov
cmp
sbb
rep
xor
xor
insb
sbb
xlat
pop
lcall
jne
xor
or
sub
and
sbb
pop
mov
into
jne
and
pop
mov
aas
cmp
jo
pop
sub
int
dec
add
dec
popf
inc
pop
ret
mov
out
sbb
cmp
stc
loope
or
repz
cmp
addr16
sbbl
mov
jg
iret
mov
out
fiaddl
andb
jbe
mov
xchg
dec
jg
mov
pop
pop
lock
cmp
ss
fsubrp
cwtl
jmp
daa
mov
or
mov
sub
sbb
dec
mov
sub
cmp
ss
ja
xchg
loopne
pusha
popf
lea
outsb
or
jmp
mov
scas
jmp
std
pop
dec
ret
cmp
and
lea
cmp
in
sub
ja
or
arpl
jne
nop
mov
xchg
ret
fcomip
pop
in
ja
jno
lods
sarb
cmp
add
add
sbb
sub
jp
mov
orb
or
adc
sti
cwtl
mov
jle
ret
push
or
pop
push
push
pop
in
or
and
adc
rol
mov
ds
stos
or
inc
inc
test
dec
pop
adc
xchg
add
inc
bound
lret
aas
test
in
push
sub
mov
je
mov
loop
aad
push
inc
jg
dec
mov
push
pop
repz
jae
xchg
xor
adc
ret
push
fidivl
imul
and
jge
jno
adc
cmp
lahf
cmp
addr16
mov
mov
in
adc
arpl
outsb
fmuls
sahf
lea
and
addr16
push
and
cmpsl
inc
pop
ja
icebp
mov
adc
xor
mov
mov
xor
add
lea
or
fyl2x
leave
jl
xor
das
je
push
push
push
mov
orb
lahf
mov
call
dec
dec
dec
cli
vucomisd
outsb
sub
daa
jle
dec
mov
fs
hlt
ret
sarl
adc
inc
mov
sbb
out
std
dec
xchg
inc
mov
jge
shll
shrb
xor
std
inc
jbe
add
cwtl
sub
lret
adc
ds
cmp
icebp
mov
pop
push
out
mov
pop
lret
pop
sub
js
mov
xor
push
push
push
lds
aas
mov
cmp
fisubrs
fisubl
dec
out
mov
cwtl
adc
pop
jmp
jl
outsb
gs
sbb
cmpsl
insb
mov
mov
mov
xor
call
add
pop
xor
jmp
arpl
or
mov
mov
sbb
push
insb
inc
xor
adc
or
sub
vpcmpeqd
aaa
into
iret
fwait
inc
stc
mov
and
mov
rclb
sahf
push
std
xor
loopne
xchg
pop
inc
out
pop
test
pop
jp
enter
cwtl
sbb
dec
add
push
xchg
jle
icebp
daa
xor
lcall
mov
fidivrl
inc
or
repnz
dec
mov
sub
call
test
shll
outsb
dec
dec
jo
inc
lcall
and
stc
xor
push
cld
lds
aaa
mov
pop
outsb
shlb
sahf
icebp
mov
aas
mov
jo
push
push
jle
or
in
xor
cmp
xchg
mov
push
mov
and
jge
inc
shrl
add
mov
xchg
test
lret
out
dec
push
push
lret
pop
test
mov
cld
loop
fistps
inc
add
push
ljmp
jno
mov
or
notl
pop
mov
lcall
and
pop
aaa
adc
jecxz
mov
mov
out
mov
jne
in
push
in
lock
lcall
cmp
loop
mov
fucomp
jmp
sub
pop
outsb
jbe
pop
xlat
je
mov
movsb
outsl
mov
test
mov
push
jb
sbb
add
sbb
dec
cmp
pop
lods
push
loopne
mov
sub
fwait
orl
cmc
sub
mov
hlt
lcall
jp
cmp
mov
rcrl
push
adcl
mov
fiadds
scas
xchg
dec
aam
jg
or
out
adc
lea
mov
jp
shl
cmpsl
xchg
mov
shll
shrl
lds
or
mov
jecxz
data16
cwtl
mov
lret
mov
clc
add
shrl
pop
test
aad
pop
cmc
and
test
sbb
ret
sbb
sub
shll
or
cmp
xor
insl
xchg
mov
loopne
in
xchg
imul
lods
xchg
es
mov
pusha
push
hlt
shrb
jb
popf
addr16
pop
xor
rcrl
and
shr
rorl
je
cmp
jb
lds
aad
sub
and
jmp
mov
int
out
call
outsb
hlt
movsbl
adc
mov
cwtl
hlt
std
xchg
jg
xor
fisubs
sub
pop
fnsave
loop
fsubs
mov
cmp
pop
ret
daa
adc
enter
sti
xchg
xor
push
or
push
xchg
fsubrs
jbe
and
sub
pop
repnz
cmpsl
cmp
dec
push
pushf
pop
sub
and
add
jb
or
fsts
cmc
xor
pop
lds
cmpsb
and
fdivrs
pop
outsl
add
cmp
or
nop
pusha
testl
jle
xchg
inc
mov
mov
or
and
cmpsl
xor
ffreep
pushl
lcall
and
fbstp
xor
or
xor
xchg
or
push
mov
scas
leave
or
fmull
sti
stos
insl
dec
rorb
cli
dec
repz
inc
mov
in
and
xchg
push
mov
add
ss
mov
adc
inc
push
imul
xchg
mov
add
cmpsb
mov
mov
jecxz
inc
loope
out
pop
sbb
ds
lret
dec
mov
pop
sbb
jns
xchg
fs
fldcw
cmpsl
lds
dec
pusha
and
xor
xor
dec
cmpsb
ds
and
xchg
call
gs
add
xchg
sub
xor
jmp
loop
xor
psllq
xorl
mov
inc
mov
shrl
fstpt
add
jecxz
fsubr
aas
dec
or
pop
imul
inc
or
push
sbb
icebp
or
fs
mov
fld
inc
ret
and
in
jo
jl
loope
aam
test
rorl
pop
mov
inc
lcall
mov
pop
arpl
xchg
inc
pusha
idivl
and
insl
push
sub
ja
pop
pop
jae
add
jmp
addl
es
cwtl
xchg
jb
dec
mov
mov
inc
test
ret
xchg
jb
lock
jle
mov
in
stos
ds
or
pusha
xor
fwait
dec
cmp
rcrb
pop
push
clc
jnp
jge
cmp
gs
and
out
aad
call
faddp
jns
lea
insb
cmp
and
adc
push
dec
mov
push
shrb
mov
lock
dec
pop
cmp
and
xchg
shrb
icebp
mov
nop
mov
nop
mov
and
jge
jne
xor
jmp
aam
jo
pop
mov
dec
enter
shlb
dec
clc
or
int
add
and
jae
adc
pop
repnz
jno
sbb
jb
jnp
lods
pop
dec
mov
cmc
push
dec
outsb
pop
xor
xor
bound
and
fnstenv
xlat
push
add
cmp
or
jae
inc
pop
mov
shrl
sub
pop
popf
stc
cmp
pop
cmp
push
mov
jae
sbb
ret
in
push
sbb
mov
cmpl
adc
xchg
in
sbb
rcr
adc
mov
adc
ret
and
push
leave
ja
sub
adc
inc
push
hlt
bound
movsl
xor
and
cmpsl
cmp
xlat
stos
dec
pusha
add
cmp
dec
sbb
ficoml
ss
ret
fsubrs
jmp
les
sub
sbb
sub
das
std
sbb
loopne
inc
pop
mov
mov
popf
cwtl
pop
jmp
mov
outsl
jmp
shrb
jb
cltd
stos
xchg
sbb
jge
jp
mov
movsl
pop
adc
std
test
add
jnp
xlat
insl
adc
hlt
das
out
pop
jmp
xor
sbbl
lret
outsb
push
dec
and
xchg
xor
loopne
call
mov
xchg
jecxz
loop
rolb
arpl
fadd
jge
lock
and
stc
or
fidivs
lea
outsl
mov
add
mov
call
xor
sti
jbe
xor
jne
in
jno
cmpb
sbb
sbb
and
ret
in
pop
cmpsb
jnp
and
add
lcall
mov
xchg
sbb
int3
jg
mov
mov
ficoml
fisttpl
mov
lds
es
jne
ljmp
and
cmpsb
jns
inc
jmp
add
in
les
sbb
add
sbb
lods
push
rcr
test
and
dec
aad
mov
adc
pushf
fsub
mov
and
aas
dec
into
aas
nop
ss
aad
sbb
xchg
shll
dec
and
test
mov
loope
into
in
jl
icebp
or
sahf
add
jbe
and
xchg
xchg
push
in
dec
aam
or
push
or
xor
mov
pusha
nop
mov
popa
jns
cmp
nop
cmp
in
dec
fmull
rcrb
arpl
push
int3
stos
add
scas
imul
aaa
aad
pop
leave
adc
or
sub
adc
mov
jbe
int3
arpl
jg
push
sub
dec
xchg
jmp
orb
and
leave
lods
dec
and
lods
sub
sbb
mov
inc
cmp
fisubs
mov
es
and
in
pop
jbe
popa
mov
roll
je
icebp
insb
sub
les
test
aas
lock
jns
pop
mov
add
mov
rorb
cmpsb
pop
adc
dec
gs
cmp
out
daa
mov
mov
psubusw
cli
rcrl
add
dec
mov
mov
dec
cltd
aaa
xchg
push
std
sbb
push
decb
xchg
xchg
lds
es
xor
dec
add
cmpl
jmp
test
aas
insl
outsb
xchg
aas
lret
stos
mov
les
jecxz
jl
mov
mov
sbb
lods
push
cmp
inc
inc
xchg
lock
mov
insb
iret
lds
jae
in
repnz
xor
sub
lahf
sub
cmc
adc
dec
jg
xor
daa
test
jmp
call
out
fcmovnu
mov
and
loope
mov
mov
push
sbb
inc
movsb
sti
push
and
dec
push
xchg
jo
mov
mov
clc
or
add
and
psubd
mov
xchg
ret
cmp
jb
das
cmp
push
push
xchg
aas
mov
jl
daa
xchg
sub
test
mov
sub
adc
test
inc
sahf
shlb
sti
dec
fcompl
inc
jbe
adc
mov
fsts
test
pop
orl
pop
push
fiadds
mov
neg
cmc
or
outsb
add
les
sahf
js
rclb
mov
jbe
xor
std
fwait
outsl
pop
leave
pop
int3
addl
inc
jno
inc
add
add
mov
mov
add
sbb
cmp
jns
cmp
scas
dec
or
and
push
lea
jl
fucomi
jmp
dec
or
cmp
outsb
rclb
push
subb
sbb
sbb
mov
mov
jmp
xchg
stos
xchg
inc
flds
loope
ficoml
lds
pop
cld
xor
mov
fwait
cmp
pop
scas
inc
dec
arpl
cltd
cmp
dec
sbb
in
push
sbb
push
cmp
mov
mov
sbb
xchg
add
sbb
adc
test
and
repnz
jae
stos
pop
aaa
mov
mov
cltd
xor
push
sbbl
push
movsl
lahf
sbb
adc
xchg
mov
inc
hlt
or
stos
cmpl
inc
mov
jle
int
repz
or
dec
out
scas
or
enter
mov
pop
add
into
xor
imul
mov
push
out
test
adc
and
xchg
fs
js
add
xchg
dec
cwtl
fs
lcall
insl
in
test
lea
lcall
jecxz
addr16
mov
mov
inc
outsb
addr16
push
js
stos
inc
in
jge
mov
fcmovne
cmc
sahf
je
rclb
pop
adcl
adc
or
adc
inc
push
popf
mov
addr16
loopne
sub
repnz
fisttps
pop
sti
adc
fs
jne
sub
test
jne
cs
push
jecxz
aad
or
pop
out
dec
dec
decb
shrb
adc
cli
sub
push
je
dec
pop
inc
cwtl
xchg
adc
insl
xor
jp
fnstenv
jl
test
icebp
pop
inc
push
inc
enter
xchg
cmp
sbb
dec
mov
mov
bound
xchg
aad
mov
inc
in
lock
sub
int3
xchg
mov
inc
sbbl
insl
into
pop
les
mov
popa
in
rolb
dec
xlat
jge
mov
stc
arpl
pop
cmpsb
cli
or
outsl
inc
mov
ss
fldcw
or
test
fwait
or
or
cmp
mov
or
rcrl
dec
movsb
xor
push
cs
inc
or
cmp
jns
hlt
pop
hlt
and
ret
hlt
push
in
test
jle
push
test
mov
cmp
mov
test
add
fisttpll
aad
idiv
repz
notl
lods
sub
adcl
js
xor
jo
test
mov
fdivrl
dec
push
cmp
mov
int3
lret
into
or
cmp
fstl
subb
push
push
or
mov
fdivrs
aad
out
flds
ja
push
int
xlat
mov
fistps
data16
jl
icebp
add
sub
loop
add
dec
push
and
out
sub
or
and
cmpb
dec
ret
or
dec
pop
adc
shlb
rcll
pop
lock
orb
sbb
es
sub
mov
shl
pushf
in
loop,pt
add
pusha
add
sbb
pop
jb
shll
push
jno
je
add
pop
fisttpl
push
scas
in
add
sub
mov
jge
inc
adc
push
cmp
pusha
ret
sti
push
mov
test
add
fxch
or
in
jnp
shl
or
out
or
sub
clc
pop
lcall
and
and
jmp
sti
mov
sti
and
pop
mov
daa
adc
hlt
cmp
das
push
sti
pop
jmp
repnz
pop
pop
lahf
jmp
dec
sub
pop
imul
xchg
fs
sbb
les
sbb
jo
cld
inc
pop
jne
rcrl
movl
add
cli
jecxz
cmpsb
test
aaa
adc
popl
and
cmp
or
lods
push
inc
push
loope
outsb
xchg
orl
roll
adc
cs
pop
mov
jbe
push
cmp
sbbb
inc
pop
or
rcll
mov
adc
mov
fcomps
add
sub
push
shrl
les
inc
sbb
js
cld
mov
loope
mov
popa
adc
pop
cltd
push
add
xchg
out
dec
jg
test
pop
test
inc
push
les
pop
test
xor
fnstcw
clc
sarb
fsubr
dec
adc
pop
lock
in
cli
cltd
push
mov
pop
xor
in
insb
add
ljmp
test
scas
dec
mov
fcmovnbe
insb
mov
mov
jl
test
mov
data16
jb
mov
dec
sbb
add
mov
cmc
mov
add
and
or
dec
sbb
lea
xchg
es
cli
pop
rclb
pop
mov
xor
inc
cmp
pop
pushf
movsl
inc
sub
loope
lret
cmc
pop
mov
sti
mov
mov
sbb
ss
lea
add
fnsave
jnp
mov
enter
add
arpl
push
shrb
fwait
adc
in
dec
lcall
mov
cld
out
movsl
sti
push
shll
icebp
dec
cmp
cmpsb
in
subl
fwait
mov
lds
xchg
push
jmp
dec
and
sub
test
lret
scas
mov
push
sbb
sbb
push
jmp
pop
mov
mov
je
jne
rcl
ret
xchg
in
lcall
shlb
aas
pop
jmp
adc
addr16
dec
pop
lock
sbb
jno
mov
dec
sub
int
lahf
pop
ret
sbb
xchg
mov
adc
xlat
cwtl
xor
xchg
xchg
in
inc
lods
lret
dec
mov
push
pop
test
cmp
iret
popa
or
andl
dec
jmp
decb
add
stos
mov
icebp
jge
mov
pusha
fwait
push
ljmp
jno
es
daa
pop
int3
push
outsl
adc
fucomi
data16
imul
stos
cmp
push
out
xchg
cwtl
sub
imul
xchg
loop
cmc
jne
into
movsl
dec
sub
ds
clc
dec
dec
mov
rcrl
gs
sahf
mov
sub
mov
xchg
jg
repnz
inc
cld
dec
xchg
add
xor
jg
mov
out
xor
insl
add
add
cmp
movsl
jnp
pop
sbb
xor
icebp
dec
or
iret
pop
xchg
leave
cmpsb
les
stc
pop
jae
daa
xor
push
or
xchg
cmp
xor
add
or
je
in
mov
xchg
in
inc
leave
add
or
mov
jnp
sub
adcl
sub
push
mov
clc
pop
adc
rcl
imul
popa
fsubrl
leave
or
stc
sahf
inc
mov
outsb
sub
or
jecxz
jg
dec
add
or
rolb
jecxz
mov
mov
repnz
xor
jbe
dec
pop
push
jne
outsb
imul
orb
and
jbe
in
shl
mov
repnz
aas
lds
or
fildll
mov
xor
lods
fistpl
mov
pop
sub
testb
jno
jnp
lods
int
add
cld
out
sbb
lcall
xor
add
dec
ss
mov
xor
push
dec
and
xor
sbb
ret
imul
inc
adc
std
mov
decl
or
daa
mov
jge
push
movsl
mov
scas
ja
fimull
inc
js
jae
rol
mov
popa
mov
in
outsb
sbb
fucomip
pop
sbb
mov
repz
ds
call
ds
jb
jp
xchg
das
xchg
push
mov
les
repz
pop
jmp
ljmp
sti
and
jno
nop
inc
test
loope
adc
pushl
mov
leave
mov
jns
lods
adc
pop
movsb
xchg
add
shll
sbb
test
xchg
adc
mov
inc
jne
fbld
pop
xor
fld
add
insl
inc
cmc
mov
fdivp
push
out
jle
dec
pop
push
insl
aam
mov
out
pop
pusha
xchg
loope
cmp
in
xchg
xor
ljmp
pop
jbe
push
push
jnp
cmp
int3
xor
mov
sub
aam
jo
cs
pop
movsb
cmc
mov
push
sbb
out
cmp
mov
jo
sbbl
aaa
pop
mov
dec
daa
cmp
sbb
outsl
stos
pop
jbe
pop
js
lods
mov
repz
mov
test
leave
fiaddl
inc
iret
pop
mov
jecxz
mov
xorb
int
adcl
ficoms
aad
mov
fsubrs
add
mov
ds
out
insb
sbb
in
imul
dec
dec
push
mov
in
out
cmp
pushl
dec
loopne
cltd
fnstcw
popa
shll
jne
cli
lret
adc
dec
loope
out
add
cmp
jge
lahf
xor
es
lods
jp
adc
testl
ja
and
out
fiaddl
nop
cmpsl
push
insb
inc
xchg
shlb
cli
add
out
pusha
mov
cmp
cli
add
push
test
mov
cmp
fimull
insl
gs
adc
loope
and
push
inc
subl
out
jp
sbb
jecxz
jne
and
pop
gs
mov
cmp
nop
lret
inc
inc
shll
mov
clc
rorl
in
add
call
and
inc
xlat
iret
jecxz
adc
pop
inc
fisttpl
jmp
cmpsb
add
stc
xchg
mov
pop
stc
rcrb
inc
loopne
xchg
sub
dec
jmp
mov
fldpi
jecxz
dec
scas
and
dec
or
pop
jno
pusha
xchg
xchg
rcll
les
xchg
leave
and
loope
aad
xor
repz
mov
enter
jae
call
mov
sbb
xlat
movsl
jecxz
dec
jl
jmp
xlat
test
xchg
les
push
out
outsb
mov
pop
iret
mov
mov
fsubrs
pop
addr16
mov
cmpsl
dec
js
jmp
call
mov
outsb
das
push
mov
mov
mov
add
cs
and
push
stos
cmpsl
les
push
xor
lds
in
xor
repnz
jno
hlt
push
inc
cmp
rclb
push
push
movsl
cmp
mov
mov
mov
sbb
cs
aaa
mov
imul
aam
fcmovb
outsl
add
mulb
or
aam
pusha
in
pushf
leave
fstpt
das
inc
lret
xchg
icebp
or
xor
push
sbbl
daa
push
clc
push
lret
jg
push
push
loope
pop
scas
mov
adc
mov
mov
fnstenv
sbb
aam
mov
cmpsl
test
push
movsl
ljmp
cmpsl
sub
data16
stc
sub
in
jns
into
add
push
jmp
fucom
push
mov
jb
adc
xchg
sub
sbb
xchg
pop
cmp
dec
mov
jae
popa
cwtl
loopne
fsub
std
pop
or
or
imul
sub
add
xchg
mov
popf
cld
ds
ss
ss
in
into
push
idiv
pop
dec
loop
repz
jb
imul
dec
stc
popf
in
cltd
xor
in
daa
inc
lcall
fdivrl
pop
pop
icebp
xchg
xchg
mov
dec
jg
lea
imul
mov
sub
sar
xchg
test
jne
subb
aad
mov
xchg
mov
push
or
xlat
sbb
sub
cmp
hlt
cs
mov
jae
cmp
jg
push
inc
pusha
pop
lods
mov
ret
push
jo
pushf
cli
inc
lods
into
gs
dec
loop
repnz
jbe
lea
cmpsl
dec
cltd
jo
push
data16
pushf
xchg
jno
js
mov
mov
xchg
xchg
add
or
lock
mov
popf
fnsetpm(287
lret
mov
mov
mov
add
movl
sub
mov
push
imul
ljmp
popa
adc
loope
das
push
lods
out
inc
mov
call
aad
sub
in
mulb
stos
sub
xchg
dec
lock
repnz
neg
add
jo
les
push
mov
inc
xor
lock
stos
enter
cmp
add
sub
mov
dec
jo
cmp
cltd
cwtl
es
xor
xchg
sub
ja
push
xor
inc
xchg
in
fistps
lea
out
mov
repnz
pop
outsl
fisubs
mov
sub
icebp
push
adc
mov
out
or
mov
mov
hlt
jbe
and
push
rcrl
jae
mov
out
rcrl
jo
test
rorb
sbb
pop
pop
popa
subl
push
cmpsl
sbb
add
push
bound
dec
cmp
pop
rcll
fdivl
testl
mov
fsts
mov
and
pushf
fmul
xor
jns
lahf
out
mov
push
jo
cmp
jne
or
aam
int
lcall
cli
inc
fwait
imull
dec
jecxz
xchg
sbb
push
hlt
mov
push
daa
mov
cwtl
jle,pn
cs
jle
push
into
daa
and
xor
negl
movsb
pop
inc
sub
sti
mov
ss
fldenv
mov
mov
or
cmpsb
dec
add
cmpsb
jns
jle
movsl
sub
sar
xchg
bound
xor
jge
push
push
jnp
outsl
pop
popa
movsb
push
dec
pop
lods
idivb
pop
pop
adc
in
test
xchg
cltd
cmpsl
jecxz
jne
in
push
imul
cs
popa
mov
pop
sub
js
mov
mov
push
insb
push
gs
es
jne
loope
dec
in
into
cs
dec
mov
ja
or
dec
aam
cltd
leave
jecxz
xchg
pushf
stos
adc
fnstsw
adc
sarl
inc
lahf
daa
jb
adc
cwtl
xchg
cs
subb
push
or
or
adc
add
inc
call
and
xor
int
or
ret
mov
loop
ffreep
arpl
test
sbb
pop
test
outsl
mov
popf
pop
xor
aas
xor
rorl
test
push
out
insl
pop
adc
and
iret
mov
push
push
inc
gs
mov
pop
rorl
jae
fstps
adc
repnz
mov
mov
pop
push
faddp
jnp
xor
sbb
push
aad
pop
pop
sbb
outsl
cmp
inc
movsl
aas
mov
dec
pop
inc
scas
in
xchg
lock
dec
fwait
mov
fxch
jnp
jae
push
pop
cmp
dec
mov
fadd
and
cld
fisubl
pop
jg
and
dec
jmp
dec
push
jg
adc
sub
imul
rcr
filds
stc
and
jg
cmp
dec
dec
add
pop
push
cmp
outsb
add
pop
pop
in
arpl
xchg
xlat
xor
pop
stc
shrb
sub
sbb
push
test
pop
jp
mov
stc
jg
fnstenv
mov
mov
movsb
fdivs
pop
fildll
push
xchg
sahf
jmp
cld
ret
jge
scas
das
test
sub
insb
jl
sbb
mov
mov
fistps
push
sub
vsqrtpd
in
add
je
cmp
cmp
push
xor
and
inc
insb
mov
jmp
out
add
jmp
inc
pop
adc
ja
repz
xor
or
leave
bound
faddl
jg
pop
sub
test
les
leave
inc
pop
sub
sub
sbb
sub
dec
mov
sbb
pop
push
cmp
inc
incl
cmpsb
push
jmp
jne
jo
cltd
outsl
clc
test
or
out
cmp
arpl
dec
jns
fildl
lcall
mov
ljmp
std
or
js
sub
roll
dec
out
cmpsl
out
mov
mov
pop
mov
into
mov
cmpsl
ds
aam
imul
fs
mov
mov
mov
cwtl
fstpt
cwtl
addr16
cltd
cmpsl
arpl
mov
xor
mov
test
js
ret
test
pop
xchg
sbb
dec
pop
pop
into
xor
mov
inc
fmuls
or
push
push
sbb
push
mov
cmp
xchg
test
fadds
xchg
sub
int3
add
inc
scas
ds
cmpsl
pop
pop
ds
xor
stos
mov
xchg
push
test
push
mov
sarb
idiv
and
insb
pusha
inc
xlat
xchg
push
daa
lcall
dec
cmp
insl
sub
out
push
negb
cmpsl
mov
dec
lds
mov
in
shrb
xor
sarb
xor
fwait
popf
or
mov
stos
xor
aad
fstpt
cwtl
in
mov
push
mov
and
hlt
out
jbe
popa
repnz
fs
push
jne
cmpsl
and
stos
push
enter
cmp
jecxz
mov
mov
loope
push
rorl
pop
cmpsl
inc
push
mov
pop
in
xchg
daa
jns
insb
out
ja
imul
stc
jnp
cmp
enter
gs
sub
push
daa
mov
mov
fildll
push
sub
into
push
xor
orl
dec
movsl
inc
andl
add
push
jne
mov
mov
pop
bound
cmp
aam
pop
mov
std
outsb
std
push
loop
jg
sar
jg
sbb
cmp
or
adc
fsubr
nop
sbb
loop
pop
push
and
insl
in
ja
adc
sbb
mov
and
push
int
ljmp
push
test
push
movl
xor
test
cltd
cmpsl
ret
push
xchg
xor
jnp
dec
sahf
or
add
mov
inc
sub
mov
loope
jmp
test
test
jmp
jne,pt
adc
dec
xchg
dec
out
std
in
or
cmpsl
jo
push
shlb
inc
push
pop
pushf
ja
adc
xor
in
arpl
pop
sub
out
mov
adc
cmp
and
and
dec
push
test
or
inc
mov
movsl
stos
ret
bnd
ss
push
pop
adc
push
scas
push
mov
lret
ljmp
xor
push
cmpsb
ret
and
lret
push
int3
sub
test
mov
mov
or
shrb
or
inc
jecxz
mov
loopne
repz
mov
imul
pop
adc
repnz
aam
push
sbb
ss
idivl
shrl
and
or
notl
outsl
cltd
hlt
int3
jae
out
sti
aas
loopne
fwait
adc
xchg
xchg
mov
add
mov
mov
lcall
daa
fwait
scas
and
test
lods
cwtl
rcrl
inc
inc
inc
jae
mov
rcrb
add
dec
pop
sbb
mov
outsl
push
sbb
nop
inc
sbb
mov
and
cwtl
lea
testb
je
pop
mov
mov
jne
sub
add
mov
sbb
ljmp
lods
imul
mov
push
sbb
inc
sub
mov
cmp
loopne
dec
and
mov
or
jne
sbb
rcrb
out
fs
lods
inc
repz
and
cld
jp
sub
fs
call
or
sub
or
push
or
jbe,pn
fisttpll
insb
jle
incb
lcall
and
insb
leave
jae
scas
cmpsb
lods
imul
pushf
xor
add
jns
sbb
nop
popf
lods
ljmp
popf
lods
sub
jno
cs
stc
pop
clc
mov
daa
das
mov
mov
mov
imul
arpl
mov
dec
pop
adc
pop
or
int3
adc
push
outsl
ret
xor
cmc
and
push
or
cmp
mov
scas
and
jb
sbb
test
jne
mov
add
out
jg
mov
xor
out
mov
xor
test
scas
fnstenv
mov
lret
dec
pop
clc
push
in
fs
mov
in
adc
repz
mov
push
insl
sarb
stc
pop
ss
or
gs
inc
push
lds
in
shl
adc
rcrl
adc
sbb
dec
sbb
or
adc
adc
js
pushl
cmp
rol
and
idivb
popa
ror
or
mov
loop
sub
ret
pop
fdivr
adc
movb
jne
pop
addr16
scas
mov
out
cli
jmp
popa
add
in
jne
xchg
aam
loopne
cmp
inc
adc
jbe
popa
pand
shl
repnz
dec
mov
in
imul
pop
push
inc
adc
xchg
jg
inc
call
movsb
cmp
and
aad
dec
pop
ljmp
int3
or
call
int3
bound
shll
hlt
or
mov
cltd
dec
dec
dec
push
push
push
cmpsb
pop
pop
mov
or
dec
xorl
mov
je
subb
push
add
cwtl
das
aas
cmc
inc
mov
xlat
push
push
cmpsl
call
sub
mov
mov
xchg
mov
adc
jno
pop
repnz
call
xchg
pop
addr16
jb
or
mov
pushf
aaa
lahf
dec
lahf
mov
sbb
not
lret
mov
add
jae
movsb
rclb
cmp
mov
add
imul
xchg
fcomp
arpl
xchg
sti
incl
adc
test
pop
mov
inc
arpl
xchg
xchg
popa
test
cmpsl
xchg
xchg
jp
dec
mov
mov
xchg
mov
arpl
sbb
dec
mov
leave
jecxz
add
xor
push
ljmp
arpl
dec
into
std
roll
inc
or
scas
lcall
jbe
fwait
pop
in
xchg
push
gs
add
das
lret
mov
pop
cmc
adc
xchg
shlb
mov
ljmp
outsb
stos
dec
cltd
jbe
inc
dec
xchg
xchg
call
pusha
jnp
mov
jl
scas
scas
scas
ret
mov
aad
ret
jnp
ljmp
jl
les
inc
pop
cmp
mov
adc
push
mov
dec
fwait
jl
ja
or
xchg
dec
adc
dec
fdiv
dec
fbstp
push
fmuls
std
mov
sub
adc
push
adc
and
test
jp
xor
dec
inc
adcb
adc
in
inc
stc
mov
movsb
je
imul
roll
xchg
xor
aaa
rcrl
mov
fildll
stc
enter
popf
push
test
xchg
mov
push
adc
sbb
mov
and
cld
data16
shrl
lds
rorb
jno
and
sub
jne
daa
cmpsl
repnz
or
dec
enter
mov
inc
xchg
out
loopne
ficompl
fidivrs
daa
xchg
testl
xchg
dec
lret
shl
js
xor
call
add
push
std
gs
les
fnstsw
add
cmpsl
pop
xor
dec
insl
push
jg
mov
mov
aam
jbe
repz
pop
bound
imul
mov
jo
jne
dec
notl
sbbl
dec
xchg
enter
mov
jmp
or
sbb
cmp
pop
outsl
xchg
bound
lahf
ss
sub
xor
rcll
mov
in
cltd
idivl
shrb
inc
cmc
test
jae
cmp
sbb
xchg
mov
mov
xlat
and
das
and
repnz
mov
or
sub
dec
cs
pop
mov
cmp
fstl
mov
aaa
int
mov
and
repnz
mov
rclb
jb
sbb
jle
xchg
in
std
icebp
clc
nop
filds
add
jae
sbb
gs
pop
mov
mov
adc
dec
mov
pop
cld
shrl
mov
out
xchg
pusha
imul
leave
pop
cmp
mov
rorb
sti
xchg
cmp
pop
adc
fcomps
mov
icebp
xlat
jp
outsl
ret
jl
es
loope
mov
sbb
in
inc
and
xchg
in
addr16
and
shl
jo
adc
test
and
sub
add
mov
add
insl
lods
jle
iret
cmp
addr16
lcall
ja
mov
dec
test
add
xchg
out
add
dec
test
and
test
out
lods
inc
mov
or
push
sub
xor
aaa
or
in
add
ret
fadd
pop
inc
testl
pop
je
inc
cli
pushf
lock
xor
mov
data16
leave
sub
aam
dec
loopne
test
scas
adc
push
lock
and
in
or
mov
xlat
dec
ja
in
sbb
push
jmp
js
jo
inc
pop
dec
push
inc
add
mov
cmpsl
sbbb
inc
sub
jnp
leave
jle
clc
push
stos
jmp
daa
out
add
ja
xchg
jne
push
mov
pop
jg
call
mov
addr16
nop
xor
inc
push
nop
in
testb
jecxz
jno
inc
fnsave
push
pop
mov
sub
mov
and
fs
inc
pop
pop
sub
pushf
neg
adc
das
dec
inc
lods
aaa
out
in
rcl
and
lea
fs
es
or
jle
sub
sub
dec
mov
pop
test
push
xchg
rclb
repnz
or
sub
hlt
mov
xchg
lret
test
out
jnp
fwait
sub
ret
sbb
push
sbb
adc
movsb
pop
rorb
loopne
pop
iret
jg
mov
popa
repz
mov
fimuls
mov
je
jb
mov
inc
mov
mov
popf
add
lret
mov
scas
adc
shlb
fsubs
popf
lock
jg
fimuls
or
jle
mov
insb
out
adc
repnz
test
adcl
cmp
mov
call
mov
stos
and
xlat
movsl
xchg
mov
push
out
rol
les
mov
mov
into
call
mov
rclb
fldenv
and
hlt
push
lods
push
add
lea
push
or
mov
sbbb
mov
cmp
rcr
in
add
inc
loopne
loopne
clc
sub
add
mov
mov
and
jmp
pop
sbb
lret
cld
mov
popa
sbb
pop
pop
cmp
add
adc
pop
scas
sbb
jp
jecxz
enter
enter
out
std
cltd
inc
mov
push
pop
pushf
roll
pop
icebp
aad
add
js
or
adc
pop
cmp
outsb
mov
jle
inc
mov
leave
xchg
xchg
aaa
jo
cmp
push
popa
jns
test
lcall
and
pusha
fnstcw
inc
test
dec
loope
std
jmp
loope
into
cmpsb
rol
iret
sahf
stc
into
sub
mov
mov
stos
inc
jo
push
sar
sbb
dec
lret
sbb
xchg
push
lea
adc
mov
xchg
jo
cwtl
das
cmp
mov
test
jge
mov
shll
mov
cmp
aam
inc
mov
fcmovne
fists
nop
inc
scas
inc
cmpsb
lock
je
out
lods
or
sub
sub
xchg
mov
adc
outsb
movsb
sub
jmp
jb
jp
mov
or
seta
scas
mov
xlat
stc
ljmp
mov
rol
rcrb
pop
cltd
in
push
pop
sahf
cmp
dec
jecxz
pop
cmpsl
push
cmovnp
add
inc
fnstcw
add
dec
or
push
sbb
mov
repnz
inc
fdivr
not
mov
sbb
iret
imul
push
jmp
jno
icebp
lret
xor
push
mov
rclb
push
sbb
bound
repnz
data16
pop
out
fisttpl
push
add
sub
lds
ret
and
enter
jbe
jmp
xchg
enter
ss
fs
repz
xor
xchg
add
repnz
fwait
mov
invd
xchg
adc
sbb
sbb
mov
in
insl
sub
aad
fidivrs
push
add
incb
xor
cmp
rol
push
stos
adc
jmp
hlt
daa
ret
add
dec
movsb
sbb
andl
mov
call
int
cmp
aam
call
xchg
cs
push
mov
xlat
filds
cwtl
mov
fdivs
sbb
push
sahf
push
adc
aaa
into
mov
xchg
mov
jg
arpl
pop
ljmp
lret
shrl
and
adc
jmp
xchg
mov
data16
mov
mov
mov
lret
popa
es
daa
add
dec
call
dec
adc
sub
sbb
jo
call
cs
loopne
mov
xchg
xorb
dec
xchg
orl
sub
scas
pop
mov
lcall
sub
xchg
cmpsb
push
sbb
mov
mov
sti
xlat
lea
mov
fisubrs
test
add
out
push
jl
sbb
cmc
mov
fists
out
sbbb
inc
mov
lea
inc
mov
add
mov
repz
pop
or
add
movsl
jle
pop
aas
rcrb
or
cmp
pop
mov
or
je
mulb
ljmp
sub
ret
shl
push
jge
pop
mov
mov
insb
and
js
movsb
fsubrl
cmp
repnz
push
pop
inc
shlb
stos
ret
pop
fisttpl
sbb
aam
cmp
add
loope
add
jbe
in
mov
loope
add
call
jg
outsl
push
stos
lahf
jno
in
inc
cmp
or
inc
push
sub
or
out
les
negb
fisubl
pop
adc
add
lret
test
push
jp
stos
add
mov
les
pushf
mov
in
movsl
sub
std
das
sti
mull
mov
push
push
in
aas
inc
sti
mov
out
enter
sub
xchg
cli
mov
loopne
dec
xchg
mov
inc
jecxz
fwait
push
mov
jg
dec
inc
cs
push
icebp
pushf
push
ja
je
sub
das
add
xor
into
pushf
cmpsl
test
fdivrs
std
punpcklbw
dec
dec
pop
mov
dec
add
add
inc
fidivl
push
pop
sbb
sub
mov
lcall
pop
lahf
imul
pop
out
mov
es
jne
insl
lahf
pop
push
cmc
jnp
rclb
add
mov
fidivs
mov
shlb
sub
ror
lods
mov
into
xor
pop
lock
mov
push
add
or
cmp
mov
arpl
inc
fistl
mov
fnsave
or
fs
stos
and
jno
lret
sbb
and
mov
fwait
pop
jmp
dec
fidivrs
test
mov
leave
cld
xchg
sti
daa
pop
ljmp
lock
pop
sar
adcb
sbb
dec
pop
ret
pop
cmp
loopne
jae
test
xor
out
test
push
mov
or
imul
movsl
inc
scas
ret
pop
loopne
xorb
sub
cmpsl
lahf
stc
cmc
movsb
gs
push
pop
sub
mov
jo
mov
inc
xor
js
push
cltd
xchg
bound
mov
jne
in
jge
leave
fstpt
mov
jns
test
rcll
adc
cld
popa
cmc
mov
dec
pusha
inc
insb
adc
loop
das
push
out
adc
pop
arpl
nop
mov
pop
lea
or
jp
mov
faddl
mov
xor
aad
pusha
testl
jg
mov
dec
test
mov
out
xlat
data16
pop
jge
mulb
inc
hlt
cmp
pop
jns
xor
push
cmp
lods
loope
mov
pop
fdivp
add
jp
cmpsl
and
in
push
or
lds
sbb
sub
shlb
bnd
xchg
pop
cmp
cs
jge
arpl
sahf
push
out
cmp
sahf
loopne
outsb
inc
push
inc
call
imul
and
inc
dec
mov
iret
push
cli
mull
xchg
and
jecxz
mov
push
add
fdiv
pop
cld
out
cmpsl
xor
fstps
xchg
mov
rorb
lcall
movsb
xchg
out
loope
push
insl
jg
jecxz
sub
mov
mov
adc
xchg
fldl
ficomps
mov
fisttps
popf
insl
jbe
push
jb
xchg
out
aas
fistps
or
cltd
test
data16
mov
aas
mov
sahf
clc
fbstp
arpl
sub
ret
addb
mov
test
pop
ds
fistl
daa
repz
mov
xor
js
mov
popf
xchg
sub
icebp
popf
dec
mov
jae
cmp
inc
outsb
pop
jmp
arpl
xchg
and
test
sbb
lock
or
orl
stc
lcall
test
gs
cmp
sbb
or
aaa
jge
jo
cs
cli
xchg
ja
in
xor
call
movsl
pop
mov
cmp
cmp
mov
sub
dec
xchg
imul
push
scas
push
es
jae
or
xchg
ret
fbstp
mov
bndstx
lahf
xor
mov
push
call
lea
mov
or
lahf
xor
idivb
test
lret
xchg
mov
xchg
pop
and
push
sarl
scas
dec
xchg
xor
pusha
les
insb
sub
negl
fcompl
call
in
jl
push
jne
pop
xor
mov
movsl
xor
movsb
mov
pop
xchg
inc
fs
sbb
int
push
dec
cmp
mov
xchg
in
fstps
pushf
pop
mov
dec
mov
sbb
jmp
push
pop
xchg
pop
loop
sub
and
pop
lods
push
jns
addb
pop
and
mov
jnp
aas
aad
subl
std
loope
sbb
xor
cs
lret
add
mov
dec
inc
pop
idiv
leave
pusha
sub
mov
jnp
jmp
call
sub
iret
inc
ret
mov
jne
xchg
jae
jb
out
mov
adc
hlt
mov
sbb
rcr
cmp
xchg
fs
push
sti
es
xor
or
sub
pop
adc
mov
fsubrs
push
test
mov
and
out
xor
adc
mov
or
xor
xchg
call
push
movsl
std
push
dec
test
pushf
leave
das
xor
xor
push
push
popf
iret
mov
movsb
ret
pushf
and
into
in
push
ds
scas
bound
mov
pop
push
xor
in
jge
divb
mov
shll
rolb
cmp
mov
fdivr
push
jmp
icebp
insb
dec
xor
mov
lahf
push
imul
jle
push
popf
push
jl
push
sarl
scas
lds
lods
das
and
loop
outsl
pop
cltd
std
mov
rol
lahf
loope
call
mov
in
cmp
pop
fwait
leave
int
lret
pop
add
repz
mov
ret
outsb
inc
test
push
jecxz
jecxz
das
in
out
xor
inc
out
cmp
cmp
fidivrs
lods
mov
mov
aad
sbb
xchg
xchg
dec
in
cltd
jp
lret
push
cwtl
decb
iret
sar
popa
mov
dec
jmp
fcmovbe
ret
dec
fsubrl
push
loopne
jp
mov
sbb
aaa
int
sbb
push
lahf
pop
dec
fimull
ljmp
orb
call
mov
shll
syscall
int3
cvttps2pi
stos
inc
bound
leave
int
xchg
jg
adcl
in
mov
mov
or
mov
movsl
sbb
adc
cmp
lock
cmp
adc
leave
int
dec
sub
inc
out
dec
sbb
mov
and
sub
sbb
mov
decl
aam
xchg
mov
sub
dec
std
mov
and
fcoms
jno
cmp
xor
bswap
mov
jnp
into
icebp
mov
sub
mov
outsl
out
in
lds
inc
adc
jnp
aad
js
or
idiv
in
sbb
mov
push
mov
add
mov
push
hlt
int3
sbb
movsl
mov
cmp
sub
xchg
ds
repnz
cs
mov
popl
es
pop
cmc
shll
and
jl
mov
push
adcb
jle
andps
nop
jge
xchg
popa
sub
ds
out
jg
cmp
cmp
pop
xor
lret
hlt
dec
je
sti
sahf
adc
or
stc
and
and
xchg
pop
pop
loop
dec
fwait
sub
push
cmpsl
pusha
and
insl
movsb
pop
inc
fisttpll
pop
adc
add
mov
addl
fimull
scas
popa
clc
fists
adcb
jg
xchg
in
icebp
xchg
pop
cmp
fsts
jb
sub
das
hlt
mov
inc
shr
lea
jg
or
mov
jnp
loop
pop
dec
sub
les
xchg
sub
jle
xchg
mov
push
pop
int
lods
sarl
fwait
bound
cmpsl
pop
inc
push
rol
dec
lret
push
insb
jle
in
rcrb
cmp
mov
frstor
decb
rcll
popa
mov
enter
daa
ljmp
or
aam
test
insl
push
int
ljmp
scas
das
mov
iret
push
sbb
adc
stos
mov
push
xchg
mov
test
sub
bound
inc
hlt
mov
sbb
cmp
lret
clc
stos
jmp
pop
sbb
std
or
or
add
movsb
adc
pop
inc
cmpl
xor
and
cmp
push
cld
aam
sub
ds
xor
iret
mov
and
xor
mov
inc
push
fisttpll
scas
and
loopne
mov
or
inc
std
cli
cmpsb
icebp
mov
cli
xchg
jmp
xorb
pop
fs
inc
mov
adc
das
cmp
mov
pop
rcrb
fdiv
loope
push
mov
mov
dec
aad
dec
jb
sub
mov
xor
in
clc
add
dec
icebp
popf
imul
sub
inc
fcomps
cs
adc
pop
adc
mov
fdivr
adc
dec
mov
lahf
pop
cmp
cmc
aad
lods
inc
xchg
sub
jmp
push
sub
sbbb
push
ja
dec
ds
jae
je
cli
mov
push
dec
mov
or
dec
outsb
inc
push
and
add
xchg
xchg
js
sbb
push
sbb
imul
cmpsl
xor
fsubrl
das
inc
pop
push
xor
mov
push
sti
rcrl
stos
jle
add
fidivrs
fst
test
mov
fsubp
dec
das
mov
push
sahf
clc
and
push
gs
je
jge
fdivs
pop
mov
sahf
mov
ss
add
lods
add
push
les
jns
or
imul
sti
mov
cmp
adc
sbb
xchg
push
hlt
jne
das
dec
jbe
mov
push
cmpsl
mov
mov
xchg
outsb
popa
jl
pop
lcall
cmp
mov
pop
iret
push
mov
aas
dec
sahf
jae
cltd
pmulhuw
add
cmp
sub
movsl
pop
out
xchg
mov
push
jecxz
xor
adc
in
inc
add
fwait
lahf
xchg
and
mov
test
jle
je
or
scas
bswap
insl
movb
aaa
or
lret
dec
cmpsb
pop
xor
push
inc
lods
out
inc
loop
mov
sbb
and
ljmp
pop
xor
or
repnz
pop
xchg
sti
push
jecxz
dec
cmpsb
out
xlat
sub
repz
mov
in
sbb
in
inc
rcl
imul
pop
int
test
inc
pushf
or
jg
clc
mov
jg
pop
sub
mov
adc
xchg
jns
aaa
or
lcall
repz
and
push
sub
dec
push
stos
mov
shrb
mov
sbb
movl
cmpb
or
dec
and
scas
pop
and
cmp
scas
cwtl
mov
mov
ja
cmc
leave
in
pop
adc
rorb
mov
call
adc
insb
jo
pop
lea
and
sti
dec
rclb
dec
stos
mov
sub
jb
sbb
jbe
lcall
jne
cmp
jb
cmp
pop
dec
out
sub
fsubrl
jecxz
cltd
std
int
adc
mov
and
adc
xor
mov
push
jecxz
xchg
repz
repz
mov
rcrb
pop
in
fists
cs
js
xor
jb
dec
movsb
add
adc
sub
imul
test
mov
jecxz
sbb
sub
mov
and
xlat
lds
rcl
or
and
mov
insb
lds
xchg
dec
movsl
in
pop
outsl
les
dec
mov
or
in
inc
xor
sbbl
int3
and
fsubl
lods
test
bsf
jl
sbb
cli
imulb
addr16
mov
fstpl
into
sbb
ret
adc
mov
stos
sub
repz
ds
mov
inc
fistpl
dec
data16
jbe
cmp
mov
sub
gs
mov
std
insb
jl
push
jmp
loop
inc
push
out
dec
inc
and
xlat
shl
mov
aaa
and
cmp
ja
cmc
mov
iret
adc
and
xor
mov
pop
jecxz
jbe
icebp
mov
rorl
scas
imul
pop
fnstsw
stos
test
or
xor
dec
in
sbb
xor
imulb
dec
shl
jb
push
cwtl
add
pop
cwtl
gs
cs
stc
push
sub
mov
test
rclb
adc
adc
jne
popa
test
sbb
pop
je
clc
lret
push
jns
xchg
call
or
scas
mov
out
inc
xchg
sub
mov
or
jo
bound
xchg
mov
inc
mov
push
cmp
pop
pop
sbb
lock
pop
or
pusha
mov
dec
mov
jb
shll
xor
aaa
into
out
mov
push
in
mov
xchg
pop
fstpl
jecxz
pusha
lret
jae
add
mov
mov
cmp
sub
call
and
mov
push
out
cs
jge
and
cmp
push
add
ljmp
imul
lret
fwait
dec
add
mov
scas
fistpll
mov
sub
xlat
lods
aad
in
test
hlt
addr16
and
push
fdivrs
pop
hlt
xchg
aad
dec
adc
imulb
shll
mov
xchg
out
mov
jge
xchg
xchg
sub
sub
cld
push
add
fnsave
mov
push
push
int
pop
fwait
xchg
jo
dec
mov
into
andl
pop
cwtl
das
lock
aas
mov
xchg
mov
in
stc
nop
sub
inc
imul
cmp
nop
mov
xlat
mov
mov
clc
shrl
mov
mov
repnz
jp
mov
push
stos
sbb
nopl
aam
mov
rorb
inc
arpl
and
add
scas
and
ret
fidivl
std
in
insb
mov
jl
pop
pop
sahf
dec
dec
add
xchg
sbb
adc
xchg
mov
jnp
icebp
loope,pt
push
movsl
pusha
cmc
ss
xor
xchg
insb
dec
aaa
sahf
in
repnz
push
mov
ret
jp
fs
insl
add
test
mov
pop
out
sbb
pop
addb
shl
push
ds
jmp
pop
outsb
push
ret
mov
xor
fs
test
xlat
in
leave
sbb
ljmp
jg
je
arpl
scas
out
mov
mov
push
jne
inc
lds
clc
loop
dec
xor
inc
cmp
cld
pop
mov
scas
mov
add
mov
fisttpll
out
pushf
iret
gs
test
pusha
mov
lock
cmpsb
add
lret
sub
movsb
jmp
push
out
mov
outsl
push
dec
jle
push
fs
cmp
push
aam
jl
ljmp
stos
fnstenv
jecxz
mov
stos
sbb
ret
pop
mov
pop
loopne
mov
mov
test
stc
jecxz
sub
rcr
sti
jp
repnz
mov
mov
push
ds
lahf
stc
cmp
push
in
cmpsb
repnz
mov
sub
jp
insl
stos
dec
iret
and
mov
imul
adc
mov
jge
cs
out
in
add
scas
jo
mov
push
xchg
mov
aaa
jne
push
iret
pop
aam
inc
push
adc
scas
test
push
stos
stc
lea
mov
rcr
lock
lcall
and
xor
push
stc
cmc
pop
sub
sub
push
out
test
add
sbb
pop
rcrb
sbb
dec
rcll
ds
push
jo
pop
push
xchg
cmpsl
ds
xchg
sbb
dec
jns
push
sub
pusha
stos
test
sti
push
std
inc
jns
dec
scas
sub
mov
mov
and
xchg
mov
xchg
popf
adc
inc
inc
call
testb
cmc
out
rcrl
fsubr
jb
dec
pop
mov
stos
and
out
mov
xchg
daa
idivb
divl
dec
mov
jp
add
adc
in
scas
in
je
jl
jg
mov
xchg
jbe
fwait
xor
jp
std
xchg
nop
scas
xlat
mov
and
fwait
lea
inc
push
repz
lods
pop
mov
fwait
sub
push
out
stos
jne
jmp
mov
ret
xor
pop
icebp
lock
in
rcl
js
jo
pop
jae
xchg
repz
rclb
test
pop
sti
jbe
lods
das
dec
lods
cmp
dec
push
lods
pop
xor
or
cs
jbe
sub
lds
rorl
rorl
jb
mov
adcb
shll
inc
data16
jle
xor
stos
jnp
cs
dec
add
and
or
or
jmp
movsl
cmp
mov
inc
int
dec
mov
lock
jno
and
arpl
cmp
sub
dec
inc
push
cli
fidivl
or
mov
dec
jb
test
cli
jbe
push
test
xchg
dec
and
pushf
lock
cmp
pushf
jg
cmpsb
sub
je
lcall
inc
rolb
mov
pop
lcall
mov
fidivrs
mov
adc
in
je
dec
mov
jno
mov
adc
sbb
rclb
bound
jbe
ror
mov
cmpsl
dec
rclb
into
loop
mov
cwtl
enter
xchg
out
bound
sub
call
int3
fdiv
mov
out
repnz
mov
xchg
in
pop
adc
lea
aam
lcall
lcall
mov
imulb
addr16
mov
add
adc
xchg
xor
jmp
lods
pop
aaa
pop
pop
pushf
mov
jl
fdivs
out
call
adc
mov
js
mov
fsub
jle
push
cmc
xchg
pop
push
add
xor
negl
ss
dec
js
jnp
cltd
aaa
xchg
imul
jo
and
and
test
inc
data16
cltd
shr
push
cmp
and
filds
or
stos
fdivs
pop
jns
int3
cmp
and
add
xchg
in
test
inc
adc
std
mov
xor
jmp
into
fdivrl
mov
or
mov
push
xor
call
or
es
dec
iret
cs
sub
jo
push
adc
ds
ss
fstl
loope
repz
pop
es
push
and
jo
inc
adc
das
sbb
nop
dec
push
scas
xchg
cmpsb
inc
mov
sub
xchg
cmp
test
jmp
push
inc
loope
out
test
aas
in
fs
cwtl
mov
sbbb
fucomip
test
lock
fstpl
aad
sub
popf
es
lods
cs
fimuls
insb
sub
mov
popa
movsl
mov
add
jno
jae
pop
sahf
push
js
sbb
scas
xchg
sarb
dec
in
imul
mov
in
xor
mov
xchg
fstps
lret
add
loope
fnsave
push
mov
ss
enter
inc
pop
xchg
push
push
hlt
mov
arpl
cmp
arpl
rorl
xchg
pop
mov
popf
jmp
jecxz
mov
adc
pop
xchg
nop
mov
gs
push
xchg
or
aas
lea
sbb
jge
movsb
daa
mov
add
sbb
push
cwtl
cmp
stc
lock
adc
jmp
ret
and
dec
scas
fwait
dec
and
xor
cmpsb
mov
insl
mov
mov
dec
mov
aad
xor
or
ficompl
xchg
jnp
je
mov
adc
in
stos
sub
push
loope
jno
and
cli
inc
popa
xor
cwtl
fdivr
mov
adcb
xchg
xor
mov
sbb
sbb
push
adc
iret
cld
in
sbb
incb
fists
ss
inc
loop
and
sub
pop
push
lds
dec
push
scas
pop
cmp
inc
xchg
add
test
add
jb
or
jg
and
xlat
xchg
jmp
mov
or
ljmp
sti
add
or
pop
push
pop
cmpb
movsb
dec
loopne
mov
aam
inc
and
pop
adc
flds
add
testb
and
sub
outsb
ss
mov
and
daa
test
sub
add
xchg
mov
out
cs
jns
stos
mov
lock
subb
jecxz
mov
jb
call
cmp
cmp
addr16
push
cltd
and
scas
out
jmp
rcr
cltd
mov
dec
gs
xlat
adc
cmc
js
cmp
xchg
stos
add
xchg
pop
popa
sbbl
aaa
or
pusha
add
or
scas
pop
icebp
insb
push
inc
jp
xchg
dec
mov
cmc
mov
mov
xchg
push
or
sbb
rcrl
sub
mov
addl
fildll
mov
mov
jae
sbb
faddl
lds
dec
rol
int3
mov
lahf
adc
ss
sti
stos
pop
cmc
aam
jmp
mov
cmp
sbb
add
cmp
jns
pop
movsl
cmp
xor
ret
jp
jns
test
fwait
push
sbb
test
lahf
ss
pop
rcrl
push
push
test
sbb
push
icebp
mov
mov
fadd
jnp
and
push
insl
shll
lods
ds
push
xor
mov
lret
or
in
int
call
clc
daa
ljmp
push
xor
adc
imul
cmp
pop
cltd
clc
int
aad
push
mov
push
mov
pop
cli
cmp
fistpll
jne
in
jnp
lahf
mov
xor
xchg
mov
sbb
mov
ud2
pop
xor
popa
lret
filds
jle
inc
and
jae
bnd
mov
jg
and
rcr
test
mov
sbb
xor
in
mov
enter
cli
test
inc
mov
push
adc
push
add
cs
push
or
lcall
push
pop
je
mov
jg
sub
sbb
sar
xchg
mov
sbb
lret
fwait
lret
mov
nop
sbb
cmp
aam
push
popf
ficomps
std
add
jo
or
adc
imul
inc
shl
pop
repnz
xor
push
and
and
lock
cld
or
arpl
pop
inc
mov
mov
stc
sahf
cmp
fistps
call
mov
mov
out
pushl
scas
mov
jg
sub
mov
xor
sbbl
aaa
mov
cmpsb
jo
test
sbb
pusha
adc
or
pop
cmc
imul
mov
push
push
add
fisubrs
sahf
xor
push
push
or
les
sahf
lods
je
fisubrl
jecxz
scas
xchg
jo
mov
lahf
gs
movsb
sahf
xchg
sub
sub
dec
mov
xchg
imul
sbb
mov
ret
arpl
mov
fistpl
movsb
xor
lods
jl
mov
mov
mov
mov
push
add
sub
add
lods
adc
fidivrs
enter
and
jo
jecxz
bnd
dec
aaa
lret
lods
inc
push
fsubl
lds
ja
shrb
cltd
andb
pop
test
pop
lods
sbb
jo
adc
popa
in
mov
jle
lahf
scas
hlt
pop
dec
jno
mov
call
sbb
dec
jecxz
shl
shll
xchg
daa
sub
pop
and
push
sbb
out
jl
insb
scas
ljmp
dec
add
add
ret
inc
push
cmpsb
cmpps
lret
sbb
add
adc
pop
cmp
int
mov
fsubr
jp
pusha
jns
mov
mov
roll
mov
out
dec
push
inc
rclb
add
fidivs
fisttpll
mov
in
movsl
popa
clc
test
adc
ss
xchg
stos
fnstsw
xorb
test
out
xor
mov
aad
add
fcoms
sbb
lea
inc
jecxz
mov
sub
mov
xchg
dec
cmp
js
cmpb
repz
fdivl
das
nop
out
aad
mov
adc
test
arpl
push
jbe
arpl
out
bound
js
out
insl
adc
sub
cld
xchg
cmpl
enter
mov
jl
leave
pop
xchg
pop
jnp
lods
push
xor
fmuls
push
jmp
sbb
pusha
fwait
inc
push
int
push
mov
pusha
mov
movsl
mov
test
mov
mov
pusha
mov
dec
inc
jecxz
outsl
incb
cmp
mov
mov
lods
mov
xor
fisubrs
push
or
or
outsb
mull
repnz
xor
ret
pop
add
sub
shrl
xor
push
dec
daa
adc
sahf
ja
mov
push
push
or
data16
cmpsl
sbb
xor
daa
scas
lods
or
lods
sarb
xchg
jne
mov
mull
adc
dec
fsubrl
jno
ja
fwait
sub
sub
fcmovnb
xchg
dec
ret
push
mov
add
sbb
fisttps
sub
lock
arpl
sarb
lock
mov
mov
jnp
idivl
pop
and
out
fsubrp
in
outsl
insl
aaa
push
rdtsc
push
xor
xlat
sub
or
fdivl
lret
jg
je
aaa
lret
and
lock
push
lret
add
mov
ja
xor
aad
pop
in
ja
cmpsb
test
lods
repz
and
mov
mov
dec
mov
pop
push
loop
insl
add
xchg
addl
lods
dec
dec
imul
jg
dec
and
jle
lret
adc
stos
jae
pusha
add
aas
dec
lds
and
movsb
and
popf
sub
sbb
sbb
cmp
jnp
mov
adc
jl
imul
fldl
lahf
sti
mov
call
cmp
push
fcompl
test
pop
mov
add
and
imul
iret
sbb
cmp
jne
pop
fistpll
pop
dec
mov
cld
cmpl
pop
jg
mov
lods
fsubl
xor
mov
mov
sti
lock
jp
enter
mov
push
pop
and
cmpsl
in
ja
pusha
xchg
push
xor
mov
ss
cltd
xor
add
push
and
cli
sub
inc
inc
jbe
sbb
jecxz
test
fstpl
lock
lods
int
aam
jg
insl
std
adc
daa
lret
bound
out
loopne
fistpll
sub
fwait
mov
arpl
fsub
mov
aam
lret
xor
aam
mov
rol
daa
movsb
jnp
rclb
mov
xchg
outsl
stos
bound
cmp
push
in
test
sbb
test
js
dec
mov
aas
pop
orl
lds
stos
dec
fmull
movd
std
cltd
pop
and
sub
adc
dec
xchg
mov
lahf
add
mov
popf
rcll
out
add
jle
xchg
stc
nop
or
xchg
cmp
xor
dec
loope
push
mov
test
push
jmp
adcl
lods
or
dec
add
shld
xchg
test
push
push
rcrl
sti
out
cmp
mov
leave
xor
jg
cmpsb
lea
ret
cmpl
dec
les
pop
jmp
lods
pop
pop
add
adc
xor
pop
or
ds
xchg
sub
jg
mov
in
push
out
cmp
xchg
clc
lods
outsb
add
cwtl
shlb
cmp
push
sarl
test
sbb
je
cmp
mov
sbb
or
sbb
pop
inc
fcoms
mov
add
push
fnstsw
sub
xchg
inc
test
sbb
jb
out
fsub
cmp
mov
filds
ret
rorb
mov
mov
mov
pop
and
std
lods
adc
fsts
test
push
testb
mov
stos
in
xchg
mov
lds
dec
and
or
mov
pop
loop
in
loopne
sub
add
dec
mov
jns
shrl
xchg
cld
mov
bnd
out
sbb
pop
jp
popa
mov
gs
push
xchg
call
pop
mov
popf
sub
sahf
push
lcall
cwtl
test
xor
clc
jle
test
xor
lcall
dec
ljmp
pop
mov
jp
push
jo
fistl
jne
lods
and
mov
lcall
in
pop
push
adcb
mov
rolb
fidivrl
pusha
scas
cmpsb
data16
lods
inc
or
lret
cmpsl
popa
add
add
push
out
add
js
divl
lock
incb
xor
push
aad
xchg
sbb
stos
fbstp
stos
mov
mov
aaa
adcl
hlt
mov
add
lcall
mov
ffreep
lret
data16
xchg
movzbl
pop
add
cltd
ja
loop
or
xchg
push
lock
pop
lahf
into
adc
and
or
in
xchg
loope
jmp
push
sbb
jmp
or
sub
sub
xor
popa
hlt
fcmovu
xchg
inc
in
adcb
sarl
fcompl
lods
inc
dec
dec
xchg
dec
test
or
pop
and
hlt
inc
lcall
cli
lret
gs
les
cmpsb
cmp
or
push
daa
mov
lret
inc
clc
pop
or
mov
xor
test
xchg
and
popa
mov
sar
andl
mov
push
pop
adc
daa
jno
xchg
add
imul
lock
mov
mov
dec
sub
mov
xchg
push
sub
loope
je
clc
pushf
sbbb
das
xchg
sub
imul
out
imul
jge
dec
aaa
lea
dec
hlt
adc
roll
lea
loopne
pop
and
xchg
jmp
shrb
add
adc
xor
outsl
call
inc
or
fiaddl
mov
fmulp
fnstcw
jle
sub
imul
sbb
dec
mov
push
or
xrelease
scas
leave
pushf
pop
xchg
mov
mov
adcl
jns
cwtl
mov
mov
inc
or
arpl
jecxz
loop
adc
adc
xor
fucomp
mov
and
mov
dec
adc
imull
add
sub
fwait
jle
dec
and
orb
jne
in
stos
ja
out
dec
fildll
mov
nop
mov
and
mov
inc
loopne
sbbl
icebp
push
daa
push
sbb
jnp
sarl
out
mov
sub
dec
mov
mov
inc
outsb
repnz
sbb
stos
imul
pop
mov
jne
in
push
dec
jp
pop
nop
push
pop
adc
cmp
add
fcmove
arpl
xchg
adc
gs
xchg
lahf
mov
add
cmp
aad
or
in
jmp
add
mov
push
add
and
stos
cs
push
icebp
cmpb
test
cld
push
xor
push
push
arpl
je
lahf
push
jbe
jmp
push
sbb
mov
mov
adc
jp
mov
ret
xor
out
dec
fwait
dec
sub
inc
xchg
out
add
roll
gs
xor
pop
and
jmp
sbb
andl
xchg
dec
and
pop
sbb
jg
jp
int3
sbb
sbbb
icebp
xchg
jp
ds
add
cmp
mov
sub
lret
jne
mov
xor
aam
mov
popa
lds
lahf
in
mov
out
add
push
xchg
repnz
and
cmpsl
hlt
push
and
out
test
sub
xor
jle
fs
dec
mov
or
bound
loope
test
mov
dec
mov
jecxz
insl
test
cmc
cli
pop
mov
mov
mov
cld
sbb
leave
jno
jo
pop
adc
sub
cmp
push
loop
xchg
push
imul
pop
addr16
aas
push
movsl
add
adc
mov
scas
cmp
adc
add
mov
xchg
les
cmc
inc
pushf
scas
cs
sbb
shll
mov
mov
pop
sbb
outsl
dec
and
pop
sub
xchg
inc
lcall
mov
dec
fistl
mov
and
push
js
lea
shlb
loope
fsub
in
push
in
push
inc
fdivl
mov
xchg
dec
fsubrl
lods
add
pop
imul
out
dec
dec
xor
pusha
push
or
lock
push
mov
add
inc
test
fisttpl
ret
sbb
or
test
ficomps
dec
loope
cmp
cwtl
outsl
add
sbb
dec
pop
inc
addb
dec
shrl
fisubl
or
jmp
push
mov
movsb
sbb
mov
iret
lock
out
cmc
cmpsl
cmp
jne
movsl
test
dec
ds
mov
pop
ss
xchg
adc
dec
scas
leave
xor
mov
mov
orb
es
out
pop
testl
les
adc
adcb
les
and
test
bswap
xchg
pop
imul
sbb
fstl
ja
movsl
in
pop
daa
fwait
into
push
cltd
shlb
clc
fbld
clc
cmp
int
jmp
call
int
outsl
sarb
montmul
cmpsb
cmpb
mov
aad
mov
out
adc
cwtl
stos
or
dec
pop
push
jg
mov
inc
xlat
pop
mov
sahf
sub
xchg
add
and
push
nop
bnd
xorb
fwait
inc
cli
fdivrs
adc
sub
and
out
or
jb
push
sub
mov
mov
and
sub
sub
pop
scas
pop
and
andb
push
fldenv
popf
sbb
mov
pusha
das
push
lcall
sbb
pusha
sub
push
mov
and
out
adc
in
push
mov
mov
rol
add
adc
test
xor
addl
or
icebp
xor
jmp
mov
dec
or
pop
sub
lods
mov
jecxz
xchg
pop
pop
cmc
mov
jl
scas
push
pop
adc
sbb
inc
pop
xchg
cmpsl
mov
loop
loope
sbb
push
lds
jno
mov
sub
ss
idiv
push
pop
cmc
adc
adc
sti
rcrl
mov
jg
sbb
sbbl
mov
jp
jmp
sbb
cmp
inc
fsubs
jo
out
insl
into
pop
clc
in
orl
dec
dec
or
pusha
nop
daa
xchg
roll
lret
les
mov
pusha
xor
push
push
cli
insb
add
seta
jl
or
testl
mov
hlt
cltd
cmp
rcll
xchg
dec
out
sub
push
int
cmp
push
mov
push
fs
int3
lret
add
or
mov
into
xor
cmp
fsincos
js
cmpsb
jns
cltd
sbb
loopne
jnp
ljmp
test
dec
fnstsw
mov
mov
dec
jge
cmp
cmp
roll
loop
push
enter
dec
dec
sbb
test
mov
xchg
xchg
scas
mov
test
imul
pop
pop
pop
inc
cwtl
jp
aad
jns
pop
fbld
add
push
montmul
cmpsb
inc
adc
adc
scas
test
das
lods
sbb
ret
in
mov
loope
sbb
rcrl
or
adcl
dec
cmp
mov
fidivrs
sbb
ficomps
gs
xor
pop
jmp
enter
cltd
pop
push
ja
mov
scas
inc
shll
arpl
mov
push
out
sub
repz
pop
lcall
dec
scas
inc
adc
popa
je
orl
ficoms
lods
iret
mov
je
xor
xlat
scas
mov
in
mov
and
adc
dec
adc
dec
mov
push
pop
std
cmp
sbb
ret
mov
ja
push
adc
xchg
add
imul
adcb
ret
pop
ja
sub
lock
pop
mov
sbb
xchg
or
add
mov
scas
inc
ja
imul
or
jnp
pop
inc
push
sub
and
scas
nop
insl
movsl
dec
adc
inc
lcall
movsb
jmp
rol
mov
pop
mov
aam
cli
push
cmp
arpl
mov
lret
dec
add
loop
jnp
outsb
lods
sbb
add
xchg
pop
mov
jle
sub
jmp
xchg
pop
addr16
pop
movsb
les
testb
std
rcll
xchg
jecxz
les
cmp
in
stos
popf
jl
test
xchg
sub
mov
mov
xorb
je
xchg
dec
or
mov
push
repnz
shl
and
std
ja
cmp
jp
add
inc
push
push
dec
pop
inc
xchg
out
rolb
adc
jge
insl
push
mov
cmc
jge
adc
mov
sub
inc
scas
sti
mov
lods
push
push
push
loope
mov
xor
ja
xor
and
mov
push
aam
movsl
mov
jbe
lock
inc
and
jmp
mov
movsb
in
repz
pmulhuw
dec
movsb
jge,pn
jge
cmp
mov
sti
enter
xlat
adc
sub
jmp
hlt
jg
jnp
adc
sub
mov
fwait
sub
mov
pop
cmc
addr16
xor
aas
jecxz
fwait
mov
lock
outsl
loopne
adc
mov
cmp
adc
inc
je
add
fsubrp
mov
hlt
lret
vmovupd
add
xlat
aas
ljmp
xor
push
aam
jno
js
stos
fwait
or
add
push
stos
mov
insl
xor
sbbb
fistl
pusha
sti
gs
lcall
stos
jb
test
push
andb
jnp
xchg
sbb
int3
daa
sbb
arpl
loop
aaa
fldcw
dec
in
loop
cmpsl
int
or
decb
repnz
push
lcall
and
loop
subl
imul
cmp
jnp
mov
sbb
mov
imul
xchg
mov
dec
outsb
loop
adc
inc
call
std
outsb
sbb
jnp
sar
in
mov
imul
mov
in
std
adc
scas
test
rorb
sbb
mov
jne
mov
aas
repnz
js
clc
adc
in
jne
jle
iret
mov
insb
mov
fadds
and
sub
jmp
das
sahf
and
cmc
xchg
outsl
add
rcll
lds
and
mov
push
cmp
sahf
insl
mov
into
gs
inc
xlat
jns
in
test
lcall
jle
push
jmp
cmc
scas
mov
inc
dec
out
ja
sbb
insl
loopne
push
out
inc
cmp
ja
sbb
dec
in
ja
mov
hlt
out
loop
inc
sbb
mov
cmc
push
mov
rcrl
test
push
sbb
fstl
cs
push
ljmp
jno
dec
ret
subl
fwait
je
dec
nop
jb
ret
fldenv
fcoms
arpl
push
lods
xchg
inc
pop
fiaddl
xchg
mov
pop
enter
sub
dec
sbb
inc
inc
cmp
bound
push
push
pusha
js
subb
xchg
mov
leave
mov
mov
xor
cli
shr
and
dec
aaa
pushf
sub
pop
jmp
xchg
sub
jle
xchg
mov
cmp
bnd
shl
cltd
pop
lods
movsl
mov
imul
mov
shlb
inc
pop
inc
fxtract
adc
popa
call
and
xchg
adc
mov
js
fldenv
xchg
dec
insl
lret
addr16
fdivl
push
cli
adc
jae
or
bound
adc
loopne
aas
inc
push
cli
and
adc
cltd
or
repnz
push
xor
sti
sbb
std
lcall
in
clc
rcrl
adc
push
add
mov
cwtl
pop
cli
and
orps
or
xchg
cmpb
jno
nop
pop
sbbl
mov
je
jno
ljmp
andl
inc
in
insb
xchg
mov
mov
mov
js
dec
mov
rolb
insb
mov
test
mov
adc
pushf
cmc
pop
repz
mov
stos
sub
dec
mov
xchg
cmp
xor
mov
push
push
or
push
in
pushf
xor
push
adc
sarb
adc
idivl
mov
mov
cwtl
das
jb
dec
pop
repnz
add
jnp
int
nop
gs
push
test
mov
jg
push
mov
test
dec
ficoms
push
outsb
adc
ja
xor
clc
xchg
in
xchg
cwtl
sbb
addr16
mov
js
enter
rcrb
arpl
jno
push
push
cmp
das
negb
jno
mov
in
adc
inc
inc
out
mov
jmp
jp
and
jno
cli
push
pushf
lcall
pusha
aas
and
xchg
cmpsb
cmp
push
js
movsb
cs
fbstp
mov
pushf
add
push
in
or
cltd
mov
test
rcll
inc
push
testl
mov
fnsave
mov
les
std
sbb
push
out
or
inc
sub
push
pop
mov
jae
xchg
orl
les
adc
pop
inc
mov
xchg
sub
lods
fsubl
dec
dec
mov
cmp
scas
cmp
incb
leave
jns
jl
jmp
pop
out
in
xchg
ret
imul
mov
mov
xor
mov
adcl
jns
mov
shlb
dec
rol
rcll
insl
pop
outsl
stc
lret
in
or
sub
aas
add
push
and
adc
jmp
xchg
mov
cli
jge
rcrb
hlt
mov
pop
push
outsb
sbb
cmc
ret
mov
repz
adcl
xor
add
decb
test
or
imul
imul
mov
jp
stc
sahf
js
pop
ss
xorb
aad
dec
gs
mov
incb
int3
pop
pop
ret
adc
push
out
cmp
out
mul
jmp
pop
cmc
xor
pop
inc
jmp
aaa
and
jno
jmp
faddl
fidivs
cmp
dec
pop
jne
cwtl
jg
xchg
mov
add
cli
rorl
dec
push
rcrb
xorb
xchg
push
pop
imul
sub
out
mov
or
inc
outsl
and
in
hlt
xchg
and
fs
and
shrb
cltd
xor
fldz
jns
int3
sub
and
sti
xchg
iret
ret
pop
xor
xor
fnsave
or
mov
xchg
pushl
loope
pop
daa
sti
les
ret
data16
int3
fnsave
pop
popa
mov
not
sub
sub
test
sbb
lret
push
test
call
lods
xchg
jae
fdivr
arpl
push
push
out
daa
mov
addl
loop
dec
push
imul
push
or
gs
jle
push
cmp
lock
fcmovne
popa
xor
sub
popa
jnp
jl
push
dec
popa
daa
inc
xchg
insl
fsubs
dec
mov
xor
leave
cmc
mov
cmp
dec
out
mov
fistl
push
rol
add
loope
hlt
dec
adc
into
and
mov
aas
sbb
push
fstpl
cmpb
mov
adc
out
pop
je
mov
jnp
and
pop
jno
repz
and
inc
push
cmpsl
incl
ss
sahf
or
pop
ljmp
xchg
mov
adcb
js
mov
scas
stc
popf
xorl
popf
lods
sbb
jno
addr16
flds
cs
mov
mov
fdivr
test
fistpll
and
in
pop
lock
xchg
icebp
mov
shrb
int3
shlb
sbb
ds
mov
inc
out
in
test
lret
lret
xchg
icebp
sbb
imul
push
sub
fs
mov
jle
mov
fnstsw
add
mov
mov
in
inc
push
pop
mov
popa
mov
add
mov
xchg
mov
fnsave
jp
sub
mov
push
jne
and
push
push
mov
popa
int
rclb
stos
jne
lods
fmulp
mov
clc
sahf
jp
inc
pushf
imul
imul
rorb
es
daa
mov
loope
push
das
cmc
arpl
ss
jl
xchg
scas
push
fnstenv
int
stos
mov
lods
rsm
sbb
jl
jne
aad
dec
in
das
mov
insb
fisttpl
sahf
nop
sbb
addr16
fildl
std
jp
mov
pop
push
stos
clc
cmp
fbstp
test
jo
jbe
sbb
xorl
les
fnstcw
ror
fisubs
fs
cmpsb
mov
add
in
xor
data16
jg
cli
push
je
loope
dec
or
fs
rcll
int
xchg
lods
mov
pop
imul
nop
xor
nop
xchg
loop
data16
ljmp
fwait
and
xchg
push
mov
sbb
outsl
out
add
cmp
and
repnz
adc
shll
mov
jbe
pop
sub
icebp
or
add
pop
push
inc
fsts
push
jb
or
imul
dec
cmpsl
mov
sbb
sbb
adc
push
bound
cmpsl
in
add
push
leave
js
jo
pop
lock
adc
outsl
pop
ljmp
mov
sub
insl
fistl
mov
imul
xchg
sahf
xor
mov
add
pop
pusha
ja
xchg
or
cwtl
test
mov
and
lds
out
add
inc
cmp
mov
adc
shrl
mov
cmp
mov
and
xlat
mov
jecxz
push
test
xor
push
and
scas
out
adc
lahf
testl
cmpsb
imul
jmp
or
imul
fdiv
negb
sbb
ss
xor
js
cmp
dec
jle
loop
sub
cli
adc
sbb
fdiv
dec
scas
push
cmp
test
ljmp
jg
in
mov
xchg
push
je
push
mov
mov
push
jns
xchg
js
sbb
ljmp
in
lahf
imulb
xchg
xor
and
repnz
dec
dec
xor
fs
loopne
jl
lods
pop
push
pusha
sub
push
sub
rorl
sub
push
mov
popl
movsb
push
daa
popa
jo
jmp
add
ret
push
fnstsw
in
test
std
aas
out
pop
or
call
test
nop
and
dec
scas
lret
push
repz
xchg
pushf
sbb
movsl
cmp
hlt
pop
ds
stos
outsl
out
out
sub
lods
cmpsb
test
sbb
push
mov
push
or
jb
leave
popf
lret
sarl
jg
add
pop
jae
push
dec
cld
lods
xchg
data16
out
jmp
or
jbe
xor
insb
daa
cmp
push
pop
sbb
or
sbb
pusha
mov
xchg
mov
mov
dec
xchg
test
sub
add
dec
lahf
and
inc
mov
fidivrs
pop
sar
inc
test
in
fnsave
dec
lds
insl
cmp
imul
jle
inc
or
and
lcall
sub
inc
or
loopne
inc
pop
repz
or
xchg
sub
negl
cmpl
mov
add
lcall
mov
push
pop
daa
outsb
adc
das
fidivl
or
hlt
lcall
inc
mov
inc
xchg
fists
call
leave
addr16
mov
into
sahf
lea
out
rcr
popf
insb
adc
movzwl
and
out
popl
add
add
jno
mov
sbb
ret
jmp
push
mov
fcompl
or
push
out
push
cld
rol
jne
cmpsb
cmpsb
inc
sahf
loop
fwait
mov
ds
sub
or
es
or
xor
xsha256
cmpsb
push
push
fs
mov
inc
push
repnz
arpl
or
push
or
les
test
cmpsl
pushf
push
daa
dec
xchg
pop
mov
out
scas
fidivrl
sbb
add
repz
xchg
push
push
roll
sbb
jecxz
ds
fdiv
into
cs
repz
loopne
test
ret
cmpsb
pop
mov
push
shlb
and
mov
inc
or
aam
cli
shll
leave
out
mov
mov
popf
jo
mov
call
add
pop
jae
loope
mov
sub
xlat
sub
out
cmc
mov
xor
sbb
jge
mov
xchg
lds
popa
or
rcll
jl
add
jae
xlat
outsb
or
mov
shll
addr16
cmpsw
inc
push
flds
js
jge
out
test
hlt
fidivrl
fisubs
ljmp
frstor
out
xor
pop
push
sahf
subl
cmp
stos
xchg
lcall
sbb
mov
cmp
mov
pop
add
jbe
call
or
shl
add
loop
push
push
or
sahf
stos
iret
ja
cmp
mov
cli
jnp
fs
cwtl
loop
rorl
imul
addr16
or
dec
jns
jo
sbb
dec
jo
inc
dec
cmp
pop
outsb
mov
loopne
dec
pushf
add
outsb
sbb
adc
ljmp
cmp
push
adc
mov
push
cmp
divb
pop
sbb
mov
push
mov
sbb
cmp
cmc
popf
inc
inc
mov
sbb
sbb
dec
popf
pop
mov
loope
xchg
pushf
push
popl
mov
xor
cmp
cli
push
jmp
cmp
inc
xchg
daa
pushf
pop
out
int
add
push
pop
repnz
xor
mov
sbb
insb
xchg
sub
ds
lods
pop
mov
xchg
out
push
popf
or
add
shll
mov
xchg
test
loop
or
mov
adc
jecxz
cmp
mov
test
jecxz
adc
add
add
add
cmp
cmp
xchg
sbb
lea
xor
js
fmulp
das
or
mov
add
push
and
ljmp
std
adc
fmuls
test
add
xsha1
cmpsb
or
popa
cltd
movsb
inc
ficompl
adc
and
xchg
pop
sub
repz
mov
js
pushf
xchg
insl
aam
pop
scas
xchg
scas
dec
xor
addr16
xor
mov
sub
cmp
leave
movsb
mov
aam
mov
aaa
std
loope
daa
push
insb
jae
cs
sub
xchg
fidivs
stc
shr
insl
sub
cmp
jo
xchg
pop
call
push
les
int
push
leave
hlt
enter
imul
and
test
inc
add
orl
sub
cli
jo
mov
push
testl
pusha
aam
in
jge
stos
lods
icebp
jge
mov
fistps
inc
jge
mov
xchg
sahf
fnstenv
push
mov
das
adc
sbb
ss
fsubr
push
nop
sub
test
lret
and
xchg
test
dec
push
inc
fcomps
push
test
ljmp
xor
cli
mov
sub
cltd
and
mov
ret
xchg
mov
mov
dec
dec
add
out
jno
pop
hlt
sbb
sub
jo
sub
dec
push
dec
popf
insb
and
push
shll
lea
pushf
test
pop
jg
pop
hlt
mov
aad
pushf
cli
mov
cltd
std
cmpsb
aam
movsl
sbb
xor
fadds
pushf
cli
hlt
cmp
sbb
inc
lret
out
cmp
jb
int3
or
cmp
push
ffree
pushf
xchg
jno
jb
fildl
cli
xor
popf
iretw
adc
movsl
scas
lock
and
or
stc
nop
ss
repnz
lret
ds
mov
sub
dec
adc
mov
mov
mov
jae
fimull
add
sub
cltd
and
dec
jecxz
mov
pop
push
or
mov
adc
stc
popf
popa
or
nop
test
push
sahf
pusha
leave
repnz
out
or
jb
flds
mov
push
sub
mov
in
leave
pop
addl
xchg
fldt
mov
int
add
popa
cltd
cmpsl
les
pmaddwd
mov
dec
rcrl
repnz
negl
push
xor
push
xlat
outsb
jo
xchg
in
mov
and
mov
test
pop
psrad
cmpsb
mov
sbb
ss
stos
xchg
mov
xor
fucom
add
add
sbbl
sub
add
aaa
pusha
outsl
push
lods
cmc
inc
fidivs
push
in
arpl
idivl
das
mov
movsl
iret
mov
in
push
stos
lea
das
adc
mov
stc
popf
movsl
imul
dec
or
add
inc
and
cmp
mov
ret
jl
setne
dec
pop
push
insl
fwait
aas
mov
dec
push
insb
jnp
arpl
adc
and
mov
js
lea
ja
dec
out
add
adc
cltd
add
xchg
or
dec
stos
lcall
outsl
aas
push
push
ss
add
mov
cmp
loope
jmp
sub
ds
iret
or
test
mov
fucomp
inc
jns
sub
mov
fstl
xchg
inc
aam
fcomps
mov
mov
ljmp
pop
mov
mov
xor
fwait
jl
jno
jne
and
inc
cmp
jbe
in
imul
jp
pop
movsb
cmp
rol
mov
mov
mov
jmp
sbb
cli
jmp
xor
jg
bound
mov
push
dec
ret
fbstp
out
and
in
dec
and
cli
mov
and
xor
jns
dec
jns,pn
xor
rcrb
pop
nop
dec
adc
push
cmpsb
xchg
xchg
and
or
aad
dec
test
mov
xor
pop
mov
xchg
cmpsl
mov
cmp
das
cmp
std
jmp
mov
mov
inc
popf
stos
arpl
add
mov
cmc
and
push
push
call
adc
out
sbb
je
mov
or
xchg
lock
and
imul
vmovupd
sub
adcb
or
fildll
add
movsl
ss
sub
data16
xor
pusha
adc
es
fildl
adc
xor
push
fst
in
cs
push
mov
lcall
cltd
dec
cmp
data16
imul
test
mov
mov
pop
add
push
rcll
in
cmp
fdivs
dec
jns
adc
or
sbb
insb
iret
andl
push
aad
scas
xchg
stc
fldt
xor
and
jbe
lds
jns
dec
rol
popa
xor
push
mov
lods
add
orb
clc
jo
jb
jle
and
xchg
add
repnz
and
xor
ljmp
leave
cmp
and
inc
data16
mul
negb
adc
jno
jnp
lcall
pop
push
daa
fwait
pop
pop
jmp
cltd
xor
jne
and
lods
lcall
sub
push
inc
cmp
mov
xlat
pusha
mov
rclb
in
rol
sbb
out
jb
push
inc
insb
cmc
jb
aad
inc
dec
mov
aam
jmp
mov
int
jge
hlt
les
mov
out
cld
mov
dec
call
kandw
jmp
outsb
push
stos
jbe
or
into
cmp
push
jno
scas
int
subl
lds
ret
divl
or
push
sahf
xor
mov
push
aas
or
mov
icebp
in
inc
pushl
aam
and
xor
sti
aas
mov
imul
fimull
cli
or
dec
rcll
cltd
lock
out
lahf
call
cld
cmc
movsl
cmpsl
mov
pop
js
scas
xchg
gs
shr
les
icebp
mov
adcb
loop
or
sub
ror
dec
enter
jno
and
fld
mov
ljmp
lea
lret
movsl
std
out
fnstcw
mov
imul
repnz
and
push
push
and
adc
xor
add
inc
sub
and
test
aam
adc
dec
dec
and
stos
push
jb
rclb
loope
in
int3
adc
fs
aam
xchg
fbld
lret
and
outsl
inc
pop
mov
fsubrs
mov
ja
add
leave
movsb
jb
xchg
pusha
sbb
fimuls
fmull
cmp
insb
mov
test
jge
mov
mov
inc
jg
out
cs
sub
dec
arpl
push
mov
stos
aam
enter
xchg
loopne
lret
push
and
cmpsl
clc
sarl
mov
stos
cld
jp
fldenv
push
mov
cmp
mov
pop
fwait
pop
lcall
pop
sbb
mov
sahf
mov
aad
addr16
push
cmpsb
mov
xchg
sub
adcl
sub
jp
clc
sbb
or
adc
add
xor
out
mov
jg
cld
inc
jno
outsb
stos
push
mov
fs
mov
arpl
cmp
jge
stc
pusha
orl
and
jg
dec
stos
jbe
cmp
cmp
pop
jmp
jnp
mov
out
aam
shlb
or
add
jle
dec
xchg
nop
jns
or
dec
mov
lock
xchg
mov
xchg
cmp
es
test
mov
test
pusha
pop
sbb
push
sub
movsl
ret
sbb
dec
dec
sbb
in
popf
insb
cmp
sbb
mov
mulb
inc
pop
lods
mov
arpl
inc
cwtl
aas
popa
dec
pop
push
and
xchg
aad
flds
and
inc
push
sub
stos
loopne
xchg
or
add
adc
pop
xlat
push
adcl
jl
mov
xchg
add
adc
es
in
or
dec
fsubl
mov
pop
sbb
jg
dec
mov
mov
sbb
pop
imul
xlat
mov
or
inc
daa
push
push
or
std
dec
movsb
sbb
mov
rcl
jp
data16
dec
xlat
aad
loop
xchg
and
inc
push
pushf
mov
lret
jge
cmp
clc
pop
test
mov
mov
xchg
mov
pop
mov
test
orl
test
imul
xor
xor
outsb
jp
scas
sub
mov
arpl
sub
and
ja
stos
test
mov
and
or
dec
push
lds
adc
pop
leave
outsl
addr16
mov
mov
outsb
sub
pop
jecxz
and
imul
mov
sahf
movsl
icebp
xchg
push
xchg
adc
rol
filds
sbb
test
int3
imul
sub
sbb
mov
mov
cld
rorb
sub
mov
xor
addb
mov
sarl
roll
cmp
cmpsb
jmp
std
pop
dec
loopne
sbb
shl
push
mov
jnp
test
lahf
push
add
cmp
add
imul
fwait
xor
inc
fs
fldenv
or
call
mov
lret
js
enter
or
bound
insb
lss
pop
pop
test
in
mov
rolb
aad
clc
into
sub
lds
int
scas
data16
je
ja
mov
jne
jmp
insl
add
mov
xor
adcl
jmp
push
xlat
inc
movsb
xchg
mov
lds
push
sub
int3
fsts
pop
out
sub
push
jmp
mov
push
mov
sub
inc
ret
mov
rcrl
sbbb
add
lods
push
xchg
lock
sub
pusha
mov
push
and
jb
sub
sarl
sbb
lcall
xchg
sub
fists
mov
fldpi
cli
xchg
sbb
mov
pop
mov
push
cmp
lret
mov
setno
aaa
dec
xor
or
sub
and
ja
push
fwait
xchg
adc
xchg
sub
fcmovnb
mov
push
sbbl
or
pop
add
mov
mov
sub
adc
fwait
pushl
paddsb
dec
push
data16
xor
mov
mov
push
arpl
cmp
add
xchg
je
imul
hlt
pop
pop
jmp
cmp
mov
dec
shll
inc
ds
inc
xchg
inc
loope
or
push
mov
ljmp
call
bound
mov
and
pop
mov
xorl
sub
jp
dec
jp
in
cmp
ja
test
fwait
ss
sarl
cli
sub
out
sti
adc
inc
cwtl
push
adc
and
cmp
cmp
mov
mov
mov
out
in
stos
pop
test
mov
cmp
add
arpl
mov
std
jb
lods
repz
test
mov
add
pop
lea
xor
aam
subb
add
mov
repnz
dec
and
shll
cli
aad
pop
dec
inc
mov
mov
push
dec
inc
repz
fistps
add
popa
es
or
ret
dec
cmp
sub
inc
sbb
cli
mov
xchg
je
xchg
sar
xchg
clc
mov
jne
sahf
pusha
pop
cmp
aaa
rcll
push
sbb
loop
popa
sbb
call
ljmp
xor
xchg
ljmp
inc
xlat
dec
je
adc
mov
fnstenv
xchg
dec
jle
into
popl
fcoml
push
std
dec
mov
aaa
js
je
outsb
sbb
adc
adc
lods
pusha
mov
inc
shrb
insb
shlb
jg
ds
lahf
xchg
sbb
imul
mov
das
cmp
lahf
ss
jns
push
es
int
xchg
cli
sub
add
xchg
push
sahf
repnz
inc
xchg
mov
push
adc
icebp
jmp
inc
int
xor
lea
imul
out
dec
adc
xchg
daa
push
int3
pusha
mov
push
fldt
sahf
add
ljmp
movsb
nop
dec
add
imulb
ja
mov
adc
mov
push
cmp
inc
addb
iret
push
push
jb
fs
xchg
adc
je
push
mov
data16
bound
jge
cltd
mov
sub
jge
xchg
gs
std
mov
bound
imulb
xchg
jne
push
add
int
lds
jecxz
cmpl
jmp
or
movsb
cltd
push
and
mov
incl
adc
scas
and
mov
adcl
iret
lcall
imul
pop
push
push
push
add
mov
icebp
fsts
iret
adc
int
in
add
mov
sbb
xor
test
enter
popa
lods
mov
out
lods
pop
sub
aas
adc
add
cmp
test
out
dec
mov
dec
dec
or
mov
ljmp
pop
scas
inc
mov
pop
psubd
daa
or
outsb
mov
jge
and
gs
loope
add
sub
inc
stos
sti
fwait
pop
inc
into
mov
shll
fildll
sbb
fwait
push
mov
cmp
jl
mulb
inc
enter
jae
and
fidivrs
mov
add
xor
jle
adc
jecxz
loopne
cmp
fisubrl
loope
inc
inc
out
push
or
enter
mov
es
sarl
int3
lcall
in
jle
fwait
jp
and
daa
inc
and
inc
lods
insb
lret
sub
lahf
stos
or
loope
mov
adc
in
daa
and
push
xchg
popa
jle
and
imul
mov
mov
in
pop
jae
je
add
inc
push
or
mov
les
jne
mov
push
jb
xor
cmp
xchg
aas
push
mov
push
popf
lods
mov
enter
pop
inc
lea
xor
loope
popa
mov
cmp
lock
test
push
cmp
cli
inc
loope
adc
sbb
xor
jge
jne
test
loope
hlt
mov
fildll
stc
sahf
mov
ficompl
cwtl
call
mov
pop
dec
loope
jg
iret
fwait
aam
push
push
std
popa
xor
pop
jno
jecxz
or
scas
cmp
fisttps
push
out
popf
subb
cmp
mov
jb
pop
movsb
and
dec
xchg
movsl
mov
jl
lods
pop
mov
cld
xchg
dec
mov
sbb
lock
mov
icebp
fucomp
dec
mov
mov
outsb
xchg
scas
adc
incb
ja
push
xor
sbb
loop
mov
jnp
pop
pop
and
pushf
jmp
add
jle
inc
bound
sbb
push
std
pushl
sti
push
mov
mov
sbb
fsubrl
push
leave
inc
out
xchg
cld
push
jne
sub
sahf
popa
iret
inc
iret
gs
stc
push
in
sbbl
or
repz
ds
outsb
pop
cmpsl
push
jno
test
lea
ret
repz
push
push
jecxz
or
fstps
cli
loope
insl
stos
sar
bound
push
test
insb
jnp
ret
mov
in
cld
sub
test
hlt
rcrl
sbb
and
insb
inc
ja
mov
pop
in
scas
pop
es
ret
lea
negl
lea
jl
push
adc
pop
dec
cmp
out
mov
popa
sarb
inc
mov
cmpsl
call
das
imul
sub
or
aam
movsb
out
mov
push
cli
mov
cld
inc
inc
iret
inc
cmpsl
insb
dec
pushf
pop
xlat
lea
cmp
dec
orb
ja
clc
adc
sbb
imul
into
in
sti
mul
stc
xchg
cmp
sub
lea
dec
adc
xchg
add
mov
imul
hlt
mov
bound
xchg
stos
popf
insl
loope
hlt
dec
daa
dec
jne
testb
jle
adc
pop
mov
adc
data16
jb
jne
pusha
test
mov
sbbb
add
mov
int
push
fwait
hlt
andb
mov
mov
inc
leave
xor
std
sbb
add
ret
test
fcoms
sub
lret
sub
bound
xor
push
test
push
push
pop
or
or
xlat
jb
out
jge
or
enter
mov
arpl
add
scas
int
push
fsubl
mov
xor
or
jg
jmp
int3
movsl
test
sbb
sub
fistpl
in
imul
add
xchg
mov
cmp
lret
jo
mov
jo
cmp
enter
scas
popa
xor
jne
ss
cmp
adc
fiadds
adc
hlt
mov
pusha
sbbb
outsb
pop
ljmp
movsl
sarb
lret
pop
lock
and
push
fmull
mov
dec
js
testb
jg
ss
and
jg
add
mov
push
mov
jp
insb
int3
cltd
sbb
clc
pop
popf
sub
adc
sbb
cmp
fbld
push
lock
mov
mov
push
sbbl
loope
dec
imul
push
pop
sbb
jnp
ret
push
mov
mov
push
sarl
xchg
push
or
rorl
loope
pop
fsubr
dec
sbb
xor
jno
ja
fldt
push
jne
mov
ds
and
jp
vpor
mov
lea
jbe
stos
cmpsl
int3
push
clc
or
mov
xchg
xor
das
dec
xor
adcb
cmpsb
and
mov
stc
ja
pop
xchg
daa
sub
rcr
mov
ret
adc
je
jae
adc
lods
xchg
addr16
sub
test
push
mov
jb
daa
add
pop
loopne
in
jl
shr
adc
adc
icebp
lcall
aad
adc
push
pop
out
stos
dec
rol
adc
lea
mov
cmpsl
ss
and
out
cmp
insb
pop
outsb
mov
mov
movsb
in
sub
jnp
cmpsl
ds
pushf
dec
sahf
jns
add
movsl
mov
xchg
xor
insb
loope
jp
inc
push
movsb
fwait
adc
rorl
mov
movsb
nop
into
or
pop
mov
mov
ret
fsts
mov
aaa
pop
fldt
roll
loopne
push
repnz
lea
test
mov
ficoms
daa
mov
fisubrl
pop
push
xor
jae
clc
xchg
notl
sub
aaa
mov
mov
or
xchg
ja
mulb
mov
test
lret
inc
mov
mov
je
ret
adc
jbe
sbb
loope
push
pusha
shlb
push
jae
mov
or
call
dec
and
push
cmp
mov
cmp
sti
mov
fdiv
push
lret
loope
mov
lds
adc
lods
into
jp
cmp
clc
outsl
pushf
sbb
and
mov
mov
movsl
jnp
test
fldl
fstps
fdivrl
push
fwait
jp
inc
jb
out
ja
jl
dec
dec
loop
sahf
ja
cmpsl
scas
imul
lods
outsl
rcr
repnz
aas
loop
mov
adc
and
sub
hlt
daa
ds
xchg
lret
jnp
dec
cmpsb
insb
dec
xchg
pop
repz
xor
push
cmp
or
inc
pop
movsl
imul
sub
call
inc
jp
scas
pop
ficoms
in
push
xchg
cltd
xor
xorb
int3
inc
cmpsl
std
negl
lock
pop
fnstenv
scas
scas
aad
loope
jle
es
repz
inc
cmp
cmp
pop
push
imul
xchg
mov
stos
cmp
movsl
cld
pop
pop
hlt
push
std
and
or
jnp
daa
outsl
push
fsubrs
pop
mov
imul
lret
ror
push
mov
test
dec
xlat
ret
aad
mov
pop
fildl
push
pop
repz
push
popf
push
test
sbb
cmpsl
call
mov
push
aas
dec
xchg
das
mov
jge
mov
mov
shrb
xchg
insl
shr
mulb
sti
cmp
repnz
and
jmp
cmpb
cwtl
das
mov
sbb
inc
mov
popa
mov
inc
call
pusha
sti
out
add
cmp
fwait
and
inc
mov
and
cmpsl
fwait
xor
arpl
call
notl
push
mov
test
mov
in
dec
mov
mov
lock
ret
cmp
push
inc
das
addr16
aad
mov
mov
ljmp
add
and
mov
outsb
mov
lods
inc
roll
std
mov
xchg
jno
xlat
test
rcll
and
stos
inc
loope
sahf
pusha
test
leave
test
repz
dec
sbb
hlt
hlt
xchg
mov
mov
adc
stos
aam
in
fistps
dec
data16
aam
jns
adc
flds
pushl
lock
cs
clc
lock
test
cli
stos
rcrl
mov
jo
or
daa
mov
pop
inc
outsl
outsb
stos
mov
push
pop
jb
mov
js
insb
pusha
sub
push
add
aaa
xchg
insl
and
fdivs
cld
mov
push
fmull
mov
pop
test
inc
hlt
call
std
mov
xchg
cs
rclb
mov
out
arpl
push
sub
sbb
ret
incb
sbb
sbb
jbe
mov
fistl
add
cltd
mov
ret
and
sahf
push
pop
pop
call
rcrb
cmp
loop
jge
sub
mov
ret
imul
jmp
and
ss
add
xor
and
into
loope
sub
clc
pop
cmp
dec
xchg
sbb
dec
pop
mov
dec
imul
cmp
pop
fwait
aam
inc
inc
pop
cmp
cwtl
call
daa
xor
adc
xor
xchg
dec
fmull
inc
and
ret
mov
stos
ret
or
xor
test
loope
lret
xorb
add
adc
adc
and
push
in
xor
roll
std
jmp
mov
pop
in
pop
rcrb
inc
dec
lret
repnz
int3
out
adc
push
mov
add
out
fs
push
loopne
int3
cmc
jae
pushf
jb
jo
bound
dec
movsl
dec
decb
rorl
jge
lcall
mov
xlat
xchg
mov
adc
sub
repz
adc
jne
mov
inc
test
dec
shl
imul
popl
cld
or
sbbb
lds
sarb
jecxz
std
clc
adc
pop
mov
ret
stos
xchg
jp
add
inc
cmpl
cmp
sbb
push
and
in
std
push
test
adcb
cmp
xor
pop
inc
add
icebp
sahf
mov
movsl
mov
fistpl
rol
sbb
in
sti
addr16
shl
pop
cmp
negb
dec
fistpl
mov
shrb
repz
daa
cli
mov
and
or
inc
fldpi
sbb
push
add
cli
add
adc
loope
inc
idivl
jo
pop
push
inc
jno
shrl
adc
cmp
push
arpl
data16
aas
movsb
cmp
scas
xor
jnp
add
pop
mov
and
iret
js
dec
movq
lret
jp
out
mov
fsub
mov
push
pop
pop
movsl
aas
fwait
sub
jp
cli
stc
or
add
dec
into
imul
or
das
jbe
into
cmpsl
push
mov
xor
aad
adc
push
jne
xor
divb
push
cmp
add
sub
jmp
aad
push
dec
lcall
jne
adc
fistl
pop
popf
xchg
cs
cmc
xchg
out
add
orl
es
lahf
int3
push
push
jnp
xchg
push
pop
das
call
add
aam
xchg
jnp
je
nop
pop
push
xchg
sbb
ljmp
shrb
dec
cld
adc
out
xchg
in
adc
add
cwtl
push
das
pop
push
sti
jns
popa
mov
jb
dec
int3
pushf
test
pop
mov
mov
test
jne
or
jl
push
pop
mov
add
repnz
mov
pop
add
in
loopne
cmc
adc
sub
mov
xchg
das
js
jno
jnp
bound
adc
add
les
inc
loopne
mov
or
xor
xor
aas
inc
dec
loope
fdivr
push
pop
cltd
push
and
mov
lods
adc
mov
and
aam
out
outsb
stos
sbb
jecxz
xor
xor
insb
inc
test
lcall
rcrl
push
mov
mov
adc
movb
out
fisubs
xchg
mov
inc
mov
int
stos
out
xchg
int
int3
mov
xor
sbb
adc
ret
pop
pop
les
push
mov
push
xchg
hlt
push
xlat
insb
push
leave
out
cmp
mov
insb
fidivl
nopl
or
push
sbb
insl
mov
sbb
dec
icebp
insb
sbb
jg
out
test
daa
shlb
out
rcl
loope
loope
shl
mov
xor
xor
aam
stos
loopne
and
mov
enter
mov
fnstsw
shll
xchg
enter
test
mov
sarb
test
adc
fidivs
imul
pop
cmc
jle
loop
cmp
rcrl
insb
incl
sbb
pop
lahf
xor
jo
fs
ret
test
cmpb
xor
jmp
lea
xchg
inc
movsl
xchg
repnz
inc
dec
lods
or
test
sub
insl
insb
mov
jno
pop
ss
jecxz
cmp
sarb
push
jg
insb
mov
mov
mov
sti
jbe
frstor
sub
adcb
sbbl
jb
xchg
test
or
popa
xor
lahf
aaa
aas
push
add
aad
icebp
test
xchg
insb
fs
dec
outsb
add
aaa
sbb
sahf
sbb
nop
jmp
in
adc
sbb
add
cmpsb
pop
sti
jl
movsl
lods
sbb
jb
cli
in
push
sub
cltd
cmc
lea
inc
insl
dec
jl
jns
lret
in
adc
pop
add
jo
test
jns
and
dec
sub
jecxz
xor
or
sub
mov
in
std
adc
arpl
add
lahf
and
fisubrl
lret
movsl
scas
rol
cs
and
movsb
inc
aaa
push
jne
and
pop
es
jne
repz
and
adc
loope
push
mov
stos
xchg
bound
test
inc
lret
xchg
aam
adc
dec
cs
rorl
add
out
inc
xchg
sub
lret
into
movsb
in
rol
popa
mov
fnstsw
lock
sti
mov
push
mov
stc
xchg
mov
out
mov
lahf
ret
add
xor
push
and
mov
shrb
std
je
mov
and
aam
dec
pop
pop
cmc
std
jo
andl
add
out
add
sub
xchg
mov
cmc
stos
sarb
inc
sbb
xor
mov
outsl
push
jo
scas
cs
mov
dec
insl
ja
xor
mov
outsb
inc
xor
sahf
imul
add
xchg
jns
push
movsb
aam
data16
hlt
push
test
cltd
test
and
out
aad
ss
pop
add
sbb
push
je
cmp
jo
adc
push
ret
push
insb
frstor
jbe
mov
imul
ret
push
push
xor
call
push
test
mov
ja
sbb
stos
and
and
sub
lret
ret
sub
stos
inc
pushf
or
cmpsl
and
outsb
pusha
sbb
mov
adc
cmp
andl
jbe
xor
andb
inc
lods
rcrb
mov
lods
and
pop
stos
xchg
ds
iret
sar
pop
jg
sbbb
sub
push
add
jge
inc
pop
sti
jbe
in
mov
push
clc
in
test
sti
outsb
push
inc
add
adc
movsb
xor
test
xchg
hlt
mov
fwait
cmp
int3
sub
jmp
push
les
xchg
lea
pop
jno
pop
repnz
or
sbb
sub
and
fnstenv
xchg
ds
mov
fs
sub
push
bound
js
xchg
xchg
sarb
mov
xchg
pop
out
xchg
sbb
cmp
out
xchg
pop
jbe
mov
in
pop
pop
ljmp
fwait
sti
out
inc
push
lea
repnz
sbb
subl
icebp
cmpsb
repnz
xor
loopne
inc
test
and
scas
lea
lea
jae
out
in
js
pop
mov
andl
jecxz
sub
and
in
and
mov
or
aad
ds
movsl
fucomp
stos
jo
pop
push
mov
ja
js
sbb
scas
cwtl
add
imul
andb
cld
jge
inc
mov
popf
ss
push
fisubrl
mov
pop
cwtl
cmpsl
mov
dec
pop
fstpt
or
imul
fstpl
lahf
inc
jne
iret
sub
sub
pop
daa
aas
push
inc
lcall
movb
cmc
out
dec
dec
cli
inc
pop
add
stos
and
das
out
jae
test
clc
rcr
sbbl
pop
mov
popf
sbb
mov
xchg
pop
shl
bound
incb
out
bound
pop
adc
or
mov
pop
or
cmpsb
push
sahf
sbb
shll
push
repnz
jno
test
aaa
out
or
iret
mov
lcall
sbb
xchg
mov
jp
dec
filds
xchg
scas
popa
xlat
push
outsl
rep
pop
mov
cmp
cmpsb
xchg
cmpsb
inc
fcom
push
pop
div
mov
inc
fidivrs
fisubl
mov
mov
jmp
mov
jle
sti
mov
push
mov
jns
insl
ret
jbe
sub
push
jns
jo
pop
dec
push
sbb
scas
dec
ja
or
sub
inc
je
pop
xchg
jo
lret
xchg
and
jmp
or
rclb
inc
cli
stos
push
cmp
aaa
jmp
dec
cmp
lahf
mov
sarl
std
lods
dec
pop
js
mov
popf
out
cmc
mov
cmp
xor
push
aas
test
xor
icebp
cmp
pop
outsb
cmp
jb
leave
cmpsb
imul
inc
mov
jmp
or
pop
outsl
js
mov
sbb
pop
test
xor
mov
sbb
inc
push
or
jnp
pop
scas
xor
xchg
pop
mov
adc
inc
mov
xor
adc
ss
mov
call
sbb
bound
out
cmp
pop
das
out
cmc
push
cmp
cmp
dec
xchg
lret
cmp
add
fsub
or
sbb
test
sbb
cli
pop
sub
ret
xor
dec
pop
push
dec
jmp
outsl
popf
cmc
push
jnp
sti
lds
and
sahf
aas
dec
lock
sti
cmpsl
aaa
cmc
mov
fnsave
test
shrl
shl
xchg
push
sbb
sub
and
xchg
sbb
sbb
inc
lods
xchg
jnp
pop
lret
dec
in
loope
jno
push
ret
jg
insl
sub
daa
shrb
aad
adc
bound
add
jae
pop
mov
xchg
fnstenv
ja
ret
adc
lds
in
inc
push
mov
push
inc
mov
cmp
and
les
adc
dec
out
push
insb
filds
mov
icebp
aaa
out
or
loope
pop
das
repnz
rorl
imul
mov
push
pop
aaa
mov
pop
outsl
rcrl
dec
test
lahf
clc
shrb
mov
inc
outsb
push
xor
inc
sbb
fistpll
loop
das
loop
popa
xchg
inc
adc
jae
out
fidivrs
icebp
mov
mov
fistpll
mov
inc
mov
addl
fcomps
xor
fcompl
mov
pop
mov
outsl
out
cld
sahf
or
hlt
push
addb
fwait
inc
mov
dec
ljmp
out
jb
dec
lds
or
adc
pop
adc
test
arpl
pop
daa
loop
imul
fdivrp
pusha
dec
xor
push
fs
push
sub
jge
scas
sbbb
clc
call
rcl
ret
mov
cmc
in
fistps
jnp
pop
imul
rorl
or
loop
adc
push
dec
cli
mov
mov
iret
call
jbe
mov
mov
mov
sbb
jle
cmp
push
bnd
gs
mov
xchg
ret
sahf
inc
lcall
mov
ret
out
jp
dec
inc
rcr
pop
jns
dec
stc
fisubrs
xor
or
sub
sti
sub
xlat
and
push
mov
xor
sbb
leave
dec
mov
rorl
add
dec
mov
adcl
inc
pop
sbb
cli
pop
inc
inc
cmc
sbb
lahf
mov
movsl
mov
inc
in
insl
pop
movsl
into
push
lret
sahf
mov
jp
int
add
or
aam
adc
ds
cmp
cltd
aas
jae
xor
ds
int3
fucomp
inc
xchg
repnz
jp
lods
dec
out
lea
es
mov
push
sub
pusha
sbb
data16
shll
sbb
outsb
sub
cld
or
jae
insl
mov
into
enter
leave
cmpl
adc
adc
cld
mov
inc
xchg
dec
xchg
imul
jl
jg
pop
dec
jle
dec
ss
inc
pop
movb
mov
add
test
ss
jmp
pop
aam
dec
push
push
rcll
mov
nop
into
pop
mov
imul
imul
test
test
adc
jbe
leave
mov
popf
cld
lahf
mov
std
or
push
and
mov
pop
hlt
pop
mov
mov
fstl
dec
add
cmp
xor
pop
insl
mov
je
ljmp
icebp
pop
das
cmpsb
aaa
stc
adc
subb
xchg
mov
mov
pop
xor
mov
jb
xchg
jp
fwait
iret
iret
pop
cmp
fwait
pop
psllw
stos
xchg
cmp
pop
cmpsb
popa
add
push
imul
mov
subl
ljmp
dec
imul
mov
add
xchg
popa
cld
sbb
push
testb
dec
adc
push
and
inc
roll
fnstsw
push
outsl
imul
push
mov
pop
loope
jg
adc
sahf
ret
fsts
or
xlat
repz
jnp
in
test
movsl
cmp
sub
inc
ficompl
inc
sbb
negl
daa
add
add
jbe
xchg
sub
pop
or
fs
insb
rolb
shlb
sub
mov
sbb
test
pop
shrb
lcall
add
ret
out
xchg
xor
add
out
inc
sbb
shl
jmp
rcrl
cmpsb
jle
mov
lret
fistpll
cmp
pop
test
jl
sbb
lret
into
jle
jle
lret
xchg
mov
leave
pop
imul
scas
inc
jno
sbb
sbb
mov
daa
mov
sub
inc
loope
xchg
mov
dec
push
lret
fldcw
bound
lods
insl
add
aas
mov
or
aad
lock
cmc
aad
popf
push
ljmp
sar
inc
sbb
mov
or
bound
stos
sbb
cli
jne
jns
shrb
and
imul
mov
loopne
sbb
sbb
jl
cmp
xlat
sbb
jg
adc
mov
lods
mov
and
jecxz
push
in
cmp
pop
mov
xor
push
push
mov
testb
dec
or
aad
jno
out
lods
sbb
es
pop
push
pusha
jp
cmc
adc
sub
pop
hlt
iret
imul
sub
cmp
xor
pop
adc
cld
popf
sbbb
push
push
repz
sarl
movsl
add
pop
push
jge
pop
pop
pop
imul
enter
or
mov
iret
mov
lock
mov
enter
movsl
xor
push
daa
les
insb
jns
sbb
xor
jecxz
cmc
fdivrs
fs
xchg
rcrb
add
lcall
fldl
or
pop
out
jmp
repnz
dec
mov
clc
fimull
add
push
sub
and
leave
fists
mov
jge
pop
sahf
or
popf
add
xor
xchg
das
mov
jb
pop
xor
xchg
xchg
jle
stos
jl
push
mov
xchg
stos
aad
push
lds
divl
fdivrl
les
cmp
fstps
dec
jecxz
rcrb
outsb
pop
dec
bound
shll
pop
or
dec
xchg
jg
dec
inc
sub
cli
subb
mull
cmp
pop
notb
loopne
pop
popf
xor
fs
es
insl
fldenv
js
iret
and
xchg
out
mov
jns
aam
iret
jge
sbb
notl
push
movsl
dec
mov
aad
mov
mov
sub
xchg
daa
in
aad
out
lret
cmpsl
std
push
out
outsb
inc
and
ja
aas
popf
cwtl
jo
pop
cmp
mov
cmpsb
dec
ljmp
xchg
jno
out
test
adc
or
mov
fisubrl
movsl
cli
aaa
and
push
pop
mov
out
cmp
xor
mov
sarl
pop
pop
out
nop
sbb
mov
pop
ficoml
jnp
push
aas
push
jns
add
mov
add
sub
loopne
add
lock
movsb
pop
dec
add
jo
or
pop
adc
outsl
ss
xchg
or
icebp
add
ret
pop
mov
mov
push
pushf
jle
shl
sub
scas
xor
stos
cwtl
das
cs
add
shrd
enter
out
ljmp
xchg
sti
pop
call
in
adc
jmp
add
out
addb
xor
je
aas
pop
push
jno
push
pop
inc
xor
sar
repnz
pop
fidivs
dec
adcl
jg
repz
sub
fmulp
test
add
mov
js
das
push
aas
dec
xchg
mov
dec
out
mov
dec
imul
xor
push
mov
mov
pop
xchg
aad
sub
mov
xlat
popa
movsb
mov
cld
popa
loopne
xchg
lahf
test
into
jge
xor
in
dec
roll
es
push
fistps
pop
repz
xor
sub
or
aad
dec
aam
daa
or
fisttpl
clc
test
aas
xchg
inc
push
push
mov
mov
lret
jmp
shrl
xor
icebp
jnp
mov
ret
jae
pop
lahf
cmp
xchg
xorb
xchg
test
pop
mov
mov
dec
adc
mov
inc
sbb
mov
mov
mov
adc
mov
push
leave
cli
pop
xchg
dec
cmp
push
popa
xadd
or
mov
loopne
fstps
pop
test
inc
cmpsb
xchg
out
xor
mov
jns
cmp
or
xchg
mov
daa
lret
sub
fs
xchg
add
dec
pop
sub
pop
jp
sbb
cmc
sbb
ljmp
test
outsl
ss
js
movsl
aas
push
loope
mov
dec
mov
mov
scas
cs
or
hlt
adc
les
xor
call
or
add
xchg
cmpsb
in
fldenv
or
push
aaa
rcrb
mov
pusha
int
imul
addr16
cltd
lret
sbb
push
ja
mov
arpl
sub
leave
cmp
push
cli
adc
test
add
divb
dec
mov
pop
fmull
insb
shlb
cmpsb
pusha
ror
pop
xlat
sub
push
loopne
jge
in
cmp
xchg
imul
add
jecxz
mov
in
xor
aad
in
mov
testl
mov
jno
jnp
les
inc
dec
fcmovne
mov
fmull
das
jl
rorl
enter
pushf
pop
xor
out
ds
cmp
test
rorb
xchg
dec
out
and
dec
xchg
insl
lret
cld
inc
stos
inc
jno
stos
jne
push
leave
mov
jo
in
test
mov
ds
ret
ret
cmpsl
jecxz
repnz
aam
adc
aaa
insl
and
xchg
arpl
mov
lock
lahf
jb
sub
call
xor
add
ja
loope
xor
or
jle
jbe
push
inc
adcb
xor
cmpsb
out
mov
iret
add
daa
push
sub
push
jno
outsb
and
pop
xlat
sub
addb
in
addl
cmp
dec
adc
sub
idivb
out
dec
rcrl
cmp
clc
popf
mov
push
int3
or
pop
pop
loope
xchg
into
lock
shll
mov
pop
outsb
pop
mov
push
into
pop
mov
rclb
or
xchg
jg
inc
sbb
pop
xchg
movsb
dec
jl
in
xchg
icebp
jge
xor
xor
cwtl
pop
cmp
js
call
lods
rorl
xor
hlt
sub
pop
sarb
mov
lcall
mov
cwtl
mov
jp
xchg
jp
push
in
fimull
lret
mov
stc
push
iret
addb
mov
stc
jecxz
lahf
adc
push
dec
insb
sbb
cmp
stos
cld
outsb
lods
adc
lock
test
add
bound
adc
cmp
jmp
inc
xor
xor
adc
sub
repz
jecxz
dec
jo
testl
aad
cltd
jp
mov
jge
cltd
mov
push
sub
scas
and
and
add
jecxz
movsl
adcl
jb
ljmp
xor
xchg
stc
inc
test
pusha
push
xchg
sub
ja
push
dec
insl
sbb
neg
mov
clc
outsb
mov
fadd
or
mov
push
insl
jecxz
nop
sbb
cwtl
shr
dec
loopne
jae
cmpsb
shll
push
outsl
addr16
outsb
shlb
hlt
mov
sub
and
cwtl
stos
mov
pop
ret
jg
and
add
aad
jne
dec
cli
mov
das
dec
es
out
dec
les
addr16
dec
push
pop
dec
or
cmp
mov
jnp
adc
cltd
daa
aam
or
enter
imull
divl
test
call
popf
jecxz
popa
xchg
mov
xchg
in
call
sarb
loopne
sbb
cltd
lock
test
cmc
cmp
dec
lret
data16
add
test
adc
ret
lds
aad
cmc
movsl
jp
inc
ds
test
es
sbb
or
ss
out
enter
sbb
push
movsl
and
cmp
cmpsl
out
xchg
test
jl
ffree
or
inc
loopne
inc
mov
mov
jne
out
sub
push
test
test
mov
mov
dec
sub
lods
xor
fwait
xchg
sbb
jmp
add
pop
mov
in
push
pop
fldt
push
mov
in
jb
test
xchg
fistl
adc
clc
push
mov
pop
lock
daa
lods
cmpsb
pop
insb
sub
sub
mov
push
out
sarl
mov
ds
mov
pop
pop
dec
mov
push
xchg
sub
inc
pop
stc
lahf
testl
pop
push
push
dec
scas
int
sub
jle
stos
xlat
lahf
push
xchg
call
mov
ja
sbb
dec
lods
cs
xchg
pop
cmc
mov
pushf
das
or
das
cmp
mov
filds
adc
dec
in
mov
imul
push
jge
cmp
inc
movsb
sbbl
sbb
push
mov
mov
in
jnp
pop
out
jmp
cld
xor
ret
pushf
xchg
mov
lret
es
xor
inc
lods
mov
les
negb
cmpsl
push
jecxz
out
hlt
sti
push
mov
cmc
mov
pop
sub
mov
cs
add
cmp
mov
notb
out
dec
adc
inc
jo
fsubs
xor
mov
pop
mov
mov
push
shlb
xor
movsl
mov
and
adcb
jno
jge
cmpb
cmp
push
cmpl
negb
call
pop
es
out
or
jl
hlt
sti
jp
in
popa
and
add
dec
sub
adc
popf
sbb
jmp
and
cs
divl
sti
out
ret
sbb
mov
or
adc
push
andb
xchg
fldcw
or
xor
mov
cmc
xchg
imul
mov
into
out
mov
cmp
xor
int3
test
mov
and
pop
mov
out
inc
je
mov
mov
dec
xchg
sahf
out
lcall
iret
and
add
mov
add
dec
aas
mov
in
insb
dec
sbb
or
dec
push
jmp
add
xchg
mov
xchg
inc
and
ja
or
xor
ss
mov
aad
adc
mov
push
repnz
jbe
fbld
or
fistl
out
sub
and
pop
push
mov
xor
fldl
notb
dec
cmp
lahf
jmp
sbb
jle
push
outsl
gs
or
and
mov
inc
pop
stc
je
imul
mov
cmp
nop
jge
repz
hlt
bound
mov
push
jnp
inc
fwait
bound
pop
jne
mov
jp
aas
lods
out
dec
data16
xchg
add
rcll
dec
pop
js
pop
mov
xchg
xchg
inc
mov
dec
xlat
add
addl
sbb
mov
push
stos
jl
rolb
mov
push
lods
sahf
popa
test
fmulp
pop
xchg
and
mov
in
pop
pop
or
mov
xchg
daa
dec
xchg
sarb
ljmp
cmpsb
sub
and
and
sbb
sbb
fwait
sbb
pop
in
mov
test
pop
push
xor
ret
out
cld
icebp
cs
aad
out
mov
cltd
push
mov
cld
mov
xchg
pushf
lret
sub
mov
jnp
fldcw
icebp
mov
add
cld
repnz
not
dec
dec
xchg
cmc
sub
add
rcr
fimull
push
xor
lret
add
fldl
mov
push
mov
push
inc
mov
loope
adc
les
ljmp
jo
roll
push
mov
pop
sub
sbb
call
std
mov
std
in
sti
fildll
insl
add
movsl
xchg
push
test
es
xor
ds
add
lcall
cmpsb
dec
in
cmp
xlat
pop
xchg
scas
scas
push
pop
mov
adc
fucompp
mov
mov
add
mov
push
jo
clc
std
pop
sbb
inc
gs
cmpsb
xchg
fildll
inc
mov
jb
ljmp
sbb
add
xchg
xor
shrl
inc
js
bound
lcall
into
mov
cwtl
pop
rol
mov
mov
or
push
jnp
lahf
mov
iret
or
push
test
fisubl
and
inc
scas
xchg
xor
xchg
push
sti
icebp
jg
sbb
jecxz
iret
inc
sbb
andl
cmp
test
push
xchg
mov
xorl
mov
xchg
imul
test
dec
loopne
popf
fs
incl
pop
frstor
add
mov
sbb
fbstp
mov
xchg
scas
sahf
gs
or
or
push
insl
insl
dec
add
ss
clc
fwait
xor
das
fucomi
cmp
fcompl
sbb
sbb
mov
xchg
cmp
mov
lea
sbb
mov
movsb
cmp
decl
daa
adc
inc
loope
add
not
sysenter
lahf
push
mov
dec
aad
jnp
loope
xor
dec
cltd
mov
dec
dec
mov
out
scas
call
xor
jg
push
icebp
or
popf
jne
rorb
adc
es
pop
fucomip
jg
inc
sub
dec
pop
mov
push
test
filds
stos
inc
jbe
xchg
insb
in
inc
push
or
loop
out
mov
stc
test
add
bound
loopne
mov
sub
jno
dec
adc
mov
mov
jle
scas
dec
add
lea
rclb
iret
push
jp
fsubr
cld
xor
mov
dec
jmp
or
xor
xchg
xor
push
fxch
mov
mov
push
and
and
in
aas
inc
ljmp
xchg
cmc
lea
jge
or
adc
and
cs
mov
scas
or
push
adc
and
xor
cmp
sub
into
fdivrl
add
sbb
mov
jle
inc
fmul
lahf
aam
sub
testb
mov
mov
enter
in
mov
int3
nop
stos
outsb
and
or
fidivs
or
out
mov
int3
movsl
scas
push
subb
pop
fsubs
test
mov
xchg
sub
mov
mov
lea
jle,pn
scas
add
test
test
out
mov
in
mov
jne
loopne
xor
mov
fsubrl
mov
bound
mov
mov
les
lods
fistl
ds
jne
and
sbb
rolb
adc
mov
out
pop
loop
sbbl
enter
xchg
push
lods
cmp
popf
fs
cmp
scas
repnz
insb
repz
cmp
cmpsl
push
jo
adc
sbb
sub
xchg
nop
rcll
mov
dec
mov
cwtl
ret
inc
fdivs
loop
mov
rol
push
or
insb
dec
int3
ret
mov
push
or
repz
stos
jmp
and
xchg
adcl
hlt
lret
adc
sarl
and
cmp
jp
fldt
dec
xchg
xchg
mov
out
jae
pop
insl
cld
addl
mov
in
dec
in
aas
into
sahf
mov
or
popa
cmpsl
lret
adc
jecxz
xchg
sbb
pop
lods
adc
jecxz
push
jbe
int3
cmp
nop
push
fimuls
testl
pop
jle
incl
testb
push
xchg
pop
cmp
sbb
pop
std
sbb
mov
std
mov
push
ficoms
popf
push
add
cmp
lock
xchg
pop
aas
orb
jb
mov
dec
cli
add
sub
fistps
ljmp
lret
fimuls
iret
test
gs
or
inc
aas
inc
pop
xor
lock
out
and
and
cmc
dec
jo
fisubs
xchg
fwait
jmp
test
fildll
int
in
sbb
daa
outsl
xlat
pop
xchg
ret
lock
sbb
and
roll
jg
shl
dec
gs
ljmp
daa
or
or
fadd
sub
fs
mov
mov
lahf
in
movsb
jmp
sahf
stc
in
mov
push
bound
xor
jo
enter
xchg
lea
inc
adc
aaa
in
push
test
mov
std
gs
mov
fistpll
push
mov
jo
xor
inc
add
xchg
pusha
jg
imul
xchg
inc
sbb
or
pop
out
popa
mov
lahf
pop
fadds
mov
inc
test
fwait
call
mov
mov
sub
fwait
push
rcll
mov
fsubl
and
mov
cltd
pusha
mov
ficoms
pop
xor
push
fidivrs
arpl
jo
or
lahf
jbe
mov
std
lret
into
cli
jg
sub
nop
pop
out
call
pop
movsb
icebp
out
scas
jb
adc
mov
add
jo
jae
lea
pushf
sub
or
mov
dec
adc
mov
out
aam
iret
or
daa
cmp
inc
xor
ret
sbb
aam
lahf
mov
pop
mov
int
lret
cmp
lods
inc
into
xchg
add
fdiv
jno
les
adc
pusha
cld
jecxz
ljmp
add
js
jp
lock
fdivp
pop
push
pop
daa
inc
jl
lcall
lods
std
aas
add
inc
adc
fincstp
mov
add
mov
jbe
lahf
call
xchg
leave
xchg
addr16
jb
xchg
lahf
cmp
xor
push
data16
xchg
sub
subl
iret
mov
jp
cwtl
push
or
in
push
mov
pop
sbb
test
icebp
mov
ret
aad
outsb
test
mov
cmp
sahf
pusha
aas
xchg
mov
test
mov
jge
lods
pop
dec
mov
stc
popf
imul
sbb
fs
das
mov
mov
incb
mov
psrld
fiadds
mov
mov
push
setno
xor
popf
xlat
jl
pop
mov
jbe
sbb
aam
sub
nop
push
lods
mov
pop
daa
push
in
enter
mov
lea
xor
dec
ss
jecxz
inc
ljmp
mov
ficompl
fcmovne
jmp
fsubrs
or
rclb
cmp
int3
mov
das
shll
mov
jnp
in
mov
or
add
adc
test
stos
inc
fsubr
xlat
sbb
dec
jbe
xchg
das
mov
add
dec
inc
aas
sti
inc
fsubrs
sbb
stos
jnp
ret
shll
push
out
mov
xor
pusha
lods
fwait
inc
inc
leave
mov
cmpsl
push
ret
pop
push
mov
loope
sub
scas
and
movsl
push
pop
mov
adc
test
pop
divps
mov
and
repz
jmp
fdivs
xchg
sub
orb
lds
imul
pop
movsb
mov
xchg
inc
fcmovb
and
decl
popa
das
xchg
lret
loope
lock
and
inc
cwtl
add
fstpl
xor
adc
jle
cmp
pop
mov
std
mov
adcb
iret
data16
aas
dec
movsb
pop
sti
fwait
sbb
arpl
mov
jl
dec
sbb
cwtl
cmc
cmp
cmp
out
add
xchg
xchg
adc
imul
movsl
inc
and
scas
dec
pop
inc
mov
aas
lods
push
repnz
jecxz
pop
add
xor
or
mov
fdivs
pop
jmp
iret
sub
xchg
xor
cli
pushf
add
mov
cmpsl
xchg
sbb
shlb
repnz
fnstsw
and
mov
stos
adc
dec
jmp
dec
xchg
pop
in
inc
shr
adc
lods
or
jge
ljmp
adc
scas
inc
adc
out
ds
stc
out
dec
loope
negl
shr
fldcw
in
push
cltd
push
push
repnz
ret
ret
in
push
jecxz
push
out
pop
or
cmp
pop
add
pop
aaa
xor
jge
aad
sub
mov
xor
dec
daa
cmp
push
xor
or
jmp
push
mov
imul
mov
mov
jp
mov
or
or
jne
inc
push
adc
jb
adc
xor
xlat
mov
mov
popa
in
repz
mov
frndint
lahf
sub
iret
mov
mov
pushf
cmp
loop
cmp
push
aad
out
mov
andb
dec
add
pop
mov
mov
stos
in
stos
xchg
rep
add
iret
add
push
inc
mov
lods
sbb
arpl
jb
xor
ljmp
test
jecxz
int3
lods
xchg
gs
xor
xchg
popf
xor
jb
sti
sub
jmp
in
test
cld
mov
out
xor
xlat
jae
pop
pop
pushf
xor
xchg
adc
fiaddl
bswap
xorb
aad
ja
sub
iret
clc
jl
push
lcall
loop
scas
or
ljmp
loop
lods
pop
fsubrp
and
inc
clc
les
in
ret
out
call
pop
out
ret
sub
jp
imul
add
mov
lea
loopne
sub
mov
jl
dec
cmp
push
das
out
pop
adcl
data16
sbb
sub
pop
movsb
jno
lea
add
jnp
xor
cli
ja
inc
and
push
sbb
and
push
xchg
jmp
mov
das
aaa
mov
pop
mov
je
test
mov
movsl
lahf
nop
sbb
push
adcb
mov
and
xchg
push
iret
bound
mov
dec
mov
loope
pop
and
or
mov
stos
add
xor
cmpl
or
cmp
aas
enter
in
pop
mov
xchg
sarb
mov
xchg
push
jg
pop
xchg
mov
and
inc
push
pop
enter
pop
imul
cmp
adc
jb
mov
xchg
sub
inc
lcall
icebp
pushf
mov
js
cli
mov
xor
dec
inc
adc
fstps
imul
aam
and
cmc
fidivl
sbb
or
and
ss
mov
mov
shl
jno
data16
jbe
rclb
sub
frstor
rcrl
cmp
out
scas
push
sub
dec
push
lods
xchg
lea
ds
add
cmpsw
push
ret
call
xchg
scas
sbb
push
cltd
sub
mov
cld
cmc
movl
int
mov
inc
inc
adc
inc
popf
je
mov
fsts
subl
pop
mov
into
xor
dec
clc
out
fistpll
pop
insl
ljmp
mov
add
push
repnz
dec
sti
pop
int
cmp
sarb
pop
or
push
xorb
idivl
fmull
iret
arpl
loop
hlt
cltd
xor
ds
cltd
jge
pop
out
cmp
fidivl
outsb
shrb
sbbl
dec
fcomip
inc
sbb
jg
jg
mov
test
imul
pop
dec
xchg
push
testl
add
and
mov
cld
mov
aad
out
push
cmpsl
fs
cmpsb
rcrb
shrl
mov
push
mov
inc
outsl
sar
ds
pop
or
push
and
adc
sbb
jb
leave
ja
xchg
xchg
push
stc
or
notl
loopne
cmp
pusha
inc
movsl
stc
jbe
fbstp
lahf
inc
fiaddl
adc
fldenv
testl
lret
sub
int3
shl
mov
xchg
imul
rolb
sbb
push
mov
mov
jmp
mov
jl
or
mov
jge
int3
mov
cld
sbb
pop
int3
inc
fdivrs
lcall
es
dec
dec
mov
xchg
mov
dec
aaa
pop
lods
pop
mov
loopne
jmp
cmovs
add
sub
icebp
dec
sub
iret
sbb
inc
test
jbe
mov
int3
and
stos
push
sub
lret
pop
aam
xchg
push
out
pop
jnp
xor
cmc
inc
mov
mov
fcoml
mov
adc
insb
push
jmp
inc
cmp
push
lret
adcb
icebp
xchg
sub
or
test
fs
popf
je
mov
hlt
and
push
jle
outsb
daa
jns
sahf
and
inc
pop
pop
inc
mov
sub
data16
movsb
inc
enter
dec
mov
mov
lods
loop
test
pop
xchg
inc
sti
add
nop
or
popa
repz
dec
mov
adc
mov
push
sbb
jmp
pushf
mov
or
icebp
insb
jge
fsubr
shll
xor
push
adc
adc
xchg
lock
xor
aaa
in
mov
mov
addr16
loope
outsl
jb
movsl
scas
je
mov
rorl
pop
cmpb
rolb
inc
jmp
inc
push
mov
frstor
push
push
int3
fwait
cmpsb
addr16
into
xor
insl
in
lcall
mov
xchg
jmp
out
push
out
dec
data16
mov
cmpsl
cmpsb
fisttpl
adc
push
jae
xor
jns
and
test
ret
or
xchg
adc
xor
cld
pop
mov
js
mov
dec
test
pop
fisubrl
in
popa
push
testl
cli
ds
xchg
in
imul
cmpsb
arpl
inc
adc
xchg
fidivl
test
push
pop
and
cltd
and
pop
sbb
test
jae
sbb
in
sbbl
mov
pop
ret
lret
pushf
sahf
scas
xchg
push
sarb
add
pop
mov
xor
int
xchg
mov
cld
insb
pop
outsb
mov
fwait
pop
lcall
movl
mov
adc
rcll
mov
and
insb
test
mov
out
sbb
pop
call
push
js
xorl
idivb
rol
jp
icebp
push
imul
xor
loope
or
inc
ljmp
inc
test
lods
push
mov
jecxz
xor
sub
out
adc
mov
stos
mov
data16
outsb
insl
scas
fistps
jg
iret
jl
stos
inc
mov
stos
movsb
xchg
inc
test
xor
fcomps
stos
fstps
pop
aaa
cmp
xor
dec
loope
sbb
mov
jae
sub
xor
push
scas
mov
adc
push
inc
and
push
push
pop
loope
es
icebp
xchg
sub
add
sar
out
mov
out
jge
pop
mov
outsl
push
jmp
adc
add
jge
jecxz
repz
popf
inc
fucomi
mov
mov
mov
dec
movsb
mov
add
mov
fdivp
ja
mov
ja
hlt
lock
fiaddl
or
repnz
or
pop
loop
fisttps
add
push
inc
mov
icebp
mov
and
xor
xchg
aas
push
lret
flds
std
fldl2t
cs
test
sub
and
sahf
fs
xchg
icebp
or
stos
mov
pusha
dec
dec
jecxz
add
push
push
push
imul
xchg
call
addr16
outsb
sbb
test
shrb
nop
stos
xor
idivl
imul
sbb
mov
pop
xchg
pop
or
in
pop
mov
nop
repz
lcall
pop
add
dec
jnp
push
mov
xor
rclb
jle
lds
xor
ja
sbb
imul
push
imul
mov
add
xor
daa
lahf
ss
add
pop
js
mov
xchg
shrb
mulb
or
jecxz
mov
mov
test
or
lcall
add
mov
pop
test
lods
imul
lahf
test
mov
and
addb
int
out
inc
and
inc
sbb
jge
aas
scas
xor
movsb
test
adc
inc
test
xchg
mov
dec
sub
jb
jae
out
sub
fiadds
mov
sbbl
jnp
pushf
inc
mov
sti
jbe
jmp
in
std
mov
pusha
stos
mov
jae
mov
jb
lods
loope
pop
loop
xorl
into
cs
sub
lea
test
ret
lods
dec
loop
inc
clc
mov
dec
in
pop
icebp
movsl
popf
out
xor
add
jb
push
mov
xchg
xchg
dec
pop
imul
lock
mov
ret
pop
dec
sbb
mov
add
push
lret
mov
sub
dec
pushl
cmpsb
ds
lret
addr16
and
inc
jmp
add
and
and
fldcw
or
lock
leave
popl
nop
sub
inc
ja
ret
test
sub
mov
add
nop
aam
out
push
cwtl
ret
das
mov
pop
stos
arpl
xchg
int3
loop
adc
jp
mov
xchg
push
mov
xchg
jge
sbb
and
pusha
mov
shl
lret
mov
mov
sbb
inc
ds
cmp
push
push
jb
movsl
fcomps
or
jp
xchg
sbb
cmpsl
cmp
aam
or
cli
mov
sub
push
inc
dec
pop
jns
repz
push
pop
add
cli
icebp
movsl
sub
pop
jne
xor
dec
push
pop
outsb
aad
loop
mov
test
cmp
lahf
fwait
insl
ret
xor
shrb
inc
stos
or
mov
push
dec
addb
inc
inc
fdivrs
jge
mov
in
fs
test
aad
xchg
pop
div
xor
sbb
mov
xchg
sub
aad
cmp
pop
mov
mov
add
mov
sbb
sub
add
stos
ror
loop
cmp
push
gs
hlt
pop
dec
add
jne
xchg
icebp
xchg
in
adc
daa
int3
mov
adc
ret
or
add
int3
jp
insl
adc
pop
or
loopne,pn
sbb
lods
inc
or
mov
xor
hlt
mov
lea
xor
add
mov
pop
mov
ljmp
push
xchg
mov
std
mov
aam
dec
mov
loopne
call
ja
jbe
repnz
xchg
push
sti
aas
mov
emms
mov
aad
sub
add
shll
out
repz
scas
inc
std
push
cmp
fsubl
push
cmp
mov
mov
addr16
xchg
jle
pop
pop
mov
or
std
hlt
xor
xchg
mull
push
jl
add
xchg
mov
pop
sti
stos
nop
and
xchg
dec
push
ret
out
add
adc
les
add
bound
mov
mov
imul
imul
push
out
test
scas
orl
or
test
sub
mov
lret
insl
push
out
mov
jo
insl
mov
in
cmc
cmp
decb
int
mov
fsubrl
adc
mov
jbe
push
sbb
dec
mov
stos
popf
jmp
add
out
ss
popf
sub
aam
outsb
push
mov
cmc
mov
mov
cmp
cli
movsl
je
sti
adc
sbb
pop
cmpsl
lret
aaa
fisubrl
push
xor
sbb
mov
and
shll
inc
fs
js
sbb
test
adc
sahf
popf
add
mov
jge
sub
mov
xor
cwtl
adc
inc
jg
iret
lcall
dec
sbb
push
js
and
push
and
adc
loope
arpl
mov
outsb
insl
sbb
xchg
sub
lods
stos
popf
pop
popf
je
loopne
call
inc
dec
xor
arpl
fcompl
enter
mov
or
shl
out
push
xchg
xchg
lock
inc
mov
fs
in
lahf
je
inc
pop
inc
adc
pusha
rsqrtps
in
push
pusha
cmp
call
subb
sbbb
stc
testb
pop
fiadds
repnz
mov
mov
mov
icebp
mov
scas
sbb
jp,pt
cs
ss
cltd
pushf
repnz
jecxz
mov
sub
inc
fndisi(8087
dec
pop
cmp
cltd
mov
dec
sahf
mov
cmp
stos
rorb
and
mov
or
stos
dec
add
dec
pop
daa
ja
add
cli
jae
sub
jno
add
ds
jns
mov
mov
fildll
stos
test
jb
inc
fistpl
mov
xchg
sub
xchg
loop
cmpl
outsb
push
stos
daa
repz
jmp
mov
jae
jno
jge
scas
mov
dec
gs
cmp
fidivrl
push
jne
adc
sub
jl
in
scas
pusha
cli
push
inc
mov
enter
ljmp
xor
xchg
and
lcall
std
clc
aad
add
xchg
jb
lods
mov
mov
cmc
or
mov
jl
dec
dec
sbb
jb
test
cli
ds
js
sbbl
xor
lods
dec
add
xchg
sarb
jle
lret
mov
adc
push
popf
lods
mov
fstp
jne
adc
jge
or
dec
or
jge
or
sbb
aam
mov
pop
lahf
gs
scas
xchg
movmskps
inc
ljmp
mov
shlb
xor
arpl
push
add
sub
mov
aad
sub
outsb
ss
mov
fucomp
mov
pop
or
mov
mov
dec
adc
mov
aam
pop
push
lcall
cld
dec
out
mov
psrld
mov
sti
stos
adc
and
daa
cmpl
pusha
sarb
lret
int
push
fcoms
xor
mov
les
adc
cld
pop
cmp
ret
dec
loopne
dec
sbb
jns
lds
shrl
aas
dec
fwait
movsl
fldenv
sub
clc
or
mov
std
into
popa
sbb
sbb
mov
push
mov
aaa
push
sahf
loopne
in
xchg
and
inc
in
add
mov
inc
faddl
and
lcall
rorl
or
outsb
xor
mov
pop
arpl
std
pusha
cltd
les
add
dec
psadbw
xchg
sub
or
adc
nop
mov
arpl
xor
jmp
pop
roll
imul
pop
rorl
rcl
shrl
outsb
add
ficompl
daa
inc
popa
sbb
xchg
jb
gs
cmp
popf
sub
add
jae
sbb
cmp
xorl
out
adc
push
int
fistpll
sbb
adc
mov
jmp
inc
or
xchg
jb
arpl
neg
outsl
out
xor
sub
aas
pop
pop
imul
sbb
lea
jp
mov
loope
dec
lock
inc
or
mov
inc
test
cmp
mov
or
cs
push
ds
pop
jno
lcall
mov
pop
mov
xchg
mov
fdivl
cmp
mov
pop
mov
out
lret
jg
insl
mov
cmp
sub
mov
loop
stc
inc
push
and
xchg
lret
xor
gs
mov
ud0
or
in
cmpl
out
subb
push
mov
push
pop
sbb
insl
inc
lods
fcmovnb
pop
ds
sub
pop
xor
movsl
cmp
push
int3
sahf
or
pop
out
xchg
std
cmp
jbe
mov
xlat
mov
lret
mov
lds
push
pusha
push
int
pop
or
sarb
pusha
fisttpl
incl
out
pusha
in
xchg
pop
outsb
clc
test
dec
push
aam
pushf
iret
push
out
jnp
cmp
adc
icebp
cmp
jl
xchg
lock
ss
fucom
and
push
lods
xor
cvttps2pi
nop
in
push
sub
mov
arpl
filds
xchg
popa
fmull
ret
mov
sbb
xor
xor
dec
push
negl
mov
sub
mulb
jl
dec
insl
cmp
pop
mov
mov
push
negl
xor
sub
and
lret
mov
filds
arpl
jl
jnp
cli
lods
aaa
iret
cli
loope
stos
inc
cmpsl
mov
jo
iret
push
setae
jnp
pop
cwtl
mov
lods
inc
xor
clc
and
sbb
mov
pushf
cmp
mov
or
add
jge
and
mov
dec
mov
dec
fnstcw
mov
shlb
lret
dec
cwtl
add
out
fs
mov
sti
or
mulb
adc
pop
dec
clc
addr16
pusha
cltd
ret
xchg
push
jmp
test
xchg
sahf
pushaw
fbld
push
insb
inc
loope
adc
loopne
incb
or
inc
pop
jmp
in
add
or
leave
ret
add
sbb
jl
push
mov
adc
inc
push
mov
dec
mov
jb
sbb
push
inc
mov
xor
lods
mov
sbb
cmp
mov
ret
jmp
fnstsw
in
movsb
cli
sbb
pop
inc
cwtl
lret
push
cmp
inc
pop
push
and
jne
repnz
sbb
add
fcmove
cmpsl
sarb
test
scas
jb
arpl
push
ljmp
testl
scas
repnz
sahf
aad
pop
cmp
insb
std
bswap
popa
dec
push
pop
fildl
mov
adc
push
dec
iret
sbb
mov
fimuls
out
into
and
cmc
sbb
push
adc
dec
ss
push
mov
mov
js
je
xor
push
outsl
cld
inc
push
test
jnp
ja
pop
out
lods
in
jo
filds
jno
mov
push
int
in
aad
mov
and
out
and
testl
jg
push
and
pop
ja
inc
push
pusha
lret
xor
scas
insl
fwait
out
lds
ss
cmp
int3
cwtl
mov
push
outsl
loop
jae
loop
sub
add
xor
pop
je
and
repz
das
cwtl
bound
sbb
lea
pusha
ss
adc
stos
xlat
sub
bound
jno
mov
push
insb
fnstcw
rolb
out
dec
mov
mov
arpl
pop
xor
mov
adc
testl
jne
movsb
and
outsl
cmp
sub
dec
xor
add
imul
cmp
jge
fmulp
cltd
pop
movsb
repnz
std
lods
shl
repnz
mov
and
add
jbe
fnstenv
pop
cld
sub
xchg
mov
adc
mov
std
pop
lret
lret
cmp
mov
aad
pop
mov
in
shl
aad
push
push
insl
lahf
and
sbb
mov
cwtl
jns
push
inc
imul
xchg
inc
push
mov
adc
pop
icebp
xchg
arpl
lahf
xchg
add
or
decl
jg
dec
dec
scas
mov
and
xchg
mov
js
hlt
lock
push
mov
loope
or
mov
mov
mov
ret
mov
sub
add
or
in
xor
rcrb
jecxz
xchg
cmpsb
and
popf
dec
or
imul
pop
push
xchg
adc
sub
cmp
movsb
push
les
mov
or
xor
add
gs
sub
jle
outsb
sub
or
xchg
test
xor
jmp
addr16
sbb
adc
es
std
subl
rclb
mov
mov
add
push
repz
imul
out
mov
xchg
add
inc
js
dec
xchg
push
fmulp
gs
mov
orb
js
hlt
mov
push
cs
cmp
mov
scas
mov
test
shr
fwait
mov
nop
daa
clts
inc
push
into
push
push
cmp
xor
mov
outsl
mov
xchg
cmc
lcall
sbb
push
lock
mov
xchg
jbe
dec
mov
lock
jge
xchg
sbb
imul
repnz
push
mov
xlat
arpl
or
lret
in
aas
in
call
loopne
pop
push
scas
pop
push
adc
js
jo
mov
xor
or
jmp
add
dec
sub
sbb
sbb
mov
in
adc
sbb
fsubr
loopne
pop
jns
and
cmc
test
in
sahf
inc
add
inc
pop
cmp
xor
mov
shll
mov
push
mov
in
pop
into
xor
cmp
stc
sbb
aad
pop
or
xchg
sub
cmpl
jae
mov
mov
mov
mov
flds
mov
fisubl
lds
xor
pop
int3
xor
xlat
in
pusha
lds
sub
fildll
add
loopne
dec
mov
in
adc
sbbb
std
mov
insb
xor
sarb
jne
sbbl
sub
mov
jnp
xor
and
mov
lahf
fs
sbbb
cld
mov
xor
lock
mov
test
xchg
cld
dec
mov
xchg
xchg
sub
add
lods
fistl
scas
xor
mov
mov
ja
jge
and
jns
or
mov
xor
scas
mov
sbb
test
cmp
cli
add
test
push
jp
lds
ja
cwtl
sti
sbb
test
cmc
testb
popf
aad
inc
jecxz
cwtl
sbb
add
pop
cmp
dec
subb
jg
dec
hlt
cli
inc
pop
ds
pop
dec
sbb
mov
imul
stos
and
push
adc
add
add
das
fsubl
lret
sub
dec
push
sub
pusha
mov
jb
cltd
gs
or
clc
popf
rcll
repnz
pop
jmp
adc
adc
es
repz
sbb
mov
cltd
mov
jnp
mov
out
inc
and
lret
cmc
out
xchg
sbb
and
outsl
imul
mov
xchg
sub
pop
pop
mov
sbbl
fcmove
sub
cli
cmp
sub
sarl
mov
loop
inc
mov
in
arpl
mov
rolb
mov
js
cs
cwtl
cs
iret
rcl
mov
js
stos
fmul
and
lcall
faddl
xchg
mov
add
ret
popa
sbb
out
jno
sub
test
jmp
mov
mov
sub
xor
xchg
shrl
loope
cmc
xchg
lea
aaa
test
sahf
sub
lcall
mov
out
jno
mov
insb
in
push
stos
inc
mov
xchg
add
push
in
pop
in
in
and
notl
dec
cmpsb
push
add
pop
test
fiaddl
and
in
ror
adc
std
cld
adc
es
pop
shll
cmp
cmp
sarl
stos
jmp
inc
pop
xor
shll
icebp
and
daa
add
pop
outsb
stc
insb
lods
ljmp
pushf
sub
inc
outsl
sbb
jnp
test
xor
pop
scas
cmp
jecxz
xchg
loopne
cmp
test
test
scas
xor
dec
cmp
pop
or
dec
adc
inc
imul
pop
ljmp
hlt
jg
mov
fs
mov
and
rorl
loope
in
push
repz
mov
loopne
aaa
push
shll
push
ss
lods
jns
mov
sub
fnstenv
sub
push
icebp
dec
mov
in
pop
out
xor
leave
loopne
insl
lret
mov
push
inc
xor
stos
and
repz
rcr
fcoml
loop
leave
mov
ret
sub
outsb
lcall
and
and
or
hlt
stc
dec
mov
cmp
cmp
add
jb
cmpsl
xchg
add
addb
jg
dec
iret
out
bound
test
mov
sarl
mov
mov
loopne
adc
push
mov
adc
add
mov
outsl
inc
js
dec
mov
sahf
xor
in
adc
jmp
push
jbe
iret
in
pop
jmp
inc
cmp
pushf
pop
add
add
fisubl
cmpsb
shr
cltd
lds
mov
push
in
jecxz
xchg
mov
inc
push
sub
adc
shlb
enter
and
or
pusha
daa
insl
adc
dec
or
push
xchg
in
ficoml
pop
or
pop
ds
mov
stos
mov
fisubs
cpuid
cmp
jns
js
cmpsl
jecxz
sub
mov
and
rolb
push
jb
lcall
jmp
shll
aam
add
push
mov
adc
popf
inc
loop
loop
and
sub
shrl
push
xchg
pop
outsb
loope
mov
fsubs
cmpsl
ds
dec
jne
cld
les
leave
add
xor
xchg
nop
fwait
jl
test
faddl
pop
sbb
mov
xchg
or
cli
iret
lds
jg
xor
test
inc
jno
stc
repnz
and
xor
ss
push
inc
sti
push
data16
mov
cmp
shl
iret
cwtl
cltd
incl
xor
testl
cli
push
jp
jp
pop
lock
lds
stc
pop
hlt
out
jne
pop
xor
in
ret
add
cmpsb
imul
jle
add
push
mov
push
movsl
cli
mov
in
std
leave
sbb
testb
push
jnp
xchg
and
cld
sub
mov
or
cmpsl
vandnpd
insl
test
inc
jl
push
movsb
popa
jg
or
inc
mov
rcrb
enter
pop
popf
sub
leave
insb
scas
sub
mov
pop
fwait
mov
loop
repnz
mov
pop
repnz
inc
jge
jae
sbb
orb
dec
pusha
inc
ja
ss
pop
jge
jns
cmc
pop
push
jae
sar
or
jb
push
cmp
incl
inc
imul
xchg
out
ds
cwtl
shlb
mov
ss
pop
adc
clc
cmp
pop
fcoml
mov
xlat
jb
xlat
inc
stos
or
xchg
cmp
sub
mov
fwait
xchg
ret
in
cmp
movsl
addr16
aaa
stos
aaa
je
sti
mov
adc
aaa
filds
and
cltd
fadds
mov
adc
ss
es
stos
jne
lock
xor
imul
push
dec
icebp
in
imul
in
push
adc
les
mov
rcrl
or
jmp
inc
repz
mov
fisubrl
pop
rcl
jo
mov
ret
sbbb
mov
add
into
aad
pushf
hlt
push
push
mov
push
in
jbe
xchg
cmp
jae
sub
fdivr
jg
pop
mov
inc
sbb
jp
stos
and
insb
repz
mov
xor
add
fstps
in
stos
xchg
jae
mov
jl
mov
and
sti
rcll
xor
ret
lahf
mov
sbb
popf
push
jne
sbb
jae
stos
mov
jne
inc
xchg
mov
xchg
loope
sub
dec
data16
mov
and
fisubs
cwtl
je
bound
jp
or
movsb
mov
and
cmpsl
xor
jbe
mov
clc
out
mov
pushf
dec
lock
xor
pop
aad
ja
testl
pop
jae
lret
sub
dec
jecxz
lret
fimuls
push
pop
aaa
push
or
mov
sbb
in
mov
pop
add
mov
fiadds
mov
dec
int3
xchg
push
jns
jmp
cmp
or
inc
or
test
dec
in
cmpb
and
std
test
xor
sub
cmc
push
mov
fimuls
lret
cmp
roll
adc
and
pop
hlt
adcb
in
or
mov
cmp
cltd
rorb
adc
imul
out
stos
fstpt
add
lods
sbb
into
gs
mov
sbbl
enter
or
negb
sub
cmpsl
test
in
jl
add
xchg
add
nop
aad
jge
cmpsl
cmp
lds
inc
mov
sbb
inc
cltd
in
mov
push
orl
in
mov
cmc
mov
lods
push
out
sbb
mov
mov
push
aas
bndstx
jne
xchg
push
mov
push
outsb
mov
xor
test
cwtl
jge
jmp
inc
outsb
adc
or
and
pop
movsl
mov
out
mov
push
pop
sub
loopne
xchg
jge
test
int3
je
adc
pop
call
mov
hlt
cmp
sub
mov
shll
adc
pop
fdiv
xor
inc
icebp
xor
fcoms
push
lock
fdivl
mov
xchg
icebp
out
sbb
fs
jno
jns
mov
int
insl
imul
rcr
ja
sbb
bound
adc
cmp
mov
imul
xor
lret
rorb
orb
lods
mov
cs
push
mov
into
adc
repz
pop
lods
add
lahf
jb
lret
psrad
fnsave
or
dec
iret
dec
fwait
scas
jecxz
cmp
orb
out
cmp
mov
jbe
iret
loopne
rcl
arpl
data16
push
inc
mov
dec
jecxz
pop
in
xchg
out
mov
aaa
clc
dec
repz
dec
fcoml
into
and
repz
xchg
adc
das
inc
mov
xchg
mov
ficoml
shlb
imull
dec
lfs
stos
xchg
dec
mov
push
stc
scas
or
dec
das
push
dec
adc
cmpsl
push
loopne
in
cld
in
daa
cs
mov
push
andl
shll
dec
mov
repnz
rcrb
rolb
iret
xchg
lahf
push
adc
pop
cmp
cltd
or
add
xor
mov
inc
or
push
inc
sub
ds
xor
and
mov
pop
sub
push
aam
addr16
sub
cld
getsec
or
xchg
cmp
jle,pt
mov
rorl
push
cmc
mov
or
cltd
loope
cmc
fwait
imul
sub
or
sub
add
ds
inc
pop
movsl
hlt
ret
outsl
ret
pop
sbb
dec
aam
jle
pop
loope
jge
mov
das
pop
or
push
inc
mov
shlb
imul
pop
jmp
insb
aam
adc
mov
mov
jp
pop
in
mov
adc
jbe
repz
mov
lahf
jb
ret
jp
fnsave
pushl
add
mov
mov
inc
pop
adc
xor
dec
lret
call
out
xchg
jp
orl
mov
pop
mov
add
addr16
pop
lods
ljmp
xchg
inc
mov
cmp
adc
dec
ror
outsl
adc
leave
pusha
sbb
fiaddl
xor
lock
aaa
ficoml
repz
call
push
loopne
out
inc
adc
mov
ret
inc
add
mov
push
test
push
out
mov
mov
js
loope
pop
stos
jg
push
fisubl
into
arpl
dec
mov
jmp
lods
sub
ljmp
cmc
cwtl
push
gs
push
dec
outsb
loopne
loopne
repnz
frstor
cwtl
shlb
out
xchg
lds
int
mov
or
and
mov
rcrb
insl
inc
dec
dec
jb
lret
pop
imul
jmp
pop
sub
sbbb
inc
out
inc
jns
adc
aam
das
into
cmp
and
mov
pushf
xchg
aam
ds
mov
lahf
in
cld
inc
xchg
jg
icebp
daa
scas
ljmp
stos
call
sub
adc
adc
daa
cmc
adc
mov
int3
outsl
stos
sbb
int
dec
out
test
push
jae
enter
stos
cli
stos
pop
pop
rcll
mov
xchg
daa
mov
xchg
in
in
xor
mov
jbe
sahf
jge
leave
inc
std
jo
bound
inc
mov
push
rorl
xchg
aad
in
push
mov
dec
loop
jp
shl
xchg
xor
mov
inc
jne
lret
bound
int
fcomps
adcb
inc
faddl
cmpsb
gs
loopne
je
cmp
cld
ja
insb
test
or
mov
jo
inc
push
mov
stos
xchg
fidivs
std
loop
jl
inc
add
push
push
pop
addb
pop
hlt
jnp
jnp
stos
out
addb
push
shrb
aaa
mov
test
arpl
xchg
dec
add
mov
pop
adc
xchg
inc
dec
sarb
push
arpl
xchg
mov
adc
xchg
repz
mov
sbb
sbbl
push
lcall
push
dec
stc
nop
ja
je
mov
pop
scas
lret
inc
mov
ss
cwtl
jecxz
mov
xor
outsb
mov
imul
pop
mov
pop
cmpsb
pop
xchg
arpl
cmc
addr16
outsl
jne
into
cmpl
mov
mov
jecxz
xchg
loop
jecxz
in
push
xchg
sarb
sahf
push
add
xor
or
rcll
jl
mov
and
push
cs
sub
orb
js
add
pop
lahf
ss
call
js
fsubrl
scas
decl
testl
rcr
fsubs
stc
sub
jbe
mov
jo
dec
sbb
cmp
or
insl
test
iret
ds
in
cltd
xor
sub
mov
into
int
or
mov
push
fwait
sub
add
sbb
push
adc
inc
lds
lcall
mov
shrb
xor
mov
pusha
cmp
and
xchg
lahf
out
inc
fnstcw
fnstenv
fwait
sti
daa
pop
test
xchg
popa
push
mov
sbb
shlb
xchg
push
cwtl
xor
mov
xor
jnp
mov
xchg
pop
and
push
push
outsl
jnp
cmp
lret
movsl
decl
mov
push
adc
hlt
ss
mov
notb
mov
shrl
adc
xchg
mov
lret
xchg
sbb
inc
adc
popf
dec
outsb
movsb
aas
fiadds
jne
sti
xchg
fldcw
lods
mov
xchg
mov
pop
es
jmp
rclb
mov
cmpsl
sahf
cltd
test
jns
cmc
adc
arpl
pop
ds
imul
fs
sbb
mov
push
mov
lods
cld
xchg
outsb
add
imul
ss
mov
pmullw
mov
ret
jmp
iret
cmp
out
add
pop
ljmp
jb
stos
dec
dec
pop
jae
sbbl
mov
nop
add
adc
inc
pop
enter
xchg
cs
push
xor
push
aad
add
idivb
rep
insl
hlt
or
stc
je
in
stos
pop
cmp
ljmp
clc
adc
repz
mov
mov
jae
cwtl
nop
iret
inc
fsts
lea
lea
pusha
divl
xor
rolb
fwait
stc
jg
jmp
sub
in
ret
push
in
push
ret
addr16
stos
fildll
cmp
out
inc
xchg
mov
cltd
xchg
je
insl
jp
jns
in
and
popa
mov
fcmovbe
fadds
aas
fs
and
scas
lret
ret
lds
int3
js
push
inc
mov
je
shr
xchg
jno
fsubrl
loop
or
xchg
push
mov
das
push
add
push
xor
sbbb
push
add
xchg
sub
jnp
aas
dec
pushf
lods
or
sub
lods
in
rcl
rolb
and
icebp
sub
pusha
paddb
adc
sbb
jb
lods
dec
cli
cwtl
test
xor
jmp
and
fdivr
pushf
das
jno
sbb
or
jbe
test
mov
push
in
dec
jb
int3
arpl
ljmp
pop
icebp
bound
cmc
xor
fcoml
cmp
and
xchg
ss
sbb
popf
cmp
dec
mov
sbb
lock
data16
rorb
or
lahf
addb
dec
and
cs
mov
filds
push
mov
mov
xchg
rcr
out
cli
aad
int
cmp
or
cmp
inc
push
dec
add
jmp
jae
daa
mov
sbb
adc
mov
mov
mov
or
jecxz
jo
and
jnp
in
orb
pop
out
loopne
shl
or
or
les
sbb
jmp
cmp
mov
mov
and
inc
sbb
mov
dec
cltd
das
ret
cmp
ret
lahf
xor
insb
jmp
popf
push
jnp
stos
add
ds
adc
insb
cmc
stos
lret
fcoml
test
add
fidivs
out
test
push
and
sub
jp
add
sub
xor
sbb
scas
fs
adcl
dec
enter
fsubr
xchg
insb
cs
ds
into
repz
cmp
in
jns
shr
montmul
cmpsb
pop
add
sub
sbb
inc
xlat
dec
add
fldt
or
and
movb
movsl
or
js
inc
test
adcb
jnp
push
outsb
ds
negl
lock
jae
add
adcb
mov
sahf
outsb
adc
int
pop
xor
aas
mov
mov
add
lret
sub
shll
fldl
lods
sub
or
lret
push
loopne
push
aad
push
push
out
jg
xor
enter
and
xchg
arpl
xor
mov
cmp
fwait
out
or
mov
xchg
daa
mov
inc
and
fadd
push
cwtl
movb
mov
popf
inc
ret
xor
or
mov
and
test
lret
inc
scas
pop
loope
cmp
stos
mov
jmp
mull
or
pop
or
test
add
or
mov
rcll
call
push
xchg
ljmp
dec
ret
pop
jp
hlt
push
jbe
loope
jge
adc
inc
aad
popf
xor
jae
jbe
sahf
mov
inc
dec
mov
dec
loopne
daa
xchg
or
mov
mov
pop
lret
xorb
cmp
aad
imul
jnp
mov
or
mov
sub
test
scas
xchg
xlat
or
outsl
mov
outsb
sbb
popf
ret
fs
add
lock
sbb
mov
add
outsl
cmp
loopne
sbbl
or
rolb
lea
dec
into
fisttps
and
dec
xchg
mov
clc
xor
sbb
es
out
xor
enter
int3
arpl
sti
xchg
dec
std
jno
enter
sbb
or
aaa
into
insb
mov
push
in
lea
jae
push
gs
loopne
idivb
pop
std
jne
sub
xchg
adc
insb
insb
adcb
cwtl
jno
leave
cltd
mulb
fwait
add
pop
mov
mov
test
mov
push
lret
mov
icebp
lret
cld
push
imull
inc
mov
sub
mov
inc
ret
lods
pushf
rcrl
push
lcall
sahf
clc
mov
je
xor
fmull
sub
ljmp
movsb
and
dec
jecxz
insb
psadbw
push
ret
pop
add
js
mov
mov
test
jo
fwait
cmp
xor
sub
decl
sub
xor
data16
sbb
cmp
insl
test
cmp
icebp
out
enter
stos
inc
inc
cmp
add
sbb
mov
add
inc
pop
inc
jne
cmpsl
popa
adc
pop
xchg
dec
adc
gs
push
movsb
stos
mov
and
add
sub
jb
jecxz
push
xchg
idiv
cmp
adc
ljmp
xchg
fwait
scas
lds
push
pop
pop
xchg
cmpsl
add
pop
icebp
pop
and
fstp
clc
sub
inc
stos
in
jmp
mov
sbb
jne
adc
leave
jo
adc
cli
scas
subb
jno
outsb
sub
fs
xchg
adc
fnsave
jge
mov
arpl
xchg
inc
cltd
das
add
jns
mov
mov
pop
mov
dec
jle
inc
fxch
mov
subb
push
xchg
add
cwtl
or
add
mov
stos
push
dec
arpl
int3
xchg
outsl
adc
inc
pop
and
outsl
test
fisttps
mov
repz
ret
out
repnz
add
aam
mov
dec
sti
or
mov
into
data16
jle
scas
in
inc
in
cwtl
repnz
push
mov
cld
aas
test
ljmp
mov
mull
jle
lods
lret
lret
int
add
popa
sti
or
xchg
xor
inc
popf
in
les
or
and
rorl
add
or
sbb
add
xor
sub
fsubrs
rcrb
push
or
nop
mov
dec
sub
sbb
cmc
mov
mov
and
mov
push
imulb
ret
xorb
ja
aad
mov
jle
in
mov
ja
dec
sub
icebp
sbb
data16
pop
dec
lret
mov
cltd
push
xchg
and
inc
xchg
gs
sub
mov
fsubl
xlat
addr16
push
stos
mov
mov
fninit
test
adc
mov
test
repz
add
dec
fwait
and
outsl
pop
lods
subb
adc
out
sbb
loope
sub
rol
pop
inc
xor
mov
lret
push
mov
bound
lea
jns
stos
scas
ficoml
inc
popa
into
fsubp
add
sar
push
nop
dec
sbbl
sub
es
push
mov
dec
and
int
addr16
adc
mov
jns
ss
add
dec
or
adcb
icebp
int3
sub
lret
leave
arpl
jae
scas
push
push
sbb
cmp
fistps
lahf
cmp
inc
push
jle
mov
sbb
ret
fwait
jge
loop
sbb
jno
test
push
jnp
lds
dec
jbe
jno
in
inc
rcr
fimull
jmp
sbb
sbb
ljmp
xchg
dec
aad
addr16
mov
xchg
pop
aas
adc
jns
mov
cmp
cli
pop
call
bnd
test
lcall
outsb
jne
cs
pop
xchg
pop
xor
sbb
jg
cmp
aas
add
jnp
sbb
pop
jl
outsl
cmpsl
fsubrs
or
sub
and
lods
popa
sub
xor
mov
je
jnp
xlat
rorl
pop
adc
and
mov
pop
call
dec
pop
repnz
movsl
push
mov
popa
xor
iret
fiadds
push
dec
repnz
adc
rorb
aas
dec
inc
sub
add
repz
iret
mov
jl
add
sub
lea
xchg
mov
pop
dec
lock
inc
and
repz
and
inc
inc
xchg
add
ret
lods
add
sub
cltd
push
lret
fldl
lcall
push
add
dec
dec
dec
jb
inc
push
inc
jmp
out
mov
mov
sub
add
mov
lds
imul
mov
or
movl
test
mov
icebp
pop
dec
sub
mov
enter
push
jecxz
or
mov
dec
and
dec
mov
inc
push
jo
xor
fdivr
inc
adc
repz
arpl
cmpsl
jae
flds
jmp
xor
push
xchg
push
loopne
test
add
pusha
pop
push
mov
movsl
cmp
push
stos
jno
pop
shl
mov
mov
cmp
cwtl
shll
dec
adc
inc
test
iret
mov
push
sbb
pop
xchg
jp
adc
jmp
stc
out
xor
mov
out
push
lock
inc
out
mov
ss
jne
fs
subl
pop
xchg
xchg
std
push
inc
stos
mov
inc
imul
push
mov
sub
pop
dec
pop
fistpll
stc
sub
leave
mov
mov
movsl
addr16
bound
or
mov
jnp
int
movsb
mov
lret
mov
adc
push
mov
cltd
mov
mov
and
sti
lods
sub
pop
loope
das
adc
pushf
and
pop
icebp
sbb
std
cmp
sti
leave
add
test
mov
pop
cmp
insb
ljmp
cmpsb
cltd
sub
sbb
lods
dec
fs
in
xchg
addr16
mov
lods
test
or
and
test
aam
mov
or
in
pushf
je
mov
in
lret
int3
pop
into
fdivrl
cltd
fistps
cltd
lds
test
insb
mov
sbb
jne
call
lret
xchg
xor
or
fstps
rorb
sbb
clc
iret
pop
into
in
ret
add
mov
psubb
pop
aas
stc
sbb
inc
inc
fdivs
add
rcrb
out
addl
pop
imul
add
xor
ret
dec
popf
inc
fcmovne
movsl
xchg
ja
out
lock
idivb
out
inc
xchg
fidivs
pop
mov
mov
push
or
add
leave
rcrb
sub
pop
imul
push
cmpsl
int3
xchg
or
add
xchg
mov
js
dec
nop
add
mov
test
xor
add
sahf
outsl
mov
sbb
push
or
dec
in
int3
fimuls
shlb
mov
repnz
inc
into
les
jmp
mov
repnz
inc
sub
xchg
mov
push
pop
or
inc
aas
mov
stos
jmp
imul
mov
ret
dec
adc
pushl
sar
push
rorb
cmp
jae
sbb
dec
sbb
pop
inc
iret
xor
and
popa
mov
adc
adc
loopne
jno
popa
rcrl
fwait
aam
lret
popf
aas
or
xor
cmp
or
mov
dec
dec
fnstcw
xchg
sub
cmp
hlt
hlt
test
sbb
jg
bound
sahf
cld
movsl
xchg
loop
cmpsb
xchg
jecxz
sub
add
mov
movsb
sbb
insl
jo
sub
jge
pop
jnp
xchg
add
jbe
aad
addl
jle
push
mov
sbb
rcr
and
mov
enter
pop
jmp
scas
shl
jmp
pop
adc
xchg
jb
outsb
lods
dec
pop
xor
mov
jb
jmp
loop
call
push
jo
insl
sub
rol
movsb
in
cld
sahf
jl
mov
jae
mov
push
aaa
mov
inc
xlat
repz
sti
push
fsts
imul
int3
inc
iret
lods
faddl
adcb
cmp
dec
push
mov
pop
inc
je
push
xor
sub
flds
aas
xor
add
sub
xor
xchg
aaa
mov
inc
lcall
mov
pusha
pop
pop
lods
xchg
mov
add
lods
mov
cmp
dec
mov
rclb
scas
es
jo
xor
sbb
pop
adc
fwait
mov
pop
mov
adc
pop
adc
in
cmpsl
outsl
cmc
setne
pop
ret
int
hlt
leavew
int
scas
scas
imul
add
jge
xchg
insb
aam
cmp
mov
repz
scas
cmp
lea
cli
pop
inc
pop
xchg
in
mov
push
mov
adc
in
fs
lret
mov
scas
test
or
and
shl
cmp
fucom
push
imul
pop
enter
cmpsl
sub
xor
in
and
push
xor
outsl
add
sti
push
cmp
cmpsl
mov
xchg
add
mov
insb
xchg
nop
mov
sbb
cmpsb
cmp
or
dec
dec
jmp
inc
push
stos
jns,pn
xorb
push
ljmp
rcl
push
outsl
lock
repz
push
jmp
jo
ret
cltd
lret
xlat
add
loopne
push
jns
push
jle
dec
les
call
ja
out
out
cmp
adc
leave
dec
js
cmc
out
negb
lods
mov
movsl
dec
mov
sbb
mov
ret
out
fstps
xor
mov
xchg
mov
cmp
mov
pushf
adc
push
sub
cmp
das
sbb
repnz
xor
jno
jns
data16
adc
out
pop
sbb
sbb
dec
push
sub
shll
xor
pusha
pop
scas
cmp
lods
inc
xorb
dec
push
out
cmpsb
mov
dec
or
xor
mov
mov
arpl
sbb
sti
push
mov
in
das
pop
xor
shrl
popa
cld
rcrb
jl
leave
pop
data16
leave
hlt
es
add
and
es
jecxz
jnp
hlt
roll
cwtl
jns
shrb
popf
jp
repz
fwait
aad
std
mov
jg
fmull
arpl
push
cmc
into
push
mov
adc
idivl
jge
push
xchg
out
fisttpll
fisubs
adc
sub
pop
lret
shr
shlb
das
cmp
jmp
pop
in
ja
fstpt
repnz
xchg
cwtl
mov
subl
mov
pop
xchg
mov
lods
push
mov
pusha
call
mov
repz
add
push
xchg
sbb
add
pop
fucomp
arpl
fbstp
scas
xor
dec
jbe
stos
inc
dec
stos
mov
jp
testb
or
xchg
mov
stos
push
jmp
enter
ljmp
imul
add
sbb
or
mov
loop
hlt
cmp
rcrb
mov
inc
inc
adc
cmp
popa
and
push
sahf
sbb
sub
mov
movsl
loop
mov
xchg
mov
mov
push
nop
jne
push
jecxz
aam
iret
push
push
sub
mov
rorl
sub
fcmovnbe
xor
enter
cmp
xor
imul
cmpsb
cmp
xchg
sbb
and
mov
sbb
jae
mov
xor
test
or
movsb
imul
mov
fwait
xor
xchg
cmp
popa
or
insl
dec
fdivl
mov
add
inc
lret
loope
or
clc
mov
bound
push
xchg
mov
insb
inc
push
enter
dec
subb
fs
movsl
cmp
lret
and
pop
mov
mov
inc
sub
aam
jle
in
jmp
pop
pop
push
jecxz
fsubr
cmc
cmp
ss
cmp
popf
icebp
mov
into
pop
jo
sti
int
fcompl
push
imul
fidivrs
cli
jle
mov
movsl
fsubr
out
xchg
mov
repnz
ja
inc
addl
lods
adc
xchg
in
dec
sbb
aam
mov
gs
and
mov
shll
cmpsb
add
xor
add
sahf
lret
data16
andb
aas
pop
fmull
pusha
mov
stos
es
and
scas
jns
pop
push
sarb
sbb
xchg
cli
divb
movsb
cli
adc
sti
fsubrs
incl
sub
mov
mov
push
and
inc
push
aaa
mov
ret
out
jp
mov
push
xchg
stos
mov
jns
jmp
dec
cltd
adc
call
mov
outsb
mov
and
push
dec
mov
sbb
mov
lcall
pop
dec
adc
in
xor
cwtl
jnp
ljmp
or
lds
in
mov
sarb
neg
pop
mov
movsb
in
cld
ret
repnz
or
push
xchg
loop
dec
dec
or
jl
pusha
add
ret
shlb
popf
stc
mov
dec
dec
mov
fildl
jecxz
mov
adc
popf
fnstsw
jne
adc
xchg
push
dec
imulb
in
fsubs
cmc
hlt
pop
cmp
stc
dec
cmpb
and
out
or
dec
ret
cmp
cli
adc
sub
shrb
xchg
or
cs
dec
cmp
cmp
jnp
scas
lods
aam
hlt
out
cmp
cmc
jecxz
push
shl
je
js
ret
xor
mov
adc
mov
mov
mov
mov
cmpsb
sub
xchg
and
inc
inc
icebp
xor
lods
imul
shlb
mov
xor
jne
adc
dec
fcomip
sti
xchg
xorb
popf
xchg
mov
or
fmuls
or
aam
mov
leave
frstor
adc
outsl
xor
xor
lret
or
dec
data16
aaa
aaa
add
xor
loopne
pop
cmp
cli
test
cs
loopne
pop
push
push
fsubl
mov
or
sbb
gs
imul
movsl
xorl
in
cltd
pop
out
fldt
inc
mov
pop
out
pop
psllw
outsl
dec
jo
les
lahf
mov
push
xor
jecxz
push
adc
mov
and
jmp
adc
pusha
mov
inc
scas
aaa
ds
pop
inc
fdivs
mov
mov
mov
imul
mov
push
insb
scas
fnstsw
cmp
arpl
in
pop
sbb
cmc
jl
jns
clc
inc
add
or
dec
in
jge
pop
or
cs
mov
dec
pop
popf
inc
mov
inc
fisubrs
mov
ss
lgs
mov
add
push
mov
call
and
scas
test
inc
hlt
dec
mov
jmp
adc
xchg
cmpsl
and
out
jge
daa
into
loop
mov
lret
ret
push
stc
lods
mov
mov
lea
cli
xchg
daa
pop
mov
sbb
inc
fsubl
sbb
and
fdivl
jo
jp
sbb
inc
dec
inc
js
pop
dec
fsubrl
cmc
xor
daa
mov
scas
inc
mov
int
sbb
mov
xchg
in
mov
bound
es
mov
add
xchg
jns
lcall
test
and
loope
and
mov
adc
and
add
mov
mov
shlb
es
cmp
mov
daa
cmpsl
adc
adc
add
push
xor
out
mov
push
insb
rorl
pop
test
addr16
sti
push
or
lods
pop
cmp
bound
or
xchg
xchg
mov
pop
cmp
mov
stos
bound
and
and
xchg
rorb
push
push
push
mov
in
loop
dec
jmp
shll
das
xchg
pop
repz
repnz
xor
adc
aas
divb
lret
bound
movsl
cs
xor
outsl
jne
push
xchg
sbb
or
sbb
out
les
lret
inc
lods
and
sub
dec
lea
mov
repz
jno
push
lcall
mov
ret
ljmp
and
divl
add
sub
ss
cli
lods
hlt
or
sbb
and
cld
shll
loope
aaa
adc
or
mov
clc
push
cmp
lahf
mov
shl
decb
pop
aam
xor
push
std
jbe
sbb
nop
pop
push
xchg
mov
enter
inc
inc
mov
scas
cli
popf
rcl
mov
loope
pop
int
mov
xchg
cld
add
pop
sub
pusha
clc
es
fsubl
inc
jg
stc
aas
adc
jmp
mov
xchg
ret
add
filds
adc
sarl
or
xor
loop
lahf
mov
xor
sub
adc
cmp
push
jge
xchg
add
mov
sub
lahf
cmpsb
push
rolb
dec
dec
and
mov
jne,pt
sub
daa
jmp
fsubs
adc
ljmp
jb
shll
movsb
or
push
out
lahf
xchg
outsl
scas
inc
xchg
add
loope
mov
push
cli
pop
inc
add
pushf
into
int3
dec
cmp
adc
push
xor
test
icebp
jb
repz
xchg
lods
mov
imul
pusha
sbbb
addr16
sbbb
mov
mov
fld
addr16
mov
cltd
mov
mov
sbb
sahf
lahf
adc
mov
mov
insl
pop
jno
and
sbb
inc
js
add
repz
imul
sub
out
xor
push
ljmp
adc
sub
pop
dec
xor
jmp
mov
xchg
push
mov
mov
push
xchg
or
jle
cmpsl
inc
ret
stos
mov
outsl
cs
ret
jmp
add
das
dec
icebp
xchg
cmpsb
cmc
push
aas
cmp
xlat
inc
sahf
dec
jp
ljmp
iret
leavew
popa
cltd
xor
adc
mov
jg
xor
repz
loop
mov
xor
lahf
mov
add
jno
and
enter
ljmp
icebp
cmpsl
mov
inc
xor
ljmp
negb
addb
or
mov
cmc
shll
mov
or
inc
sub
or
shlb
scas
imulb
adcl
dec
leave
adc
movswl
dec
mov
mov
out
sub
jbe
mov
adc
mov
aam
add
jne
mov
push
mov
ss
popf
rclb
mov
adcb
mov
sbb
mov
insl
rcl
adc
test
leave
aaa
inc
clc
lcall
rcll
mov
movsb
jl
insb
lahf
add
cmp
movsl
cmp
test
inc
push
aas
jmp
lea
mov
jmp
xor
or
mov
sub
xlat
outsb
adc
stos
cmp
or
cmp
xchg
lods
mov
jb
push
loope
jne
cmp
push
push
mov
int
loope
je
inc
pop
jne
cwtl
cld
adc
out
test
cli
and
dec
sbb
jb
dec
ljmp
sbb
cmpsb
dec
shlb
dec
pushf
push
pushf
aas
int
and
fs
iret
gs
pop
sbb
gs
pop
adc
loope
aas
xor
pop
inc
fsubl
dec
arpl
pop
mov
sub
lds
int
scas
dec
cmp
sub
out
push
mov
arpl
jge
es
pop
xchg
cmp
popa
insl
and
xchg
sbbb
mov
stos
mov
dec
inc
fcmovbe
pop
sti
mov
int3
sbb
push
fmulp
mov
fldt
push
stos
cli
bound
and
jae
out
or
and
or
in
mov
mov
sbb
mov
rorb
in
sarb
mov
inc
sbb
nop
push
call
xorl
sbb
ret
call
sub
mov
jne
jns
mov
aas
mov
fsubs
fidivrs
add
cld
rolb
in
xlat
and
pop
lock
lret
pop
outsl
jnp
out
xlat
lahf
and
in
sbb
push
daa
lahf
cmc
push
rorl
int
push
loop
je
push
or
rcll
sahf
xor
jns
jne
inc
sbb
mov
stos
jne
push
iret
outsl
dec
addr16
sahf
pushf
jmp
popf
adc
inc
repz
hlt
push
push
pushf
adc
mov
test
mov
xchg
hlt
loopne
das
or
in
pop
or
xchg
add
jno
jmp
pop
shrl
adc
out
pop
cli
push
and
std
cmovbe
bound
add
cld
push
pop
clc
insl
popa
mov
insl
jge
rorb
inc
movsl
inc
es
xor
imul
pusha
mov
ror
mov
scas
push
shll
into
and
cs
dec
xlat
push
fstpt
fstps
aaa
subl
imull
mov
xor
inc
in
scas
orb
stos
push
push
mov
adc
sar
stos
push
adc
test
decb
jb
sahf
sub
gs
sbb
inc
ret
pop
stos
pop
fldenv
inc
in
test
stos
inc
and
pop
fsubl
add
mov
jl
fwait
mov
push
mov
pop
fsubrs
cmc
jl
fidivl
notb
mov
push
std
xchg
inc
xor
push
addb
clc
int
add
and
fsubs
mov
mov
and
leave
unpckhps
test
lods
mov
cltd
jns
cwtl
jp
aam
mov
cli
adc
out
sbb
sti
xchg
sbb
sbb
xchg
test
faddl
push
stos
xor
and
in
cmp
xor
rcl
lcall
xor
xchg
arpl
cmpsb
jmp
outsl
push
mov
inc
lea
pop
add
mov
inc
cmpsl
inc
bound
or
jg
movsb
mov
call
sbb
xor
cwtl
lcall
in
jle
lods
in
fnstsw
jb
push
movsb
insl
dec
pop
xchg
jmp
ss
mov
mov
mov
xlat
xor
fwait
mov
xchg
imul
xor
push
loopne
xor
pop
and
dec
dec
outsb
enter
mov
mov
xchg
std
lods
dec
push
cmpsb
mov
cmp
add
push
call
cmc
rcrl
ss
cld
add
xor
mov
nop
mov
lea
pushf
pop
jg
mov
mov
in
xchg
cmp
dec
dec
add
aaa
sbb
incl
out
mov
inc
xor
inc
out
sti
mov
sarb
outsl
sbb
push
xchg
xorl
dec
int
cmp
mov
sub
rclb
vpmaddwd
cld
in
mov
adc
push
dec
dec
cmp
inc
jns
jg
cmpsb
adc
repnz
inc
or
jnp
push
ror
add
ret
cmpsl
inc
mov
xchg
xchg
pusha
ljmp
outsb
fidivrl
or
mov
fildl
and
jo
jne
cld
mov
mov
fisubs
xchg
pushf
sti
cmpsl
pop
inc
pop
mov
ja
aas
cwtl
call
pop
gs
mov
inc
pop
xor
push
push
filds
sbb
shlb
jmp
inc
mov
dec
in
addr16
push
sub
nop
add
mov
and
idivb
cmp
and
incb
jmp
aaa
xor
jecxz
in
aaa
add
xor
push
xchg
mov
incb
scas
jp
and
out
xor
je
mov
addb
push
adc
pop
loope
aaa
mov
add
add
mov
out
jecxz
pop
cmp
fs
adcl
cwtl
out
mov
out
lret
bound
shll
sbb
test
ss
das
push
imul
inc
es
xor
sbb
scas
adc
dec
vpunpckldq
out
mov
aaa
sahf
cmp
fadd
inc
nop
mov
ret
fcomps
insl
ret
es
arpl
cmp
mov
add
or
mov
xlat
xchg
gs
out
adc
and
cmp
push
in
inc
add
mov
dec
jb
es
mov
push
ja
popa
xor
mov
repz
lret
dec
mov
call
dec
xlat
push
enter
pop
lds
pop
cmp
cli
push
sub
dec
fidivrs
lret
pop
sub
fistpll
jne
out
and
lcall
cmp
fcom
xchg
adc
pop
shll
mov
and
das
jb
push
bound
js
add
nop
sub
imul
inc
clc
fwait
sub
push
pop
fildll
into
cmp
cmc
gs
inc
dec
rcl
repz
jle
movsb
std
mov
clc
push
fcompl
fsubrl
out
and
jne
stos
out
add
js
out
or
mov
push
js
cld
outsl
stc
cmp
push
mov
imul
and
arpl
lods
scas
sbb
pop
jae
daa
sub
outsb
cmpsb
xor
xor
and
fldenv
enter
xchg
out
popl
sub
pop
jecxz
out
dec
cld
dec
lahf
mov
jb
and
push
mov
repnz
mov
sbb
mov
iret
loope
push
xchg
sub
out
cmp
test
ja
sub
and
ljmp
movsl
cmp
cmp
aas
pop
cmp
jl
push
test
pop
les
daa
xor
push
popa
mov
addl
lds
dec
fstps
lods
jbe
mov
clc
fs
xor
sar
jg
mov
cmc
out
add
cmp
xchg
mov
test
clc
xchg
ds
pop
stc
mov
movsb
mov
xor
sub
cld
inc
mov
adc
leave
jnp
imul
mov
cmc
or
stos
orl
scas
dec
xchg
ss
inc
lret
leave
stos
cmp
fildll
pop
cmp
mov
ds
fcoml
pusha
mov
lret
or
or
bound
shrl
insb
adcl
xchg
xchg
mov
fdivl
xor
mov
ja
push
sub
and
dec
testb
sahf
xchg
push
xchg
push
inc
fwait
ret
mov
adc
sub
pop
hlt
jp
push
mov
mov
mov
xchg
icebp
jp
and
sbb
jnp
inc
push
test
cmc
fsubrl
xchg
jmp
rolb
imul
mov
inc
fnsave
loopne
jnp
fstpl
data16
in
xor
dec
in
decb
pop
fcoml
push
mov
addl
mov
cltd
sub
sub
negb
cmp
push
sub
xchg
out
add
jo
pusha
or
test
mov
dec
ss
sub
cmp
jecxz
stos
clc
fsubrs
into
sbb
mov
dec
add
adc
fdivrs
in
fstpl
lods
inc
inc
xor
pop
insl
arpl
xchg
int
mov
loope
movsb
in
push
cmp
aas
hlt
mov
xor
jb
sarl
std
push
sbb
jecxz
and
jne
mov
adc
stos
pop
push
add
mov
mov
sub
mov
jno
scas
ljmp
sti
push
shll
imull
sub
mov
or
mov
jp
movsb
xchg
sbb
testl
or
xor
push
stos
inc
data16
xchg
sbb
cmpsb
push
or
and
loopne
mov
popa
fdivr
adc
test
jmp
notb
add
xor
out
pop
icebp
test
daa
aas
fdivl
mov
lret
dec
inc
data16
xchg
mov
lcall
lea
cmp
pop
push
push
lods
cmpsb
cwtl
mov
in
pushf
mov
rclb
xor
mov
mov
push
lock
int
lcall
call
push
lods
gs
pop
out
sbb
mov
fimull
dec
cmpsb
loope
repnz
fucomip
mov
mov
mov
pop
jnp
insl
dec
and
mov
pushf
sub
mov
xchg
mov
bound
andl
inc
add
pop
arpl
sbb
jo
mov
or
loopne
xor
push
jae
popa
fsubl
pop
loope
sbbl
fists
mov
adc
inc
loop
icebp
pop
fnsave
sub
push
sarb
cmp
jecxz
rcll
shlb
push
adc
rorb
push
xor
xchg
or
pushf
and
bound
dec
jno
cld
adc
pop
and
mov
stos
cmpsb
in
adc
inc
sub
add
xchg
sub
repz
xchg
call
add
aas
or
xchg
lahf
popa
xor
incl
and
mov
add
inc
mov
mov
jge
dec
add
mov
jne
jp
dec
pusha
or
jmp
cli
push
jne
mov
xchg
fldcw
test
or
cwtl
xor
cwtl
add
mov
sbbb
cmp
stc
in
mov
lcall
inc
dec
push
push
imul
or
bound
push
stc
cmp
lret
addr16
dec
dec
xchg
mov
frstor
les
rorl
pop
inc
xchg
mov
mov
push
jo,pt
push
mov
xlat
mov
xor
xchg
lea
fiaddl
aad
call
dec
es
fsubs
mov
adc
push
cmp
inc
add
cli
subl
mov
dec
clc
adc
dec
sbb
subb
cmp
push
ljmp
mov
lcall
loope
movsl
jns
ds
movsl
shr
decl
dec
loope
fsubs
jle
mov
je
push
es
jns
je
or
sbb
and
cld
fisttpll
stc
jo
pop
fwait
mov
nop
popf
je
int3
in
fmul
pop
xchg
xchg
dec
pushf
mov
lret
pop
sbbb
imul
mov
pop
jbe
mov
js
addr16
js
or
shrl
ss
mov
in
inc
push
int3
inc
mov
xchg
xor
mov
inc
aaa
mov
insl
mov
jno
pop
push
fldenv
fildl
jg
fcomip
jnp
pusha
xor
decb
inc
adc
int
mov
mov
xchg
pusha
das
mov
add
jmp
sub
or
push
dec
pop
into
and
in
xor
push
jmp
stos
sbb
cld
rcr
xchg
pop
out
imul
dec
jmp
lcall
in
test
xor
jmp
cmp
mov
popf
negb
dec
fdivs
push
xchg
in
jl
das
dec
cmp
mov
cmp
fistl
sbb
or
pop
mov
rol
pusha
sub
inc
lods
outsl
daa
mov
jp
lds
dec
in
and
push
mov
cmp
pop
or
and
sbb
or
and
jecxz
sbb
dec
insb
lea
cmp
pop
in
jmp
mov
cmp
inc
pop
xor
pop
xchg
add
sbb
or
mov
pop
xchg
dec
push
out
mov
insb
scas
jle
js
sub
mov
cwtl
clc
mov
dec
xchg
test
nop
fld
xchg
dec
pusha
int3
scas
sbbl
test
ss
mov
push
xor
ret
xor
fs
ss
fsubrl
sub
push
ss
dec
dec
sbb
mov
inc
repnz
mov
add
jb
and
jbe
pop
loope
in
icebp
xchg
cmp
sbbl
lock
add
popl
push
insb
rcll
inc
sbbb
mov
jp
lods
push
push
stos
or
add
pusha
pop
xor
aam
mov
stos
aaa
in
xchg
je
inc
into
jle
cltd
push
jge
dec
in
sbb
cmp
inc
insb
jmp
pusha
shl
inc
mov
push
and
mov
push
roll
popa
stc
nop
xchg
pop
fidivrl
push
sbb
cmp
xchg
test
jb
jbe
ljmp
jb
lcall
mov
mov
mov
fidivl
or
mov
rcl
std
mov
dec
adc
xchg
dec
mov
lock
hlt
add
mov
cmp
push
cmpsl
cmp
data16
mov
jl
and
xorb
cwtl
xor
push
imul
add
sarl
xchg
dec
adc
lret
mov
int3
lock
ja
and
push
cwtl
cmp
pop
imul
leave
jne
sahf
daa
jmp
pop
sbb
cmp
call
nop
adc
bound
ja
mov
cld
mov
scas
mov
outsl
and
clc
js
hlt
cmp
call
push
repz
das
mov
fisttpll
pop
loop
push
mov
or
and
inc
test
cmp
and
shrl
dec
in
jns
mov
pusha
insb
out
jne
ret
add
xor
or
std
add
sbb
insl
stos
fwait
and
or
aam
mov
jecxz
adc
dec
movsl
add
cmp
inc
cli
cli
xchg
lcall
out
push
std
cmp
stos
jae
es
ja
jb
xor
adc
dec
stc
xchg
jnp
cmpsb
arpl
mov
stc
popa
shrb
and
shlb
mov
lahf
cmp
inc
push
cli
jecxz
add
fs
scas
or
shl
xchg
push
out
and
sub
pop
jmp
mov
or
mov
pop
mov
movsl
inc
dec
fidivrs
push
adcb
mov
out
xchg
and
mov
jo
aad
and
xchg
lods
adc
or
add
popa
jae
fdivl
movsb
test
and
sbb
mov
cwtl
das
push
loop
push
cmc
mov
loope
xor
sbbl
push
sub
jge
push
lods
xor
mov
push
orl
add
sti
xchg
ficoms
inc
fildl
xchg
push
mov
pop
sub
xchg
dec
loopne
xchg
fnstenv
or
aad
and
sahf
xchg
sub
repz
xchg
and
shrl
xchg
jo
add
aad
ficomps
mov
mov
arpl
inc
fldl
out
loop
or
mov
cmpsb
sti
xchg
push
out
pop
or
inc
fcoms
decb
loopne
fst
sbb
jns
aaa
test
popa
stc
jecxz
shrl
enter
cmpsb
cmp
sarb
int3
arpl
mov
ljmp
out
push
ss
popf
push
jns
ret
popf
stc
jne
loop
notb
jns,pn
cli
xchg
mov
add
xchg
mov
cmp
mov
mov
and
sahf
mov
cmp
push
cld
cmp
imul
pop
repz
jae
cld
imulb
jmp
jbe
cmpsb
lock
mov
xchg
in
fnsetpm(287
mov
pop
repnz
pop
cs
fsts
dec
mov
pop
and
lea
outsb
js
inc
cs
insb
pop
pop
mov
push
test
outsl
gs
mov
aaa
jns
out
ds
lret
in
jae
sbb
dec
mov
call
add
popa
out
mov
pushf
mov
dec
mov
cmp
mov
lcall
jne
in
push
push
icebp
push
jmp
clc
popl
lcall
mov
sbb
adc
add
out
jg
xor
add
xchg
jg
out
fnstenv
push
cs
add
outsb
cmpsb
cld
inc
std
push
stos
sbb
jl
push
stos
fcoms
iret
inc
adc
ljmp
in
jne
aaa
call
push
mov
call
pop
xchg
mov
popf
xchg
mov
adc
imul
pop
add
push
xchg
mov
sub
xchg
call
cmp
stc
in
call
lods
inc
cmpsb
cmp
lock
sub
push
popf
xor
push
loope
shlb
adc
cmp
lahf
mov
jp
mov
add
push
and
stos
jmp
dec
push
adc
mov
pop
scas
pop
mov
std
loope
mov
mov
lods
loopne
cld
cmpxchg
fdivl
shll
movsb
mov
jmp
addr16
clc
iret
lret
lods
push
shl
xor
dec
lds
mov
dec
mov
data16
ljmp
cmpsb
jp
pop
mov
loope
not
cmp
movsb
ds
xchg
inc
adc
cmc
in
popf
xor
movsl
mov
push
mov
sbb
xchg
mov
mov
mov
fmuls
xchg
outsb
orl
pusha
jp
cmp
jbe
or
mov
mov
cli
xchg
scas
mov
ret
sbb
scas
fstpt
ja
fisttpll
stc
lods
jne
sub
push
aam
xchg
xor
aas
xchg
sbb
jp
andl
jns
fldenv
dec
cmp
add
dec
mov
out
xor
jge
aam
nop
daa
lock
mov
icebp
cmp
shlb
cmpb
or
ds
lods
fs
testl
addb
mov
inc
push
dec
sub
xchg
sub
pop
sbb
mov
ds
sbb
cmp
cmc
jns
push
les
mov
cwtl
sbb
or
shl
cmp
cmp
pop
aad
jg
add
movsb
adc
mov
insb
jle
jg
add
ljmp
xor
leave
push
jg
push
test
jmp
push
das
mov
es
cmpsl
inc
inc
sbb
jg
mov
mov
lods
leave
mov
and
inc
cmpsl
js
mov
pop
cmpsl
push
add
cmp
shrl
sbb
push
and
sti
aaa
sti
sub
sub
sbb
jbe
cld
jl
negb
or
movsb
sub
lret
mov
out
push
push
rorl
movsb
push
je
gs
cmc
mov
pusha
cmp
out
dec
xchg
sub
xchg
pushf
push
or
sub
inc
pop
out
outsl
dec
fimuls
push
call
rorb
sarl
pop
repnz
jl
mov
shlb
mov
out
out
jns
pop
lea
cmp
daa
xchg
add
lret
std
lahf
out
aaa
cld
sbb
pop
mov
xchg
rorb
std
push
cmpsb
js
and
pop
pop
mov
pcmpgtd
test
add
not
outsl
jecxz
lahf
pop
jp
fidivrs
sbb
je
iret
mov
mull
popa
jge
inc
push
gs
and
push
and
mov
stc
hlt
cld
and
and
popf
hlt
jae
and
push
js
lret
cmp
cmpb
or
and
testb
jge
aam
xchg
js
mov
testb
lret
js
add
mov
lret
lock
or
jae
mov
mov
loop
add
mov
arpl
lahf
cmp
or
and
test
jno
mov
enter
js
mov
cs
mov
sub
shrl
outsl
daa
mov
xchg
mov
loop
push
fistpl
or
addr16
push
add
jnp
imull
pop
data16
dec
loope
mov
xor
pop
pop
rorb
fst
push
in
add
ret
jne
mov
rol
mov
and
in
push
push
adc
testl
sub
ss
fcoms
mov
shr
gs
cli
lret
idivb
subl
in
cli
mov
jge
jmp
outsl
xor
jecxz
dec
adc
mov
mov
ret
and
mov
fadds
das
les
add
mov
jecxz
add
dec
pop
pusha
insl
ret
sbb
xor
mov
adc
dec
inc
fs
pop
mov
pushf
lods
inc
lret
into
mov
out
mov
cmp
cmp
iret
insl
fiaddl
xchg
add
adc
in
add
loope
dec
dec
add
sbbl
dec
fidivrs
adc
hlt
pop
mov
push
lock
fldl2t
inc
movsb
nop
lret
cmp
push
cmp
push
mov
push
hlt
enter
add
repz
jmp
mov
in
adc
fildl
movsb
adc
push
fadd
push
mov
pop
rcll
js
out
mov
jo
sbb
out
pop
cmpsb
in
test
mov
fdivs
add
ffree
scas
aam
push
call
mov
xchg
inc
popa
enter
or
cmpsl
mov
and
mov
das
jmp
test
lods
repz
xchg
popf
lret
xchg
dec
cld
push
jmp
jnp
xchg
xchg
clc
jbe
fwait
mov
jae
mov
or
mov
lods
mov
insl
outsb
lods
push
out
dec
je
adc
rcll
cli
pop
adc
lcall
mov
out
imul
loop
jno
test
ret
pop
jns
or
dec
mov
jns
nop
das
test
rclb
insl
lahf
aas
push
pushl
cs
shll
add
pop
in
cwtl
mov
lods
adc
inc
jl
pop
daa
fcoms
xchg
sub
mov
mov
inc
dec
aaa
push
inc
xlat
lahf
aam
mov
push
jle
push
mov
pop
mov
bound
fcoml
xchg
test
jle
push
mov
and
or
pusha
jnp
loop
jno
fisubl
jno
mov
ret
in
hlt
push
fwait
sub
xchg
lea
mov
jbe
inc
test
lock
int
in
ret
lods
out
stos
repz
adc
shll
movsl
inc
je
pop
jns
sbb
out
jle
mov
cmp
imul
jmp
fidivrs
mov
inc
jb
push
cmpsl
xorl
sub
or
pop
insb
inc
xor
outsl
testb
movsl
inc
repz
test
and
test
pop
xor
jecxz
and
out
jnp
rclb
lcall
cmp
ljmp
sbbl
push
or
mov
pop
pop
stos
rorb
and
repz
aas
sub
dec
data16
out
xor
push
in
cwtl
scas
pop
adc
aas
mov
mov
xor
cwtl
mov
jbe
mov
aad
and
lahf
xor
mov
fwait
sub
pop
mov
cmpsl
mov
rcll
aas
ret
inc
icebp
xchg
mov
repnz
cwtl
mov
and
sbb
roll
xchg
ret
push
popa
push
push
call
loope
movsl
loop
xlat
addr16
dec
js
punpcklbw
mov
jmp
fucomip
mov
lret
je
adc
shlb
aas
and
jmp
loopne
jo
scas
lds
cld
enter
pop
sbb
nop
xchg
jo
repnz
popf
mov
lcall
jno
pop
mov
outsb
lret
in
fs
pop
jmp
mov
in
shll
dec
push
loope
push
pop
clc
mov
add
sar
je
cmpsb
or
shrb
sub
pop
sub
out
push
dec
loope
add
rcll
jb
fcmove
push
xchg
data16
push
sbb
jge
aaa
jb
or
notb
push
hlt
xchg
les
stc
push
popf
sub
mov
or
xor
adc
dec
fnstcw
push
pop
int3
inc
fnstenv
inc
enter
divl
xchg
push
pop
push
cmp
mov
or
and
popf
mov
cmp
ljmp
jecxz
push
sbb
xchg
popa
xchg
jg
lret
cmpsb
mov
xchg
in
xor
or
push
pop
gs
loope
xor
leave
loope
push
imul
enter
jg
inc
dec
popa
mov
jbe
push
xchg
aas
cmpsb
or
cmp
lds
sbb
jmp
paddusb
cltd
ds
add
inc
shrl
xor
sti
adc
mov
les
leave
daa
aad
or
xchg
das
call
in
stos
sub
mov
inc
out
mov
xor
pop
bound
push
sub
xchg
sub
inc
fstpl
mov
sbb
enter
mov
fabs
cld
pop
stos
dec
loope
daa
jb
pop
jmp
popa
mov
dec
clc
jp
mov
cmpsl
inc
push
out
data16
pusha
push
xor
jno
jae
movsb
mov
jno
cwtl
pop
ja
das
test
into
fnop
icebp
test
inc
push
addr16
inc
mov
xsha1
cmpsb
dec
push
lods
pop
jo
inc
rorl
mov
and
sub
jmp
call
movsl
mov
mov
dec
mov
sti
mov
das
and
out
jns
jbe
imul
clc
push
xchg
sub
xor
mov
je
cmp
into
push
adc
cmpsl
repnz
scas
stos
sbb
push
aas
jbe
xchg
cmpsl
mov
fidivs
mov
jg
pop
push
cmpsb
xchg
lcall
cmp
push
jg
jg
xchg
mov
sub
xchg
jge
loopne
sub
mov
sub
push
js
and
bound
xlat
add
adc
mov
mov
adc
mov
sub
xchg
fs
dec
test
mov
daa
out
icebp
push
pop
cmp
add
int
adc
sahf
test
scas
add
sbb
sub
int
mov
ds
sub
add
push
subl
jl
addr16
dec
stos
and
ss
cmpb
cld
mov
loop
jecxz
dec
adc
mov
add
mov
mov
lahf
cmpsb
popa
mov
lock
shrb
xor
jns
cmpsl
lock
rclb
out
insb
in
dec
movsb
ds
and
mov
js
sbb
out
pusha
ret
xchg
jnp
leave
mov
outsb
das
scas
jle
and
pop
stos
das
fiadds
or
sub
pop
jg
data16
xchg
pop
fs
lret
mov
ds
insl
inc
stc
rolb
and
dec
and
mov
loopne
mov
and
repnz
enter
clc
adc
and
adc
loope
add
cmp
pop
jp
xor
sarl
xor
scas
jp
push
stos
jmp
int3
in
sub
push
sub
cltd
fldcw
movsl
lods
cwtl
idivb
cltd
fbld
movsb
fwait
scas
nop
daa
loope
pop
adc
aam
pop
pusha
fadds
cltd
sbb
sub
cmp
xchg
or
jne
xchg
and
fisubl
jg
lds
push
dec
icebp
or
scas
inc
push
pop
out
push
fwait
pop
jle
fsubrs
jmp
sar
stos
daa
pop
cmpsb
cmp
imul
and
shll
push
je
rolb
xlat
mov
cli
in
push
ret
pop
imul
rclb
adc
dec
cmpsb
test
adc
sub
cs
sbb
lods
mov
mov
divb
jnp
imul
pushf
jbe
sbb
mov
xchg
fiaddl
push
bound
test
jb
adc
mov
inc
pop
cmp
lret
ljmp
sub
movsb
out
roll
cs
mov
std
fs
xorb
sub
addr16
jo
fwait
and
aaa
frstor
jmp
jle
shll
jge
nop
sub
mov
rorl
js
push
faddl
push
mov
push
and
cwtl
inc
adcl
add
fidivrl
in
mov
lock
out
add
sub
cmp
loopne
ljmp
and
subb
pop
push
int
and
in
cs
cmp
movsl
stos
xor
dec
pop
shrl
adc
out
cld
aam
sub
ja
xchg
jle
adc
mov
push
mov
negb
cmpsl
ret
mov
repnz
jg
and
xlat
cli
or
jl
sbb
sbb
loope
sbb
aam
sub
lahf
fldenv
imull
hlt
add
dec
or
out
pop
aaa
ret
lret
in
lret
mov
cld
mov
sbb
pop
lcall
icebp
cmp
lcall
int3
ficoml
imul
add
pop
out
lds
gs
dec
test
adc
cmp
pop
dec
test
loop
shlb
stc
add
ja
icebp
aaa
in
adc
rclb
sbb
lods
mov
inc
fsubs
mov
in
pop
out
icebp
inc
cmp
sahf
cmp
adc
adc
xchg
cmc
roll
jmp
pop
pop
in
cmpsl
xchg
ret
frstor
fbstp
sbb
loopne
sub
and
jbe
fimuls
loop
inc
popf
pop
pushf
sbb
dec
scas
mov
or
mov
enter
or
movsb
cmp
rol
sub
int3
leave
xchg
or
out
add
or
mov
inc
es
insb
or
fsubrs
leave
arpl
imul
iret
fistps
xlat
pop
sbb
fdivrs
sub
gs
sbb
xchg
enter
daa
adc
test
loopne
fisttpl
mov
rclb
sahf
mov
mov
aad
stc
nop
cmpsb
testb
cs
shll
push
jmp
ja
sbb
inc
lret
xchg
or
push
mov
cld
or
xor
adc
fwait
test
xchg
ret
test
mov
push
std
mov
cmp
aad
adc
jg
or
jge
mov
xchg
lods
jle
and
je
je
mov
jnp
mov
lret
mov
sahf
in
clc
sub
pusha
xchg
xchg
cwtl
inc
xchg
or
repnz
adc
sub
repnz
mov
testl
shll
or
mov
pushf
and
movsl
sbb
or
or
jae
fists
test
adc
ror
pop
cmp
xchg
pop
mov
sub
pop
mov
lcall
flds
fisttps
idiv
inc
and
xchg
test
xchg
out
pop
add
mov
fsubrs
incb
ret
sbb
imul
dec
sbb
dec
enter
xor
sub
stos
mov
js
mov
and
popw
dec
add
cld
addb
inc
repz
in
mov
loope,pn
fiadds
fstpt
push
mov
aad
imul
adc
mov
inc
mov
xchg
cmc
imul
jg
mov
imul
xchg
lock
sahf
cmp
cmp
notl
movsl
imul
lods
mov
imul
fs
sub
push
jno
cmpsl
ds
jecxz
fldenv
xchg
jge
xchg
scas
pop
into
pop
jecxz
sbb
inc
sbb
push
xorb
fwait
pop
lds
in
imul
inc
dec
and
or
lds
sub
add
sub
inc
popf
movb
inc
incl
add
ret
popa
mov
enter
mov
mov
pushw
jge
out
dec
or
jl
inc
jle
mov
outsl
dec
pusha
dec
lahf
fdivrs
push
stos
lods
inc
aad
lret
fstpl
sub
pushf
xchg
ficomps
jle
movsb
mov
mov
push
mov
mov
cmp
das
in
add
fnstenv
sbb
int3
imul
jle
dec
push
mov
jbe
test
and
fdivl
cmp
bound
adcl
sbb
sub
aam
sub
push
push
dec
fsubl
pop
inc
mov
inc
fs
and
cmpsb
cmpsb
mov
push
lods
pop
add
sbb
das
cmpsb
push
xor
pop
xor
testb
jge
test
xchg
popa
and
adc
mov
mov
out
ret
lods
jae
dec
call
inc
arpl
push
xor
jo
gs
or
mov
ljmp
repnz
fwait
lods
faddl
jp
xor
push
scas
into
clc
or
outsb
and
daa
inc
mov
adc
mov
xchg
and
andl
sub
popf
shrb
shll
sbb
sub
rcrl
sbb
divb
call
mov
mov
pop
dec
mov
pop
loopne
xchg
mov
jle
cmp
adc
push
test
jmp
dec
add
mov
popa
mov
pop
gs
pop
jno
pop
repnz
dec
jmp
fisttpll
into
rcrb
mov
insb
es
add
xchg
xchg
mov
push
sti
pop
push
inc
add
inc
push
adc
aad
sahf
test
mov
jae
movsb
jg
pop
jl
add
popa
dec
pop
sahf
es
ss
push
push
sub
jns
imul
stos
sub
push
xlat
xchg
fidivrs
nop
pop
lcall
sbb
or
sarl
dec
sub
cs
xor
fimull
stos
inc
fwait
insl
popa
clc
pop
fcomps
mov
insb
mov
stos
push
insl
lret
fmull
adc
pop
shrb
pusha
pop
in
mov
insb
mov
sub
mov
inc
sub
mov
in
inc
push
and
popf
mov
jbe
subl
jg
inc
leave
push
divb
loope
aas
mov
sbbb
cmpsl
das
mov
pusha
sbb
sub
mov
mov
arpl
add
lea
mov
adc
into
test
ss
jge
fildll
pop
cmp
mov
xchg
insb
inc
sub
jno
repz
mov
inc
or
aad
jl
clc
sub
andb
adc
jp
icebp
fdivs
jl
dec
jl
pusha
or
xchg
push
insb
sti
push
in
outsb
orb
add
pop
ds
xor
into
bound
aad
or
xor
mov
push
rolb
and
sub
adc
mov
jge
cmp
dec
sub
cmp
push
push
inc
pop
cld
mov
pop
jle
dec
outsl
cli
insl
daa
adcb
xor
jl
mov
dec
and
xlat
loope
daa
and
adc
dec
lret
dec
dec
push
or
mov
add
nop
arpl
dec
push
adcb
popa
hlt
std
or
add
jns
cmp
repnz
aam
ds
aad
dec
add
push
adc
mov
mov
add
lods
pop
add
dec
mov
jp
dec
dec
add
inc
cmpsb
adc
xchg
xlat
out
pop
outsb
je
in
xor
lahf
sbb
ds
repnz
jb
jnp
mov
sbb
ds
xor
xor
mov
push
jb
iret
push
add
mov
push
and
inc
fwait
jb
test
stc
adc
aad
cwtl
sbbl
sub
mov
jg
rcrl
mov
addr16
dec
add
je
data16
sar
add
jb
adc
movsl
loopne
xchg
or
popf
pop
ljmp
dec
sbb
dec
xchg
dec
rcrl
xor
ja
sbb
and
sub
inc
adc
lock
xorl
mov
mov
mov
andl
and
sahf
enter
adcb
rorb
insl
add
xor
mov
mov
dec
jmp
es
mov
add
mov
push
inc
sbbb
mov
testl
sub
cs
cltd
das
jl
testb
lcall
mov
ljmp
push
movsb
and
inc
test
dec
movsb
aas
dec
fidivrs
insl
jecxz
lea
mov
pop
lock
in
loop
xchg
jns
add
imul
sub
leave
inc
sbb
ljmp
ja
sbb
addr16
xchg
xor
add
inc
icebp
in
sub
jae
pushl
jo
adc
fcompl
mov
or
push
sub
dec
cmpsb
pop
jg
adc
mov
shrb
lret
sub
and
sub
xchg
sbb
dec
mov
pop
aad
iret
icebp
and
mov
cltd
sbb
icebp
popa
mov
mov
pop
movsl
fwait
jbe
leave
cmpl
imul
add
pusha
or
imul
mov
fldln2
xor
ficompl
js
mov
subl
push
movsl
push
xchg
iret
stos
fnstenv
sahf
inc
inc
add
ds
test
enter
in
add
adcb
nop
aaa
pop
fsubrl
daa
jle
jnp
jle
dec
push
lods
gs
add
testb
mov
stos
dec
outsl
imul
sbb
lds
fyl2xp1
fsubl
mov
sub
xchg
mov
or
inc
push
mov
dec
mov
enter
cmpsl
push
or
xchg
add
adc
in
adc
ret
outsl
jae
subl
inc
jl
jmp
pop
cmc
mov
cltd
std
cmp
pop
pop
jnp
loope
sbb
pop
inc
pop
mov
inc
hlt
mov
loope
pop
push
jle
js
adc
lret
cmp
loop
jo
sub
and
dec
adc
add
test
xlat
push
dec
dec
dec
xor
lock
mull
mov
jae
or
bound
inc
push
mov
xchg
fwait
xchg
inc
call
or
jbe
add
push
cwtl
cmpsb
jb
sbb
stos
pop
pop
and
xor
fsubrl
sti
xchg
loop
sbb
or
data16
push
push
jo
fisttps
cmp
push
aas
mov
mov
addb
ja
mov
movsb
pop
mov
or
sbb
cmp
mov
push
test
ret
add
cmpsl
pushf
orb
sbb
pop
scas
push
jae
sub
cmp
lods
add
cs
jne
stos
rol
fmuls
and
sarb
fstpl
xor
xor
mov
ficoml
jb
das
movsb
imull
scas
jne
andb
dec
sub
dec
pop
sbb
std
test
cmp
cmp
jge
dec
cmpl
std
inc
fsubrl
inc
push
mov
sub
inc
pop
cs
add
cmp
mov
mov
cli
sbb
shr
andl
jbe
sub
push
xchg
fs
xchg
sub
or
sub
add
addl
mov
xlat
inc
pop
scas
std
movsl
sub
and
jno
int3
xchg
push
daa
ljmp
imul
test
pop
jp
cmp
xlat
lds
mov
dec
dec
call
cmp
mov
mov
mov
ss
and
pop
and
ret
mov
sub
sahf
aad
in
adc
pop
insl
scas
mov
mov
dec
test
pop
hlt
mov
data16
adc
push
adc
insb
cmpsl
dec
dec
aad
faddl
mov
into
jl
pop
pop
out
jle
dec
cmp
pop
mov
sbb
rclb
je
xchg
fwait
jae
push
cwtl
push
push
inc
adcb
je
int
stos
jg
mov
outsl
sbb
cmc
hlt
sub
orb
cmp
pusha
jp
fsubrs
sbb
outsl
mov
popa
pusha
pop
repnz
and
inc
cwtl
ss
pop
jbe
mov
ss
pop
scas
jge
mov
adc
push
or
or
mov
scas
out
cmc
cld
mov
push
rcll
dec
andb
pop
mov
add
push
test
call
pop
fcomps
and
cwtl
xlat
cmp
insl
cld
or
sbbl
fwait
push
jae
pop
cmp
dec
adc
pop
das
aam
pop
dec
dec
dec
add
mov
add
scas
mov
in
sbb
fsubrp
inc
cmp
stos
ja
stos
stc
jno
pop
testl
fidivrs
mov
mov
push
jmp
lods
cmc
jbe
hlt
cmc
jge
sbb
outsb
test
lret
cmc
ja
jg
or
divb
lret
mov
add
mov
scas
fs
das
enter
lcall
test
stos
mov
sarb
fsubrl
std
cli
test
add
push
push
out
mov
pop
jae
cmc
movsb
jge
jmp
or
es
nop
sub
ret
arpl
pop
std
adc
es
fildl
arpl
or
sub
push
sub
or
push
jge
push
in
rcr
cltd
lock
mov
aad
ss
jp
pop
dec
pop
push
push
je
aad
dec
mov
jl
in
outsb
imul
xor
jb
sub
fisubrs
stos
cmp
fwait
les
inc
loop
in
mov
and
cmp
inc
icebp
adc
inc
fld
filds
push
outsb
mov
adc
xor
push
mov
clc
out
int3
sti
ss
popf
repz
enter
cmpsb
push
pushf
mov
dec
pop
mov
jnp
movsb
push
cmp
adc
enter
cmp
ja
xchg
pop
sti
inc
popf
addr16
sbb
repz
xchg
sub
lret
mov
cmc
pop
enter
popf
and
repnz
push
testl
inc
imul
pop
insl
movsb
gs
mov
cmp
in
jnp
lea
cmp
add
cmp
jl
bound
fs
mov
mull
jns
ljmp
pop
sbbl
popa
cmp
loope
lahf
add
rcrb
cmp
aas
push
push
scas
inc
movb
inc
xlat
xchg
call
scas
out
pop
ljmp
fidivrl
test
or
jns
lahf
icebp
sub
pop
jg
lret
adcl
xchg
pop
bnd
fisubl
les
adc
jb
add
rcll
rclb
test
xchg
mov
insb
adc
mov
test
test
pop
daa
fcmove
and
add
xchg
out
call
xchg
xchg
std
cmp
pop
orb
jnp
loopne
cmp
ds
outsl
mov
pop
das
dec
xlat
push
mov
fidivrl
fnstenv
xor
adc
push
dec
inc
lret
and
cld
jg
in
mov
dec
mov
out
jns
cmp
call
rorb
lcall
mov
xor
fnsave
dec
add
xor
jle
push
jno
pop
xor
and
imul
inc
pushf
add
and
test
aam
cmp
addr16
or
daa
outsb
and
pop
push
add
lds
jecxz
repnz
dec
in
mov
mov
and
xchg
in
cmp
insl
pop
aam
mov
cmp
into
loop
in
jg
shrl
ss
xor
push
test
test
test
jge
nop
subb
jnp
shrl
cli
sbb
xor
in
add
mov
xchg
or
adc
xchg
xchg
sub
sub
je
adcl
xchg
mov
ret
mov
dec
mov
dec
lods
or
xlat
in
movsl
mov
into
or
and
bound
jmp
or
mov
test
mov
jnp
jmp
pusha
shrl
mov
mov
bound
negl
push
jmp
inc
push
repz
je
pop
scas
ficoml
sub
or
pop
scas
dec
dec
ljmp
pop
mov
sbb
cmp
in
fs
mov
xchg
call
test
stos
and
test
inc
jmp
xor
out
add
mov
fnsave
sub
inc
stos
inc
jns
inc
ficomps
sbbl
insb
popa
xchg
adcb
or
fcompl
push
add
mov
out
enter
hlt
scas
inc
mov
int3
arpl
mov
or
pop
icebp
popf
popa
push
daa
sbb
or
or
out
pop
clc
push
lods
aam
sbb
movups
cmpl
call
xchg
dec
hlt
stc
and
arpl
in
add
sbb
dec
insb
sti
cmp
loopne
adc
incl
ret
sahf
xchg
push
shl
cwtl
das
scas
jl
push
xor
fisubs
ficoms
or
popf
sahf
popa
jns
push
mov
pop
dec
cmp
lods
gs
repnz
sub
mov
loopne
sbb
sub
pop
xchg
sub
adc
lods
and
dec
incl
or
in
iret
sub
enter
pusha
jp
or
and
add
push
sbb
xlat
adc
movsl
mov
or
out
es
lret
stc
adc
fiaddl
aad
les
mov
fnstsw
pop
ljmp
mov
mov
in
mov
adc
test
call
adc
jg
fwait
rcrb
sub
xchg
and
cs
mov
or
xor
push
sub
xchg
insl
shl
xor
mov
ret
push
pop
inc
stc
xor
out
dec
cmpsl
loop
sbb
iret
scas
push
add
and
mov
add
enter
jp
push
ret
repz
add
bound
xchg
cmpsl
cmp
mov
jmp
mov
mov
insb
xchg
ss
aad
add
add
pop
cmp
cltd
and
mov
jle
scas
ftst
or
and
push
xchg
push
mov
mov
fstpt
test
lret
in
jne
cmp
dec
push
cltd
cmp
jno
xchg
pop
lea
ljmp
or
fmul
cli
pop
out
xchg
scas
jae
push
mov
lods
inc
adc
mov
sub
cmp
push
popf
sbb
push
fucom
mov
jo
lahf
mov
lret
lods
mov
mov
pop
daa
ljmp
push
aam
add
sub
mov
lret
inc
pop
pop
cmc
out
dec
mov
mov
popf
data16
jne
mov
jb
lret
sbb
divps
mov
sbb
leave
adc
jb
add
pusha
jae
in
xchg
sbb
addr16
push
popf
lahf
pushf
or
inc
out
and
icebp
xchg
xorb
mov
jae
inc
jp
add
cmc
sub
push
call
aaa
jecxz
fiaddl
mov
aas
les
jns
shll
mov
add
jle
sti
or
push
rcrb
imul
les
xchg
cmc
push
fs
jns
mov
sbb
xchg
mov
mov
adc
cmp
das
cmp
loope
into
sbb
shll
mov
addr16
push
cmp
add
fsubrs
pop
mov
xor
outsl
fwait
cmp
scas
aaa
xorb
addb
adc
aas
add
jge
repnz
pop
adc
dec
rol
mov
cmp
inc
or
addr16
xchg
lods
repz
addr16
mov
pusha
or
jo
xchg
icebp
cmp
xlat
out
sahf
sahf
clc
cli
ljmp
sahf
xor
adc
data16
adc
cltd
xorb
std
mov
dec
xor
mov
ljmp
add
xchg
jp
xchg
and
mov
mov
ret
mov
stos
inc
fldenv
pushf
adc
popf
stc
ret
mov
mov
fldl2t
hlt
int
cmc
sbb
mov
cmc
enter
jb
dec
arpl
fsubl
ljmp
sbb
cmpsl
aam
les
fbstp
repz
arpl
dec
insl
sub
mov
xor
xor
add
dec
xchg
sbb
testb
mov
push
mov
mov
aad
rcrb
sub
jl
lea
inc
adc
and
test
mov
dec
ret
mov
movsl
inc
and
fistpll
inc
push
jmp
rcrl
xor
dec
aas
loop
out
scas
inc
rolb
es
stos
and
cmp
cltd
sbb
pcmpgtw
rclb
outsl
mov
subl
imul
adc
mov
push
call
addr16
push
pop
fmull
frstor
cmpsl
cld
idivl
in
dec
sbbb
int
jecxz
test
mov
push
inc
mov
notb
nop
xlat
dec
sbb
dec
jl
insb
inc
addl
dec
insl
adc
sbb
mov
lods
cmp
ds
pop
les
inc
fistpll
mov
push
icebp
push
push
inc
sbb
inc
and
or
movsb
pop
pop
ror
fcomi
cli
loop
ds
in
stc
std
pushf
xor
call
pop
imul
mov
jge
mov
mov
ret
enter
add
cmp
lock
arpl
lock
mov
mov
fcoms
jecxz
and
mov
cli
lret
dec
xchg
repnz
sahf
jmp
loop
adc
jl
fs
pushf
adc
xlat
rclb
jecxz
repz
mov
out
dec
sub
pop
mov
jge
fnstsw
mov
push
inc
fs
sbb
int
inc
add
sahf
lcall
cwtl
das
fwait
out
ret
mov
push
call
add
test
lahf
pop
sbb
xchg
mov
sub
cmp
sbb
push
pop
jg
cli
mov
mov
sbb
jmp
andb
into
jo
xchg
push
shr
enter
xchg
mov
cmpsb
repz
fs
ret
repnz
adc
rcrl
outsb
aam
xlat
pusha
jl
movsb
mov
fiaddl
popa
cltd
pop
or
int3
out
xor
test
and
xor
lcall
cli
xor
hlt
in
jecxz
dec
push
jl
mov
jge
jo
aam
in
lods
mov
loopne,pt
xor
add
mov
add
inc
ret
icebp
push
jecxz
pop
adc
lods
repnz
into
add
fcmove
out
insb
sbb
aad
movsb
scas
push
sbb
repnz
fiadds
push
loopne
sub
add
mov
or
cs
test
xchg
mov
call
je
je
test
pop
and
std
dec
das
inc
sbbb
repz
mov
cmp
sub
daa
sarb
jge
push
loope
fwait
stos
cltd
adc
ds
cmp
jae
xchg
or
mov
lock
mov
nop
and
jmp
cmpsl
sbb
pop
arpl
jne
jmp
out
push
xor
mov
dec
arpl
out
jl
mov
adc
push
xorl
in
dec
loope
add
popa
add
in
sbbb
lods
adc
push
ret
mov
rorb
rol
mov
fs
lock
or
out
xor
sahf
add
jl
test
pop
mov
pop
xlat
or
pop
aaa
xor
push
lods
adc
fisubrs
std
mov
dec
test
push
stos
and
pushfw
xor
cmp
mov
xor
mov
jbe
mov
mov
fwait
and
addb
int3
pop
adc
push
mov
jp
mov
xchg
shrl
rcl
addr16
addr16
cmc
xchg
out
test
push
push
or
ss
or
mov
sbb
jl
les
lds
out
mov
cmp
mov
fcomip
shll
adc
ret
jecxz
rcrb
sub
rcl
data16
mov
xchg
das
or
enter
lock
sahf
es
stos
icebp
cmp
and
int3
pop
xor
push
lods
inc
dec
xchg
cmp
les
icebp
adc
ss
push
fs
sbb
inc
xlat
outsb
out
sbb
cltd
pop
cmc
sarb
and
jne
lret
pop
pop
cltd
or
jb
add
and
mov
jbe
add
in
std
adc
fs
cmp
test
and
pop
mov
das
add
sub
bnd
jecxz
lods
add
shll
inc
lcall
out
jo
jg
pop
imul
sbb
sub
cmp
dec
enter
insl
xchg
stos
popf
and
popa
or
mov
cmp
pop
pop
dec
mov
iret
movl
and
push
pop
or
pop
jno
insb
lods
jb
xor
jmp
jg
and
mov
nop
in
jno
pushf
mov
fidivl
fstl
xchg
mov
rolb
fdivs
in
frstor
pusha
stos
arpl
ss
test
cmp
mov
add
xor
xchg
add
lahf
fcoms
testl
jl
adc
mov
push
aaa
fnstcw
int
sti
ds
outsb
das
add
loope
push
loop
dec
loopne
rorl
stos
jp
sbb
pop
pop
cli
cwtl
xor
gs
insl
imul
jnp
mov
subl
dec
pop
or
sahf
lds
testb
inc
cmp
out
sahf
sbb
xchg
imul
xchg
fwait
and
cmp
mov
sbb
inc
mov
mov
pusha
mov
ds
shll
clc
popf
add
add
mov
sub
mov
loop
sub
ret
cmc
idivl
mov
lret
bound
lahf
or
dec
xchg
sar
or
xlat
mov
mov
pop
adc
cli
subb
inc
arpl
mov
clc
cld
add
je
insl
xchg
dec
pop
fsincos
inc
mov
int3
inc
pop
addl
dec
mov
or
movsl
loop
push
pop
bound
dec
push
push
or
xor
pop
pop
bound
sub
mov
popf
ds
ljmp
mov
aas
xlat
push
out
xor
jns
mov
cmp
pop
vmovmskpd
aam
inc
hlt
data16
adc
test
js
inc
jb
cmpsl
mov
ljmp
movsl
pop
jbe
sbb
and
inc
fs
mov
scas
push
mov
fsubrl
pop
push
test
roll
mov
sbb
cmp
sarb
aam
jno
out
clc
jb
push
mov
jnp
insb
push
inc
pop
in
or
add
dec
ss
insl
cmc
xor
dec
or
int
or
nop
xchg
clc
sub
mov
xchg
loopne
add
mov
movzbl
out
ja
push
frstor
cmpsl
mov
jb
rcr
jnp
lds
mov
mov
out
out
mov
ja
imull
jp
mov
test
mov
hlt
fistpll
jecxz
xchg
xchg
ja
add
and
jb
sbb
sbb
pop
je
inc
rcl
jo
pusha
inc
dec
lea
les
popa
cmp
iret
mov
popf
stc
xchg
lea
out
mov
mov
shlb
cs
andb
mov
fistps
lahf
adc
js
and
push
inc
aas
lret
or
add
mov
popf
xchg
std
lret
ljmp
and
push
mov
jle
movsl
pop
inc
jmp
outsb
inc
jne
push
into
cmp
mov
cmp
das
xchg
jae
data16
imul
test
fnsave
add
or
dec
adc
ret
pop
cmc
sub
mov
mov
push
sbb
rolb
scas
inc
jg
jle
xchg
xor
xor
mov
pop
fildll
mov
loop
adc
and
sub
rorl
cli
cmp
test
into
subb
xlat
push
orb
xchg
scas
jmp
pop
sahf
repnz
iret
dec
into
inc
pop
clc
ret
cli
adc
jae
mov
jns
mov
xchg
dec
xchg
in
cmc
cs
xchg
pop
mov
mov
adc
sarb
imul
mov
adc
jno
adc
xchg
das
mov
stc
jno
ss
cmp
push
push
sub
leave
pop
jmp
push
cs
sbb
icebp
pop
ss
in
icebp
push
mov
fisttpll
add
inc
ljmp
rorb
sub
mov
push
mov
dec
movsb
and
lods
cmp
mov
lret
mov
cs
lahf
outsl
and
jns
mov
push
jmp
inc
inc
fisttps
xor
inc
aam
fmul
out
dec
jmp
mov
out
push
xchg
fnsave
lret
mov
je
inc
sbb
jo
fsubrp
cwtl
pushf
add
aaa
stos
xor
test
cwtl
lahf
call
inc
jg
imul
inc
stos
es
xor
fcomip
xor
or
add
inc
xlat
add
push
cltd
jl
pop
insb
xchg
aaa
push
push
ds
out
pop
ffreep
in
loope
xacquire
inc
jnp
popfw
test
mov
cmp
xchg
push
mov
repz
daa
inc
in
enter
inc
loope
push
test
movsl
push
mov
imul
xor
add
xchg
dec
loope
sbb
shr
xchg
mov
cmc
cmpsb
in
pop
outsb
sub
arpl
in
jmp
mov
jbe
cwtl
mov
popa
mov
mov
popa
fcoml
push
lock
adcl
mov
xor
cmpl
pop
xor
imul
jmp
das
ljmp
push
loope
dec
mov
xchg
daa
outsl
sbb
imul
sbbl
xchg
daa
sarb
fldt
cmp
ja
sub
hlt
pushf
mov
jg
sub
pop
ja
push
out
add
xchg
sub
inc
pop
icebp
jnp
mov
dec
adc
push
sub
stc
into
cmc
cmp
daa
jo
pop
push
test
or
inc
lods
sub
dec
sub
lahf
add
lahf
andl
push
push
out
jo
iret
cmpsb
insb
rclb
repnz
jne
sub
push
out
xor
inc
bound
arpl
dec
ds
push
pop
aad
inc
push
ja
and
gs
cmp
decl
or
pop
push
data16
add
cmp
adc
sbb
les
aas
dec
mov
pop
arpl
test
icebp
or
data16
js
xchg
insb
mov
or
sbb
aam
movsl
mov
pusha
les
outsb
outsb
ss
je
jge
in
outsb
adc
mov
push
add
vfrczpd
ss
or
inc
jmp
inc
lea
cwtl
jb
pop
jp
mov
or
xlat
js
cmp
out
cmp
sbb
insl
cld
sbb
addl
repz
popf
and
test
test
out
mov
fsts
lret
xchg
xchg
data16
lret
xchg
ss
push
push
fists
idiv
pop
cltd
and
cmovge
xor
xchg
mov
test
aad
sti
mov
inc
pop
sub
cmpsb
imul
lcall
sbb
into
repnz
in
pop
and
xchg
xor
push
sbb
fimull
lret
adcb
stos
mov
mov
fdivl
mov
jb
fiaddl
pop
stc
test
xchg
mov
sbb
mov
lret
mov
in
imul
scas
pop
inc
cltd
and
fsubrs
mov
jp
ja
mov
test
into
movsb
lods
clc
jae
push
pop
dec
rol
add
mov
call
bound
cmpsl
sbb
mov
in
lea
mov
push
test
or
adc
adc
sub
fistl
lret
sahf
xor
cli
or
les
popf
jno
out
pop
push
in
inc
popf
dec
shll
cmovs
incb
outsl
jle
and
jno
dec
scas
xchg
mov
mov
ret
bound
dec
hlt
mov
and
add
jne
mov
fdiv
sub
xchg
sub
inc
mov
cmp
dec
dec
stos
imul
add
sti
lcall
jecxz
mov
in
sti
push
mov
sub
jb
sar
les
mov
or
sbb
out
sub
hlt
mov
js
in
xor
jge
jne
sbb
sub
lock
fmuls
cmp
ljmp
ja
test
mov
or
lock
dec
adc
cmp
or
pop
data16
mov
in
adc
mov
and
lcall
and
outsl
pop
mov
and
cmp
add
inc
pop
adc
cs
push
inc
pop
scas
dec
mov
inc
mov
daa
scas
scas
mov
add
sub
leave
pop
cmpl
lret
and
xchg
test
jl
loop
and
cmp
or
call
movsb
inc
dec
pushf
inc
mov
repnz
loopne
insb
mov
cmp
stos
xchg
jp
mull
or
mov
or
mov
and
push
or
sbb
push
lcall
sbb
mov
cmp
mov
loope
jne
out
xorb
and
adc
or
lcall
repz
cwtl
mov
mov
mov
and
mov
nop
flds
hlt
movsl
push
mov
cmpl
scas
mov
add
test
xor
pop
xorb
sbb
pop
lods
cmp
jbe
hlt
cltd
add
fs
add
sbb
cmp
int3
rorb
add
dec
xchg
xchg
adc
mov
test
scas
mov
xor
inc
loopne
rcll
push
sub
rcl
or
push
jae
jnp
popf
xor
bound
cmp
mov
cmp
rol
outsb
fidivl
mov
xor
shrl
insl
or
adc
mov
mov
sti
jb
push
shl
aad
pop
gs
int
sub
insl
mov
mov
jp
jmp
xor
or
mov
cmp
andb
xchg
test
mov
xchg
ja
lods
mov
outsb
fdivrs
push
fadds
mov
or
mov
xchg
lret
cmp
pop
test
mov
lret
jl
mov
push
insl
sarl
cld
shlb
mov
jp
and
fwait
add
and
mov
mov
imulb
mov
inc
cmp
inc
popa
ja
inc
cmpsl
xchg
inc
out
xor
lds
push
xchg
jge
jne
cmp
fs
data16
push
dec
cmc
sbb
pop
scas
fsubrl
dec
lods
cmpsb
cmp
mov
dec
cmp
pusha
out
sarb
in
arpl
stos
add
fildll
sub
cld
push
movsl
or
push
flds
mov
and
scas
sbb
das
xor
movsl
sub
jle
xchg
mov
pop
mov
lea
out
push
in
cmp
pop
test
cmc
cmp
fwait
nop
mov
add
into
andl
test
aam
pusha
stos
int3
cmpsb
aad
es
pop
xchg
pusha
and
push
rorl
jbe
pop
das
notl
dec
dec
cmp
outsl
andl
add
pop
jbe
dec
dec
pop
push
nop
std
int3
jb
jns
lahf
call
or
jg
out
cmpsb
push
sub
fldcw
popa
push
ret
pop
dec
outsb
sbb
test
cmp
cwtl
adc
pop
test
lea
imul
mov
dec
pop
jbe
mov
fcoml
sub
or
imul
fs
adc
xchg
cs
cwtl
inc
push
xor
stc
fnstenv
add
push
mov
testl
push
enter
cmp
fimuls
xchg
sbb
push
dec
jecxz
inc
cwtl
das
add
call
ja
ret
sbb
or
cmc
mov
sbb
adc
jp
test
lea
mov
xchg
imul
iret
and
lds
mov
les
test
xchg
dec
ret
dec
scas
cmp
mov
ja
stos
hlt
push
int3
pop
movlps
push
popl
push
sub
cli
aad
sub
lret
out
outsl
inc
icebp
cli
or
xor
jne
xlat
adc
pop
lds
into
repz
and
mov
pop
sahf
and
mov
je
jo
and
inc
push
cmp
cltd
adc
or
adc
scas
out
mov
sbb
dec
push
out
and
inc
sub
jns
inc
aas
pop
das
icebp
mov
dec
shll
jg
popa
or
mov
out
iret
arpl
jmp
adc
outsl
cmp
push
insl
add
pop
test
call
mov
inc
xor
mov
pop
insl
jl
out
pop
shrl
sbbb
adc
inc
pop
mov
inc
mov
jnp,pt
dec
dec
ja
pop
jmp
inc
lock
xor
inc
pop
dec
dec
cmp
mov
data16
stos
pop
xchg
add
dec
bound
dec
xchg
cmp
cmp
xchg
testl
popf
cmc
mov
lret
sti
nop
mov
inc
mov
fildll
mov
sub
out
fcmovnu
sub
shlb
hlt
fisubl
fnsave
jl
push
mov
adc
arpl
add
push
rorb
cld
fwait
popa
clc
shrl
push
addr16
pop
mov
out
and
insl
mov
xchg
jge
popf
aam
fsubs
fistpl
stc
es
dec
out
scas
mov
or
jle
es
mov
cmp
loop
test
cmp
xor
xchg
insb
fistps
aad
sti
push
imul
jecxz
fs
js
fidivrl
or
cmc
adc
repz
mov
hlt
adc
dec
into
pop
jge
out
cmp
negl
or
notb
xchg
insb
shll
call
jo
in
stos
jle
enterw
mov
xor
fldt
movsl
adc
add
push
inc
jbe
sbb
mov
adc
jp
mov
jl
dec
loope
mov
pop
mov
mov
ljmp
mov
adcl
and
aaa
mov
pop
arpl
push
les
mov
inc
or
mov
pop
sar
add
add
out
adc
jmp
xchg
ret
repz
pop
stc
adc
sub
adc
into
adcb
ret
nop
jb
mov
lahf
push
stos
mov
sahf
cmpsb
mov
cld
mov
mov
int3
shlb
or
mov
scas
pop
out
adc
inc
roll
out
mov
sti
rcrl
cmp
inc
gs
xchg
aam
fstl
cmp
dec
cld
xor
cmp
sbb
sbb
and
xchg
test
adc
bound
dec
sub
xchg
repz
sbb
xorl
cs
add
or
insl
pop
jo
or
cltd
push
leave
add
das
jb
mov
das
cmc
pusha
sahf
lods
stos
call
and
cmpsb
inc
cmpl
jns
push
popf
or
sub
incb
xor
shrl
mov
jb
mov
sub
js
pop
addr16
adc
ja
stos
push
ljmp
dec
mov
or
pusha
adc
rclb
xor
xlat
sub
repnz
jmp
loopne
fnstcw
mov
jae
pop
push
jbe
out
xchg
mov
jb
mov
cli
cmp
lcall
mov
test
sti
lea
sub
sbb
das
inc
push
dec
frstor
popf
jg
sub
addr16
arpl
mov
lock
dec
and
loopne
xlat
fmulp
sub
arpl
adc
addr16
outsl
daa
inc
imul
mov
adc
fisubrl
pop
lea
dec
dec
sub
ret
cmp
mov
or
outsl
and
shll
xor
cmp
loop
xor
aaa
hlt
xor
sbb
fstpt
push
sbb
pop
xor
movsl
movsb
mov
adc
jge
mov
sub
sbb
sub
loope
cmp
fsubrl
and
outsb
std
push
xchg
lock
sarb
and
mov
xchg
pusha
cmp
push
pop
lret
jb
dec
in
xchg
ss
push
outsl
sub
mov
pushw
or
pop
xchg
pop
inc
push
cltd
out
or
sub
lea
jnp
mov
ret
sbb
mov
jg
leave
daa
mov
mov
dec
mov
jl
sarb
sbb
adc
mov
insl
ret
fistpll
xor
js
pop
jnp
cltd
ss
cwtl
jl
out
fucomi
and
cmp
and
lahf
mov
and
nop
or
xchg
xchg
in
popf
jbe
sbb
ss
aas
out
or
pop
sbb
sbb
stos
adc
jmp
cmp
clc
adc
pop
out
mov
cld
stos
test
jbe
pop
fwait
into
fldl
jbe
arpl
lret
idivb
fidivrs
jno
testb
jp
out
jnp
fists
repz
pushf
xchg
mov
and
jae
lds
lods
aam
call
les
or
test
cld
stos
xchg
repnz
inc
aas
cmpsb
loop
lret
jb
pop
ja
call
movhlps
xor
cltd
mov
xchg
sub
roll
sub
jae
scas
insb
jp
push
les
dec
pop
xor
sbb
adc
adcl
jne
xchg
cmpsb
mov
inc
enter
call
jo
adc
aad
data16
ror
test
inc
push
xchg
divb
or
stc
mov
and
inc
fnstenv
lock
and
insb
cmp
cs
inc
imul
xchg
dec
pop
fwait
dec
pop
add
mov
mov
out
fnstcw
fdivl
cli
lret
mov
inc
mov
aam
iret
mov
negl
shll
push
shrb
arpl
adc
xor
inc
and
in
adc
aam
std
push
aaa
out
ljmp
dec
inc
mov
or
in
js
lret
or
add
inc
push
repnz
cmp
add
or
mov
inc
aam
mov
sub
dec
lret
ficoml
sub
adc
adc
mov
adc
out
clc
daa
mov
sbb
push
sar
xor
cmp
pop
sbb
popf
gs
nop
and
pop
mov
sub
inc
adc
pushf
leave
push
sti
pop
jmp
lods
jg
adc
in
add
add
sub
mov
sahf
pop
xchg
pop
mov
mov
sarb
popf
subb
call
ret
stos
cmpsl
dec
xor
mov
popa
repz
stos
popf
clc
pop
fbstp
inc
aaa
cmpsb
insb
jno
pop
mov
lea
xchg
into
test
sbb
push
hlt
sub
mov
add
mov
sub
negl
pop
lea
push
or
xor
jmp
pop
rorb
xchg
fsub
stos
inc
push
jno
scas
inc
pop
jmp
pop
es
cmp
mov
jmp
adcl
popa
movups
dec
add
mul
cmp
cmpsb
lea
sbb
popa
xor
in
mov
jae
orl
idiv
je
mov
imul
fldenv
xchg
mov
pushl
pop
dec
imull
sbb
lea
shlb
scas
push
shl
les
jne
push
jno
mov
mov
rorb
xchg
cmp
or
pusha
jae
movsb
mov
test
add
orb
dec
and
pop
mov
js
mov
mov
sbb
adc
pop
jbe
cmp
popl
or
outsb
stos
push
addr16
push
or
push
js
loopne
jae
pop
sbb
mov
insl
jge
dec
xchg
shrb
cwtl
sbbl
ficoml
xchg
xchg
jge
mov
loopne
mov
mov
shrb
pop
pop
jp
push
sub
and
int3
lret
fs
jno
or
stc
jo
popf
sahf
push
jmp
push
int
shlb
adc
xchg
lret
ret
sbb
mov
ja
mov
inc
inc
pop
pop
add
stc
or
call
sbb
dec
shr
nop
shrl
jecxz
dec
clc
and
rcll
sti
pop
repz
or
filds
xor
stos
pop
xorb
xchg
or
cmp
cwtl
fs
mov
mov
inc
push
jl
or
ss
mov
iret
test
and
adc
pop
lds
movsl
in
js
sub
adc
divb
inc
and
cmp
xor
pop
ljmp
pop
mov
lods
test
cs
sbb
mov
sbb
mov
fimuls
cmp
aaa
or
mov
inc
mov
icebp
push
enter
ror
mov
jbe
mov
ret
jl
call
cmp
jge
xor
ror
lods
repnz
cmp
push
jecxz
mov
push
xchg
pop
lcall
lea
and
cs
xor
pop
add
bound
or
sbb
aam
out
inc
les
mov
lods
mov
pusha
cmp
lret
orb
mov
repz
xchg
push
mov
fs
movsb
sbb
add
sub
mov
and
jp
hlt
pop
jns
pop
pop
jns
push
ds
adc
sarl
lds
fs
rclb
add
xor
shr
mov
xchg
mov
stos
jmp
jns
divb
imul
mov
push
adc
and
push
pop
std
push
jne
sub
mov
lea
subl
arpl
add
stos
mov
sarl
out
out
mov
sub
and
dec
fcoms
jecxz
cmc
push
xor
cmp
adc
inc
stc
jl
xor
dec
fmuls
popf
cmpsl
cmp
push
dec
dec
cwtl
push
ds
out
fcomps
mov
int
mov
dec
es
ret
jle
adc
imul
push
incl
sub
pop
iret
dec
in
push
add
pop
xor
pushf
test
jmp
jbe
push
je
adc
cmp
sti
inc
sbb
inc
lods
clc
add
sbb
mov
mov
sti
or
and
pop
pop
push
in
pop
lods
clc
and
mov
stc
and
jno
or
idivb
dec
mov
adc
call
xchg
push
jbe
ja
loopne
push
test
push
dec
addr16
test
test
bound
dec
and
xchg
sti
inc
stc
adc
or
jmp
in
inc
xor
repz
sbb
push
mov
mov
sbbl
xchg
leave
jo
jb
adc
sbb
jmp
mov
mul
aas
aad
sar
xor
icebp
jle
int
xor
in
imul
js
inc
stos
add
mov
and
or
inc
cmpl
fwait
dec
adc
jle
push
xchg
dec
cmpsb
jl
pop
jp,pt
inc
movsb
adc
ja
adc
adc
popf
xor
xor
jmp
ljmp
ret
jecxz
xlat
fsubrs
mov
sub
dec
mov
lds
ret
mov
loopew,pt
fsubr
pop
dec
testb
insl
lods
stc
pop
outsb
and
andl
adc
shr
out
pop
pop
ja
xchg
xchg
sarl
dec
insl
pusha
les
lock
or
pop
js
dec
sub
enter
inc
jecxz
add
inc
sahf
mov
or
int
push
adc
sbb
stos
mov
pop
mov
cmp
std
xor
adc
xchg
lods
or
arpl
push
mov
mov
adc
inc
out
pushf
jge
data16
data16
sub
and
cmpl
sub
sbb
xchg
mov
jle
jb
imul
pushf
xor
adc
sbb
addr16
xchg
cmpb
dec
pusha
xlat
rcrl
rcrl
xchg
lds
dec
cwtl
ffreep
inc
mov
pop
adc
adc
xor
push
inc
stos
rcrl
xlat
test
lahf
add
jne
inc
pop
push
push
lea
lods
xchg
mov
jo
add
imul
cmpsb
outsb
stos
sti
jmp
cmp
inc
inc
stos
jnp
aam
fnstenv
lea
mov
pushf
loope
pop
sub
je
js
arpl
sub
jns
sub
cmpsb
enter
add
mov
lcall
imul
orb
sbb
dec
sbb
mov
iret
data16
add
lret
mov
cmp
xchg
cmp
or
repz
insb
cli
xor
inc
in
js
cli
mov
mov
aad
hlt
push
pushf
add
push
xchg
pop
jge
pusha
repz
push
pop
cmp
dec
mov
sbb
jge
mov
stc
insl
sub
out
rolb
xor
ficoml
xchg
mull
mov
or
bts
jge
sub
js
xor
mov
xor
pop
mov
add
inc
enter
and
pop
jae
xchg
addr16
es
inc
xor
xlat
jle
insb
scas
xorl
inc
adc
pusha
stos
add
mov
imul
add
ja
jmp
sbb
stc
es
ds
orb
adc
push
pop
push
in
ss
inc
add
and
loop
push
scas
ret
into
fdiv
rcr
adc
pop
mov
cli
jl
inc
out
pop
cli
mov
jmp
sahf
popa
in
fwait
cs
lods
leave
int3
in
imull
leave
jle
les
push
pop
outsb
push
and
dec
je
je
or
les
shll
push
cmp
mov
xor
cltd
popa
push
in
push
inc
sub
inc
push
ss
cmpsb
push
leave
xor
repz
stc
push
popf
push
lahf
push
xchg
test
add
dec
cmpsl
xchg
jl
outsl
push
jae
sub
clc
mov
mov
stos
cmpsb
and
xor
popa
and
bound
outsb
adc
xor
test
enter
jge
outsb
pop
or
push
or
popf
cmp
and
add
sbb
sub
je
roll
sub
adc
xchg
add
stc
sbb
mov
cwtl
or
leave
pop
cmp
xlat
shrl
jne
sbb
and
xor
jmp
mulb
fwait
jecxz
pop
mov
add
sub
fistps
jg
mov
and
push
rcrl
notl
jecxz
enter
add
push
xor
or
js
jo
adc
popa
les
adc
inc
xor
fiadds
mov
xor
xor
adc
xchg
mov
ljmp
jno
rorb
and
push
aad
stos
mov
add
lret
ja
bound
nop
mov
add
xor
cmp
rcl
xchg
outsb
xchg
repz
imul
pop
sub
push
aaa
mov
dec
cmp
jns
enter
popa
jns
mov
and
lods
xchg
and
xor
and
xor
filds
and
mov
mov
cmp
cmc
jns
sbb
cmp
fsubrl
push
mov
mov
jae
mov
sub
cld
pusha
fucomi
xchg
aam
sbb
outsb
loope
pop
pop
push
movsl
mov
leave
test
sbb
mov
lock
and
sub
into
pop
cld
push
dec
sub
leave
scas
out
cmp
inc
sahf
enter
or
negb
lods
dec
loopne
nop
dec
insb
inc
mov
inc
inc
mul
pop
push
xor
popa
push
test
pop
xchg
pop
loop
dec
stos
in
dec
fdivrs
das
testb
in
lods
rcrb
adc
js
dec
jp
sbb
jno
jns
loope
clc
int
daa
pop
mov
test
ljmp
add
pop
add
pop
xor
out
mov
fs
push
xchg
cs
dec
das
adc
fadds
dec
mov
out
shl
ljmp
xchg
int3
cltd
dec
rolb
repz
mov
in
pop
mov
xor
push
inc
dec
mov
xchg
jnp
inc
push
clc
xor
xchg
sbb
xchg
adc
cmpsb
test
lods
mov
leave
dec
push
inc
into
outsb
xlat
mov
inc
push
sbbb
fdivrs
mov
nop
adc
pusha
inc
add
or
pop
leave
sub
cmp
cmp
xchg
mov
les
mov
add
iret
push
or
pop
ljmp
pushf
cli
int
sub
and
xchg
pop
xchg
mov
mov
pusha
lods
int3
ljmp
cmp
jbe
outsl
sahf
insb
jle
std
xchg
mov
or
adc
or
popa
adc
or
fwait
enter
ljmp
pop
into
cmpsl
jl
mov
test
fwait
lds
outsl
into
cwtl
jle
cltd
push
cmp
out
std
sbb
pusha
xor
mov
jne
arpl
dec
test
and
mov
xchg
xor
xor
hlt
dec
mov
push
or
xchg
loopne
push
lahf
dec
add
call
dec
sbb
and
into
mov
mov
scas
adc
push
sub
cmp
xor
xchg
xor
or
add
sbb
call
mov
push
insl
ret
imul
and
jp
push
jno
lds
inc
mov
xchg
out
sarl
mov
sahf
jecxz
cli
mov
and
xchg
out
lret
add
push
or
mov
jbe
add
je
and
lods
jb
lahf
lret
clc
sahf
fists
xor
xor
xchg
lcall
loopne
les
xchg
and
test
insb
shll
fdivl
cltd
jnp
mov
sub
out
aam
popf
adc
idivl
lcall
jmp
sarl
into
or
inc
popa
jns
xor
pop
xor
sarb
pop
out
rcrl
mov
dec
push
fsubs
add
cmc
jge
pusha
push
out
sbb
sbb
or
rcll
mov
push
dec
jae
call
int3
sbb
in
das
or
mov
insb
pop
push
pop
or
and
loop
mov
mov
pop
sahf
mov
xchg
push
xchg
adc
iret
mov
or
movsl
push
fcompl
xchg
inc
mov
jno
jp
adc
mov
mov
mov
gs
pop
pop
pop
iret
mov
pop
repnz
dec
cmp
sub
lds
out
jmp
or
aad
dec
xor
cmp
adc
push
movsl
push
push
jne
pop
sub
stos
fld
dec
popa
dec
xchg
inc
movsb
repz
sub
cltd
fnstenv
fdivl
sbb
das
pop
mov
pop
lahf
xor
cmp
and
pop
mov
cmc
fidivs
repnz
inc
xor
adc
push
inc
and
divb
shr
arpl
andl
dec
add
xchg
lods
or
rcl
sub
hlt
push
push
dec
pop
stos
icebp
jl
shlb
or
imul
push
xchg
mov
aad
inc
xor
mov
xor
in
push
and
out
push
jno
push
shlb
lea
mov
push
cmp
aas
jo
fwait
and
add
push
shlb
je
stos
sub
sbb
cmc
mov
and
sbb
psubusb
cmpsl
ja
push
sbb
pop
lock
xchg
pushf
imul
lods
adc
test
xchg
mov
mov
ret
daa
js
add
cltd
jmp
cwtl
jle
divl
dec
lcall
push
xchg
stc
std
dec
arpl
and
sti
and
cmpsl
idivb
insb
sbbb
out
mov
xlat
xchg
jbe
push
add
xor
sarb
in
xchg
mov
mov
movsl
fdivrs
loope
fs
ret
fldcw
ret
xor
mov
sub
push
adc
inc
xor
lret
fs
xor
es
xchg
xchg
bound
push
mov
jmp
out
aaa
inc
mov
pop
or
sti
mov
ret
les
aas
negl
jno
ret
mov
clc
scas
cmp
inc
inc
rclb
xchg
xchg
insl
add
jae
add
mov
pop
stos
push
xchg
mov
scas
cmpsb
lods
gs
sarl
leave
stos
notb
sbb
sub
dec
adc
or
lcall
xchg
pop
add
dec
cmp
inc
jmp
mov
fcompl
mov
adc
bswap
sbbl
xor
mov
or
jle
jne
pop
mov
sbbb
push
mov
xchg
jl
cwtl
nop
cmp
pusha
pop
lret
inc
andl
mov
add
div
das
lret
aas
sbb
jp
xor
adc
push
mov
cmpsb
sbb
sub
mov
rorl
out
aas
jmp
out
sahf
xor
rol
in
cmp
arpl
subl
mov
adc
push
xchg
fwait
pop
mov
and
cmp
xlat
mov
notb
scas
or
xchg
mov
sti
into
push
mov
dec
xor
mov
mov
pop
jb
and
xor
jg
fdivp
jl
push
jne
sub
idivl
mov
andb
fistps
icebp
dec
scas
mov
and
push
or
lret
mov
pop
jae
fists
sbb
pop
and
imul
sbb
sbb
outsw
push
pop
aas
fiadds
rorl
cltd
lea
pop
ficoms
into
movsl
sub
add
dec
aad
loop
dec
arpl
clc
sub
stc
lea
test
test
in
jl
or
les
or
outsl
inc
dec
fidivs
imul
xchg
adc
pop
imul
js
xchg
sub
rclb
movsb
daa
lea
mov
inc
repz
dec
mov
xchg
jecxz
pop
loop
sub
sub
push
repnz
fdivrl
fsubr
int3
fwait
sub
mov
mov
xor
and
xchg
sub
imul
popa
inc
mov
or
iret
cmpsb
add
fdivs
call
jge
push
das
jns
add
sbb
leave
sbb
lcall
cmp
lcall
inc
cmc
rclb
jl
xor
mov
testl
jle
lock
repnz
pop
push
pop
mov
nop
jne
jnp
dec
jp
testl
bound
jmp
push
lret
mov
sub
addr16
add
cmp
mov
icebp
lock
and
sub
sahf
pusha
test
fnstcw
or
cwtl
jge
call
ret
inc
in
jo
pop
int
into
outsb
cmc
pusha
sbbb
mov
pop
or
divb
fnstcw
aad
add
inc
pop
xor
aaa
aam
arpl
insl
sbb
xor
movsl
xchg
stc
push
loop
lds
lds
mov
repnz
xchg
js
jp
mov
lret
aad
sbbl
xchg
popf
cs
adc
shlb
in
lret
mov
mov
ret
cmp
mov
fs
xlat
std
sub
gs
mov
imul
pop
pop
adc
add
popa
push
mov
out
sub
scas
repnz
out
dec
call
push
je
sub
jnp
cwtl
in
mov
xor
inc
dec
nop
pop
push
pop
sub
cmp
dec
pop
adc
nop
lock
movsb
mov
and
cmp
xchg
aam
cli
icebp
push
rolb
arpl
cmc
xchg
ds
xor
mov
loopne
and
jl
or
pop
ljmp
pop
out
sub
mov
lea
jecxz
and
addr16
imul
cld
faddl
test
or
cmpsl
mov
outsl
shll
ds
adc
cltd
inc
lods
mov
adc
jge
arpl
push
pop
hlt
pushf
int
pop
adc
aad
sbb
push
fucomp
es
mov
jge
sub
xlat
push
pop
and
xchg
stc
jg
in
outsl
push
sub
jp
ljmp
cmc
inc
dec
or
js
ds
pop
repz
inc
pusha
cmp
out
rcrb
lcall
out
xor
pop
sbb
add
pop
jbe
dec
shrb
sub
sub
lret
lock
and
fcoms
inc
mov
push
lret
je
xchg
xor
push
enter
mov
test
jg
stos
into
xor
or
idivb
sti
mov
mov
or
mov
out
cwtl
stos
fld
pop
mov
add
mov
andl
cltd
fstl
les
in
ret
add
sub
or
mov
lods
outsl
jb
push
mov
adc
popf
mov
jb
cmp
fsts
xchg
sbb
aaa
jno
adc
ja
inc
and
incb
adc
mov
fistps
push
lock
adc
out
jns
aas
outsb
inc
jle
mov
and
in
xor
pop
arpl
into
pop
mov
xchg
jl
mov
xchg
cmpsl
push
mov
mov
inc
test
xchg
cmp
push
fdivp
push
sti
jg
fs
pop
xor
pop
mov
outsb
popf
jl
ljmp
data16
pop
imul
push
cmpsb
push
leave
pop
xor
mov
fsubrl
push
mov
cmp
xor
cmc
pmaxub
das
push
sbb
outsb
insb
mov
cmc
dec
rorl
xor
pop
leave
jae
push
sbb
mov
push
mov
and
xlat
xchg
imul
lret
add
fsubr
insl
std
sbb
or
dec
dec
dec
decb
and
sub
dec
mov
push
int3
xor
xorb
loopne
movsl
mov
decl
inc
jmp
lret
stos
add
dec
xor
jns
or
pushf
imul
jae
iret
xchg
xchg
loop
mov
dec
test
daa
js
mov
cmc
rcl
mov
push
xor
xlat
push
aad
xchg
lods
outsl
popf
dec
fucom
jbe
mov
xchg
sarl
enter
fdivrl
icebp
mov
cmp
lahf
jae
mov
dec
mov
add
add
jno
cltd
stos
pop
and
jne
outsb
jge
inc
outsl
popf
push
mov
inc
cli
sarb
and
fisttpl
nop
sbb
mov
div
push
mov
mov
int
and
stos
insl
sub
int3
inc
in
sbb
aas
xor
cltd
dec
shlb
sub
mov
lds
inc
leave
add
and
mov
dec
xchg
dec
adc
lret
enter
in
jne
sbb
out
int3
and
ss
mov
leave
and
call
xchg
mov
cld
xchg
dec
mov
xor
lret
jnp
mov
inc
push
and
inc
scas
adc
or
popa
mov
sub
inc
add
pop
rorl
popf
cld
popf
gs
pop
int3
orl
xchg
fcom
push
pop
vphaddudq
lds
dec
push
pop
mov
sarb
stc
mov
sahf
mov
inc
movsb
addr16
into
mov
push
rcll
loope
add
push
mov
push
push
lods
inc
cmpl
mov
imul
mov
cli
insl
dec
mov
fsubl
rcl
mov
xchg
pushf
icebp
mov
in
in
inc
pop
cli
sub
aaa
enter
pop
insb
or
stos
mov
lds
pop
scas
out
test
xchg
std
xchg
mov
xor
int
pop
lcall
sbb
adc
mov
fwait
or
and
adc
inc
aad
push
popf
stos
xor
cmp
int3
jp
js
rcll
bound
pop
out
cmpsb
and
cmp
aas
push
lods
dec
mov
jg
sbb
insl
push
ss
mov
lds
out
jo
pushf
push
nop
insl
or
in
sti
mov
stos
inc
inc
scas
push
cwtl
xlat
sub
dec
sbbb
out
add
pop
add
push
lods
rorb
xor
arpl
mov
orl
cwtl
push
lods
or
lcall
aam
mov
test
rolb
push
inc
jnp
test
gs
data16
int3
adc
push
out
xchg
clc
aas
dec
test
push
adc
cwtl
es
lea
pop
scas
pop
sbb
xor
test
or
xchg
push
daa
out
mov
insl
fisubrs
enter
adc
inc
adc
jbe
lret
inc
lock
dec
repnz
pop
and
sbb
mov
jne
pop
cmpsl
data16
pop
jnp
test
imul
test
xor
sub
les
std
push
ds
xchg
ja
pop
lds
sub
rsqrtps
std
fs
test
push
sbb
cmpsl
pop
leave
mov
add
cmp
sub
cmc
mov
mov
sbb
je
fldt
lret
jge
xchg
inc
das
cltd
imul
inc
testl
pop
cmc
push
push
iret
sbb
fldcw
aam
daa
ja
or
lds
sbb
sbb
adcb
mov
xchg
lds
cmp
sbb
push
ret
mov
sub
xor
repnz
andb
jnp
loopne
push
popf
rcl
call
fisttps
sub
or
iret
fstpl
inc
or
shrb
stos
stos
js
xor
and
adc
clc
or
clc
sbb
add
and
xor
adc
cmp
andb
shl
xor
add
jo
lret
arpl
pop
das
mov
frstor
dec
mulb
mov
addr16
and
pop
cmp
sbb
test
inc
add
scas
cmp
add
inc
movq
dec
mov
cltd
loopne
pusha
inc
fs
lock
pop
rclb
jecxz
fdivs
iret
lret
cld
shrl
mov
pop
pop
xchg
xchg
add
jle
sbb
loopne
dec
sub
sub
addb
dec
push
icebp
sbb
out
pushf
ja
les
mov
in
or
insb
pushf
or
inc
enter
mov
xchg
daa
push
fwait
adc
cmp
pop
ljmp
lock
lea
pop
and
stc
aam
fwait
pop
sub
dec
cmp
mov
dec
clc
sahf
daa
mov
call
fmull
mov
sub
xchg
inc
sbb
rcl
cmpsb
push
imul
decl
testl
loop
dec
pop
bound
pop
lahf
cmp
xchg
aas
xchg
and
addr16
jb
std
jp
pop
andl
testl
lods
dec
jecxz
pusha
stos
or
push
add
lods
ss
add
and
nop
xor
popf
fldcw
daa
mov
push
mov
cmp
and
push
mov
mov
mov
push
in
shrl
sub
add
dec
lock
lcall
inc
aam
cwtl
arpl
lret
xlat
fildl
pushf
scas
and
mov
xchg
pop
adc
add
xor
ds
add
push
jo
lcall
jne
sbb
sbb
inc
ljmp
inc
push
dec
xchg
adc
inc
xor
insb
cltd
std
add
push
mov
or
outsl
add
shr
and
mov
xchg
inc
lods
mov
imul
scas
inc
cmpsl
sbb
sbb
or
ret
mov
and
daa
push
jno
pop
andb
jbe
pop
das
pop
int
jbe
mov
js,pt
dec
push
cld
cli
inc
inc
std
mov
sti
mov
jno
mov
les
jns
mov
xor
pushf
cli
or
lea
aad
and
pusha
pop
in
fbstp
add
in
or
jmp
fcomps
xor
pop
sub
roll
fistps
push
xor
imul
pusha
add
mov
sub
mov
mov
sub
or
push
adc
and
sbb
add
pop
popf
lahf
in
adcb
cmp
and
add
popf
cs
mov
aaa
roll
es
add
mov
fsubrl
mov
dec
or
je
jne
or
gs
into
or
jl
xchg
sub
icebp
stos
inc
and
scas
mov
mov
jmp
rcrb
lahf
sbb
push
out
xor
mov
pop
mov
cmpsb
mov
cmp
call
lods
mov
sub
imul
lds
jb
mov
cwtl
sbb
xchg
pop
sbb
mov
and
inc
sbb
repz
out
rol
repnz
in
ret
fists
nop
fldcw
or
ret
push
dec
or
daa
fucomip
pop
push
addb
xor
ljmp
mov
push
inc
jmp
movsl
inc
movsl
das
daa
jmp
inc
mov
lds
fists
and
mov
gs
sbb
out
mov
insl
mov
lods
call
in
xor
push
ss
dec
lahf
xchg
fwait
lret
jecxz
add
mov
imul
inc
das
jge
push
pop
stos
or
popl
mov
jg
pop
push
stos
and
push
jge
xor
jmp
sbb
imul
in
arpl
test
cmp
mov
call
daa
and
scas
inc
js
or
cmc
cltd
int3
rolb
inc
xor
sbb
je
jne
jmp
aas
push
cmp
inc
test
sub
xchg
xchg
xor
testb
clc
and
pop
ror
pop
aas
arpl
or
arpl
push
jl
enter
push
xor
out
dec
cwtl
mov
arpl
sbb
decb
push
cli
mov
roll
rorl
or
push
addb
outsl
pushf
xlat
inc
mov
aaa
jnp
add
xchg
cwtl
jp
mov
test
sub
sahf
xor
jbe
xchg
sub
cwtl
inc
into
popf
ja
mov
clc
pusha
ret
xor
mov
sbb
push
ret
push
subb
mov
imul
xchg
jnp
repz
pop
dec
mov
in
dec
aaa
jmp
lea
jle
pop
imul
in
mov
adc
xchg
insl
es
push
sbb
or
jns
xlat
stos
in
xchg
daa
mov
sub
stos
stos
mov
stc
lret
test
mov
xlat
push
iret
ret
pop
add
lcall
int
pop
movsl
xor
xchg
mov
dec
push
in
sbb
lcall
call
lock
cmp
testl
bound
and
push
mov
adcb
xor
cmpsb
rorb
mov
in
rclb
pop
repz
outsb
cld
pushf
xlat
pop
dec
mov
lds
out
iret
int
divl
cvtdq2ps
pop
adc
push
xor
rep
sbb
push
mov
mov
int
pop
out
push
paddb
sbb
pop
jecxz
jnp
push
sub
test
cmp
sbb
test
push
xlat
cmovle
aad
jns
mov
fsts
div
int3
mov
fimull
add
mov
aam
cmp
sbb
pop
roll
std
cmp
movsl
psllw
insb
jp
out
xchg
xchg
scas
rcl
ret
mov
out
popa
push
add
sbb
or
cs
sahf
inc
daa
jl
lcall
and
or
stos
fisttpll
rcl
push
insb
fs
push
mov
idivl
pop
je
rcr
outsl
or
cmp
or
ja
pop
xor
ljmp
sub
push
lret
dec
xlat
dec
push
imul
test
jne
mov
xor
aad
jmp
popa
sbb
cmp
mov
and
push
mov
push
in
push
push
insb
int
notb
fnstenv
or
mov
mov
into
pop
pop
and
rcrb
sahf
cwtl
xchg
dec
test
loop
fwait
sub
mov
dec
dec
xor
cmpsl
addr16
pop
les
push
dec
addr16
push
sbb
mov
xchg
push
push
cmp
adc
push
movsl
dec
outsl
daa
xchg
dec
lds
mov
stos
pop
jb
test
pop
leave
pushf
and
aad
enter
ja
push
fisubrs
add
movsl
mov
in
lret
jns
cmpsl
imul
jp
xchg
pop
scas
out
test
aaa
ret
inc
lea
mov
cmc
adc
flds
cmp
jb
inc
mov
sahf
sub
xchg
and
cld
stos
dec
mov
mov
cmc
in
jmp
pop
push
fldcw
push
inc
and
rcr
bound
jecxz
inc
pop
xor
jno
dec
dec
ja
aam
jle
dec
sbb
fistl
jg
lcall
xor
jns
out
cltd
das
inc
jecxz
push
adc
cmpsl
xchg
fwait
or
inc
jae
clc
inc
xchg
inc
fwait
addr16
fwait
xchg
ljmp
test
inc
arpl
imul
jbe
clc
inc
push
aaa
cmpb
fdivs
int
pushf
aam
mov
in
das
push
jp
mov
mov
mov
jmp
aam
cmp
mov
pop
pop
out
popa
cs
jmp
adc
jmp
xor
dec
lcall
lcall
into
xchg
les
xchg
out
vcvttps2dq
add
mov
popa
test
scas
inc
mov
add
sbb
cmp
fists
lret
xor
cltd
sub
cmpsb
xlat
pop
shlb
and
push
sbb
lret
or
leave
test
sub
add
xorl
and
push
popf
cwtl
jecxz
mov
push
je
fadds
loopne
repz
stos
mov
xchg
pushl
fwait
je
jge
add
or
lret
in
or
jmp
fucom
test
loop
push
xor
jno
mov
jecxz
push
xchg
cmp
mov
adc
pusha
aas
push
xlat
dec
add
std
femms
adc
or
stos
inc
fmull
mov
and
aam
ss
scas
andb
fcmovu
jl
aaa
jbe
sbb
xchg
out
lea
sub
repz
call
fisttps
bound
push
jns
pop
shl
cmp
adc
cmp
dec
push
pop
divl
ds
jb
insl
add
pop
push
out
sbb
lcall
push
cltd
test
pop
sub
sahf
testb
mov
push
ficompl
loop
mov
cmp
mov
or
scas
mov
stc
mov
pusha
jg
push
jne
pushf
sub
clc
mov
sti
pmaddwd
pop
push
mov
pusha
inc
and
inc
lods
cmpsl
shlb
push
lods
lds
ret
mov
jno
fdivl
lea
inc
pop
int
in
ret
sub
pop
imul
sbb
daa
xchg
scas
insl
scas
or
or
jb
js
inc
push
das
clc
dec
xchg
cmp
xchg
push
pushf
lea
sahf
mov
mov
mov
fwait
pop
push
inc
dec
aaa
mov
mov
mov
xor
enter
mov
pop
xor
cmp
outsl
sbb
xlat
idivb
fnstenv
add
mov
xchg
in
je
xchg
mov
jg
cli
pop
dec
aad
mov
jnp
sbb
leave
xor
test
mov
out
add
sbbl
adc
jmp
cmp
popf
jg
add
add
sbbl
jns
inc
insb
add
xchg
ds
xchg
pop
xlat
mov
lea
pushf
jb
fwait
and
push
cmpl
xchg
ds
out
enter
adc
das
aad
push
xchg
cmp
call
mov
add
xchg
and
les
mov
push
or
stos
lods
jge
orb
repnz
lods
mov
pop
mov
adc
cmpsl
cmpsl
mov
loop
outsl
fdivl
dec
push
mov
inc
in
cltd
ds
out
pop
gs
push
cwtl
stos
jbe
lods
inc
push
sbb
inc
and
std
fdivrp
mov
bound
inc
filds
sbb
insl
and
adc
lret
push
jo
test
sahf
or
loopne
es
push
or
pushf
mov
lock
insb
and
negl
out
rcrb
outsb
add
sti
cmp
dec
jecxz
pop
mov
call
sbb
lcall
pop
daa
pop
jae
dec
jne
shr
inc
repnz
jp
jno
ja
dec
xor
rcrb
fnstenv
mov
push
cld
lret
pop
sub
and
inc
sbb
xchg
sahf
and
inc
fnstcw
push
sub
cli
popa
and
out
pop
fstp
mov
loope
xchg
lock
test
shrl
lods
movsl
arpl
or
mov
mov
xchg
leave
popf
out
test
insb
and
jne
shlb
je
cld
and
xchg
pop
push
dec
mov
popf
and
aas
test
call
mov
adc
cmc
imul
lock
or
insl
adc
out
xor
lock
pop
push
mov
sti
mov
dec
sbb
test
adc
in
insb
push
or
test
sub
mov
mov
loopne
pusha
decl
sbb
fldpi
add
stos
and
rol
int
lret
or
mov
stos
mov
fsubr
roll
icebp
subl
int3
sbb
mov
mov
sub
sbb
mov
or
cmpb
mov
insb
jecxz
push
xchg
sub
dec
add
shlb
jb
scas
imul
pop
jb
divb
cmp
lret
jmp
jp
adc
add
xchg
mov
and
leave
push
cs
cs
or
dec
testl
repnz
testb
and
mov
mov
pop
sbb
dec
mov
sahf
lahf
pop
xchg
mov
mov
jmp
inc
mov
inc
nop
lret
repz
aas
stc
mov
ret
std
rcll
les
nop
insl
notl
scas
push
push
add
push
mov
pop
jl
cmp
jle
repz
inc
fs
call
dec
aam
dec
aaa
out
pop
call
xchg
and
cmp
dec
pop
cltd
inc
ss
pop
push
stc
pop
mov
lret
sti
addr16
cwtl
mov
shll
aaa
outsl
into
mov
ret
sub
shrb
pop
mov
mov
pop
bswap
data16
lret
cli
shll
adc
sbbl
mov
lahf
mull
dec
popl
in
movsl
sbb
dec
pop
ds
push
pop
andb
jecxz
push
xor
es
pop
lods
push
lods
push
fs
daa
ret
in
ret
lock
mov
shr
mov
test
cmp
int
jno
cmp
int3
jmp
clc
and
nop
pop
aaa
mov
mov
push
and
jbe
stc
int3
xor
sbb
pop
jecxz
cwtl
xor
addr16
and
jmp
outsb
add
daa
jo
inc
push
jne
pusha
out
pop
mov
sub
pop
enter
scas
in
dec
sbb
int
jb
dec
push
in
xchg
jecxz
fidivs
mov
pop
out
mov
seto
inc
pop
clc
nop
test
inc
sbb
ss
js
pop
and
rcrl
sub
xor
movsb
repz
pop
int3
out
dec
xchg
outsb
mov
icebp
sbbb
push
lcall
push
mov
fsts
outsl
mov
in
jae
sub
fildl
scas
adc
dec
add
sub
aad
cmp
adc
dec
je
out
lds
cmp
scas
cmpsl
jp
mov
sub
mov
ljmp
stos
push
sub
mov
mov
or
insl
sub
in
pop
popf
xchg
aaa
mov
movsl
cmp
cmpsl
and
add
les
call
aad
enter
mov
push
and
test
pop
jno
xor
jnp
in
inc
pop
inc
popa
ja
inc
fisubrs
into
repnz
test
jo
cmp
cltd
cmc
mov
bound
loop
push
sbb
jecxz
pop
pop
push
jb
ds
testb
mov
pop
xchg
sub
out
pop
test
inc
and
pop
or
push
fldl
enter
push
int3
and
sahf
push
je
xor
or
fs
insb
inc
or
scas
and
and
adcl
pop
sub
in
call
insb
xchg
loopne
fsubrl
add
inc
dec
sbb
lahf
push
stos
mov
xor
mov
mov
cmpsb
mov
add
pop
insb
inc
xchg
sbb
lds
mov
lret
xor
or
repnz
jge
ret
pop
add
mov
jb
add
lcall
cmc
jl
fbld
sub
lods
inc
loope
std
or
push
aam
icebp
fcoml
testl
in
cld
pop
fstl
jo
fwait
scas
inc
int
test
int3
gs
dec
push
idivb
ljmp
subl
es
out
test
outsl
ja
cmpsb
inc
mov
clc
xor
sbb
fadds
adc
scas
lahf
ss
cmpsl
ret
dec
movl
sahf
cmc
mov
add
pushf
fs
test
hlt
mov
sbb
test
ds
or
xor
xlat
scas
push
or
mov
stos
outsb
movsb
cmp
rcr
js
jbe
cltd
outsb
add
test
mov
imul
incb
movsb
cmp
ret
leave
push
popf
int3
loopne
aas
ds
leave
pop
xor
jecxz
hlt
push
cmpsl
mov
push
mov
push
rorl
cltd
dec
pop
pop
fcomps
or
add
js
fucomip
or
test
sub
push
icebp
cmpsb
jns
stos
pop
test
pop
cmp
popf
and
ljmp
sbbl
mov
pop
cli
outsb
add
scas
in
xorl
mov
jge
xchg
in
push
mov
je
dec
xchg
dec
mov
mov
adc
testb
jge
or
ja
clc
lods
hlt
xchg
and
xchg
sub
xchg
xadd
sub
push
cmc
and
pop
push
adc
in
lds
test
pop
xchg
fidivs
fisttps
bound
push
mov
push
cli
pop
sti
cmpb
ja
adc
invd
or
jle
inc
enter
fldl2t
lea
jnp
push
outsl
mov
inc
imul
leave
je
iretw
gs
cld
sbb
int3
mov
or
std
lcall
in
dec
aaa
sub
ffree
add
lret
ds
sub
xchg
dec
push
cld
or
cli
ret
inc
push
push
xor
lods
mov
add
jle
js
rcl
je
push
popa
ja
or
xchg
xchg
aas
push
in
mov
xorb
imul
outsb
jb
aad
sahf
mov
orl
js
dec
or
push
push
loop
dec
dec
jno
xchg
addr16
mov
idiv
mov
js
dec
dec
cmp
outsb
push
call
dec
push
inc
fldl
jecxz
push
imul
mov
add
and
jns
cltd
jne
xchg
and
push
pop
icebp
lods
xchg
add
jns
lret
fiadds
nop
push
inc
xlat
ljmp
int3
cmp
mov
sub
mov
rcl
sbbb
nop
stos
push
dec
or
stc
xor
mov
mov
leave
jnp
fldcw
outsw
lret
call
adc
sahf
sub
insb
movsl
lods
rclb
lock
mov
cmc
push
or
sarb
in
push
pop
dec
orl
in
fisubrs
add
mov
bound
inc
adc
inc
pop
out
test
movsl
add
test
pop
add
xlat
lods
fucom
xor
pushf
aam
icebp
mov
pop
ljmp
stos
dec
dec
xchg
cmc
les
aaa
clc
dec
dec
push
aam
inc
mov
cmp
xchg
cmp
lods
loope
aad
dec
sub
insb
mov
repz
int3
lret
std
movsb
fs
mov
sub
movsl
icebp
lret
in
jae
sbb
stc
adc
call
jne
push
cwtl
dec
inc
aas
pop
out
pushf
xor
cmp
inc
clc
in
aaa
xchg
sbb
lret
jg
lahf
sub
or
popa
cmc
out
cmp
sbb
xchg
xlat
stos
cmpsl
lcall
mov
pusha
jno
pop
fcompl
dec
mov
bound
pop
iret
sti
lods
shlb
pop
jae
xchg
jo
inc
scas
sub
ss
stos
xor
push
push
into
cmp
ss
ret
mov
js
or
xchg
ror
fadds
fstl
mov
adc
add
cld
jae
cmc
mov
sti
sub
inc
or
push
inc
sbb
push
cmpsb
lock
jae
mov
insl
add
outsl
rcl
ret
pusha
insb
sub
pinsrw
push
adc
sbb
mov
xor
lock
dec
out
jb
and
mov
ja
lcall
in
stos
les
test
xchg
rcrl
in
in
pusha
jne
aas
ljmp
sbb
gs
add
mov
jae
out
and
out
movb
add
sti
test
ss
and
adc
scas
in
ljmp
call
xchg
and
cmp
shll
jmp
loop
movsb
repnz
jecxz
sti
filds
push
mov
mov
in
push
mov
mov
jg
xor
jl
xor
mov
dec
dec
mov
call
xor
pop
jp
xchg
or
lahf
xchg
or
lcall
int
aaa
std
pcmpgtw
push
stos
ljmp
mov
xor
int
int3
and
mov
sub
push
in
shll
insb
aam
dec
stos
in
out
inc
loopne
fidivl
lcall
sbb
into
leave
sbb
arpl
pop
mov
jnp
sub
insl
shl
xchg
ret
jne
insl
cs
lock
shl
mov
dec
cmp
push
rcll
jne
and
xor
std
pop
aaa
xor
fwait
sti
xor
inc
arpl
mov
inc
mov
loopne
dec
rorl
xchg
mov
inc
int3
jl
fnstsw
jle
mov
dec
in
xchg
into
sub
rclb
mov
mov
std
adc
mov
jmp
sti
cmpsl
ret
or
pop
cmp
dec
int
testb
mov
jne
xchg
leave
fnstcw
add
out
jnp
and
xor
cmpsb
movb
mov
pop
loopne
lea
fimull
movsb
repnz
mov
loop
xor
add
push
outsl
dec
pop
sbb
mov
mov
pop
mov
cmpsb
dec
nop
mov
mov
push
test
mov
in
mov
aam
movsb
xchg
adc
addr16
inc
es
xor
mov
or
sub
xchg
push
cli
push
repnz
outsb
mov
mov
mov
push
std
xchg
xchg
mov
sbb
fwait
daa
jp
sbb
xor
add
in
cmp
sub
jmp
dec
or
scas
cmp
jnp
or
xchg
ret
cmpsb
mov
sbb
icebp
ds
ljmp
push
scas
xchg
lods
loopne
enter
lcall
nop
in
inc
dec
cmpsl
shll
call
je
out
repnz
ja
cvtdq2ps
jl
xchg
cmp
std
jg
arpl
pop
daa
dec
rorb
push
lahf
mov
xchg
scas
dec
jmp
je
and
dec
adc
jb
js
mov
adc
pop
das
jb
mov
and
mov
xor
mov
into
fidivl
fs
xchg
data16
test
mov
jl
pop
mov
test
ret
dec
xor
mov
add
add
mov
call
xorl
jns
loop
pop
or
mov
daa
sahf
mov
frstor
mov
adc
int3
nop
aas
ret
test
cmp
xor
fs
jl,pn
mov
out
sbb
ss
pop
jl
orb
or
xor
mov
js
test
js
mov
mov
push
dec
sbb
movsl
popa
notl
mov
movd
xchg
sub
movsb
out
cwtl
and
sub
imul
jnp
rcrb
xlat
outsb
mov
cmc
mov
xchg
dec
sub
mov
add
xchg
mov
sub
xlat
icebp
aaa
mov
sarl
and
add
out
std
test
cmpsb
cmp
repz
out
sub
stos
mov
js
mov
pusha
sbb
clc
pop
das
scas
les
push
adc
test
xchg
sub
enter
stc
mov
push
or
mov
adc
pop
shrl
sub
into
fsub
push
lcall
int3
jno
out
test
cmpsb
or
xlat
dec
jp
adc
sub
xor
stos
push
daa
or
popa
dec
stos
nop
hlt
inc
fcmovbe
or
pop
out
stc
mov
sub
ja
or
lea
adc
or
mulb
repnz
mov
testb
test
pop
push
xchg
jp
dec
mov
pop
in
push
xlat
outsb
mov
xchg
clc
pop
fwait
insb
rolb
repz
cmpsl
dec
out
mov
xchg
add
dec
jb
cltd
xchg
cs
cmp
movb
add
push
ret
in
mov
push
xor
push
cli
loope
mov
adc
push
fwait
jns
push
in
std
enter
sub
mov
xor
add
mov
dec
inc
int3
sti
xchg
inc
mov
popa
out
sbb
ds
test
push
xchg
or
movsb
cmp
call
xlat
push
jge
or
lea
pop
cmp
in
and
inc
into
gs
outsb
aad
mov
xor
cld
pushf
sbb
gs
jge
sbb
and
out
sahf
js
test
filds
mov
arpl
adc
sub
in
pop
clc
xchg
stos
xor
push
js
ret
in
cmp
sbb
stos
and
jne
test
in
addl
aas
xchg
inc
fs
cmc
mov
mov
jno
out
pop
push
push
orl
loopne
dec
loop
jae
push
cmp
lds
cmp
sbb
xchg
or
xor
stos
push
pop
jecxz
enter
mov
inc
and
pusha
fbld
and
aaa
hlt
jnp
inc
pop
insb
inc
dec
dec
mov
ja
ja
outsb
orb
in
test
mov
pop
cmpsl
lahf
je
xor
jg
leave
in
lods
jo
xchg
inc
mov
mov
push
or
mov
fnstenv
push
push
addr16
cmp
xchg
dec
pop
testl
mov
pop
int
mov
cli
cld
adc
sbb
sbb
insl
cmpsb
fsubr
sub
xchg
icebp
mov
fidivrs
mov
mov
pop
gs
fdivrs
lret
mov
jg
cld
pusha
js
or
push
mov
sti
lcall
mov
scas
scas
jne
movntq
or
xchg
jmp
scas
cltd
mov
mov
call
jne
jbe
pop
push
out
push
popa
mov
nop
repz
cwtl
mov
mov
jnp
push
loope
push
pop
clc
xchg
sub
jbe
sub
out
data16
pushf
inc
cli
jae
sub
lods
lods
xchg
call
xor
mov
mov
and
xlat
sbb
hlt
imul
sub
dec
pop
lea
aas
sti
stos
movsl
std
sub
inc
mov
or
mull
stc
inc
std
popf
jmp
adc
test
add
push
arpl
in
sub
push
lock
fwait
pop
bound
jno
in
rcrb
pop
lret
cmp
inc
mov
inc
shl
dec
lods
jl
xchg
mov
cltd
xor
cltd
or
xchg
insb
in
ret
and
mov
or
mov
xorl
inc
xchg
sub
mov
jb
enter
cmp
pop
mov
nop
jge
mov
jb
mov
inc
and
dec
cld
sbb
out
mov
call
aad
xor
dec
stos
cld
adcb
stos
adc
adc
push
cmpsb
jo
out
sub
loopne
leave
push
jle
inc
ljmp
aam
inc
call
xor
push
jl
jns
xor
cmpb
insb
lods
pop
nop
decl
cltd
test
lret
nop
jp
stos
out
ja
and
lods
mov
or
jne
movsb
push
enter
js
mov
jne
lret
shll
ret
in
popf
and
xorb
lds
inc
adc
fcomps
stos
lss
pop
ljmp
cmp
or
push
andb
popf
pop
cmc
mov
adcb
fwait
push
cmp
and
lcall
outsb
sbb
stos
int3
adc
add
cmpsb
sub
jnp
adcl
daa
fs
popf
popf
xchg
lods
std
scas
push
xor
subl
sbbb
std
or
pusha
and
push
add
icebp
movsl
lcall
lods
sbb
dec
xchg
mov
rcr
or
dec
repnz
xchg
sub
ds
mov
in
in
lcall
loopne
mov
rorl
mov
dec
xor
cld
adc
es
cmp
adc
into
mov
nop
sub
movl
ja
es
push
sbb
incl
cmc
icebp
cmp
cmpsl
push
daa
push
decl
mov
idivl
xchg
mov
jecxz
pop
in
jle
sbb
adc
imul
jno
test
adc
ret
shll
cmc
xlat
out
cmp
sti
inc
cmp
sbb
sbb
add
dec
sbb
inc
xchg
sbb
roll
cltd
fldt
fstl
xrelease
xor
cld
sub
cs
stos
push
std
mov
dec
lods
jo
push
xchg
cmp
pop
out
sahf
jbe
cmc
mov
cmpsl
adc
adc
mov
es
int3
fs
fmulp
iret
pop
and
pop
lock
sarb
push
sub
rorl
aas
sti
jp
imul
mov
dec
jmp
mov
cmpsb
inc
mov
ret
add
cmpsb
mov
inc
popl
test
loop
into
fs
pop
cmp
sub
scas
mov
mov
add
sub
push
xlat
outsb
or
and
pop
xor
lret
paddq
in
mov
pop
mov
mov
xor
xor
jp
xlat
insl
cmp
mov
loopne
cmpsb
fistps
fisubrs
mov
test
push
cmpsb
stos
xchg
jl
movl
lret
xchg
cs
mov
out
mov
sbb
jbe
xor
outsl
push
mov
mov
mov
fisttpll
mov
fnstsw
sub
sti
cmp
bound
and
in
hlt
mov
sub
data16
jnp
icebp
stos
loopne
mov
sbb
inc
sub
jp
xor
into
sub
add
xor
cmc
jle
shll
mov
lret
add
ds
xchg
push
imul
loop
das
adc
inc
into
sbb
mov
fisubs
insl
mov
movsl
jb
clc
push
test
imul
jmp
push
and
xor
pop
insb
les
xchg
scas
leave
and
jns
hlt
mov
push
or
cmpsb
push
inc
movsl
inc
push
ds
lret
inc
adc
out
xor
pop
popf
into
push
test
aas
ret
enter
inc
sbb
mov
fidivl
sbb
lods
scas
pop
outsl
jnp
iret
inc
fmuls
inc
orl
adc
test
xor
cmp
mov
ds
inc
lret
iret
jecxz
hlt
dec
fldenv
pmulhuw
imul
mov
jns
or
xchg
imul
das
scas
jo
divb
xor
nop
daa
dec
push
add
inc
in
xchg
jmp
add
xchg
adc
lds
dec
jno
xchg
fsubrs
cli
jbe
and
in
imul
xlat
mov
dec
push
mov
sbb
cltd
jae
ret
lret
es
mov
inc
pop
in
or
adc
sub
fcoml
or
std
int3
and
pop
adc
push
inc
adc
mov
loopne
lea
push
inc
arpl
out
rcll
cmp
imul
pop
insb
xor
sub
pop
mov
std
xchg
mov
fldcw
and
pop
imul
fdivl
ret
push
stos
add
hlt
mov
test
inc
mov
iret
fnstsw
mov
push
or
lcall
aad
iret
pusha
mulb
jmp
loopne
pop
pop
imul
mov
sub
rorl
cmp
push
xlat
jle
mov
movsb
rol
sahf
cld
mov
jg
add
mov
scas
lahf
or
adc
fs
push
cmp
cmp
lret
pop
mov
mov
inc
push
mov
jno
jno
mov
ret
loopne
and
icebp
xor
push
aas
cwtl
push
push
lret
fnstcw
jmp
loop
test
inc
lods
in
lahf
cmp
adc
pop
pusha
repz
scas
cmp
dec
push
fsubr
pushf
xor
das
sbb
fcmovb
add
cmc
rorl
mov
mov
rcl
and
sbb
lcall
sub
sbb
out
adcb
pop
mov
jb,pt
outsl
sub
test
xchg
les
data16
mov
fwait
imul
andb
push
ret
in
jo
repnz
dec
inc
cmpsl
mov
nop
xchg
dec
in
stc
sahf
sub
imul
dec
xor
out
mov
stos
cmp
push
xorb
loop
xor
movsl
int
inc
push
or
inc
pop
lock
push
lock
pop
stos
sub
dec
lahf
inc
cmpsb
jle
xor
mov
shl
mov
sbb
test
ret
cmp
hlt
repz
fdivrl
push
enter
cmp
sbb
xchg
adc
int
call
add
outsl
push
lock
mov
pop
test
mov
ficompl
or
daa
sarl
fwait
push
hlt
jns
cmp
add
cmp
jle
mov
lcall
inc
jne
addl
xchg
bound
or
ret
add
fwait
jecxz
rol
jbe
adc
movups
lret
push
pushf
test
in
stos
inc
cmpsb
xor
fs
jge,pt
jno
fs
push
cmp
int
mov
mov
sbb
and
ljmp
hlt
pop
movsb
pushf
xor
into
add
push
adc
clc
push
jae
and
mov
scas
dec
pop
jb
xchg
bound
andb
pusha
imul
pop
pushf
jno
adc
push
fsubrs
fiadds
ljmp
imull
pop
jge
mov
call
mov
out
fistpl
mov
mov
sarl
movsl
ret
sub
xor
jecxz
repnz
mov
std
push
sahf
or
lods
sbb
sub
movsb
outsl
sbb
inc
mov
mov
fidivrs
fisubs
paddsb
pushf
mov
push
subl
sub
mov
jp
push
out
lahf
dec
loop
cld
add
imul
xor
data16
lods
inc
xchg
jcxz
aad
add
scas
fwait
insb
add
ret
lahf
neg
daa
and
jnp
enter
add
sbb
jb
inc
lods
dec
rcrl
inc
js
mov
cmp
inc
sbb
push
popl
fdivrl
jg
stos
push
xor
sbb
arpl
jo
cwtl
stos
adc
adc
cmp
out
add
pop
or
mov
xchg
sbbb
xchg
sbb
fs
jmp
mov
pop
mov
cmpl
mov
push
out
dec
or
push
fwait
xor
bound
mov
xor
cli
rclb
add
fiaddl
clc
test
lcall
cwtl
inc
test
in
mov
mov
cltd
ja
insl
enter
test
mov
add
adc
insb
cmp
xchg
lret
imul
fldenv
dec
fidivl
sub
xchg
pop
lods
adc
pop
sbbb
cmp
insl
xchg
cmp
jmp
mov
in
das
lds
fdivrs
ljmp
stos
xor
sub
rcll
pop
and
pop
push
popa
xchg
in
ficoms
jb
mov
cmpsl
lret
push
test
push
or
inc
mov
inc
rcrb
subb
pop
ja
dec
cs
jne
sub
xchg
jno
enter
mov
jbe
inc
jle
fstpt
scas
sbb
fstl
mov
jb
cmc
pusha
repnz
cmp
into
xchg
add
add
mov
call
ljmp
inc
inc
in
lds
int
pop
negl
into
int
mov
dec
out
jb
inc
xchg
lcall
adc
fnstenv
jnp
adc
rorb
mov
mov
dec
fisubl
rorl
jge
pusha
stos
mov
int
cmc
mov
lret
mov
stc
jmp
aaa
push
outsl
xor
mov
movsl
data16
cwtl
and
push
dec
inc
mov
and
sbb
leave
mov
lods
mov
ja
push
push
outsl
xorl
and
jb
call
cmp
push
xchg
icebp
loopne
pop
test
and
jl
imul
jge
test
xchg
lahf
pop
xor
dec
pop
adc
shl
add
pop
pop
leave
mov
cmp
mov
inc
es
outsb
pop
arpl
sahf
inc
scas
sbb
ss
xchg
out
jb
jb
dec
sub
rol
fidivs
fisubl
and
loopne
inc
jecxz
cmp
in
mov
rorl
mov
dec
ds
push
stos
subl
mov
adc
into
xor
mov
xor
add
out
sub
mov
in
mov
mov
test
add
test
inc
pop
xor
fsub
mov
inc
inc
xchg
jge
sbb
int
ss
lahf
pop
cmp
movsl
xor
cmp
loope
pop
cmp
lea
rclb
inc
mov
fnstenv
add
jno
fsubrs
push
in
sub
jmp
out
inc
cmp
inc
outsb
out
addr16
push
fiaddl
test
mov
je
hlt
xor
stc
nop
push
inc
js
mov
sarb
ja
sahf
fucom
cmp
andl
cmpsb
jbe
sbb
daa
das
cmp
or
flds
jg
pop
lock
lcall
mov
ja
inc
lcall
addb
arpl
xchg
in
sub
xchg
pop
and
stos
fisubrs
mov
and
imul
inc
xchg
adc
pop
push
mov
adc
cmp
std
ret
mov
sub
mov
rcl
aam
mov
loopne
jns
fsubrp
adcb
pusha
popf
sbb
push
sbb
mov
dec
int
mov
imul
and
lock
in
jg
inc
mov
xor
jbe
mov
pushl
mov
xchg
mov
mov
xchg
jg
add
loope
aam
jmp
nop
xchg
lahf
and
shll
sarb
rclb
repz
cltd
pop
xchg
add
mov
jb
push
adc
lea
stos
or
stos
cmp
in
enter
insb
sub
sbb
sub
cmc
fnsave
scas
dec
or
push
pop
mov
in
sub
mov
or
mov
push
pop
cld
enter
mov
dec
dec
out
popa
xchg
movsb
sbb
sub
iret
push
lods
lcall
xor
sbb
and
fldl
das
les
jle
adc
push
mov
jle
and
popw
cli
jnp
sub
cmpsl
out
cmp
rolb
push
jae
mov
pop
xor
add
daa
sub
outsl
mull
cmpsb
ret
enter
pop
rcll
xor
enter
js
jmp
imulb
ja
pop
iret
push
ss
cmpsl
xor
popa
mov
aaa
cmc
pop
and
ljmp
jb
mov
js
nop
stos
enter
xorl
lret
adc
adc
jbe
jne
xchg
fistpll
int3
mov
repz
aaa
push
enter
jmp
mov
pop
andl
jns
sbb
and
sbb
jge
or
cmp
shlb
jmp
addr16
jbe
adc
pushf
scas
notl
push
out
and
mov
orl
repnz
cmpsl
test
and
and
sbb
out
std
enter
add
dec
in
sbb
shl
ret
jno
addb
test
pop
in
into
jg
cmp
add
scas
mov
or
sub
cmp
mov
or
push
xchg
rolb
pusha
lds
mov
aaa
adc
test
movsb
lods
popa
cmpsb
and
repz
or
iret
cmp
and
lock
xor
and
inc
add
int3
sbb
add
push
adc
adc
dec
pop
loop
pop
outsl
fbld
dec
jecxz
fwait
push
pushf
cli
gs
pop
stc
xor
jmp
orl
data16
mov
hlt
andl
or
stos
out
jae
add
je
popf
cmp
push
jg
in
popa
cltd
xor
mov
leave
sbb
dec
pop
xor
mov
test
daa
stc
inc
cmpsl
pop
xor
jb
pusha
sub
movsl
jp
mov
lods
cmp
repnz
aam
xchg
fwait
dec
lods
loope
pusha
xor
clc
and
fdivrs
int
add
popf
fwait
stos
aas
xchg
fcmovb
bound
sub
add
add
pop
dec
aas
test
out
xor
xor
cld
pushf
scas
xor
dec
icebp
imul
xlat
lea
scas
mov
mov
int3
fcoml
popa
push
cmpsb
out
cld
jge
test
je
xchg
cmp
add
push
sbb
xchg
ret
and
or
jmp
mov
sbb
cld
inc
xlat
cmpsl
aas
mov
in
jle
adc
mov
push
push
sub
or
push
cmp
loop
stc
insl
imul
or
jl
jle
ficoms
in
popf
daa
add
or
repz
cmc
adc
adc
xchg
ja
movsb
leave
adc
pop
lock
and
cmp
addb
sub
jmp
xorb
xor
cmpsb
and
dec
dec
push
test
jg
jge
xor
in
push
or
sbb
mov
and
and
jns
mov
iret
mov
shlw
pop
jge
push
aaa
mov
sarb
mov
imul
push
inc
xor
jae
jb
sbb
jo
mov
adcb
pop
adc
mov
jne
daa
xchg
movsb
incb
inc
aam
sbb
add
adc
loopne
cmpsl
mov
pop
cmc
call
and
ret
mov
roll
pop
xor
xchg
and
addl
int3
dec
ret
jae
into
loope
xchg
mov
mov
adc
sub
pop
sarl
andl
xor
pop
icebp
or
and
add
xor
aad
dec
cld
dec
sbb
daa
sbbb
aad
int
add
jbe
movsb
cmp
jge
push
test
sub
add
cli
inc
outsl
addl
add
pop
leave
mov
lods
mov
enter
xor
pop
jge
mov
stos
dec
inc
fnstcw
aam
mov
pusha
jl
test
adc
xor
fs
pop
rolb
lds
outsl
ljmp
shl
testl
aad
jle
mov
adc
mov
movb
push
call
jl
or
xor
pushf
cmp
mov
bound
mov
int
cmp
test
pop
adc
push
dec
jp
jle
xor
sub
fnstsw
fdivrs
fcmovnu
out
and
dec
push
ss
mov
push
es
cmc
dec
addr16
dec
lahf
adc
scas
mov
lods
cmp
ret
into
sub
loopne
test
cmp
cwtl
js
jne
xchg
cltd
pop
jle
cmpsl
bound
jecxz
dec
jecxz
jle
mov
dec
push
gs
jle
movsl
test
sub
xchg
jp
pop
push
pop
movsb
aaa
lret
mov
gs
mov
imull
pop
push
int
sbb
jo
and
loop
negb
mov
adc
outsb
mov
inc
enter
arpl
lahf
lds
sub
push
das
clc
or
cld
mull
test
js
pop
sahf
icebp
lods
jns
stos
mov
jnp
in
movsb
es
pop
mov
notb
mov
push
sbbl
jge
sbb
rcll
ds
or
xchg
add
je
stc
jno
pop
daa
cld
xchg
pop
mov
sbb
das
sub
sub
dec
inc
fdivp
pop
cmp
mov
data16
adc
pop
das
dec
ss
mov
mov
lret
mov
mov
aas
or
in
mov
sbb
gs
adcb
dec
sub
or
lea
mov
pushf
sub
nop
adc
mov
test
mov
aas
int
mov
adc
ret
sub
jecxz
cmp
and
xchg
cs
ja
imul
cmp
out
stos
loope
add
je
xor
sbbl
sub
ss
push
add
push
pop
call
mov
jns
cmpsb
inc
in
mov
pop
push
jg
fnsave
fisttps
add
sarb
aas
stos
icebp
xor
adc
enter
outsl
ds
call
fsub
aam
mov
add
sbbb
dec
cmp
sbb
jbe
mov
pop
xchg
adc
or
adc
xlat
push
mov
repnz
divl
scas
sub
stos
fs
sbb
lret
pop
and
sub
xor
aaa
push
adc
lahf
cmpsb
test
sti
push
or
mov
ret
daa
cwtl
mov
mov
out
out
dec
rcl
std
jle
insl
sbb
inc
dec
aad
xor
test
cmp
pop
daa
sbb
repnz
cli
jne
mov
pop
scas
mov
inc
dec
jge
jae
xchg
mov
dec
psubusw
sub
pop
mov
jle
fldcw
sub
cmpsl
outsb
nop
lahf
dec
test
shl
cmp
xchg
das
rcr
push
and
mov
subl
sbb
or
jb
aam
mov
out
outsb
xor
dec
das
sub
inc
sub
loope
jns
xlat
sub
test
lods
or
add
loope
dec
jmp
rorb
xlat
cmp
mov
mov
xchg
icebp
jnp
out
cmp
push
sub
and
xchg
dec
add
xorl
cmc
mov
cwtl
aaa
push
lds
adc
pop
imul
scas
cmp
rcrb
dec
cmp
enter
je
sbb
sbb
xchg
rorl
imul
daa
pop
mov
adc
neg
and
xchg
mov
aas
popa
pop
notb
xor
call
or
sbb
mov
mov
mov
adc
jp
sti
fs
cwtl
cmp
add
cld
inc
pop
sarb
sbb
pusha
out
seta
out
mov
decl
jle
shl
in
mov
aas
loop
imulb
in
dec
pop
and
outsb
outsl
inc
sub
dec
adc
pusha
push
mov
xchg
mov
cmp
mov
in
push
cld
ljmp
mov
test
xchg
sub
rcrb
dec
pushw
cmp
mov
adc
adcl
xchg
pop
loopne
mov
rcrb
and
imul
scas
call
subl
mov
into
icebp
adc
add
leave
mov
push
dec
fisttps
stos
xor
insb
add
push
pushf
jne
jnp
mov
cwtl
test
test
jbe
loop
mov
adc
jmp
ret
loop
jnp
enter
xchg
add
push
xchg
ds
roll
sbb
push
mov
mov
mov
stos
in
adcb
movl
xchg
xlat
cli
xor
inc
cld
mov
in
lret
sbb
and
jbe
sub
aaa
pop
cmpsl
popa
scas
loope
sbb
mov
sub
mov
das
jg
lret
test
xchg
and
iret
outsb
mov
push
jmp
inc
out
cmp
inc
dec
fildll
ret
dec
shl
jbe
mov
les
cli
xchg
pop
jl
push
mov
lcall
cmc
imul
mul
in
leave
adc
cmc
mov
mov
sbb
mov
inc
hlt
xchg
xchg
and
int
add
cmpsl
mov
sbb
jne
dec
in
cmc
mov
aad
xchg
jecxz
stos
adc
jge
xor
mov
or
sarb
rclb
out
test
sub
sbb
sub
dec
in
xor
sbb
pop
mov
leave
loope
in
imul
and
ficoml
adc
scas
movsb
jb
or
std
pop
add
loopne
and
mov
sbb
cmp
mov
loope
hlt
xchg
pop
adc
hlt
xchg
cmp
push
les
cli
mov
xchg
lock
test
cmp
in
in
std
sbb
lds
ret
xor
fwait
cmpsl
pop
arpl
pop
xchg
mov
rcl
push
aaa
out
out
negl
ss
jo
xchg
mov
test
cmp
fwait
addr16
pop
in
scas
inc
pop
xor
mov
xchg
add
stos
imul
test
test
fmull
sbb
jns
out
push
shll
leave
jns
repz
into
movsb
or
ss
and
mov
mov
inc
adc
mov
out
xchg
addb
push
and
aam
xor
pop
xor
mov
and
lret
push
ljmp
jne
loopne
xor
shlb
jp
adc
jle
js
and
adc
xor
shlb
pop
cmc
lahf
pop
lea
add
orb
lock
and
sti
add
dec
push
out
fadds
mov
cmpsl
sub
jb
out
sub
push
jp
int3
loopne
xchg
out
xchg
jmp
mov
fwait
ret
jge
jmp
iret
cltd
and
pop
push
outsl
mov
and
xchg
push
outsb
inc
data16
hlt
imul
or
pop
jmp
xor
lods
pop
jne
out
notb
lock
sti
pop
nop
xor
sar
mov
int
sbb
enter
sbb
ret
xor
fldt
cmp
fs
in
push
xchg
jmp
mov
inc
adc
pushf
push
cmp
mov
push
mov
push
fistpll
loop
sub
popf
insl
cmpb
cmp
xchg
jge
mov
ja
jp
fwait
add
test
xor
popf
lods
dec
push
dec
mov
jg
adc
movsb
aad
movb
pop
sahf
jbe
jmp
enter
andl
into
jo
inc
pop
cld
inc
into
xchg
and
add
stc
adc
out
divb
lret
or
mov
jo
addl
mov
bound
lds
popf
jns
lock
push
lods
pop
xchg
fisttpll
jge
or
sub
jns
dec
int3
sub
sub
dec
jmp
jg
push
call
adc
ljmp
out
ds
icebp
inc
cli
stc
fwait
adc
int
je
lret
stc
jmp
mov
out
mov
mov
loope
movsl
mov
mov
inc
lcall
rorb
stc
mov
and
fdivl
inc
push
repz
int3
add
js
inc
push
ds
jle
orb
sub
jne
push
testl
mov
jge
ret
rcrl
jle
psllq
pop
and
fbstp
push
pop
cmp
sbb
mov
jle
cmpsb
dec
inc
pop
xchg
or
jno
dec
push
push
scas
popl
das
cmp
dec
int
repz
shrl
cmp
xchg
out
cmp
ja
add
inc
or
sub
test
sbb
xor
push
mov
scas
scas
jne
aam
out
repnz
sub
xchg
add
mov
fnstsw
fbld
and
mov
inc
adc
and
out
popa
add
xor
cmc
push
cmp
aad
daa
inc
add
push
stc
mov
or
stc
test
sub
sub
or
jo
or
ret
aas
inc
dec
pop
loope
sub
mov
cmp
xor
in
mov
inc
push
iret
cmc
in
fsts
fs
dec
stos
xor
push
lock
fstpl
mov
jmp
add
sub
in
jbe
push
mov
mov
push
push
inc
idiv
xchg
mov
jnp
mov
fldcw
xlat
mov
inc
ljmp
lds
cmp
push
daa
and
jb
pop
mov
popa
mov
stc
rorl
and
gs
dec
nop
cmp
mov
jl
ret
push
cmpsl
out
sub
or
add
cmp
mov
jmp
inc
dec
sbb
shll
pop
imul
pop
push
or
adcb
dec
stc
inc
arpl
out
aaa
push
jbe
or
pop
mov
mov
fisubrl
out
mov
sbb
xchg
ss
leave
js
and
cmp
repnz
out
das
cmpsb
inc
sbb
pop
add
pop
das
icebp
mov
push
cltd
call
mov
push
mov
adcl
mov
push
dec
fnsetpm(287
sbb
inc
push
jmp
and
scas
xchg
jb
stc
lea
xor
bound
rcrl
pop
movsb
jmp
scas
inc
inc
outsl
adc
fldenv
and
scas
xor
stos
inc
push
push
xor
popa
dec
jmp
aam
xlat
adc
xor
mov
mov
dec
enter
pop
dec
and
jp
test
cmp
mov
out
xor
adc
mov
jg
pop
lock
loopne
in
fstpl
cwtl
and
js
mov
and
add
lock
aas
mov
out
xchg
scas
pop
inc
cmp
ja
test
adc
in
mov
imul
div
lret
cltd
cmpsl
insl
mov
imul
mov
pop
pop
xlat
fwait
popa
dec
cwtl
sbb
mov
inc
loop
sbb
jne
cmp
xchg
ret
ret
or
ljmp
fidivrs
scas
jns
and
test
out
in
test
sbb
adc
pop
clc
sysenter
ficoms
in
shlb
call
adc
scas
cli
pop
icebp
pop
imul
jno
push
leave
jno
mov
clc
mov
cmpsl
xchg
xor
out
cmp
pushf
aas
mov
cli
xchg
jle
mov
mov
cmc
mov
sarl
lret
push
jecxz
or
cmpsl
xor
aam
lods
cld
push
push
in
sub
and
aaa
es
cmpsb
pushf
fistpll
cmp
call
mov
push
sbbl
inc
inc
sbb
sbb
testb
sbb
xchg
pop
paddw
mov
fbstp
adc
fidivl
jo
mov
pop
outsb
sarb
mov
dec
xor
jne
add
popf
xlat
adc
ret
dec
in
imul
cmpl
pop
jge
notb
bound
mov
orl
mov
ljmp
adc
mov
or
pop
das
lock
es
sbb
mov
xor
fdivrl
arpl
dec
pop
imul
cltd
out
push
in
das
movl
mov
js
inc
sub
repz
in
push
push
testl
mov
repz
out
adc
mov
outsl
testl
paddb
mov
mov
or
loop
cltd
incb
icebp
in
fldt
sbbb
icebp
inc
mov
mov
jb
cli
sub
ja
insl
push
dec
bound
push
mov
imul
arpl
xchg
movsl
aam
fsubp
hlt
and
out
rcrl
xchg
mov
inc
ret
sbb
adc
or
ja
scas
repnz
repnz
loopne
xor
sub
push
adc
pop
or
subl
loopne
das
movsb
int
sarb
dec
shlb
dec
mov
or
jmp
into
loop
jle
out
movsl
mov
lods
mov
repz
rclb
sub
jp
xchg
pop
inc
sti
jno
out
fstl
sbb
cmp
adc
test
int3
sbb
dec
add
mulb
push
fldcw
mov
mov
pop
lock
jl
stc
pop
cmpsb
dec
dec
push
mov
lock
hlt
scas
insl
int3
push
sbb
ret
dec
out
mov
stos
insb
std
sbb
push
lret
adc
mov
or
outsl
xchg
jbe
imul
jle
sbb
dec
push
push
shrl
mov
and
mov
mov
mov
fidivrs
jg
idivb
cmpsl
and
jne
dec
jecxz
std
lahf
std
or
addr16
mov
xchg
jge
sahf
repnz
lods
mov
and
add
push
repz
jp
test
inc
mov
xchg
cld
inc
inc
ljmp
fwait
ret
cli
cltd
xor
mov
xchg
out
mov
jne
lods
addr16
sbb
cld
xchg
mov
loop
test
rcrb
push
int
leave
lods
jle
lods
mov
mov
idivl
gs
cmpsb
add
fs
mov
aas
inc
je
jbe
xchg
push
adcl
out
add
and
jno
pop
out
add
pop
push
shlb
pusha
push
addl
pop
pop
mov
xchg
mov
popa
add
shll
dec
in
int
cmc
adc
incl
push
xor
data16
dec
add
repnz
mov
movsb
sti
cmpsb
sbbl
add
cmpsb
mov
pop
pop
xor
jmp
int3
xchg
in
lret
and
fistpl
cmc
cmpsl
xor
jbe
cmp
inc
cltd
clc
inc
mov
das
adc
je
pop
mov
shl
lds
inc
andb
dec
push
mov
sub
jne
hlt
mov
sub
jns
cmp
insl
dec
insb
add
and
add
mov
addr16
sub
shll
and
sub
movsb
xor
inc
fiadds
inc
ds
hlt
pop
adc
jnp
test
lret
mov
push
fidivrl
push
and
cmpsb
cmc
or
arpl
dec
sbb
icebp
in
outsb
jecxz
outsl
neg
in
mov
push
cmpsb
sbbb
sbb
addr16
les
xor
xchg
pusha
xchg
mov
push
cwtl
fdivs
adc
data16
ds
push
aaa
pop
xlat
enter
movsl
fmuls
cmp
out
jmp
ret
movsb
jo
mov
jae
aam
shrl
ljmp
push
rorb
popl
fcmovnbe
pop
or
loopne,pn
pusha
mov
movsb
jnp,pt
icebp
inc
mov
mov
call
stos
divb
pop
imul
add
or
scas
jge
dec
mov
cmp
mov
add
andl
inc
dec
sbb
mov
adc
inc
js
icebp
outsb
jmp
add
cmp
inc
fcoms
pusha
pop
test
scas
mov
jno
adc
movsl
rcrb
dec
pop
jp
xchg
aad
push
jl
ss
fwait
sub
or
pop
push
addb
inc
xlat
xor
std
jae
push
or
xchg
xchg
ds
jl
pusha
ds
fwait
xchg
jl
popa
outsb
xchg
popf
test
add
out
push
pop
xchg
sbb
fldcw
test
loop
call
or
sahf
jo
and
pop
xchg
mov
es
test
mov
adc
aaa
iret
cmp
xchg
inc
call
pop
and
mov
push
das
mov
jge
cmp
push
xchg
loope
sahf
hlt
pop
mov
add
leave
pusha
cld
xor
iret
adc
movsb
mov
inc
nop
stos
lret
lock
mov
jns
xchg
mov
fcompl
cmpsb
cli
jbe
movsl
icebp
mov
inc
std
inc
std
aaa
adc
or
sub
ret
pop
or
cwtl
mov
add
rorl
js
adc
aaa
scas
xor
out
ds
mov
pop
mov
or
pop
sbb
insb
cli
pop
pop
in
test
or
outsl
xchg
pop
scas
mov
imul
aam
lds
cmp
mov
dec
imul
nop
daa
push
jmp
mov
sub
adc
cmp
fmul
push
pop
pop
jmp
mov
jnp
sub
int
xchg
mov
std
lock
cmpsb
cmpsb
fidivs
fsts
push
cwtl
xor
out
or
cs
add
and
adc
sar
lcall
or
int
cli
insb
aam
lahf
xor
arpl
dec
loop
subb
icebp
fadds
fildl
popa
cli
push
out
and
add
cwtl
xor
fbld
std
sbb
xor
mov
pop
push
sub
mov
aaa
nop
inc
push
les
lret
jb
mov
adc
pushl
data16
shrl
dec
lcall
push
outsl
mov
push
sbb
out
cmp
xchg
jo
cs
int3
add
bound
push
jmp
pop
mov
ds
lret
and
nop
pop
lock
fwait
aad
inc
testl
mov
cmp
stc
xchg
cld
mov
sub
clc
xchg
arpl
jmp
loopne
and
dec
loope
push
push
das
pop
xchg
mov
lret
lret
push
pop
arpl
mov
jb
cmp
movsl
rclb
lock
sub
filds
jo
sbb
mov
add
cmp
popa
repnz
dec
xchg
inc
sbb
jl
jge
or
out
es
push
pop
mov
inc
push
movsl
or
push
xor
pop
arpl
sub
mov
imul
mov
pusha
jns
jns
or
movsb
and
push
xor
aaa
fs
insb
jne
ljmp
mov
jg
aas
xor
pop
jnp
pop
pusha
mov
stc
dec
xor
pop
and
xchg
clc
dec
dec
fistpll
iret
movsb
or
jo
cltd
cmp
pusha
popf
mov
fwait
cmpsl
mov
imulb
dec
xchg
sub
and
and
sbb
call
jnp
jmp
jae
filds
bswap
fdivs
arpl
in
and
sbbb
dec
push
jo
cmp
stc
xchg
and
cmp
mov
mov
fistps
loopne
xor
jae
and
or
jl
xchg
movsl
cmp
cmpsl
insb
into
mov
dec
jle
popf
nop
ficoms
aam
test
sbb
out
dec
loope
or
mov
mov
jno
mov
icebp
mov
dec
mov
lahf
ret
mov
add
es
gs
and
push
pslld
mov
lahf
addr16
xchg
es
mov
out
ja
pop
out
mov
xor
pop
and
mov
inc
movsl
mov
mov
mov
pop
sub
add
test
rorb
sbb
dec
std
inc
ret
mov
pop
ss
push
inc
mov
jb
mov
aaa
repnz
gs
xchg
test
sbb
adc
sbb
push
push
add
fnstsw
imul
and
fwait
xchg
in
pop
xchg
andl
pop
jnp
pop
test
sub
xor
and
rclb
push
call
add
call
std
sub
clc
cmp
sbbl
scas
inc
out
xor
call
int3
or
arpl
aaa
cwtl
push
or
adc
mov
scas
fnsave
and
stos
sbb
inc
pop
shr
add
and
jnp
popf
rcl
mov
lds
jp
cs
icebp
add
push
mov
mov
outsb
push
xchg
and
mov
inc
push
stos
cli
nop
push
aas
notl
adc
lock
push
jecxz
ud1
inc
inc
sahf
xchg
mov
add
or
adc
cwtl
sub
andb
dec
in
shl
pop
cmpl
movsb
jb
jb
adc
jp
test
cmp
xchg
adcl
imul
inc
mov
sub
inc
dec
call
and
popf
mov
pop
pusha
notl
xor
scas
gs
test
sarb
imul
or
xchg
sub
les
enter
cmpsb
leave
mov
clc
dec
in
jne
cmp
sub
and
push
test
lods
stos
cmpsb
rolb
lret
xchg
in
cmp
cwtl
lods
out
jbe
pop
pushf
test
imul
dec
adc
xor
inc
movsl
sbb
cltd
xor
dec
out
lahf
popa
adc
jmp
inc
pop
inc
subl
fisubrs
push
mov
inc
nop
cs
clc
pmullw
pop
pop
xchg
xchg
test
dec
mov
push
xor
shlb
leave
pop
sarb
mov
jp
pop
int3
and
std
xchg
pop
cmpsb
stos
mov
jb
dec
popa
push
fbld
ror
call
and
in
pushf
les
movsb
sbb
pushf
das
and
add
mov
push
addr16
fucompp
iret
pushw
cwtl
add
in
test
mov
fisubrl
sbb
pop
jl
in
lods
arpl
aas
xlat
fsubrs
ret
fmull
jo
test
ret
aas
jae
out
lret
mov
cmc
fisubrl
inc
push
mov
pop
push
xchg
fwait
pop
mov
cli
fs
and
mov
in
cmp
in
mov
jp
pop
mov
ss
cltd
pop
sub
add
inc
mov
mov
cmp
adc
push
stos
push
divb
aas
popf
pop
push
loop
jbe
icebp
sub
loope
inc
gs
jne
push
jge
xor
popf
lods
mov
jecxz
fimuls
or
push
mov
add
int
pop
add
cmp
into
out
out
fwait
jmp
jbe
jae
cmp
rorl
push
sbb
in
sbb
add
pop
sub
out
xchg
sbb
fsubs
cmp
push
fisubl
or
imul
inc
sbb
stc
cmp
inc
pusha
mov
rclb
jmp
mov
out
inc
xchg
jne
add
bound
pop
jnp
mov
pop
jbe
sub
rcrl
push
dec
inc
stos
add
add
adcl
lahf
xchg
xor
scas
inc
js
jnp
push
lcall
fs
cli
sub
inc
push
outsl
hlt
andl
cld
inc
test
js
fsubrs
pop
push
jo
sti
insb
lods
lock
je
inc
test
iret
pop
lods
sub
adc
inc
ficoms
xor
gs
xchg
flds
aas
jbe
int3
xor
jo
inc
cmp
sbb
cmpsb
icebp
mov
pop
push
or
scas
lcall
shrl
mov
xchg
mov
mov
mov
icebp
bound
pop
in
jge
sub
movsl
icebp
jle
xorb
jle
or
lahf
and
xchg
sbb
dec
inc
jp
jne
sub
push
fimuls
ja
std
in
out
xlat
inc
xlat
pop
mov
lods
xchg
stc
pop
subb
xor
stc
or
mov
sub
aam
lcall
adc
push
iret
in
push
in
pushf
ret
fucomi
sbb
scas
pop
add
ret
repz
pop
hlt
push
in
jns
ficompl
test
shl
jns
mov
xchg
loopne
aad
xchg
in
aad
push
and
pop
lea
push
ja
daa
mov
xor
mov
jecxz
dec
lods
add
in
and
fcmovnb
pop
pop
fisubrl
ror
flds
and
dec
xor
mov
mov
pop
mov
sbb
je
out
mov
pop
push
add
add
and
je
xor
adc
adc
jge
shlb
sahf
es
add
dec
out
data16
inc
fdivrl
jle
sub
js
out
cmpsb
int3
test
enter
xchg
pop
call
cmp
add
add
cmp
je
mov
jne
fsubs
ja
jo
pop
sub
fldt
std
shrl
mov
call
push
push
mov
sti
and
push
push
ret
pusha
xchg
fldcw
lcall
dec
ds
add
das
das
outsb
lods
xchg
push
jge
mov
lret
fldcw
fcmovne
mov
cmp
out
loope
lret
pop
outsb
test
xchg
scas
ss
sahf
lods
ficomps
dec
ret
cmp
dec
fimuls
jge
mov
shl
addb
cmp
push
loope
pop
jmp
inc
cmc
push
cld
sub
in
pop
push
repz
xor
nopl
add
inc
cmp
push
in
in
inc
lret
or
jno
adc
dec
movl
sbb
jle
cmpsl
mov
jmp
mov
cmpsl
outsl
mov
cmpsl
cmc
shrb
nop
inc
pushf
adc
test
dec
inc
inc
je
inc
sbb
xlat
pushl
arpl
and
out
dec
in
sbb
jno
out
jne
jb
pop
cmp
and
in
into
xchg
adc
push
mov
rcr
xor
add
and
out
push
jmp
add
sbb
scas
lahf
mov
test
stos
or
aam
clc
mov
add
jnp
mov
cmp
adc
cmovbe
out
jnp
js
lea
clc
add
cli
push
mov
dec
iret
jge
icebp
daa
inc
dec
pop
jge
aas
je
and
lea
adc
jmp
jmp
mov
ret
out
std
fdivrs
cwtl
int
das
and
aam
inc
add
sbbl
mov
sub
pop
rorl
inc
jle
or
sub
sbb
outsl
xor
gs
loope
popf
dec
out
mov
sarb
fucomi
jno
inc
pop
xchg
stos
inc
ljmp
dec
cmp
cs
dec
pop
ds
outsl
push
inc
lahf
pop
popa
inc
or
sbb
add
fdivr
orb
mov
sub
scas
mov
loopne
aam
es
cmp
xor
jge
mov
sub
out
push
shrb
pop
cmpsb
sub
mov
gs
xor
push
cmc
cmp
aad
xlat
mov
and
das
lods
lcall
sti
or
cs
hlt
pusha
js
lret
les
xchg
scas
mov
jno
and
dec
lea
jno
in
lahf
and
inc
push
mov
adcb
xchg
and
xor
pop
lret
arpl
adc
xchg
and
fwait
pop
xchg
mov
jg
mov
lock
xor
popa
sarl
cmp
mov
push
cwtl
je
xchg
repnz
sub
add
push
fdivl
leave
loope
dec
test
jae
cld
cmp
mov
sub
and
jge
js
enter
and
jns
cltd
sub
lahf
xor
sub
cmp
xchg
dec
xchg
sbb
mov
xor
jb
push
repz
xor
mov
ljmp
xchg
sub
nop
inc
jbe
mov
in
stc
push
out
fwait
loope
scas
inc
sbb
push
mov
push
xchg
rolb
jno
sub
cmc
add
std
into
sbb
enter
in
sub
push
and
fwait
aam
fcompl
pop
push
or
stos
inc
pop
in
xchg
sub
jmp
lcall
push
mov
xchg
and
and
lret
data16
push
jno
dec
fs
into
gs
adc
or
push
cltd
xor
xor
aam
shrb
imul
or
or
push
pop
sahf
dec
inc
dec
loopne
push
cmp
test
cli
mov
pop
outsb
pop
mov
loopne
fs
xor
pop
adc
iret
xor
lret
mov
dec
imul
fwait
ja
test
aam
cmp
mov
cld
sbb
push
out
mov
movhlps
pop
push
std
dec
popa
les
stos
ljmp
out
mov
pop
mov
push
mov
push
cmpsl
js
add
xor
in
dec
add
dec
loope
out
sti
dec
shl
int
mov
and
or
sub
loope
decl
mov
xchg
mov
push
sub
xchg
mov
pop
or
frndint
and
sbb
mov
inc
stos
push
push
jg
sub
adc
pop
adc
push
mov
pop
sub
push
jne
or
bound
inc
add
mov
jmp
add
push
jp
out
fidivl
cmp
ret
and
cmpsb
xor
mov
les
pop
cmp
aad
mov
sub
enter
push
add
test
clc
adc
push
pop
sub
lret
inc
and
sub
push
pop
ja
sub
inc
pop
cmpsl
decb
xor
adc
repz
jecxz
cli
push
jecxz
mov
jmp
sbbl
jmp
cmpsl
mov
jge
jnp
jns
test
or
imul
xchg
dec
imul
aad
and
add
stc
stos
push
cmpl
movsl
dec
test
sti
decl
inc
stos
movsb
mov
scas
inc
stos
in
jg
inc
int
sti
imul
mov
and
call
push
mov
mov
lds
adc
sub
mov
stos
push
clc
fistl
jae
jge
mov
push
fs
fcoms
js
jno
adc
mov
sbb
lods
cmpsl
out
test
cmpsl
inc
inc
cwtl
in
lahf
adc
fbstp
push
pop
loopne
jle
jg
in
pop
add
jb
ret
rolb
push
dec
fbld
and
add
xor
pop
mov
push
loop
dec
mov
iret
sub
int3
call
pop
cmp
pushw
cmp
test
jbe
jl
ds
fnsave
addr16
mov
pusha
and
adc
mov
mov
inc
movsb
adc
push
xor
out
sbb
pop
ret
mov
addr16
xchg
xchg
lods
mov
cmpsb
lcall
pop
mov
mov
repnz
push
dec
loopne
sub
mov
ficoms
mov
pop
icebp
jae
lods
sub
rcll
adc
jnp
or
mov
dec
inc
ret
jnp
xchg
test
jecxz
shl
mov
icebp
mov
mov
mov
rclb
pop
adc
push
or
adc
scas
and
cmpsl
loopne
dec
cmp
xorb
fst
shlb
daa
lahf
negl
stc
into
cmpsb
lahf
test
cmc
or
pop
push
lahf
mov
cs
test
jecxz
das
jne
sbb
fcoml
mov
mov
inc
addl
popa
cmp
push
and
aaa
inc
mov
xchg
sub
mov
cs
mov
jb
sub
sub
pop
dec
nop
addr16
sbb
repz
imul
test
ficoml
or
mov
push
mov
movsb
jecxz
mov
push
mov
cmp
pop
lea
dec
in
popa
or
and
ret
incb
int
dec
or
or
mov
or
xor
adc
jge
mov
push
pop
out
cmc
pop
into
jno
mov
mov
int3
or
push
leave
into
push
mov
outsl
cmp
aad
xchg
mov
jg
daa
sub
sbb
dec
fnstenv
loop
pop
and
cmpb
dec
fstps
in
dec
sbb
into
push
sbb
and
and
xor
adc
lahf
insb
add
cld
data16
adc
test
addr16
in
add
pop
push
pop
out
xchg
jl
iret
in
push
in
and
or
test
orl
sbb
cmp
pop
pop
push
das
dec
jno
std
shl
clc
push
insl
cmp
shr
test
iret
jp
movsl
add
fwait
push
cltd
test
jmp
or
dec
xor
je
push
mov
addr16
icebp
dec
loope
push
dec
nop
or
and
inc
or
cmp
gs
pop
pop
in
icebp
sbb
jns
xor
pop
jne
push
mov
fnstenv
lods
fidivl
pop
mov
dec
add
push
xchg
scas
mov
lret
pusha
dec
jl
scas
cmp
mov
dec
cli
pusha
xlat
loop
sbb
outsb
inc
hlt
imul
cmc
fadds
es
ss
jecxz
inc
test
ljmp
sbb
daa
out
test
cmpsb
fcmovu
and
flds
popf
jae,pt
enter
loope
xor
inc
mov
movsl
cmp
fwait
pop
push
inc
mov
ficompl
je
call
loop
inc
lods
cmp
fcomps
mov
cmp
test
out
sti
rcrl
repz
xor
movsb
mov
xchg
lods
or
repz
mov
imul
dec
out
cld
sbb
ud2
xor
cmp
in
fwait
aad
out
mov
cmp
sarl
inc
push
jmp
push
adc
push
and
mov
inc
xlat
jns
fisubl
adc
test
sti
cld
outsl
jge
cmpsl
leave
push
jmp
es
mov
mov
mov
push
mov
jl
fcmove
ret
inc
arpl
push
mov
pushf
dec
xchg
lds
subb
inc
jo
f2xm1
ljmp
pop
dec
mov
arpl
push
into
bound
lea
pop
mov
dec
dec
and
add
into
andb
insb
mov
aam
lods
std
hlt
push
test
pop
sarb
adc
sub
sbb
sahf
xor
adc
mov
je
das
sbb
lods
fwait
das
int3
into
cmpsb
xor
xchg
shl
ret
cmp
inc
cmovns
aas
and
dec
push
aad
cs
ja
jg
lods
pop
fisubs
push
out
push
gs
mov
ja
fwait
jp
es
fwait
and
add
xor
xchg
pop
sub
mov
sahf
mov
add
lahf
jl
out
xchg
movsb
out
dec
pop
mov
daa
inc
mov
push
rcl
loope
jb
jo
scas
push
add
xchg
ljmp
jp
hlt
incb
sub
mov
loopne
mov
sbb
test
addr16
sbb
add
movsl
icebp
mov
push
cmp
xor
cli
jbe
inc
pop
sbb
clc
or
xchg
cld
push
incl
add
inc
lahf
push
xor
das
in
push
scas
test
scas
inc
mov
ret
cmp
inc
xor
scas
fcompl
xchg
xlat
addr16
sub
jecxz
adc
dec
dec
stos
inc
jg
outsl
outsb
lcall
push
hlt
or
add
rcrl
mov
les
ficompl
push
movsb
and
cmpsb
jne
fildl
leave
mov
push
addl
gs
rclb
push
and
or
ret
call
xor
xchg
mov
daa
sti
xchg
fstl
mov
jl
push
lods
lods
in
sbb
mov
xchg
mov
sbbb
xor
aas
adcl
popa
cmc
pop
stc
xor
lret
add
ret
enter
sbb
hlt
jb
les
sub
pop
pop
dec
dec
aam
outsb
xor
and
sub
repnz
popa
aad
xchg
loopne
and
mov
std
pop
mov
push
ljmp
jno
shll
sub
adc
xlat
ret
push
popf
aam
sbbb
sbb
xchg
push
inc
xchg
mov
ret
mov
push
dec
cltd
out
pop
mov
mov
add
imul
mov
mov
pop
pop
sbb
imul
imul
or
add
inc
mov
pop
mov
jl
cmp
in
popf
ss
js
js
out
push
leave
push
mov
mov
mov
je
or
jle
xor
imul
scas
xchg
xchg
sbb
xchg
popa
add
sbb
ret
mov
pusha
fmul
popa
ljmp
jmp
scas
outsb
ds
inc
in
or
mov
lret
dec
out
pop
jb
mov
into
gs
lods
sti
dec
push
add
test
sub
jno
cmp
xchg
add
push
in
sub
pop
xchg
xor
dec
inc
pop
ja
call
jmp
mov
pop
pushl
xchg
jb
xchg
rcl
mov
movsl
cltd
mov
cmp
xchg
xchg
push
mov
fistps
cld
or
push
inc
fstpt
cmp
xchg
mov
mov
dec
push
idivl
inc
btsl
mov
lods
inc
cmp
add
mov
xchg
sub
mov
mov
mov
into
ds
imul
mov
in
in
and
dec
mov
roll
xor
mov
popf
jne
push
icebp
push
fwait
and
adcl
cmp
stos
in
aam
push
push
cmove
xchg
aad
pop
repz
mov
fbstp
push
je
jnp
sbb
push
mov
push
mov
je
cwtl
push
out
jecxz
mov
out
sti
sub
addr16
divl
cmp
sbb
xchg
cmp
and
test
sti
push
movsl
push
test
aas
mov
inc
call
aaa
or
popf
mov
sbbb
shll
mov
sbb
cwtl
pop
out
and
mov
mov
adc
iret
jge
or
movsl
inc
shlb
push
ljmp
jno
negl
into
mov
dec
dec
fcoms
insb
test
push
in
lret
fcoml
pop
dec
or
fs
daa
mov
sahf
xchg
inc
push
dec
mov
jecxz
cltd
orb
xor
test
xchg
add
icebp
insl
add
sub
cmp
xchg
adc
dec
xor
adc
int3
hlt
std
dec
gs
sub
cmp
shlb
xchg
dec
dec
cmc
arpl
mov
pushf
mov
in
sbb
nop
test
push
fsubp
je
mov
sub
popa
int3
and
in
mov
dec
in
leave
aaa
call
pop
call
aad
out
sarb
call
rcll
xor
mov
lea
imul
dec
sub
pop
add
jp
jecxz
adc
cmovge
shrl
loope
mul
movsl
out
nop
dec
addl
jo
mov
or
sbb
in
test
sub
inc
push
xchg
xchg
popf
dec
jnp
jo
jl
inc
ret
sub
lahf
jecxz
sbb
jmp
inc
lret
xor
adc
call
scas
shrb
jge
loope
inc
jno
jae
ja
jns
mov
fwait
leave
enter
icebp
lods
mov
pushf
mov
cld
imul
ds
push
push
sub
add
xor
dec
pop
repnz
imul
outsl
or
ror
pop
mov
movsl
dec
pop
inc
sbb
sub
add
xchg
pop
xor
or
xchg
xchg
in
sub
loope
es
mov
stc
fdivs
xlat
push
test
movsl
jecxz
push
jecxz
jbe
repnz
xor
cwtl
arpl
add
dec
and
and
push
push
jecxz
add
pushf
aas
subl
mov
call
das
push
out
mov
xchg
jne
movsl
es
adc
inc
cmp
incb
jp
addr16
sbb
jmp
push
sub
jne,pt
dec
xchg
stc
dec
aaa
mov
or
jp
outsb
sbb
sbb
xorb
pop
clc
imul
dec
rorl
aas
sbb
ficoml
das
sahf
nop
fdivr
iret
or
add
cmp
add
push
scas
inc
inc
xchg
fs
xchg
sbb
iret
lahf
jmp
shl
les
mov
out
pop
fimuls
push
pop
cmp
mov
inc
sbb
ljmp
mov
inc
mov
jmp
pop
lahf
jo
xchg
rcl
repz
push
jp
hlt
push
sub
pushf
into
jo
pop
xchg
mov
movsl
cmp
bound
into
gs
insb
syscall
int3
pop
mov
pop
cwtl
push
jnp
or
test
push
xchg
sub
ja
mov
mov
sub
nop
xor
cli
xor
or
jmp
adc
xchg
gs
push
cmp
push
arpl
inc
mov
cli
insl
rcrl
sti
xchg
ds
mov
xchg
cmp
adc
stc
xor
ljmp
aam
popa
push
mov
xor
sub
xchg
sbb
dec
sbb
icebp
dec
imul
cltd
sahf
cli
add
or
cwtl
xlat
sub
dec
shll
mov
pop
mov
or
mov
pop
push
sub
pop
data16
cmpsl
mov
fsubs
push
mov
jmp
call
mov
cwtl
xchg
out
imul
das
imul
shlb
push
mov
cmp
test
mov
stc
in
push
sbb
mov
fldcw
or
mov
into
or
dec
mov
push
jb
mov
imul
ret
cmpsl
insb
adc
gs
jge
lods
stos
mov
test
cltd
xor
loop
cmp
aad
pop
mov
push
pop
pop
mov
jno
push
mov
mov
jl
loopne
in
ror
rcrl
lcall
inc
in
inc
cmpsb
add
cmpsb
push
pop
repnz
dec
inc
sarl
or
cmp
push
xor
mov
test
fidivs
leave
push
push
lret
ficomps
push
inc
inc
dec
cmp
gs
add
movsl
cmp
imul
js
push
cmpl
xchg
inc
mov
add
jmp
cltd
and
inc
xchg
add
mov
push
test
jne
les
lods
aam
enter
imul
xchg
add
in
sbb
mov
dec
and
pop
mov
out
sti
pop
mov
jae
inc
sub
inc
cmp
and
push
sub
fidivl
shlb
cwtl
add
clc
loop
cmp
into
arpl
and
dec
into
mov
in
add
push
ret
orb
mov
fnstenv
mov
clc
xor
test
sub
xor
movsb
push
jne
scas
cmp
aad
ss
popa
ret
ud2
jg
sarb
mov
and
mov
insl
mov
popf
add
rcr
jecxz
xorb
iret
mov
ficoml
xchg
or
cmp
bound
or
ret
hlt
push
pop
loope
sahf
mov
fidivl
iret
push
out
push
sub
mov
dec
jmp
xorl
mov
mov
push
cmp
inc
imul
sub
sahf
and
cmc
push
test
rcrb
jl
and
push
aaa
sti
test
test
push
lods
pushf
adc
add
ss
frstor
lret
pushf
mov
mov
repnz
push
cmpsl
mov
fisubrs
rorl
jle
test
jno
aad
shll
aas
mov
fcompl
push
mov
and
cmp
addr16
mov
cld
push
in
sub
mov
pop
sbb
cmp
pop
pop
out
mov
jne
add
pop
adc
subl
test
inc
jne
jle
push
scas
xchg
cltd
pop
ret
push
jmp
sub
inc
addr16
fcoms
lods
or
mov
dec
sbb
lcall
pop
cmc
pop
and
cmc
iret
cmp
and
push
negl
lcall
jle
inc
ficomps
outsb
jl
add
andb
sbb
pushf
bound
inc
dec
out
and
pop
enter
popa
ljmp
cmp
cmc
inc
test
and
sbbl
lea
sbb
push
mov
jge
je
daa
test
xchg
sti
inc
jbe
into
scas
cs
fmul
dec
das
pop
jp
push
dec
push
cmp
scas
inc
scas
fbstp
mov
fdivrl
cli
adc
test
sti
push
sub
dec
lcall
out
xchg
sub
dec
sbb
jne
daa
mov
enter
das
ljmp
pop
mov
dec
cli
mov
imul
rolb
xchg
icebp
stos
enter
pop
fs
and
inc
jo
das
push
insl
aam
push
test
mov
pop
andl
mov
repnz
jmp
cmp
lods
mov
outsb
xlat
jp
nop
mov
les
lds
scas
push
aaa
popl
cwtl
xor
mov
pusha
xor
fnstcw
aad
jg
xchg
jne
pop
repz
popa
decl
pop
scas
sub
lcall
cmpsb
in
xor
ret
gs
mov
stos
das
cmpl
movsb
enter
xchg
fs
or
mov
movsl
dec
rorl
shll
fucomp
jnp
orl
mov
repz
ss
adc
out
cmp
push
fidivrs
lret
mulb
push
dec
xchg
daa
in
clc
cltd
dec
scas
mov
mov
dec
popf
or
insl
and
icebp
mov
jo
xchg
mov
popa
int3
arpl
int3
ljmp
xchg
sbb
cmp
iret
or
in
adc
inc
movsl
cmp
das
stc
xchg
adc
xchg
inc
daa
inc
enter
int
test
and
adc
cli
pop
sbb
lret
dec
add
push
test
inc
jo
jne
or
ja
stc
nop
mov
pop
rcll
scas
add
idivb
stos
xor
xchg
adc
push
xor
rclb
xchg
les
ljmp
mov
call
mov
fimuls
cmp
fs
fimull
dec
pusha
push
add
cmpsl
arpl
das
sub
dec
rcrb
xchg
mov
shlb
repz
lahf
and
or
pushl
xchg
or
inc
inc
xchg
jnp
jecxz
and
mov
and
sub
ja
mov
filds
mov
movsb
mov
pop
inc
ja
out
lods
pop
cwtl
cmp
push
mov
leave
push
jmp
sti
and
icebp
iret
jo
outsl
into
in
mov
movsb
mov
ljmp
push
xor
add
inc
jbe
adc
pop
inc
push
ss
ds
or
mov
lods
mov
cli
insl
into
mov
xchg
pop
sub
mov
mov
in
mov
scas
cli
or
mov
pop
repz
pop
cmp
cmp
in
test
je
cmp
push
and
lock
call
and
pop
jmp
loope
daa
pushf
jecxz
jp
cmp
pop
jns
adc
fmuls
fwait
loope
cld
xchg
mov
jl
jle
push
aas
jnp
or
add
aam
mov
push
sbb
sarl
pushf
sti
push
xor
int
cli
movsl
insl
cmp
xor
or
xor
and
test
inc
fisttpll
mov
mov
ret
out
jecxz
bound
add
jmp
in
das
mov
xor
push
mov
inc
and
or
dec
jo
ja
pop
jmp
xchg
pop
es
jne
push
ds
popa
adc
mov
rorl
js
ss
sub
mov
inc
fucomi
mov
mov
jp
fwait
cli
movsb
pop
out
je
sti
jl
push
xchg
or
push
jg
sub
lret
pop
out
in
sbb
call
pusha
pop
xor
adc
mov
add
stos
std
mov
call
dec
mov
out
mov
ss
out
xchg
add
xchg
sbb
inc
jmp
mov
test
ss
sbb
repnz
daa
mov
cmp
sbb
rclb
xor
mov
dec
push
aam
sbb
ds
cs
fcoms
ret
inc
inc
data16
repz
pushf
test
imul
mov
stos
out
lock
rcrb
push
popf
add
lods
jp
icebp
into
mov
pop
xor
and
mov
or
orl
outsl
xor
lds
fmuls
pop
jnp
inc
mov
insb
push
dec
loope
lahf
ret
fisttps
orb
out
in
stos
push
insl
add
or
cmp
or
pop
in
inc
jae
aaa
into
sub
int3
xlat
mov
testl
and
lret
jbe
movl
mov
lret
icebp
movsl
pop
std
fs
lods
hlt
loope
and
cld
mov
pop
xchg
shll
mov
jl
inc
mov
es
and
mov
aaa
das
cmp
or
aad
paddsb
dec
sarb
cmp
outsl
jmp
leave
ds
mov
xor
xlat
mov
subl
push
mov
loop
and
outsl
mov
cs
or
pop
loopne
arpl
sub
sbb
repz
push
jge
lea
pushf
pop
in
fwait
insl
xchg
mov
sbb
dec
popa
jge
adc
xacquire
xor
mov
jle
fisubrs
dec
fsub
repnz
jge
sbb
pop
inc
sub
cmpsb
jecxz
arpl
data16
std
sbb
mov
adc
int3
sub
pop
sub
xchg
test
jnp
and
adc
mov
jbe
loop
fcoml
mov
mov
cli
inc
mov
aas
in
out
sti
stc
cmp
loop
call
jmp
lahf
mov
add
or
repz
mov
sbb
popa
or
xchg
push
in
adc
mov
outsl
or
mov
popf
mov
dec
cmp
shlb
mov
loop
adc
lock
pop
cltd
xor
or
repz
in
pop
mov
inc
out
inc
in
je
bswap
loope
scas
jle
add
mov
adc
shrb
mov
pop
and
inc
aad
loopne
mov
adc
mov
test
add
je
loop
insb
into
cltd
roll
aad
jnp
jb
cmc
pop
scas
es
push
ret
mov
xchg
xor
mov
pop
cltd
pop
and
dec
repnz
fistpll
pop
jg
popf
data16
mov
pop
test
jp
and
mov
fcoml
outsb
jge
mov
or
call
and
mov
mov
mov
loope
es
loop
fsubs
add
mov
lret
mov
sar
lahf
idivl
leave
sub
fmull
mov
dec
out
nop
sub
push
jne
scas
inc
bound
inc
cmp
cmp
in
and
les
stos
imul
inc
xchg
jle
sub
jb
add
filds
gs
int3
sahf
mov
mov
jecxz
popa
ficoms
jmp
cmp
addr16
inc
mov
inc
inc
cli
fldenv
mov
dec
mov
pop
cltd
mov
dec
hlt
cmp
in
mov
sub
push
inc
sbb
sbbl
jne
add
cld
or
out
insb
and
xor
data16
xchg
pop
imul
push
test
pop
fcomip
inc
adc
movsb
sbb
sub
sbb
je
xchg
imul
xchg
adc
xchg
sar
or
movsb
fwait
sbb
xlat
pop
loope
mov
mov
fcomps
jp,pt
or
fwait
scas
sbb
jmp
shrb
outsb
pop
int
popa
or
mov
jg
mov
test
sub
divb
in
push
icebp
or
xchg
and
inc
and
hlt
mov
cmpsb
add
mov
push
xchg
insl
inc
in
or
cli
xchg
loop
jno
mov
lock
push
sub
test
hlt
mov
ss
jecxz
inc
fdivr
inc
push
and
pop
xor
mov
sub
push
stos
lods
sbb
xchg
sub
rcl
xchg
out
hlt
dec
and
mov
pop
mov
pop
xchg
mov
out
add
repz
mov
xlat
jg
jno
push
ljmp
jb
lret
std
mov
fcmove
loop
or
push
int
aaa
loope
out
fidivs
sub
xor
ljmp
dec
outsb
sbb
pop
inc
notl
jae
in
mov
add
call
fbstp
cmp
push
fistpl
repnz
ret
movsl
mov
pop
jecxz
out
in
mov
push
cmp
lea
and
cmp
inc
mov
xchg
pusha
adc
pop
movsb
lret
in
push
inc
mov
xchg
data16
adc
xchg
xchg
mov
pop
dec
in
xchg
lods
test
loop
sbb
aad
cmp
jbe
sti
ds
fisttpll
xchg
inc
push
and
xor
repz
or
ret
cltd
add
cmp
stos
int3
pop
test
xchg
dec
clc
lods
out
dec
enter
hlt
jns
cmp
cld
fiadds
xchg
stc
jmp
js
out
pop
sbb
lds
dec
lock
or
sub
ljmp
add
dec
ret
out
mov
xor
jp
clc
pop
in
insl
jp
mov
mov
xchg
inc
xor
testl
mov
dec
mov
inc
daa
loopne
out
int
int3
arpl
insl
jge
enter
cmp
fs
sarl
das
leave
jg
enter
std
dec
mov
mov
mov
out
pusha
into
fsubl
inc
xchg
xchg
or
shrb
sbb
add
sub
pop
shr
sbbb
xor
mov
dec
add
mov
or
fnsave
pop
fs
ss
and
xchg
mov
or
mov
fmull
adc
es
mov
rol
push
or
mov
and
cmp
lods
push
jb
imul
adc
movsb
mov
lea
sbbb
and
inc
jmp
push
pusha
out
dec
hlt
jnp
push
lds
es
xchg
pop
and
sbb
push
fstps
sbb
push
pushf
mov
in
test
mov
sub
sub
sub
dec
mov
inc
xchg
sub
scas
cmp
add
push
jne
inc
push
jmp
lret
aas
sub
sub
lods
mov
dec
pop
fs
pop
jo
jmp
repnz
or
movl
sbb
sbb
add
daa
jno
ret
and
jecxz
add
movsl
xchg
pop
inc
sbb
adc
cmc
ret
aaa
stos
repz
push
mov
pop
fimuls
mov
xor
cmp
mov
or
pop
or
ror
adc
mov
lahf
xor
pop
out
mov
ret
cmp
pop
push
int3
insb
xor
jns
lock
icebp
dec
mov
aas
pop
clc
pushf
cmp
pop
sbb
mov
orl
inc
outsl
sbb
jo
mov
xor
inc
fprem1
mov
das
adc
add
push
insb
push
testl
cmp
aas
clc
jl
pop
cld
sbb
adc
fldenv
leave
cmp
mov
sbb
inc
dec
cmp
mov
push
sbb
xchg
adc
cltd
lretw
cmp
jp
jmp
aaa
mov
sti
adc
femms
jmp
adc
test
mov
inc
movsl
out
shll
xor
jno
xor
dec
shrb
ljmp
loopne
pop
dec
fdivr
mov
xor
jns
xor
mov
push
inc
stos
adc
dec
mov
test
out
fwait
sahf
lock
push
push
mov
add
imul
mov
add
dec
pop
fxtract
mov
pop
scas
int3
inc
iret
sub
fisubrl
dec
inc
jno
mov
or
filds
popf
push
jbe
inc
sbb
dec
mov
clc
lds
and
outsl
push
dec
loopne
out
enter
inc
in
sub
ret
out
adc
test
fdivs
mov
icebp
adc
mov
idiv
notb
cmc
and
pop
sbb
les
mov
and
inc
ss
pop
jle
push
push
sbbl
sbb
jo
xorb
xor
push
lds
jle
sbb
sub
cmpsl
inc
inc
sbb
adc
sbb
jge
lahf
into
std
call
mov
dec
mov
ds
ret
stc
call
addb
mov
xchg
inc
push
xor
sbb
cmc
je
hlt
incl
mov
pop
aaa
scas
mov
jge
inc
scas
add
shlb
inc
int3
push
scas
push
push
mov
jl
enter
dec
loope
mov
pop
add
pop
stc
sbb
sub
pop
and
cmp
lret
enter
cmp
sbb
pop
push
mov
aaa
fdivp
mov
xchg
push
inc
mov
filds
movsl
nop
mov
jnp
loope
ja
xor
popa
dec
enter
orl
push
cwtl
rol
popl
sub
adc
mov
adc
pushl
mov
ror
nop
shl
shr
mov
mov
push
jecxz
mov
mov
outsl
push
xor
dec
cmp
dec
sbb
or
sub
call
add
push
and
leave
outsb
inc
fcomps
shll
cmp
jle
inc
nop
mov
dec
cwtl
jecxz
dec
adc
xor
mov
cmp
cmp
iret
std
fidivl
dec
adc
aad
dec
cmp
jp
mov
mov
ficoml
aas
aas
inc
cmp
stos
loope
inc
shlb
dec
mov
gs
lret
inc
mov
icebp
push
mov
fsubrl
cmp
jmp
lret
ss
cli
push
cmp
mov
insb
ret
push
xor
gs
jno
push
add
lds
stc
inc
aam
push
inc
fwait
addb
xor
mov
mov
fcmovu
sbb
jge
shlb
jbe
cs
jne
cmp
adc
andl
jns
pop
stos
or
or
out
cmp
mov
mov
push
add
inc
in
fwait
cmpsl
or
pop
ja
add
mov
push
jge
fdivl
cmpsb
sbb
mov
subl
and
orl
std
pop
pop
or
push
ss
mov
sbb
out
cmpsb
repz
mov
aad
jbe,pt
addr16
lahf
stos
cmp
out
add
aad
mov
lret
out
mov
imul
ret
jnp
or
add
es
push
scas
adc
mov
dec
arpl
in
pop
xor
or
mov
rclb
out
push
xchg
rep
scas
es
add
and
push
jo
jmp
cld
xchg
jo
das
jg
mov
add
xlat
pop
es
pop
insl
mov
jno
loop
roll
dec
mov
int
jge
lret
daa
test
sti
int
xchg
dec
stc
fisubl
ja
push
ret
pushf
int
sbb
cltd
jnp
sub
dec
popf
lock
sub
enter
mov
rcrl
fldl
and
mov
mov
jecxz
repnz
bound
mov
fistpl
jne
pop
addl
mov
xlat
jmp
mov
and
mov
or
pusha
pop
and
cmp
outsl
sbb
stos
ret
push
and
mov
shr
movsb
sub
cltd
mov
out
cmp
inc
push
sbb
insl
rcrl
daa
mov
inc
mov
or
inc
dec
cld
adc
int
jns
push
stos
shr
aad
pop
icebp
push
testl
mov
loope
adcl
adc
inc
push
jae
and
stos
mov
dec
ljmp
int
inc
enter
or
cld
dec
inc
inc
test
cltd
das
dec
cmp
mov
ret
jmp
cmp
out
dec
dec
inc
mov
push
mov
addr16
push
xlat
fbstp
ja
sbb
sti
std
sub
gs
in
dec
pop
jne
fcom
movsl
mov
mov
fdivl
or
iret
or
sub
movd
mov
add
daa
cli
mov
fistps
mov
popf
mov
xchg
push
in
ret
sub
jne
pop
mov
mov
adc
add
xor
rcll
adc
jnp
push
pop
push
push
xor
xor
jecxz
loop
sub
push
lcall
xor
jno
jmp
cmc
mov
popa
loope
les
mov
pop
sahf
jge
mov
in
arpl
dec
lahf
loop
cmp
and
das
dec
decb
mov
xchg
dec
or
lods
mov
in
sub
xor
into
insb
and
pop
imul
into
shlb
addr16
dec
gs
rcrb
data16
inc
mov
lcall
adc
push
jbe
nop
sar
rorb
lret
mov
pop
mov
ljmp
sub
daa
pop
fwait
or
aam
dec
pop
popf
cmc
rclb
jge
sub
push
mov
js
xor
push
cmp
stos
inc
lock
cmpsl
imul
inc
or
dec
push
stos
out
mov
sbb
add
lods
out
cmp
fst
sbb
out
sti
mov
ret
imul
xlat
add
pop
jo
xor
popf
arpl
arpl
test
andb
out
sub
fists
test
xchg
sub
popa
fadd
in
ja
pop
jo
jecxz
mov
cmpsl
ret
fdivs
xor
iret
pop
dec
loope
jmp
inc
sbb
repnz
sbb
das
cmp
and
sti
xor
adc
mov
push
dec
movsl
xchg
jge
aam
push
ficoml
dec
cltd
ror
lds
cmp
mov
std
add
aaa
pop
push
leave
cmp
push
dec
stos
adc
push
or
cmp
decb
movsb
int
push
jmp
fstpt
es
cmp
push
mov
mov
repnz
xchg
or
jge
decb
add
adc
out
fstpl
lret
and
cld
xchg
ss
leave
dec
adc
sbb
inc
out
xorl
cli
mov
roll
cmp
insb
sbb
adc
out
faddl
std
jae
mov
fisubl
inc
mov
cmpsl
ret
and
adc
fsub
gs
pusha
aam
cmc
sub
addr16
xor
pop
adc
dec
push
sbb
sahf
dec
fistpll
inc
stc
xor
mov
xor
cmp
xor
jnp
push
inc
sbb
sbb
xor
xor
jo
gs
push
mov
xchg
repz
xchg
mov
fs
loopne
adc
and
ljmp
sbb
dec
out
cmp
mov
hlt
lea
mov
daa
jge
mov
jns
sbb
xchg
adc
pop
and
add
lds
pushf
sbb
aas
mov
or
mov
sahf
and
add
dec
das
test
mov
jns
cmp
jo
jo
jle
imul
dec
filds
out
rcrb
fsubl
ret
in
jo
mov
push
cmp
mov
pop
and
inc
xor
out
jp
push
add
jp
outsl
lods
loope
mov
pop
sub
into
sbb
ds
sub
add
mov
and
aam
shr
pop
sbb
cmp
das
mov
rcrb
add
fwait
test
aaa
mov
sbb
mov
dec
jg
hlt
popl
push
xchg
mov
mov
out
sub
mov
pusha
les
out
push
or
shrl
mov
cmpsl
cmp
test
mov
dec
mov
and
inc
cmp
popf
in
daa
call
jne
je
jl
sahf
jb
jbe
cltd
xchg
sub
arpl
push
rorb
cld
pop
jecxz
sbb
mov
ret
pop
push
xor
inc
icebp
cmp
fmuls
push
dec
mov
mov
repz
pop
repnz
mov
shr
xchg
hlt
xchg
or
pop
adc
jecxz
or
or
lods
jno
inc
sub
popa
gs
push
rcr
iret
push
or
pop
outsl
inc
js
jmp
fldt
mov
sub
xchg
test
sbb
xchg
aaa
leave
shrb
aad
pop
xlat
aam
test
pusha
mov
in
add
pop
xlat
in
mov
mov
pop
jne
push
test
stc
ret
bound
lea
in
clc
dec
sbb
into
daa
cmp
loopne
xchg
add
jp
addb
fidivl
dec
lcall
popa
mov
in
out
aas
jle
mov
push
sbb
scas
scas
mov
push
ds
mov
movsb
pop
repz
sub
stc
lahf
jbe
inc
leave
movsb
cli
in
xor
dec
stos
ljmp
ljmp
push
dec
inc
pop
push
nop
mov
jae
inc
insl
sahf
shr
jnp
push
scas
jmp
mov
push
call
or
jae
pop
ljmp
mov
jno
mov
clc
stos
movsl
xchg
in
adc
dec
rorb
mov
add
mov
outsl
aaa
daa
gs
mov
fdivl
ljmp
mov
dec
rcrb
jl
ss
loopne
xchg
jbe
or
shlb
in
jl
and
and
shrb
xchg
repnz
stos
pop
aaa
add
mov
fs
xchg
lret
mov
shll
mov
ret
fsubr
stos
lds
jp
push
mov
pushf
mov
jmp
icebp
push
dec
inc
test
shll
int
push
pop
push
popa
stc
xchg
jno
out
pushf
scas
push
dec
add
loop
push
movsb
repz
enter
lahf
outsb
xchg
arpl
add
fildll
rcll
mov
mov
pop
cmc
mov
jnp
or
jl
mov
push
pop
ret
xchg
jno
pushf
and
data16
orb
mov
jne
push
dec
rorl
lret
lretw
mov
nop
mov
sbb
aaa
or
test
push
lock
sub
or
pop
daa
dec
jae
sub
jno
and
adc
jecxz
push
aam
lahf
imulb
push
sub
adc
imul
loopne
lcall
cmp
dec
fists
inc
push
vmovntpd
rcr
jb
mov
stc
test
cwtl
cmp
mov
jmp
xor
mov
cwtl
mov
mov
rcl
mov
jae
dec
dec
jae
sub
test
mov
scas
in
or
xor
pop
push
aam
lods
or
adcb
scas
inc
push
movsl
jae
les
stc
xchg
sub
into
sbb
testb
int
jmp
and
mov
ljmp
lahf
aam
rol
lds
adc
popl
test
mov
fs
jb
loopne
inc
in
stos
in
repnz
outsl
jb
mov
jge
scas
mov
cmc
lahf
fsubrl
xchg
in
fnsave
xchg
iret
insb
push
mov
xchg
mov
data16
mov
imul
pop
cmp
dec
jecxz
arpl
sbb
imul
xor
xchg
clc
mov
inc
cmp
shlb
out
sbb
mov
cmp
mov
add
rcl
leave
jne
jecxz
inc
adc
cmp
sbb
add
imul
jbe
cs
insl
add
rorl
push
stc
jg
sub
and
pushw
push
repnz
daa
and
iret
enter
push
xor
dec
pop
and
cmpsb
mov
fwait
sub
and
ror
cmp
lea
mov
xchg
adc
mov
sti
and
rorl
cmp
adc
mov
jg
mov
dec
loopne
add
dec
xchg
ss
shl
addb
xchg
test
jo
out
jmp
adc
inc
shlb
icebp
jmp
aam
push
movsb
sbb
jle
and
xor
add
mov
mov
inc
fdiv
iret
inc
lods
out
sub
lret
bound
lret
outsl
sar
pop
ljmp
adc
mov
sarb
es
imul
or
mov
stos
sbb
hlt
ds
test
pop
or
xchg
addr16
add
leave
xor
xor
xchg
sbb
jle
clc
scas
cmpsb
adc
fsub
jg
sbb
or
xchg
clc
scas
daa
adc
pop
adc
mov
push
scas
dec
sbb
adc
repz
or
cwtl
xchg
lret
mov
or
sbb
push
fs
lcall
inc
jb
ljmp
testb
clc
jne
shl
popf
bound
or
jl
pusha
push
jb
pop
jle
lret
push
out
rcrb
jg
pop
mov
enter
xchg
imul
out
sub
jp
cmp
lea
lods
jp
shll
sar
push
jbe
leave
cwtl
movsb
repnz
pop
mov
add
pop
fsubr
jnp
arpl
mov
push
icebp
popa
inc
or
inc
pop
sbb
xchg
ja
hlt
xchg
add
popl
data16
bswap
mov
mov
adc
fstpt
std
iret
jae
lret
lock
mov
shr
pop
out
push
pusha
xchg
outsl
inc
and
fwait
test
es
subl
xor
pop
inc
mov
jg
push
cmp
clc
dec
add
out
in
fmull
fidivrs
stos
in
dec
cmpsb
xor
xor
mov
jo
dec
mov
add
test
outsl
das
mov
je
push
mov
push
fiaddl
movsb
cltd
movsb
mov
roll
add
in
dec
gs
rcrl
add
test
xchg
add
stc
ljmp
popa
and
out
mov
mov
leave
int
or
nop
mov
mov
loop
fucomip
pop
mov
aaa
mov
mov
outsl
mov
pop
push
imul
mov
mov
shl
mov
and
sarl
cmpsb
rol
add
mov
dec
in
call
mov
repz
xchg
add
inc
cmpsb
jae
mov
mov
and
rcrb
xchg
adcb
rol
mov
mov
out
add
inc
push
mov
mov
rol
in
insb
adc
fstps
dec
cwtl
pop
rcl
ret
jp
into
aas
gs
daa
lahf
add
inc
shrl
inc
jno
xchg
inc
push
ds
jb
shlb
adc
mov
push
mov
or
out
mulb
add
fldt
or
add
icebp
aas
jmp
insb
cmp
jp
mov
ljmp
mov
int
decl
sub
and
dec
out
insb
dec
int3
scas
xchg
sbb
inc
pop
xchg
adc
aaa
cmp
pop
push
xor
xor
lds
iret
pop
mov
pop
sbb
add
cmp
dec
dec
mov
dec
dec
mov
dec
movsb
cs
loopne
scas
or
jl
and
lcall
sbb
jbe
sbb
jl
cld
push
in
push
xorl
icebp
mov
ret
jae
add
mov
fstl
leave
jo
aaa
mov
test
dec
loop
jne
inc
xor
push
out
jns
or
and
rcll
push
in
or
cmp
icebp
repz
in
cltd
mov
xchg
bound
inc
mov
hlt
xchg
jne
mov
pop
mov
inc
fisubs
dec
shrl
inc
push
outsl
add
hlt
mov
push
js
test
dec
mov
aad
add
sub
pop
rcrl
jae
sub
mov
xchg
inc
gs
cs
inc
push
push
popf
sbb
popa
imul
mov
dec
pop
stos
test
cld
pop
inc
xchg
xchg
jns
and
lea
pop
cli
mov
insl
pop
xchg
ret
lock
insl
and
test
push
jle
lods
mov
xchg
out
jns
out
out
fsubrl
pop
add
cmpsb
mov
loop
sub
jmp
daa
xor
bound
ss
sub
cmp
mov
jns
leave
frndint
imul
pop
jns
in
mov
bnd
adc
test
xor
int3
subb
xor
inc
bound
mov
test
jo
and
push
push
push
jae
add
and
mov
jl
test
mov
adc
scas
inc
idivl
sbb
arpl
jnp
enter
sbb
cmpsb
add
sbb
jecxz
mov
rorl
and
jg
mov
pop
out
iret
mov
mov
popf
jo
cli
or
das
xor
jmp
or
call
add
pop
lahf
xchg
cmp
jecxz
dec
sub
inc
mov
cmpsl
cmc
lahf
in
jns
rcrb
mov
dec
sbb
mov
cmp
sub
cs
dec
lods
push
pop
mov
cmpsb
push
push
test
pop
push
xor
push
cmp
pop
cmp
insl
loopne
fmul
push
out
testb
icebp
ss
cld
loopne
mov
cmc
mov
dec
pop
mov
add
add
xor
push
adc
xchg
jb
and
cmc
repz
mov
adc
dec
mov
pusha
lds
jmp
push
repz
jnp
outsb
push
cmp
push
aad
fwait
add
test
repz
jecxz
mov
inc
cwtl
jg
cmp
inc
jbe
pop
les
pop
std
or
loopne
enter
stos
inc
inc
add
pop
push
mov
jne
adc
dec
mov
jecxz
adcl
xor
add
dec
sahf
clc
into
into
outsl
xor
cmpsb
jmp
and
hlt
xor
add
ljmp
sub
aad
dec
js
mov
pop
sti
and
push
dec
xlat
jb
mov
xchg
xor
pop
inc
add
jbe
xchg
push
in
and
adc
les
sub
int3
push
insb
lret
bound
fwait
cmpsl
nop
mov
jno
mov
pop
fidivl
sbb
mov
or
or
mov
or
ret
ja
inc
imul
mov
lret
xchg
mov
sub
loop
jb
push
mov
cmp
out
cmp
pop
testl
add
mov
add
or
cmp
inc
mov
ss
popa
adc
sbb
or
sub
push
fcmovnb
scas
pop
fstpl
mov
sahf
sbb
adc
into
std
add
daa
pop
jb
mov
cmp
andl
fstl
and
mov
or
movsb
cmpsl
jb
mov
ljmp
sbb
cmp
sbb
pop
xchg
push
sbb
mov
adcb
inc
sbb
int3
lea
and
mov
repz
xchg
pop
mov
dec
or
fdivl
cltd
jb
imul
sti
cmp
push
fisubs
sub
mov
imul
xchg
sub
adc
mov
sub
in
clc
dec
push
sub
pshufw
cmp
imul
and
cwtl
jnp
mov
insl
pusha
adc
popf
subl
fcoml
jmp
in
movsl
icebp
jge
mov
cmp
loope
lcall
aaa
xor
dec
cmpsb
stc
lret
andl
xchg
sub
jg
pop
xchg
jle
in
cmpsl
pop
out
fdivrs
jbe
imul
mov
push
mov
pop
ds
mov
pushf
xor
mov
in
in
mov
arpl
lret
fwait
pop
and
push
add
cs
dec
dec
loope
dec
mov
dec
lock
leave
inc
insl
mov
pop
je
mull
jg
test
movb
inc
dec
outsb
cmp
push
negb
xor
scas
outsb
mov
cmp
nop
mov
cmp
jle
xor
xor
pop
sbbb
ret
push
adcb
mov
push
sbb
sbb
scas
dec
loopne
mov
test
les
mov
daa
lcall
adc
xchg
or
out
aaa
aam
mov
mov
ucomiss
inc
movsl
mov
mov
cmpsb
cmp
mov
shrl
mov
cli
lea
mov
or
mov
cmp
test
inc
mov
xchg
aaa
into
shll
inc
aaa
mov
subl
and
test
stos
mov
sub
mov
loope
ret
insb
shr
fsubp
xchg
sub
scas
pop
add
mov
add
pop
cli
mov
lds
sti
cmp
mov
insb
adc
gs
inc
out
adc
loopne
icebp
nop
jg
fidivrs
bound
mov
mov
or
mov
lods
aaa
shl
mov
test
test
xchg
push
xlat
cmp
sarb
inc
cmpsl
pop
das
sub
insb
dec
xchg
mov
pop
cwtl
mov
xchg
xchg
sub
nop
mov
test
aam
push
fisttps
adc
adcl
lret
or
psrld
mov
mov
push
cwtl
xchg
or
cmp
lods
xchg
add
mov
push
jo
lret
in
sbb
push
in
push
std
push
mov
pushf
cli
js
xor
dec
fsts
or
add
test
lock
pop
idivb
decb
cmp
adc
and
push
mov
test
mov
imul
lods
or
push
push
xor
fstpl
pop
cmpsb
or
mov
fmulp
mov
pop
popf
and
xchg
lods
jg
outsb
out
fldl
or
cmp
adc
in
lret
mov
sbb
dec
daa
cmp
call
mov
iret
sub
sahf
daa
or
mov
iret
cmc
xchg
cmp
push
mov
popa
or
int
jb
cmpsb
outsl
cld
jo
xchg
jp
clc
stos
inc
sub
dec
fisttps
leave
pusha
shrb
loopne
jo
testl
cwtl
out
cmp
dec
ret
lcall
xchg
xor
mulb
xor
test
rcrl
xchg
aas
ljmp
jno
outsb
in
out
jae
stos
inc
addr16
jp
cld
pop
enter
addr16
int3
adc
rorl
and
ja
xchg
stos
add
cmpsl
fisubrl
scas
imul
test
mov
jge
sti
jb
adc
jge
sub
mov
fs
mov
cmp
and
das
into
add
jmp
int3
rorl
add
dec
lock
dec
and
cltd
clc
out
pop
fistpl
ja
or
lock
jge
rorb
or
lret
or
test
or
sbb
mov
stos
cmp
push
sub
dec
dec
mov
or
add
fs
inc
int
and
inc
out
sbbb
push
inc
int
push
popf
jne
xor
sub
aaa
add
lods
push
sbb
imul
cli
aad
mov
mov
pop
cli
dec
xor
sub
adc
ss
sti
shl
jge
fwait
iret
data16
sub
xchg
sub
lds
scas
inc
pop
mov
int3
lret
lcall
call
fwait
sti
sti
push
clc
jns
or
push
xor
insl
add
pop
repnz
dec
test
pop
cmp
js
shrl
mov
push
pop
push
out
daa
into
enter
ss
aaa
sub
add
js
sbb
fwait
into
gs
inc
fimuls
in
stos
add
test
lret
mov
jns
adc
jne
or
mov
adc
cmpsb
lock
shl
jl
test
ret
stos
inc
stos
pop
dec
dec
sbb
fldt
out
xchg
pop
jnp
dec
cmp
mov
xlat
je
enter
std
jne
add
adc
sbb
and
cmc
adc
and
lcall
fs
xchg
scas
stc
popf
orl
inc
fldcw
and
mov
je
scas
movsl
lret
cli
insl
stc
sahf
sbb
mov
inc
flds
and
aam
jbe
cmp
pop
pop
repnz
jb
stos
mov
insb
lods
inc
sahf
adc
out
loopne
leave
adc
ljmp
jbe
lahf
cmpsl
outsb
shrl
jp
inc
lods
lods
mov
mov
add
outsl
xor
testb
adc
hlt
inc
push
fcomps
test
mov
xlat
jl
push
clc
sbbl
shl
mov
dec
xchg
sub
outsl
push
imul
or
push
jb
inc
mov
enter
inc
fldl
mov
scas
inc
testb
gs
pop
repz
test
fs
mov
addb
dec
loopne
enter
andl
sbb
dec
fcom
push
jle
lods
scas
add
xor
xor
add
pop
andl
push
mov
push
in
mov
jo
xor
insl
imul
stos
lret
push
mov
xor
sbb
fnstenv
cmp
shrl
pop
push
in
add
or
adc
pop
scas
cs
inc
fidivs
shll
add
scas
inc
push
and
addr16
add
xor
insb
add
out
adc
push
add
xor
in
add
and
test
lcall
push
add
push
call
push
clc
aaa
into
sub
movsb
cmp
test
and
ss
stc
outsl
push
sub
movsb
cmp
inc
fsubl
add
addr16
ret
pop
dec
out
lcall
push
in
test
sbb
aam
fsubrs
std
ss
stos
inc
and
incb
gs
sub
xchg
sub
rcr
std
xchg
or
push
mov
addb
inc
xlat
aad
xor
stc
push
out
and
push
mov
je
sub
ret
es
in
rclb
scas
inc
push
cmp
jae
jb
arpl
jb
stc
mov
jno
inc
movsb
int3
arpl
js
jne
and
aam
scas
int3
lods
inc
add
pop
scas
adc
inc
jle
stos
scas
ror
bound
jg
das
scas
adc
int
jle
adc
add
add
jl
das
mov
pop
or
aaa
xchg
and
mov
addr16
xchg
sub
cmpl
lret
cli
lcallw
and
stc
mov
outsl
jle
sahf
adc
scas
inc
rcr
in
push
push
cmpsb
cmp
push
xchg
shlb
mov
fisttps
mov
push
stc
pop
dec
fisttps
pushf
adcb
mov
imul
in
jge
mov
xor
movsb
scas
inc
fnstcw
ds
push
pusha
testl
out
test
xor
xchg
je
les
adcb
cwtl
insb
add
lahf
mov
xchg
sahf
mov
iret
popf
pop
out
iret
pop
cmp
mov
jne
popf
pushf
xor
pushf
sub
jl
cmp
jnp
test
fsubs
jnp
dec
cld
xchg
andl
fidivs
pop
push
jmp
stos
call
das
int3
dec
and
sbbb
xchg
mov
int
or
sbbl
sti
ret
sbbb
andl
adc
mov
pop
mov
insl
aam
mov
jno
mov
push
lds
xchg
add
jns
pop
lods
push
xchg
sub
xchg
in
movb
dec
xchg
sbb
lds
push
mov
je
leave
test
loop
mov
jne
int
xchg
adc
fwait
dec
ret
xchg
sahf
xor
jecxz
loopne
jge
movsb
cmp
scas
inc
loop
add
pop
sub
lods
pusha
shll
mov
jecxz
fbstp
cs
rcrl
add
jmp
pop
adc
inc
cmp
jo
xor
into
ret
mov
cli
loop
jae
sbb
sbb
cmp
jo
xchg
test
f2xm1
sbb
inc
push
cmp
insb
dec
in
orl
stc
nop
xchg
dec
mov
scas
call
dec
gs
mov
lcall
inc
fcoms
nop
or
cs
mov
mov
mov
ret
pop
push
rcrl
or
rclb
cltd
xor
inc
fiaddl
pushf
push
out
rorb
mov
dec
adc
sbb
movsb
jne
push
jnp
int
jge
shrl
sahf
jmp
iret
inc
in
jbe
and
fistpl
adc
mov
ljmp
lds
leave
cmp
ljmp
add
cmp
add
xchg
mov
ret
repz
pop
push
out
mov
push
popf
or
mov
dec
mov
or
lds
sub
pop
loop
pop
jle
push
lods
xor
fisubs
lea
xchg
data16
loopne
dec
xlat
xchg
sub
daa
out
xchg
lcall
push
mov
push
adc
sub
dec
mov
ss
loop
mov
ret
repnz
pop
dec
loope
push
cmp
loopne
lcall
jle
push
mov
test
shrl
movsl
out
push
xlat
pop
add
and
sahf
xor
jae
ljmp
dec
int3
jecxz
in
adc
lds
push
test
shlb
mov
ja
sub
adc
gs
inc
mov
add
hlt
or
jle
jbe
movsb
cmpsl
cmp
sbb
cli
cmc
mov
fistl
sbb
ss
arpl
sbb
jo
adc
dec
inc
fistpl
adc
sbb
mov
inc
fidivrl
fidivrl
dec
cwtl
add
xor
mov
sub
pop
scas
pop
out
test
cmp
cmp
mov
and
ljmp
insb
push
xor
ss
shr
mov
and
dec
in
add
xor
scas
inc
push
mov
lea
xchg
xchg
pusha
sub
mov
ja
test
lret
xchg
jmp
dec
mov
jo
mov
lds
jmp
int3
dec
fs
in
dec
aad
cld
mov
mov
aaa
fsub
repnz
loope
sti
jle
iret
popa
adc
pop
into
dec
and
mov
jmp
jns
pusha
fdiv
xor
and
mov
scas
call
xchg
movsl
adc
movsl
hlt
jge
mov
pop
mov
mov
dec
loop
cli
pop
into
lock
sub
arpl
cli
inc
jns
arpl
insl
mov
and
in
sub
xor
cmp
and
dec
push
std
xchg
push
push
sti
inc
nop
movsl
push
pushf
arpl
mov
mov
and
mov
xor
je
in
jl
mov
movsb
pop
lret
mull
repz
sbb
cld
shll
mov
dec
ret
imul
push
inc
mov
rcrb
lcall
sub
popf
xor
fistpl
push
and
insb
xchg
pop
or
inc
adc
cmp
lock
insb
ljmp
rolb
in
adc
enter
mulb
loopne
shll
mov
pop
fstpt
xchg
xlat
divl
xchg
loop
int3
movsb
pop
rolb
icebp
xor
enter
or
rorl
cmpsl
xchg
ret
jnp
add
xor
xor
lock
xchg
dec
xlat
adc
fwait
add
testl
test
push
pushf
out
dec
out
or
xor
adc
inc
push
je
mov
push
scas
inc
loope
cmp
push
inc
das
jno
outsb
mov
xchg
xchg
dec
cwtl
js
movsb
pop
dec
aaa
sbbb
outsb
rcrl
inc
in
gs
repz
add
mov
xchg
pop
loope
push
fistpll
xor
in
sub
leave
push
dec
or
call
insb
lock
out
inc
aam
mov
lret
push
and
push
or
or
pop
aaa
scas
imul
dec
mov
in
inc
dec
pusha
sbb
push
ds
rcrb
icebp
cli
es
fwait
or
inc
mov
jns
adcl
push
inc
sbb
nop
std
es
hlt
push
lret
dec
fistl
les
cmc
ss
into
stos
in
outsl
mov
xor
mov
movsb
cmp
adc
stc
and
mov
test
adc
sbb
xchg
mov
sti
xchg
mov
jne
mov
loope
iret
sti
jle
jne
add
cmp
rolb
fisubrl
in
sahf
sti
cmpsb
pop
shll
dec
test
movsl
outsb
fcoms
mov
inc
mov
mov
bound
pusha
imul
xor
xchg
lea
or
and
dec
fwait
mov
or
mov
pop
jns
sbb
into
xchg
jnp
cmp
jne
test
cmpl
stos
xchg
pop
add
xor
mov
out
inc
mov
lods
jbe
in
dec
xchg
std
xor
sbb
ja
xlat
cli
xchg
jle
cltd
xchg
fidivrl
pop
jno
popa
fwait
mov
ficoms
fldl
mov
aam
enter
lock
xor
sbb
and
cmp
out
xor
inc
pushf
adcl
pop
xchg
xor
jnp
mov
mov
lcall
arpl
mov
es
lods
rorb
adc
rolb
popf
les
fsts
sbbl
lock
in
cmp
test
dec
sbb
flds
lahf
stos
inc
shll
popa
push
hlt
mov
int
pushf
mov
sbb
lea
and
xchg
pop
sarb
ljmp
rcl
mov
xor
xchg
xchg
mov
push
push
push
push
push
jmp
inc
rorb
movsl
pop
push
mov
bound
mov
sahf
sub
sbb
xchg
sub
jge
out
nop
cmp
xor
jl
mov
mov
movsl
ja
das
inc
or
inc
shll
mov
or
jl
pusha
dec
or
push
orb
xor
roll
push
arpl
rorl
and
mov
or
pop
mov
pop
rcrl
ds
pop
or
jo
push
inc
add
push
xchg
dec
mov
jno,pt
enter
or
or
pop
cmp
popf
pushf
dec
sbb
aas
shlb
pop
loopne
mov
mov
cli
pop
in
sbb
fs
sti
movsl
orb
mov
or
aad
lcall
movsb
test
mov
ss
dec
mov
leave
push
adc
sarb
xchg
pop
leave
inc
rclb
int
fsubs
ret
inc
jnp
rorl
cmp
imul
xchg
sub
push
push
adc
into
repz
rolb
mull
ljmp
mov
and
or
dec
mov
fcoms
dec
jno
sub
pop
ret
in
inc
cmp
repnz
adcl
out
xor
repz
pop
in
arpl
mov
lock
shll
mov
ja
push
jmp
pusha
and
dec
gs
jnp
imul
dec
clc
int3
jg
fisubrl
inc
ret
ret
hlt
movsl
sarb
fdivrs
out
xor
ljmp
fdivr
or
mov
or
jnp
ret
cwtl
xchg
jecxz
mov
xchg
dec
lcall
sbbb
int3
sub
jmp
fcoml
mov
popf
adc
in
orb
ret
xchg
pop
fdivs
add
sub
ret
inc
sarl
push
mov
andb
xchg
xor
jae
pop
insl
pop
into
pop
jg
dec
push
aas
inc
rolb
sub
ret
xor
test
in
pop
iret
mov
add
repnz
pop
and
adc
aaa
into
dec
xor
xor
bswap
dec
cwtl
cmp
sahf
jae
mov
ficomps
mov
aaa
enter
cmp
jnp
arpl
push
dec
pop
movsl
addr16
test
xor
test
adc
sbb
and
imul
std
and
lock
rol
pop
sub
test
push
adcb
and
lods
push
and
fwait
cwtl
pushw
inc
add
shll
jo
and
sub
inc
pop
aam
lcall
pop
lods
sub
loopne
lock
out
mov
cmp
ds
in
in
pop
fnsave
repnz
mov
sub
fsts
xor
scas
addl
push
and
mov
loope
lret
ror
push
out
lds
pop
fisubrs
in
xor
addb
xchg
out
jge
jmp
mov
hlt
iret
mov
mov
pop
std
test
sahf
mov
and
jge
outsb
cmp
mov
mull
outsb
push
adc
mov
push
ret
daa
ds
stos
mov
dec
xchg
push
sub
addr16
leave
inc
mov
xor
mov
les
loop
mov
mov
sub
outsb
movsb
pop
xor
jle
inc
push
cmc
inc
jge
mov
xor
xchg
mov
stos
jno
add
jbe
xchg
das
sub
fsubl
bnd
sbb
inc
cmpb
imul
xchg
cmpsl
leave
jmp
test
ret
fmuls
push
cmpsb
out
sbb
stc
lea
push
sbb
xor
mov
pop
inc
leave
mov
ficoms
jo
push
test
inc
mov
shl
es
iret
lea
and
cmpsl
mov
icebp
or
fwait
pop
adc
dec
mov
xor
and
jnp
and
sbb
nop
jbe
xchg
enter
fwait
xor
inc
mov
sub
sub
test
pop
and
jge
les
sahf
inc
test
and
pushf
or
cs
mov
mov
movsl
out
xchg
repnz
les
loope
inc
fmull
into
sbb
mov
jmp
cs
inc
mov
sbb
mov
mov
mull
lods
in
ljmp
icebp
mov
push
adc
test
dec
les
cld
inc
dec
dec
rcrb
sbb
fsubl
mov
aam
xor
pop
push
fstpl
add
fdivl
mov
stc
in
rclb
outsl
iret
popl
in
sbb
lea
or
jl
cvtpi2ps
xor
lods
outsb
jecxz
pop
rolb
xor
loopne
test
stos
fcoms
inc
lds
mov
xor
pop
cmp
xor
in
fcoml
push
decl
adc
mov
bnd
cmpsl
pop
in
xchg
mov
std
or
test
cmp
and
xchg
insl
lods
gs
dec
lock
xchg
rorb
xchg
insb
icebp
sbb
iret
es
aad
into
cmp
adc
push
lods
hlt
std
xchg
pop
iret
mov
in
lea
pop
stc
inc
dec
pop
mov
xchg
push
push
sbb
pop
dec
cmc
cmp
dec
out
push
fsubrs
in
lahf
out
sbb
inc
mov
adc
sub
push
mov
in
ss
lcallw
jecxz
jle
sub
push
fwait
cmp
movsl
pushf
pop
and
insb
adc
xor
push
repz
leave
in
out
xlat
inc
mov
inc
rorb
int3
inc
inc
adc
mov
or
jno
sahf
xor
lods
jbe
ja
add
es
jecxz
call
imul
mov
out
mov
imul
nop
mov
lahf
xor
imul
dec
mov
ss
pop
fcompl
add
push
dec
mov
pop
inc
ds
outsl
or
xor
jl
mov
in
dec
loope
aas
popf
test
push
lods
in
and
mov
mov
out
out
sbb
add
aam
repz
dec
mov
mov
inc
mov
or
inc
mov
pop
mov
jae
or
roll
pop
shrl
mov
dec
popl
pop
pop
xchg
xchg
bound
sbb
adc
jne
add
jns
or
cmp
lea
flds
lods
sbb
aaa
popf
orl
sub
sbb
pop
push
stc
cmpsl
ret
jmp
orb
int3
outsl
xchg
leave
mov
sub
dec
mov
lahf
or
mov
ja
shrb
jle
mov
or
add
inc
lods
inc
je
add
into
fildl
lret
insl
push
call
les
ret
dec
rcr
jg
out
dec
mov
cmc
insb
inc
fwait
cmp
or
push
jb
addb
xchg
pop
inc
jl
inc
jnp
xchg
cmp
xchg
xchg
mov
pop
mov
xchg
jle
mov
xchg
popf
push
aad
hlt
nop
mov
push
jge
cmpsb
mov
daa
stc
ret
fwait
mov
fisttps
lock
in
adcl
in
push
incl
jae
insl
clc
and
mov
fldl
inc
jne
gs
cmp
xor
test
popa
jb
inc
lret
inc
mov
je
push
sbb
ds
aam
adc
aam
daa
cmc
arpl
adc
out
daa
inc
into
xchg
adc
dec
xchg
push
aas
in
push
mov
cmp
test
jnp
add
push
xchg
lea
pop
xchg
rol
arpl
out
popa
movsl
sub
jmp
mov
mov
fdivs
clc
xor
into
xchg
jbe
sbb
enter
mov
push
test
mov
sbb
adc
out
lea
scas
adc
inc
ret
mov
pop
mov
fisubl
inc
fisubrl
in
or
add
sub
jecxz
mov
jmp
jno
jmp
jl
subb
fbstp
dec
int
popa
jmp
xchg
lea
lcall
push
cli
inc
lods
test
push
add
cmp
mov
or
push
xor
pusha
stos
jp
lret
dec
arpl
shlb
jnp
sub
sarl
add
sbb
sbb
out
sub
sbb
or
and
xor
push
stos
cmpsl
mov
jg
ret
lea
fcoms
arpl
dec
mov
insb
add
cs
js
aam
or
xchg
mov
adc
lods
fwait
jp
por
nop
pusha
push
int3
inc
add
cmc
ljmp
sub
in
rorl
dec
cmp
jns
ret
popf
pop
into
cli
xchg
mov
es
pop
mov
imul
mov
int3
out
popf
xor
stos
inc
leave
sbb
xor
and
or
xor
clc
cs
jmp
enter
in
in
xchg
inc
sbb
push
popf
mov
fisttpll
adc
test
inc
cmc
xchg
mov
push
ljmp
outsl
outsl
fcoml
inc
push
cwtd
xor
js
aaa
ds
out
and
sub
lock
xor
dec
nop
jne
xchg
insl
mov
imull
pushl
add
test
popf
cmpsb
fimuls
jno
popf
push
cwtl
mov
lret
shlb
sub
int3
cmpsb
and
loopne
lods
or
mov
ljmp
mov
cld
loop
mov
or
push
data16
or
add
push
lahf
push
fdivl
jmp
into
inc
bound
fs
movsl
lods
inc
and
sahf
xchg
cmp
int3
dec
je
mov
pop
jae
mov
push
xor
xorb
into
add
mov
and
je
in
dec
stos
jae
sbb
and
dec
ds
test
and
sarb
imul
les
sub
stos
pop
test
xchg
sub
insl
add
cmp
inc
lret
mov
jmp
mov
daa
mov
cwtl
insl
mov
mov
dec
loopne
fcoml
ljmp
popf
sub
lret
out
insl
call
mov
dec
lds
into
xchg
pop
out
gs
and
push
icebp
sbb
sub
in
xchg
sti
xchg
bound
dec
mov
adc
popf
pop
idiv
cltd
jnp
push
mov
je
sbb
stc
xor
mov
push
ficoms
xor
or
or
and
fadds
repnz
mov
mov
flds
icebp
cmp
shr
imul
inc
lods
pop
aaa
insl
sbb
dec
pusha
lock
inc
pop
dec
popa
lds
aas
cltd
mov
scas
addr16
sbb
push
shlb
cmp
clc
test
mov
inc
cmpsb
cltd
std
movsb
xchg
sbb
fwait
lods
outsl
push
fsubrp
cmp
out
add
stc
sbb
pop
jge
out
cmp
push
fisttpl
sbb
lods
mov
pop
leave
lret
arpl
inc
dec
scas
xor
lock
leave
inc
xor
adc
outsb
xor
mov
xchg
fisubl
nop
xor
pop
stos
lds
test
xlat
push
in
or
xor
test
lock
enter
push
jmp
or
scas
inc
jns
jmp
nop
ds
jnp
gs
mov
cmp
xchg
rorb
and
cmpl
xlat
cmp
outsl
mov
dec
jns
sub
mov
pop
jae
push
popa
push
mov
imul
add
or
add
dec
adc
push
scas
dec
test
in
mov
rcrb
cmp
std
and
idivb
aas
das
lret
cltd
xor
push
cmp
xchg
push
mulb
mov
pop
lods
inc
xchg
jle
ljmp
inc
hlt
sarb
dec
mov
out
sub
pop
xchg
movsl
test
sub
sub
push
ss
js
cmp
cltd
xchg
notb
dec
mov
mov
inc
rclb
adc
jg
fwait
mov
cmp
mov
testb
popa
lret
push
xor
jns
lea
aaa
test
leave
mov
mov
loopne
lods
jne
icebp
sub
add
xchg
jl
push
in
imul
je
cmc
std
xchg
daa
ss
cmpsb
dec
push
adc
mov
cwtl
dec
ja
mov
ss
pop
mov
cwtl
addr16
inc
xchg
sbbl
sbb
push
pop
icebp
pushf
xchg
rcll
test
lds
std
sub
scas
xor
shl
scas
jg
movsb
es
les
add
int3
scas
jb
lcall
and
rolb
push
ljmp
inc
fstpt
pop
pusha
fwait
push
dec
mov
inc
icebp
data16
xlat
addr16
push
inc
movsl
adc
repz
sarl
aas
jecxz
pusha
aad
movsb
repnz
in
ret
cmp
sub
push
xchg
jge
xchg
insl
adc
sub
cmp
sub
jp
add
mov
fs
mov
xchg
gs
inc
fmulp
xor
xchg
ljmp
ret
sbb
aad
int
sbb
sbb
into
pop
inc
mov
cmc
sub
leave
inc
pop
call
cltd
addr16
daa
aaa
push
inc
pushf
inc
test
sub
dec
ja
pusha
jg
aaa
pop
orl
jl
lds
and
jnp
fcoms
cmpsb
pop
mov
jecxz
imul
sti
xor
out
data16
inc
lods
cmpsb
pop
testl
cs
pop
fistl
mov
js
jl
aas
inc
gs
push
negl
push
insb
xchg
jp
pop
push
call
push
das
negl
jb
js
push
inc
add
popf
adc
jbe
testb
ret
out
sbb
cmpsl
cs
test
imul
fdivs
push
mov
add
pop
lcall
nop
jnp
mov
cmp
aam
stos
jno
mov
cmp
stos
imul
xchg
addr16
outsb
frstor
fidivrl
gs
in
xor
pop
ret
mov
lods
push
scas
lds
jl
ret
xor
push
mov
shll
call
rcr
sbb
xor
jmp
pop
dec
roll
push
ds
adc
push
adc
push
in
pop
jle
push
mov
xchg
push
out
cmpsl
sarb
add
xchg
out
and
lods
sub
fstl
fmull
nop
ret
in
mov
mov
sbb
mov
add
imul
outsl
push
movsl
fbld
mov
into
mov
mov
popa
push
iret
pop
pop
dec
mov
aas
or
lods
xchg
push
cmpsl
xor
dec
in
push
loop,pn
xorb
push
pop
pop
cli
test
adc
inc
es
jge
jl
subb
push
xchg
or
lcall
pop
lahf
lahf
movsb
jmp
sbb
movsl
cli
xor
and
inc
inc
addr16
cmp
push
imul
mov
and
clc
pop
jmp
inc
rclb
push
call
or
in
mov
sub
gs
adc
test
nop
mov
js
jl
test
pushf
orl
sub
into
push
mov
cld
cmp
mov
fmul
mov
sbb
push
and
lods
ss
mov
repnz
jns
jno
negl
xor
or
stc
popf
xor
sbb
ja
movsb
jl
pop
sbb
movsb
xorl
cmp
pop
push
mov
out
push
rorl
scas
or
mov
mov
add
imul
out
addr16
mov
inc
jnp
mov
xchg
xor
and
out
pop
mov
testb
pop
pop
lock
xlat
xchg
mov
jne
outsl
aaa
mov
add
addr16
xchg
enter
lock
push
mov
aas
popf
aas
mov
xchg
rorb
add
repz
or
mov
test
mov
lods
inc
jno
dec
iret
jno
lock
je
popa
mov
xor
pop
dec
insl
jp
cmp
adc
lcall
xorb
xor
shl
gs
repnz
push
mov
cmp
inc
xor
stc
mov
or
jns
and
iret
cs
mov
lock
mov
aas
test
loop
mov
stc
pushf
mov
in
loop
movsl
jne
and
pop
mov
stos
dec
pop
out
jnp
into
aaa
loope
push
stc
and
sbb
aas
mov
and
call
cmp
dec
mov
sbb
fs
lcall
cmp
loopne
xor
jl
inc
mov
sub
pop
add
pop
hlt
arpl
and
int3
test
xlat
cltd
xor
and
pop
push
sub
jl
jge
insb
scas
movb
not
repz
sbb
mov
push
imul
jne
cmpsb
mov
dec
in
adc
sbb
bound
and
mov
fsubrs
adc
pop
inc
pop
testb
lock
loope
arpl
push
mov
mov
sbb
xchg
mov
sbbl
scas
sbb
lods
add
mov
mov
loopne
pop
adc
mov
pop
xor
ja
cmp
push
xchg
lods
stos
xchg
mov
xor
test
leave
jns
push
out
lcall
ds
insl
add
pop
movsb
cmp
mov
cltd
jecxz
pop
lock
clc
and
or
push
movsl
jne
mov
rclb
shlb
jmp
out
test
cmp
or
xor
jnp
cli
push
push
sbbl
jno
lcall
cwtl
in
cmpsb
jge
es
in
push
xor
fwait
gs
lret
test
push
jmp
cli
sbb
cmp
push
jmp
pop
dec
popw
ja
push
push
pop
sbb
fincstp
call
popa
mov
pop
jb
mov
sub
dec
xor
out
flds
cmp
mov
or
xor
mov
sub
stos
mov
or
mov
push
jecxz
insb
mov
inc
jae
addr16
adc
or
jb
pop
dec
mov
push
xor
scas
pop
lods
push
out
fwait
push
push
test
hlt
addl
jno
test
dec
jnp
fldcw
sti
gs
shlb
sub
cwtl
xchg
jbe
cs
pusha
xchg
cltd
fdivr
pop
nop
sbbl
mov
sub
loopne
dec
xchg
pusha
dec
dec
and
push
cli
test
cmp
sub
adc
pop
scas
add
push
adc
adc
sbb
pusha
stos
cmp
push
mov
stc
xor
fistps
test
daa
xor
pusha
mov
push
xor
jbe
leave
pop
sub
xor
xor
cmp
lods
push
and
je
movsl
jb
arpl
ret
add
jecxz
cmpsb
fisubs
fiadds
jb
or
cli
imul
jbe
push
add
adc
adc
ret
data16
inc
add
ljmp
dec
popf
pop
xor
repnz
jle
mov
dec
mov
rcrl
push
sub
daa
push
loopne
scas
xchg
aas
insl
xchg
fcom
test
sub
shrb
mov
cmp
inc
inc
cltd
mov
cmp
int3
mov
shlb
pop
or
lods
sub
ds
push
push
fldcw
notl
ret
clc
js
jle
xor
outsl
mov
int3
hlt
jecxz
fmuls
xchg
push
sti
ljmp
cltd
mov
mov
aas
mov
fdivs
hlt
mov
and
and
cwtl
popf
pop
pushf
mov
imul
xor
mov
leave
sbb
sbb
push
inc
scas
and
or
daa
xor
out
and
push
or
sbbl
add
mov
jp
imul
fs
xchg
das
loop
popa
mov
push
lock
inc
pop
jg
aad
std
lods
inc
out
sub
arpl
pop
jae
jns
rcrl
push
popf
mov
mov
in
mov
pop
testl
loopne
ret
orl
mov
xchg
std
xchg
add
cmpsb
add
adc
es
mov
pop
and
inc
push
add
dec
pop
fnsave
fidivl
push
daa
mov
dec
pop
jmp
inc
inc
dec
jmp
inc
pop
xor
dec
pusha
cmc
mov
ret
jae
stos
movsb
test
ja
aad
enter
popa
mov
mov
lds
dec
sti
xchg
jg
push
jmp
mov
outsb
ljmp
sbb
rep
and
xchg
in
je
push
lock
insb
lock
into
mov
adc
inc
in
adc
out
hlt
outsb
call
outsl
addr16
in
jno
into
repz
or
stos
inc
inc
xor
mov
jne
xor
int
inc
and
shll
xor
push
lcall
push
jmp
cli
and
movsl
enter
mov
mov
out
or
mov
aam
test
je
lahf
cltd
pop
inc
or
mov
aad
xchg
cmp
xchg
cmpsb
cs
clc
pusha
xchg
xor
movsl
lds
test
mov
sahf
inc
push
jl
xchg
xchg
push
xor
stos
sarl
daa
ds
mov
sbb
mov
xchg
mov
lods
mov
cltd
movsb
shrb
mov
jge
mov
adc
cmc
dec
xor
cmpsb
or
xor
insl
cmpsb
push
std
sti
jg
xor
adc
out
mov
pushf
idivb
dec
jo
icebp
fstpl
popf
inc
and
xor
xchg
pusha
repnz
pcmpeqd
mov
inc
jo
out
pop
xchg
dec
adc
sub
call
mov
std
outsb
icebp
orb
sbb
xlat
int3
dec
repz
test
xchg
ds
scas
rorl
repnz
gs
pushf
sbb
and
or
mov
cmp
add
xor
jge
mov
xchg
cmp
mov
push
stc
pop
enter
xchg
je
out
push
and
out
jno
mov
lods
inc
push
add
push
cli
push
adc
lock
mov
repz
jno
cmp
rorl
push
adc
cmpsl
outsb
and
lds
pushf
pushf
dec
or
inc
testb
jle
icebp
pusha
mov
mov
jae
sbb
mov
outsl
inc
xchg
inc
jb
pop
std
popf
insb
xchg
push
lahf
push
cmp
stc
cltd
mov
sbb
sub
out
sbb
add
xchg
and
push
mov
loop
fwait
les
popa
ret
and
mov
pop
les
in
xchg
sarl
jg
lahf
or
lahf
movb
jecxz
or
jae
das
lods
lahf
push
jg
mov
movsl
pop
pop
not
rcrb
inc
or
nop
and
add
imul
dec
or
aam
daa
ret
adc
repz
mov
test
jg
jae
sbb
jle
mov
mov
orl
xchg
sub
repnz
lods
gs
cmp
shlb
sub
cmp
jns
nop
daa
arpl
aam
daa
mov
or
aad
xlat
mov
xchg
add
aam
lret
dec
in
cmp
xchg
icebp
fs
xor
gs
pop
mov
nop
push
sub
xchg
into
add
mov
cmpsl
es
push
imul
lahf
mov
mov
cltd
mov
or
outsb
and
std
div
arpl
sub
scas
outsl
dec
insl
ljmp
dec
or
stos
int
add
push
cmp
ljmp
in
push
repz
js
dec
or
push
dec
or
repnz
aaa
pop
insl
jmp
jo
insb
ljmp
dec
or
mov
mov
jno
inc
aaa
pop
insl
jmp
lock
in
push
icebp
xchg
inc
ja
dec
or
push
push
lock
icebp
adc
ss
insl
add
sub
pop
pop
or
and
jge
adc
mov
push
lret
cmp
sbb
imul
jecxz
push
lahf
cwtl
cmp
lea
ret
sbb
and
popf
cmp
out
imul
pop
xchg
aas
push
pushf
cltd
cmp
mov
inc
lahf
das
test
pushf
cmp
jmp
clc
push
enter
pop
cltd
push
imul
call
test
sbb
sbb
xor
jmp
testl
fcompl
out
inc
xchg
cs
fwait
cmp
shl
repnz
repnz
cltd
dec
jecxz
shlb
mov
jge
dec
scas
push
mov
sub
ds
clc
jae
sub
sub
lods
xor
test
pop
cmpsb
mov
mov
xor
inc
or
movsl
sub
cmpsb
cs
cwtl
inc
addb
pop
shrb
mov
lahf
sub
dec
movsl
stos
push
xchg
mov
mov
pop
int3
jecxz
bound
hlt
pop
lahf
mov
add
and
adc
mov
mov
jmp
xor
hlt
pop
add
lret
push
orb
ret
dec
adc
iret
fidivrl
adc
adc
xchg
add
sbb
adc
out
pop
pushf
pusha
ljmp
cmc
pop
adc
orb
mov
mov
mov
push
pop
scas
pop
nop
cmp
xchg
cmp
scas
adc
cmp
jbe
stos
xor
xor
sub
lret
mov
sub
cmp
cmp
ret
out
push
shlb
and
aas
mov
stos
sub
scas
mov
mov
sti
cli
xlat
mov
lret
cmp
cmpsl
mov
inc
stos
mov
mov
mov
ss
mov
pop
mov
mov
lret
mov
mov
loopne
push
sarb
aas
xor
xor
test
loopne
push
je
enter
pop
test
in
ret
aaa
mov
inc
setb
push
jno
xchg
inc
fisubrs
mov
gs
mov
adc
push
shrl
sarb
jae
xchg
sub
ret
test
jne
mov
and
leave
out
inc
or
sbb
mov
jmp
imul
jno
loopne
xor
push
mov
jecxz
xor
lahf
pop
dec
or
lds
fidivl
addr16
xor
sbb
stos
sub
scas
sub
je
out
pop
xchg
or
adc
pushf
or
push
out
push
lcall
mov
stc
xor
sti
pop
clc
addl
and
add
iret
cmp
lods
in
adc
mov
xchg
push
mov
ror
adc
pop
inc
adc
shll
mov
mov
fnstcw
xor
mov
cltd
rcll
jmp
testl
cli
inc
jne
mul
mov
mov
cmpsl
insl
dec
mov
popf
fwait
fs
shrl
insb
pushf
inc
cmpb
fldcw
rcrb
lds
mov
push
outsl
hlt
jnp
push
or
negb
lret
pop
add
mov
mov
movsb
adc
mov
lods
adc
sub
js
sub
mov
subb
adc
inc
sbb
into
cld
sahf
pop
repz
cmp
dec
or
jg
jbe
inc
xchg
add
xchg
mov
cwtl
das
add
push
mov
and
popa
cmp
mov
sub
in
arpl
pop
outsb
push
notl
inc
mov
jp
into
jb
add
lods
push
or
cwtl
mov
pop
mov
mov
hlt
arpl
movsb
fldenv
leave
inc
add
dec
cltd
test
add
push
ljmp
popa
out
out
addr16
addl
in
and
mov
and
cmp
rorb
jnp
add
and
sub
xchg
lock
test
lods
xor
cwtl
jg
jo
jmp
cs
rorb
gs
addb
dec
mov
out
sahf
jp
dec
sti
negb
fwait
out
jno
insl
or
mov
scas
stos
xor
iret
pop
add
out
cmp
mov
pop
add
pop
push
dec
mov
ret
sahf
movsl
sub
push
imul
inc
add
jo
and
fcomps
inc
mov
fistpll
mov
test
ror
mov
gs
inc
mov
mov
and
adc
xchg
inc
mov
ja
popa
mov
sub
int3
loop
jb
mov
cmpsb
sub
push
xchg
push
sub
pop
clc
addr16
xor
imul
sub
cltd
ret
mov
and
jg
add
adcb
push
fists
daa
cmpsl
mov
mov
shrl
arpl
inc
fsubr
orl
pusha
push
mov
push
fidivrs
mov
add
sbb
cs
pop
xor
fstpl
insb
and
aaa
cmpsl
sub
cld
pop
mov
mov
loope
stos
jecxz
cmp
sbb
push
das
and
inc
xchg
addr16
rol
movsl
sub
or
imul
bswap
adc
fs
cltd
aaa
inc
jo
jae
mov
aaa
movsb
xchg
mov
dec
or
mov
enter
loopne
das
stos
loopne
sti
pop
arpl
icebp
fs
adcb
pushf
mov
int
sarl
lret
dec
fwait
sbb
inc
loopne
xorl
icebp
std
outsl
rcll
popf
popf
xor
in
jae
icebp
aaa
popf
flds
add
or
adc
sti
popf
xchg
sbb
sub
test
or
cmp
pop
or
mov
xchg
lahf
test
pop
int
and
shr
mov
adc
pusha
icebp
jns
movsl
cmp
insl
and
insl
jg
adcl
pushf
pop
stc
loop
inc
adc
cli
push
mov
out
sub
int3
out
lock
inc
inc
xchg
jbe
je
cli
xchg
mov
jmp
stos
inc
jae
mov
cwtl
and
adc
sbb
cmp
je
insl
adc
pop
nop
jp
out
lds
push
xchg
orb
in
jno
pop
out
outsl
mull
jl
es
add
xor
and
and
inc
push
xchg
sub
and
cmp
adc
push
xor
xchg
ljmp
push
mov
mov
rclb
pop
mov
pop
fidivs
pop
insl
hlt
xchg
fmulp
nop
fld
pop
int3
sub
icebp
pop
stos
cmp
mov
mov
mov
cmp
les
dec
fld
xchg
xor
xor
or
fistpl
mov
out
std
fadds
lcall
out
in
cmp
mov
andl
lods
aas
movsb
sarb
mov
lahf
cld
outsl
sub
lds
out
imul
and
jne
rorl
push
stc
sbb
fidivrl
cmpsb
dec
or
add
rolb
jnp
mov
hlt
pusha
xor
cmp
pop
mov
pusha
cmc
loop
lret
std
push
add
push
cmc
ss
push
sub
int
mov
fdivrs
xchg
aad
mov
dec
or
sub
mov
out
xor
lea
mov
or
inc
inc
sub
mov
mov
cmp
push
sbb
leave
subl
cmc
dec
cwtl
inc
jg
test
out
insl
out
adc
push
shll
daa
stos
inc
xor
lock
cmpsl
sub
fdivrl
jbe
out
cmpsb
inc
push
iret
jno
push
enter
dec
fsubs
fnstsw
test
pop
inc
into
xor
jno
add
rclb
pop
xchg
jecxz
mov
cltd
mov
popf
ds
ret
imul
jno
and
inc
adc
push
gs
cmc
repnz
add
or
pop
and
int
popf
sub
push
jns
sub
xor
outsb
dec
filds
xor
data16
jb
sub
rolb
xchg
or
ficompl
cmp
mov
ss
jg
mov
lods
orb
cli
gs
or
cmp
fdivr
arpl
pop
add
xor
jno
mov
and
ds
add
pop
call
jmp
or
jno
imul
into
cmpsl
sub
outsb
pop
enter
mov
jae
cmpsb
xchg
ds
mov
mov
lcall
shlb
cs
or
mov
lods
das
sub
mov
fildll
rclb
add
orl
mov
sub
or
in
dec
and
movsb
sub
rolb
int3
xchg
cmp
cmc
adc
xchg
aas
push
scas
push
push
sbb
sti
dec
dec
out
jnp
sbbb
pushf
lods
xor
ret
dec
pop
mov
pushf
jle
dec
sub
jns
dec
push
std
pop
cmc
ret
lea
nop
xchg
inc
sti
cmp
push
and
push
iret
fnop
subb
fidivrl
xor
sbb
sub
stc
xor
xchg
xor
lret
mov
mov
popa
das
adc
in
xor
add
xor
daa
enter
aaa
rorb
lcall
jecxz
mov
fcomi
dec
push
or
xchg
cmp
les
jno
clc
sub
inc
in
jno
mov
lods
cmp
lahf
dec
test
int3
fadds
dec
je
mov
insb
addr16
loopne
sbb
testb
push
mov
cmpsb
pop
push
ljmp
lahf
adc
imul
add
pop
mov
js
add
cltd
jp
adc
ret
out
hlt
hlt
push
add
jmp
in
rcrb
test
or
imul
les
in
nop
cmp
jmp
sub
lds
cmp
pop
test
mov
dec
in
jo
lahf
mov
mov
xor
cmc
pop
out
jg
movsl
sar
jnp
sbb
fistpll
dec
dec
aam
or
adc
push
add
sbb
and
hlt
gs
cmp
inc
jmp
hlt
pop
cli
and
sub
int3
adc
aam
adc
xor
sub
insl
out
addr16
pop
adc
out
or
loope
inc
inc
push
lcall
jge
shr
es
adc
mov
mov
cmp
xchg
xor
mov
scas
adc
repz
cmpsb
pop
out
inc
add
sub
lock
cmp
pop
sti
mov
mull
stos
mov
mov
xor
lcall
roll
insb
pop
ret
icebp
inc
out
jp
lods
xor
outsl
sarb
int
pop
jl
adc
out
stos
jbe
push
sub
jae
push
fwait
ja
out
test
out
icebp
stos
xor
lret
stos
xor
xor
push
jbe
and
jo
push
lds
pusha
out
xor
mov
sub
movsl
xor
lods
mov
sub
outsl
fwait
dec
or
cmc
mov
or
ljmp
jl
ljmp
jg
aam
and
cmp
xchg
jne
test
push
add
cmpsl
inc
push
jo
test
shlb
cmp
sahf
jae
inc
push
sub
sbb
xor
xlat
and
or
mov
test
scas
sub
mov
mov
imul
add
or
lock
xchg
sub
mov
push
pop
mov
add
sub
xchg
jae
xchg
cmp
addr16
xchg
dec
test
pop
bound
push
mov
jmp
imul
push
shrb
push
in
xchg
inc
add
fwait
cmp
jbe
in
popa
repnz
decl
nop
sahf
in
outsb
lcall
sub
test
mov
addr16
shlb
js
mov
shrl
xchg
fwait
adc
mov
outsb
cmc
movsl
lods
xor
out
shlb
outsl
mov
mov
rorl
mov
cmp
clc
into
sub
jmp
dec
outsb
icebp
inc
lock
test
leave
xchg
cmp
ret
insl
repnz
and
sbb
repz
repnz
xchg
out
cmp
and
push
pop
mov
inc
sub
out
fdiv
loopne
and
jne
insb
inc
jle
sarl
xor
xor
mul
push
adc
jl
mov
arpl
ret
xor
push
into
pop
pop
add
sbb
cld
outsb
lock
push
sub
stos
loop
or
jno
pop
jb
adc
es
dec
mov
test
lods
and
and
inc
and
cmc
sahf
bswap
and
imul
insb
fwait
mov
int
cld
xchg
cmpsl
shrb
enter
popa
add
nop
sub
addr16
outsb
les
insb
test
iret
xchg
clc
adc
pop
lret
pusha
in
into
xchg
mov
mov
lret
add
outsb
in
xor
mov
enter
ror
add
int
pop
enter
cltd
xor
mov
xchg
lods
nop
cmp
push
pop
and
lock
sahf
inc
and
ds
pushf
xor
sub
stos
xor
scas
das
scas
popf
sbb
mov
mov
sarb
mov
push
jno
adc
insl
push
xlat
addr16
mov
arpl
pop
std
das
or
or
jo
push
jl
in
mov
es
xchg
cmpl
bound
jge
mov
cs
fs
sub
in
jae
adcb
mov
sub
pop
pop
lret
mov
mov
add
roll
or
stos
mov
sbb
popa
ljmp
stc
bound
sub
shrl
rorl
mov
mov
push
adc
dec
mov
mov
hlt
and
addr16
xor
sub
lcall
test
mov
inc
daa
pop
mov
xor
pop
cmpsb
iret
cmc
pop
mov
lcall
push
scas
xor
filds
aas
les
mov
xchg
insl
lock
xor
jg
mov
sub
jmp
pop
call
ret
push
cmp
inc
movsl
mov
mov
scas
in
outsl
xor
xchg
aaa
shll
mov
or
test
pop
add
xchg
cmp
pop
ja
mov
nop
push
pop
test
xchg
push
repz
adc
xchg
in
fdivrl
int3
lcall
clc
pop
mov
dec
or
mov
cmpsl
test
aaa
pop
clc
adc
mov
dec
mov
data16
ljmp
mov
dec
int3
mov
aad
mov
fs
mov
add
adcb
stos
sub
sbb
into
pop
sub
cmp
imul
add
in
fidivs
pop
push
or
sub
popf
inc
jae
cmp
push
sbb
xchg
incb
pop
add
mov
cmpsb
daa
mov
in
fs
xor
arpl
jmp
pop
test
push
push
sub
icebp
pop
nop
imul
mov
aad
mov
push
sti
es
test
fistpll
popa
scas
inc
xchg
test
jno
int
neg
loopne
xchg
xor
not
adc
mov
stos
movsl
daa
repnz
fldenv
scas
test
rcrb
add
adc
ret
out
outsl
or
pop
or
and
in
push
add
out
les
popf
inc
imul
imul
int
or
pop
pop
pop
xor
repz
pop
add
in
int3
mov
jecxz
mov
xor
or
pop
mov
pop
popa
loopne
and
sar
orb
imul
fstp
popa
dec
adc
or
pop
std
pop
xor
imul
subb
add
sarb
mov
xchg
xlat
popf
cmp
int3
test
add
xorb
mov
movsb
dec
or
gs
add
pop
fdivs
pop
popf
cmp
cmp
sub
ss
add
mov
pop
cld
aam
and
nop
or
in
gs
dec
or
jle
shrb
push
add
int
jl
add
sbbl
lret
mov
rol
daa
dec
adc
mov
lahf
dec
adc
dec
inc
or
pop
or
fdivr
cmc
mov
mov
adc
cmc
sarb
in
jno
scas
insb
repnz
mov
dec
shlb
add
xchg
mulb
loopne
stos
dec
pop
adc
cli
xchg
sbb
adc
dec
scas
sub
mov
cmp
not
inc
adc
in
push
add
inc
adc
fidivrs
or
mov
bound
dec
push
aam
hlt
lahf
and
nop
mov
jmp
sbb
jns
mov
sbb
loopne
xchg
sub
pushf
inc
xchg
cmp
lds
fldenv
imul
xchg
sub
sub
popa
clc
popa
fsubrs
lds
addb
insl
adc
jp
sbb
push
imul
sbb
lods
xchg
cmp
jmp
cmpsl
xchg
cmp
and
pop
clc
xor
pusha
sbb
and
call
pop
add
push
push
clc
lods
sub
sub
int
pop
fmuls
stos
sti
or
mov
mov
or
aad
xor
inc
adc
mov
mov
cmp
mov
jl
cs
push
sub
mov
adc
xor
fwait
std
mov
dec
int
xorl
cmpsb
xor
xor
push
xchg
sub
insb
popa
cmp
dec
jl
pop
sete
rclb
ja
lret
bound
aam
leave
sub
or
mov
mov
xchg
cmp
and
add
loop
jnp
lock
and
jmp
mov
mov
pushf
pop
add
into
loopne
dec
stc
cmp
cli
in
jno
scas
ljmp
mov
mov
lods
mul
pushf
aas
pop
jecxz
decl
scas
adc
jb
adc
test
inc
and
pushl
jne
xor
and
adc
add
jl
pop
mov
test
mov
imul
insb
out
test
jno
adc
pushf
sbb
dec
ret
cmp
sti
lods
push
add
out
mov
iret
int3
fs
std
adc
imul
sbb
data16
xchg
mov
scas
mov
jecxz
jmp
jb
cs
pop
sub
sbb
cmp
jns
and
inc
jae
xchg
xchg
in
jmp
enter
push
ret
cltd
inc
fdivl
out
outsl
out
dec
lsl
xor
lods
pop
xchg
aas
inc
mov
mov
ds
mov
push
in
mov
pop
cld
xchg
xor
cmp
and
mov
jl
xchg
insl
cs
pushfw
inc
loopne
mov
repnz
inc
fwait
jno
sbb
lret
imul
ljmp
stos
stos
orl
sbb
mov
mov
test
repz
test
mov
inc
push
lods
inc
repnz
inc
mov
push
add
scas
rorb
stos
and
xor
loop
nop
and
adcb
dec
or
repnz
add
aas
and
xor
mov
mov
call
jecxz
fdivs
fsts
leave
xlat
jg
jbe
push
test
lds
fnstenv
ja
mov
pop
fiadds
stos
jg
or
stos
outsb
push
std
std
mov
mov
fistpll
in
jno
or
icebp
xchg
jmp
and
decb
clc
arpl
mov
in
sub
ljmp
dec
nop
sub
add
imul
inc
adcb
fdivrs
adc
arpl
add
push
mov
mov
enter
push
hlt
pop
daa
dec
pop
add
flds
mov
mov
mov
adc
jl
pusha
in
adc
push
or
pop
sarb
outsb
out
nop
pop
jbe
cmpsl
lret
ds
sub
hlt
mov
mov
ja
mov
inc
neg
adc
shrl
xor
enter
sti
jmp
bound
rcrl
dec
mov
adc
shll
rcrl
or
push
vandps
aaa
mov
sub
dec
stos
test
xchg
out
mov
imul
fnstsw
cmpsb
data16
icebp
arpl
dec
push
and
cmp
push
xchg
sub
fcos
jne
inc
mov
xchg
mov
adc
leave
xchg
jecxz
xchg
xor
jae
jmp
or
sbb
or
mov
cmp
repz
fsubl
mov
in
fs
repnz
or
sub
mov
loop
jecxz
xchg
std
mov
push
mov
add
dec
or
cli
mov
sub
rclb
sbb
sbb
pop
ljmp
test
aas
jnp
test
scas
sub
inc
xchg
int3
mov
lahf
cmp
fldl
push
movsb
ss
jle
push
sub
in
jbe
xchg
inc
subb
or
jge
xchg
pop
mov
cmp
pop
std
repz
in
sub
lods
cs
xor
fwait
dec
cmp
xlat
div
and
sub
data16
sub
inc
adc
jo
inc
mov
add
insb
sbb
nop
xchg
jno
push
lret
je
sbb
sub
sbb
dec
pop
stc
inc
sub
das
jne
cmpsl
xchg
pop
sti
dec
lret
sbb
xchg
xor
xchg
cmp
mov
mov
insb
lea
mov
or
xor
pop
add
and
pop
adc
mov
xlat
dec
and
inc
addr16
pushf
imul
fiaddl
xchg
xchg
ja
mulb
stc
pop
jo
xlat
add
xchg
inc
dec
sbb
dec
or
push
hlt
push
daa
mov
jmp
test
mov
mov
cmpsb
add
push
add
pop
mov
negb
cwtl
xchg
jmp
dec
push
xchg
lods
inc
adc
jbe
add
loope
pusha
ja
add
mov
adc
out
mov
adc
test
dec
imull
mov
and
int3
or
mov
mov
inc
mov
dec
adc
loopne
movsb
sub
fcomps
decb
ret
in
js
pop
or
mov
push
sub
adc
int3
adc
mov
and
xchg
daa
pop
add
jg
add
insb
sbb
rolb
dec
cmp
dec
cmovno
out
cmp
mov
sub
mov
nop
lret
hlt
jns
out
scas
jo
mov
std
test
in
pop
std
lret
or
xchg
popf
add
mov
movsb
repz
xlat
js
pushf
and
and
movsb
xor
stos
sub
andl
outsb
hlt
daa
mov
jns
mov
addl
fidivrs
mov
das
out
scas
sti
xor
dec
imul
xchg
cmp
jbe,pt
cmp
popa
in
jg
lea
pop
cmp
and
iret
mov
stos
sub
fmul
mov
sbb
pop
lock
mov
xchg
jle
xchg
ds
fcomps
mov
outsb
faddl
push
lahf
inc
xchg
jle
jmp
scas
cmp
jnp
mov
lods
das
cli
xchg
inc
push
inc
out
ss
test
or
insb
mov
add
int3
xchg
jbe
ret
das
inc
sbb
xchg
call
dec
pop
sbb
jae
inc
inc
lar
jge
mov
push
nop
fidivl
repnz
sub
jle
popf
inc
mov
mov
sahf
mov
scas
mov
shr
sahf
je
cmpsl
xor
mov
mov
ret
movsb
mov
rcr
adc
sub
jbe
sahf
xor
rol
and
dec
icebp
arpl
xchg
popf
aaa
sub
mov
cmp
xchg
push
jmp
es
movsl
push
pop
repnz
sbb
adc
xchg
pop
lret
pop
xor
xor
and
ret
aad
mov
in
test
stos
icebp
cli
stos
xor
movsb
mov
dec
adc
filds
icebp
mov
mov
test
fdivl
cmpsl
xchg
shll
xchg
and
dec
dec
or
divb
pop
sbb
xor
sub
jae
cwtl
sub
jl
sub
mov
mov
into
mov
xchg
cmp
stos
pop
add
sub
cmpsb
lods
lcall
cmp
repnz
add
and
sti
xchg
in
jno
rcll
mov
xchg
dec
pop
bound
test
jl
in
sub
add
jle
xchg
xor
aad
loope
fmuls
daa
mov
fwait
pop
and
sahf
jmp
push
stc
mov
in
imul
pop
std
test
adc
test
test
pop
cmpsb
xchg
aaa
repnz
xor
test
loope
mov
test
ds
xchg
mov
cmpsl
jbe
pusha
pop
lea
jnp
arpl
push
xchg
fnstsw
xor
add
cmpsl
jbe
mov
mov
repz
push
int
sahf
cmp
lds
test
push
fwait
cld
pop
mov
mov
adcl
ret
xchg
cli
out
push
jbe
movsl
xchg
adcl
adc
add
and
dec
pop
mov
mov
add
mov
mov
inc
sub
mov
cmp
outsb
lcall
sub
lret
in
std
sbb
je
popa
xchg
ds
clc
push
mov
lret
outsb
ljmp
rolb
jmp
jnp
pop
jmp
xchg
cmp
dec
mov
cmpsb
add
jno
testb
out
mov
inc
ja
pop
out
and
into
gs
in
or
iret
dec
pushf
inc
cs
mov
fnstcw
incl
xchg
pop
movsl
enter
mov
fsubl
mov
inc
mov
cmp
popf
pop
cmp
and
lcall
pop
jge
jmp
fildl
call
hlt
pop
and
fadds
cmp
popf
aaa
sub
pop
add
sti
arpl
pop
adc
inc
pop
add
dec
inc
xor
jg
fadds
int3
lock
xchg
sbb
pop
cmp
sub
arpl
or
pop
jnp
push
mov
sub
sub
and
std
pop
mov
cli
clc
mov
ret
adc
or
nop
repnz
fwait
les
jge
adc
stos
mov
cmp
mov
mov
adc
leave
push
std
push
xchg
jp
sbbb
in
aad
dec
pop
sysenter
lret
inc
sub
imul
jmp
lods
mov
pop
in
adc
cmp
das
push
pop
lods
inc
mov
in
lods
lret
faddp
imul
jmp
and
pop
sahf
subl
popf
movsb
and
pop
lock
adc
jl
dec
popa
clc
jns
add
int3
mov
mov
pop
or
cmp
push
jb
pop
cmc
lea
jl
loopne
testl
push
mov
lret
xlat
outsb
fcmovu
push
call
xor
bound
stos
addb
enter
inc
or
dec
out
sub
pusha
pop
inc
insl
add
jge
jle
cltd
mov
lret
rolb
inc
pop
and
mov
jb
inc
fsubs
pop
idiv
out
lcall
and
lahf
mov
mov
fcompl
or
jnp,pn
pusha
testl
adc
dec
push
or
aad
pop
pop
push
jmp
lods
mov
pop
jecxz
adc
ss
xor
push
push
lods
inc
mov
in
stos
lret
fadd
insb
add
std
jmp
and
pop
sahf
subl
mov
out
hlt
inc
fisubl
inc
popa
clc
ja
add
xchg
cwtl
jg
lret
mov
sbb
ds
testb
adc
in
mov
add
push
mov
lret
fsubrs
fistl
or
testb
dec
adc
jg
lea
mov
stos
inc
push
repz
out
sub
pusha
pop
inc
outsb
add
lods
cwtl
mov
lret
pushf
jmp
inc
sbb
ds
inc
fldenv
pusha
div
in
fwait
adc
and
popf
mov
mov
ficompl
or
fidivl
sub
adc
clc
xchg
jg
xor
sarb
int3
cmp
insl
push
pop
push
ljmp
jno
loope
adc
xor
xor
dec
push
scas
inc
xchg
out
test
arpl
shrl
sti
ljmp
dec
or
lcall
pop
in
repnz
movntq
inc
stc
jne
add
pop
enter
in
sahf
xor
cmp
push
outsb
pop
pusha
testl
loop
adc
pushf
xor
ss
lods
addr16
mov
lret
mov
ficoml
or
testb
dec
adc
jge
mov
iret
shrl
and
lret
inc
outsb
add
lods
xchg
mov
enter
jmp
and
pop
outsb
jb
fisubl
les
cmc
loop
fwait
adc
adcb
xor
mov
pushf
xchg
mov
mov
cmc
or
sub
fs
nop
xchg
jge
xor
sarb
int
and
insl
push
pop
push
jmp
jbe
mov
leave
adc
xor
xor
dec
push
scas
inc
xchg
out
cmpsl
int
fnstcw
jmp
sub
mov
inc
dec
or
cwtl
lahf
daa
mov
jmp
inc
fsubl
or
arpl
je
add
sbb
mov
mov
sbb
mov
testl
loope
nop
adc
pushf
xor
xor
mov
int3
mov
fsts
or
testb
dec
adc
jnp
es
xor
int
lods
inc
add
push
out
es
bound
outsb
add
stos
xchg
mov
int3
pop
sahf
std
out
inc
sbb
es
insb
jno
ret
stc
hlt
loopne
fwait
adc
sbbl
arpl
ss
test
mov
mov
cmc
pop
adc
jae
sub
arpl
xchg
xchg
jnp
xor
into
mov
into
cmp
insl
push
pop
push
in
mov
cmpsb
lods
jae
ffreep
adc
xor
xor
dec
push
mov
test
out
cmpsb
into
fdivrs
in
subl
mov
inc
dec
or
xchg
sahf
sub
jmp
or
jle
inc
fs
jae
add
sbb
mov
mov
sbb
inc
fnstenv
mov
testl
loopne
xchg
adc
pushf
xor
dec
mov
int
mov
push
jmp
cmc
testb
dec
adc
jns
nop
daa
mov
xor
lret
shrl
out
and
outsb
add
stos
xchg
mov
lret
or
pop
push
daa
mov
push
inc
fsubl
ret
repz
unpckhps
mov
lcall
push
in
aam
cmc
add
es
pop
sti
xchg
xchg
jns
xor
int3
mov
iret
cmp
xlat
outsb
push
pop
push
in
mov
mov
adc
xor
xor
dec
push
mov
subl
fwait
movsb
into
gs
mov
in
subl
lea
dec
or
xchg
pushf
sub
call
or
jg
inc
fs
jno
push
popf
mov
and
loopne
mov
fidivl
cmp
clc
test
jg
fcomp
cli
xchg
adc
popf
xor
xor
scas
arpl
push
jg
ss
mov
push
jmp
hlt
testl
js
nop
daa
scas
cltd
xor
lret
inc
add
push
call
push
outsl
push
jo
ljmp
leave
or
push
sbb
mov
imul
jle
shlb
fldl
sbb
and
cwtl
addl
jmp
pop
testb
adc
pusha
sti
xchg
xchg
js
xor
lret
mov
iret
ss
fsubrs
push
push
in
mov
lea
les
cmc
cld
xchg
sub
pop
xor
dec
dec
mov
subl
gs
outsl
push
in
cmc
in
andl
mov
jns
lods
inc
xchg
lcall
out
inc
fstpl
ds
outsl
pop
pop
sahf
lea
and
aaa
adc
ss
stc
test
adcb
fdivr
xchg
push
stc
sahf
xor
popa
dec
mov
int
lahf
fidivl
aam
jmp
repz
and
inc
push
lods
ja
nop
daa
lods
cwtl
xor
leave
int
inc
ljmp
push
cmp
pop
outsb
je
andb
or
adc
sub
insb
inc
fstpl
mov
push
popf
or
sbbl
sub
mov
fnstenv
shll
add
fidivs
and
push
pop
cld
xchg
nop
jbe
xor
leave
mov
shlb
fnstenv
push
push
out
xchg
mov
ret
repz
xchg
sub
mov
jg
push
jmp
sarb
in
test
inc
or
xchg
cwtl
sub
leave
mov
in
inc
ficomps
pop
ljmp
pop
or
shrb
adc
inc
xor
stc
orb
pop
aad
sti
xchg
or
das
sbb
jl
aaa
into
mov
fidivl
rcll
add
clc
and
jae
pop
inc
push
lods
jne
xchg
sub
int3
scas
inc
call
into
gs
cmp
insb
jae
andl
or
adc
sub
dec
xor
popa
imul
xchg
jg
mov
push
popf
or
test
inc
sub
pop
arpl
fldcw
iret
pusha
testl
and
push
pop
std
xchg
je
xor
mov
shll
sbb
jo
push
pop
out
test
mov
rclb
sub
xor
inc
dec
mov
jle
push
jmp
shll
out
test
es
pop
lods
inc
nop
xchg
sub
enter
jecxz
dec
fistps
add
data16
insb
pop
or
mov
loopne
cmp
std
inc
fldt
xor
push
dec
stc
addb
pop
rcr
cld
xchg
or
sahf
xor
pop
dec
mov
iret
mov
fidivl
rclb
add
clc
and
push
lods
jae
xchg
sub
lret
mov
std
out
jmp
push
cmp
push
in
test
or
adc
sub
dec
xor
popa
arpl
fistps
mov
push
popf
or
test
sub
pop
bound
fldcw
pusha
idiv
or
ja
pop
jg
push
pop
xchg
lea
xor
scas
sbb
ffreep
mov
shlb
sbb
jno
push
pop
lock
popf
movsb
ja
mov
xchg
sub
adc
dec
jl
push
ljmp
jno
out
out
xchg
or
movsb
je
scas
inc
mov
int3
arpl
out
loopne
add
xorb
or
mov
fisubs
fsubrl
rcrl
arpl
jle
fbstp
lahf
sbbl
or
lahf
ss
inc
mov
shrb
rclb
add
stc
nop
pop
and
push
inc
pop
scas
jno
xchg
sub
leave
mov
sti
in
ljmp
jno
push
mov
mov
push
push
sub
inc
das
lret
bound
dec
loopne
sub
mov
addr16
jmp
pop
sahf
push
or
and
cmp
mov
pop
in
popa
clc
cld
push
loope
cmp
call
mov
ret
mov
shrb
pop
push
pop
lock
push
aam
pop
scas
out
cmc
xchg
sub
adc
int
dec
mov
jp
push
jmp
fwait
shrl
mov
or
out
out
xchg
or
movsb
jb
scas
inc
lea
int
loopne
dec
loopne
add
xorl
push
mov
mov
push
cli
inc
xor
pop
bound
jge
fbstp
sahf
sbbb
std
xchg
or
mov
mov
inc
mov
shrb
into
push
out
jmp
xchg
sbb
sbb
cmpsb
nop
ss
mov
stc
loop
jmp
sbb
push
data16
out
xchg
rorl
or
sub
inc
sub
dec
loope
sub
mov
push
lahf
add
xchg
cmp
pop
movsl
cmp
ja
fldt
leave
stc
cli
add
jns
sbb
xchg
mov
mov
sarl
sub
fdivl
dec
pop
icebp
jle
cli
xchg
lcall
scas
in
repnz
sub
aas
inc
mov
ja
push
in
xchg
cwtl
shrb
mov
or
jmp
xchg
ds
movsl
outsl
pop
mov
mov
into
gs
dec
loope
add
test
xor
jmp
or
mov
fldenv
sub
gs
jnp
loopne
mov
sbbl
sar
xchg
add
daa
sbb
pop
inc
mov
shrl
lret
pop
out
cld
jmp
ja
push
cmp
mov
jno
sub
mov
into
mov
loopne
in
adc
shrb
xor
fs
popf
test
movsl
out
fsubrs
les
int
pop
arpl
xchg
jle
xorb
or
cmp
daa
mov
mov
fsubl
arpl
clc
add
jp
sbb
cwtl
xchg
sahf
cmpsl
pop
mov
mov
cmp
je
dec
pop
bnd
sti
xchg
cwtl
popf
jns
iret
mov
xchg
and
iret
cmp
pop
push
in
xchg
shrl
mov
or
jmp
xchg
sub
cmp
cmpsb
insl
push
mov
mov
iret
data16
dec
loop
in
test
xor
gs
or
mov
fldenv
fisubs
sub
gs
jns
loope
mov
sbbl
sar
xchg
add
daa
sbb
push
jae
cmp
stos
xchg
fnsave
pop
lock
out
xchg
sbb
js
push
cmp
mov
jno
sub
mov
ficoms
shrl
xor
bound
mov
mov
scas
inc
or
lds
int
pop
arpl
jl
subb
or
cmp
daa
mov
mov
fsubl
arpl
testb
jnp
pop
sbbb
push
add
pushf
cmpsl
and
out
stc
ds
adc
je
dec
pop
repz
sti
xchg
xchg
popf
jp
iret
mov
mov
lock
das
and
cmp
cmp
dec
jne
push
in
lea
je
loopne
repnz
add
cmpsl
insl
push
mov
xchg
iret
data16
dec
jecxz
cld
in
test
xor
gs
or
mov
fldenv
fisubs
inc
gs
ja
loop
mov
sbbl
roll
xchg
add
mov
mov
aas
mov
shrl
lret
sti
in
xchg
pop
sbb
sbb
mov
ret
mov
cmc
fcoml
or
jae,pn
pusha
push
mov
adc
push
adc
movb
fs
bound
xchg
jp
subb
mov
cmp
sub
mov
frstor
ret
fs
hlt
add
jl
adc
add
lcall
push
in
idivl
sub
fidivs
dec
pop
hlt
jp
cld
xchg
xchg
fwait
jnp
int
sbb
and
cmp
cmp
dec
jae
push
out
mov
or
out
mov
add
imul
test
addr16
dec
in
cli
out
test
imul
dec
or
jle
mov
mov
sub
rcl
cmpsl
ds
dec
fbld
sub
pop
pop
inc
data16
jne
jecxz
mov
test
enter
add
mov
mov
cmp
cmp
jne
enter
jecxz
xchg
adc
sbb
mov
shll
or
je
pop
push
xchg
sub
shlb
aas
and
dec
in
js
subl
or
aaa
sbb
test
fisubs
shll
in
xor
sbb
add
cltd
mov
rclb
aas
es
fbstp
inc
pop
hlt
js
std
xchg
xchg
cltd
jnp
lret
mov
mov
in
cltd
xor
pop
cmp
cmp
mov
jno
pop
out
mov
jbe
fucom
repz
call
push
mov
test
shlb
fisttpll
push
stc
out
test
xor
bound
jge
mov
mov
sub
iret
cmpsl
ds
dec
fbld
sub
pop
pop
inc
data16
je
jecxz
scas
xchg
test
rolb
cwtl
add
mov
mov
cmp
push
outsb
jne
aam
fidivs
pop
repnz
loop
xchg
adc
jp
dec
xor
cwtl
das
lahf
xchg
iret
mov
fsts
or
or
repz
mov
mov
add
into
gs
pop
dec
in
ja
subl
or
ss
rorb
inc
mov
ficomps
shlb
std
in
das
adc
andl
mov
jmp
aas
and
inc
pop
hlt
ja
std
xchg
xchg
cwtl
jnp
lret
mov
jmp
xor
ds
jo
pop
out
mov
jbe
fsub
repz
xchg
sub
cmp
test
push
mov
orl
addr16
fmull
or
das
imul
dec
or
jl
mov
mov
sub
into
aad
ds
lock
fbld
sub
pop
pop
inc
data16
jae
jecxz
scas
xchg
test
iret
add
sbb
pop
mov
cmp
push
insl
je
aam
mov
jne
pop
repnz
cld
xchg
adc
jp
dec
xor
mov
insb
cwtl
das
sahf
xchg
iret
mov
mov
icebp
fcoms
or
aad
inc
sub
data16
mov
mov
add
cmp
pop
dec
in
jbe
subl
or
xor
push
test
ficomps
mov
in
adc
andb
xchg
mov
rclb
aas
and
fbstp
inc
pop
hlt
jbe
std
xchg
xchg
xchg
jnp
leave
mov
mov
ljmp
ss
pop
out
mov
jbe
fninit
repz
aaa
adc
orb
addr16
dec
in
imul
test
imul
dec
or
jnp
mov
mov
sub
int
cmpsl
ds
out
dec
fbld
sub
pop
pop
inc
data16
jb
jecxz
lods
xchg
test
cwtl
jmp
mov
mov
cmp
push
imul
movsb
mov
jne
lds
xchg
adc
jnp
dec
xor
mov
imul
mov
mov
lock
push
in
pop
adc
insl
inc
sub
gs
mov
mov
mov
add
xor
mov
mov
cwtl
out
cmp
xorb
xchg
cli
daa
jge
bound
test
pop
test
xor
push
decl
mov
lea
sar
sbb
xchg
push
dec
mov
lret
dec
cmp
mov
int
cmp
dec
arpl
cmp
mov
push
mov
gs
fcmovnu
imull
int3
inc
jg
or
mov
jno
arpl
dec
xchg
sti
xchg
cmpb
mov
daa
sbb
sub
cmp
dec
in
fdivrs
and
in
mov
movsb
mov
inc
movsb
mov
pop
inc
adc
inc
aad
mov
movsb
jnp
test
adc
push
dec
inc
scas
inc
aaa
dec
lods
mov
lock
rorb
jmp
andl
lods
les
in
cmp
push
jecxz
aaa
int3
dec
in
outsb
lods
lahf
cmp
push
add
mov
roll
xchg
pop
cmp
lcall
add
dec
ss
and
scas
add
dec
sub
pushf
shl
repnz
ret
idivb
shlb
sbb
mov
aad
aaa
test
out
mov
sub
out
rcl
add
pusha
int3
sbb
and
and
adc
xchg
call
loop
aaa
or
nop
subl
mov
mov
pop
jnp
xchg
adc
pop
out
sahf
fwait
push
sbb
in
cli
dec
xchg
sbbb
pop
into
inc
adc
pop
fwait
es
repz
arpl
je
test
andb
sbb
jmp
sahf
dec
arpl
stos
cmpb
and
cmp
pop
movsl
mov
inc
inc
adc
test
and
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
call
mov
aam
test
or
bound
mov
cmp
and
xchg
jp
fldcw
loope
push
orb
mov
loope
rcll
adc
aad
adc
outsl
xchg
rorb
insl
inc
insl
xchg
mov
inc
imul
cmp
sbb
or
cmpsb
mov
jnp
loopne
stos
xchg
jns
int3
cmpsl
pop
mov
psubb
push
cmp
or
cld
cmp
dec
ljmp
or
push
adc
addr16
sti
push
ss
andb
sbb
outsl
xor
aam
loopne
push
insb
xchg
push
test
xchg
insb
push
dec
or
loope
enter
jp
cmpb
jge
adc
cmp
mov
ljmp
je
or
mov
push
in
dec
sub
mov
sub
or
xor
lock
cli
inc
loope
pop
into
mov
add
push
sbb
dec
iret
mov
or
mov
stc
outsb
outsl
iret
xor
test
push
adc
add
mov
pop
pop
inc
inc
xor
stc
psadbw
lret
mov
divb
pusha
nop
lret
sub
jns
cmp
into
and
repz
clc
and
pop
mov
es
push
gs
sub
out
sahf
aaa
scas
pop
lds
dec
dec
add
lcall
jmp
dec
int3
pop
popa
push
outsb
push
mov
test
cmpsl
mov
test
scas
xor
pop
cmp
loope
xchg
test
cmc
lods
adc
add
xor
mov
mov
fbstp
mov
push
cmpsl
xor
and
pop
scas
enter
xchg
add
and
sub
insl
clc
add
ds
hlt
lcall
inc
pop
jp
imull
out
jl
adc
fstpt
jno
daa
push
out
leave
mov
sub
inc
into
cltd
mov
mov
shll
xlat
mov
stos
dec
in
dec
xchg
insl
push
aaa
add
lret
stc
xchg
int3
iret
mov
cwtl
dec
xchg
mov
xor
ret
mov
lret
hlt
or
aaa
out
mov
ss
lret
cmp
std
les
lret
ja
jmp
cltd
push
fldenv
out
adc
add
lds
lea
insl
sbb
std
jp
jmp
or
cmpsb
lock
stos
pop
lods
xchg
jo
notl
adc
stos
lea
jae
insb
shll
pop
incl
adc
in
out
mov
loopne
pop
and
push
icebp
xor
xor
aad
imulb
shrb
mov
ljmp
test
add
cmp
in
sbb
loop
push
mov
jmp
cmpsl
in
mov
call
nop
jno
mov
mov
dec
mov
dec
mov
mov
cmp
shll
aaa
orb
fbld
pop
les
inc
mov
mov
mov
sti
into
xor
std
icebp
jbe
xchg
cmp
je
cmp
fnstenv
adc
out
fidivs
test
cs
scas
mov
sub
mov
ljmp
daa
mov
cmp
daa
mov
push
cmpsl
xor
mov
movsl
cld
mov
ja
pop
mov
pop
mov
cli
out
cli
lock
mov
das
add
aam
das
pop
pusha
fcoms
sahf
bound
cmp
xchg
cli
and
fldl
dec
mov
cmp
mov
stos
xchg
dec
cmp
push
jo
jmp
cmp
pop
lods
lods
das
je
aad
rcrl
sub
daa
mov
xor
cmpsl
std
jl
add
mov
cmpb
mov
outsl
js
adc
test
pop
in
inc
ret
and
mov
sub
cmpsl
pop
icebp
int3
daa
lea
xor
cmp
inc
add
mov
mov
mov
jp
sub
xlat
cmpsl
xor
sahf
pop
mov
add
icebp
test
inc
push
js
adc
jo
jno
pop
or
iret
mov
push
mov
xlat
dec
scas
push
mov
lods
repz
inc
std
and
add
or
dec
sub
sbb
rorb
mov
pop
bound
cli
repz
xchg
add
cwtl
into
clc
jg
insb
sarb
sub
xor
dec
push
inc
mov
push
push
inc
repnz
pop
arpl
adc
psrld
xor
jns
mov
pop
insb
xchg
mov
out
shlb
jno
and
fdivl
lods
add
adc
iret
mov
jbe
mov
fst
in
lahf
daa
cmpsb
mov
pop
dec
fs
sub
mov
pusha
pop
and
sub
push
std
pop
xchg
sub
scas
lods
add
jno
gs
out
jne
arpl
xor
add
xchg
add
mov
mov
cmpsl
add
add
fs
mov
sti
lock
cmpsl
pop
fmulp
jns
test
testl
sub
inc
cld
insl
pop
movsl
bound
scas
xor
pop
mov
mov
push
mov
cli
int3
lods
mov
out
aam
lret
cli
jno
push
je
mov
xchg
fiadds
inc
or
mov
sub
sarl
pop
notb
pop
inc
sbb
lea
in
mov
sbb
xchg
mov
sub
inc
add
in
lahf
sbb
incl
cmp
enter
std
mov
lods
xchg
aad
les
inc
sti
pop
mov
mov
dec
push
or
mov
idivl
ret
lret
and
fnstcw
mov
out
out
rol
dec
es
sbb
dec
cmp
and
xor
xchg
mov
mov
push
fwait
inc
dec
popa
adc
out
sahf
push
inc
popa
addr16
ficomps
mov
pop
mov
jnp
negb
mov
mov
dec
cltd
jno
adc
mov
ljmp
int3
dec
call
movsb
sahf
pop
ljmp
jbe
push
mov
daa
fildll
xor
imul
stc
add
fcomp
cwtl
mov
push
std
and
into
cmpsl
lods
outsb
fnstcw
dec
int
cltd
xchg
xchg
addr16
pop
loope
xlat
sarb
jns
jge
popfw
outsb
ret
dec
add
dec
add
lahf
dec
add
mov
mov
lret
stos
add
stos
lret
stos
sub
push
lea
sbb
sub
mov
rorl
jl
mov
aaa
and
